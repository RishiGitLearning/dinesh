/*
 * frmSalesParty.java
 *
 * Created on June 14, 2004, 3:00 PM
 */
package SDMLATTPAY;

/**
 *
 * @author
 */
/*<APPLET CODE=frmInvoiceReport.class HEIGHT=574 WIDTH=758></APPLET>*/

import javax.swing.*;
import java.util.*;
import EITLERP.*;
import TReportWriter.SimpleDataProvider.TRow;
import TReportWriter.SimpleDataProvider.TTable;
import TReportWriter.TReportEngine;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.lang.*;
import java.sql.*;
import java.lang.String;
import java.text.DateFormat;

//import EITLERP.Purchase.frmSendMail;
public class FrmCallProcesses extends javax.swing.JApplet {

    private int EditMode = 0;
    

    //private clsPackingentry ObjPackingEntry;
    private TReportEngine objEngine = new TReportEngine();
    private EITLComboModel cmbLotModel = new EITLComboModel();

    private int SelHierarchyID = 0; //Selected Hierarchy
    private int lnFromID = 0;
    private String SelPrefix = ""; //Selected Prefix
    private String SelSuffix = ""; //Selected Prefix
    private int FFNo = 0;
    CallableStatement stmt=null;

    private EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
    private EITLTableCellRenderer Paint = new EITLTableCellRenderer();

    private HashMap colVariables = new HashMap();
    private HashMap colVariables_H = new HashMap();
    //clsColumn ObjColumn=new clsColumn();

    private boolean Updating = false;
    private boolean Updating_H = false;
    private boolean DoNotEvaluate = false;

    private boolean HistoryView = false;
    private String theDocNo = "";
    public frmPendingApprovals frmPA;
    private int charge09index = 0;
    private EITLTableCellRenderer Rend = new EITLTableCellRenderer();
    String cellLastValue = "";

    /**
     * Creates new form frmSalesParty
     */
    public FrmCallProcesses() {
        System.gc();
        //setSize(900, 800);
        GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
        int scrwidth = gd.getDisplayMode().getWidth();        
        int scrheight = gd.getDisplayMode().getHeight();
        System.out.println("scrwidth "+scrwidth+"  scrheight  "+scrheight );
        setSize(scrwidth, scrheight);
        
        initComponents();
        txtDate.setVisible(false); 
        lblDate.setVisible(false); 
        txtDate.setText(EITLERPGLOBAL.formatDate(data.getStringValueFromDB("SELECT (curdate())  FROM dual")));
        txtMonth.setText(data.getStringValueFromDB("SELECT MONTH(curdate())  FROM dual")); 
        txtyear.setText(data.getStringValueFromDB("SELECT YEAR(curdate())  FROM dual")); 
        
        opgdailyprocessdata.setEnabled(false);
        opgdailydownloaddata.setEnabled(false);
        opgmonthlyattendance.setEnabled(false);
        opgmonthlygenerateshiftschedule.setEnabled(false);
        opgmonthlyleavebalance.setEnabled(false);
        opgmonthlyleavecredit.setEnabled(false);
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpdailyprocess = new javax.swing.ButtonGroup();
        grpmonthlyprocess = new javax.swing.ButtonGroup();
        grpprocess = new javax.swing.ButtonGroup();
        lblStatus = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        btn = new javax.swing.JPanel();
        opgdailyprocessdata = new javax.swing.JRadioButton();
        opgdailydownloaddata = new javax.swing.JRadioButton();
        txtyear = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmdcst = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        opgmonthlygenerateshiftschedule = new javax.swing.JRadioButton();
        opgmonthlyattendance = new javax.swing.JRadioButton();
        opgmonthlyleavecredit = new javax.swing.JRadioButton();
        opgmonthlyleavebalance = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        opgMonthlyProcess = new javax.swing.JRadioButton();
        opgDailyProcess = new javax.swing.JRadioButton();
        txtMonth = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblStatus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(0, 0, 255));
        lblStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(20, 640, 610, 20);

        lblDate.setText("Date");
        getContentPane().add(lblDate);
        lblDate.setBounds(430, 60, 40, 20);

        txtDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        txtDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateFocusLost(evt);
            }
        });
        getContentPane().add(txtDate);
        txtDate.setBounds(410, 90, 80, 30);

        btn.setLayout(null);

        grpdailyprocess.add(opgdailyprocessdata);
        opgdailyprocessdata.setText("Daily Attendance Data Process");
        btn.add(opgdailyprocessdata);
        opgdailyprocessdata.setBounds(0, 30, 340, 23);

        grpdailyprocess.add(opgdailydownloaddata);
        opgdailydownloaddata.setText("DailyDownload Raw Data into Table");
        opgdailydownloaddata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opgdailydownloaddataActionPerformed(evt);
            }
        });
        btn.add(opgdailydownloaddata);
        opgdailydownloaddata.setBounds(0, 0, 340, 23);

        getContentPane().add(btn);
        btn.setBounds(20, 60, 380, 90);

        txtyear.setText("YYYY");
        getContentPane().add(txtyear);
        txtyear.setBounds(560, 90, 50, 30);

        jLabel6.setText("Month");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(500, 60, 60, 20);

        jLabel8.setText("Year");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(570, 60, 50, 20);

        cmdcst.setText("Call SP");
        cmdcst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdcstActionPerformed(evt);
            }
        });
        getContentPane().add(cmdcst);
        cmdcst.setBounds(480, 150, 110, 28);

        jPanel1.setLayout(null);

        grpmonthlyprocess.add(opgmonthlygenerateshiftschedule);
        opgmonthlygenerateshiftschedule.setText("Generate Shift Schedule");
        jPanel1.add(opgmonthlygenerateshiftschedule);
        opgmonthlygenerateshiftschedule.setBounds(0, 10, 350, 23);

        grpmonthlyprocess.add(opgmonthlyattendance);
        opgmonthlyattendance.setText("Attendance");
        jPanel1.add(opgmonthlyattendance);
        opgmonthlyattendance.setBounds(0, 30, 350, 23);

        grpmonthlyprocess.add(opgmonthlyleavecredit);
        opgmonthlyleavecredit.setText("Leave Credit");
        jPanel1.add(opgmonthlyleavecredit);
        opgmonthlyleavecredit.setBounds(0, 70, 340, 23);

        grpmonthlyprocess.add(opgmonthlyleavebalance);
        opgmonthlyleavebalance.setText("Leave Balance");
        jPanel1.add(opgmonthlyleavebalance);
        opgmonthlyleavebalance.setBounds(0, 50, 340, 23);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 200, 380, 120);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(380, 210, 140, 20);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(310, 10, 110, 20);

        grpprocess.add(opgMonthlyProcess);
        opgMonthlyProcess.setText("MONTHLY PROCESS");
        opgMonthlyProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opgMonthlyProcessActionPerformed(evt);
            }
        });
        getContentPane().add(opgMonthlyProcess);
        opgMonthlyProcess.setBounds(60, 170, 170, 23);

        grpprocess.add(opgDailyProcess);
        opgDailyProcess.setText("DAILY PROCESS");
        opgDailyProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opgDailyProcessActionPerformed(evt);
            }
        });
        getContentPane().add(opgDailyProcess);
        opgDailyProcess.setBounds(60, 30, 160, 23);
        getContentPane().add(txtMonth);
        txtMonth.setBounds(500, 90, 40, 28);
    }// </editor-fold>//GEN-END:initComponents

    private void txtDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtDateFocusLost

    private void opgDailyProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opgDailyProcessActionPerformed
        if (opgDailyProcess.isSelected()) {
            opgdailyprocessdata.setEnabled(true); 
            opgdailydownloaddata.setEnabled(true); 
            opgmonthlyattendance.setEnabled(false);
            opgmonthlygenerateshiftschedule.setEnabled(false); 
            opgmonthlyleavebalance.setEnabled(false); 
            opgmonthlyleavecredit.setEnabled(false); 
            
            //txtDate.setEnabled(true); 
            //txtMonth.setEnabled(false); 
            //txtyear.setEnabled(false); 
        }
    }//GEN-LAST:event_opgDailyProcessActionPerformed

    private void opgMonthlyProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opgMonthlyProcessActionPerformed
        if (opgMonthlyProcess.isSelected()) {
            opgdailyprocessdata.setEnabled(false); 
            opgdailydownloaddata.setEnabled(false); 
            opgmonthlyattendance.setEnabled(true);
            opgmonthlygenerateshiftschedule.setEnabled(true); 
            opgmonthlyleavebalance.setEnabled(true); 
            opgmonthlyleavecredit.setEnabled(true); 
            
//            txtDate.setEnabled(false); 
//            txtMonth.setEnabled(true); 
//            txtyear.setEnabled(true); 
        }
    }//GEN-LAST:event_opgMonthlyProcessActionPerformed

    private void cmdcstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdcstActionPerformed
      
        String date=txtDate.getText();
        String month=txtMonth.getText();
        String year=txtyear.getText();
        System.out.println("Date:"+date+"  month"+month+"  year"+year);
        String sp="";
        
        Boolean monthlyattendance=opgmonthlyattendance.isSelected();
        Boolean monthlygenerateshiftschedule=opgmonthlygenerateshiftschedule.isSelected();
        Boolean monthlyleavebalance=opgmonthlyleavebalance.isSelected();
        Boolean monthlyleavecredit=opgmonthlyleavecredit.isSelected();
        
        Boolean dailydownloaddata=opgdailydownloaddata.isSelected();
        Boolean dailyprocessdata=opgdailyprocessdata.isSelected();
        
        
        if(monthlyattendance){
            sp="{CALL SDMLATTPAY.ATT_MONTHLY_ATTENDANCE("+month+","+ year+")}";
        }else if(monthlygenerateshiftschedule){
            sp="{CALL SDMLATTPAY.GENERATE_SHIFT_SCHEDULE("+month+","+ year+")}";
        }else if(monthlyleavebalance){
            sp="{CALL SDMLATTPAY.ATT_LEAVE_BALANCE("+ year+")}";
        }else if(monthlyleavecredit){
            sp="{CALL SDMLATTPAY.ATT_LEAVE_CREDIT("+month+","+ year+")}";
        }
        else if(dailydownloaddata){
            sp="{CALL SDMLATTPAY.DAILY_DATA_DOWNLOAD("+month+","+ year+")}";
        }else if(dailyprocessdata){
            sp="{CALL SDMLATTPAY.DAILY_RAW_DATA_TO_DAILY_ATT_TEMP("+month+","+ year+")}";
        }
        try{
            System.out.println("SP start");
            data.Execute(sp);
            System.out.println("SP end");
            
        }catch(Exception e){
            e.printStackTrace();
        }

        //if(monthlyattendance){
        //    Statement  statement;
        //}
    }//GEN-LAST:event_cmdcstActionPerformed

    private void opgdailydownloaddataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opgdailydownloaddataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opgdailydownloaddataActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btn;
    private javax.swing.JButton cmdcst;
    private javax.swing.ButtonGroup grpdailyprocess;
    private javax.swing.ButtonGroup grpmonthlyprocess;
    private javax.swing.ButtonGroup grpprocess;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JRadioButton opgDailyProcess;
    private javax.swing.JRadioButton opgMonthlyProcess;
    private javax.swing.JRadioButton opgdailydownloaddata;
    private javax.swing.JRadioButton opgdailyprocessdata;
    private javax.swing.JRadioButton opgmonthlyattendance;
    private javax.swing.JRadioButton opgmonthlygenerateshiftschedule;
    private javax.swing.JRadioButton opgmonthlyleavebalance;
    private javax.swing.JRadioButton opgmonthlyleavecredit;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtyear;
    // End of variables declaration//GEN-END:variables

    

       

}
