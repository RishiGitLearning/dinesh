 /*
  * frmTemplate.java
  *
  * Created on April 7, 2004, 3:10 PM
  */

package sdml.felt.commonUI;

/**
 *
 * @author  nitin
 */

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.util.HashMap;
import sdml.felt.commonUI.*;

public class frmModuleMaster extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsModule ObjModules;
    
    private SDMLTableModel DataModel=new SDMLTableModel();
    
    private SDMLComboModel cmbModelModel;
    private SDMLComboModel cmbMenuTypeModel;
    
    /** Creates new form frmTemplate */
    public frmModuleMaster() {
        System.gc();
        setSize(520,360);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(SDMLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(SDMLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(SDMLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(SDMLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(SDMLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(SDMLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(SDMLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(SDMLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(SDMLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(SDMLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(SDMLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(SDMLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(SDMLERPGLOBAL.getImage("EXIT"));
        
        
        ObjModules=new clsModule();
        
        SetMenuForRights();
        
        if(ObjModules.LoadData(SDMLERPGLOBAL.gCompanyID))  {
            ObjModules.MoveLast();
            DisplayData();
        }
        else {
            JOptionPane.showMessageDialog(this,"Error occured while loading data. Error is "+ObjModules.LastError);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        Tab = new javax.swing.JTabbedPane();
        Tab1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtModuleID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        txtDocDateField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtHeader = new javax.swing.JTextField();
        txtModuleName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtDetail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText(" MODULE MASTER");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 600, 25);

        Tab1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tab1.setLayout(null);

        jLabel1.setText("Module ID");
        Tab1.add(jLabel1);
        jLabel1.setBounds(10, 10, 80, 20);

        txtModuleID.setEnabled(false);
        Tab1.add(txtModuleID);
        txtModuleID.setBounds(130, 10, 124, 30);

        jLabel3.setText("Doc No Field");
        Tab1.add(jLabel3);
        jLabel3.setBounds(10, 170, 80, 20);

        txtDocNo.setNextFocusableComponent(txtDocDateField);
        txtDocNo.setEnabled(false);
        Tab1.add(txtDocNo);
        txtDocNo.setBounds(130, 170, 220, 30);

        txtDocDateField.setEnabled(false);
        Tab1.add(txtDocDateField);
        txtDocDateField.setBounds(130, 210, 220, 30);

        jLabel4.setText("Doc Date Field");
        Tab1.add(jLabel4);
        jLabel4.setBounds(10, 210, 100, 20);

        jLabel11.setText("Header Table Name");
        Tab1.add(jLabel11);
        jLabel11.setBounds(10, 100, 120, 20);

        txtHeader.setEnabled(false);
        txtHeader.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHeaderFocusGained(evt);
            }
        });
        txtHeader.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHeaderKeyPressed(evt);
            }
        });
        Tab1.add(txtHeader);
        txtHeader.setBounds(130, 90, 330, 30);

        txtModuleName.setEnabled(false);
        Tab1.add(txtModuleName);
        txtModuleName.setBounds(130, 50, 330, 30);

        jLabel12.setText("Detail Table Name");
        Tab1.add(jLabel12);
        jLabel12.setBounds(10, 130, 118, 20);

        txtDetail.setEnabled(false);
        txtDetail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDetailFocusGained(evt);
            }
        });
        txtDetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDetailKeyPressed(evt);
            }
        });
        Tab1.add(txtDetail);
        txtDetail.setBounds(130, 130, 330, 30);

        jLabel2.setText("Module Name");
        Tab1.add(jLabel2);
        jLabel2.setBounds(10, 60, 130, 20);

        Tab.addTab("Module Master", Tab1);

        getContentPane().add(Tab);
        Tab.setBounds(0, 66, 480, 300);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(10, 370, 480, 22);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);

        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });
        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });
        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });
        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });
        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });
        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });
        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });
        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });
        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });
        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });
        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });
        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 600, 40);
    }// </editor-fold>//GEN-END:initComponents
    
    private void txtDetailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDetailFocusGained
        ShowMessage("Press F1 for Detail Table Name");
    }//GEN-LAST:event_txtDetailFocusGained
    
    private void txtHeaderFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHeaderFocusGained
        ShowMessage("Press F1 for Header Table Name");
    }//GEN-LAST:event_txtHeaderFocusGained
    
    private void txtDetailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDetailKeyPressed
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            
            aList.SQL= "Select TABLE_NAME FROM information_schema.TABLES " +
            "WHERE TABLE_SCHEMA NOT LIKE 'information_schema' AND "+
            "TABLE_NAME NOT LIKE '%_H' AND TABLE_SCHEMA NOT LIKE 'DINESHMILLSA' ";
            
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                txtDetail.setText(aList.ReturnVal);
            }
        }
    }//GEN-LAST:event_txtDetailKeyPressed
    
    private void txtHeaderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeaderKeyPressed
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL= "Select TABLE_NAME FROM information_schema.TABLES " +
            "WHERE TABLE_SCHEMA NOT LIKE 'information_schema' AND "+
            "TABLE_NAME NOT LIKE '%_H' AND TABLE_SCHEMA NOT LIKE 'DINESHMILLSA' ";
            
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                txtHeader.setText(aList.ReturnVal);
            }
        }
    }//GEN-LAST:event_txtHeaderKeyPressed

    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed

    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed

    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed

        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed

    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed

    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed

    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed

    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // if(JOptionPane.showConfirmDialog(this,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
            //   Delete();
            // }
    }//GEN-LAST:event_cmdDeleteActionPerformed

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
       // ObjMenuMaster.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
                                                
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JPanel Tab1;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdTop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDetail;
    private javax.swing.JTextField txtDocDateField;
    private javax.swing.JTextField txtDocNo;
    private javax.swing.JTextField txtHeader;
    private javax.swing.JTextField txtModuleID;
    private javax.swing.JTextField txtModuleName;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
        
    private void SetFields(boolean pStat) {        
        txtModuleName.setEnabled(pStat);
        txtDetail.setEnabled(pStat);
        txtHeader.setEnabled(pStat);
        txtDocDateField.setEnabled(pStat);
        txtDocNo.setEnabled(pStat);
    }
    
    private void ClearFields() {
        txtModuleName.setText("");
        txtDetail.setText("");
        txtHeader.setText("");
        txtDocNo.setText("");
        txtDocDateField.setText("");
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        txtModuleID.setText(Integer.toString((int)ObjModules.getAttribute("MODULE_ID").getVal()));
        txtModuleName.setText((String)ObjModules.getAttribute("MODULE_DESC").getObj());
        txtHeader.setText((String)ObjModules.getAttribute("HEADER_TABLE_NAME").getObj());
        txtDetail.setText((String)ObjModules.getAttribute("DETAIL_TABLE_NAME").getObj());
        txtDocNo.setText((String)ObjModules.getAttribute("DOC_NO_FIELD").getObj());
        txtDocDateField.setText((String)ObjModules.getAttribute("DOC_DATE_FIELD").getObj());
    }
    
    //Sets data to the Class Object
    private void SetData() {
        ObjModules.setAttribute("MODULE_ID",txtModuleID.getText().trim());
        ObjModules.setAttribute("MODULE_DESC",txtModuleName.getText().trim());
        ObjModules.setAttribute("HEADER_TABLE_NAME",txtHeader.getText().trim());
        ObjModules.setAttribute("DETAIL_TABLE_NAME",txtDetail.getText().trim());
        ObjModules.setAttribute("DOC_NO_FIELD",txtDocNo.getText());
        ObjModules.setAttribute("DOC_DATE_FIELD",txtDocDateField.getText());
        ObjModules.setAttribute("MAINTAIN_STOCK",false);
        ObjModules.setAttribute("USE_APPROVAL",true);
        ObjModules.setAttribute("PACKAGE","FELT_SALES");
        ObjModules.setAttribute("CHANGED",true);
        ObjModules.setAttribute("CHANGED_DATE",SDMLERPGLOBAL.getCurrentDateDB());
    }
    
    
    private void SetMenuForRights() {
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(SDMLERPGLOBAL.gCompanyID, SDMLERPGLOBAL.gUserID, 0,12091)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(SDMLERPGLOBAL.gCompanyID, SDMLERPGLOBAL.gUserID, 0,12092)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }
        
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(SDMLERPGLOBAL.gCompanyID, SDMLERPGLOBAL.gUserID, 0,12093)) {
            cmdDelete.setEnabled(true);
        }
        else {
            cmdDelete.setEnabled(false);
        }
    }
    
    private void Add() {
        txtModuleID.setEnabled(true);
        SDMLERPGLOBAL.ChangeCursorToWait(this);
        EditMode=SDMLERPGLOBAL.ADD;
        SetFields(true);
        DisableToolbar();
        ClearFields();
        String moduleId = data.getStringValueFromDB("SELECT COALESCE(MAX(MODULE_ID),0)+1 AS MODULE_ID FROM D_COM_MODULES ORDER BY MODULE_ID DESC");
        txtModuleID.setText(moduleId);
        lblTitle.setText("Module ID  - "+moduleId);
        SDMLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Edit() {
        SDMLERPGLOBAL.ChangeCursorToWait(this);
        EditMode=SDMLERPGLOBAL.EDIT;
        DisplayData();
        SetFields(true);
        DisableToolbar();
        SDMLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Delete() {
        if(ObjModules.Delete()) {
            MoveLast();
        }
    }
    
    private void Save() {
        //Form level validations
        
        if(Validate()==false) {
            return; //Validation failed
        }
        SetData();
        SDMLERPGLOBAL.ChangeCursorToWait(this);
        if(EditMode==SDMLERPGLOBAL.ADD) {
            if(ObjModules.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(this,"Error occured while saving. Error is "+ObjModules.LastError);
                return;
            }
        }
        
        if(EditMode==SDMLERPGLOBAL.EDIT) {
            if(ObjModules.Update()) {
                //Nothing to do
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(this,"Error occured while saving. Error is "+ObjModules.LastError);
                SDMLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        txtModuleID.setEnabled(false);
        EnableToolbar();
        SetMenuForRights();
        SDMLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Cancel() {
        SDMLERPGLOBAL.ChangeCursorToWait(this);
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        SDMLERPGLOBAL.ChangeCursorToDefault(this);
        txtModuleID.setEnabled(false);
    }
    
    private void Find() {
        Loader ObjLoader=new Loader(this,"SDMLERP.frmModuleMasterFind",true);
        frmModuleMasterFind ObjModuleMasterFind= (frmModuleMasterFind) ObjLoader.getObj();
        
        if(ObjModuleMasterFind.Cancelled==false) {
            if(!ObjModules.Filter(ObjModuleMasterFind.stringFindQuery)) {
                JOptionPane.showMessageDialog(this,"No records found.");
            }
            MoveFirst();
        }
    }
    
    private void MoveFirst() {
        SDMLERPGLOBAL.ChangeCursorToWait(this);
        ObjModules.MoveFirst();
        DisplayData();
        SDMLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MovePrevious() {
        SDMLERPGLOBAL.ChangeCursorToWait(this);
        ObjModules.MovePrevious();
        DisplayData();
        SDMLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveNext() {
        SDMLERPGLOBAL.ChangeCursorToWait(this);
        ObjModules.MoveNext();
        DisplayData();
        SDMLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveLast() {
        SDMLERPGLOBAL.ChangeCursorToWait(this);
        ObjModules.MoveLast();
        DisplayData();
        SDMLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    
    
    private boolean Validate() {
        /*
         if(txtModuleID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please Enter Module ID...");
            return false;
        }
        
         if(txtModuleName.getText().toString().equals("")) {
            JOptionPane.showMessageDialog(this,"Please Enter Module Name...");
            return false;
        }
         
        if(txtHeader.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please enter Header Table Name");
            return false;
        }
         
        if(txtDocDateField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please enter Doc Field Date");
            return false;
        }
        if(txtDocNo.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please enter Doc Field No.");
            return false;
        }*/
        return true ;
    }
    
}
