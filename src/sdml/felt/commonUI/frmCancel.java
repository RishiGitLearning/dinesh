package sdml.felt.commonUI;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 
 */
public class frmCancel extends javax.swing.JApplet {

    private SDMLTableModel DataModelBill;

    /**
     * Initializes the applet frmCancel
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        
        //</editor-fold>

        /* Create and display the applet */
        /*try {
         java.awt.EventQueue.invokeAndWait(new Runnable() {
         public void run() {
         initComponents();
         }
         });
         } catch (Exception ex) {
         ex.printStackTrace();
         }*/
        

        initComponents();
        FormatGrid();
        TableBill.setShowGrid(true);
        lblreason.setVisible(false);
        txtcan.setVisible(false);
        btncancel.setVisible(false);
        txtcan.setEnabled(false);

    }

    public frmCancel() {
        setSize(1024, 770);

    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblreason = new javax.swing.JLabel();
        txtbill = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableBill = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btncancel = new javax.swing.JButton();
        txtcan = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblreason.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblreason.setText("Reason For Cancel :");
        getContentPane().add(lblreason);
        lblreason.setBounds(20, 380, 160, 40);

        txtbill.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        txtbill.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtbillFocusLost(evt);
            }
        });
        getContentPane().add(txtbill);
        txtbill.setBounds(100, 40, 140, 30);

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        TableBill.setBorder(new javax.swing.border.MatteBorder(null));
        TableBill.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        TableBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableBill.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TableBill.setCellSelectionEnabled(true);
        TableBill.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TableBill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableBillKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableBillKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TableBill);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 80, 910, 270);

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setText("Bill No.");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(26, 36, 70, 30);

        btncancel.setText("Cancel Bill");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });
        getContentPane().add(btncancel);
        btncancel.setBounds(510, 380, 110, 40);

        txtcan.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        getContentPane().add(txtcan);
        txtcan.setBounds(180, 380, 320, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void TableBillKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableBillKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TableBillKeyPressed

    private void TableBillKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableBillKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TableBillKeyReleased

    private void txtbillFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtbillFocusLost
        // TODO add your handling code here:
        int i = 0;
        Connection Conn = null;
        Statement stmt = null;
        try {
            int cnt = TableBill.getRowCount();
            for (int k = 0; k < cnt; k++) {
                DataModelBill.removeRow(0);
            }
            String strSQL = "", mbillno = "";
            mbillno = txtbill.getText();
            strSQL = "SELECT * FROM BILL_DETAIL WHERE BILL_NO='" + mbillno + "' AND BILL_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "'";;

            Conn = data.getConn();
            stmt = Conn.createStatement();
            ResultSet rsData = stmt.executeQuery(strSQL);
            rsData.first();

            String mdata;
            while (!rsData.isAfterLast()) {

                Object[] rowData = new Object[30];
                rowData[0] = String.valueOf(i + 1);
                rowData[1] = rsData.getString("ITEM_TYPE");
                rowData[2] = rsData.getString("QUALITY_CD");
                rowData[3] = rsData.getString("SHADE_CD");
                rowData[4] = rsData.getString("PIECE_NO");
                rowData[5] = rsData.getString("EXT");
                rowData[6] = rsData.getString("INVOICE_NO");
                rowData[7] = rsData.getString("SIZE");
                rowData[8] = rsData.getString("RETAIL_RATE");
                rowData[9] = rsData.getString("ITEM_DISC_PER");
                rowData[10] = rsData.getString("UOM");
                rowData[11] = rsData.getString("SALE_QTY");
                rowData[12] = rsData.getString("ITEM_AMOUNT");

                DataModelBill.addRow(rowData);
                mdata = (String) TableBill.getModel().getValueAt(i, 1);
                TableBill.setValueAt(mdata, TableBill.getSelectedRow(), 1);
                i = i + 1;
                rsData.next();
            }
            txtcan.requestFocus();
        } catch (Exception e) {
        } finally {
            try {
                stmt.close();
                Conn.close();
            } catch (Exception s) {
                s.printStackTrace();
            }
        }
        if (i > 0) {
            lblreason.setVisible(true);
            txtcan.setVisible(true);
            btncancel.setVisible(true);
            txtcan.setEnabled(true);
        } else {
            if (txtbill.getText().length() > 0) {
                JOptionPane.showMessageDialog(null, "Not such Bill Found...");
            }
            lblreason.setVisible(false);
            txtcan.setVisible(false);
            txtcan.setEnabled(false);
            btncancel.setVisible(false);
            txtbill.requestFocus();
        }

    }//GEN-LAST:event_txtbillFocusLost

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        // TODO add your handling code here:
        String strSQL;
        Statement stTmp = null, stTmp1 = null;
        ResultSet rsTmp;
        Connection Conn = null;
        Conn = data.getConn();
        int msv = JOptionPane.showConfirmDialog(null, "Are you Confirm to Cancel?");
        if (msv == 0) {
            try {
                stTmp = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                stTmp1 = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

                String mcurtime = "";
                rsTmp = stTmp.executeQuery("SELECT CURTIME() AS TIME FROM DUAL");
                rsTmp.first();
                mcurtime = rsTmp.getString("TIME");
                rsTmp.close();

//                strSQL = "UPDATE RETAIL_SHOP.BILL_HEADER SET BILL_STATUS='C',REASON_FOR_CANCEL='" + txtcan.getText().trim() + "' WHERE BILL_NO='" + txtbill.getText().trim() + "' AND BILL_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "'";
                strSQL = "UPDATE RETAIL_SHOP.BILL_HEADER SET BILL_STATUS='C',REASON_FOR_CANCEL='" + txtcan.getText().trim() + "',CHANGED='1',CHANGED_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "' WHERE BILL_NO='" + txtbill.getText().trim() + "' AND BILL_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "'";
                stTmp.execute(strSQL);

                strSQL = "INSERT INTO RETAIL_SHOP.BILL_CANCEL SELECT *,'" + SDMLERPGLOBAL.gUserID + "','" + SDMLERPGLOBAL.getCurrentDateDB() + " " + mcurtime + "' FROM RETAIL_SHOP.BILL_DETAIL WHERE BILL_NO='" + txtbill.getText().trim() + "' AND BILL_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "'";
                stTmp.execute(strSQL);
                
                strSQL = "UPDATE RETAIL_SHOP.BILL_CANCEL SET CHANGED='1',CHANGED_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "' WHERE BILL_NO='" + txtbill.getText().trim() + "' AND BILL_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "'";
                stTmp.execute(strSQL);

                strSQL = "SELECT * FROM RETAIL_SHOP.BILL_DETAIL WHERE BILL_NO='" + txtbill.getText().trim() + "' AND BILL_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "'";
                rsTmp = stTmp.executeQuery(strSQL);
                rsTmp.first();

                while (!rsTmp.isAfterLast()) {
//                    strSQL = "UPDATE RETAIL_SHOP.ITEM_STOCK_MASTER SET SALE_QTY=SALE_QTY-" + rsTmp.getDouble("SALE_QTY") + ",STOCK_QTY=STOCK_QTY+" + rsTmp.getDouble("SALE_QTY");
                    strSQL = "UPDATE RETAIL_SHOP.ITEM_STOCK_MASTER SET SALE_QTY=SALE_QTY-" + rsTmp.getDouble("SALE_QTY") + ",STOCK_QTY=STOCK_QTY+" + rsTmp.getDouble("SALE_QTY") + ",CHANGED='1',CHANGED_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "'";
                    strSQL = strSQL + " WHERE  QUALITY_CD='" + rsTmp.getString("QUALITY_CD") + "'";
                    strSQL = strSQL + " AND SHADE_CD='" + rsTmp.getString("SHADE_CD") + "'";
                    strSQL = strSQL + " AND PIECE_NO='" + rsTmp.getString("PIECE_NO") + "'";
                    strSQL = strSQL + " AND EXT='" + rsTmp.getString("EXT") + "'";
                    strSQL = strSQL + " AND INVOICE_NO='" + rsTmp.getString("INVOICE_NO") + "'";
                    strSQL = strSQL + " AND SIZE='" + rsTmp.getString("SIZE") + "'";
                    strSQL = strSQL + " AND " + rsTmp.getDouble("SALE_QTY") + ">0";
                    stTmp1.execute(strSQL);
                    rsTmp.next();
                }

                strSQL = "DELETE FROM RETAIL_SHOP.BILL_DETAIL WHERE BILL_NO='" + txtbill.getText().trim() + "' AND BILL_DATE='" + SDMLERPGLOBAL.getCurrentDateDB() + "'";
                stTmp.execute(strSQL);

                stTmp.close();
                rsTmp.close();
                JOptionPane.showMessageDialog(null, "Bill Cancel SucessFully...");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Bill Not Cancel...");
            } finally {
                try {
                    stTmp.close();
                    stTmp1.close();
                    Conn.close();
                } catch (Exception s) {
                    s.printStackTrace();
                }
            }

        }
    }//GEN-LAST:event_btncancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableBill;
    private javax.swing.JButton btncancel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblreason;
    private javax.swing.JTextField txtbill;
    private javax.swing.JTextField txtcan;
    // End of variables declaration//GEN-END:variables
private void FormatGrid() {
        try {
            DataModelBill = new SDMLTableModel();
            TableBill.removeAll();
            TableBill.setModel(DataModelBill);
            TableColumnModel ColModel = TableBill.getColumnModel();
            TableBill.setAutoResizeMode(TableBill.AUTO_RESIZE_OFF);
            SDMLTableCellRenderer Renderer = new SDMLTableCellRenderer();
            Renderer.setColor(0, 0, Color.LIGHT_GRAY);

            DataModelBill.addColumn("Sr.");  //0 - Read Only
            DataModelBill.addColumn("ITEM"); //1
            DataModelBill.addColumn("QUALITY");//2
            DataModelBill.addColumn("SHADE");//3
            DataModelBill.addColumn("PIECE");//4
            DataModelBill.addColumn("EXT"); //5
            DataModelBill.addColumn("INVOICE");  //6
            DataModelBill.addColumn("SIZE"); //7
            DataModelBill.addColumn("MRP"); //8
            DataModelBill.addColumn("DISC%"); //9
            DataModelBill.addColumn("UNIT"); //10
            DataModelBill.addColumn("SALE QTY"); //11
            DataModelBill.addColumn("PC TOTAL"); //12

            DataModelBill.TableReadOnly(true);
            DataModelBill.SetVariable(0, "SR_NO");  //0
            DataModelBill.SetVariable(1, "ITEM"); //1
            DataModelBill.SetVariable(2, "QUALITY"); //2
            DataModelBill.SetVariable(3, "SHADE"); //3
            DataModelBill.SetVariable(4, "PIECE NO"); //4
            DataModelBill.SetVariable(5, "EXT"); //5
            DataModelBill.SetVariable(6, "INVOICE"); //6
            DataModelBill.SetVariable(7, "SIZE"); //7   //DataModelBill.SetVariable(8,"BALNK");
            DataModelBill.SetVariable(8, "RATE"); //8
            DataModelBill.SetVariable(9, "DISC%"); //9
            DataModelBill.SetVariable(10, "UNIT"); //11
            DataModelBill.SetVariable(11, "SALE QTY"); //12
            DataModelBill.SetVariable(12, "SUB TOTAL"); //13

            TableBill.getColumnModel().getColumn(0).setMaxWidth(50);
            TableBill.getColumnModel().getColumn(0).setCellRenderer(Renderer);
            //TableBill.getColumnModel().getColumn(16).setPreferredWidth(100);
        } catch (Exception e) {
        }

        TableBill.getColumnModel().getColumn(0).setMinWidth(30);//sr.no
        TableBill.getColumnModel().getColumn(0).setMaxWidth(30);
        TableBill.getColumnModel().getColumn(1).setMinWidth(40);//item type
        TableBill.getColumnModel().getColumn(1).setMaxWidth(40);
        TableBill.getColumnModel().getColumn(2).setMinWidth(100);//quality code
        TableBill.getColumnModel().getColumn(2).setMaxWidth(100);
        TableBill.getColumnModel().getColumn(3).setMinWidth(40); //shade
        TableBill.getColumnModel().getColumn(3).setMaxWidth(40);
        TableBill.getColumnModel().getColumn(4).setMinWidth(100);// piece
        TableBill.getColumnModel().getColumn(4).setMaxWidth(100);
        TableBill.getColumnModel().getColumn(5).setMinWidth(50);// ext
        TableBill.getColumnModel().getColumn(5).setMaxWidth(50);
        TableBill.getColumnModel().getColumn(6).setMinWidth(60);//invoice no
        TableBill.getColumnModel().getColumn(6).setMaxWidth(60);
        TableBill.getColumnModel().getColumn(7).setMinWidth(40);//size
        TableBill.getColumnModel().getColumn(7).setMaxWidth(40);
        TableBill.getColumnModel().getColumn(8).setMinWidth(80);//rate
        TableBill.getColumnModel().getColumn(8).setMaxWidth(80);
        TableBill.getColumnModel().getColumn(9).setMinWidth(70);//disc %
        TableBill.getColumnModel().getColumn(9).setMaxWidth(70);
        TableBill.getColumnModel().getColumn(10).setMinWidth(80);//UOM
        TableBill.getColumnModel().getColumn(10).setMaxWidth(80);
        TableBill.getColumnModel().getColumn(12).setMinWidth(100);//UOM
        TableBill.getColumnModel().getColumn(12).setMaxWidth(100);

    }
}
