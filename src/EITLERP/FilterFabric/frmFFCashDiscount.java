/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */

package EITLERP.FilterFabric;

/**
 *
 * @author  root
 */


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;
import java.io.File;



import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;


public class frmFFCashDiscount extends javax.swing.JApplet {
    
    //private EITLTableModel DataModel=new EITLTableModel();
    
    EITLComboModel IntervalComboModel;
    EITLTableModel DataModel;
    private clsExcelExporter exp = new clsExcelExporter();
    private ResultSet rsResultSet,rsResultSet1;
  //  private Connection Conn;
    private Statement Stmt;
  //  private EITLComboModel cmbReceiptTypeModel;
  //  private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    

    
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(675,500);
        initComponents();
        getDept();
        txtFromDate.setText("01/01/1901");
        generateIntervalCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        bgVoucher = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblBookName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        cmbIntervalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Processcash = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        txtInterval = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        txtVoucherNo = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("CASH DISCOUNT CREDIT NOTE PROCESS & PRINTING FORM");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 666, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(5, 67, 85, 15);

        jLabel2.setText("Cash Discount Credit Note Process");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 350, 15);

        txtFromDate.setNextFocusableComponent(txtToDate);
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFromDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });

        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 66, 100, 19);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(263, 67, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 68, 60, 15);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDBLClicked(evt);
            }
        });

        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 210, 648, 170);

        lblBookName.setText(".");
        getContentPane().add(lblBookName);
        lblBookName.setBounds(204, 119, 280, 15);

        jButton1.setText("3 .Check List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(10, 170, 140, 25);

        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(390, 70, 148, 14);

        jButton3.setText("4. Final Draft Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(230, 170, 150, 25);

        jButton4.setText("5. Voucher Creation");
        jButton4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jButton4ItemStateChanged(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(210, 390, 200, 25);

        cmbIntervalCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIntervalComboItemStateChanged(evt);
            }
        });
        cmbIntervalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntervalComboActionPerformed(evt);
            }
        });

        getContentPane().add(cmbIntervalCombo);
        cmbIntervalCombo.setBounds(120, 120, 390, 24);

        jLabel4.setText("Select Period : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 130, 130, 15);

        Processcash.setText("1. Process Cash Discount ");
        Processcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesscashActionPerformed(evt);
            }
        });

        getContentPane().add(Processcash);
        Processcash.setBounds(20, 90, 210, 25);

        jButton5.setText("2. Header Creation");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton5);
        jButton5.setBounds(250, 90, 210, 25);

        getContentPane().add(txtInterval);
        txtInterval.setBounds(550, 120, 90, 19);

        jButton6.setText("Export to Excel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton6);
        jButton6.setBounds(450, 170, 200, 25);

        getContentPane().add(txtVoucherNo);
        txtVoucherNo.setBounds(240, 430, 140, 19);

    }//GEN-END:initComponents

    private void txtFromDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusGained
        // TODO add your handling code here:
        txtToDate.setText("");
    }//GEN-LAST:event_txtFromDateFocusGained

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        // TODO add your handling code here:
        

        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter From Date");
            txtFromDate.requestFocus();
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if(!txtFromDate.getText().substring(0,2).equals("01") && !txtFromDate.getText().substring(0,2).equals("16")) {
            JOptionPane.showMessageDialog(null,"Please Enter Valid From Date.(i.e O1/MM/YYYY or 16/MM/YYYY )");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else {
            txtToDate.setText("");
            
           /* 
            if(txtFromDate.getText().substring(0,2).equals("01")){
                String a = "15";
                String b = txtFromDate.getText().substring(2,10);
                String str = txtToDate.getText().concat(a).concat(b);
                txtToDate.setText(str);
                txtToDate.requestFocus();
            }
            
            
            if(txtFromDate.getText().substring(0,2).equals("16")){
                String dt = getLastDay();
                txtToDate.setText(EITLERPGLOBAL.formatDate(dt));
                txtToDate.requestFocus();
            }
            
        */ 
        }
    }//GEN-LAST:event_txtFromDateFocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // if(txtVoucherNo.getText().length()==1) {
            //Update this with last voucher no. of this series
            Connection Conn=data.getConn();
           // Conn=data.getConn();
            Stmt=Conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            
            
            if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL)) {
                //   rsResultSet=Stmt.executeQuery("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,4) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=14 ");
                rsResultSet=Stmt.executeQuery("SELECT VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,6) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM (SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=14 ) AS A");
                String LastDocNo="";
                String LastcnvNo="";
                int draftSrNo=0;
                
                rsResultSet.first();
                while(!rsResultSet.isAfterLast() && rsResultSet.getRow()>0) {
                    LastDocNo=rsResultSet.getString("VOUCHER_NO");
                    LastcnvNo=rsResultSet.getString("CNV");
                    draftSrNo=rsResultSet.getInt("CNSRNO");
                    
                    rsResultSet.next();
                }
                
                //String LastDocNo=data.getStringValueFromDB("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL);
                txtVoucherNo.setText(LastDocNo);
                //  txtVoucherNo.setText(Lastcnsrno);
                
                txtVoucherNo.requestFocus();
                
                
                
                
                
                
                //     String bookCode="TR-15";
                //     String mainCode="435187";
                
                //    String draftNo="CN161400";
                String draftNo="";
                //  String draftNo="SP.RET."+seasonId+" - ";
                //     String draftNo="SSQL."+seasonId+" - ";
                
                //   String draftNo="SPL."+seasonId+" - ";
                
                //   String draftNo="BONZ. "+seasonId+" - ";
                //    String draftNo="ABD "+seasonId+" - ";
                String draftDate="2016-01-31";
                //        String draftDate="2014-2015";
                String linkNo=" /"+Integer.toString(EITLERPGLOBAL.FinYearTo)+"-"+Integer.toString(EITLERPGLOBAL.FinYearFrom);
                //   int draftSrNo=521;
                
                String linkSrNo="";
                //int reasonCode=34;
                //     int reasonCode=36;
                
                int counter=1;
                
                ResultSet rsSchemeHeader =Stmt.executeQuery("SELECT CNH_NO,CNH_SUB_ACCOUNT_CODE FROM FILTERFABRIC.D_CREDIT_NOTE_HEADER WHERE  CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE ='CASH' ORDER BY CNH_SUB_ACCOUNT_CODE,CNH_NO");
                //  ResultSet rsSchemeHeader=stmt.executeQuery("SELECT SCH_PARTY_CODE FROM FILTERFABRIC.D_SAL_SCHEME_HEADER WHERE SCH_SCHEME_ID="+schemeId+" AND SCH_SEASON_ID='"+seasonId+"' ORDER BY SCH_PARTY_CODE");
                rsSchemeHeader.first();
                if(rsSchemeHeader.getRow()>0){
                    while(!rsSchemeHeader.isAfterLast()){
                        Stmt.executeUpdate("UPDATE FILTERFABRIC.D_CREDIT_NOTE_HEADER SET CNH_DRAFT_CR_NOTE_NO='"+draftNo+(draftSrNo+counter)+"',CNH_LINK_NO='"+linkNo+"' WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
                        Stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_HEADER  SET CNH_FIN_VOUCHER_NO = CONCAT('CN',161400000 +ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))),CNH_LEGACY_NO = ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))  WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
//                        rsSchemeHeader.next();
//                        counter++;
                        
                        int counter1=1;
                        ResultSet rsSchemedetail =Stmt.executeQuery("SELECT CONCAT(CND_NO,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_INVOICE_NO,CND_INVOICE_DATE) AS CND_PO FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE  CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND CND_TYPE ='CASH' AND  CND_NO='"+rsSchemeHeader.getString("CNH_NO")+"' ORDER BY CND_NO,CND_EFFECT");
                        rsSchemedetail.first();      
                             if(rsSchemedetail.getRow()>0){
                                       while(!rsSchemedetail.isAfterLast()){
                                           Stmt.executeUpdate("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_EXT3='"+counter1+"' WHERE CND_TYPE ='CASH' AND CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND  CONCAT(CND_NO,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_INVOICE_NO,CND_INVOICE_DATE)='"+rsSchemedetail.getString("CND_PO")+"'");
                        // stmt.execute("UPDATE FILTERFABRIC.D_SAL_SCHEME_HEADER  SET SCH_VOUCHER_NO = CONCAT('CN',151500000 +ABS(REPLACE(RIGHT( SCH_DRAFT_CR_NOTE_NO,4),' ',''))),SCH_LEGACY_NO = ABS(REPLACE(RIGHT( SCH_DRAFT_CR_NOTE_NO,4),' ',''))   WHERE SCH_SEASON_ID='"+seasonId+"'  AND SCH_BOOK_CODE ='TR-15'");
                    //    Stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_HEADER  SET CNH_FIN_VOUCHER_NO = CONCAT('CN',161400000 +ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))),CNH_LEGACY_NO = ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))  WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
                        
                        
                        
                        rsSchemedetail.next();
                        counter1++;
                    }
                }
                                           
                                           
                         rsSchemeHeader.next();
                        counter++;                  
                                           
                                           
                                           
                                           
                    }
                }
                
                
               
                      
                
                
                
                
                
            }
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_HEADER");
            
            String SQL = "INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_HEADER (COMPANY_ID,VOUCHER_NO,BOOK_CODE,BANK_NAME,HIERARCHY_ID,REMARKS,VOUCHER_DATE,VOUCHER_TYPE,EXCLUDE_IN_ADJ) SELECT 2,CNH_FIN_VOUCHER_NO,14,'DISCOUNT JOURNAL',1618,CNH_REMARKS,CNH_DRAFT_CR_NOTE_DATE,9,1 FROM FILTERFABRIC.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID = SUBSTRING('"+txtInterval.getText()+"',1,8)";
            System.out.println(SQL);
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_HEADER (COMPANY_ID,VOUCHER_NO,BOOK_CODE,BANK_NAME,HIERARCHY_ID,REMARKS,VOUCHER_DATE,VOUCHER_TYPE,EXCLUDE_IN_ADJ) SELECT 2,CNH_FIN_VOUCHER_NO,14,'DISCOUNT JOURNAL',1618,CNH_REMARKS,CNH_DRAFT_CR_NOTE_DATE,9,1 FROM FILTERFABRIC.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID = SUBSTRING('"+txtInterval.getText()+"',1,8)");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL (COMPANY_ID,VOUCHER_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,SR_NO) SELECT 2,CNH_FIN_VOUCHER_NO,CND_EFFECT,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CONCAT(CND_LINK_NO,'/',CND_LINK_YEAR),CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_EXT3  FROM FILTERFABRIC.D_CREDIT_NOTE_HEADER H,FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CND_EFFECT = 'C' UNION SELECT 2,CNH_FIN_VOUCHER_NO,CND_EFFECT,CNH_MAIN_ACCOUNT_CODE,'',CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,'','','0000-00-00',0,CND_EXT3  FROM FILTERFABRIC.D_CREDIT_NOTE_HEADER H,FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CND_EFFECT = 'D' ORDER BY CNH_FIN_VOUCHER_NO,CND_EFFECT,CND_EXT3");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX (COMPANY_ID,VOUCHER_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,SR_NO) SELECT 2,CNH_FIN_VOUCHER_NO,CND_EFFECT,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CONCAT(CND_LINK_NO,'/',CND_LINK_YEAR),CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_EXT3  FROM FILTERFABRIC.D_CREDIT_NOTE_HEADER H,FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CND_EFFECT = 'C' UNION SELECT 2,CNH_FIN_VOUCHER_NO,CND_EFFECT,CNH_MAIN_ACCOUNT_CODE,'',CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,'','','0000-00-00',0,CND_EXT3  FROM FILTERFABRIC.D_CREDIT_NOTE_HEADER H,FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='CASH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CND_EFFECT = 'D' ORDER BY CNH_FIN_VOUCHER_NO,CND_EFFECT,CND_EXT3");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_COM_DOC_DATA");
            
            Stmt.execute("INSERT INTO  TEMP_DATABASE.L_COM_DOC_DATA SELECT 2,89,VOUCHER_NO,NOW(),USER_ID,CASE WHEN CREATOR =1 THEN 'W' ELSE 'P'  END, CASE WHEN CREATOR =0 THEN 'A' ELSE 'C'  END,'',SR_NO,0,'','0000-00-00','0000-00-00',0,'0000-00-00'  FROM DINESHMILLS.D_COM_HIERARCHY_RIGHTS A,TEMP_DATABASE.L_FIN_VOUCHER_HEADER B WHERE B.HIERARCHY_ID =1618 AND A.HIERARCHY_ID = B.HIERARCHY_ID");            
        }
        catch(SQLException sqe){
            sqe.printStackTrace();
            
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      try {
           
            
             Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            
            stmt.execute("DELETE FROM FILTERFABRIC.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE='CASH' ");
            
         //   stmt.execute("INSERT INTO FILTERFABRIC.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_LINK_NO,CNH_DRAFT_CR_NOTE_DATE)SELECT CND_ID,CND_NO,CND_TYPE,437213,210027,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),SUM(CND_CREDIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14','    /2017-2016',CONCAT(SUBSTRING(CND_YEAR_MON_ID,1,4),'-',SUBSTRING(CND_YEAR_MON_ID,5,2),'-',SUBSTRING(RIGHT(CND_INTERVAL_CAPTION,10),1,2)) FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = SUBSTRING('" +txtInterval.getText()+"',1,8)  AND CND_TYPE = 'LC'  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION LIMIT 1000000000000");
  //          stmt.execute("INSERT INTO FILTERFABRIC.D_CREDIT_NOTE_HEADER SELECT CND_ID,CND_NO,CND_TYPE,437213,210027,CND_LC_OPENER,'',CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),'','','0000-00-00','','',0,SUM(CND_CREDIT_AMOUNT),'','0000-00-00','','','',CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14','','' FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CND_TYPE = 'LC'  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION LIMIT 1000000000000");
            stmt.execute("INSERT INTO FILTERFABRIC.D_CREDIT_NOTE_HEADER  (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_LINK_NO,CNH_DRAFT_CR_NOTE_DATE) SELECT CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,210027,CND_SUB_ACCOUNT_CODE,'',CND_EFFECT,CND_INVOICE_AMOUNT,CND_DEBIT_AMOUNT,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_BOOK_CODE,CND_LINK_NO,CONCAT(SUBSTRING(CND_YEAR_MON_ID,1,4),'-',SUBSTRING(CND_YEAR_MON_ID,5,2),'-',SUBSTRING(RIGHT(CND_INTERVAL_CAPTION,10),1,2)) FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = SUBSTRING('" +txtInterval.getText()+"',1,8)  AND CND_TYPE = 'CASH'  AND CND_EFFECT ='D'");
      
          //  stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_HEADER SET CNH_MAIN_ACCOUNT_CODE =435091 WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = 'LC' AND CNH_SUB_ACCOUNT_CODE NOT IN (308801,278901)");
         
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_HEADER,DINESHMILLS.D_SAL_PARTY_MASTER SET CNH_PARTY_NAME = PARTY_NAME,CNH_CITY = CITY_ID  WHERE CNH_SUB_ACCOUNT_CODE = PARTY_CODE AND CNH_MAIN_CODE = MAIN_ACCOUNT_CODE AND  CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = 'CASH' ");
            
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_HEADER,FINANCE.D_FIN_GL SET CNH_EXT1 = ACCOUNT_NAME,CNH_MAIN_ACCOUNT_NAME = ACCOUNT_NAME  WHERE CNH_MAIN_ACCOUNT_CODE = MAIN_ACCOUNT_CODE  AND  CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = 'CASH' ");
            
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_HEADER SET CNH_REMARKS = CONCAT('CASH DISCOUNT 15 DAYS ',CNH_INTERVAL_CAPTION)  WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = 'CASH'");
            
            System.out.println("Header File Updated"); 
   
        }
        catch(Exception e) {
        }          
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
             try{
             
                    exp.fillData(Table,new File("/root/Desktop/cashdiscount.xls"));
                    exp.fillData(Table,new File("D://cashdiscount.xls"));
                    JOptionPane.showMessageDialog(null, "Data saved at " +
                            "'/root/Desktop/cashdiscount.xls' successfully in Linux PC or 'D://cashdiscount.xls' successfully in Windows PC    ", "Message",
                            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }  
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jButton4ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ItemStateChanged

    private void cmbIntervalComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIntervalComboItemStateChanged
       txtInterval.setText((String)cmbIntervalCombo.getSelectedItem());
        
    }//GEN-LAST:event_cmbIntervalComboItemStateChanged

    private void cmbIntervalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntervalComboActionPerformed
     if(EITLERPGLOBAL.getComboCode(cmbIntervalCombo)!=0){
            formatGrid();
            try{
                ResultSet rs=data.getResult("SELECT CND_SUB_ACCOUNT_CODE,CND_LC_OPENER,CND_INVOICE_NO,CND_LINK_NO,CND_INVOICE_DATE,CND_CHARGE_CODE,CND_INVOICE_AMOUNT,CND_PERCENT,CND_INTERVAL_CAPTION,CASE WHEN CND_LC_OPENER - CND_SUB_ACCOUNT_CODE = 0 THEN '' ELSE CONCAT('LC_OPENER','(',CND_LC_OPENER,')') END AS LC_OPENER,CND_MAIN_ACCOUNT_NAME FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='CASH' AND CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND CND_EFFECT='C' ORDER BY CND_SUB_ACCOUNT_CODE,CND_INVOICE_DATE,CND_LINK_NO+0");
                while(!rs.isAfterLast()){
                    Object[] rowData=new Object[11];
                   // rowData[0]=rs.getString("");
                    rowData[0]=rs.getString("CND_SUB_ACCOUNT_CODE");
                    rowData[1]=rs.getString("CND_MAIN_ACCOUNT_NAME");
                    rowData[2]=rs.getString("CND_INVOICE_NO");
                    rowData[3]=rs.getString("CND_LINK_NO");
                    rowData[4]=rs.getString("CND_INVOICE_DATE");
                    rowData[5]=rs.getString("CND_CHARGE_CODE");
                    rowData[6]=rs.getString("CND_INVOICE_AMOUNT");
                    rowData[7]=rs.getString("CND_PERCENT");
                    rowData[8]=rs.getString("CND_LC_OPENER");
                    rowData[9]=rs.getString("CND_INTERVAL_CAPTION");
                
                    DataModel.addRow(rowData);
                    rs.next();
                }
                rs.close();
       /* 
        if(data.getBoolValueFromDB("SELECT SCHEME_CLOSED FROM FILTERFABRIC.D_SAL_SCHEME_MASTER WHERE SCHEME_ID="+EITLERPGLOBAL.getComboCode(cmbIntervalCombo))){
                    printReport=true;
                   // cmdReport.setEnabled(true);
                    cmbIntervalCombo.setEnabled(true);
                }else {
                   // lblStatus.setText("Processing ...");
                    cmbIntervalCombo.setEnabled(false);
                   // cmdReport.setEnabled(false);
                    
                    new Thread(){
                        public void run(){
                            if(processScheme(EITLERPGLOBAL.getComboCode(cmbIntervalCombo))){
                              //  cmdReport.setEnabled(true);
                                cmbIntervalCombo.setEnabled(true);
                                //lblStatus.setText("Finished ...");
                            }
                        }
                    }.start();
                }*/
                
            }catch(SQLException sqe){sqe.printStackTrace();}
        }
        
        
        //  txtInterval.setText((String)EITLERPGLOBAL.getComboCode(cmbIntervalCombo));
       //      lblStatus.setText("Processing ...");
             
             // txtInterval.setText((String)cmbIntervalCombo.getSelectedItem());
        
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbIntervalComboActionPerformed

    private void ProcesscashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesscashActionPerformed
          if ( ! Validate()) {
            return;
        }
        processCashDiscount();
        // TODO add your handling code here:
    }//GEN-LAST:event_ProcesscashActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      // TODO add your handling code here:
        
        /*
        if ( ! Validate()) {
            return;
        }
        
       */ 
        DraftReport();     // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   // TODO add your handling code here:
      //  if ( ! Validate()) {
      //      return;
     //   }
        GenerateReport();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void mouseDBLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDBLClicked
        // TODO add your handling code here:
     //   try {
       //     if(evt.getClickCount()==2) {
         //       String VoucherNo = DataModel.getValueAt(Table.getSelectedRow(),1).toString();
             //   clsVoucher.OpenVoucher(VoucherNo, null);
           // }
      //  }catch(Exception e) {}
        
    }//GEN-LAST:event_mouseDBLClicked
                    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Processcash;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup bgVoucher;
    private javax.swing.JComboBox cmbIntervalCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInterval;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtVoucherNo;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_NAME");
            objReportData.AddColumn("CND_INVOICE_NO");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_CHARGE_CODE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("LC_OPENER");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_INVOICE_NO","");
            objOpeningRow.setValue("CND_LINK_NO","");
            objOpeningRow.setValue("CND_INVOICE_DATE","0000-00-00");
            objOpeningRow.setValue("CND_CHARGE_CODE","");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CND_PERCENT","");            
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_NAME","");
            objOpeningRow.setValue("LC_OPENER","");
         
           
           String strSQL = "SELECT CND_SUB_ACCOUNT_CODE,CND_INVOICE_NO,CND_LINK_NO,CND_INVOICE_DATE,CND_CHARGE_CODE,CND_INVOICE_AMOUNT,CND_PERCENT,CND_INTERVAL_CAPTION,CASE WHEN CND_LC_OPENER - CND_SUB_ACCOUNT_CODE = 0 THEN '' ELSE CONCAT('LC_OPENER','(',CND_LC_OPENER,')') END AS LC_OPENER,CND_MAIN_ACCOUNT_NAME FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE  CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND CND_EFFECT='C' AND CND_TYPE ='CASH' ORDER BY CND_SUB_ACCOUNT_CODE,CND_INVOICE_DATE,CND_LINK_NO+0"; 
          // "WHERE (CND_INOVICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+"" +
          // "AND CND_INOVICE_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"')"+
          // "ORDER BY CND_INOVICE_DATE";
            
            //"AND (A.RECEIPT_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+
            //"AND A.RECEIPT_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' ) ";
            //System.out.println("sql="+strSQL);
            
       
           ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
          if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                   objRow=objReportData.newRow();
                    
                   objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                   objRow.setValue("CND_SUB_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_NAME",""));
                   objRow.setValue("CND_INVOICE_NO",UtilFunctions.getString(rsTmp,"CND_INVOICE_NO",""));
                   objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                   objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","0000-00-00"));
                  // objRow.setValue("CND_INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","0000-00-00")));
                   objRow.setValue("CND_CHARGE_CODE",UtilFunctions.getString(rsTmp,"CND_CHARGE_CODE",""));
                   objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                   objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                   objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                   objRow.setValue("LC_OPENER",UtilFunctions.getString(rsTmp,"LC_OPENER",""));
                   objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                                        
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
               }
           }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
         //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
           // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            //Parameters.put("FROM_DATE",txtFromDate.getText().trim());
           // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptCashDiscount.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
     public String getStrQuery(String MainAccountCode,String SubAccountCode) {
        
        String strQuery;
        if(!SubAccountCode.trim().equals("")) {
            strQuery=" AND CND_SUB_ACCOUNT_CODE ="+SubAccountCode;
        //    if(!MainAccountCode.trim().equals("")) {
          //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
            }
       // }
        else {
            strQuery = " AND CND_SUB_ACCOUNT_CODE ="+SubAccountCode ;
        }
        
        return strQuery;
    }
   
     
     private void DraftReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CND_NO");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_LINK_YEAR");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_CHARGE_CODE");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_DEBIT_AMOUNT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_VALUE_DATE");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CND_BOOK_CODE");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_NO","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_LINK_NO","");
            objOpeningRow.setValue("CND_LINK_YEAR","");
            objOpeningRow.setValue("CND_INVOICE_DATE","0000-00-00");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT",""); 
            objOpeningRow.setValue("CND_CHARGE_CODE","");
            objOpeningRow.setValue("CND_PERCENT","");
            objOpeningRow.setValue("CND_DEBIT_AMOUNT","");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CND_VALUE_DATE","0000-00-00");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CND_BOOK_CODE","");
           
         
           
  //         String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0"; 
 //          String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='CASH' AND CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0"; 
           String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE, CASE WHEN CND_EFFECT ='D' THEN 0 ELSE CND_INVOICE_AMOUNT END AS CND_INVOICE_AMOUNT , CASE WHEN CND_EFFECT ='D' THEN 0 ELSE CND_CHARGE_CODE END AS CND_CHARGE_CODE , CASE WHEN CND_EFFECT ='D' THEN 0 ELSE CND_PERCENT END AS CND_PERCENT,CND_BOOK_CODE, CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION  FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='CASH' AND CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) ORDER BY  SUBSTRING(CND_NO,9,6)+0,CND_EFFECT DESC,CND_LINK_NO+0"; 
           System.out.println(strSQL);
        //   String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0,CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'"; 
           
           
           // "WHERE (CND_INOVICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+"" +
          // "AND CND_INOVICE_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"')"+
          // "ORDER BY CND_INOVICE_DATE";
            
            //"AND (A.RECEIPT_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+
            //"AND A.RECEIPT_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' ) ";
            //System.out.println("sql="+strSQL);
            
       
           ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
          if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                   objRow=objReportData.newRow();
                    
                   objRow.setValue("CND_NO",UtilFunctions.getString(rsTmp,"CND_NO",""));
                   objRow.setValue("CND_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_NAME",""));
                   objRow.setValue("CND_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_CODE",""));
                   objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                   objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                  // objRow.setValue("CND_INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","0000-00-00")));
                   objRow.setValue("CND_LINK_YEAR",UtilFunctions.getString(rsTmp,"CND_LINK_YEAR",""));
                   objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","0000-00-00"));
                   objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                   objRow.setValue("CND_CHARGE_CODE",UtilFunctions.getString(rsTmp,"CND_CHARGE_CODE",""));
                   objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                   objRow.setValue("CND_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_DEBIT_AMOUNT",""));
                   objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                   objRow.setValue("CND_VALUE_DATE",UtilFunctions.getString(rsTmp,"CND_VALUE_DATE","0000-00-00"));
                   objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                   objRow.setValue("CND_BOOK_CODE",UtilFunctions.getString(rsTmp,"CND_BOOK_CODE",""));
                                        
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
               }
           }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
         //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
           // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
           // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
           // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptJVCASHDISCOUNT.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
     
       public String getStrQuery1(String MainAccountCode,String CndNo) {
        
        String strQuery;
        if(!CndNo.trim().equals("")) {
            strQuery=" AND CND_NO ="+CndNo;
        //    if(!MainAccountCode.trim().equals("")) {
          //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
            }
       // }
        else {
            strQuery = " AND CND_NO ="+CndNo;
        }
        
        return strQuery;
    }
    
     private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        } 
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        return true;
    }
    
     
      private void generateIntervalCombo(){
        IntervalComboModel=new EITLComboModel();
        IntervalComboModel.removeAllElements();
        cmbIntervalCombo.setModel(IntervalComboModel);
        try{
            ComboData combodata=new ComboData();
            combodata.Code=0;
            combodata.Text="Select Date";
            
            IntervalComboModel.addElement(combodata);
            ResultSet rs=data.getResult("SELECT DISTINCT CND_YEAR_MON_ID,CND_INTERVAL_CAPTION FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_FIN_VOUCHER_NO ='' AND CND_TYPE ='CASH' ORDER BY CND_YEAR_MON_ID DESC ");
            while(!rs.isAfterLast()){
                combodata=new ComboData();
                combodata.Code=rs.getLong("CND_YEAR_MON_ID");
               // combodata.strCode=rs.getString("SCHEME_NAME");
              //  combodata.Text=rs.getString("CND_INTERVAL_CAPTION")+"-"+rs.getString("CND_YEAR_MON_ID");
                combodata.Text=rs.getString("CND_YEAR_MON_ID")+" : "+ rs.getString("CND_INTERVAL_CAPTION");
                
                IntervalComboModel.addElement(combodata);
                rs.next();
            }
        }catch(SQLException e){e.printStackTrace();}
    } 
     
   private void processCashDiscount(){
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();

            
            stmt.execute("TRUNCATE TABLE FILTERFABRIC.TMP_CREDITNOTE_DETAIL");
                   
            stmt.execute("INSERT INTO FILTERFABRIC.TMP_CREDITNOTE_DETAIL SELECT COMPANY_ID,'','CASH',INVOICE_NO, INVOICE_DATE, PARTY_CODE,'',EXTRACT(DAY FROM INVOICE_DATE),EXTRACT(MONTH FROM INVOICE_DATE),EXTRACT(YEAR FROM INVOICE_DATE),AGENT_SR_NO,DUE_DATE,STATION_CODE,PAYMENT_TERM_CODE,AGENT_LAST_INVOICE,AGENT_LAST_SR_NO,2000+FIN_YEAR_FROM,2000+FIN_YEAR_TO,WAREHOUSE_CODE,TOTAL_GROSS_AMOUNT,TOTAL_NET_AMOUNT,TOTAL_VALUE,NET_AMOUNT,TRANSPORTER_CODE,LC_NO,INS_INDICATOR,0,0,PARTY_CODE,0,'','0000-00-00',0,0,0  FROM (SELECT * FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE SUBSTRING(PAYMENT_TERM_CODE,1,1) =9 AND INVOICE_TYPE =3 AND INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND CANCELLED =0 AND APPROVED =1 ) AS AA LEFT JOIN (SELECT    CND_INVOICE_NO,CND_INVOICE_DATE,CND_FIN_VOUCHER_DATE,CND_SUB_ACCOUNT_CODE,CND_FIN_VOUCHER_NO FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_EFFECT ='C' ) AS BB ON AA.INVOICE_NO = BB.CND_INVOICE_NO AND AA.INVOICE_DATE = BB.CND_INVOICE_DATE AND AA.PARTY_CODE = BB.CND_SUB_ACCOUNT_CODE WHERE CND_INVOICE_NO IS  NULL");
            
            stmt.execute("DELETE FROM FILTERFABRIC.TMP_CREDITNOTE_DETAIL WHERE CN_PARTY_CODE IN (157753,157755,157756)");
            
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET CN_INTERVAL = CASE WHEN  CN_DAY >= 1 AND CN_DAY <=15 THEN '01' ELSE '02' END");
            
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET CN_NO = CONCAT(CN_AGENT_LAST_INVOICE,CN_YEAR,LPAD(CN_MONTH,2,0),CN_PARTY_CODE,CN_INTERVAL)");
            
            stmt.execute("UPDATE  FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET EXT1 = CONCAT(CN_YEAR,'-',LPAD(CN_MONTH,2,0),'-',15) WHERE CN_INTERVAL = 01");
            
            stmt.execute("UPDATE  FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET EXT1 = LAST_DAY(CN_INVOICE_DATE) WHERE CN_INTERVAL = 02");
            
            stmt.execute("UPDATE  FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET EXT3 = CONCAT(CN_YEAR,LPAD(CN_MONTH,2,0),CN_INTERVAL)");

            stmt.execute("UPDATE  FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET EXT2 = CONCAT(SUBSTRING(CN_NO,3,6),SUBSTRING(CN_NO,15,2))");
            
            
            stmt.execute("UPDATE DINESHMILLS.D_SAL_PARTY_MASTER A, FILTERFABRIC.TMP_CREDITNOTE_DETAIL B SET CN_PARTY_TYPE = PARTY_TYPE WHERE A.PARTY_CODE = B.CN_PARTY_CODE");
            
          //  stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL  SET CN_PARTY_TYPE = 3  WHERE CN_PARTY_CODE IN (719907,414701,414801)");

            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL  SET CN_PARTY_TYPE = 3  WHERE CN_PARTY_CODE IN (719907,414701)");
   

            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL  SET CN_PARTY_TYPE = 2  WHERE CN_PARTY_CODE IN (715530)");
            
            stmt.execute("UPDATE  (SELECT PARTY_CODE,LC_OPENER_CODE,MAX(EXP_DATE) AS EXP_DATE  FROM  DINESHMILLS.D_SAL_POLICY_LC_MASTER A GROUP BY PARTY_CODE,LC_OPENER_CODE) A, FILTERFABRIC.TMP_CREDITNOTE_DETAIL B SET CN_LC_OPENER =  LC_OPENER_CODE,CN_LC_PARTY_IND='LC'  WHERE A.PARTY_CODE = B.CN_PARTY_CODE");
            
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL  SET CN_LC_OPENER =  730000,CN_LC_PARTY_IND='LC' WHERE SUBSTRING(CN_PARTY_CODE,3,2) IN (55,66,77,88,89)  AND  SUBSTRING(CN_PARTY_CODE,1,2) IN (73)  AND CN_PARTY_TYPE = 2");
            
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL  SET CN_LC_OPENER =  710000,CN_LC_PARTY_IND='LC' WHERE SUBSTRING(CN_PARTY_CODE,3,2) IN (55,66,77,88,89)  AND  SUBSTRING(CN_PARTY_CODE,1,2) IN (71)  AND CN_PARTY_TYPE = 2");
                         
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL  SET CN_LC_OPENER =  510000,CN_LC_PARTY_IND='LC' WHERE SUBSTRING(CN_PARTY_CODE,3,2) IN (55,66,77,88,89)  AND  SUBSTRING(CN_PARTY_CODE,1,2) IN (51)  AND CN_PARTY_TYPE = 2");
            
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL  SET CN_LC_OPENER =  690000,CN_LC_PARTY_IND='LC' WHERE SUBSTRING(CN_PARTY_CODE,1,2) IN (69)  AND CN_PARTY_TYPE = 2");
            
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET CN_LC_PARTY_IND ='' WHERE CN_PARTY_CODE =  CN_LC_OPENER");
            
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET CN_PERCENT = CASE WHEN CN_PARTY_TYPE =2 AND CN_LC_PARTY_IND != 'LC' THEN 2 WHEN CN_PARTY_TYPE =3 AND CN_LC_PARTY_IND != 'LC' THEN 3 WHEN CN_PARTY_TYPE IN (2,3) AND CN_LC_PARTY_IND = 'LC' THEN 6 END");
            
            stmt.execute("UPDATE FILTERFABRIC.TMP_CREDITNOTE_DETAIL SET CN_AMOUNT  = ROUND(CN_PERCENT * CN_NET_AMOUNT /100,0)");
            
            //stmt.execute("DELETE FROM FILTERFABRIC.TMP_CREDITNOTE_DETAIL WHERE CN_PARTY_CODE IN (150998,150999,157753,157754,157755,157766,157777)");
            stmt.execute("DELETE FROM FILTERFABRIC.TMP_CREDITNOTE_DETAIL WHERE CN_PARTY_CODE IN (150998,150999,157753,157754,157755,157766,157777,150801)");
            
            
            
            stmt.execute("INSERT INTO FILTERFABRIC.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT,CND_BOOK_CODE,CND_TRANSPORTER_CODE,CND_CREDIT_AMOUNT,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_YEAR_MON_ID) SELECT 1,CN_NO,'CASH',210072,CN_PARTY_CODE,'C', CN_AGENT_SR_NO,CONCAT(CN_FIN_YEAR_TO,'-',CN_FIN_YEAR_FROM),CN_INVOICE_NO,CN_INVOICE_DATE,CN_NET_AMOUNT,CN_PAYMENT_TERM_CODE,CN_PERCENT,14,CN_TRANSPORTER_CODE,CN_AMOUNT,'Y',CN_LC_OPENER,EXT1,EXT3   FROM FILTERFABRIC.TMP_CREDITNOTE_DETAIL");
            
           
            stmt.execute("INSERT INTO FILTERFABRIC.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_INVOICE_AMOUNT,CND_PERCENT,CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_YEAR_MON_ID) SELECT 1,CN_NO,'CASH',435091,CN_LC_OPENER,'D',SUM(CN_NET_AMOUNT),AVG(CN_PERCENT),14,SUM(CN_AMOUNT),'Y',CN_LC_OPENER,EXT1,EXT3 FROM FILTERFABRIC.TMP_CREDITNOTE_DETAIL GROUP BY CN_NO,CN_LC_OPENER,EXT1,EXT3");
               
   
            
            stmt.execute("UPDATE  FINANCE.D_FIN_GL,FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_MAIN_ACCOUNT_NAME = SUBSTRING(ACCOUNT_NAME,1,25) WHERE MAIN_ACCOUNT_CODE = CND_MAIN_ACCOUNT_CODE AND CND_MAIN_ACCOUNT_CODE =435091 AND CND_TYPE ='CASH' ");
            
            stmt.execute("UPDATE FINANCE.D_FIN_PARTY_MASTER ,FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_MAIN_ACCOUNT_NAME = SUBSTRING(PARTY_NAME,1,25) WHERE MAIN_ACCOUNT_CODE = CND_MAIN_ACCOUNT_CODE AND PARTY_CODE = CND_SUB_ACCOUNT_CODE AND CND_TYPE ='CASH' AND CND_EFFECT = 'C'");
            
       //   stmt.execute("UPDATE  FILTERFABRIC.D_CREDIT_NOTE_DETAIL AA,(SELECT A.VOUCHER_NO,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,SUM(AMOUNT) AS AMT,SUBSTRING(A.LINK_NO,1,4) AS LINK,SUBSTRING(A.LINK_NO,8,5) AS YEAR1,BOOK_CODE,VOUCHER_DATE ,A.LINK_NO FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND BOOK_CODE = 14  AND MAIN_ACCOUNT_CODE = 210027 AND B.CANCELLED =0 AND B.APPROVED =1 AND VOUCHER_DATE >= '2014-01-01' AND SUBSTRING(A.LINK_NO,8,5) IN ( '16-15') GROUP BY A.VOUCHER_NO,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,SUBSTRING(A.LINK_NO,1,4),SUBSTRING(A.LINK_NO,8,5) ,BOOK_CODE,VOUCHER_DATE,A.LINK_NO LIMIT 1000000) AS BB SET CND_FIN_VOUCHER_NO = VOUCHER_NO, CND_FIN_VOUCHER_DATE = VOUCHER_DATE WHERE CND_TYPE ='CASH' AND CND_MAIN_ACCOUNT_CODE = MAIN_ACCOUNT_CODE AND CND_LC_OPENER = SUB_ACCOUNT_CODE AND CND_FIN_VOUCHER_NO = '' AND  CND_FIN_VOUCHER_DATE = '0000-00-00' AND LINK = CND_LINK_NO+0");
     
         // stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");
         // stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT CND_NO,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,'' FROM FILTERFABRIC.D_CREDIT_NOTE_DETAIL WHERE CND_FIN_VOUCHER_NO !='' AND CND_EFFECT ='C'");
                        
        //  stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL,TEMP_DATABASE.TM80 SET CND_FIN_VOUCHER_NO = COL02, CND_FIN_VOUCHER_DATE = COL03 WHERE CND_NO = COL01 AND CND_EFFECT ='D'");
            
            
            
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/04/2016 TO 15/04/2016' WHERE CND_YEAR_MON_ID = '20160401'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/04/2016 TO 30/04/2016' WHERE CND_YEAR_MON_ID = '20160402'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/05/2016 TO 15/05/2016' WHERE CND_YEAR_MON_ID = '20160501'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/05/2016 TO 31/05/2016' WHERE CND_YEAR_MON_ID = '20160502'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/06/2016 TO 15/06/2016' WHERE CND_YEAR_MON_ID = '20160601'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/06/2016 TO 30/06/2016' WHERE CND_YEAR_MON_ID = '20160602'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/07/2016 TO 15/07/2016' WHERE CND_YEAR_MON_ID = '20160701'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/07/2016 TO 31/07/2016' WHERE CND_YEAR_MON_ID = '20160702'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/08/2016 TO 15/08/2016' WHERE CND_YEAR_MON_ID = '20160801'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/08/2016 TO 31/08/2016' WHERE CND_YEAR_MON_ID = '20160802'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/09/2016 TO 15/09/2016' WHERE CND_YEAR_MON_ID = '20160901'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/09/2016 TO 30/09/2016' WHERE CND_YEAR_MON_ID = '20160902'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/10/2016 TO 15/10/2016' WHERE CND_YEAR_MON_ID = '20161001'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/10/2016 TO 31/10/2016' WHERE CND_YEAR_MON_ID = '20161002'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/11/2016 TO 15/11/2016' WHERE CND_YEAR_MON_ID = '20161101'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/11/2016 TO 30/11/2016' WHERE CND_YEAR_MON_ID = '20161102'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/12/2016 TO 15/12/2016' WHERE CND_YEAR_MON_ID = '20161201'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/12/2016 TO 31/12/2016' WHERE CND_YEAR_MON_ID = '20161202'");
            
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/01/2017 TO 15/01/2017' WHERE CND_YEAR_MON_ID = '20170101'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/01/2017 TO 31/01/2017' WHERE CND_YEAR_MON_ID = '20170102'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/02/2017 TO 15/02/2017' WHERE CND_YEAR_MON_ID = '20170201'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/02/2017 TO 28/02/2017' WHERE CND_YEAR_MON_ID = '20170202'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 01/03/2017 TO 15/03/2017' WHERE CND_YEAR_MON_ID = '20170301'");
            stmt.execute("UPDATE FILTERFABRIC.D_CREDIT_NOTE_DETAIL SET CND_INTERVAL_CAPTION=  'FROM 16/03/2017 TO 31/03/2017' WHERE CND_YEAR_MON_ID = '20170302'");
        
            generateIntervalCombo();
            
                }catch(SQLException e){e.printStackTrace();}
    
    }   
   
    private void formatGrid(){
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
        
      //  DataModel.addColumn("Sr.");
        DataModel.addColumn("Party Code");
        DataModel.addColumn("Party Name");
        DataModel.addColumn("Invoice No");
        DataModel.addColumn("Link No");
        DataModel.addColumn("Invoice Date");
        DataModel.addColumn("Charge Code");
        DataModel.addColumn("Invoice Amount");
        DataModel.addColumn("Percent");
        DataModel.addColumn("Lc Opener");
        DataModel.addColumn("Interval Caption");
     
        
    }
    
    private void getDept(){
    
        if(EITLERPGLOBAL.gUserDeptID==76)
        {
            txtFromDate.setEnabled(true);
            txtToDate.setEnabled(false);
            txtToDate.setVisible(true);
            Processcash.setEnabled(true);
            jButton5.setEnabled(true);
            jButton4.setEnabled(true);
        }
        else
        {
            txtFromDate.setEnabled(false);
            txtToDate.setEnabled(false);
            txtToDate.setVisible(true);
            Processcash.setEnabled(false);
            jButton5.setEnabled(false);
            jButton4.setEnabled(false);       
        }
    }
    
    public String getLastDay() {
        String Date=data.getStringValueFromDB("SELECT LAST_DAY('"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"') FROM DUAL");
        return Date;
    }
     
}
