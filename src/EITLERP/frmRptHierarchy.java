/*
 * frmItemFind.java
 *
 * Created on April 28, 2004, 11:04 AM
 */

package EITLERP;

/*<APPLET CODE=frmItemFind.class HEIGHT=280 WIDTH=460></APPLET>*/
/**
 *
 * @author  nrpithva
 */
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.net.*;
import java.sql.*;
import java.io.*;


public class frmRptHierarchy extends javax.swing.JApplet {
    
    private EITLComboModel cmbModuleModel;
    private EITLComboModel cmbUserModel;
    private EITLComboModel cmbDeptModel;
    private EITLComboModel cmbFormatModel;
    
    public boolean Cancelled=false;
    public String strQuery;
    
    private String SelWareHouseID="";
    
    private int lineCounter=0;
    private int pageCounter=1;
    
    private String LeftMargin=EITLERPGLOBAL.Replicate(" ", 5);
    
    /** Initializes the applet frmItemFind */
    public void init() {
        System.gc();
        setSize(464,320);
        initComponents();
        GenerateCombo();
        cmbModule.setSelectedIndex(-1);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        cmbDept = new javax.swing.JComboBox();
        cmdExit = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        chkModule = new javax.swing.JCheckBox();
        chkDept = new javax.swing.JCheckBox();
        cmbUser = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chkUser = new javax.swing.JCheckBox();
        cmbModule = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cmbFormat = new javax.swing.JComboBox();
        cmdText = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        cmbDept.setEnabled(false);
        getContentPane().add(cmbDept);
        cmbDept.setBounds(11, 75, 310, 24);

        cmdExit.setText("Exit");
        cmdExit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExit);
        cmdExit.setBounds(349, 101, 95, 29);

        cmdPreview.setText("Preview");
        cmdPreview.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmdPreview.setNextFocusableComponent(cmdExit);
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(349, 64, 95, 29);

        chkModule.setText("Module");
        chkModule.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkModuleItemStateChanged(evt);
            }
        });

        getContentPane().add(chkModule);
        chkModule.setBounds(11, 107, 98, 23);

        chkDept.setText("Department");
        chkDept.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDeptItemStateChanged(evt);
            }
        });

        getContentPane().add(chkDept);
        chkDept.setBounds(8, 49, 153, 23);

        cmbUser.setEnabled(false);
        getContentPane().add(cmbUser);
        cmbUser.setBounds(15, 196, 310, 24);

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setText("HIERARCHY INFORMATION ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(12, 9, 182, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 474, 34);

        chkUser.setText("User");
        chkUser.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkUserItemStateChanged(evt);
            }
        });

        getContentPane().add(chkUser);
        chkUser.setBounds(14, 167, 98, 23);

        cmbModule.setEnabled(false);
        getContentPane().add(cmbModule);
        cmbModule.setBounds(13, 134, 310, 24);

        jLabel2.setText("Report Format ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(14, 256, 129, 15);

        getContentPane().add(cmbFormat);
        cmbFormat.setBounds(123, 251, 200, 24);

        cmdText.setText("Text File");
        cmdText.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTextActionPerformed(evt);
            }
        });

        getContentPane().add(cmdText);
        cmdText.setBounds(351, 147, 95, 29);

    }//GEN-END:initComponents
    
    private void cmdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTextActionPerformed
        // TODO add your handling code here:
        String strCondition="";
        String DeptName="";
        int Format=EITLERPGLOBAL.getComboCode(cmbFormat);
        
        if(Format==1) {
            
            if(chkModule.isSelected()) {
                strCondition=" AND M.MODULE_ID="+EITLERPGLOBAL.getComboCode(cmbModule)+"  ";
            }
            
            if(chkDept.isSelected()) {
                int SelDeptID=EITLERPGLOBAL.getComboCode(cmbDept);
                DeptName=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,SelDeptID);
                strCondition=strCondition+" AND G.USER_ID IN (SELECT USER_ID FROM D_COM_DEPT_USERS WHERE DEPT_ID="+SelDeptID+") ";
            }
            
            PrintFile(strCondition);
        }
        
        
        if(Format==2) {
            
        }
        
    }//GEN-LAST:event_cmdTextActionPerformed
    
    private void chkUserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkUserItemStateChanged
        // TODO add your handling code here:
        cmbUser.setEnabled(chkUser.isSelected());
    }//GEN-LAST:event_chkUserItemStateChanged
    
    private void chkDeptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDeptItemStateChanged
        // TODO add your handling code here:
        cmbDept.setEnabled(chkDept.isSelected());
    }//GEN-LAST:event_chkDeptItemStateChanged
    
    private void chkModuleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkModuleItemStateChanged
        // TODO add your handling code here:
        cmbModule.setEnabled(chkModule.isSelected());
    }//GEN-LAST:event_chkModuleItemStateChanged
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null," W "+getWidth()+" H "+getHeight());
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        strQuery="";
        Cancelled=true;
        getParent().getParent().getParent().getParent().show(false);
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        String strCondition="";
        String DeptName="";
        int Format=EITLERPGLOBAL.getComboCode(cmbFormat);
        
        if(Format==1) {
            
            if(chkModule.isSelected()) {
                strCondition=" AND M.MODULE_ID="+EITLERPGLOBAL.getComboCode(cmbModule)+"  ";
            }
            
            if(chkDept.isSelected()) {
                int SelDeptID=EITLERPGLOBAL.getComboCode(cmbDept);
                DeptName=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,SelDeptID);
                strCondition=strCondition+" AND G.USER_ID IN (SELECT USER_ID FROM D_COM_DEPT_USERS WHERE DEPT_ID="+SelDeptID+") ";
            }
            
            System.out.println(strCondition);
            
            try {
                URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptHierarchy.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&Condition="+strCondition+"&Dept="+DeptName);
                EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
            }
            catch(Exception e) {
                
            }
            
        }
        
        
        
        if(Format==2) {
            
            ProcessReport();
            
            strCondition="";
            
            
            try {
                URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptHierarchy2.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&Condition="+strCondition);
                EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
            }
            catch(Exception e) {
                
            }
            
        }
        
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkDept;
    private javax.swing.JCheckBox chkModule;
    private javax.swing.JCheckBox chkUser;
    private javax.swing.JComboBox cmbDept;
    private javax.swing.JComboBox cmbFormat;
    private javax.swing.JComboBox cmbModule;
    private javax.swing.JComboBox cmbUser;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        String strCondition="";
        
        
        //----- Generate cmbType ------- //
        cmbModuleModel=new EITLComboModel();
        cmbModule.removeAllItems();
        cmbModule.setModel(cmbModuleModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID);
        
        List=clsModules.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsModules ObjModules=(clsModules) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Text=(String) ObjModules.getAttribute("MODULE_DESC").getObj();
            aData.Code=(int) ObjModules.getAttribute("MODULE_ID").getVal();
            cmbModuleModel.addElement(aData);
        }
        //------------------------------ //
        
        
        //----- Generate cmbType ------- //
        cmbDeptModel=new EITLComboModel();
        cmbDept.removeAllItems();
        cmbDept.setModel(cmbDeptModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID);
        
        List=clsDepartment.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsDepartment ObjDept=(clsDepartment) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Text=(String) ObjDept.getAttribute("DEPT_DESC").getObj();
            aData.Code=(int) ObjDept.getAttribute("DEPT_ID").getVal();
            cmbDeptModel.addElement(aData);
        }
        //------------------------------ //
        
        //----- Generate cmbType ------- //
        cmbUserModel=new EITLComboModel();
        cmbUser.removeAllItems();
        cmbUser.setModel(cmbUserModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID);
        
        List=(new clsUser()).getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Text=(String) ObjUser.getAttribute("USER_NAME").getObj();
            aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
            cmbUserModel.addElement(aData);
        }
        //------------------------------ //
        
        
        cmbFormatModel=new EITLComboModel();
        cmbFormat.removeAllItems();
        cmbFormat.setModel(cmbFormatModel);
        
        ComboData aData=new ComboData();
        aData.Code=1;
        aData.Text="Modulewise Hierarchy";
        cmbFormatModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="Userwise Module Rights";
        cmbFormatModel.addElement(aData);
        
    }
    
    
    private void ProcessReport() {
        try {
            String strSQL="";
            Connection tmpConn;
            Statement stTmp;
            ResultSet rsTmp,rsDept,rsModule,rsRights,rsUser;
            int Counter=0;
            
            strSQL="SELECT * FROM D_COM_DEPT_MASTER ";
            
            if(chkDept.isSelected()) {
                strSQL=strSQL+" WHERE DEPT_ID="+EITLERPGLOBAL.getComboCode(cmbDept);
            }
            
            
            //Delete previous records
            data.Execute("DELETE FROM D_COM_HIERARCHY_INFO");
            
            tmpConn=data.getConn();
            stTmp=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_HIERARCHY_INFO");
            rsTmp.first();
            
            rsDept=data.getResult(strSQL);
            rsDept.first();
            
            int DeptID=0;
            int UserID=0;
            
            if(rsDept.getRow()>0) {
                while(!rsDept.isAfterLast()) {
                    DeptID=rsDept.getInt("DEPT_ID");
                    
                    strSQL="SELECT * FROM D_COM_DEPT_USERS WHERE DEPT_ID="+DeptID;
                    
                    if(chkUser.isSelected()) {
                        strSQL=strSQL+" AND USER_ID="+EITLERPGLOBAL.getComboCode(cmbUser);
                    }
                    
                    rsUser=data.getResult(strSQL);
                    rsUser.first();
                    
                    if(rsUser.getRow()>0) {
                        while(!rsUser.isAfterLast()) {
                            UserID=rsUser.getInt("USER_ID");
                            
                            //Now get the Module List
                            rsModule=data.getResult("SELECT MODULE_ID FROM D_COM_MODULES");
                            rsModule.first();
                            
                            if(rsModule.getRow()>0) {
                                while(!rsModule.isAfterLast()) {
                                    int ModuleID=rsModule.getInt("MODULE_ID");
                                    boolean CanCreate=false;
                                    boolean CanApprove=false;
                                    boolean CanFinalApprove=false;
                                    boolean CanEdit=false;
                                    
                                    //Get the Creator rights
                                    rsRights=data.getResult("SELECT  * FROM D_COM_HIERARCHY_RIGHTS WHERE USER_ID="+UserID+" AND SR_NO=1 AND HIERARCHY_ID IN (SELECT HIERARCHY_ID FROM D_COM_HIERARCHY WHERE MODULE_ID="+ModuleID+")");
                                    rsRights.first();
                                    if(rsRights.getRow()>0) {
                                        CanCreate=true;
                                    }
                                    
                                    
                                    //Get the Approver rights
                                    rsRights=data.getResult("SELECT  * FROM D_COM_HIERARCHY_RIGHTS WHERE APPROVER=1 AND USER_ID="+UserID+" AND HIERARCHY_ID IN (SELECT HIERARCHY_ID FROM D_COM_HIERARCHY WHERE MODULE_ID="+ModuleID+")");
                                    rsRights.first();
                                    if(rsRights.getRow()>0) {
                                        CanApprove=true;
                                    }
                                    
                                    //Get the Final Approver rights
                                    rsRights=data.getResult("SELECT  * FROM D_COM_HIERARCHY_RIGHTS WHERE FINAL_APPROVER=1 AND USER_ID="+UserID+" AND HIERARCHY_ID IN (SELECT HIERARCHY_ID FROM D_COM_HIERARCHY WHERE MODULE_ID="+ModuleID+")");
                                    rsRights.first();
                                    if(rsRights.getRow()>0) {
                                        CanFinalApprove=true;
                                    }
                                    
                                    
                                    //Insert records into report table
                                    if(CanCreate||CanApprove||CanFinalApprove) {
                                        Counter++;
                                        rsTmp.moveToInsertRow();
                                        rsTmp.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                                        rsTmp.updateInt("SR_NO",Counter);
                                        rsTmp.updateInt("DEPT_ID",DeptID);
                                        rsTmp.updateInt("MODULE_ID",ModuleID);
                                        rsTmp.updateInt("USER_ID",UserID);
                                        rsTmp.updateBoolean("CREATE",CanCreate);
                                        rsTmp.updateBoolean("APPROVE",CanApprove);
                                        rsTmp.updateBoolean("FINAL_APPROVE",CanFinalApprove);
                                        rsTmp.updateBoolean("EDIT",CanEdit);
                                        rsTmp.updateBoolean("CHANGED",true);
                                        rsTmp.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                        rsTmp.insertRow();
                                    }
                                    
                                    rsModule.next();
                                }
                                
                            }
                            
                            
                            
                            
                            rsUser.next();
                        }
                        
                    }
                    
                    
                    
                    rsDept.next();
                }
                
            }
            
            
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    
    
    private void PrintFile(String pCondition) {
        ResultSet rsHierarchy,rsModule;
        String strSQL="",strModule="";
        String Line="";
        int HierarchyID=0,PrevHierarchyID=0;
        int SrNo=0;
        boolean PrintHeader=false;
        
        //======Report =====//
        String strSrNo="";
        String strUserName="";
        String strDept="";
        String strCreator="";
        String strFinalApprover="";
        //==================//
        try {
            
            String FileName="/documents/h"+clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.getComboCode(cmbDept))+".txt";
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(FileName)));
            
            PrintHeader(aFile);
            
            strModule=strModule+" SELECT DISTINCT(A.MODULE_ID),M.MODULE_DESC FROM ";
            strModule=strModule+" D_COM_HIERARCHY A ";
            strModule=strModule+" LEFT JOIN D_COM_MODULES M ON (A.MODULE_ID=M.MODULE_ID) ";
            strModule=strModule+" LEFT JOIN D_COM_HIERARCHY_RIGHTS G ON (G.HIERARCHY_ID=A.HIERARCHY_ID), ";
            strModule=strModule+" D_COM_HIERARCHY_RIGHTS B ";
            strModule=strModule+" LEFT JOIN D_COM_USER_MASTER U ON (B.USER_ID=U.USER_ID), ";
            strModule=strModule+" D_COM_USER_MASTER E, ";
            strModule=strModule+" D_COM_DEPT_MASTER D  ";
            strModule=strModule+" WHERE ";
            strModule=strModule+" A.HIERARCHY_ID=B.HIERARCHY_ID  AND ";
            strModule=strModule+" B.HIERARCHY_ID=G.HIERARCHY_ID AND ";
            strModule=strModule+" E.DEPT_ID=D.DEPT_ID AND ";
            strModule=strModule+" G.HIERARCHY_ID=A.HIERARCHY_ID AND ";
            strModule=strModule+" E.USER_ID=B.USER_ID AND MODULE_DESC IS NOT NULL ";
            strModule=strModule+pCondition+" ";
            strModule=strModule+" GROUP BY M.MODULE_ID,A.HIERARCHY_ID,B.SR_NO ";
            strModule=strModule+" ORDER BY M.MODULE_ID,A.HIERARCHY_ID,B.SR_NO ";
            
            rsModule=data.getResult(strModule);
            rsModule.first();
            
            while(!rsModule.isAfterLast()) {
                int ModuleID=rsModule.getInt("MODULE_ID");
                String ModuleName=rsModule.getString("MODULE_DESC");
                
        
                if(PrintHeader)
                {
                  aFile.write("\f");
                  PrintHeader(aFile);
                }
                writeLine(aFile," ");
                writeLine(aFile, "Module : "+ModuleName);
                writeLine(aFile,EITLERPGLOBAL.Replicate("-", 100));
                writeLine(aFile," ");
                
                PrintHeader=true;
                
                strSQL="";
                strSQL=strSQL+" SELECT CURDATE() AS CUR_DATE,A.MODULE_ID,M.MODULE_DESC,A.HIERARCHY_ID,A.HIERARCHY_NAME,D.DEPT_DESC,U.USER_NAME,B.SR_NO,B.APPROVER,B.FINAL_APPROVER,B.CREATOR FROM ";
                strSQL=strSQL+" D_COM_HIERARCHY A ";
                strSQL=strSQL+" LEFT JOIN D_COM_MODULES M ON (A.MODULE_ID=M.MODULE_ID) ";
                strSQL=strSQL+" LEFT JOIN D_COM_HIERARCHY_RIGHTS G ON (G.HIERARCHY_ID=A.HIERARCHY_ID), ";
                strSQL=strSQL+" D_COM_HIERARCHY_RIGHTS B ";
                strSQL=strSQL+" LEFT JOIN D_COM_USER_MASTER U ON (B.USER_ID=U.USER_ID), ";
                strSQL=strSQL+" D_COM_USER_MASTER E, ";
                strSQL=strSQL+" D_COM_DEPT_MASTER D  ";
                strSQL=strSQL+" WHERE ";
                strSQL=strSQL+" A.HIERARCHY_ID=B.HIERARCHY_ID  AND ";
                strSQL=strSQL+" B.HIERARCHY_ID=G.HIERARCHY_ID AND ";
                strSQL=strSQL+" E.DEPT_ID=D.DEPT_ID AND ";
                strSQL=strSQL+" G.HIERARCHY_ID=A.HIERARCHY_ID AND ";
                strSQL=strSQL+" E.USER_ID=B.USER_ID AND MODULE_DESC IS NOT NULL ";
                strSQL=strSQL+pCondition+" ";
                strSQL=strSQL+" AND M.MODULE_ID="+ModuleID;
                strSQL=strSQL+" GROUP BY M.MODULE_ID,A.HIERARCHY_ID,B.SR_NO ";
                strSQL=strSQL+" ORDER BY M.MODULE_ID,A.HIERARCHY_ID,B.SR_NO ";
                
                rsHierarchy=data.getResult(strSQL);
                
                try {
                    
                    
                    rsHierarchy.first();
                    
                    if(rsHierarchy.getRow()>0) {
                        PrevHierarchyID=0;
                        SrNo=0;
                        
                        while(!rsHierarchy.isAfterLast()) {
                            HierarchyID=rsHierarchy.getInt("HIERARCHY_ID");
                            
                            SrNo++;
                            
                            if(HierarchyID!=PrevHierarchyID) {
                                //Print Hierarchy Header
                                writeLine(aFile," ");
                                writeLine(aFile," ");
                                writeLine(aFile,"Hierarchy Name : "+rsHierarchy.getString("HIERARCHY_NAME"));
                                writeLine(aFile,EITLERPGLOBAL.Replicate("-", 100));
                                Line="Sr."+"  "+"User Name           "+"  "+"Department      "+"  "+"Creator   "+"  "+"Final Approver";
                                writeLine(aFile,Line);
                                writeLine(aFile,EITLERPGLOBAL.Replicate("-", 100));
                                
                                SrNo=1;
                            }
                            
                            strSrNo=Integer.toString(SrNo);
                            strSrNo=EITLERPGLOBAL.Replicate(" ", 3-strSrNo.length())+strSrNo;
                            
                            strUserName=rsHierarchy.getString("USER_NAME");
                            strUserName=strUserName+EITLERPGLOBAL.Replicate(" ", 20-strUserName.length());
                            
                            strDept=rsHierarchy.getString("DEPT_DESC");
                            strDept=strDept+EITLERPGLOBAL.Replicate(" ",15-strDept.length());
                            
                            strCreator="          ";
                            if(rsHierarchy.getInt("CREATOR")==1) {
                                strCreator="YES       ";
                            }
                            
                            
                            strFinalApprover="          ";
                            if(rsHierarchy.getInt("FINAL_APPROVER")==1) {
                                strFinalApprover="YES       ";
                            }
                            
                            
                            Line=strSrNo+"  "+strUserName+"  "+strDept+"  "+strCreator+"  "+strFinalApprover;
                            
                            writeLine(aFile, Line);
                            
                            PrevHierarchyID=HierarchyID;
                            
                            rsHierarchy.next();
                        }
                        
                    }
                }
                catch(Exception c) {
                    
                }
                
                rsModule.next();
            }
            
            JOptionPane.showMessageDialog(null,"File Created");
            
            aFile.close();
            
        }
        catch(Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    
    private void PrintHeader(BufferedWriter aFile) {
        String Title="";
        
        
        //Prints Page Header
        try {
            
            aFile.newLine();
            Title="SHRI DINESH MILLS LTD. , "+clsCompany.getCityName(EITLERPGLOBAL.gCompanyID);
            Title=EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2);
            
            aFile.write(LeftMargin+Title);
            aFile.newLine();
            aFile.newLine();
            
            Title="DEPARTMENTWISE HIERARCHIES";
            Title=EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2);
            
            aFile.write(LeftMargin+Title);
            aFile.newLine();
            
            Title="DATE :"+EITLERPGLOBAL.getCurrentDate();
            
            aFile.write(LeftMargin+Title);
            aFile.newLine();
            
            
            Title="DEPT  :"+clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.getComboCode(cmbDept));
            
            aFile.write(LeftMargin+Title);
            aFile.newLine();
            
            Title=EITLERPGLOBAL.Replicate("-",100);
            
            aFile.write(LeftMargin+Title);
            aFile.newLine();
            
            
            lineCounter=7;
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    
    private void writeLine(BufferedWriter aFile,String strLine) {
        //Writes line maintaining page length
        try {
            if(lineCounter>=64) {
                
                aFile.write(LeftMargin+EITLERPGLOBAL.Replicate("-",100));
                aFile.newLine();
                aFile.write(LeftMargin+"Page : "+pageCounter);
                aFile.newLine();
                
                aFile.write("\f");
                
                pageCounter++;
                
                
                PrintHeader(aFile);
            }
            
            aFile.write(LeftMargin+strLine);
            aFile.newLine();
            lineCounter++;
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void newPage(BufferedWriter aFile) {
        //Writes line maintaining page length
        try {
            
            while(lineCounter<=70) {
                aFile.write(" ");
                aFile.newLine();
                
                lineCounter++;
            }
            
            PrintHeader(aFile);
            
        }
        catch(Exception e) {
            
        }
    }
    
    
    
    
    
}
