/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */
 
/**  
 *
 * @author  nhpatel
 */
/*<APPLET CODE=FrmWarehouse.class HEIGHT=400 WIDTH=600></APPLET>*/
package EITLERP;

import javax.swing.*;
import java.awt.*;
import java.net.*;
import java.sql.*;
import java.text.*;
import java.util.*;
 
public class FrmWarehouse extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsWarehouse ObjWarehouse;
    
    /** Creates new form frmTemplate */
    public FrmWarehouse() {
        System.gc();
        setSize(600,400);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
       //--- Create instance of Item Object --
        ObjWarehouse=new clsWarehouse();
        
        if(ObjWarehouse.LoadData())
        {
            ShowMessage("Please wait data loading ......");
            SetFields(false); 
            ObjWarehouse.MoveFirst();
            DisplayData();
            Generate_List();
            //------- Set the menu for User rights ----- //
            SetMenuForRights();
            ShowMessage("Ready ........");
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Error loading warehouse data. Error is "+ObjWarehouse.LastError);
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtWarehouseCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtWarehouseName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtResponsibleID = new javax.swing.JTextField();
        cmdFind = new javax.swing.JButton();
        txtResponsibleName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListWarehouse = new javax.swing.JList();
        lblStatus = new javax.swing.JLabel();
        
        getContentPane().setLayout(null);
        
        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdTop);
        
        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdBack);
        
        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdNext);
        
        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdLast);
        
        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdNew);
        
        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdEdit);
        
        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdDelete);
        
        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdSave);
        
        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdCancel);
        
        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdFilter);
        
        cmdPreview.setToolTipText("Preview");
        ToolBar.add(cmdPreview);
        
        cmdPrint.setToolTipText("Print");
        ToolBar.add(cmdPrint);
        
        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdExit);
        
        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 570, 40);
        
        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Warehouse Master");
        jLabel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 40, 570, 25);
        
        jLabel2.setText("Warehouse ID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(210, 110, 90, 15);
        
        txtWarehouseCode.setNextFocusableComponent(txtWarehouseName);
        txtWarehouseCode.setEnabled(false);
        txtWarehouseCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtWarehouseCodeFocusGained(evt);
            }
        });
        
        getContentPane().add(txtWarehouseCode);
        txtWarehouseCode.setBounds(330, 110, 80, 19);
        
        jLabel3.setText("Warehouse Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(210, 140, 107, 15);
        
        txtWarehouseName.setNextFocusableComponent(cmdFind);
        txtWarehouseName.setEnabled(false);
        txtWarehouseName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtWarehouseNameFocusGained(evt);
            }
        });
        
        getContentPane().add(txtWarehouseName);
        txtWarehouseName.setBounds(330, 140, 230, 19);
        
        jLabel4.setText("Responsible Person");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(210, 170, 120, 15);
        
        txtResponsibleID.setNextFocusableComponent(cmdFind);
        txtResponsibleID.setEnabled(false);
        txtResponsibleID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtResponsibleIDFocusGained(evt);
            }
        });
        
        getContentPane().add(txtResponsibleID);
        txtResponsibleID.setBounds(330, 170, 80, 19);
        
        cmdFind.setText("Find ...");
        cmdFind.setNextFocusableComponent(txtWarehouseCode);
        cmdFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFindActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdFind);
        cmdFind.setBounds(420, 170, 80, 20);
        
        txtResponsibleName.setEnabled(false);
        getContentPane().add(txtResponsibleName);
        txtResponsibleName.setBounds(330, 200, 230, 19);
        
        ListWarehouse.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListWarehouse.setToolTipText("Select Warehouse Name from list");
        ListWarehouse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ListWarehouseFocusGained(evt);
            }
        });
        ListWarehouse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListWarehouseMouseClicked(evt);
            }
        });
        
        jScrollPane1.setViewportView(ListWarehouse);
        
        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 70, 190, 270);
        
        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 350, 610, 22);
        
    }//GEN-END:initComponents

    private void ListWarehouseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ListWarehouseFocusGained
        // TODO add your handling code here:
        ShowMessage("Select Warehouse Name for all details ......");
    }//GEN-LAST:event_ListWarehouseFocusGained

    private void txtResponsibleIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtResponsibleIDFocusGained
        // TODO add your handling code here:
        ShowMessage("Select Responsible Person ID from given button in right  ......");
    }//GEN-LAST:event_txtResponsibleIDFocusGained

    private void txtWarehouseNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWarehouseNameFocusGained
        // TODO add your handling code here:
         ShowMessage("Enter Warehouse Name......");
    }//GEN-LAST:event_txtWarehouseNameFocusGained

    private void txtWarehouseCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWarehouseCodeFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Warehouse ID ......");
    }//GEN-LAST:event_txtWarehouseCodeFocusGained

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void ListWarehouseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListWarehouseMouseClicked
        // TODO add your handling code here:
        EITLTreeModel aData=(EITLTreeModel)ListWarehouse.getModel().getElementAt(ListWarehouse.getSelectedIndex());
        
        /*ObjWarehouse.Filter(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND TRIM(WAREHOUSE_ID)='"+aData.Key+"'");
        DisplayData();
        ObjWarehouse.Filter(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+"");*/
        ObjWarehouse.Find(aData.Key);
        DisplayData();
    }//GEN-LAST:event_ListWarehouseMouseClicked

    private void cmdFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFindActionPerformed
        // TODO add your handling code here:
 
        LOV aList=new LOV();
 
        aList.SQL="SELECT USER_ID,USER_NAME FROM D_COM_USER_MASTER ORDER BY USER_ID";
        aList.ReturnCol=1;
        aList.ShowReturnCol=true;
        aList.DefaultSearchOn=2;
 
        if(aList.ShowLOV())
        {
          String UserID = (String) aList.ReturnVal;
          long User = (long) Long.parseLong(UserID);
          txtResponsibleID.setText(UserID);
          txtResponsibleName.setText((String) clsUser.getUserName(EITLERPGLOBAL.gCompanyID,User));
        }
        else
        {
         JOptionPane.showMessageDialog(null,"Cancelled");
        }
 
    }//GEN-LAST:event_cmdFindActionPerformed

    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed

    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed

    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed

    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed

    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed

    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        Delete();
    }//GEN-LAST:event_cmdDeleteActionPerformed

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        //Find();        
    }//GEN-LAST:event_cmdFilterActionPerformed

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();        
    }//GEN-LAST:event_cmdExitActionPerformed

    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ListWarehouse;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdFind;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdTop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtResponsibleID;
    private javax.swing.JTextField txtResponsibleName;
    private javax.swing.JTextField txtWarehouseCode;
    private javax.swing.JTextField txtWarehouseName;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar()
 {
     //Puts toolbar in enable mode
     cmdTop.setEnabled(true);
     cmdBack.setEnabled(true);
     cmdNext.setEnabled(true);
     cmdLast.setEnabled(true);
     cmdNew.setEnabled(true);
     cmdEdit.setEnabled(true);
     cmdDelete.setEnabled(true);
     cmdSave.setEnabled(false);
     cmdCancel.setEnabled(false);
     cmdFilter.setEnabled(true);
     cmdPreview.setEnabled(true);
     cmdPrint.setEnabled(true);
     cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar()
 {
     //Puts toolbar in enable mode
     cmdTop.setEnabled(false);
     cmdBack.setEnabled(false);
     cmdNext.setEnabled(false);
     cmdLast.setEnabled(false);
     cmdNew.setEnabled(false);
     cmdEdit.setEnabled(false);
     cmdDelete.setEnabled(false);
     cmdSave.setEnabled(true);
     cmdCancel.setEnabled(true);
     cmdFilter.setEnabled(false);
     cmdPreview.setEnabled(false);
     cmdPrint.setEnabled(false);
     cmdExit.setEnabled(false);
    }

private void ClearFields()
{
    
    txtWarehouseCode.setText("");
    txtWarehouseName.setText("");
    txtResponsibleID.setText("");
    txtResponsibleName.setText("");
}

  private void SetFields(boolean pStat)
  {
      txtWarehouseCode.setEnabled(pStat); 
      txtWarehouseName.setEnabled(pStat);
      txtResponsibleID.setEnabled(pStat);
      txtResponsibleName.setEnabled(pStat);
      cmdFind.setEnabled(pStat);
  }    
    //Didplay data on the Screen
 private void DisplayData()
 {
     long UserID = (long) ObjWarehouse.getAttribute("RESPONSIBLE_PERSON").getVal();
     txtWarehouseCode.setText((String)ObjWarehouse.getAttribute("WAREHOUSE_ID").getObj()) ;
     txtWarehouseName.setText((String)ObjWarehouse.getAttribute("WAREHOUSE_NAME").getObj());
     txtResponsibleID.setText(Double.toString(ObjWarehouse.getAttribute("RESPONSIBLE_PERSON").getVal()));
     txtResponsibleName.setText((String) clsUser.getUserName(EITLERPGLOBAL.gCompanyID,UserID));
 }
    
    //Sets data to the Class Object
    private void SetData()
 {
      ObjWarehouse.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
      ObjWarehouse.setAttribute("WAREHOUSE_ID",txtWarehouseCode.getText());
      ObjWarehouse.setAttribute("WAREHOUSE_NAME",txtWarehouseName.getText());     
      ObjWarehouse.setAttribute("RESPONSIBLE_PERSON",Double.parseDouble(txtResponsibleID.getText()));
      if(EditMode==EITLERPGLOBAL.ADD)
      {
          ObjWarehouse.setAttribute("CREATED_BY",EITLERPGLOBAL.gUserID);
          ObjWarehouse.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
      }
      else
      {
          ObjWarehouse.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gUserID);
          ObjWarehouse.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
      }
  }
    
  private void SetMenuForRights()
  {
   // --- Add Rights --
   if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,111))
   {
      cmdNew.setEnabled(true);
   }
   else
   {
       cmdNew.setEnabled(false);
   }
      
   // --- Edit Rights --
   if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,112))
   {
      cmdEdit.setEnabled(true);
   }
   else
   {
       cmdEdit.setEnabled(false);
   }
   
   // --- Delete Rights --
   if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,113))
   {
      cmdDelete.setEnabled(true);
   }
   else
   {
      cmdDelete.setEnabled(false);
   }
   
   // --- Print Rights --
   if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,114))
   {
      cmdPreview.setEnabled(true);
      cmdPrint.setEnabled(true);
   }
   else
   {
      cmdPreview.setEnabled(false);
      cmdPrint.setEnabled(false);
   }
   }

  private void Cancel()
  {
      DisplayData();
      EditMode=0;
      SetFields(false);
      EnableToolbar();
      ShowMessage("Ready ........");
  }
  
  private void MoveFirst()
  {
    ObjWarehouse.MoveFirst();
    DisplayData();
  }
  
  private void MovePrevious()
  {
    ObjWarehouse.MovePrevious();
    DisplayData();
  }
  
  private void MoveNext()
  {
    ObjWarehouse.MoveNext();
    DisplayData();
  }
  
  private void MoveLast()
  {
    ObjWarehouse.MoveLast();
    DisplayData();
  }
  
  private void Add()
  {
     EditMode=EITLERPGLOBAL.ADD;
     DisableToolbar();
     SetFields(true);
     ClearFields();
     txtWarehouseCode.requestFocus();
  }
  
  private void Edit()
  {
     EditMode=EITLERPGLOBAL.EDIT;
     DisableToolbar();
     SetFields(true);
     txtWarehouseCode.requestFocus();
  }
  
  
  private void Delete()
  {
       if(ObjWarehouse.Delete())
       {
        MoveLast();
        DisplayData();
       }
       else
       {
          JOptionPane.showMessageDialog(null,"Error occured while deleting. Error is"+ObjWarehouse.LastError);
       }
  }

  private void Save()
  {
      // --------- Form Level Validations ------------ //
      
      if(txtWarehouseCode.getText().equals(""))
      {
          JOptionPane.showMessageDialog(null,"Please enter Warehouse Code");
          return;
      }
      
      if(txtWarehouseName.getText().equals(""))
      {
          JOptionPane.showMessageDialog(null,"Please enter Warehouse Name");
          return;
      }

      SetData();
      if(EditMode==EITLERPGLOBAL.ADD)
      {
        if(ObjWarehouse.Add())
        {
            MoveLast();
            DisplayData();
        }
        else
        {
          JOptionPane.showMessageDialog(null,"Error occured while saving item. Error is"+ObjWarehouse.LastError);
          return;
        }
      }      

      if(EditMode==EITLERPGLOBAL.EDIT)
      {
       if(ObjWarehouse.Edit())   
       {
        //Nothing to do
       }
       else
       {
        JOptionPane.showMessageDialog(null,"Error occured while saving item. Error is"+ObjWarehouse.LastError);
        return;
       }
      }
      
      EditMode=0;
      SetFields(false);
      EnableToolbar();
      SetMenuForRights();
      Generate_List();
      ShowMessage("Ready ......");
  }    
 
 private void Generate_List()
 {
   HashMap List=new HashMap();
   String strCondition="";

   EITLListModel aModel=new EITLListModel();
   ListWarehouse.removeAll();
   ListWarehouse.setModel(aModel);
   EITLTreeModel aData;
    
   List = clsWarehouse.getList(strCondition);
   for(int i=1;i<=List.size();i++)
   {
       clsWarehouse ObjWare=(clsWarehouse) List.get(Integer.toString(i));
       aData=new EITLTreeModel((String)ObjWare.getAttribute("WAREHOUSE_ID").getObj(),(String)ObjWare.getAttribute("WAREHOUSE_NAME").getObj());
       aModel.addElement(aData);
    }
  }

 private void ShowMessage(String pMessage)
 {
     lblStatus.setText(pMessage);
 }
 
}