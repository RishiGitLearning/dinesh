/*
 * frmRptStockStatement.java
 *
 * Created on August 13, 2005, 3:21 PM
 */

package EITLERP.bkup;

/**
 *
 * @author  root
 */
import EITLERP.*;
import java.sql.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import EITLERP.Utils.*;
import java.text.*;

public class frmRptStockList extends javax.swing.JApplet {
    
    private EITLComboModel cmbBaseModel=new EITLComboModel();
    
    private int lineCounter=0;
    private int pageCounter=1;
    
    private String LeftMargin=EITLERPGLOBAL.Replicate(" ", 5);
    
    String strFromDate=EITLERPGLOBAL.FinFromDate;
    //String strFromDate="01/04/2005";
    
    private double pageTotal=0;
    private double cumTotal=0;
    private double finalTotal=0;
    
    
    /** Initializes the applet frmRptStockStatement */
    public void init() {
        setSize(576, 425);
        initComponents();
        Bar.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromItemID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToItemID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        Bar = new javax.swing.JProgressBar();
        lblItem = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        chkPrint = new javax.swing.JCheckBox();
        chkReprocess = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        opgItemwise = new javax.swing.JRadioButton();
        opgLocationwise = new javax.swing.JRadioButton();
        chkValue = new javax.swing.JCheckBox();
        txtValueFrom = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtValueTo = new javax.swing.JTextField();
        txtQtyTo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtQtyFrom = new javax.swing.JTextField();
        chkQty = new javax.swing.JCheckBox();
        chkIncludeNonMoving = new javax.swing.JCheckBox();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("STOCK LIST PRINTING");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(8, 8, 187, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 0, 581, 30);

        jLabel2.setText("From Item Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(12, 48, 112, 15);

        getContentPane().add(txtFromItemID);
        txtFromItemID.setBounds(122, 46, 112, 20);

        jLabel3.setText("To Item Code");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(12, 78, 112, 15);

        getContentPane().add(txtToItemID);
        txtToItemID.setBounds(122, 76, 112, 20);

        jLabel4.setText("As on Date");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(14, 167, 77, 15);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(95, 165, 112, 20);

        cmdPrint.setText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPrint);
        cmdPrint.setBounds(429, 51, 119, 29);

        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExit);
        cmdExit.setBounds(430, 89, 116, 30);

        getContentPane().add(Bar);
        Bar.setBounds(11, 384, 200, 18);

        lblItem.setText(".");
        getContentPane().add(lblItem);
        lblItem.setBounds(11, 366, 383, 15);

        jLabel6.setText("(Keep both item code blank for all items)");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(15, 105, 260, 15);

        jLabel7.setText("Save as ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(21, 304, 59, 15);

        getContentPane().add(txtFile);
        txtFile.setBounds(79, 302, 270, 20);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(351, 302, 35, 21);

        chkPrint.setText("Print the stock ledger");
        getContentPane().add(chkPrint);
        chkPrint.setBounds(10, 331, 183, 23);

        chkReprocess.setText("Re Process Stock Valuation");
        getContentPane().add(chkReprocess);
        chkReprocess.setBounds(262, 334, 205, 23);

        jLabel5.setText("Location");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(26, 139, 63, 15);

        txtLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLocationKeyPressed(evt);
            }
        });

        getContentPane().add(txtLocation);
        txtLocation.setBounds(94, 137, 112, 20);

        opgItemwise.setSelected(true);
        opgItemwise.setText("Itemwise");
        buttonGroup1.add(opgItemwise);
        getContentPane().add(opgItemwise);
        opgItemwise.setBounds(16, 270, 114, 23);

        opgLocationwise.setText("Locationwise");
        buttonGroup1.add(opgLocationwise);
        getContentPane().add(opgLocationwise);
        opgLocationwise.setBounds(135, 270, 114, 23);

        chkValue.setText("Value From");
        chkValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkValueStateChanged(evt);
            }
        });

        getContentPane().add(chkValue);
        chkValue.setBounds(15, 203, 100, 23);

        txtValueFrom.setEnabled(false);
        getContentPane().add(txtValueFrom);
        txtValueFrom.setBounds(117, 204, 112, 20);

        jLabel8.setText("To");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(234, 207, 20, 15);

        txtValueTo.setEnabled(false);
        getContentPane().add(txtValueTo);
        txtValueTo.setBounds(258, 204, 112, 20);

        txtQtyTo.setEnabled(false);
        getContentPane().add(txtQtyTo);
        txtQtyTo.setBounds(258, 232, 112, 20);

        jLabel9.setText("To");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(234, 235, 20, 15);

        txtQtyFrom.setEnabled(false);
        getContentPane().add(txtQtyFrom);
        txtQtyFrom.setBounds(117, 232, 112, 20);

        chkQty.setText("Qty");
        chkQty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkQtyStateChanged(evt);
            }
        });

        getContentPane().add(chkQty);
        chkQty.setBounds(15, 231, 100, 23);

        chkIncludeNonMoving.setText("Include only Transacted Items");
        getContentPane().add(chkIncludeNonMoving);
        chkIncludeNonMoving.setBounds(262, 377, 230, 23);

    }//GEN-END:initComponents
    
    private void chkQtyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkQtyStateChanged
        // TODO add your handling code here:
        try {
            
            txtQtyFrom.setEnabled(chkQty.isSelected());
            txtQtyTo.setEnabled(chkQty.isSelected());
        }
        catch(Exception e) {
            
        }
        
    }//GEN-LAST:event_chkQtyStateChanged
    
    private void chkValueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkValueStateChanged
        // TODO add your handling code here:
        try {
            
            txtValueFrom.setEnabled(chkValue.isSelected());
            txtValueTo.setEnabled(chkValue.isSelected());
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_chkValueStateChanged
    
    private void txtLocationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLocationKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT LOCATION_ID,LOCATION_NAME FROM D_INV_LOCATION_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ORDER BY LOCATION_ID";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtLocation.setText(aList.ReturnVal);
            }
        }
        
    }//GEN-LAST:event_txtLocationKeyPressed
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null," W "+getWidth()+" H "+getHeight());
    }//GEN-LAST:event_formMouseClicked
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileDialog FileDialog=new FileDialog(findParentFrame(this));
        FileDialog.show();
        txtFile.setText(FileDialog.getDirectory()+FileDialog.getFile());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
        GenerateReportWAvg();
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkIncludeNonMoving;
    private javax.swing.JCheckBox chkPrint;
    private javax.swing.JCheckBox chkQty;
    private javax.swing.JCheckBox chkReprocess;
    private javax.swing.JCheckBox chkValue;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblItem;
    private javax.swing.JRadioButton opgItemwise;
    private javax.swing.JRadioButton opgLocationwise;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromItemID;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtQtyFrom;
    private javax.swing.JTextField txtQtyTo;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtToItemID;
    private javax.swing.JTextField txtValueFrom;
    private javax.swing.JTextField txtValueTo;
    // End of variables declaration//GEN-END:variables
    
    
    
    
    private void GenerateReportWAvg1() {
        new Thread() {
            public void run() {
                DecimalFormat dFormat=new DecimalFormat("###0.00");
                
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource;
                ResultSet rsClosingHeader,rsClosingDetail;
                ResultSet rsItemGroup;
                Statement stClosingHeader,stClosingDetail;
                
                String strSQL="";
                String strCondition="";
                String strOrder="";
                
                Connection tmpConn;
                tmpConn=data.getConn();
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                
                double srcClosingQty=0;
                double srcClosingValue=0;
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                String Location="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                String StockEntryDate="";
                
                
                try {
                    
                    if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    if(opgItemwise.isSelected()) {
                        strOrder=" ORDER BY ITEM_ID ";
                    }
                    else {
                        strOrder=" ORDER BY LOCATION_ID ";
                    }
                    
                    Location=txtLocation.getText().trim();
                    
                    //Prepare our temp table for temporary query //
                    data.Execute("DELETE FROM D_INV_ITEM_MASTER_TMP");
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    
                    
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    //strCondition+=" SELECT DISTINCT(ITEM_ID) ITEM_ID FROM D_INV_ITEM_MASTER WHERE APPROVED=1 AND CANCELLED=0 ";
                    
                    data.Execute(strCondition);
                    
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM STOCK_LEDGER_TEMP) ";
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM D_INV_ITEM_MASTER_TMP) ";
                    
                    strCondition="";
                    
                    if(!txtLocation.getText().trim().equals("")) {
                        strCondition=strCondition+" AND LOCATION_ID='"+Location+"' ";
                    }
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT COUNT(*) AS THECOUNT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //===================================================================//
                    //====================== PROCESS WEIGHTED AVERAGE   =================//
                    //===================================================================//
                    
                    Bar.setMaximum(Max);
                    Bar.setMinimum(Min);
                    Bar.setValue(0);
                    Bar.repaint();
                    
                    
                    lblItem.setText("Starting Process");
                    lblItem.repaint();
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    if(rsItem.getRow()<=0) {
                        JOptionPane.showMessageDialog(null,"No transactions found in given period");
                        lblItem.setVisible(false);
                        Bar.setVisible(false);
                        return;
                    }
                    
                    //Loop through each item
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        
                        lblItem.setText("Processing Item : "+ItemID);
                        lblItem.repaint();
                        
                        OpeningQty=0;
                        OpeningRate=0;
                        OpeningValue=0;
                        
                        //First Find the latest cut-off closing stock.
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                            OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                            
                            if(OpeningQty==0) {
                                OpeningRate=0;
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                //OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            }
                        }
                        
                        
                        
                        //Get the transactions between date
                        strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS T ORDER,B.QTY,B.ISSUE_VALUE AS VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                        
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            while(!rsTmp.isAfterLast()) {
                                
                                String Operation=rsTmp.getString("OPERATION");
                                
                                strDocNo=rsTmp.getString("DOC_NO");
                                int SrNo=rsTmp.getInt("SR_NO");
                                
                                if(Operation.equals("+")) {
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                }
                                
                                
                                if(Operation.equals("-")) {
                                    
                                    if(OpeningQty!=0) {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    else {
                                        OpeningRate=0;
                                    }
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("QTY"),2);
                                    OpeningValue=OpeningValue- EITLERPGLOBAL.round((rsTmp.getDouble("QTY")*OpeningRate),2);
                                    
                                    //Update Issue as per the weighted avg. rate
                                    data.Execute("UPDATE D_INV_ISSUE_DETAIL SET ISSUE_VALUE="+EITLERPGLOBAL.round((rsTmp.getDouble("QTY")*OpeningRate),2)+",RATE="+OpeningRate+" WHERE ISSUE_NO='"+strDocNo+"' AND SR_NO="+SrNo);
                                    
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                }
                                
                                
                                rsTmp.next();
                                
                            }
                            
                        }
                        
                        rsItem.next();
                    }
                    //===========================END WEIGHTED AVG. PROCESS ================================//
                    
                    
                    
                    
                    //==========Get the Data from Item Master for ===============//
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    PrintHeader(aFile);
                    
                    
                    rsItemGroup=data.getResult("SELECT * FROM D_COM_ITEM_CATEGORY WHERE MAIN_CATEGORY_ID<=2");
                    rsItemGroup.first();
                    
                    while(!rsItemGroup.isAfterLast()) {
                        
                        
                        //========= Create a text file ==============//
                        strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                        ResultSet rsCount=data.getResult(strSQL);
                        rsCount.first();
                        
                        Bar.setMaximum(rsCount.getInt("THECOUNT"));
                        Bar.setMinimum(0);
                        
                        strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT,LOCATION_ID FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" "+strOrder;
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        //Loop through each item
                        while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                            
                            Bar.setValue(rsItem.getRow());
                            Bar.repaint();
                            
                            //Fill Up the variables first
                            
                            ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                            ItemName=rsItem.getString("ITEM_DESCRIPTION");
                            
                            Location=rsItem.getString("LOCATION_ID");
                            ItemID=ItemID+EITLERPGLOBAL.Replicate(" ", 15-ItemID.length());
                            
                            
                            lblItem.setText(ItemID);
                            lblItem.repaint();
                            
                            if(ItemName.length()>20) {
                                ItemName=ItemName.substring(0,20);
                            }
                            else {
                                if(ItemName.length()<20) {
                                    ItemName=ItemName+EITLERPGLOBAL.Replicate(" ", 20-ItemName.length());
                                }
                            }
                            
                            UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                            UnitName=UnitName+EITLERPGLOBAL.Replicate(" ", 3-UnitName.trim().length());
                            
                            if(rsItem.getRow()>1) {
                                //newPage(aFile);
                            }
                            
                            
                            //Now Decide the Opening Stock and Value
                            OpeningQty=0;
                            OpeningValue=0;
                            
                            strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningQty=rsTmp.getDouble("OPENING_QTY");
                                OpeningValue=rsTmp.getDouble("OPENING_VALUE");
                                
                                if(OpeningQty==0) {
                                    OpeningValue=0;
                                    OpeningRate=0;
                                }
                                else {
                                    //OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                                }
                            }
                            
                            // Get the Inwards from opening stock date to upto from date
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(LANDED_RATE*QTY) IS NULL,0,SUM(LANDED_RATE*QTY)) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND B.ITEM_ID='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_VALUE"),2);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),2);
                            }
                            
                            
                            // Get the Issues from opening stock date to upto from date
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(ISSUE_VALUE) IS NULL,0,SUM(ISSUE_VALUE)) AS SUM_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND B.ITEM_CODE='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),2);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),2);
                            }
                            
                            
                            //we have Opening Stock and Qty.
                            //Take the Average Rate
                            if(OpeningQty==0) {
                                OpeningRate=0;
                                OpeningValue=0;
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                            }
                            
                            //Print the Opening Stock
                            strOpeningQty=Double.toString(OpeningQty);
                            strOpeningQty=EITLERPGLOBAL.Replicate(" ", 6-strOpeningQty.length())+strOpeningQty;
                            strOpeningRate=Double.toString(OpeningRate);
                            strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                            strOpeningValue=Double.toString(OpeningValue);
                            strOpeningValue=EITLERPGLOBAL.Replicate(" ",11-strOpeningValue.length())+strOpeningValue;
                            
                            //Get the transactions between date
                            strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,B.QTY,B.LANDED_RATE*B.QTY AS VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+" UNION ";
                            strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,B.QTY,B.ISSUE_VALUE AS VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+"  ORDER BY DOC_DATE";
                            
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    
                                    String Operation=rsTmp.getString("OPERATION");
                                    
                                    strDocNo=rsTmp.getString("DOC_NO");
                                    strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                    strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                    
                                    if(Operation.equals("+")) {
                                        strRcptQty=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                        strRcptValue=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                        
                                        if(rsTmp.getDouble("QTY")==0) {
                                            strRcptRate="0";
                                        }
                                        else {
                                            strRcptRate=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                        }
                                        
                                        strRcptQty=EITLERPGLOBAL.Replicate(" ", 6-strRcptQty.length())+strRcptQty;
                                        strRcptRate=EITLERPGLOBAL.Replicate(" ", 11-strRcptRate.length())+strRcptRate;
                                        strRcptValue=EITLERPGLOBAL.Replicate(" ", 11-strRcptValue.length())+strRcptValue;
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                        OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                        
                                        if(OpeningQty==0) {
                                            OpeningRate=0;
                                            OpeningValue=0;
                                        }
                                        else {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                        
                                        strIssueQty=EITLERPGLOBAL.Replicate(" ", 6);
                                        strIssueRate=EITLERPGLOBAL.Replicate(" ", 11);
                                        strIssueValue=EITLERPGLOBAL.Replicate(" ", 11);
                                        
                                        strClosingQty=Double.toString(OpeningQty);
                                        strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                        
                                        strClosingRate=Double.toString(OpeningRate);
                                        strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                        
                                        strClosingValue=Double.toString(OpeningValue);
                                        strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                        
                                        
                                    }
                                    
                                    
                                    
                                    
                                    if(Operation.equals("-")) {
                                        
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        
                                        strIssueQty=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                        strIssueValue=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("QTY")*OpeningRate,2));
                                        
                                        if(rsTmp.getDouble("QTY")==0) {
                                            strIssueRate="0";
                                        }
                                        else {
                                            strIssueRate=Double.toString(EITLERPGLOBAL.round((rsTmp.getDouble("QTY")*OpeningRate)/rsTmp.getDouble("QTY"),2));
                                        }
                                        
                                        strRcptQty=EITLERPGLOBAL.Replicate(" ", 6);
                                        strRcptRate=EITLERPGLOBAL.Replicate(" ", 11);
                                        strRcptValue=EITLERPGLOBAL.Replicate(" ", 11);
                                        
                                        strIssueQty=EITLERPGLOBAL.Replicate(" ", 6-strIssueQty.length())+strIssueQty;
                                        strIssueRate=EITLERPGLOBAL.Replicate(" ", 11-strIssueRate.length())+strIssueRate;
                                        strIssueValue=EITLERPGLOBAL.Replicate(" ", 11-strIssueValue.length())+strIssueValue;
                                        
                                    /*OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("VALUE"),2);
                                     
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }*/
                                        
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("QTY"),2);
                                        OpeningValue=OpeningValue- EITLERPGLOBAL.round((rsTmp.getDouble("QTY")*OpeningRate),2);
                                        
                                        if(OpeningQty==0) {
                                            OpeningRate=0;
                                            OpeningValue=0;
                                        }
                                        else {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                        
                                        strClosingQty=Double.toString(OpeningQty);
                                        strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                        
                                        strClosingRate=Double.toString(OpeningRate);
                                        strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                        
                                        strClosingValue=Double.toString(EITLERPGLOBAL.round(OpeningValue,2));
                                        strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                        
                                        data.Execute("UPDATE D_INV_ITEM_MASTER SET CLOSING_VALUE="+OpeningValue+" WHERE ITEM_ID='"+ItemID+"'");
                                    }
                                    
                                    
                                    rsTmp.next();
                                    
                                }
                            }
                            
                            if(OpeningQty==0) {
                                OpeningValue=0;
                                OpeningRate=0;
                            }
                            
                            strOpeningQty=dFormat.format(EITLERPGLOBAL.round(OpeningQty,2));
                            strOpeningQty=EITLERPGLOBAL.Replicate(" ", 8-strOpeningQty.length())+strOpeningQty;
                            strOpeningRate=dFormat.format(EITLERPGLOBAL.round(OpeningRate,2));
                            strOpeningRate=EITLERPGLOBAL.Replicate(" ", 13-strOpeningRate.length())+strOpeningRate;
                            strOpeningValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,2));
                            strOpeningValue=EITLERPGLOBAL.Replicate(" ",13-strOpeningValue.length())+strOpeningValue;
                            
                            // Write actual item entry here
                            writeLine(aFile,ItemID+" "+ItemName+" "+UnitName+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue+" "+Location);
                            
                            rsItem.next();
                        }
                        
                        rsItemGroup.next();
                    }
                    aFile.close();
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null,e.getMessage());
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                    
                }
                
            };
        }.start();
    }
    
    
    private void PrintHeader(BufferedWriter aFile) {
        String Title="";
        
        
        //Prints Page Header
        try {
            
            Title="SHRI DINESH MILLS LTD. , "+clsCompany.getCityName(EITLERPGLOBAL.gCompanyID);
            Title=EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title="STOCK LIST";
            Title=EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"AS ON DATE "+txtToDate.getText();
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+EITLERPGLOBAL.Replicate("-",100);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"Item Code      "+" "+"Description         "+"   "+"UOM"+" "+"     Qty"+" "+"         Rate"+" "+"        Value"+" "+"Location  ";
            
            aFile.write(Title);
            aFile.newLine();
            
            
            Title=LeftMargin+"               "+" "+"                    "+" "+"      "+" "+"  Z. Qty"+" ";
            
            aFile.write(Title);
            aFile.newLine();
            
            
            Title=LeftMargin+EITLERPGLOBAL.Replicate("-",100);
            
            aFile.write(Title);
            aFile.newLine();
            
            lineCounter=7;
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    
    
    private void GenerateReportWAvg() {
        
        new Thread() {
            
            public void run() {
                DecimalFormat dFormat=new DecimalFormat("###0.00");
                
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource;
                ResultSet rsClosingHeader,rsClosingDetail;
                ResultSet rsItemGroup;
                Statement stClosingHeader,stClosingDetail;
                
                String strSQL="";
                String strCondition="";
                String strOrder="";
                
                Connection tmpConn;
                tmpConn=data.getConn();
                
                double ValueFrom = EITLERPGLOBAL.ConvertToDouble(txtValueFrom.getText());
                double ValueTo = EITLERPGLOBAL.ConvertToDouble(txtValueTo.getText());
                double QtyFrom = EITLERPGLOBAL.ConvertToDouble(txtQtyFrom.getText());
                double QtyTo = EITLERPGLOBAL.ConvertToDouble(txtQtyTo.getText());
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                int ItemCount=0;
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardZeroQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardZeroQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingZeroQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueZeroQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                boolean TransactionsFound=true;
                
                double srcClosingQty=0;
                double srcClosingValue=0;
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                String Location="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                String StockEntryDate="";
                
                pageTotal=0;
                cumTotal=0;
                finalTotal=0;
                
                
                try {
                    
                    if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    if(opgItemwise.isSelected()) {
                        strOrder=" ORDER BY ITEM_ID ";
                    }
                    else {
                        strOrder=" ORDER BY LOCATION_ID ";
                    }
                    
                    Location=txtLocation.getText().trim();
                    
                    
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    
                    data.Execute(strCondition);
                    
                    
                    strCondition="";
                    
                    if(!txtLocation.getText().trim().equals("")) {
                        strCondition=strCondition+" AND LOCATION_ID LIKE '"+Location+"%' ";
                    }
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                        strFromDate=EITLERPGLOBAL.formatDate(rsTmp.getString("ENTRY_DATE"));
                    }
                    //================================================================//
                    
                    
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition+" GROUP BY A.ITEM_ID";
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //===================================================================//
                    //====================== PROCESS WEIGHTED AVERAGE   =================//
                    //===================================================================//
                    
                    Bar.setMaximum(Max);
                    Bar.setMinimum(Min);
                    Bar.setValue(0);
                    Bar.repaint();
                    
                    
                    lblItem.setText("Starting Process");
                    lblItem.repaint();
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition+" GROUP BY A.ITEM_ID";
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        
                        lblItem.setText("Processing Item : "+ItemID);
                        lblItem.repaint();
                        
                        OpeningQty=0;
                        OpeningRate=0;
                        OpeningValue=0;
                        
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                            OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                            
                            if(OpeningQty==0) {
                                OpeningRate=0;
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                            }
                        }
                        
                        strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY AS ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+"  ORDER BY DOC_DATE";
                        
                        
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            while(!rsTmp.isAfterLast()) {
                                
                                String Operation=rsTmp.getString("OPERATION");
                                
                                strDocNo=rsTmp.getString("DOC_NO");
                                int SrNo=rsTmp.getInt("SR_NO");
                                
                                if(Operation.equals("+")) {
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                }
                                
                                
                                if(Operation.equals("-")) {
                                    double currentIssueValue=0;
                                    double currentIssueRate=0;
                                    double currentIssueQty=0;
                                    
                                    //========NEW CODE=========//
                                    currentIssueQty=rsTmp.getDouble("QTY");
                                    
                                    if(OpeningValue<0) {
                                        OpeningRate=0;
                                        OpeningValue=0;
                                    }
                                    else {
                                        if(OpeningQty>0) {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                            OpeningValue=OpeningValue- EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                        }
                                        else {
                                            OpeningRate=0;
                                            OpeningValue=OpeningValue-0;
                                        }
                                    }
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,2);
                                    currentIssueRate=OpeningRate;
                                    currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                    //=====END OF NEW CODE=====//
                                    
                                    data.Execute("UPDATE D_INV_ISSUE_DETAIL SET ISSUE_VALUE="+currentIssueValue+",RATE="+currentIssueRate+" WHERE ISSUE_NO='"+strDocNo+"' AND SR_NO="+SrNo);
                                    
                                    if(OpeningQty!=0) {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    else {
                                        OpeningRate=0;
                                    }
                                }
                                
                                rsTmp.next();
                            }
                        }
                        
                        rsItem.next();
                    }
                    //===========================END WEIGHTED AVG. PROCESS ================================//
                    
                    
                    //==========Get the Data from Item Master for ===============//
                    boolean Continue = false;
                    
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    PrintHeader(aFile);
                    
                    rsItemGroup=data.getResult("SELECT * FROM D_COM_ITEM_CATEGORY WHERE MAIN_CATEGORY_ID<=2 ORDER BY CATEGORY_ID");
                    rsItemGroup.first();
                    
                    if(rsItemGroup.getRow()>0) {
                        while(!rsItemGroup.isAfterLast()) {
                            
                            finalTotal=0;
                            String groupID=rsItemGroup.getString("CATEGORY_ID");
                            
                            //========= Create a text file ==============//
                            strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" AND SUBSTRING(ITEM_ID,1,"+groupID.length()+")='"+groupID+"' ";
                            ResultSet rsCount=data.getResult(strSQL);
                            rsCount.first();
                            
                            Bar.setMaximum(rsCount.getInt("THECOUNT"));
                            Bar.setMinimum(0);
                            
                            strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT,LOCATION_ID FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" AND SUBSTRING(ITEM_ID,1,"+groupID.length()+")='"+groupID+"' GROUP BY A.ITEM_ID "+strOrder;
                            rsItem=data.getResult(strSQL);
                            rsItem.first();
                            
                            ItemCount=0;
                            while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                                
                                ItemCount++;
                                
                                Bar.setValue(rsItem.getRow());
                                Bar.repaint();
                                
                                //Fill Up the variables first
                                ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                                ItemName=rsItem.getString("ITEM_DESCRIPTION");
                                
                                Location=rsItem.getString("LOCATION_ID");
                    
                                ItemID=ItemID+EITLERPGLOBAL.Replicate(" ", 15-ItemID.length());
                                
                                lblItem.setText(ItemID);
                                lblItem.repaint();
                                
                                if(ItemName.length()>20) {
                                    ItemName=ItemName.substring(0,20);
                                }
                                else {
                                    if(ItemName.length()<20) {
                                        ItemName=ItemName+EITLERPGLOBAL.Replicate(" ", 20-ItemName.length());
                                    }
                                }
                                
                                UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                                UnitName=UnitName+EITLERPGLOBAL.Replicate(" ", 3-UnitName.trim().length());
                                
                                OpeningQty=0;
                                OpeningValue=0;
                                
                                strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningQty=rsTmp.getDouble("OPENING_QTY");
                                    OpeningValue=rsTmp.getDouble("OPENING_VALUE");
                                    
                                    if(OpeningQty==0) {
                                        OpeningValue=0;
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                }
                                
                                strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(LANDED_RATE*QTY) IS NULL,0,SUM(LANDED_RATE*QTY)) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND B.ITEM_ID='"+ItemID+"'";
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_VALUE"),2);
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),2);
                                }
                                
                                strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY,IF(SUM(ZERO_VAL_QTY) IS NULL,0,SUM(ZERO_VAL_QTY)) AS SUM_ZERO_QTY, IF(SUM(ISSUE_VALUE) IS NULL,0,SUM(ISSUE_VALUE)) AS SUM_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND B.ITEM_CODE='"+ItemID+"'";
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),2);
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),2);
                                }
                                
                                
                                if(OpeningQty==0) {
                                    OpeningRate=0;
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                }
                                
                                strOpeningQty=dFormat.format(OpeningQty);
                                strOpeningQty=EITLERPGLOBAL.Replicate(" ", 6-strOpeningQty.length())+strOpeningQty;
                                strOpeningRate=dFormat.format(OpeningRate);
                                strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                                strOpeningValue=dFormat.format(OpeningValue);
                                strOpeningValue=EITLERPGLOBAL.Replicate(" ",11-strOpeningValue.length())+strOpeningValue;
                                
                                TransactionsFound=false;
                                
                                strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                                strSQL=strSQL+" UNION ";
                                strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                                strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                                
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    TransactionsFound=true;
                                    while(!rsTmp.isAfterLast()) {
                                        
                                        String Operation=rsTmp.getString("OPERATION");
                                        
                                        strDocNo=rsTmp.getString("DOC_NO");
                                        strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                        strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                        
                                        if(Operation.equals("+")) {
                                            strRcptQty=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                            strRcptValue=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                            
                                            if(rsTmp.getDouble("QTY")==0) {
                                                strRcptRate="0.00";
                                            }
                                            else {
                                                strRcptRate=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                            }
                                            
                                            strRcptQty=EITLERPGLOBAL.Replicate(" ", 6-strRcptQty.length())+strRcptQty;
                                            strRcptRate=EITLERPGLOBAL.Replicate(" ", 11-strRcptRate.length())+strRcptRate;
                                            strRcptValue=EITLERPGLOBAL.Replicate(" ", 11-strRcptValue.length())+strRcptValue;
                                            
                                            OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                            OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                            
                                            if(OpeningQty==0) {
                                                OpeningRate=0;
                                            }
                                            else {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                            }
                                            
                                            strIssueQty=EITLERPGLOBAL.Replicate(" ", 6);
                                            strIssueRate=EITLERPGLOBAL.Replicate(" ", 11);
                                            strIssueValue=EITLERPGLOBAL.Replicate(" ", 11);
                                            
                                            strClosingQty=dFormat.format(OpeningQty);
                                            strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                            
                                            strClosingRate=dFormat.format(OpeningRate);
                                            strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                            
                                            strClosingValue=dFormat.format(OpeningValue);
                                            strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                            
                                        }
                                        
                                        
                                        if(Operation.equals("-")) {
                                            double currentIssueValue=0;
                                            double currentIssueRate=0;
                                            double currentIssueQty=0;
                                            
                                            //========NEW CODE=========//
                                            currentIssueQty=rsTmp.getDouble("QTY");
                                            
                                            if(OpeningValue<0) {
                                                OpeningRate=0;
                                                OpeningValue=0;
                                            }
                                            else {
                                                if(OpeningQty>0) {
                                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                                    OpeningValue=OpeningValue- EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                                }
                                                else {
                                                    OpeningRate=0;
                                                    OpeningValue=OpeningValue-0;
                                                }
                                            }
                                            
                                            OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,2);
                                            
                                            currentIssueRate=OpeningRate;
                                            currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                            //=====END OF NEW CODE=====//
                                            
                                            
                                            strIssueQty=dFormat.format(EITLERPGLOBAL.round(currentIssueQty,2));
                                            strIssueValue=dFormat.format(EITLERPGLOBAL.round(currentIssueValue,2));
                                            strIssueRate=dFormat.format(EITLERPGLOBAL.round(currentIssueRate,2));
                                            
                                            strRcptQty=EITLERPGLOBAL.Replicate(" ", 7);
                                            strRcptRate=EITLERPGLOBAL.Replicate(" ", 12);
                                            strRcptValue=EITLERPGLOBAL.Replicate(" ", 12);
                                            
                                            strIssueQty=EITLERPGLOBAL.Replicate(" ", 7-strIssueQty.length())+strIssueQty;
                                            strIssueRate=EITLERPGLOBAL.Replicate(" ", 12-strIssueRate.length())+strIssueRate;
                                            strIssueValue=EITLERPGLOBAL.Replicate(" ", 12-strIssueValue.length())+strIssueValue;
                                            
                                            
                                            strClosingQty=dFormat.format(OpeningQty);
                                            strClosingQty=EITLERPGLOBAL.Replicate(" ", 7-strClosingQty.length())+strClosingQty;
                                            
                                            strClosingRate=dFormat.format(OpeningRate);
                                            strClosingRate=EITLERPGLOBAL.Replicate(" ", 12-strClosingRate.length())+strClosingRate;
                                            
                                            strClosingValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,2));
                                            strClosingValue=EITLERPGLOBAL.Replicate(" ",12-strClosingValue.length())+strClosingValue;
                                            
                                            data.Execute("UPDATE D_INV_ITEM_MASTER SET CLOSING_VALUE="+OpeningValue+" WHERE ITEM_ID='"+ItemID+"'");
                                            
                                            if(OpeningQty!=0) {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                            }
                                            else {
                                                OpeningRate=0;
                                            }
                                        }

                                        rsTmp.next();
                                    }
                                }
                                
                                if(OpeningQty==0) {
                                    OpeningValue=0;
                                }
                                
                                double OpeningZeroQty=0;
                                
                                String strOpeningZeroQty=dFormat.format(EITLERPGLOBAL.round(OpeningZeroQty,2));
                                strOpeningZeroQty=EITLERPGLOBAL.Replicate(" ", 8-strOpeningZeroQty.length())+strOpeningZeroQty;
                                
                                strOpeningQty=dFormat.format(EITLERPGLOBAL.round(OpeningQty,2));
                                strOpeningQty=EITLERPGLOBAL.Replicate(" ", 8-strOpeningQty.length())+strOpeningQty;
                                strOpeningRate=dFormat.format(EITLERPGLOBAL.round(OpeningRate,2));
                                strOpeningRate=EITLERPGLOBAL.Replicate(" ", 13-strOpeningRate.length())+strOpeningRate;
                                strOpeningValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,2));
                                strOpeningValue=EITLERPGLOBAL.Replicate(" ",13-strOpeningValue.length())+strOpeningValue;
                                
                                Continue=true;
                                
                                if(chkValue.isSelected()) {
                                    
                                    if(OpeningValue>=ValueFrom&&OpeningValue<=ValueTo) {
                                        
                                    }
                                    else {
                                        Continue=false;
                                    }
                                }
                                
                                
                                if(chkQty.isSelected()) {
                                    if(OpeningQty>=QtyFrom&&OpeningQty<=QtyTo) {
                                        
                                    }
                                    else {
                                        Continue=false;
                                    }
                                }
                                
                                
                                if(chkIncludeNonMoving.isSelected()) {
                                    if(TransactionsFound) {
                                        boolean halt = true;
                                    }
                                    else {
                                        Continue=false;
                                    }
                                }
                                
                                
                                if(Continue) {
                                    writeLine(aFile,ItemID+" "+ItemName+"    "+UnitName+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue+" "+Location);
                                    
                                    if(OpeningZeroQty>0) {
                                        writeLine(aFile, EITLERPGLOBAL.Replicate(" ", ItemID.length()) +" "+EITLERPGLOBAL.Replicate(" ",ItemName.length()) +"    "+EITLERPGLOBAL.Replicate(" ",UnitName.length())+" "+strOpeningZeroQty);
                                    }
                                    else {
                                        writeLine(aFile, " ");
                                    }
                                    
                                    pageTotal+=OpeningValue;
                                    cumTotal+=OpeningValue;
                                    finalTotal+=OpeningValue;
                                }
                                
                                rsItem.next();
                            }
                            
                            
                            if(ItemCount>0) {
                                writeLine(aFile,"---------------------------------------------");
                                writeLine(aFile," Group Total :"+dFormat.format(finalTotal));
                                writeLine(aFile," ");
                            }
                            
                            rsItemGroup.next();
                            
                            if(rsItemGroup.isAfterLast()) {
                                writeLine(aFile,LeftMargin+"Page Total :"+dFormat.format(pageTotal));
                                writeLine(aFile,LeftMargin+"Cum. Total :"+dFormat.format(cumTotal));
                            }
                        }
                    }
                    
                    aFile.close();
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                }
                
            };
        }.start();
    }
    
    
    
    private void writeLine(BufferedWriter aFile,String strLine) {
        //Writes line maintaining page length
        try {
            DecimalFormat dFormat=new DecimalFormat("###0.00");
            if(lineCounter>=62) {
                
                aFile.write(LeftMargin+EITLERPGLOBAL.Replicate("-",100));
                aFile.newLine();
                
                aFile.write(LeftMargin+"Page Total :"+dFormat.format(pageTotal));
                aFile.newLine();
                aFile.write(LeftMargin+"Cum. Total :"+dFormat.format(cumTotal));
                aFile.newLine();
                
                aFile.write(LeftMargin+EITLERPGLOBAL.Replicate(" ",80)+"Page : "+pageCounter);
                aFile.newLine();
                
                aFile.write("\f");
                
                
                pageCounter++;
                pageTotal=0;
                lineCounter=0;
                PrintHeader(aFile);
            }
            
            aFile.write(LeftMargin+strLine);
            aFile.newLine();
            lineCounter++;
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void newPage(BufferedWriter aFile) {
        //Writes line maintaining page length
        try {
            
            while(lineCounter<=70) {
                aFile.write(" ");
                aFile.newLine();
                
                lineCounter++;
            }
            
            PrintHeader(aFile);
            
        }
        catch(Exception e) {
            
        }
    }
    
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    
    
    
/*SELECT A.MIR_NO,DATE_FORMAT(A.MIR_DATE,'%d/%m/%Y') MIR_DATE,B.APPROVER_REMARKS,B.REVISION_NO,IF(A.SUPP_ID='000000',A.PARTY_NAME,SUPP.SUPP_NAME) SUPP_NAME,
C.ITEM_ID,I.ITEM_DESCRIPTION,C.ITEM_EXTRA_DESC
FROM
D_INV_MIR_HEADER A
LEFT JOIN D_INV_MIR_HEADER_H B ON (A.MIR_NO=B.MIR_NO AND A.MIR_TYPE=B.MIR_TYPE)
LEFT JOIN D_COM_DOC_DATA DOC ON (DOC.DOC_NO=A.MIR_NO)
LEFT JOIN D_COM_SUPP_MASTER SUPP ON (A.SUPP_ID=SUPP.SUPPLIER_CODE),
D_INV_MIR_DETAIL C
LEFT JOIN D_INV_ITEM_MASTER I ON (I.ITEM_ID=C.ITEM_ID)
WHERE A.MIR_TYPE=1 AND A.APPROVED=0
AND A.MIR_NO=C.MIR_NO AND A.MIR_TYPE=C.MIR_TYPE AND A.MIR_TYPE=1
AND DOC.STATUS='W'
AND DOC.USER_ID=15
AND DOC.MODULE_ID=5
AND A.MIR_DATE>='2005-04-01'
ORDER BY A.MIR_NO,B.REVISION_NO DESC*/
    
}
