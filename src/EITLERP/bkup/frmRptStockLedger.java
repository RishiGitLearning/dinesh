/*
 * frmRptStockStatement.java
 *
 * Created on August 13, 2005, 3:21 PM
 */

package EITLERP.bkup;

/**
 *
 * @author  root
 */
import EITLERP.*;
import java.sql.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import EITLERP.Utils.*;
import java.text.*;

public class frmRptStockLedger extends javax.swing.JApplet {
    
    private EITLComboModel cmbBaseModel=new EITLComboModel();
    
    private int lineCounter=0;
    private int pageCounter=1;
    
    private String LeftMargin=EITLERPGLOBAL.Replicate(" ", 5);
    
    /** Initializes the applet frmRptStockStatement */
    public void init() {
        setSize(560, 380);
        initComponents();
        Bar.setVisible(false);
        GenerateCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromItemID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToItemID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        Bar = new javax.swing.JProgressBar();
        lblItem = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        chkPrint = new javax.swing.JCheckBox();
        chkReprocess = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        cmbBase = new javax.swing.JComboBox();
        chkNonTransaction = new javax.swing.JCheckBox();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("STOCK LEDGER PROCESSING");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(8, 8, 187, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 0, 581, 30);

        jLabel2.setText("From Item Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(12, 48, 112, 15);

        getContentPane().add(txtFromItemID);
        txtFromItemID.setBounds(122, 46, 112, 20);

        jLabel3.setText("To Item Code");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(12, 78, 112, 15);

        getContentPane().add(txtToItemID);
        txtToItemID.setBounds(122, 76, 112, 20);

        jLabel4.setText("From Date ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(13, 150, 77, 15);

        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(88, 148, 112, 20);

        jLabel5.setText("To Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(226, 151, 53, 15);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(284, 148, 112, 20);

        cmdPrint.setText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPrint);
        cmdPrint.setBounds(429, 51, 119, 29);

        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExit);
        cmdExit.setBounds(430, 89, 116, 25);

        getContentPane().add(Bar);
        Bar.setBounds(10, 308, 200, 18);

        lblItem.setText(".");
        getContentPane().add(lblItem);
        lblItem.setBounds(12, 291, 383, 15);

        jLabel6.setText("(Keep both item code blank for all items)");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(15, 105, 260, 15);

        jLabel7.setText("Save as ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 189, 59, 15);

        getContentPane().add(txtFile);
        txtFile.setBounds(88, 187, 270, 20);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(360, 187, 35, 21);

        chkPrint.setText("Print the stock ledger");
        getContentPane().add(chkPrint);
        chkPrint.setBounds(10, 222, 183, 23);

        chkReprocess.setText("Re Process Stock Valuation");
        getContentPane().add(chkReprocess);
        chkReprocess.setBounds(261, 224, 205, 23);

        jLabel8.setText("Base");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(266, 260, 29, 15);

        getContentPane().add(cmbBase);
        cmbBase.setBounds(368, 255, 120, 24);

        chkNonTransaction.setText("Include Non-transaction Items");
        getContentPane().add(chkNonTransaction);
        chkNonTransaction.setBounds(10, 254, 230, 23);

    }//GEN-END:initComponents
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileDialog FileDialog=new FileDialog(findParentFrame(this));
        FileDialog.show();
        txtFile.setText(FileDialog.getDirectory()+FileDialog.getFile());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
        int Base=EITLERPGLOBAL.getComboCode(cmbBase);
        
        if(Base==0) {
            GenerateReportWAvg();
        }
        
        if(Base==1) {
            GenerateReportToDB();
        }
        
        //GenerateReporToTable();
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.JCheckBox chkNonTransaction;
    private javax.swing.JCheckBox chkPrint;
    private javax.swing.JCheckBox chkReprocess;
    private javax.swing.JComboBox cmbBase;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblItem;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtFromItemID;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtToItemID;
    // End of variables declaration//GEN-END:variables
    
    
    private void GenerateReportFIFO() {
        new Thread() {
            
            public void run() {
                
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource;
                ResultSet rsClosingHeader,rsClosingDetail;
                Statement stClosingHeader,stClosingDetail;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                
                double srcClosingQty=0;
                double srcClosingValue=0;
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                String StockEntryDate="";
                
                try {
                    
                    if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please specify the date range");
                        return;
                    }
                    
                    if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    //Prepare our temp table for temporary query //
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    
                    
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    
                    
                    data.Execute(strCondition);
                    
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM STOCK_LEDGER_TEMP) ";
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM D_INV_ITEM_MASTER_TMP) ";
                    
                    strCondition="";
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT COUNT(*) AS THECOUNT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //===================================================================//
                    //====================== PROCESS FIFO ===============================//
                    //==================================================================//
                    
                    Bar.setMaximum(Max);
                    Bar.setMinimum(Min);
                    Bar.setValue(0);
                    Bar.repaint();
                    
                    
                    lblItem.setText("Starting Process");
                    lblItem.repaint();
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    if(rsItem.getRow()<=0) {
                        JOptionPane.showMessageDialog(null,"No transactions found in given period");
                        lblItem.setVisible(false);
                        Bar.setVisible(false);
                        return;
                    }
                    
                    //Loop through each item
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        lblItem.setText("Processing Item : "+ItemID);
                        lblItem.repaint();
                        
                        
                        if(ItemName.length()>20) {
                            ItemName=ItemName.substring(0,20);
                        }
                        
                        UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                        
                        OpeningQty=0;
                        OpeningRate=0;
                        OpeningValue=0;
                        
                        //First Find the latest cut-off closing stock.
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                            OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                            
                            if(OpeningQty==0) {
                                OpeningRate=0;
                            }
                            else {
                                //OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            }
                        }
                        
                        data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY=0 WHERE GRN_NO IN (SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"') AND ITEM_ID='"+ItemID+"'");
                        
                        //Take the record between Cut-off stock date and till from date specified here.
                        strSQL="SELECT A.ISSUE_NO,B.SR_NO,A.ISSUE_DATE,B.ITEM_CODE,ITEM_EXTRA_DESC,WAREHOUSE_ID,LOCATION_ID,BOE_NO,QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>='"+StockEntryDate+"' AND A.ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_CODE='"+ItemID+"' ORDER BY ISSUE_DATE";
                        System.out.println(strSQL);
                        rsIssue=data.getResult(strSQL);
                        rsIssue.first();
                        
                        while((!rsIssue.isAfterLast())&&rsIssue.getRow()>0) {
                            
                            
                            String IssueDate=rsIssue.getString("ISSUE_DATE");
                            IssueQty=rsIssue.getDouble("QTY");
                            String IssueNo=rsIssue.getString("ISSUE_NO");
                            int IssueSrNo=rsIssue.getInt("SR_NO");
                            
                            lblItem.setText("Issue "+IssueNo);
                            lblItem.repaint();
                            
                            if(IssueQty<=OpeningQty) {
                                OpeningQty=OpeningQty-IssueQty;
                                IssueValue=EITLERPGLOBAL.round(OpeningRate*IssueQty,2);
                                
                                //Update the rate in Issue.
                                data.Execute("UPDATE D_INV_ISSUE_DETAIL SET RATE="+OpeningRate+", ISSUE_VALUE="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                                
                                //No GRN Updation required now.
                            }
                            else {
                                //Initialize the Issue Value
                                IssueValue=0;
                                IssueRate=0;
                                
                                //Get the Difference
                                DiffQty=OpeningQty;
                                
                                
                                IssueValue=EITLERPGLOBAL.round(DiffQty*OpeningRate,2);
                                
                                //Decrease the IssueQty
                                IssueQty=IssueQty-OpeningQty;
                                
                                OpeningQty=0;
                                
                                //Now for rest of the Qty. we have to search the GRN in FIFO order.
                                strSQL="SELECT A.GRN_NO,B.SR_NO,A.GRN_DATE,B.LANDED_RATE,B.QTY,B.TMP_ISSUED_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.TMP_ISSUED_QTY<B.QTY AND ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+StockEntryDate+"' AND A.GRN_DATE<='"+IssueDate+"' ORDER BY A.GRN_DATE";
                                rsRcpt=data.getResult(strSQL);
                                rsRcpt.first();
                                
                                if(rsRcpt.getRow()>0) {
                                    Done=false;
                                    while((!Done)&&(!rsRcpt.isAfterLast())) {
                                        String GRNNo=rsRcpt.getString("GRN_NO");
                                        int GRNSrNo=rsRcpt.getInt("SR_NO");
                                        double Qty=rsRcpt.getDouble("QTY")-rsRcpt.getDouble("TMP_ISSUED_QTY");
                                        double Rate=rsRcpt.getDouble("LANDED_RATE");
                                        
                                        
                                        lblItem.setText("GRN "+GRNNo);
                                        lblItem.repaint();
                                        
                                        if(IssueQty<Qty) //Is GRN Qty sufficient to fulfill the issue ?
                                        {
                                            //DiffQty=Qty-IssueQty;
                                            DiffQty=IssueQty;
                                            
                                            IssueValue=EITLERPGLOBAL.round(IssueValue+(IssueQty*Rate),2);
                                            
                                            IssueQty=0;
                                            
                                            //We have to update the GRN.
                                            data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY=TMP_ISSUED_QTY+"+DiffQty+" WHERE GRN_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                        }
                                        else //GRN Qty. is not sufficient
                                        {
                                            DiffQty=IssueQty-Qty;
                                            
                                            IssueValue=EITLERPGLOBAL.round(IssueValue+(Qty*Rate),2);
                                            
                                            IssueQty=IssueQty-Qty;
                                            
                                            //Update the GRN with full qty.
                                            data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY="+rsRcpt.getDouble("QTY")+" WHERE GRN_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                        }
                                        
                                        if(rsRcpt.isAfterLast()||IssueQty==0) {
                                            Done=true;
                                        }
                                        
                                        if(!rsRcpt.isAfterLast()) {
                                            rsRcpt.next();
                                        }
                                    }
                                }
                                
                                
                                //Now check that Full Issue Qty has been used
                                if(IssueQty>0) {
                                    //Not enough receipts found for this much issue qty.
                                    
                                    //In this case Take the Avg. Rate
                                    if((rsIssue.getDouble("QTY")-IssueQty)==0) {
                                        IssueRate=0;
                                    }
                                    else {
                                        IssueRate=EITLERPGLOBAL.round(IssueValue/(rsIssue.getDouble("QTY")-IssueQty),2);
                                    }
                                    
                                    
                                    IssueValue=EITLERPGLOBAL.round(rsIssue.getDouble("QTY")*IssueRate,2);
                                    
                                }
                                else {
                                    
                                    //Otherwise devide the value
                                    IssueRate=EITLERPGLOBAL.round(IssueValue/rsIssue.getDouble("QTY"),2);
                                }
                                
                                //Update the Issue itself
                                data.Execute("UPDATE D_INV_ISSUE_DETAIL SET RATE="+IssueRate+", ISSUE_VALUE="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                            }
                            
                            rsIssue.next();
                        }
                        
                        rsItem.next();
                    }
                    //===========================END FIFO PROCESS ================================//
                    
                    
                    
                    
                    
                    
                    
                    //==========Get the Data from Item Master for ===============//
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    
                    BufferedWriter diffFile=new BufferedWriter(new FileWriter(new File("NewDifference0509.txt")));
                    
                    BufferedWriter negFile=new BufferedWriter(new FileWriter(new File("NegativeIssue.txt")));
                    
                    diffFile.write("Item ID,FoxPro Stock,Value,EITLERP Stock,Value");
                    diffFile.newLine();
                    
                    
                    PrintHeader(aFile);
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    ResultSet rsCount=data.getResult(strSQL);
                    rsCount.first();
                    
                    Bar.setMaximum(rsCount.getInt("THECOUNT"));
                    Bar.setMinimum(0);
                    
                    strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    //Loop through each item
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        lblItem.setText(ItemID);
                        lblItem.repaint();
                        
                        if(ItemName.length()>20) {
                            ItemName=ItemName.substring(0,20);
                        }
                        
                        UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                        
                        if(rsItem.getRow()>1) {
                            //newPage(aFile);
                        }
                        
                        writeLine(aFile," Item : "+ItemID+" "+ItemName+"     "+UnitName);
                        
                        //Now Decide the Opening Stock and Value
                        OpeningQty=0;
                        OpeningValue=0;
                        
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=rsTmp.getDouble("OPENING_QTY");
                            OpeningValue=rsTmp.getDouble("OPENING_VALUE");
                            
                            if(OpeningQty==0) {
                                OpeningValue=0;
                                OpeningRate=0;
                            }
                            else {
                                //OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            }
                        }
                        
                        // Get the Inwards from opening stock date to upto from date
                        strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(LANDED_RATE*QTY) IS NULL,0,SUM(LANDED_RATE*QTY)) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_VALUE"),2);
                            OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),2);
                        }
                        
                        
                        // Get the Issues from opening stock date to upto from date
                        strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(ISSUE_VALUE) IS NULL,0,SUM(ISSUE_VALUE)) AS SUM_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_CODE='"+ItemID+"'";
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),2);
                            OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),2);
                        }
                        
                        
                        //we have Opening Stock and Qty.
                        //Take the Average Rate
                        if(OpeningQty==0) {
                            OpeningRate=0;
                        }
                        else {
                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                        }
                        
                        //Print the Opening Stock
                        strOpeningQty=Double.toString(OpeningQty);
                        strOpeningQty=EITLERPGLOBAL.Replicate(" ", 6-strOpeningQty.length())+strOpeningQty;
                        strOpeningRate=Double.toString(OpeningRate);
                        strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                        strOpeningValue=Double.toString(OpeningValue);
                        strOpeningValue=EITLERPGLOBAL.Replicate(" ",11-strOpeningValue.length())+strOpeningValue;
                        
                        writeLine(aFile," ");
                        writeLine(aFile, " OPENING  : "+EITLERPGLOBAL.Replicate(" ",11)+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue);
                        writeLine(aFile," ");
                        
                        //Get the transactions between date
                        strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,B.QTY,B.LANDED_RATE*B.QTY AS VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,B.QTY,B.ISSUE_VALUE AS VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+"  ORDER BY DOC_DATE";
                        
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            while(!rsTmp.isAfterLast()) {
                                
                                String Operation=rsTmp.getString("OPERATION");
                                
                                strDocNo=rsTmp.getString("DOC_NO");
                                strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                
                                strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                
                                if(Operation.equals("+")) {
                                    strRcptQty=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                    strRcptValue=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                    
                                    if(rsTmp.getDouble("QTY")==0) {
                                        strRcptRate="0";
                                    }
                                    else {
                                        strRcptRate=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                    }
                                    
                                    strRcptQty=EITLERPGLOBAL.Replicate(" ", 6-strRcptQty.length())+strRcptQty;
                                    strRcptRate=EITLERPGLOBAL.Replicate(" ", 11-strRcptRate.length())+strRcptRate;
                                    strRcptValue=EITLERPGLOBAL.Replicate(" ", 11-strRcptValue.length())+strRcptValue;
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    
                                    strIssueQty=EITLERPGLOBAL.Replicate(" ", 6);
                                    strIssueRate=EITLERPGLOBAL.Replicate(" ", 11);
                                    strIssueValue=EITLERPGLOBAL.Replicate(" ", 11);
                                    
                                    strClosingQty=Double.toString(OpeningQty);
                                    strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                    
                                    strClosingRate=Double.toString(OpeningRate);
                                    strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                    
                                    strClosingValue=Double.toString(OpeningValue);
                                    strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                    
                                    
                                    //Write a line into Report
                                    writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                }
                                
                                
                                
                                
                                if(Operation.equals("-")) {
                                    
                                    strIssueQty=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                    strIssueValue=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                    
                                    if(rsTmp.getDouble("QTY")==0) {
                                        strIssueRate="0";
                                    }
                                    else {
                                        strIssueRate=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                    }
                                    
                                    strRcptQty=EITLERPGLOBAL.Replicate(" ", 6);
                                    strRcptRate=EITLERPGLOBAL.Replicate(" ", 11);
                                    strRcptValue=EITLERPGLOBAL.Replicate(" ", 11);
                                    
                                    strIssueQty=EITLERPGLOBAL.Replicate(" ", 6-strIssueQty.length())+strIssueQty;
                                    strIssueRate=EITLERPGLOBAL.Replicate(" ", 11-strIssueRate.length())+strIssueRate;
                                    strIssueValue=EITLERPGLOBAL.Replicate(" ", 11-strIssueValue.length())+strIssueValue;
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    
                                    strClosingQty=Double.toString(OpeningQty);
                                    strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                    
                                    strClosingRate=Double.toString(OpeningRate);
                                    strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                    
                                    strClosingValue=Double.toString(OpeningValue);
                                    strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                    
                                    
                                    
                                    //Write a line into Report
                                    // writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                    writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                }
                                
                                
                                rsTmp.next();
                                
                            }
                        }
                        
                        if(OpeningQty==0) {
                            OpeningValue=0;
                        }
                        
                        strOpeningQty=Double.toString(OpeningQty);
                        strOpeningQty=EITLERPGLOBAL.Replicate(" ", 6-strOpeningQty.length())+strOpeningQty;
                        strOpeningRate=Double.toString(OpeningRate);
                        strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                        strOpeningValue=Double.toString(OpeningValue);
                        strOpeningValue=EITLERPGLOBAL.Replicate(" ",11-strOpeningValue.length())+strOpeningValue;
                        
                        writeLine(aFile," ");
                        writeLine(aFile, " CLOSING  : "+EITLERPGLOBAL.Replicate(" ",11)+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue);
                        writeLine(aFile," ");
                        
                        
                        //============= Find the difference Now =============//
                        rsSource=data.getResult("SELECT * FROM CLOSING_STOCK_TMP WHERE ITEM_ID='"+ItemID+"'");
                        rsSource.first();
                        
                        if(rsSource.getRow()>0) {
                            srcClosingQty=rsSource.getDouble("CLOSING_STOCK");
                            srcClosingValue=EITLERPGLOBAL.round(rsSource.getDouble("CLOSING_VALUE"),2);
                            
                            double percentValue=(srcClosingValue*5)/100;
                            double Diff=Math.abs((srcClosingValue-OpeningValue));
                            
                            /*if(Diff>percentValue) {
                                diffFile.write(ItemID+","+srcClosingQty+","+srcClosingValue+","+OpeningQty+","+OpeningValue+","+(srcClosingQty-OpeningQty));
                                diffFile.newLine();
                                data.Execute("INSERT INTO D_INV_ITEM_MASTER_TMP (ITEM_ID) VALUES('"+ItemID+"')");
                            }*/
                            
                            if(EITLERPGLOBAL.round(srcClosingQty,0)!=EITLERPGLOBAL.round(OpeningQty,0)) {
                                diffFile.write(ItemID+","+srcClosingQty+","+srcClosingValue+","+OpeningQty+","+OpeningValue+","+(srcClosingQty-OpeningQty));
                                diffFile.newLine();
                                data.Execute("INSERT INTO D_INV_ITEM_MASTER_TMP (ITEM_ID) VALUES('"+ItemID+"')");
                            }
                            //===================================================//
                        }
                        
                        rsItem.next();
                    }
                    
                    
                    diffFile.close();
                    aFile.close();
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null,e.getMessage());
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                    
                }
                
            };
        }.start();
    }
    
    
    private void GenerateReportWAvg() {
        new Thread() {
            
            public void run() {
                DecimalFormat dFormat=new DecimalFormat("###0.00");
                
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource,rsOpening;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                double OpeningQty=0,OpeningRate=0,OpeningValue=0,InwardQty=0;
                double InwardZeroQty=0,InwardRate=0,InwardValue=0,OutwardQty=0;
                double OutwardZeroQty=0,OutwardRate=0,OutwardValue=0,ClosingQty=0;
                double ClosingZeroQty=0,ClosingRate=0,ClosingValue=0,IssueQty=0;
                double IssueZeroQty=0,IssueValue=0,IssueRate=0,DiffQty=0;
                double srcClosingQty=0,srcClosingValue=0;
                
                //======Set of variables for Summary ============//
                double tOpeningQty=0,tOpeningValue=0,tReceiptQty=0,tReceiptValue=0;
                double tIssueQty=0,tIssueValue=0,tClosingQty=0,tClosingValue=0;
                double ntOpeningQty=0,ntOpeningValue=0,ntReceiptQty=0,ntReceiptValue=0;
                double ntIssueQty=0,ntIssueValue=0,ntClosingQty=0,ntClosingValue=0;
                double bOpeningQty=0,bOpeningValue=0,bReceiptQty=0,bReceiptValue=0;
                double bIssueQty=0,bIssueValue=0,bClosingQty=0,bClosingValue=0;
                double lnQty=0,lnZeroValQty=0;
                double NTQty=0,NTValue=0,TQty=0,TValue=0;
                double ReceiptTotal=0,IssueTotal=0;
                //===============================================//
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                long NewEntryNo=0;
                long LastStockEntryNo=0;
                
                String StockEntryDate="";
                
                try {
                    
                    if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please specify the date range");
                        return;
                    }
                    
                    if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    
                    data.Execute(strCondition);
                    
                    strCondition=" AND A.ITEM_ID NOT LIKE 'RM%' ";
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY ENTRY_DATE DESC ");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        LastStockEntryNo=rsTmp.getLong("ENTRY_NO");
                    }
                    //================================================================//
                    
                    
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(DISTINCT(A.ITEM_ID)) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition+" ";
                    rsItem=data.getResult(strSQL);
                    
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //===================================================================//
                    //====================== PROCESS WEIGHTED AVERAGE   =================//
                    //===================================================================//
                    if(chkReprocess.isSelected()) {
                        
                        /*Bar.setMaximum(Max);
                        Bar.setMinimum(Min);
                        Bar.setValue(0);
                        Bar.repaint();
                        
                        
                        lblItem.setText("Starting Process");
                        lblItem.repaint();
                        
                        //========= Create a text file ==============//
                        strSQL="SELECT A.ITEM_ID,A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition+" GROUP BY ITEM_ID";
                        
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                            Bar.setValue(rsItem.getRow());
                            Bar.repaint();
                            
                            ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                            
                            lblItem.setText("Processing Item : "+ItemID);
                            lblItem.repaint();
                            
                            OpeningQty=0;
                            OpeningRate=0;
                            OpeningValue=0;
                            
                            strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                                OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                                OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                                
                                if(OpeningQty==0){
                                    OpeningRate=0;
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                }
                            }
                            
                            strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+" UNION ";
                            strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY AS ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                            
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    
                                    String Operation=rsTmp.getString("OPERATION");
                                    
                                    strDocNo=rsTmp.getString("DOC_NO");
                                    int SrNo=rsTmp.getInt("SR_NO");
                                    
                                    if(Operation.equals("+")) {
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                        OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                        
                                        if(OpeningQty==0&&OpeningValue<=0) {
                                            OpeningRate=0;
                                        }
                                        else {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                    }
                                    
                                    if(Operation.equals("-")) {
                                        double currentIssueValue=0;
                                        double currentIssueRate=0;
                                        double currentIssueQty=0;
                                        
                                        //========NEW CODE=========//
                                        currentIssueQty=rsTmp.getDouble("QTY");
                                        
                                        if(OpeningValue<0) {
                                            OpeningRate=0;
                                            OpeningValue=0;
                                            
                                        }
                                        else {
                                            if(OpeningQty>0) {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                                OpeningValue=OpeningValue- EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                            }
                                            else {
                                                OpeningRate=0;
                                                OpeningValue=OpeningValue-0;
                                            }
                                        }
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,2);
                                        currentIssueRate=OpeningRate;
                                        currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                        //=====END OF NEW CODE=====//
                                        
                                        data.Execute("UPDATE D_INV_ISSUE_DETAIL SET ISSUE_VALUE="+currentIssueValue+",RATE="+currentIssueRate+" WHERE ISSUE_NO='"+strDocNo+"' AND SR_NO="+SrNo);
                                        
                                        if(OpeningQty!=0&&OpeningValue>0) {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                        else {
                                            OpeningRate=0;
                                            OpeningValue=0;
                                        }
                                    }
                                    
                                    rsTmp.next();
                                }
                                
                            }
                            rsItem.next();
                        }*/
                        //===========================END WEIGHTED AVG. PROCESS ================================//
                    }
                    
                    NTQty=0;
                    NTValue=0;
                    TQty=0;
                    TValue=0;
                    
                    //==========Get the Data from Item Master for ===============//
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    
                    lineCounter=0;
                    pageCounter=1;
                    
                    PrintHeader(aFile);
                    
                    ReceiptTotal=0;
                    IssueTotal=0;
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" ";
                    ResultSet rsCount=data.getResult(strSQL);
                    rsCount.first();
                    
                    Bar.setMaximum(rsCount.getInt("THECOUNT"));
                    Bar.setMinimum(0);
                    
                    strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" GROUP BY A.ITEM_ID ORDER BY ITEM_ID ";
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    int SrNo=0;
                    boolean IncludeItem=false;
                    
                    ntOpeningQty=0;
                    ntOpeningValue=0;
                    ntReceiptQty=0;
                    ntReceiptValue=0;
                    ntIssueQty=0;
                    ntIssueValue=0;
                    ntClosingQty=0;
                    ntClosingValue=0;
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        strSQL=" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_ID='"+ItemID+"' LIMIT 1 ";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_CODE='"+ItemID+"' LIMIT 1";
                        
                        rsTmp=data.getResult(strSQL);
                        
                        bOpeningQty=0;
                        bOpeningValue=0;
                        bReceiptQty=0;
                        bReceiptValue=0;
                        bIssueQty=0;
                        bIssueValue=0;
                        bClosingQty=0;
                        bClosingValue=0;
                        
                        if(rsTmp.getRow()>0) {
                            IncludeItem=true;
                        }
                        else {
                            IncludeItem=false;
                            
                            if(!chkNonTransaction.isSelected()) {
                                rsOpening=data.getResult("SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+LastStockEntryNo);
                                rsOpening.first();
                                
                                if(rsOpening.getRow()>0) {
                                    ResultSet rsCategory=data.getResult("SELECT CATEGORY_ID FROM D_COM_ITEM_CATEGORY WHERE CATEGORY_ID=SUBSTR('"+ItemID+"',1,LENGTH(CATEGORY_ID))");
                                    
                                    if(rsCategory.getRow()>0) {
                                        ntOpeningQty+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_QTY"),2);
                                        ntOpeningValue+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_VALUE"),2);
                                        
                                        NTValue+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_VALUE"),2);
                                        NTQty+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_QTY"),2);
                                        
                                        ReceiptTotal+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_VALUE"),2);
                                        
                                    }
                                }
                                
                            }
                            
                        }
                        
                        if(chkNonTransaction.isSelected()) {
                            IncludeItem=true;
                        }
                        
                        ResultSet rsCategory=data.getResult("SELECT CATEGORY_ID FROM D_COM_ITEM_CATEGORY WHERE CATEGORY_ID=SUBSTR('"+ItemID+"',1,LENGTH(CATEGORY_ID))");
                        if(rsCategory.getRow()<=0) {
                            IncludeItem=false;
                        }
                        
                        if(IncludeItem) {
                            
                            ItemID=ItemID+EITLERPGLOBAL.Replicate(" ",15-ItemID.length());
                            
                            lblItem.setText(ItemID);
                            lblItem.repaint();
                            
                            if(ItemName.length()>20) {
                                ItemName=ItemName.substring(0,20);
                            }
                            
                            UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                            
                            writeLine(aFile," Item : "+ItemID+" "+ItemName+"     "+UnitName);
                            
                            OpeningQty=0;
                            OpeningValue=0;
                            
                            strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningQty=rsTmp.getDouble("OPENING_QTY");
                                OpeningValue=rsTmp.getDouble("OPENING_VALUE");
                                
                                if(OpeningQty==0) {
                                    OpeningRate=0;
                                    OpeningValue=0;
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                }
                            }
                            
                            
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(LANDED_RATE*QTY) IS NULL,0,SUM(LANDED_RATE*QTY)) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_VALUE"),2);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),2);
                            }
                            
                            // Get the Issues from opening stock date to upto from date
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY,IF(SUM(ZERO_VAL_QTY) IS NULL,0,SUM(ZERO_VAL_QTY)) AS SUM_ZERO_QTY, IF(SUM(ISSUE_VALUE) IS NULL,0,SUM(ISSUE_VALUE)) AS SUM_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_CODE='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),2);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),2);
                            }
                            
                            if(OpeningQty==0) {
                                OpeningRate=0;
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                            }
                            
                            tOpeningQty+=OpeningQty;
                            tOpeningValue+=OpeningValue;
                            
                            bOpeningQty+=OpeningQty;
                            bOpeningValue+=OpeningValue;
                            
                            ReceiptTotal+=OpeningValue;
                            
                            
                            strOpeningQty=dFormat.format(OpeningQty);
                            strOpeningQty=EITLERPGLOBAL.Replicate(" ", 7-strOpeningQty.length())+strOpeningQty;
                            strOpeningRate=dFormat.format(OpeningRate);
                            strOpeningRate=EITLERPGLOBAL.Replicate(" ", 12-strOpeningRate.length())+strOpeningRate;
                            strOpeningValue=dFormat.format(OpeningValue);
                            strOpeningValue=EITLERPGLOBAL.Replicate(" ",12-strOpeningValue.length())+strOpeningValue;
                            
                            writeLine(aFile," ");
                            writeLine(aFile, " OPENING  : "+EITLERPGLOBAL.Replicate(" ",11)+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue);
                            writeLine(aFile," ");
                            
                            strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+" UNION ";
                            strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                            
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    
                                    String Operation=rsTmp.getString("OPERATION");
                                    
                                    strDocNo=rsTmp.getString("DOC_NO");
                                    strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                    strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                    
                                    int DocSrNo=rsTmp.getInt("SR_NO");
                                    
                                    if(Operation.equals("+")) {
                                        strRcptQty=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                        strRcptValue=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                        
                                        if(rsTmp.getDouble("QTY")==0) {
                                            strRcptRate="0.00";
                                        }
                                        else {
                                            strRcptRate=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                        }
                                        
                                        tReceiptQty=EITLERPGLOBAL.round(tReceiptQty+rsTmp.getDouble("QTY"),2);
                                        tReceiptValue=EITLERPGLOBAL.round(tReceiptValue+rsTmp.getDouble("VALUE"),2);
                                        
                                        bReceiptQty=EITLERPGLOBAL.round(bReceiptQty+rsTmp.getDouble("QTY"),2);
                                        bReceiptValue=EITLERPGLOBAL.round(bReceiptValue+rsTmp.getDouble("VALUE"),2);
                                        
                                        strRcptQty=EITLERPGLOBAL.Replicate(" ", 7-strRcptQty.length())+strRcptQty;
                                        strRcptRate=EITLERPGLOBAL.Replicate(" ", 12-strRcptRate.length())+strRcptRate;
                                        strRcptValue=EITLERPGLOBAL.Replicate(" ", 12-strRcptValue.length())+strRcptValue;
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                        OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                        
                                        ReceiptTotal+=EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2);
                                        
                                        if(OpeningQty==0) {
                                            OpeningRate=0;
                                        }
                                        else {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                        
                                        strIssueQty=EITLERPGLOBAL.Replicate(" ", 7);
                                        strIssueRate=EITLERPGLOBAL.Replicate(" ", 12);
                                        strIssueValue=EITLERPGLOBAL.Replicate(" ", 12);
                                        
                                        strClosingQty=dFormat.format(OpeningQty);
                                        strClosingQty=EITLERPGLOBAL.Replicate(" ", 7-strClosingQty.length())+strClosingQty;
                                        
                                        strClosingRate=dFormat.format(OpeningRate);
                                        strClosingRate=EITLERPGLOBAL.Replicate(" ", 12-strClosingRate.length())+strClosingRate;
                                        
                                        strClosingValue=dFormat.format(OpeningValue);
                                        strClosingValue=EITLERPGLOBAL.Replicate(" ",12-strClosingValue.length())+strClosingValue;
                                        
                                        writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                    }
                                    
                                    
                                    
                                    
                                    if(Operation.equals("-")) {
                                        double currentIssueValue=0;
                                        double currentIssueRate=0;
                                        double currentIssueQty=0;
                                        
                                        //========NEW CODE=========//
                                        currentIssueQty=rsTmp.getDouble("QTY");
                                        
                                        if(OpeningValue<0) {
                                            OpeningRate=0;
                                            OpeningValue=0;
                                        }
                                        else {
                                            
                                            if(OpeningQty>0) {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                                OpeningValue=OpeningValue- EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                                IssueTotal+=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                            }
                                            else {
                                                OpeningRate=0;
                                                OpeningValue=OpeningValue-0;
                                            }
                                        }
                                        
                                        currentIssueRate=OpeningRate;
                                        currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,2);
                                        //=====END OF NEW CODE=====//
                                        
                                        
                                        strIssueQty=dFormat.format(EITLERPGLOBAL.round(currentIssueQty,2));
                                        strIssueValue=dFormat.format(EITLERPGLOBAL.round(currentIssueValue,2));
                                        
                                        tIssueQty+=currentIssueQty;
                                        tIssueValue+=currentIssueValue;
                                        
                                        bIssueQty+=currentIssueQty;
                                        bIssueValue+=currentIssueValue;
                                        
                                        strIssueRate=dFormat.format(EITLERPGLOBAL.round(currentIssueRate,2));
                                        
                                        strRcptQty=EITLERPGLOBAL.Replicate(" ", 7);
                                        strRcptRate=EITLERPGLOBAL.Replicate(" ", 12);
                                        strRcptValue=EITLERPGLOBAL.Replicate(" ", 12);
                                        
                                        strIssueQty=EITLERPGLOBAL.Replicate(" ", 7-strIssueQty.length())+strIssueQty;
                                        strIssueRate=EITLERPGLOBAL.Replicate(" ", 12-strIssueRate.length())+strIssueRate;
                                        strIssueValue=EITLERPGLOBAL.Replicate(" ", 12-strIssueValue.length())+strIssueValue;
                                        
                                        
                                        strClosingQty=dFormat.format(OpeningQty);
                                        strClosingQty=EITLERPGLOBAL.Replicate(" ", 7-strClosingQty.length())+strClosingQty;
                                        
                                        strClosingRate=dFormat.format(OpeningRate);
                                        strClosingRate=EITLERPGLOBAL.Replicate(" ", 12-strClosingRate.length())+strClosingRate;
                                        
                                        strClosingValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,2));
                                        strClosingValue=EITLERPGLOBAL.Replicate(" ",12-strClosingValue.length())+strClosingValue;
                                        
                                        if(OpeningQty!=0) {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                        else {
                                            OpeningRate=0;
                                        }
                                        
                                        if(OpeningQty<0) {
                                            System.out.println("Negative "+ItemID);
                                        }
                                        
                                        writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                    }
                                    
                                    
                                    rsTmp.next();
                                }
                            }
                            
                            if(OpeningQty<=0) {
                                OpeningValue=0;
                            }
                            
                            TValue+=OpeningValue;
                            TQty+=OpeningQty;
                            
                            
                            tClosingQty+=OpeningQty;
                            tClosingValue+=OpeningValue;
                            
                            bClosingQty+=OpeningQty;
                            bClosingValue+=OpeningValue;
                            
                            data.Execute("UPDATE D_INV_ITEM_MASTER SET CLOSING_VALUE="+OpeningValue+" WHERE ITEM_ID='"+ItemID+"'");
                            
                            strOpeningQty=dFormat.format(EITLERPGLOBAL.round(OpeningQty,2));
                            strOpeningQty=EITLERPGLOBAL.Replicate(" ", 7-strOpeningQty.length())+strOpeningQty;
                            strOpeningRate=dFormat.format(EITLERPGLOBAL.round(OpeningRate,2));
                            strOpeningRate=EITLERPGLOBAL.Replicate(" ", 12-strOpeningRate.length())+strOpeningRate;
                            strOpeningValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,2));
                            strOpeningValue=EITLERPGLOBAL.Replicate(" ",12-strOpeningValue.length())+strOpeningValue;
                            
                            String strOpeningQtyTotal=dFormat.format(bOpeningQty);
                            strOpeningQtyTotal=EITLERPGLOBAL.Replicate(" ", 7-strOpeningQtyTotal.length())+strOpeningQtyTotal;
                            String strOpeningValueTotal=dFormat.format(bOpeningValue);
                            strOpeningValueTotal=EITLERPGLOBAL.Replicate(" ", 12-strOpeningValueTotal.length())+strOpeningValueTotal;
                            
                            String strReceiptQtyTotal=dFormat.format(bReceiptQty);
                            strReceiptQtyTotal=EITLERPGLOBAL.Replicate(" ", 7-strReceiptQtyTotal.length())+strReceiptQtyTotal;
                            String strReceiptValueTotal=dFormat.format(bReceiptValue);
                            strReceiptValueTotal=EITLERPGLOBAL.Replicate(" ", 12-strReceiptValueTotal.length())+strReceiptValueTotal;
                            
                            String strIssueQtyTotal=dFormat.format(bIssueQty);
                            strIssueQtyTotal=EITLERPGLOBAL.Replicate(" ", 7-strIssueQtyTotal.length())+strIssueQtyTotal;
                            String strIssueValueTotal=dFormat.format(bIssueValue);
                            strIssueValueTotal=EITLERPGLOBAL.Replicate(" ", 12-strIssueValueTotal.length())+strIssueValueTotal;
                            
                            String strClosingQtyTotal=dFormat.format(bClosingQty);
                            strClosingQtyTotal=EITLERPGLOBAL.Replicate(" ", 7-strClosingQtyTotal.length())+strClosingQtyTotal;
                            
                            String strClosingValueTotal=dFormat.format(bClosingValue);
                            strClosingValueTotal=EITLERPGLOBAL.Replicate(" ", 12-strClosingValueTotal.length())+strClosingValueTotal;
                            
                            
                            writeLine(aFile," ");
                            writeLine(aFile, EITLERPGLOBAL.Replicate(" ",strDocDate.length())+" "+EITLERPGLOBAL.Replicate(" ",strDocNo.length())+" "+strReceiptQtyTotal+" "+EITLERPGLOBAL.Replicate(" ",12)+" "+strReceiptValueTotal+" "+strIssueQtyTotal+" "+EITLERPGLOBAL.Replicate(" ",12)+" "+strIssueValueTotal);
                            writeLine(aFile," ");
                            writeLine(aFile, " CLOSING  : "+EITLERPGLOBAL.Replicate(" ",11)+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue);
                            writeLine(aFile," ");
                            
                            
                        }
                        
                        rsItem.next();
                    }
                    
                    
                    
                    writeLine(aFile, " SUMMARY ");
                    writeLine(aFile, "         ");
                    writeLine(aFile, " * Transactions ");
                    writeLine(aFile, "              ");
                    writeLine(aFile, " Closing Qty : "+dFormat.format(TQty));
                    writeLine(aFile, "       Value : "+dFormat.format(TValue));
                    
                    writeLine(aFile, "         ");
                    writeLine(aFile, "         ");
                    writeLine(aFile, " * Non Transactions ");
                    writeLine(aFile, "              ");
                    writeLine(aFile, " Closing Qty : "+dFormat.format(NTQty));
                    writeLine(aFile, "       Value : "+dFormat.format(NTValue));
                    
                    
                    writeLine(aFile, "         ");
                    writeLine(aFile, "         ");
                    writeLine(aFile, " * Total ");
                    writeLine(aFile, "              ");
                    writeLine(aFile, " Opening Qty : "+dFormat.format(NTQty+TQty));
                    writeLine(aFile, "       Value : "+dFormat.format(NTValue+TValue));
                    
                    
                    aFile.close();
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                }
                
            };
        }.start();
    }
    
    private void GenerateReportOnMIR() {
        
        new Thread() {
            
            public void run() {
                
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource;
                ResultSet rsClosingHeader,rsClosingDetail;
                Statement stClosingHeader,stClosingDetail;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                
                double srcClosingQty=0;
                double srcClosingValue=0;
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                String StockEntryDate="";
                
                try {
                    
                    if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please specify the date range");
                        return;
                    }
                    
                    if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    //Prepare our temp table for temporary query //
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    
                    
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_MIR_HEADER A,D_INV_MIR_DETAIL B WHERE A.MIR_NO=B.MIR_NO AND A.MIR_TYPE=B.MIR_TYPE AND MIR_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND MIR_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    
                    
                    data.Execute(strCondition);
                    
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM STOCK_LEDGER_TEMP) ";
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM D_INV_ITEM_MASTER_TMP) ";
                    
                    strCondition="";
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT COUNT(*) AS THECOUNT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //===================================================================//
                    //====================== PROCESS FIFO ===============================//
                    //==================================================================//
                    
                    Bar.setMaximum(Max);
                    Bar.setMinimum(Min);
                    Bar.setValue(0);
                    Bar.repaint();
                    
                    
                    lblItem.setText("Starting Process");
                    lblItem.repaint();
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    if(rsItem.getRow()<=0) {
                        JOptionPane.showMessageDialog(null,"No transactions found in given period");
                        lblItem.setVisible(false);
                        Bar.setVisible(false);
                        return;
                    }
                    
                    //Loop through each item
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        lblItem.setText("Processing Item : "+ItemID);
                        lblItem.repaint();
                        
                        
                        if(ItemName.length()>20) {
                            ItemName=ItemName.substring(0,20);
                        }
                        
                        UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                        
                        OpeningQty=0;
                        OpeningRate=0;
                        OpeningValue=0;
                        
                        //First Find the latest cut-off closing stock.
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                            OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                            
                            if(OpeningQty==0) {
                                OpeningRate=0;
                            }
                            else {
                                //OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            }
                        }
                        
                        data.Execute("UPDATE D_INV_MIR_DETAIL SET TMP_ISSUED_QTY=0 WHERE MIR_NO IN (SELECT MIR_NO FROM D_INV_MIR_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND MIR_DATE>='"+StockEntryDate+"' AND MIR_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"') AND ITEM_ID='"+ItemID+"'");
                        
                        //Take the record between Cut-off stock date and till from date specified here.
                        strSQL="SELECT A.ISSUE_NO,B.SR_NO,A.ISSUE_DATE,B.ITEM_CODE,ITEM_EXTRA_DESC,WAREHOUSE_ID,LOCATION_ID,BOE_NO,QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>='"+StockEntryDate+"' AND A.ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_CODE='"+ItemID+"' ORDER BY ISSUE_DATE";
                        
                        rsIssue=data.getResult(strSQL);
                        rsIssue.first();
                        
                        while((!rsIssue.isAfterLast())&&rsIssue.getRow()>0) {
                            
                            
                            String IssueDate=rsIssue.getString("ISSUE_DATE");
                            IssueQty=rsIssue.getDouble("QTY");
                            String IssueNo=rsIssue.getString("ISSUE_NO");
                            int IssueSrNo=rsIssue.getInt("SR_NO");
                            
                            lblItem.setText("Issue "+IssueNo);
                            lblItem.repaint();
                            
                            if(IssueQty<=OpeningQty) {
                                OpeningQty=OpeningQty-IssueQty;
                                IssueValue=EITLERPGLOBAL.round(OpeningRate*IssueQty,2);
                                
                                //Update the rate in Issue.
                                data.Execute("UPDATE D_INV_ISSUE_DETAIL SET RATE="+OpeningRate+", ISSUE_VALUE="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                                
                                //No GRN Updation required now.
                            }
                            else {
                                //Initialize the Issue Value
                                IssueValue=0;
                                IssueRate=0;
                                
                                //Get the Difference
                                DiffQty=OpeningQty;
                                
                                
                                IssueValue=EITLERPGLOBAL.round(DiffQty*OpeningRate,2);
                                
                                //Decrease the IssueQty
                                IssueQty=IssueQty-OpeningQty;
                                
                                OpeningQty=0;
                                
                                //Now for rest of the Qty. we have to search the GRN in FIFO order.
                                strSQL="SELECT A.MIR_NO,B.SR_NO,A.MIR_DATE,B.LANDED_RATE, IF(B.QTY=0,B.RECEIVED_QTY,B.QTY) QTY, B.TMP_ISSUED_QTY FROM D_INV_MIR_HEADER A,D_INV_MIR_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.MIR_NO=B.MIR_NO AND A.MIR_TYPE=B.MIR_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.TMP_ISSUED_QTY< IF(B.QTY=0,B.RECEIVED_QTY,B.QTY) AND ITEM_ID='"+ItemID+"' AND A.MIR_DATE>='"+StockEntryDate+"' AND A.MIR_DATE<='"+IssueDate+"' ORDER BY A.MIR_DATE";
                                rsRcpt=data.getResult(strSQL);
                                rsRcpt.first();
                                
                                if(rsRcpt.getRow()>0) {
                                    Done=false;
                                    while((!Done)&&(!rsRcpt.isAfterLast())) {
                                        String GRNNo=rsRcpt.getString("MIR_NO");
                                        int GRNSrNo=rsRcpt.getInt("SR_NO");
                                        double Qty=rsRcpt.getDouble("QTY")-rsRcpt.getDouble("TMP_ISSUED_QTY");
                                        double Rate=rsRcpt.getDouble("LANDED_RATE");
                                        
                                        if(Rate==0) {
                                            //Get the Average Rate of Item
                                            Rate=clsItem.getAvgRate(EITLERPGLOBAL.gCompanyID,ItemID);
                                        }
                                        
                                        lblItem.setText("MIR "+GRNNo);
                                        lblItem.repaint();
                                        
                                        if(IssueQty<Qty) //Is GRN Qty sufficient to fulfill the issue ?
                                        {
                                            //DiffQty=Qty-IssueQty;
                                            DiffQty=IssueQty;
                                            
                                            IssueValue=EITLERPGLOBAL.round(IssueValue+(IssueQty*Rate),2);
                                            
                                            IssueQty=0;
                                            
                                            //We have to update the GRN.
                                            data.Execute("UPDATE D_INV_MIR_DETAIL SET TMP_ISSUED_QTY=TMP_ISSUED_QTY+"+DiffQty+" WHERE MIR_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                        }
                                        else //GRN Qty. is not sufficient
                                        {
                                            DiffQty=IssueQty-Qty;
                                            
                                            IssueValue=EITLERPGLOBAL.round(IssueValue+(Qty*Rate),2);
                                            
                                            IssueQty=IssueQty-Qty;
                                            
                                            //Update the GRN with full qty.
                                            data.Execute("UPDATE D_INV_MIR_DETAIL SET TMP_ISSUED_QTY="+rsRcpt.getDouble("QTY")+" WHERE MIR_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                        }
                                        
                                        if(rsRcpt.isAfterLast()||IssueQty==0) {
                                            Done=true;
                                        }
                                        
                                        if(!rsRcpt.isAfterLast()) {
                                            rsRcpt.next();
                                        }
                                    }
                                }
                                
                                
                                //Now check that Full Issue Qty has been used
                                if(IssueQty>0) {
                                    //Not enough receipts found for this much issue qty.
                                    
                                    //In this case Take the Avg. Rate
                                    if((rsIssue.getDouble("QTY")-IssueQty)==0) {
                                        IssueRate=0;
                                    }
                                    else {
                                        IssueRate=EITLERPGLOBAL.round(IssueValue/(rsIssue.getDouble("QTY")-IssueQty),2);
                                    }
                                    
                                    
                                    IssueValue=EITLERPGLOBAL.round(rsIssue.getDouble("QTY")*IssueRate,2);
                                    
                                }
                                else {
                                    
                                    //Otherwise devide the value
                                    IssueRate=EITLERPGLOBAL.round(IssueValue/rsIssue.getDouble("QTY"),2);
                                }
                                
                                //Update the Issue itself
                                data.Execute("UPDATE D_INV_ISSUE_DETAIL SET RATE="+IssueRate+", ISSUE_VALUE="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                            }
                            
                            rsIssue.next();
                        }
                        
                        rsItem.next();
                    }
                    //===========================END FIFO PROCESS ================================//
                    
                    
                    
                    
                    
                    //==========Get the Data from Item Master for ===============//
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    
                    BufferedWriter diffFile=new BufferedWriter(new FileWriter(new File("NewDifference0509.txt")));
                    
                    diffFile.write("Item ID,FoxPro Stock,Value,EITLERP Stock,Value");
                    diffFile.newLine();
                    
                    
                    PrintHeader(aFile);
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    ResultSet rsCount=data.getResult(strSQL);
                    rsCount.first();
                    
                    Bar.setMaximum(rsCount.getInt("THECOUNT"));
                    Bar.setMinimum(0);
                    
                    strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    //Loop through each item
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        lblItem.setText(ItemID);
                        lblItem.repaint();
                        
                        if(ItemName.length()>20) {
                            ItemName=ItemName.substring(0,20);
                        }
                        
                        UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                        
                        if(rsItem.getRow()>1) {
                            //newPage(aFile);
                        }
                        
                        writeLine(aFile," Item : "+ItemID+" "+ItemName+"     "+UnitName);
                        
                        //Now Decide the Opening Stock and Value
                        OpeningQty=0;
                        OpeningValue=0;
                        
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=rsTmp.getDouble("OPENING_QTY");
                            OpeningValue=rsTmp.getDouble("OPENING_VALUE");
                            
                            if(OpeningQty==0) {
                                OpeningValue=0;
                                OpeningRate=0;
                            }
                            else {
                                //OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            }
                        }
                        
                        // Get the Inwards from opening stock date to upto from date
                        strSQL=" SELECT IF(SUM( IF(QTY=0,RECEIVED_QTY,QTY) ) IS NULL,0,SUM( IF(QTY=0,RECEIVED_QTY,QTY))) AS SUM_QTY, IF(SUM( IF(LANDED_RATE=0,I.UNIT_RATE,LANDED_RATE) * IF(QTY=0,RECEIVED_QTY,QTY)) IS NULL,0,SUM( IF(LANDED_RATE=0,I.UNIT_RATE,LANDED_RATE)* IF(QTY=0,RECEIVED_QTY,QTY))) AS SUM_VALUE FROM D_INV_MIR_HEADER A,D_INV_MIR_DETAIL B LEFT JOIN D_INV_ITEM_MASTER I ON (B.ITEM_ID=I.ITEM_ID)WHERE A.COMPANY_ID=B.COMPANY_ID AND A.MIR_NO=B.MIR_NO AND A.MIR_TYPE=B.MIR_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.MIR_DATE>'"+StockEntryDate+"' AND MIR_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                        
                        //strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(LANDED_RATE*QTY) IS NULL,0,SUM(LANDED_RATE*QTY)) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_VALUE"),2);
                            OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),2);
                        }
                        
                        
                        // Get the Issues from opening stock date to upto from date
                        strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(ISSUE_VALUE) IS NULL,0,SUM(ISSUE_VALUE)) AS SUM_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_CODE='"+ItemID+"'";
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),2);
                            OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),2);
                        }
                        
                        
                        //we have Opening Stock and Qty.
                        //Take the Average Rate
                        if(OpeningQty==0) {
                            OpeningRate=0;
                        }
                        else {
                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                        }
                        
                        //Print the Opening Stock
                        strOpeningQty=Double.toString(OpeningQty);
                        strOpeningQty=EITLERPGLOBAL.Replicate(" ", 6-strOpeningQty.length())+strOpeningQty;
                        strOpeningRate=Double.toString(OpeningRate);
                        strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                        strOpeningValue=Double.toString(OpeningValue);
                        strOpeningValue=EITLERPGLOBAL.Replicate(" ",11-strOpeningValue.length())+strOpeningValue;
                        
                        writeLine(aFile," ");
                        writeLine(aFile, " OPENING  : "+EITLERPGLOBAL.Replicate(" ",11)+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue);
                        writeLine(aFile," ");
                        
                        //Get the transactions between date
                        strSQL="SELECT B.SR_NO,A.MIR_NO AS DOC_NO,A.MIR_DATE AS DOC_DATE,'+' AS OPERATION, IF(B.QTY=0,B.RECEIVED_QTY,B.QTY) QTY, IF(B.LANDED_RATE=0,I.UNIT_RATE,B.LANDED_RATE) * IF(B.QTY=0,B.RECEIVED_QTY,B.QTY) AS VALUE FROM D_INV_MIR_HEADER A,D_INV_MIR_DETAIL B LEFT JOIN D_INV_ITEM_MASTER I ON (B.ITEM_ID=I.ITEM_ID)  WHERE A.COMPANY_ID=B.COMPANY_ID AND A.MIR_NO=B.MIR_NO AND A.MIR_TYPE=B.MIR_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.MIR_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND MIR_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,B.QTY,B.ISSUE_VALUE AS VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+"  ORDER BY DOC_DATE";
                        
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            while(!rsTmp.isAfterLast()) {
                                
                                String Operation=rsTmp.getString("OPERATION");
                                
                                strDocNo=rsTmp.getString("DOC_NO");
                                strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                
                                strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                
                                if(Operation.equals("+")) {
                                    strRcptQty=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                    strRcptValue=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                    
                                    if(rsTmp.getDouble("QTY")==0) {
                                        strRcptRate="0";
                                    }
                                    else {
                                        strRcptRate=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                    }
                                    
                                    strRcptQty=EITLERPGLOBAL.Replicate(" ", 6-strRcptQty.length())+strRcptQty;
                                    strRcptRate=EITLERPGLOBAL.Replicate(" ", 11-strRcptRate.length())+strRcptRate;
                                    strRcptValue=EITLERPGLOBAL.Replicate(" ", 11-strRcptValue.length())+strRcptValue;
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    
                                    strIssueQty=EITLERPGLOBAL.Replicate(" ", 6);
                                    strIssueRate=EITLERPGLOBAL.Replicate(" ", 11);
                                    strIssueValue=EITLERPGLOBAL.Replicate(" ", 11);
                                    
                                    strClosingQty=Double.toString(OpeningQty);
                                    strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                    
                                    strClosingRate=Double.toString(OpeningRate);
                                    strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                    
                                    strClosingValue=Double.toString(OpeningValue);
                                    strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                    
                                    
                                    //Write a line into Report
                                    writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                }
                                
                                
                                
                                
                                if(Operation.equals("-")) {
                                    
                                    strIssueQty=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                    strIssueValue=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                    
                                    if(rsTmp.getDouble("QTY")==0) {
                                        strIssueRate="0";
                                    }
                                    else {
                                        strIssueRate=Double.toString(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                    }
                                    
                                    strRcptQty=EITLERPGLOBAL.Replicate(" ", 6);
                                    strRcptRate=EITLERPGLOBAL.Replicate(" ", 11);
                                    strRcptValue=EITLERPGLOBAL.Replicate(" ", 11);
                                    
                                    strIssueQty=EITLERPGLOBAL.Replicate(" ", 6-strIssueQty.length())+strIssueQty;
                                    strIssueRate=EITLERPGLOBAL.Replicate(" ", 11-strIssueRate.length())+strIssueRate;
                                    strIssueValue=EITLERPGLOBAL.Replicate(" ", 11-strIssueValue.length())+strIssueValue;
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    
                                    strClosingQty=Double.toString(OpeningQty);
                                    strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                    
                                    strClosingRate=Double.toString(OpeningRate);
                                    strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                    
                                    strClosingValue=Double.toString(OpeningValue);
                                    strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                    
                                    
                                    //Write a line into Report
                                    // writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                    writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                }
                                
                                
                                rsTmp.next();
                                
                            }
                        }
                        
                        if(OpeningQty==0) {
                            OpeningValue=0;
                        }
                        
                        strOpeningQty=Double.toString(OpeningQty);
                        strOpeningQty=EITLERPGLOBAL.Replicate(" ", 6-strOpeningQty.length())+strOpeningQty;
                        strOpeningRate=Double.toString(OpeningRate);
                        strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                        strOpeningValue=Double.toString(OpeningValue);
                        strOpeningValue=EITLERPGLOBAL.Replicate(" ",11-strOpeningValue.length())+strOpeningValue;
                        
                        writeLine(aFile," ");
                        writeLine(aFile, " CLOSING  : "+EITLERPGLOBAL.Replicate(" ",11)+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue);
                        writeLine(aFile," ");
                        
                        
                        //============= Find the difference Now =============//
                        rsSource=data.getResult("SELECT * FROM CLOSING_STOCK_TMP WHERE ITEM_ID='"+ItemID+"'");
                        rsSource.first();
                        
                        if(rsSource.getRow()>0) {
                            srcClosingQty=rsSource.getDouble("CLOSING_STOCK");
                            srcClosingValue=EITLERPGLOBAL.round(rsSource.getDouble("CLOSING_VALUE"),2);
                            
                            double percentValue=(srcClosingValue*5)/100;
                            double Diff=Math.abs((srcClosingValue-OpeningValue));
                            
                            if(Diff>percentValue) {
                                diffFile.write(ItemID+","+srcClosingQty+","+srcClosingValue+","+OpeningQty+","+OpeningValue+","+(srcClosingQty-OpeningQty));
                                diffFile.newLine();
                            }
                            
                            /*if(srcClosingQty!=OpeningQty)
                            {
                                diffFile.write(ItemID+","+srcClosingQty+","+srcClosingValue+","+OpeningQty+","+OpeningValue+","+(srcClosingQty-OpeningQty));
                                diffFile.newLine();
                            }*/
                            //===================================================//
                        }
                        
                        rsItem.next();
                    }
                    
                    
                    diffFile.close();
                    aFile.close();
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null,e.getMessage());
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                    
                }
                
            };
        }.start();
    }
    
    private void GenerateReporToTable() {
        
        new Thread() {
            
            public void run() {
                
                try {
                    ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsLedger;
                    ResultSet rsClosingHeader,rsClosingDetail;
                    Statement stClosingHeader,stClosingDetail;
                    
                    data.Execute("DELETE FROM STOCK_LEDGER_ACTUAL");
                    
                    Connection tmpConn;
                    Statement stLedger;
                    tmpConn=data.getConn();
                    stLedger=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsLedger=stLedger.executeQuery("SELECT * FROM STOCK_LEDGER_ACTUAL");
                    rsLedger.first();
                    
                    String strSQL="";
                    String strCondition="";
                    
                    //======== Some Report writing Fields ==========//
                    String strLine="";
                    String ItemID="";
                    String ItemName="";
                    String UnitName="";
                    double OpeningQty=0;
                    double OpeningRate=0;
                    double OpeningValue=0;
                    double InwardQty=0;
                    double InwardRate=0;
                    double InwardValue=0;
                    double OutwardQty=0;
                    double OutwardRate=0;
                    double OutwardValue=0;
                    double ClosingQty=0;
                    double ClosingRate=0;
                    double ClosingValue=0;
                    double IssueQty=0;
                    double IssueValue=0;
                    double IssueRate=0;
                    double DiffQty=0;
                    boolean Done=false;
                    boolean OpeningWritten=false;
                    
                    String strOpeningQty="";
                    String strOpeningRate="";
                    String strOpeningValue="";
                    String strRcptQty="";
                    String strRcptRate="";
                    String strRcptValue="";
                    String strIssueQty="";
                    String strIssueRate="";
                    String strIssueValue="";
                    String strClosingQty="";
                    String strClosingRate="";
                    String strClosingValue="";
                    String strDocNo="";
                    String strDocDate="";
                    String strClosingDate="";
                    
                    strClosingDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
                    
                    int Max=0;
                    int Min=0;
                    int Row=0;
                    
                    long StockEntryNo=0;
                    String StockEntryDate="";
                    
                    try {
                        
                        if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(null,"Please specify the date range");
                            return;
                        }
                        
                        if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                            JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                            return;
                        }
                        
                        if(txtFile.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(null,"Please enter the file name.");
                            return;
                        }
                        
                        //Prepare our temp table for temporary query //
                        data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                        
                        
                        strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                        strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' ";
                        strCondition=strCondition+" UNION ";
                        strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'";
                        
                        
                        data.Execute(strCondition);
                        
                        strCondition="";
                        
                        //strCondition=" AND ITEM_ID IN (SELECT ITEM_ID FROM STOCK_LEDGER_TEMP) ";
                        //strCondition=" AND ITEM_ID IN (SELECT DISTINCT(ITEM_ID) AS ITEM_ID FROM STOCK_LEDGER_SOURCE) ";
                        
                        Bar.setVisible(true);
                        Bar.setValue(0);
                        
                        if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                            
                            if(!txtFromItemID.getText().equals("")) {
                                strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                            }
                            
                            if(!txtToItemID.getText().equals("")) {
                                strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                            }
                        }
                        
                        //======= Find the last cut-off date stock entry =================//
                        rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'");
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            StockEntryNo=rsTmp.getLong("ENTRY_NO");
                            StockEntryDate=rsTmp.getString("ENTRY_DATE");
                        }
                        //================================================================//
                        
                        
                        lblItem.setText("Deciding the no. of items");
                        lblItem.repaint();
                        
                        //========= Get the count ============//
                        strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_SOURCE B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                        System.out.println(strSQL);
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        if(rsItem.getRow()>0) {
                            Max=rsItem.getInt("THECOUNT");
                        }
                        
                        Bar.setMaximum(Max);
                        Bar.setMinimum(Min);
                        Bar.setValue(0);
                        Bar.repaint();
                        
                        
                        lblItem.setText("Starting Process");
                        lblItem.repaint();
                        
                        //========= Create a text file ==============//
                        //strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_SOURCE B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                        strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                        System.out.println(strSQL);
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        /*if(rsItem.getRow()<=0) {
                            JOptionPane.showMessageDialog(null,"No transactions found in given period");
                            lblItem.setVisible(false);
                            Bar.setVisible(false);
                            return;
                        }*/
                        
                        //Loop through each item
                        if(chkReprocess.isSelected()) {
                            while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                                
                                Bar.setValue(rsItem.getRow());
                                Bar.repaint();
                                
                                
                                //Fill Up the variables first
                                ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                                ItemName=rsItem.getString("ITEM_DESCRIPTION");
                                
                                lblItem.setText("Processing Item : "+ItemID);
                                lblItem.repaint();
                                
                                
                                if(ItemName.length()>20) {
                                    ItemName=ItemName.substring(0,20);
                                }
                                
                                UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                                
                                OpeningQty=0;
                                OpeningRate=0;
                                OpeningValue=0;
                                
                                //First Find the latest cut-off closing stock.
                                strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                                    OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                                    OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                }
                                
                                data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY=0 WHERE GRN_NO IN (SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"') AND ITEM_ID='"+ItemID+"'");
                                
                                //Take the record between Cut-off stock date and till from date specified here.
                                strSQL="SELECT A.ISSUE_NO,B.SR_NO,A.ISSUE_DATE,B.ITEM_CODE,ITEM_EXTRA_DESC,WAREHOUSE_ID,LOCATION_ID,BOE_NO,QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND A.ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_CODE='"+ItemID+"' ORDER BY ISSUE_DATE";
                                
                                rsIssue=data.getResult(strSQL);
                                rsIssue.first();
                                
                                while((!rsIssue.isAfterLast())&&rsIssue.getRow()>0) {
                                    
                                    String IssueDate=rsIssue.getString("ISSUE_DATE");
                                    IssueQty=rsIssue.getDouble("QTY");
                                    String IssueNo=rsIssue.getString("ISSUE_NO");
                                    int IssueSrNo=rsIssue.getInt("SR_NO");
                                    
                                    if(IssueQty<=OpeningQty) {
                                        OpeningQty=OpeningQty-IssueQty;
                                        IssueValue=EITLERPGLOBAL.round(OpeningRate*IssueQty,2);
                                        
                                        //Update the rate in Issue.
                                        data.Execute("UPDATE D_INV_ISSUE_DETAIL SET RATE="+OpeningRate+", ISSUE_VALUE="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                                        
                                        //No GRN Updation required now.
                                    }
                                    else {
                                        //Initialize the Issue Value
                                        IssueValue=0;
                                        IssueRate=0;
                                        
                                        //Get the Difference
                                        DiffQty=OpeningQty;
                                        
                                        
                                        IssueValue=EITLERPGLOBAL.round(DiffQty*OpeningRate,2);
                                        
                                        //Decrease the IssueQty
                                        IssueQty=IssueQty-OpeningQty;
                                        
                                        OpeningQty=0;
                                        
                                        //Now for rest of the Qty. we have to search the GRN in FIFO order.
                                        strSQL="SELECT A.GRN_NO,B.SR_NO,A.GRN_DATE,B.LANDED_RATE,B.QTY,B.TMP_ISSUED_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.TMP_ISSUED_QTY<B.QTY AND ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+StockEntryDate+"' AND A.GRN_DATE<='"+IssueDate+"' ORDER BY A.GRN_DATE";
                                        rsRcpt=data.getResult(strSQL);
                                        rsRcpt.first();
                                        
                                        if(rsRcpt.getRow()>0) {
                                            Done=false;
                                            while((!Done)&&(!rsRcpt.isAfterLast())) {
                                                String GRNNo=rsRcpt.getString("GRN_NO");
                                                int GRNSrNo=rsRcpt.getInt("SR_NO");
                                                double Qty=rsRcpt.getDouble("QTY")-rsRcpt.getDouble("TMP_ISSUED_QTY");
                                                double Rate=rsRcpt.getDouble("LANDED_RATE");
                                                
                                                if(IssueQty<Qty) //Is GRN Qty sufficient to fulfill the issue ?
                                                {
                                                    DiffQty=Qty-IssueQty;
                                                    
                                                    IssueValue=EITLERPGLOBAL.round(IssueValue+(IssueQty*Rate),2);
                                                    
                                                    IssueQty=0;
                                                    
                                                    //We have to update the GRN.
                                                    data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY=TMP_ISSUED_QTY+"+DiffQty+" WHERE GRN_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                                }
                                                else //GRN Qty. is not sufficient
                                                {
                                                    DiffQty=IssueQty-Qty;
                                                    
                                                    IssueValue=EITLERPGLOBAL.round(IssueValue+(Qty*Rate),2);
                                                    
                                                    IssueQty=IssueQty-Qty;
                                                    
                                                    //Update the GRN with full qty.
                                                    data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY="+rsRcpt.getDouble("QTY")+" WHERE GRN_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                                }
                                                
                                                if(rsRcpt.isAfterLast()||IssueQty==0) {
                                                    Done=true;
                                                }
                                                
                                                if(!rsRcpt.isAfterLast()) {
                                                    rsRcpt.next();
                                                }
                                            }
                                        }
                                        
                                        
                                        //Now check that Full Issue Qty has been used
                                        if(IssueQty>0) {
                                            //Not enough receipts found for this much issue qty.
                                            
                                            //In this case Take the Avg. Rate
                                            if((rsIssue.getDouble("QTY")-IssueQty)==0) {
                                                IssueRate=0;
                                            }
                                            else {
                                                IssueRate=EITLERPGLOBAL.round(IssueValue/(rsIssue.getDouble("QTY")-IssueQty),2);
                                            }
                                            
                                            
                                            IssueValue=EITLERPGLOBAL.round(rsIssue.getDouble("QTY")*IssueRate,2);
                                            
                                        }
                                        else {
                                            
                                            //Otherwise devide the value
                                            IssueRate=EITLERPGLOBAL.round(IssueValue/rsIssue.getDouble("QTY"),2);
                                        }
                                        
                                        //Update the Issue itself
                                        data.Execute("UPDATE D_INV_ISSUE_DETAIL SET RATE="+IssueRate+", ISSUE_VALUE="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                                    }
                                    
                                    rsIssue.next();
                                }
                                
                                rsItem.next();
                            }
                        }
                        
                        
                        
                        
                        
                        //========= Create a text file ==============//
                        strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        //Loop through each item
                        while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                            
                            Bar.setValue(rsItem.getRow());
                            Bar.repaint();
                            
                            //Fill Up the variables first
                            ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                            ItemName=rsItem.getString("ITEM_DESCRIPTION");
                            
                            lblItem.setText(ItemID);
                            lblItem.repaint();
                            
                            if(ItemName.length()>20) {
                                ItemName=ItemName.substring(0,20);
                            }
                            
                            UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                            
                            if(rsItem.getRow()>1) {
                                //newPage(aFile);
                            }
                            
                            //Now Decide the Opening Stock and Value
                            OpeningQty=0;
                            OpeningValue=0;
                            
                            strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningQty=rsTmp.getDouble("OPENING_QTY");
                                OpeningValue=rsTmp.getDouble("OPENING_VALUE");
                                
                                if(OpeningQty==0) {
                                    OpeningValue=0;
                                    OpeningRate=0;
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                }
                            }
                            
                            // Get the Inwards from opening stock date to upto from date
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(LANDED_RATE*QTY) IS NULL,0,SUM(LANDED_RATE*QTY)) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_VALUE"),2);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),2);
                            }
                            
                            
                            // Get the Issues from opening stock date to upto from date
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(ISSUE_VALUE) IS NULL,0,SUM(ISSUE_VALUE)) AS SUM_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>='"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_CODE='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),2);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),2);
                            }
                            
                            
                            //we have Opening Stock and Qty.
                            //Take the Average Rate
                            if(OpeningQty==0) {
                                OpeningRate=0;
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                            }
                            
                            //Initialize the Closing
                            ClosingQty=OpeningQty;
                            ClosingValue=OpeningValue;
                            
                            //Add OpeningStock to Table
                            rsLedger.moveToInsertRow();
                            rsLedger.updateString("ITEM_ID",ItemID);
                            rsLedger.updateString("DOC_NO","OPENING");
                            rsLedger.updateString("DOC_DATE","0000-00-00");
                            rsLedger.updateString("DOC_TYPE","");
                            rsLedger.updateDouble("OPENING_QTY",OpeningQty);
                            rsLedger.updateDouble("OPENING_VALUE",OpeningValue);
                            rsLedger.updateDouble("RECEIPT_QTY",0);
                            rsLedger.updateDouble("RECEIPT_VALUE",0);
                            rsLedger.updateDouble("ISSUE_QTY",0);
                            rsLedger.updateDouble("ISSUE_VALUE",0);
                            rsLedger.updateDouble("CLOSING_QTY",0);
                            rsLedger.updateDouble("CLOSING_VALUE",0);
                            rsLedger.insertRow();
                            rsLedger.last();
                            
                            
                            //Get the transactions between date
                            strSQL="SELECT A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,B.QTY,B.LANDED_RATE*B.QTY AS VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+" UNION ";
                            strSQL=strSQL+"  SELECT A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,B.QTY,B.ISSUE_VALUE AS VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+"  ORDER BY DOC_DATE";
                            
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    
                                    String Operation=rsTmp.getString("OPERATION");
                                    
                                    strDocNo=rsTmp.getString("DOC_NO");
                                    strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                    
                                    strDocDate=rsTmp.getString("DOC_DATE");
                                    
                                    if(Operation.equals("+")) {
                                        
                                        InwardQty=rsTmp.getDouble("QTY");
                                        InwardValue=rsTmp.getDouble("VALUE");
                                        
                                        ClosingQty=ClosingQty+rsTmp.getDouble("QTY");
                                        ClosingValue=ClosingValue+rsTmp.getDouble("VALUE");
                                        
                                        //Insert the Record into ledger table
                                        rsLedger.moveToInsertRow();
                                        rsLedger.updateString("ITEM_ID",ItemID);
                                        rsLedger.updateString("DOC_NO",strDocNo);
                                        rsLedger.updateString("DOC_DATE",strDocDate);
                                        rsLedger.updateString("DOC_TYPE","+");
                                        rsLedger.updateDouble("OPENING_QTY",0);
                                        rsLedger.updateDouble("OPENING_VALUE",0);
                                        rsLedger.updateDouble("RECEIPT_QTY",InwardQty);
                                        rsLedger.updateDouble("RECEIPT_VALUE",InwardValue);
                                        rsLedger.updateDouble("ISSUE_QTY",0);
                                        rsLedger.updateDouble("ISSUE_VALUE",0);
                                        rsLedger.updateDouble("CLOSING_QTY",0);
                                        rsLedger.updateDouble("CLOSING_VALUE",0);
                                        rsLedger.insertRow();
                                        rsLedger.last();
                                    }
                                    
                                    
                                    
                                    
                                    
                                    if(Operation.equals("-")) {
                                        
                                        OutwardQty=rsTmp.getDouble("QTY");
                                        OutwardValue=rsTmp.getDouble("VALUE");
                                        
                                        ClosingQty=ClosingQty-rsTmp.getDouble("QTY");
                                        ClosingValue=ClosingValue-rsTmp.getDouble("VALUE");
                                        
                                        //Insert the Record into ledger table
                                        rsLedger.moveToInsertRow();
                                        rsLedger.updateString("ITEM_ID",ItemID);
                                        rsLedger.updateString("DOC_NO",strDocNo);
                                        rsLedger.updateString("DOC_DATE",strDocDate);
                                        rsLedger.updateString("DOC_TYPE","-");
                                        rsLedger.updateDouble("OPENING_QTY",0);
                                        rsLedger.updateDouble("OPENING_VALUE",0);
                                        rsLedger.updateDouble("RECEIPT_QTY",0);
                                        rsLedger.updateDouble("RECEIPT_VALUE",0);
                                        rsLedger.updateDouble("ISSUE_QTY",OutwardQty);
                                        rsLedger.updateDouble("ISSUE_VALUE",OutwardValue);
                                        rsLedger.updateDouble("CLOSING_QTY",0);
                                        rsLedger.updateDouble("CLOSING_VALUE",0);
                                        rsLedger.insertRow();
                                        rsLedger.last();
                                    }
                                    
                                    rsTmp.next();
                                }
                            }
                            
                            
                            rsLedger.updateDouble("CLOSING_QTY",ClosingQty);
                            rsLedger.updateDouble("CLOSING_VALUE",ClosingValue);
                            rsLedger.updateRow();
                            
                            
                            rsItem.next();
                        }
                        
                        
                        lblItem.setText("Done");
                        Bar.setVisible(false);
                        
                    }
                    catch(Exception e) {
                        
                        JOptionPane.showMessageDialog(null,e.getMessage());
                        Bar.setVisible(false);
                        lblItem.setVisible(false);
                        
                    }
                    
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    
    
    
    
    private void PrintHeader(BufferedWriter aFile) {
        String Title="";
        
        
        //Prints Page Header
        try {
            
            Title="SHRI DINESH MILLS LTD. , "+clsCompany.getCityName(EITLERPGLOBAL.gCompanyID);
            Title=EITLERPGLOBAL.Replicate(" ", (132-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (132-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title="STOCK LEDGER";
            Title=EITLERPGLOBAL.Replicate(" ", (132-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (132-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title="FROM DATE "+txtFromDate.getText()+" TO "+txtToDate.getText();
            
            aFile.write(Title);
            aFile.newLine();
            
            
            Title=EITLERPGLOBAL.Replicate("-",132);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"Date      "+" "+"Doc. No.    "+" "+"               Inward            "+" "+"               Issue             "+" "+"               Closing           ";
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"          "+" "+"            "+" "+"    Qty         Rate        Value"+" "+"    Qty         Rate        Value"+" "+"    Qty         Rate        Value";
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=EITLERPGLOBAL.Replicate("-",132);
            
            aFile.write(Title);
            aFile.newLine();
            
            lineCounter=7;
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    
    private void writeLine(BufferedWriter aFile,String strLine) {
        //Writes line maintaining page length
        try {
            if(lineCounter>=64) {
                
                aFile.write(EITLERPGLOBAL.Replicate("-",132));
                aFile.newLine();
                aFile.write("Page : "+pageCounter);
                aFile.newLine();
                
                aFile.write("\f");
                
                pageCounter++;
                
                
                PrintHeader(aFile);
            }
            
            aFile.write(LeftMargin+strLine);
            aFile.newLine();
            lineCounter++;
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void newPage(BufferedWriter aFile) {
        //Writes line maintaining page length
        try {
            
            while(lineCounter<=70) {
                aFile.write(" ");
                aFile.newLine();
                
                lineCounter++;
            }
            
            PrintHeader(aFile);
            
        }
        catch(Exception e) {
            
        }
    }
    
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    
    private void GenerateCombo() {
        cmbBase.removeAllItems();
        cmbBaseModel=new EITLComboModel();
        cmbBase.setModel(cmbBaseModel);
        
        ComboData aData=new ComboData();
        aData.Code=0;
        aData.Text="GRN";
        cmbBaseModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="MIR";
        cmbBaseModel.addElement(aData);
    }
    
    
    private void GenerateReportToDB() {
        new Thread() {
            
            public void run() {
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource,rsOpening;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                double OpeningQty=0;
                double OpeningZeroQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardZeroQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardZeroQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingZeroQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueZeroQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                
                double srcClosingQty=0;
                double srcClosingValue=0;
                
                
                //======Set of variables for Summary ============//
                double tOpeningQty=0;
                double tOpeningValue=0;
                double tReceiptQty=0;
                double tReceiptValue=0;
                double tIssueQty=0;
                double tIssueValue=0;
                double tClosingQty=0;
                double tClosingValue=0;
                
                double ntOpeningQty=0;
                double ntOpeningValue=0;
                double ntReceiptQty=0;
                double ntReceiptValue=0;
                double ntIssueQty=0;
                double ntIssueValue=0;
                double ntClosingQty=0;
                double ntClosingValue=0;
                
                double bOpeningQty=0;
                double bOpeningValue=0;
                double bReceiptQty=0;
                double bReceiptValue=0;
                double bIssueQty=0;
                double bIssueValue=0;
                double bClosingQty=0;
                double bClosingValue=0;
                
                double lnQty=0;
                double lnZeroValQty=0;
                //===============================================//
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                long NewEntryNo=0;
                long LastStockEntryNo=0;
                
                String StockEntryDate="";
                
                try {
                    
                    if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please specify the date range");
                        return;
                    }
                    
                    if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    //Prepare our temp table for temporary query //
                    //data.Execute("DELETE FROM D_INV_ITEM_MASTER_TMP");
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    data.Execute("DELETE FROM STOCK_LEDGER_ACTUAL");
                    //data.Execute("DELETE FROM TMP_LEDGER");
                    
                    Statement stLedger;
                    ResultSet rsLedger;
                    tmpConn=data.getConn();
                    stLedger=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsLedger=stLedger.executeQuery("SELECT * FROM STOCK_LEDGER_ACTUAL");
                    rsLedger.first();
                    
                    
                    
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    //strCondition+=" SELECT DISTINCT(ITEM_ID) ITEM_ID FROM D_INV_ITEM_MASTER WHERE APPROVED=1 AND CANCELLED=0 ";
                    
                    data.Execute(strCondition);
                    
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM STOCK_LEDGER_TEMP) ";
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM D_INV_ITEM_MASTER_TMP) ";
                    
                    strCondition=" AND A.ITEM_ID NOT LIKE 'RM%' ";
                    //strCondition="";
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY ENTRY_DATE DESC ");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        LastStockEntryNo=rsTmp.getLong("ENTRY_NO");
                    }
                    //================================================================//
                    
                    
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    System.out.println(strSQL);
                    //strSQL="SELECT COUNT(*) AS THECOUNT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //===================================================================//
                    //====================== PROCESS WEIGHTED AVERAGE   =================//
                    //===================================================================//
                    Bar.setMaximum(Max);
                    Bar.setMinimum(Min);
                    Bar.setValue(0);
                    Bar.repaint();
                    
                    
                    lblItem.setText("Starting Process");
                    lblItem.repaint();
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    /*
                    if(rsItem.getRow()<=0) {
                        JOptionPane.showMessageDialog(null,"No transactions found in given period");
                        lblItem.setVisible(false);
                        Bar.setVisible(false);
                        return;
                    }*/
                    
                    //Loop through each item
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        
                        lblItem.setText("Processing Item : "+ItemID);
                        
                        lblItem.repaint();
                        
                        
                        OpeningQty=0;
                        OpeningZeroQty=0;
                        OpeningRate=0;
                        OpeningValue=0;
                        
                        //First Find the latest cut-off closing stock.
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                            OpeningZeroQty=EITLERPGLOBAL.round(rsTmp.getDouble("ZERO_VAL_OPENING_QTY"),2);
                            OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                            
                            if( (OpeningQty-OpeningZeroQty)==0) {
                                OpeningRate=0;
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/(OpeningQty-OpeningZeroQty),2);
                                //OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            }
                        }
                        
                        
                        
                        //Initialize the Closing
                        ClosingQty=OpeningQty;
                        ClosingValue=OpeningValue;
                        
                        //Add OpeningStock to Table
                        rsLedger.moveToInsertRow();
                        rsLedger.updateString("ITEM_ID",ItemID);
                        rsLedger.updateString("DOC_NO","OPENING");
                        rsLedger.updateString("DOC_DATE","0000-00-00");
                        rsLedger.updateString("DOC_TYPE","");
                        rsLedger.updateDouble("OPENING_QTY",OpeningQty);
                        rsLedger.updateDouble("OPENING_VALUE",OpeningValue);
                        rsLedger.updateDouble("RECEIPT_QTY",0);
                        rsLedger.updateDouble("RECEIPT_VALUE",0);
                        rsLedger.updateDouble("ISSUE_QTY",0);
                        rsLedger.updateDouble("ISSUE_VALUE",0);
                        rsLedger.updateDouble("CLOSING_QTY",0);
                        rsLedger.updateDouble("CLOSING_VALUE",0);
                        rsLedger.insertRow();
                        rsLedger.last();
                        
                        
                        //Get the transactions between date
                        strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY AS ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                        
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            while(!rsTmp.isAfterLast()) {
                                
                                String Operation=rsTmp.getString("OPERATION");
                                
                                strDocNo=rsTmp.getString("DOC_NO");
                                strDocDate=rsTmp.getString("DOC_DATE");
                                int SrNo=rsTmp.getInt("SR_NO");
                                
                                if(Operation.equals("+")) {
                                    
                                    InwardQty=rsTmp.getDouble("QTY");
                                    InwardValue=rsTmp.getDouble("VALUE");
                                    
                                    ClosingQty=ClosingQty+rsTmp.getDouble("QTY");
                                    ClosingValue=ClosingValue+rsTmp.getDouble("VALUE");
                                    
                                    //Insert the Record into ledger table
                                    rsLedger.moveToInsertRow();
                                    rsLedger.updateString("ITEM_ID",ItemID);
                                    rsLedger.updateString("DOC_NO",strDocNo);
                                    rsLedger.updateString("DOC_DATE",strDocDate);
                                    rsLedger.updateString("DOC_TYPE","+");
                                    rsLedger.updateDouble("OPENING_QTY",0);
                                    rsLedger.updateDouble("OPENING_VALUE",0);
                                    rsLedger.updateDouble("RECEIPT_QTY",InwardQty);
                                    rsLedger.updateDouble("RECEIPT_VALUE",InwardValue);
                                    rsLedger.updateDouble("ISSUE_QTY",0);
                                    rsLedger.updateDouble("ISSUE_VALUE",0);
                                    rsLedger.updateDouble("CLOSING_QTY",0);
                                    rsLedger.updateDouble("CLOSING_VALUE",0);
                                    rsLedger.insertRow();
                                    rsLedger.last();
                                    
                                }
                                
                                
                                if(Operation.equals("-")) {
                                    
                                    if(OpeningQty!=0) {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    else {
                                        OpeningRate=0;
                                    }
                                    
                                    
                                    OutwardQty=rsTmp.getDouble("QTY");
                                    OutwardValue=rsTmp.getDouble("VALUE");
                                    
                                    ClosingQty=ClosingQty-rsTmp.getDouble("QTY");
                                    ClosingValue=ClosingValue-rsTmp.getDouble("VALUE");
                                    
                                    //Insert the Record into ledger table
                                    rsLedger.moveToInsertRow();
                                    rsLedger.updateString("ITEM_ID",ItemID);
                                    rsLedger.updateString("DOC_NO",strDocNo);
                                    rsLedger.updateString("DOC_DATE",strDocDate);
                                    rsLedger.updateString("DOC_TYPE","-");
                                    rsLedger.updateDouble("OPENING_QTY",0);
                                    rsLedger.updateDouble("OPENING_VALUE",0);
                                    rsLedger.updateDouble("RECEIPT_QTY",0);
                                    rsLedger.updateDouble("RECEIPT_VALUE",0);
                                    rsLedger.updateDouble("ISSUE_QTY",OutwardQty);
                                    rsLedger.updateDouble("ISSUE_VALUE",OutwardValue);
                                    rsLedger.updateDouble("CLOSING_QTY",0);
                                    rsLedger.updateDouble("CLOSING_VALUE",0);
                                    rsLedger.insertRow();
                                    rsLedger.last();
                                }
                                
                                
                                rsTmp.next();
                                
                            }
                            
                        }
                        
                        
                        rsLedger.updateDouble("CLOSING_QTY",ClosingQty);
                        rsLedger.updateDouble("CLOSING_VALUE",ClosingValue);
                        rsLedger.updateRow();
                        
                        
                        rsItem.next();
                    }
                    //===========================END WEIGHTED AVG. PROCESS ================================//
                    
                    lblItem.setText("Done");
                }
                catch(Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null,e.getMessage());
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                }
            };
        }.start();
    }
    
    
/*SELECT A.MIR_NO,DATE_FORMAT(A.MIR_DATE,'%d/%m/%Y') MIR_DATE,B.APPROVER_REMARKS,B.REVISION_NO,IF(A.SUPP_ID='000000',A.PARTY_NAME,SUPP.SUPP_NAME) SUPP_NAME,
C.ITEM_ID,I.ITEM_DESCRIPTION,C.ITEM_EXTRA_DESC
FROM
D_INV_MIR_HEADER A
LEFT JOIN D_INV_MIR_HEADER_H B ON (A.MIR_NO=B.MIR_NO AND A.MIR_TYPE=B.MIR_TYPE)
LEFT JOIN D_COM_DOC_DATA DOC ON (DOC.DOC_NO=A.MIR_NO)
LEFT JOIN D_COM_SUPP_MASTER SUPP ON (A.SUPP_ID=SUPP.SUPPLIER_CODE),
D_INV_MIR_DETAIL C
LEFT JOIN D_INV_ITEM_MASTER I ON (I.ITEM_ID=C.ITEM_ID)
WHERE A.MIR_TYPE=1 AND A.APPROVED=0
AND A.MIR_NO=C.MIR_NO AND A.MIR_TYPE=C.MIR_TYPE AND A.MIR_TYPE=1
AND DOC.STATUS='W'
AND DOC.USER_ID=15
AND DOC.MODULE_ID=5
AND A.MIR_DATE>='2005-04-01'
ORDER BY A.MIR_NO,B.REVISION_NO DESC*/
    
}
