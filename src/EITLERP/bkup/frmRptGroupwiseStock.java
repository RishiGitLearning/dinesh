/*
 * frmRptGroupwiseStock.java
 *
 * Created on January 12, 2006, 12:24 PM
 */

package EITLERP.bkup;

/**
 *
 * @author  root
 */
import EITLERP.*;
import java.sql.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import EITLERP.Utils.*;
import java.net.*;


public class frmRptGroupwiseStock extends javax.swing.JApplet {
    
    /** Initializes the applet frmRptGroupwiseStock */
    public void init() {
        setSize(487,286);
        initComponents();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ReportOptions = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        chkReprocess = new javax.swing.JCheckBox();
        lblItem = new javax.swing.JLabel();
        Bar = new javax.swing.JProgressBar();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        opgBrief = new javax.swing.JRadioButton();
        opgReceipts = new javax.swing.JRadioButton();
        opgIssues = new javax.swing.JRadioButton();
        opgDetailed = new javax.swing.JRadioButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel5.setText("As On Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(27, 58, 79, 15);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(114, 55, 112, 20);

        chkReprocess.setText("Re Process Stock Valuation");
        getContentPane().add(chkReprocess);
        chkReprocess.setBounds(13, 89, 205, 23);

        lblItem.setText(".");
        getContentPane().add(lblItem);
        lblItem.setBounds(16, 219, 347, 15);

        getContentPane().add(Bar);
        Bar.setBounds(14, 236, 200, 18);

        cmdPrint.setText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPrint);
        cmdPrint.setBounds(322, 39, 119, 29);

        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExit);
        cmdExit.setBounds(324, 71, 116, 25);

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("GROUPWISE STOCK VALUATION REPORT");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(8, 8, 269, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 0, 581, 30);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        opgBrief.setText("Brief Report");
        ReportOptions.add(opgBrief);
        jPanel2.add(opgBrief);
        opgBrief.setBounds(6, 6, 160, 23);

        opgReceipts.setText("Groupwise Receipts");
        ReportOptions.add(opgReceipts);
        jPanel2.add(opgReceipts);
        opgReceipts.setBounds(174, 7, 160, 23);

        opgIssues.setText("Groupwise Issues");
        ReportOptions.add(opgIssues);
        jPanel2.add(opgIssues);
        opgIssues.setBounds(174, 30, 160, 23);

        opgDetailed.setText("Detailed Report");
        ReportOptions.add(opgDetailed);
        jPanel2.add(opgDetailed);
        opgDetailed.setBounds(6, 29, 160, 23);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(9, 125, 340, 80);

    }//GEN-END:initComponents
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:

     
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
        GenerateReportWAvgNew();
        
        
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.ButtonGroup ReportOptions;
    private javax.swing.JCheckBox chkReprocess;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblItem;
    private javax.swing.JRadioButton opgBrief;
    private javax.swing.JRadioButton opgDetailed;
    private javax.swing.JRadioButton opgIssues;
    private javax.swing.JRadioButton opgReceipts;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    
    private void GenerateReport() {
        
        new Thread() {
            
            public void run() {
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource,rsCategory;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                
                //======== Some Report writing Fields ==========//
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                
                String ItemID="";
                
                boolean Done=false;
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                String StockEntryDate="";
                
                try {
                    
                    
                    if((!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid date");
                        return;
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.FinFromDateDB+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    
                    if(chkReprocess.isSelected()) {
                        
                        //Prepare our temp table for temporary query //
                        data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                        
                        
                        strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                        strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strCondition=strCondition+" UNION ";
                        strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+StockEntryDate+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        
                        
                        data.Execute(strCondition);
                        
                        //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM STOCK_LEDGER_TEMP) ";
                        //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM D_INV_ITEM_MASTER_TMP) ";
                        
                        strCondition="";
                        
                        Bar.setVisible(true);
                        Bar.setValue(0);
                        
                        
                        
                        
                        lblItem.setText("Deciding the no. of items");
                        lblItem.repaint();
                        
                        //========= Get the count ============//
                        strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                        //strSQL="SELECT COUNT(*) AS THECOUNT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                        rsItem=data.getResult(strSQL);
                        
                        rsItem.first();
                        
                        if(rsItem.getRow()>0) {
                            Max=rsItem.getInt("THECOUNT");
                        }
                        
                        //===================================================================//
                        //====================== PROCESS FIFO ===============================//
                        //==================================================================//
                        
                        Bar.setMaximum(Max);
                        Bar.setMinimum(Min);
                        Bar.setValue(0);
                        Bar.repaint();
                        
                        
                        lblItem.setText("Starting Process");
                        lblItem.repaint();
                        
                        //========= Create a text file ==============//
                        strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                        //strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        if(rsItem.getRow()<=0) {
                            JOptionPane.showMessageDialog(null,"No transactions found in given period");
                            lblItem.setVisible(false);
                            Bar.setVisible(false);
                            return;
                        }
                        
                        //Loop through each item
                        while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                            
                            Bar.setValue(rsItem.getRow());
                            Bar.repaint();
                            
                            
                            //Fill Up the variables first
                            ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                            
                            
                            lblItem.setText("Processing Item : "+ItemID);
                            lblItem.repaint();
                            
                            
                            OpeningQty=0;
                            OpeningRate=0;
                            OpeningValue=0;
                            
                            //First Find the latest cut-off closing stock.
                            strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                                OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                                OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                                
                                if(OpeningQty==0) {
                                    OpeningRate=0;
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                }
                            }
                            
                            data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY=0 WHERE GRN_NO IN (SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"') AND ITEM_ID='"+ItemID+"'");
                            
                            //Take the record between Cut-off stock date and till from date specified here.
                            strSQL="SELECT A.ISSUE_NO,B.SR_NO,A.ISSUE_DATE,B.ITEM_CODE,ITEM_EXTRA_DESC,WAREHOUSE_ID,LOCATION_ID,BOE_NO,QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND A.ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_CODE='"+ItemID+"' ORDER BY ISSUE_DATE";
                            
                            rsIssue=data.getResult(strSQL);
                            rsIssue.first();
                            
                            while((!rsIssue.isAfterLast())&&rsIssue.getRow()>0) {
                                String IssueDate=rsIssue.getString("ISSUE_DATE");
                                IssueQty=rsIssue.getDouble("QTY");
                                String IssueNo=rsIssue.getString("ISSUE_NO");
                                int IssueSrNo=rsIssue.getInt("SR_NO");
                                
                                lblItem.setText("Issue "+IssueNo);
                                lblItem.repaint();
                                
                                if(IssueQty<=OpeningQty) {
                                    OpeningQty=OpeningQty-IssueQty;
                                    IssueValue=EITLERPGLOBAL.round(OpeningRate*IssueQty,2);
                                    
                                    //Update the rate in Issue.
                                    data.Execute("UPDATE D_INV_ISSUE_DETAIL SET RATE="+OpeningRate+", ISSUE_VALUE="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                                    
                                    //No GRN Updation required now.
                                }
                                else {
                                    //Initialize the Issue Value
                                    IssueValue=0;
                                    IssueRate=0;
                                    
                                    //Get the Difference
                                    DiffQty=OpeningQty;
                                    
                                    
                                    IssueValue=EITLERPGLOBAL.round(DiffQty*OpeningRate,2);
                                    
                                    //Decrease the IssueQty
                                    IssueQty=IssueQty-OpeningQty;
                                    
                                    OpeningQty=0;
                                    
                                    //Now for rest of the Qty. we have to search the GRN in FIFO order.
                                    strSQL="SELECT A.GRN_NO,B.SR_NO,A.GRN_DATE,B.LANDED_RATE,B.QTY,B.TMP_ISSUED_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.TMP_ISSUED_QTY<B.QTY AND ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+StockEntryDate+"' AND A.GRN_DATE<='"+IssueDate+"' ORDER BY A.GRN_DATE";
                                    rsRcpt=data.getResult(strSQL);
                                    rsRcpt.first();
                                    
                                    if(rsRcpt.getRow()>0) {
                                        Done=false;
                                        while((!Done)&&(!rsRcpt.isAfterLast())) {
                                            String GRNNo=rsRcpt.getString("GRN_NO");
                                            int GRNSrNo=rsRcpt.getInt("SR_NO");
                                            double Qty=rsRcpt.getDouble("QTY")-rsRcpt.getDouble("TMP_ISSUED_QTY");
                                            double Rate=rsRcpt.getDouble("LANDED_RATE");
                                            
                                            
                                            lblItem.setText("GRN "+GRNNo);
                                            lblItem.repaint();
                                            
                                            if(IssueQty<Qty) //Is GRN Qty sufficient to fulfill the issue ?
                                            {
                                                //DiffQty=Qty-IssueQty;
                                                DiffQty=IssueQty;
                                                
                                                IssueValue=EITLERPGLOBAL.round(IssueValue+(IssueQty*Rate),2);
                                                
                                                IssueQty=0;
                                                
                                                //We have to update the GRN.
                                                data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY=TMP_ISSUED_QTY+"+DiffQty+" WHERE GRN_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                            }
                                            else //GRN Qty. is not sufficient
                                            {
                                                DiffQty=IssueQty-Qty;
                                                
                                                IssueValue=EITLERPGLOBAL.round(IssueValue+(Qty*Rate),2);
                                                
                                                IssueQty=IssueQty-Qty;
                                                
                                                //Update the GRN with full qty.
                                                data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY="+rsRcpt.getDouble("QTY")+" WHERE GRN_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                            }
                                            
                                            if(rsRcpt.isAfterLast()||IssueQty==0) {
                                                Done=true;
                                            }
                                            
                                            if(!rsRcpt.isAfterLast()) {
                                                rsRcpt.next();
                                            }
                                        }
                                    }
                                    
                                    
                                    //Now check that Full Issue Qty has been used
                                    if(IssueQty>0) {
                                        //Not enough receipts found for this much issue qty.
                                        
                                        //In this case Take the Avg. Rate
                                        if((rsIssue.getDouble("QTY")-IssueQty)==0) {
                                            IssueRate=0;
                                        }
                                        else {
                                            IssueRate=EITLERPGLOBAL.round(IssueValue/(rsIssue.getDouble("QTY")-IssueQty),2);
                                        }
                                        
                                        
                                        IssueValue=EITLERPGLOBAL.round(rsIssue.getDouble("QTY")*IssueRate,2);
                                        
                                    }
                                    else {
                                        
                                        //Otherwise devide the value
                                        IssueRate=EITLERPGLOBAL.round(IssueValue/rsIssue.getDouble("QTY"),2);
                                    }
                                    
                                    //Update the Issue itself
                                    data.Execute("UPDATE D_INV_ISSUE_DETAIL SET RATE="+IssueRate+", ISSUE_VALUE="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                                }
                                
                                rsIssue.next();
                            }
                            
                            rsItem.next();
                        }
                        //===========================END FIFO PROCESS ================================//
                        
                    }
                    
                    
                    //============ Processing Categorywise Valuation =============//
                    double TotalOpening=0;
                    double TotalReceipt=0;
                    double TotalIssue=0;
                    double TotalValue=0;
                    
                    
                    rsCategory=data.getResult("SELECT * FROM D_COM_ITEM_CATEGORY ORDER BY SR_NO");
                    rsCategory.first();
                    
                    if(rsCategory.getRow()>0) {
                        while(!rsCategory.isAfterLast()) {
                            
                            String CategoryID=rsCategory.getString("CATEGORY_ID");
                            int SrNo=rsCategory.getInt("SR_NO");
                            
                            strSQL="SELECT SUM(OPENING_VALUE) TOTAL_VALUE FROM D_COM_OPENING_STOCK_DETAIL WHERE SUBSTRING(ITEM_ID,1,"+CategoryID.trim().length()+")='"+CategoryID+"' AND ENTRY_NO="+StockEntryNo;
                            System.out.println(strSQL);
                            rsTmp=data.getResult(strSQL);
                            
                            if(rsTmp.getRow()>0) {
                                TotalOpening=rsTmp.getDouble("TOTAL_VALUE");
                            }
                            
                            
                            strSQL="SELECT ROUND(SUM( IF(LANDED_RATE IS NULL,0,LANDED_RATE)* IF(QTY IS NULL,0,QTY) ),3) AS TOTAL_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>='"+StockEntryDate+"' AND A.GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(ITEM_ID,1,"+CategoryID.trim().length()+")='"+CategoryID.trim()+"'";
                            System.out.println(strSQL);
                            rsTmp=data.getResult(strSQL);
                            
                            if(rsTmp.getRow()>0) {
                                TotalReceipt=rsTmp.getDouble("TOTAL_VALUE");
                            }
                            
                            strSQL="SELECT  ROUND(SUM( IF(RATE IS NULL,0,RATE)* IF(QTY IS NULL,0,QTY) ) ,3)  AS TOTAL_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>='"+StockEntryDate+"' AND A.ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(ITEM_CODE,1,"+CategoryID.trim().length()+")='"+CategoryID.trim()+"'";
                            System.out.println(strSQL);
                            rsTmp=data.getResult(strSQL);
                            
                            if(rsTmp.getRow()>0) {
                                TotalIssue=rsTmp.getDouble("TOTAL_VALUE");
                            }
                            
                            TotalValue=(TotalOpening+TotalReceipt)-TotalIssue;
                            
                            data.Execute("UPDATE D_COM_ITEM_CATEGORY SET VALUATION_DATE='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"',VALUE="+TotalValue+" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND SR_NO="+SrNo);
                            
                            
                            rsCategory.next();
                        }
                    }
                    //==============================================================//
                    
                    
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    
                    try {
                        URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptGroupwiseStock.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&AsOnDate="+txtToDate.getText());
                        EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
                    }
                    catch(Exception e) {
                    }
                    
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null,e.getMessage());
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                    
                }
                
            };
        }.start();
    }
    
    
    private void GenerateReportWAvg() {
        
        new Thread() {
            
            public void run() {
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource,rsCategory,rsMainCategory;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                
                //======== Some Report writing Fields ==========//
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                
                String ItemID="";
                String strDocNo="";
                
                boolean Done=false;
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                String StockEntryDate="";
                
                try {
                    
                    
                    if((!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid date");
                        return;
                    }
                    
                    
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    
                    if(chkReprocess.isSelected()) {
                        
                        //Prepare our temp table for temporary query //
                        data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                        
                        
                        strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                        strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strCondition=strCondition+" UNION ";
                        strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+StockEntryDate+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        
                        
                        data.Execute(strCondition);
                        
                        //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM STOCK_LEDGER_TEMP) ";
                        //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM D_INV_ITEM_MASTER_TMP) ";
                        
                        strCondition="";
                        
                        Bar.setVisible(true);
                        Bar.setValue(0);
                        
                        lblItem.setText("Deciding the no. of items");
                        lblItem.repaint();
                        
                        //========= Get the count ============//
                        strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                        //strSQL="SELECT COUNT(*) AS THECOUNT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                        rsItem=data.getResult(strSQL);
                        
                        rsItem.first();
                        
                        if(rsItem.getRow()>0) {
                            Max=rsItem.getInt("THECOUNT");
                        }
                        
                        //===================================================================//
                        //====================== PROCESS WEIGHTED AVERAGE   =================//
                        //===================================================================//
                        Bar.setMaximum(Max);
                        Bar.setMinimum(Min);
                        Bar.setValue(0);
                        Bar.repaint();
                        
                        
                        lblItem.setText("Starting Process");
                        lblItem.repaint();
                        
                        //========= Create a text file ==============//
                        strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition+" GROUP BY ITEM_ID";
                        //strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        //Loop through each item
                        
                        while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                            Bar.setValue(rsItem.getRow());
                            Bar.repaint();
                            
                            //Fill Up the variables first
                            ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                            
                            lblItem.setText("Processing Item : "+ItemID);
                            
                            lblItem.repaint();
                            
                            
                            OpeningQty=0;
                            OpeningRate=0;
                            OpeningValue=0;
                            
                            //First Find the latest cut-off closing stock.
                            strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                                OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                                OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                                
                                if(OpeningQty==0){
                                    OpeningRate=0;
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                }
                            }
                            
                            //Get the transactions between date
                            strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+" UNION ";
                            strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY AS ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+StockEntryDate+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                            
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    
                                    String Operation=rsTmp.getString("OPERATION");
                                    
                                    strDocNo=rsTmp.getString("DOC_NO");
                                    int SrNo=rsTmp.getInt("SR_NO");
                                    
                                    if(Operation.equals("+")) {
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                        OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                        
                                        if(OpeningQty==0) {
                                            OpeningRate=0;
                                        }
                                        else {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                    }
                                    
                                    
                                    
                                    
                                    if(Operation.equals("-")) {
                                        double currentIssueValue=0;
                                        double currentIssueRate=0;
                                        double currentIssueQty=0;
                                        
                                        //========NEW CODE=========//
                                        currentIssueQty=rsTmp.getDouble("QTY");
                                        
                                        if(OpeningValue<0) {
                                            OpeningRate=0;
                                            OpeningValue=0;
                                        }
                                        else {
                                            
                                            if(OpeningQty>0) {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                                OpeningValue=OpeningValue- EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                                
                                            }
                                            else {
                                                OpeningRate=0;
                                                OpeningValue=OpeningValue-0;
                                            }
                                        }
                                        
                                        currentIssueRate=OpeningRate;
                                        currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,2);
                                        
                                        //=====END OF NEW CODE=====//
                                        
                                        data.Execute("UPDATE D_INV_ISSUE_DETAIL SET ISSUE_VALUE="+currentIssueValue+",RATE="+currentIssueRate+" WHERE ISSUE_NO='"+strDocNo+"' AND SR_NO="+SrNo);
                                        
                                        if(OpeningQty!=0) {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                        else {
                                            OpeningRate=0;
                                        }
                                    }
                                    
                                    rsTmp.next();
                                }
                                
                            }
                            rsItem.next();
                        }
                        //===========================END WEIGHTED AVG. PROCESS ================================//
                        
                        
                        
                        
                        ////                            //=================== Weighted Average Method ==================//
                        ////                            strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,B.QTY,B.LANDED_RATE*B.QTY AS VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        ////                            strSQL=strSQL+" UNION ";
                        ////                            strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,B.QTY,B.ISSUE_VALUE AS VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+StockEntryDate+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        ////                            strSQL=strSQL+"  ORDER BY DOC_DATE";
                        ////
                        ////                            rsTmp=data.getResult(strSQL);
                        ////                            rsTmp.first();
                        ////
                        ////                            if(rsTmp.getRow()>0) {
                        ////                                while(!rsTmp.isAfterLast()) {
                        ////
                        ////                                    String Operation=rsTmp.getString("OPERATION");
                        ////
                        ////                                    String strDocNo=rsTmp.getString("DOC_NO");
                        ////                                    int SrNo=rsTmp.getInt("SR_NO");
                        ////
                        ////                                    if(Operation.equals("+")) {
                        ////                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                        ////                                        OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                        ////
                        ////                                        if(OpeningQty==0) {
                        ////                                            OpeningRate=0;
                        ////                                        }
                        ////                                        else {
                        ////                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                        ////                                        }
                        ////                                    }
                        ////
                        ////
                        ////                                    if(Operation.equals("-")) {
                        ////                                        if(OpeningQty!=0) {
                        ////                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                        ////                                        }
                        ////                                        else {
                        ////                                            OpeningRate=0;
                        ////                                        }
                        ////
                        ////                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("QTY"),2);
                        ////                                        OpeningValue=OpeningValue- EITLERPGLOBAL.round((rsTmp.getDouble("QTY")*OpeningRate),2);
                        ////
                        ////                                        //Update Issue as per the weighted avg. rate
                        ////                                        data.Execute("UPDATE D_INV_ISSUE_DETAIL SET ISSUE_VALUE="+EITLERPGLOBAL.round((rsTmp.getDouble("QTY")*OpeningRate),2)+",RATE="+OpeningRate+" WHERE ISSUE_NO='"+strDocNo+"' AND SR_NO="+SrNo);
                        ////
                        ////                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                        ////                                    }
                        ////
                        ////
                        ////                                    rsTmp.next();
                        ////
                        ////                                }
                        ////
                        ////                            }
                        ////
                        ////                            rsItem.next();
                        ////                        }
                        ////                        //=======================================================//
                        
                        
                        
                        
                        
                    }
                    
                    
                    //============ Processing Categorywise Valuation =============//
                    double TotalOpening=0;
                    double TotalReceipt=0;
                    double TotalIssue=0;
                    double TotalValue=0;
                    String Exception1="";
                    String Exception2="";
                    String MainCategory="";
                    
                    rsCategory=data.getResult("SELECT * FROM D_COM_ITEM_CATEGORY ORDER BY SR_NO");
                    rsCategory.first();
                    
                    if(rsCategory.getRow()>0) {
                        while(!rsCategory.isAfterLast()) {
                            
                            String CategoryID=rsCategory.getString("CATEGORY_ID");
                            int SrNo=rsCategory.getInt("SR_NO");
                            
                            Exception1="";
                            Exception2="";
                            
                            rsMainCategory=data.getResult("SELECT * FROM D_COM_ITEM_CATEGORY WHERE CATEGORY_ID LIKE '"+CategoryID+"%' AND LENGTH(CATEGORY_ID)>"+CategoryID.length());
                            rsMainCategory.first();
                            
                            if(rsMainCategory.getRow()>0) {
                                MainCategory=rsMainCategory.getString("CATEGORY_ID");
                                Exception1=Exception1+" AND SUBSTRING(ITEM_ID,1,"+CategoryID.trim().length()+")<>'"+MainCategory+"'";
                                Exception2=Exception2+" AND SUBSTRING(ITEM_CODE,1,"+CategoryID.trim().length()+")<>'"+MainCategory+"'";
                            }
                            
                            strSQL="SELECT SUM(OPENING_VALUE) TOTAL_VALUE FROM D_COM_OPENING_STOCK_DETAIL WHERE SUBSTRING(ITEM_ID,1,"+CategoryID.trim().length()+")='"+CategoryID+"' AND ENTRY_NO="+StockEntryNo+" "+Exception1;
                            System.out.println(strSQL);
                            rsTmp=data.getResult(strSQL);
                            
                            if(rsTmp.getRow()>0) {
                                TotalOpening=rsTmp.getDouble("TOTAL_VALUE");
                                System.out.println("Opening "+TotalOpening);
                            }
                            
                            strSQL="SELECT ROUND(SUM(IF(LANDED_RATE IS NULL,0,LANDED_RATE)* IF(QTY IS NULL,0,QTY) ),3) AS TOTAL_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>='"+StockEntryDate+"' AND A.GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(ITEM_ID,1,"+CategoryID.trim().length()+")='"+CategoryID.trim()+"' "+Exception1;
                            System.out.println(strSQL);
                            rsTmp=data.getResult(strSQL);
                            
                            if(rsTmp.getRow()>0) {
                                TotalReceipt=rsTmp.getDouble("TOTAL_VALUE");
                                System.out.println("Receipt "+TotalReceipt);
                            }
                            
                            strSQL="SELECT ROUND(SUM(IF(RATE IS NULL,0,RATE)* IF(QTY IS NULL,0,QTY) ) ,3)  AS TOTAL_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>='"+StockEntryDate+"' AND A.ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(ITEM_CODE,1,"+CategoryID.trim().length()+")='"+CategoryID.trim()+"' "+Exception2;
                            System.out.println(strSQL);
                            rsTmp=data.getResult(strSQL);
                            
                            if(rsTmp.getRow()>0) {
                                TotalIssue=rsTmp.getDouble("TOTAL_VALUE");
                                System.out.println("Issue "+TotalIssue);
                            }
                            
                            TotalValue=(TotalOpening+TotalReceipt)-TotalIssue;
                            data.Execute("UPDATE D_COM_ITEM_CATEGORY SET VALUATION_DATE='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"',VALUE="+TotalValue+" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND SR_NO="+SrNo);
                            
                            rsCategory.next();
                        }
                    }
                    //==============================================================//
                    
                    
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    
                    try {
                        URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptGroupwiseStock.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&AsOnDate="+txtToDate.getText());
                        EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
                    }
                    catch(Exception e) {
                    }
                    
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null,e.getMessage());
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                    
                }
                
            };
        }.start();
    }
    
    
    private void GenerateReportWAvgNew() {
        
        new Thread() {
            
            public void run() {
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource,rsCategory,rsMainCategory;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                
                //======== Some Report writing Fields ==========//
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                
                double OpeningTotal=0;
                double ReceiptTotal=0;
                double IssueTotal=0;
                
                String ItemID="";
                String strDocNo="";
                
                boolean Done=false;
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                String StockEntryDate="";
                
                try {
                    
                    if((!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid date");
                        return;
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    
                    if(chkReprocess.isSelected()) {
                        
                        data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                        
                        strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                        strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strCondition=strCondition+" UNION ";
                        strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+StockEntryDate+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        
                        data.Execute(strCondition);
                        
                        strCondition="";
                        
                        Bar.setVisible(true);
                        Bar.setValue(0);
                        
                        lblItem.setText("Deciding the no. of items");
                        lblItem.repaint();
                        
                        //========= Get the count ============//
                        strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition+" GROUP BY A.ITEM_ID";
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        if(rsItem.getRow()>0) {
                            Max=rsItem.getInt("THECOUNT");
                        }
                        
                        
                        //===================================================================//
                        //====================== PROCESS WEIGHTED AVERAGE   =================//
                        //===================================================================//
                        Bar.setMaximum(Max);
                        Bar.setMinimum(Min);
                        Bar.setValue(0);
                        Bar.repaint();
                        
                        
                        lblItem.setText("Starting Process");
                        lblItem.repaint();
                        
                        //========= Create a text file ==============//
                        strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition+" GROUP BY ITEM_ID";
                        rsItem=data.getResult(strSQL);
                        rsItem.first();
                        
                        while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                            Bar.setValue(rsItem.getRow());
                            Bar.repaint();
                            
                            ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                            
                            lblItem.setText("Processing Item : "+ItemID);
                            lblItem.repaint();
                            
                            OpeningQty=0;
                            OpeningRate=0;
                            OpeningValue=0;
                            
                            strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                                OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                                OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),2);
                                
                                if(OpeningQty==0){
                                    OpeningRate=0;
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                }
                            }
                            
                            strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+" UNION ";
                            strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY AS ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+StockEntryDate+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                            
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    
                                    String Operation=rsTmp.getString("OPERATION");
                                    
                                    strDocNo=rsTmp.getString("DOC_NO");
                                    int SrNo=rsTmp.getInt("SR_NO");
                                    
                                    if(Operation.equals("+")) {
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                        OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                        
                                        if(OpeningQty==0) {
                                            OpeningRate=0;
                                        }
                                        else {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                    }
                                    
                                    if(Operation.equals("-")) {
                                        double currentIssueValue=0;
                                        double currentIssueRate=0;
                                        double currentIssueQty=0;
                                        
                                        //========NEW CODE=========//
                                        currentIssueQty=rsTmp.getDouble("QTY");
                                        
                                        if(OpeningValue<0) {
                                            OpeningRate=0;
                                            OpeningValue=0;
                                        }
                                        else {
                                            if(OpeningQty>0) {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                                OpeningValue=OpeningValue- EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                            }
                                            else {
                                                OpeningRate=0;
                                                OpeningValue=OpeningValue-0;
                                            }
                                        }
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,2);
                                        currentIssueRate=OpeningRate;
                                        currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                        //=====END OF NEW CODE=====//
                                        
                                        data.Execute("UPDATE D_INV_ISSUE_DETAIL SET ISSUE_VALUE="+currentIssueValue+",RATE="+currentIssueRate+" WHERE ISSUE_NO='"+strDocNo+"' AND SR_NO="+SrNo);
                                        
                                        if(OpeningQty!=0) {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                        }
                                        else {
                                            OpeningRate=0;
                                        }
                                    }
                                    
                                    rsTmp.next();
                                }
                            }
                            rsItem.next();
                        }
                        //===========================END WEIGHTED AVG. PROCESS ================================//
                        
                    }
                    
                    
                    //============ Processing Categorywise Valuation =============//
                    double TotalOpening=0;
                    double TotalReceipt=0;
                    double TotalIssue=0;
                    double TotalValue=0;
                    double writeoffTotal=0;
                    
                    String Exception1="";
                    String Exception2="";
                    String MainCategory="";
                    
                    rsCategory=data.getResult("SELECT * FROM D_COM_ITEM_CATEGORY WHERE CATEGORY_ID='40' ORDER BY SR_NO");
                    rsCategory.first();
                    
                    if(rsCategory.getRow()>0) {
                        while(!rsCategory.isAfterLast()) {
                            
                            OpeningTotal=0;
                            ReceiptTotal=0;
                            IssueTotal=0;
                            writeoffTotal=0;
                            
                            String CategoryID=rsCategory.getString("CATEGORY_ID");
                            int SrNo=rsCategory.getInt("SR_NO");
                            
                            double finalValue=0;
                            //=============
                            double finalTotal=0;
                            String groupID=rsCategory.getString("CATEGORY_ID");
                            
                            //========= Create a text file ==============//
                            strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" AND SUBSTRING(ITEM_ID,1,"+groupID.length()+")='"+groupID+"' ";
                            ResultSet rsCount=data.getResult(strSQL);
                            rsCount.first();
                            
                            Bar.setMaximum(rsCount.getInt("THECOUNT"));
                            Bar.setMinimum(0);
                            
                            strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT,LOCATION_ID FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" AND SUBSTRING(ITEM_ID,1,"+groupID.length()+")='"+groupID+"' GROUP BY ITEM_ID ORDER BY ITEM_ID";
                            rsItem=data.getResult(strSQL);
                            rsItem.first();
                            
                            long ItemCount=0;
                            
                            while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                                
                                OpeningQty=0;
                                OpeningValue=0;
                                
                                ItemCount++;
                                
                                Bar.setValue(rsItem.getRow());
                                Bar.repaint();
                                
                                ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                                
                                lblItem.setText(ItemID);
                                lblItem.repaint();
                                
                                strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningQty=rsTmp.getDouble("OPENING_QTY");
                                    OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),3);
                                    OpeningTotal+=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),3);
                                    
                                    
                                    if(rsTmp.getDouble("OPENING_VALUE")<rsTmp.getDouble("ORIGINAL_VALUE")) {
                                        //Must be write-off
                                        writeoffTotal+=(rsTmp.getDouble("ORIGINAL_VALUE")-rsTmp.getDouble("OPENING_VALUE"));
                                    }
                                }
                                
                                strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                                strSQL=strSQL+" UNION ";
                                strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+StockEntryDate+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                                strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                                
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    while(!rsTmp.isAfterLast()) {
                                        
                                        String Operation=rsTmp.getString("OPERATION");
                                        strDocNo=rsTmp.getString("DOC_NO");
                                        
                                        if(Operation.equals("+")) {
                                            OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                            OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                            
                                            ReceiptTotal+=EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2);
                                            if(OpeningQty==0) {
                                                OpeningRate=0;
                                            }
                                            else {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                            }
                                        }
                                        
                                        
                                        if(Operation.equals("-")) {
                                            double currentIssueValue=0;
                                            double currentIssueRate=0;
                                            double currentIssueQty=0;
                                            
                                            //========NEW CODE=========//
                                            currentIssueQty=rsTmp.getDouble("QTY");
                                            
                                            if(OpeningValue<0) {
                                                OpeningRate=0;
                                                OpeningValue=0;
                                            }
                                            else {
                                                if(OpeningQty>0) {
                                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                                    OpeningValue=OpeningValue- EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                                    IssueTotal+=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                                }
                                                else {
                                                    OpeningRate=0;
                                                    OpeningValue=OpeningValue-0;
                                                }
                                            }
                                            
                                            currentIssueRate=OpeningRate;
                                            currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                            
                                            OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,2);
                                            //=====END OF NEW CODE=====//
                                            
                                            if(OpeningQty!=0) {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                            }
                                            else {
                                                OpeningRate=0;
                                            }
                                        }
                                        
                                        rsTmp.next();
                                    }
                                }
                                
                                if(OpeningQty==0) {
                                    OpeningValue=0;
                                }
                                
                                finalValue+=OpeningValue;
                                
                                rsItem.next();
                            }
                            
                            System.out.println("Receipt Total"+ReceiptTotal);
                            data.Execute("UPDATE D_COM_ITEM_CATEGORY SET VALUE="+finalValue+",OPENING_VALUE="+OpeningTotal+",RECEIPT_VALUE="+ReceiptTotal+",ISSUE_VALUE="+IssueTotal+",WRITEOFF_VALUE="+writeoffTotal+" WHERE SR_NO="+SrNo);
                            
                            rsCategory.next();
                        }
                    }
                    //==============================================================//
                    
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    
                    if(opgBrief.isSelected()) {
                        try {
                            
                            URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptGroupwiseStock.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&AsOnDate="+txtToDate.getText());
                            EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
                        }
                        catch(Exception e) {
                        }
                        
                    }
                    

                    if(opgDetailed.isSelected()) {
                        try {
                            
                            URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptGroupwiseStock2.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&AsOnDate="+txtToDate.getText());
                            EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
                        }
                        catch(Exception e) {
                        }
                    }
                    

                    if(opgReceipts.isSelected()) {
                        try {
                            URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptGroupwiseReceipts.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&FromDate="+StockEntryDate+"&ToDate="+txtToDate.getText());
                            EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
                        }
                        catch(Exception e) {
                        }
                        
                    }

                    
                    if(opgIssues.isSelected()) {
                        try {
                            
                            URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptGroupwiseIssues.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&FromDate="+StockEntryDate+"&ToDate="+txtToDate.getText());
                            EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
                        }
                        catch(Exception e) {
                        }
                        
                    }
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                }
                
            };
        }.start();
    }
    
}
