/*
 * 
 * Created on December 20, 2013, 12:14 PM
 */

package EITLERP.Sales.PostSJ;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import java.sql.*;
import EITLERP.*;
import EITLERP.Finance.UtilFunctions;

/**
 *
 * @author  Ashutosh Pathak
 */
public class frmRptChargecodeReports extends javax.swing.JApplet {
    
    private EITLComboModel cmbInvoiceTypeModel;
    
    /** Initializes the applet frmABDReport */
    public void init() {
        initComponents();        
        setSize(420, 300);
        GenerateCombo();
        jButton3.setEnabled(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        RptFromDate = new javax.swing.JTextField();
        RptToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbInvoiceType = new javax.swing.JComboBox();
        chkDailysummary = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("POST SJ REPORTS -CHARGE CODE WISE SALES");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 500, 25);

        lblStatus.setFont(new java.awt.Font("Dialog", 1, 14));
        lblStatus.setForeground(new java.awt.Color(0, 51, 255));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(20, 390, 450, 20);

        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 130, 0, 0);

        jButton1.setText("Charge Code Wise Sales Performance");
        jButton1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(30, 170, 260, 25);

        jButton2.setText("Charge Code 09 Invoice Detail");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(30, 140, 260, 25);

        RptFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RptFromDateFocusLost(evt);
            }
        });

        getContentPane().add(RptFromDate);
        RptFromDate.setBounds(120, 70, 80, 19);

        getContentPane().add(RptToDate);
        RptToDate.setBounds(240, 70, 80, 19);

        jLabel3.setText("From Date");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 70, 70, 20);

        jLabel4.setText("To");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(210, 70, 20, 20);

        getContentPane().add(cmbInvoiceType);
        cmbInvoiceType.setBounds(30, 100, 120, 24);

        chkDailysummary.setText("Daily Summary Charge Code 2,4,5,8");
        chkDailysummary.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDailysummaryItemStateChanged(evt);
            }
        });

        getContentPane().add(chkDailysummary);
        chkDailysummary.setBounds(30, 40, 260, 23);

        jButton3.setText("Charge Code 2,5,8/4 Invoice Summary");
        jButton3.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(30, 200, 260, 25);

    }//GEN-END:initComponents

    private void RptFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RptFromDateFocusLost
        if(chkDailysummary.isSelected()) {
            RptToDate.setText(RptFromDate.getText());            
        }else{
            
        }
    }//GEN-LAST:event_RptFromDateFocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String FromDate=EITLERPGLOBAL.formatDateDB(RptFromDate.getText());                    
        String InvoiceType=cmbInvoiceType.getSelectedItem().toString().substring(8);
        //String Type=Integer.toString(cmbInvoiceType.getSelectedIndex());
        System.out.println(InvoiceType);
        //System.out.println(Type);
        if(cmbInvoiceType.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Please Select any type");
            cmbInvoiceType.requestFocus();
        }else{
            Generate248Report(FromDate,InvoiceType);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void chkDailysummaryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDailysummaryItemStateChanged
        if(chkDailysummary.isSelected()) {
            RptFromDate.setText(EITLERPGLOBAL.getCurrentDate());
            RptToDate.setText(EITLERPGLOBAL.getCurrentDate());
            RptToDate.setEditable(false);
            jButton2.setEnabled(false);
            jButton1.setEnabled(false);
            jButton3.setEnabled(true);
            GenerateCombo();
            
        } else {
            RptFromDate.setText("");
            RptToDate.setText("");
            RptToDate.setEditable(true);
            jButton2.setEnabled(true);
            jButton1.setEnabled(true);
            jButton3.setEnabled(false);            
            GenerateCombo();
        }
    }//GEN-LAST:event_chkDailysummaryItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String FromDate=EITLERPGLOBAL.formatDateDB(RptFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(RptToDate.getText());        
        String InvoiceType=cmbInvoiceType.getSelectedItem().toString();
        String Type=Integer.toString(cmbInvoiceType.getSelectedIndex());        
        if(cmbInvoiceType.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Please Select any type");
            cmbInvoiceType.requestFocus();
        }else{
            GenerateSalesPerformanceReport(FromDate,ToDate,Type,InvoiceType); 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String FromDate=EITLERPGLOBAL.formatDateDB(RptFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(RptToDate.getText());    
        //String InvoiceType=cmbInvoiceType.getSelectedItem().toString()+" Sales";
        String InvoiceType=cmbInvoiceType.getSelectedItem().toString();
        String Type=Integer.toString(cmbInvoiceType.getSelectedIndex());
        System.out.println(InvoiceType);
        System.out.println(Type);
        if(cmbInvoiceType.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Please Select any type");
            cmbInvoiceType.requestFocus();
        }else{
            Generate09Report(FromDate,ToDate,Type,InvoiceType);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
                        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField RptFromDate;
    private javax.swing.JTextField RptToDate;
    private javax.swing.JCheckBox chkDailysummary;
    private javax.swing.JComboBox cmbInvoiceType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() { 
        if(chkDailysummary.isSelected()) {
         cmbInvoiceTypeModel=new EITLComboModel();
        cmbInvoiceType.removeAllItems();
        cmbInvoiceType.setModel(cmbInvoiceTypeModel);
        
        ComboData aData=new ComboData();        
        aData.Text="-Select Type-";
        aData.Code=0;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="Ch code 2,5,8";
        aData.Code=1;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="Ch code 4";
        aData.Code=2;
        cmbInvoiceTypeModel.addElement(aData);        
        
        }
        else{
        cmbInvoiceTypeModel=new EITLComboModel();
        cmbInvoiceType.removeAllItems();
        cmbInvoiceType.setModel(cmbInvoiceTypeModel);
        
        ComboData aData=new ComboData();        
        aData.Text="-Select Type-";
        aData.Code=0;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="Suitings";
        aData.Code=1;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="Felt";
        aData.Code=2;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="Filter Fab.";
        aData.Code=3;
        cmbInvoiceTypeModel.addElement(aData);
        }
    }
    
    private void Generate09Report(String FromDate,String ToDate,String Type,String InvoiceType){
        try{
            String Condition="";
            int l=0;
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("INVOICE_NO");
            objData.AddColumn("INVOICE_DATE");
            objData.AddColumn("PAYMENT_TERM_CODE");
            objData.AddColumn("NET_AMOUNT");
            
            
            String str="SELECT PARTY_CODE,INVOICE_NO,INVOICE_DATE,PAYMENT_TERM_CODE,NET_AMOUNT FROM D_SAL_INVOICE_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND INVOICE_DATE>='"+FromDate+"' AND INVOICE_DATE<='"+ToDate+"' AND PAYMENT_TERM_CODE LIKE ('9%') AND INVOICE_TYPE='"+Type+"' ORDER BY PARTY_CODE ASC,INVOICE_DATE ASC,INVOICE_NO ASC";
                        
            
            ResultSet  rsTemp =data.getResult(str);
            if(rsTemp.getRow()>0) {
            while(!rsTemp.isAfterLast()){
                l++;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();                
                
                objRow.setValue("PARTY_CODE",UtilFunctions.getString(rsTemp,"PARTY_CODE",""));                
                objRow.setValue("INVOICE_NO",UtilFunctions.getString(rsTemp,"INVOICE_NO",""));
                objRow.setValue("INVOICE_DATE",UtilFunctions.getString(rsTemp,"INVOICE_DATE",""));
                //objRow.setValue("INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"INVOICE_DATE","")));
                objRow.setValue("PAYMENT_TERM_CODE",UtilFunctions.getString(rsTemp,"PAYMENT_TERM_CODE",""));
                objRow.setValue("NET_AMOUNT",UtilFunctions.getString(rsTemp,"NET_AMOUNT",""));
                objData.AddRow(objRow);                
                rsTemp.next();
            }
            }
            HashMap parameter=new HashMap();
            parameter.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            parameter.put("FROM_DATE",EITLERPGLOBAL.formatDate(FromDate));
            parameter.put("TO_DATE",EITLERPGLOBAL.formatDate(ToDate));
            parameter.put("INV_TYPE",InvoiceType+" Sales");
            //parameter.put("BOOK_NAME",clsBook.getBookName(EITLERPGLOBAL.gCompanyID,BookCode));
            //parameter.put("TOTAL_INVOICE_NO",Integer.toString(l));
            
            //parameter.put("NAME","ORDER");
            //parameter.put("LAST_DATE","15/02/2014"
            
           // EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/PostSJ/rptchargcodeiwseinvoicedetail.rpt",parameter,objData);
            rsTemp.close();            
           
        }catch(SQLException e) {
            e.printStackTrace();
            
        }
    }
    
    private void GenerateSalesPerformanceReport(String FromDate,String ToDate,String Type,String InvoiceType){
        try{
            String yearmonth=FromDate.substring(0,8);
            int l=0;
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            objData.AddColumn("SR_NO");
            objData.AddColumn("CH_CD");
            objData.AddColumn("AMOUNT1");
            objData.AddColumn("AMOUNT2");
            objData.AddColumn("AMOUNT");
            
            
            String str="SELECT B.CH_CD AS CH_CD,AMOUNT1,COALESCE(AMOUNT2,0) AS AMOUNT2,AMOUNT1+COALESCE(AMOUNT2,0) AS AMOUNT FROM (SELECT A.CH_CD AS CH_CD,COALESCE(AMOUNT1,0) AS AMOUNT1 FROM (SELECT CONCAT(0,SUBSTRING(PAYMENT_TERM_CODE,1,1)) AS CH_CD,PAYMENT_TERM_CODE FROM D_SAL_INVOICE_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND INVOICE_TYPE='"+Type+"' AND INVOICE_DATE>='"+FromDate+"' AND INVOICE_DATE<='"+ToDate+"' GROUP BY SUBSTRING(PAYMENT_TERM_CODE,1,1)) AS A LEFT JOIN (SELECT CONCAT(0,SUBSTRING(PAYMENT_TERM_CODE,1,1)) AS CH_CD,PAYMENT_TERM_CODE,SUM(NET_AMOUNT) AS AMOUNT1 FROM D_SAL_INVOICE_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND INVOICE_TYPE='"+Type+"' AND INVOICE_DATE>='"+FromDate+"' AND INVOICE_DATE<='"+yearmonth.concat("15")+"' GROUP BY SUBSTRING(PAYMENT_TERM_CODE,1,1)) AS B ON A.CH_CD=B.CH_CD) AS B LEFT JOIN (SELECT CONCAT(0,SUBSTRING(PAYMENT_TERM_CODE,1,1)) AS CH_CD,PAYMENT_TERM_CODE,SUM(NET_AMOUNT) AS AMOUNT2 FROM D_SAL_INVOICE_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND INVOICE_TYPE='"+Type+"' AND INVOICE_DATE>='"+yearmonth.concat("16")+"' AND INVOICE_DATE<='"+ToDate+"'  GROUP BY SUBSTRING(PAYMENT_TERM_CODE,1,1)) AS C ON B.CH_CD=C.CH_CD";
            //String str="SELECT SUBSTRING(PAYMENT_TERM_CODE,1,1),SUM(COALESCE(CASE WHEN EXTRACT(DAY FROM INVOICE_DATE) IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15) THEN NET_AMOUNT  END,0)),SUM(COALESCE(CASE WHEN EXTRACT(DAY FROM INVOICE_DATE) IN (16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31) THEN NET_AMOUNT  END,0)),SUM(NET_AMOUNT)  FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE ='"+Type+"' AND INVOICE_DATE >='"FromDate"' AND INVOICE_DATE <='"+ToDate+"' AND CANCELLED =0 AND APPROVED =1 GROUP BY SUBSTRING(PAYMENT_TERM_CODE,1,1)";                        
            
            ResultSet  rsTemp =data.getResult(str);
            if(rsTemp.getRow()>0) {
            while(!rsTemp.isAfterLast()){
                l++;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();                
                
                objRow.setValue("SR_NO",Integer.toString(l));                
                objRow.setValue("CH_CD",UtilFunctions.getString(rsTemp,"CH_CD",""));
                objRow.setValue("AMOUNT1",UtilFunctions.getString(rsTemp,"AMOUNT1",""));                
                objRow.setValue("AMOUNT2",UtilFunctions.getString(rsTemp,"AMOUNT2",""));
                objRow.setValue("AMOUNT",UtilFunctions.getString(rsTemp,"AMOUNT",""));
                objData.AddRow(objRow);                
                rsTemp.next();
            }
            }
            HashMap parameter=new HashMap();
            parameter.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            parameter.put("FROM_DATE",EITLERPGLOBAL.formatDate(FromDate));
            parameter.put("TO_DATE",EITLERPGLOBAL.formatDate(ToDate));
            parameter.put("INV_TYPE",InvoiceType+" Sales");
            //parameter.put("BOOK_NAME",clsBook.getBookName(EITLERPGLOBAL.gCompanyID,BookCode));
            //parameter.put("TOTAL_INVOICE_NO",Integer.toString(l));
            
            //parameter.put("NAME","ORDER");
            //parameter.put("LAST_DATE","15/02/2014"
            
            // EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/PostSJ/rptChargecdwiseSales.rpt",parameter,objData);
            rsTemp.close();            
           
        }catch(SQLException e) {
            e.printStackTrace();
            
        }
    }
        
    private void Generate248Report(String FromDate,String InvoiceType){
        try{
            String Condition="";
            int l=0;
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            objData.AddColumn("SR_NO");
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("AGENT_LAST_INVOICE");
            objData.AddColumn("AGENT_SR_NO");
            objData.AddColumn("INVOICE_NO");
            objData.AddColumn("YR1YR2");
            objData.AddColumn("INVOICE_DATE");
            objData.AddColumn("DUE_DATE");
            objData.AddColumn("NET_AMOUNT");            
            
            String str="SELECT A.PARTY_CODE AS PARTY_CODE,SUBSTRING(PARTY_NAME,1,40) AS PARTY_NAME,AGENT_LAST_INVOICE,AGENT_SR_NO,INVOICE_NO,YR1YR2,INVOICE_DATE, DUE_DATE,NET_AMOUNT FROM (SELECT PARTY_CODE,AGENT_LAST_INVOICE,AGENT_SR_NO,INVOICE_NO,CONCAT(FIN_YEAR_FROM,FIN_YEAR_TO) AS YR1YR2,INVOICE_DATE, DUE_DATE,NET_AMOUNT FROM D_SAL_INVOICE_HEADER WHERE INVOICE_DATE='"+FromDate+"' AND INVOICE_TYPE=1 AND APPROVED=1 AND CANCELLED=0 AND SUBSTRING(PAYMENT_TERM_CODE,1,1) IN ("+InvoiceType+") ORDER BY PARTY_CODE) AS A LEFT JOIN (SELECT PARTY_CODE,PARTY_NAME  FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE IN ('210010','210027','210072')) AS B ON A.PARTY_CODE=B.PARTY_CODE";
            System.out.println(str);                        
            ResultSet  rsTemp =data.getResult(str);
            if(rsTemp.getRow()>0) {
            while(!rsTemp.isAfterLast()){
                l++;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                objRow.setValue("SR_NO",Integer.toString(l));
                objRow.setValue("PARTY_CODE",UtilFunctions.getString(rsTemp,"PARTY_CODE",""));                
                objRow.setValue("PARTY_NAME",UtilFunctions.getString(rsTemp,"PARTY_NAME",""));
                objRow.setValue("AGENT_LAST_INVOICE",UtilFunctions.getString(rsTemp,"AGENT_LAST_INVOICE",""));
                objRow.setValue("AGENT_SR_NO",UtilFunctions.getString(rsTemp,"AGENT_SR_NO",""));
                //objRow.setValue("INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"INVOICE_DATE","")));
                objRow.setValue("INVOICE_NO",UtilFunctions.getString(rsTemp,"INVOICE_NO",""));
                objRow.setValue("YR1YR2",UtilFunctions.getString(rsTemp,"YR1YR2",""));
                objRow.setValue("INVOICE_DATE",UtilFunctions.getString(rsTemp,"INVOICE_DATE",""));
                objRow.setValue("DUE_DATE",UtilFunctions.getString(rsTemp,"DUE_DATE",""));
                objRow.setValue("NET_AMOUNT",UtilFunctions.getString(rsTemp,"NET_AMOUNT",""));
                objData.AddRow(objRow);                
                rsTemp.next();
            }
            }
            HashMap parameter=new HashMap();
            parameter.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            parameter.put("FROM_DATE",EITLERPGLOBAL.formatDate(FromDate));            
            parameter.put("INV_TYPE",InvoiceType);
            //parameter.put("BOOK_NAME",clsBook.getBookName(EITLERPGLOBAL.gCompanyID,BookCode));
            //parameter.put("TOTAL_INVOICE_NO",Integer.toString(l));
            
            //parameter.put("NAME","ORDER");
            //parameter.put("LAST_DATE","15/02/2014"
            
           // EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/PostSJ/rptChargecode020408.rpt",parameter,objData);
            rsTemp.close();            
           
        }catch(SQLException e) {
            e.printStackTrace();
            
        }
    }
    
}
