/*
 * 
 * Created on December 20, 2013, 12:14 PM
 */

package EITLERP.Sales.PostSJ;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import java.sql.*;
import EITLERP.*;
import EITLERP.Finance.UtilFunctions;

/**
 *
 * @author  Ashutosh Pathak
 */
public class frmRptPartyhavingReports extends javax.swing.JApplet {
    
    private EITLComboModel cmbInvoiceTypeModel;
    
    /** Initializes the applet frmABDReport */
    public void init() {
        initComponents();        
        setSize(420, 200);
        GenerateCombo();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        RptFromDate = new javax.swing.JTextField();
        RptToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbInvoiceType = new javax.swing.JComboBox();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("POST SJ REPORTS -PARTY MASTER LISTING");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 500, 25);

        lblStatus.setFont(new java.awt.Font("Dialog", 1, 14));
        lblStatus.setForeground(new java.awt.Color(0, 51, 255));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(20, 390, 450, 20);

        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 130, 0, 0);

        jButton2.setText("Party Having");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(30, 120, 200, 25);

        getContentPane().add(RptFromDate);
        RptFromDate.setBounds(140, 40, 80, 19);

        getContentPane().add(RptToDate);
        RptToDate.setBounds(260, 40, 80, 19);

        jLabel3.setText("AS ON Date");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 40, 90, 20);

        jLabel4.setText("To");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(230, 40, 20, 20);

        getContentPane().add(cmbInvoiceType);
        cmbInvoiceType.setBounds(30, 80, 120, 24);

    }//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String FromDate=EITLERPGLOBAL.formatDateDB(RptFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(RptToDate.getText());    
        //String InvoiceType=cmbInvoiceType.getSelectedItem().toString()+" Sales";
        String InvoiceType=cmbInvoiceType.getSelectedItem().toString();
        String Type=Integer.toString(cmbInvoiceType.getSelectedIndex());
        System.out.println(InvoiceType);
        System.out.println(Type);
        if(cmbInvoiceType.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Please Select any type");
            cmbInvoiceType.requestFocus();        
        }
        else{
            if(cmbInvoiceType.getSelectedIndex()==1){
            GeneratePartyhavingReport(FromDate,ToDate,"210027",InvoiceType);    
            }else if(cmbInvoiceType.getSelectedIndex()==2){
            GeneratePartyhavingReport(FromDate,ToDate,"210010",InvoiceType);    
            }else{
            GeneratePartyhavingReport(FromDate,ToDate,"210072",InvoiceType);        
            }            
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
                        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField RptFromDate;
    private javax.swing.JTextField RptToDate;
    private javax.swing.JComboBox cmbInvoiceType;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() { 
        cmbInvoiceTypeModel=new EITLComboModel();
        cmbInvoiceType.removeAllItems();
        cmbInvoiceType.setModel(cmbInvoiceTypeModel);
        
        ComboData aData=new ComboData();        
        aData.Text="-Select Type-";
        aData.Code=0;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="SUITINGS";
        aData.Code=1;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="FELT";
        aData.Code=2;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="FILTER FAB.";
        aData.Code=3;
        cmbInvoiceTypeModel.addElement(aData);
        
    }
    
    private void GeneratePartyhavingReport(String FromDate,String ToDate,String Type,String InvoiceType){
        try{
            String Condition="";
            int l=0;
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            objData.AddColumn("SUB_ACCOUNT_CODE");
            objData.AddColumn("AMOUNT");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("ADDRESS1");
            objData.AddColumn("ADDRESS2");
            objData.AddColumn("CITY_ID");
            objData.AddColumn("CITY_NAME");
            objData.AddColumn("CHARGE_CODE");
            objData.AddColumn("CHARGE_CODE_II");
            objData.AddColumn("DOCUMENT_THROUGH");
            objData.AddColumn("TRANSPORTER_ID");
            objData.AddColumn("AMOUNT_LIMIT");
            objData.AddColumn("BANK_ID");
            objData.AddColumn("BANK_NAME");
            objData.AddColumn("BANK_ADDRESS");
            objData.AddColumn("OTHER_BANK_ID");
            objData.AddColumn("OTHER_BANK_NAME");
            objData.AddColumn("OTHER_BANK_ADDRESS");
            objData.AddColumn("INSURANCE_CODE");
            objData.AddColumn("ECC_NO");
            objData.AddColumn("TIN_NO");
            
            String str="SELECT SUB_ACCOUNT_CODE,AMOUNT,PARTY_NAME,ADDRESS1,ADDRESS2,CITY_ID,CITY_NAME,CHARGE_CODE,CHARGE_CODE_II,DOCUMENT_THROUGH,TRANSPORTER_ID,AMOUNT_LIMIT,BANK_ID,BANK_NAME,BANK_ADDRESS,OTHER_BANK_ID,OTHER_BANK_NAME,OTHER_BANK_ADDRESS,INSURANCE_CODE,ECC_NO,TIN_NO FROM (SELECT B.SUB_ACCOUNT_CODE, SUM(B.AMOUNT) AS AMOUNT FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE<='"+ToDate+"' AND A.VOUCHER_TYPE IN (6,7,8,9,12) AND B.MAIN_ACCOUNT_CODE='"+Type+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.EXCLUDE_IN_ADJ =0 AND B.EFFECT='C' AND B.INVOICE_NO ='' AND B.MODULE_ID <>65 AND B.GRN_NO ='' AND (B.MATCHED=0 OR B.MATCHED IS NULL) GROUP BY B.SUB_ACCOUNT_CODE ORDER BY B.SUB_ACCOUNT_CODE) AS X LEFT JOIN (SELECT PARTY_CODE,PARTY_NAME,ADDRESS1,ADDRESS2,CITY_ID,CITY_NAME,CHARGE_CODE,CHARGE_CODE_II,DOCUMENT_THROUGH,TRANSPORTER_ID,AMOUNT_LIMIT,BANK_ID,BANK_NAME,BANK_ADDRESS,OTHER_BANK_ID,OTHER_BANK_NAME,OTHER_BANK_ADDRESS,INSURANCE_CODE,ECC_NO,TIN_NO FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='"+Type+"' AND APPROVED=1 AND CANCELLED=0) AS Y ON X.SUB_ACCOUNT_CODE=Y.PARTY_CODE";
            
            ResultSet  rsTemp =data.getResult(str);
            if(rsTemp.getRow()>0) {
            while(!rsTemp.isAfterLast()){
                l++;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();                
                //objRow.setValue("SR_NO",Integer.toString(l));
                System.out.println(l);
                System.out.println(UtilFunctions.getString(rsTemp,"SUB_ACCOUNT_CODE",""));
                objRow.setValue("SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTemp,"SUB_ACCOUNT_CODE",""));                
                objRow.setValue("AMOUNT",UtilFunctions.getString(rsTemp,"AMOUNT",""));
                String partyname=UtilFunctions.getString(rsTemp,"PARTY_NAME","");
                if(partyname.length()<=36){
                    objRow.setValue("PARTY_NAME",partyname);
                }else{
                objRow.setValue("PARTY_NAME",partyname.substring(0,36));    
                }                
                //objRow.setValue("PARTY_NAME",rsTemp.getString("PARTY_NAME").substring(0,10).trim());                
                String address1=UtilFunctions.getString(rsTemp,"ADDRESS1","");
                if(address1.length()<=36){
                objRow.setValue("ADDRESS1",address1);    
                }else{
                    objRow.setValue("ADDRESS1",address1.substring(0,36));
                }
                String address2=UtilFunctions.getString(rsTemp,"ADDRESS2","");
                if(address2.length()<=36){
                objRow.setValue("ADDRESS2",address2);    
                }else{
                    objRow.setValue("ADDRESS2",address2.substring(0,36));
                }                
                String cityid=UtilFunctions.getString(rsTemp,"CITY_ID","");
                if(cityid.length()<=16){
                objRow.setValue("CITY_ID",cityid);    
                }else{
                    objRow.setValue("CITY_ID",cityid.substring(0,16));
                }
                
                objRow.setValue("CITY_NAME",UtilFunctions.getString(rsTemp,"CITY_NAME",""));                
                objRow.setValue("CHARGE_CODE",UtilFunctions.getString(rsTemp,"CHARGE_CODE",""));
                objRow.setValue("CHARGE_CODE_II",UtilFunctions.getString(rsTemp,"CHARGE_CODE_II",""));                
                String docthru=UtilFunctions.getString(rsTemp,"DOCUMENT_THROUGH","");
                if(docthru.length()<=27){
                objRow.setValue("DOCUMENT_THROUGH",docthru);    
                }else{
                    objRow.setValue("DOCUMENT_THROUGH",docthru.substring(0,27));
                }                
                objRow.setValue("TRANSPORTER_ID",UtilFunctions.getString(rsTemp,"TRANSPORTER_ID",""));
                objRow.setValue("AMOUNT_LIMIT",UtilFunctions.getString(rsTemp,"AMOUNT_LIMIT",""));
                objRow.setValue("BANK_ID",UtilFunctions.getString(rsTemp,"BANK_ID",""));                
                String bankname=UtilFunctions.getString(rsTemp,"BANK_NAME","");
                if(bankname.length()<=27){
                objRow.setValue("BANK_NAME",bankname);    
                }else{
                    objRow.setValue("BANK_NAME",bankname.substring(0,27));
                }                
                String bankaddress=UtilFunctions.getString(rsTemp,"BANK_ADDRESS","");
                if(bankaddress.length()<=27){
                objRow.setValue("BANK_ADDRESS",bankaddress);    
                }else{
                    objRow.setValue("BANK_ADDRESS",bankaddress.substring(0,27));
                }                
                objRow.setValue("OTHER_BANK_ID",UtilFunctions.getString(rsTemp,"OTHER_BANK_ID",""));
                String otherbankname=UtilFunctions.getString(rsTemp,"OTHER_BANK_NAME","");
                if(otherbankname.length()<=27){
                objRow.setValue("OTHER_BANK_NAME",otherbankname);    
                }else{
                    objRow.setValue("OTHER_BANK_NAME",otherbankname.substring(0,27));
                }                
                String otherbankaddress=UtilFunctions.getString(rsTemp,"OTHER_BANK_ADDRESS","");
                if(otherbankaddress.length()<=27){
                objRow.setValue("OTHER_BANK_ADDRESS",otherbankaddress);    
                }else{
                    objRow.setValue("OTHER_BANK_ADDRESS",otherbankaddress.substring(0,27));
                }                
                objRow.setValue("INSURANCE_CODE",UtilFunctions.getString(rsTemp,"INSURANCE_CODE",""));
                String eccno=UtilFunctions.getString(rsTemp,"ECC_NO","");
                if(eccno.length()<=16){
                objRow.setValue("ECC_NO",eccno);    
                }else{
                    objRow.setValue("ECC_NO",eccno.substring(0,16));
                }                
                String tinno=UtilFunctions.getString(rsTemp,"TIN_NO","");
                if(tinno.length()<=16){
                objRow.setValue("TIN_NO",tinno);    //10    
                }else{
                    objRow.setValue("TIN_NO",tinno.substring(0,16));    //10
                }                
                objData.AddRow(objRow);
                rsTemp.next();
            }
            }
            HashMap parameter=new HashMap();
            parameter.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            parameter.put("FROM_DATE",EITLERPGLOBAL.formatDate(FromDate));
            parameter.put("TO_DATE",EITLERPGLOBAL.formatDate(ToDate));
            parameter.put("INV_TYPE",InvoiceType);
            //parameter.put("BOOK_NAME",clsBook.getBookName(EITLERPGLOBAL.gCompanyID,BookCode));
            //parameter.put("TOTAL_INVOICE_NO",Integer.toString(l));
            
            //parameter.put("NAME","ORDER");
            //parameter.put("LAST_DATE","15/02/2014"
            
           // EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/PostSJ/rptPartyhaving.rpt",parameter,objData);
            rsTemp.close();            
           
        }catch(SQLException e) {
            e.printStackTrace();
            
        }
    }
    
    
        
    
    
}
