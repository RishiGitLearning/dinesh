/*
 * 
 * Created on December 20, 2013, 12:14 PM
 */

package EITLERP.Sales.PostSJ;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import java.sql.*;
import EITLERP.*;
import EITLERP.Finance.UtilFunctions;

/**
 *
 * @author  Ashutosh Pathak
 */
public class frmRptBlendqualityReports extends javax.swing.JApplet {
    
    private EITLComboModel cmbInvoiceTypeModel;
    
    /** Initializes the applet frmABDReport */
    public void init() {
        initComponents();        
        setSize(420, 200);
        GenerateCombo();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        RptFromDate = new javax.swing.JTextField();
        RptToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbInvoiceType = new javax.swing.JComboBox();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("POST SJ REPORTS -BLEND/QUALITY WISE SALES ANALYSIS");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 500, 25);

        lblStatus.setFont(new java.awt.Font("Dialog", 1, 14));
        lblStatus.setForeground(new java.awt.Color(0, 51, 255));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(20, 390, 450, 20);

        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 130, 0, 0);

        jButton2.setText("Blend / Quality Wise Sales\n");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(30, 120, 240, 25);

        getContentPane().add(RptFromDate);
        RptFromDate.setBounds(120, 40, 80, 19);

        getContentPane().add(RptToDate);
        RptToDate.setBounds(240, 40, 80, 19);

        jLabel3.setText("From Date");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 40, 70, 20);

        jLabel4.setText("To");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(210, 40, 20, 20);

        getContentPane().add(cmbInvoiceType);
        cmbInvoiceType.setBounds(30, 80, 120, 24);

    }//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String FromDate=EITLERPGLOBAL.formatDateDB(RptFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(RptToDate.getText());    
        //String InvoiceType=cmbInvoiceType.getSelectedItem().toString()+" Sales";
        String InvoiceType=cmbInvoiceType.getSelectedItem().toString();
        String Type=Integer.toString(cmbInvoiceType.getSelectedIndex());
        System.out.println(InvoiceType);
        System.out.println(Type);
        if(cmbInvoiceType.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Please Select any type");
            cmbInvoiceType.requestFocus();
        }
        else{
            GenerateBlendqualitywiseReport(FromDate,ToDate,Type,InvoiceType);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
                        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField RptFromDate;
    private javax.swing.JTextField RptToDate;
    private javax.swing.JComboBox cmbInvoiceType;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() { 
        cmbInvoiceTypeModel=new EITLComboModel();
        cmbInvoiceType.removeAllItems();
        cmbInvoiceType.setModel(cmbInvoiceTypeModel);
        
        ComboData aData=new ComboData();        
        aData.Text="-Select Type-";
        aData.Code=0;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="ANKLESHWAR";
        aData.Code=1;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="BARODA";
        aData.Code=2;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="SAMPLE";
        aData.Code=3;
        cmbInvoiceTypeModel.addElement(aData);
        
    }
    
    private void GenerateBlendqualitywiseReport(String FromDate,String ToDate,String Type,String InvoiceType){
        try{
            String Condition="";
            int l=0;
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            objData.AddColumn("QLTY");            
            objData.AddColumn("BLENDDESC");
            objData.AddColumn("GROSS_QTY");
            objData.AddColumn("FLAG");
            objData.AddColumn("NET_QTY");
            objData.AddColumn("DEF_SPCL");
            objData.AddColumn("NET_AMT");
            objData.AddColumn("NET_EXC");
            objData.AddColumn("AVG_RATE");
            objData.AddColumn("MAX_RATE");
            objData.AddColumn("STDVAL");
            objData.AddColumn("PERC");
            
            String str="SELECT * FROM  (SELECT  CASE WHEN SUBSTRING(QLTY,1,1) IN (1,3) THEN 'BARODA'  WHEN SUBSTRING(QLTY,1,1) IN (5) THEN 'ANKLESHWAR' WHEN SUBSTRING(QLTY,1,1) NOT IN (1,3,5) THEN 'SAMPLE' END AS COMPANY, SUBSTRING(QLTY,1,3) AS BLEND_CD,QLTY, CASE WHEN SUBSTRING(QLTY,2,1)  != 5 THEN BLEND_STATUS WHEN SUBSTRING(QLTY,2,1)  IN ( 5)  THEN 'SPL ...UL'  WHEN QLTY  IS NULL THEN 'SPL ...UL'  END AS BLENDDESC, GROSS_QTY ,FLAG,NET_QTY,DEF_SPCL,NET_AMT,NET_EXC,AVG_RATE,MAX_RATE,STDVAL,PERC  FROM (SELECT *, ROUND(((STDVAL- NET_AMT)/STDVAL)*100,2) AS PERC  FROM  (SELECT D.QUALITY_NO AS QLTY,  ROUND(SUM(GROSS_QTY),2) AS GROSS_QTY, ROUND(SUM(FLAG_DEF_CODE+0),2) AS FLAG, ROUND(SUM(NET_QTY),2) AS NET_QTY, ROUND(SUM(TRD_DISCOUNT+DEF_DISCOUNT+ADDL_DISCOUNT),2) AS DEF_SPCL, ROUND(SUM(D.NET_AMOUNT),2) AS NET_AMT, ROUND(SUM(D.NET_AMOUNT+BASIC_EXC+ADDITIONAL_DUTY),2) AS NET_EXC, ROUND(SUM(D.NET_AMOUNT)/SUM(GROSS_QTY) ,2)  AS AVG_RATE, ROUND(MAX(RATE),2) AS MAX_RATE, ROUND(MAX(RATE),2)  * ROUND(SUM(GROSS_QTY),2)  AS STDVAL FROM D_SAL_INVOICE_DETAIL D ,D_SAL_INVOICE_HEADER H  WHERE D.INVOICE_DATE >= '"+FromDate+"'  AND D.INVOICE_DATE <= '"+ToDate+"'   AND D.INVOICE_TYPE =1 AND H.INVOICE_NO =D.INVOICE_NO AND H.INVOICE_DATE = D.INVOICE_DATE  AND H.INVOICE_TYPE = D.INVOICE_TYPE AND H.CANCELLED =0 AND H.APPROVED = 1  GROUP BY D.QUALITY_NO ) AS QNO) AS QLT LEFT JOIN  (SELECT DISTINCT QUALITY_ID,QUALITY_DESCRIPTION AS BLEND_STATUS FROM STGSALES.D_STG_QUALITY_MASTER WHERE CATAGORY_CODE IN (01,02,03,04,05) LIMIT 1000000000) AS PR ON SUBSTRING(QLTY,1,6) = SUBSTRING(QUALITY_ID,1,6) ) AS CMP  WHERE COMPANY ='"+InvoiceType+"'  ORDER BY QLTY ";
                        
            
            ResultSet  rsTemp =data.getResult(str);
            if(rsTemp.getRow()>0) {
            while(!rsTemp.isAfterLast()){
                l++;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();                
                objRow.setValue("QLTY",UtilFunctions.getString(rsTemp,"QLTY",""));
                objRow.setValue("BLENDDESC",UtilFunctions.getString(rsTemp,"BLENDDESC",""));                
                objRow.setValue("GROSS_QTY",UtilFunctions.getString(rsTemp,"GROSS_QTY",""));
                objRow.setValue("FLG",UtilFunctions.getString(rsTemp,"FLG",""));
                objRow.setValue("NET_QTY",UtilFunctions.getString(rsTemp,"NET_QTY",""));
                objRow.setValue("DEF_SPCL",UtilFunctions.getString(rsTemp,"DEF_SPCL",""));
                objRow.setValue("NET_AMT",UtilFunctions.getString(rsTemp,"NET_AMT",""));
                objRow.setValue("NET_EXC",UtilFunctions.getString(rsTemp,"NET_EXC",""));
                objRow.setValue("AVG_RATE",UtilFunctions.getString(rsTemp,"AVG_RATE",""));
                objRow.setValue("MAX_RATE",UtilFunctions.getString(rsTemp,"MAX_RATE",""));
                objRow.setValue("STDVAL",UtilFunctions.getString(rsTemp,"STDVAL",""));
                objRow.setValue("PERC",UtilFunctions.getString(rsTemp,"PERC",""));                
                objData.AddRow(objRow);                
                rsTemp.next();
            }
            }
            HashMap parameter=new HashMap();
            parameter.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            parameter.put("FROM_DATE",EITLERPGLOBAL.formatDate(FromDate));
            parameter.put("TO_DATE",EITLERPGLOBAL.formatDate(ToDate));
            parameter.put("INV_TYPE",InvoiceType);
            //parameter.put("BOOK_NAME",clsBook.getBookName(EITLERPGLOBAL.gCompanyID,BookCode));
            //parameter.put("TOTAL_INVOICE_NO",Integer.toString(l));
            
            //parameter.put("NAME","ORDER");
            //parameter.put("LAST_DATE","15/02/2014"
            
           // EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/PostSJ/blendqltystg.rpt",parameter,objData);
            rsTemp.close();            
           
        }catch(SQLException e) {
            e.printStackTrace();
            
        }
    }
    
    
        
    
    
}
