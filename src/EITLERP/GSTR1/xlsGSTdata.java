/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.GSTR1;

import EITLERP.ComboData;
import EITLERP.EITLComboModel;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.frmPendingApprovals;
import java.awt.Color;
import java.awt.Component;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.util.NumberToTextConverter;

/**
 *
 * @author Dharmendra PRAJAPATI
 *
 */
public class xlsGSTdata extends javax.swing.JApplet {

    static int tableWidth = 0; // set the tableWidth
    static int tableHeight = 0; // set the tableHeight

    private EITLTableModel DataModel;

    String seleval = "", seltyp = "", selqlt = "", selshd = "", selpiece = "", selext = "", selinv = "", selsz = "";
    

    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
    DateFormat dateForDB = new SimpleDateFormat("yyyy-MM-dd");

    public boolean PENDING_DOCUMENT = false; //for refresh pending document module
    public frmPendingApprovals frmPA;
    String fileName = "", btnclick = "";

    private EITLComboModel cmbYearModel;
    private EITLComboModel cmbMonthModel;

    public EITLERP.FeltSales.Reports.clsExcelExporter exprt = new EITLERP.FeltSales.Reports.clsExcelExporter();

    @Override
    public void init() {

        GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
        int scrwidth = gd.getDisplayMode().getWidth();
        int scrheight = gd.getDisplayMode().getHeight();
        setSize(scrwidth, scrheight);
        initComponents();
        file1.setVisible(false);
//        FormatGrid();
        DataModel = new EITLTableModel();
        Table.removeAll();

        Table.setModel(DataModel);
        Table.setAutoResizeMode(0);
        DataModel.ClearAllReadOnly();
        GenerateCombo();
        cmbMonth.setSelectedIndex(EITLERPGLOBAL.getMonth(EITLERPGLOBAL.getCurrentDateDB()));
        cmbYear.setSelectedIndex(1);

        lblTitle1.setForeground(Color.WHITE);
        cmbMonth.setSelectedIndex(0);
        cmbYear.setSelectedIndex(0);
         UpdateMatch();

    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void GenerateCombo() {

        ResultSet rsTmp;
        Connection tmpConn;
        Statement tmpStmt;
        tmpConn = data.getCreatedConn();

        cmbMonthModel = new EITLComboModel();
        cmbMonth.removeAllItems();  //Clearing previous contents
        cmbMonth.setModel(cmbMonthModel);

        ComboData aDataM = new ComboData();
        aDataM.Code = 0;
        aDataM.Text = "Select Month";
        cmbMonthModel.addElement(aDataM);

        for (int i = 1; i <= 12; i++) {
            aDataM.Code = i;
            if (i < 10) {
                aDataM.Text = String.valueOf(i) + " (" + EITLERPGLOBAL.getMonthName("2000-0" + String.valueOf(i) + "-01") + ")";
            } else {
                aDataM.Text = String.valueOf(i) + " (" + EITLERPGLOBAL.getMonthName("2000-" + String.valueOf(i) + "-01") + ")";
            }
            cmbMonthModel.addElement(aDataM);
        }

        long CounterY = 0;
        cmbYearModel = new EITLComboModel();
        cmbYear.removeAllItems();  //Clearing previous contents
        cmbYear.setModel(cmbYearModel);

        ComboData aDataY = new ComboData();
        aDataY.Code = CounterY;
        aDataY.Text = "Select Year";
        cmbYearModel.addElement(aDataY);

        try {
            tmpStmt = tmpConn.createStatement();
            rsTmp = tmpStmt.executeQuery("SELECT DISTINCT FILE_YEAR AS YEAR_ID FROM FINANCE.D_FIN_GST_PORTAL_DOWNLOAD ORDER BY FILE_YEAR DESC");

            while (rsTmp.next()) {
                aDataY.Code = ++CounterY;
                aDataY.Text = rsTmp.getString("YEAR_ID");
                cmbYearModel.addElement(aDataY);
            }

            rsTmp.close();
            tmpStmt.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void FormatGrid(String psql) {
        try {

            System.out.println("Sql Query :" + psql);
            ResultSet rs;
            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);
            rs = data.getResult(psql);
            ResultSetMetaData rsInfo = rs.getMetaData();

            //Format the table from the resultset meta data
            int i = 1;
            DataModel.ClearAllReadOnly();

            for (i = 1; i <= rsInfo.getColumnCount(); i++) {
                DataModel.addColumn(rsInfo.getColumnName(i));
                DataModel.SetReadOnly(i - 1);
            }
            final TableColumnModel columnModel = Table.getColumnModel();
            for (int column = 0; column < Table.getColumnCount(); column++) {
                int width = 100; // Min width
                for (int row = 0; row < Table.getRowCount(); row++) {
                    TableCellRenderer renderer = Table.getCellRenderer(row, column);
                    Component comp = Table.prepareRenderer(renderer, row, column);
                    width = Math.max(comp.getPreferredSize().width + 1, width);
                }
                if (width > 300) {
                    width = 300;
                }
                columnModel.getColumn(column).setPreferredWidth(width);
            }
            DataModel.TableReadOnly(true);
            rs.first();
            if (rs.getRow() > 0) {
                while (!rs.isAfterLast()) {
                    Object[] rowData = new Object[100];
                    for (int k = 0; k < 25; k++) {
                        rowData[k] = rs.getString(k + 1);
                    }
                    DataModel.addRow(rowData);
                    rs.next();
                }
            } else {
                JOptionPane.showMessageDialog(null, "No Such Data Found....");
                btnclick = "";
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        Tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblStatus1 = new javax.swing.JLabel();
        file1 = new javax.swing.JFileChooser();
        lblTitle1 = new javax.swing.JLabel();
        lblMonth = new javax.swing.JLabel();
        cmbMonth = new javax.swing.JComboBox();
        lblYear = new javax.swing.JLabel();
        cmbYear = new javax.swing.JComboBox();
        cmdunmatch = new javax.swing.JButton();
        cmdmatch = new javax.swing.JButton();
        cmdgst = new javax.swing.JButton();
        bexcel = new javax.swing.JButton();

        getContentPane().setLayout(null);

        Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        Tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table.setSelectionForeground(new java.awt.Color(51, 51, 255));
        Table.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TableFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TableFocusLost(evt);
            }
        });
        Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 900, 350);

        lblStatus1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus1.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(lblStatus1);
        lblStatus1.setBounds(10, 410, 900, 20);
        jPanel1.add(file1);
        file1.setBounds(270, 40, 300, 330);

        Tab.addTab("Data", jPanel1);

        getContentPane().add(Tab);
        Tab.setBounds(0, 140, 930, 380);

        lblTitle1.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle1.setText("GST Portal DOWNLOAD");
        lblTitle1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle1.setOpaque(true);
        getContentPane().add(lblTitle1);
        lblTitle1.setBounds(0, 0, 930, 30);

        lblMonth.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMonth.setText("Month");
        getContentPane().add(lblMonth);
        lblMonth.setBounds(10, 50, 50, 14);

        cmbMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonthItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbMonth);
        cmbMonth.setBounds(70, 50, 120, 20);

        lblYear.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblYear.setText("Year ");
        getContentPane().add(lblYear);
        lblYear.setBounds(190, 50, 50, 14);

        getContentPane().add(cmbYear);
        cmbYear.setBounds(250, 50, 120, 20);

        cmdunmatch.setText("Unmatch MIR/GRN");
        cmdunmatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdunmatchActionPerformed(evt);
            }
        });
        getContentPane().add(cmdunmatch);
        cmdunmatch.setBounds(350, 90, 150, 30);

        cmdmatch.setText("Match MIR/GRN");
        cmdmatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdmatchActionPerformed(evt);
            }
        });
        getContentPane().add(cmdmatch);
        cmdmatch.setBounds(180, 90, 160, 30);

        cmdgst.setText("Dwonloaded GST");
        cmdgst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdgstActionPerformed(evt);
            }
        });
        getContentPane().add(cmdgst);
        cmdgst.setBounds(20, 90, 150, 30);

        bexcel.setText("Export To Excel");
        bexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bexcelActionPerformed(evt);
            }
        });
        getContentPane().add(bexcel);
        bexcel.setBounds(510, 90, 160, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void TabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabMouseClicked

    }//GEN-LAST:event_TabMouseClicked

    private void TableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyPressed

    }//GEN-LAST:event_TableKeyPressed

    private void TableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableFocusLost
        // TODO add your handling code here:
        lblStatus1.setText("");
    }//GEN-LAST:event_TableFocusLost

    private void TableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_TableFocusGained

    private void cmbMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonthItemStateChanged
        // TODO add your handling code here:
//        System.out.println("Index Month : " + cmbMonth.getSelectedIndex());
    }//GEN-LAST:event_cmbMonthItemStateChanged

    private void bexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bexcelActionPerformed
        // TODO add your handling code here:
        if(btnclick.length()>0){
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exprt.fillData(Table, new File(file1.getSelectedFile().toString() + ".xls"), btnclick);
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        }else{
            JOptionPane.showMessageDialog(this, "No Data Availble...", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bexcelActionPerformed

    private void cmdgstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdgstActionPerformed
        // TODO add your handling code here:
        btnclick = "Downloaded GST";
        String sql;
        sql = "SELECT GST_TYPE,CASE WHEN LENGTH(FOR_THE_PERIOD)=5 THEN CONCAT('0',FOR_THE_PERIOD) ELSE FOR_THE_PERIOD END AS 'MMYYYY',"
                + "PARTY_GSTIN_NO,PARTY_NAME,FILING_STATUS,ITEM_NUMBER,INVOICE_NO,"
                + "CASE WHEN INVOICE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(INVOICE_DATE,'%d/%m/%Y') END AS INVOICE_DATE,GST_RATE,"
                + "TAXABLE_AMOUNT,NET_AMOUNT,SGST_AMOUNT,CGST_AMOUNT,IGST_AMOUNT,CESS_AMOUNT,INVOICE_TYPE,PLACE_OF_SUPPLY,REVERCE_CHARGE,"
                + "CREDIT_NOTE_NO,CASE WHEN CREDIT_NOTE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(CREDIT_NOTE_DATE,'%d/%m/%Y') END AS CREDIT_NOTE_DATE,"
                + "CREDIT_NOTE_TYPE,CREDIT_NOTE_ISSUE_GST_REASON,ORIGINAL_INVOICE_NO,"
                + "CASE WHEN ORIGINAL_INVOICE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(ORIGINAL_INVOICE_DATE,'%d/%m/%Y') END AS ORIGINAL_INVOICE_DATE,"
                + "FILE_NAME,"
                + "COALESCE(MATCH_MIR_NO,'') AS MIR_NO,CASE WHEN MATCH_MIR_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(MATCH_MIR_DATE,'%d/%m/%Y') END AS MIR_DATE,"
                + "COALESCE(MATCH_GRN_NO,'') AS GRN_NO,CASE WHEN MATCH_GRN_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(MATCH_GRN_DATE,'%d/%m/%Y') END AS GRN_DATE,"
                + "COALESCE(MATCH_VOUCHER_NO,'') AS VOUCHER_NO,CASE WHEN MATCH_VOUCHER_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(MATCH_VOUCHER_DATE,'%d/%m/%Y') END AS VOUCHER_DATE "
                + " FROM FINANCE.D_FIN_GST_PORTAL_DOWNLOAD  "
                + " WHERE FOR_THE_PERIOD='" + cmbMonth.getSelectedItem().toString().substring(0, 2).trim() + cmbYear.getSelectedItem().toString() + "'";
        FormatGrid(sql);

    }//GEN-LAST:event_cmdgstActionPerformed

    private void cmdmatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdmatchActionPerformed
        // TODO add your handling code here:
        btnclick = "Match MIR_GRN";
        String sql;
        sql = "SELECT GST_TYPE,CASE WHEN LENGTH(FOR_THE_PERIOD)=5 THEN CONCAT('0',FOR_THE_PERIOD) ELSE FOR_THE_PERIOD END AS 'MMYYYY',"
                + "PARTY_GSTIN_NO,PARTY_NAME,FILING_STATUS,ITEM_NUMBER,INVOICE_NO,"
                + "CASE WHEN INVOICE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(INVOICE_DATE,'%d/%m/%Y') END AS INVOICE_DATE,GST_RATE,"
                + "TAXABLE_AMOUNT,NET_AMOUNT,SGST_AMOUNT,CGST_AMOUNT,IGST_AMOUNT,CESS_AMOUNT,INVOICE_TYPE,PLACE_OF_SUPPLY,REVERCE_CHARGE,"
                + "CREDIT_NOTE_NO,CASE WHEN CREDIT_NOTE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(CREDIT_NOTE_DATE,'%d/%m/%Y') END AS CREDIT_NOTE_DATE,"
                + "CREDIT_NOTE_TYPE,CREDIT_NOTE_ISSUE_GST_REASON,ORIGINAL_INVOICE_NO,"
                + "CASE WHEN ORIGINAL_INVOICE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(ORIGINAL_INVOICE_DATE,'%d/%m/%Y') END AS ORIGINAL_INVOICE_DATE,"
                + "FILE_NAME,"
                + "COALESCE(MATCH_MIR_NO,'') AS MIR_NO,CASE WHEN MATCH_MIR_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(MATCH_MIR_DATE,'%d/%m/%Y') END AS MIR_DATE,"
                + "COALESCE(MATCH_GRN_NO,'') AS GRN_NO,CASE WHEN MATCH_GRN_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(MATCH_GRN_DATE,'%d/%m/%Y') END AS GRN_DATE,"
                + "COALESCE(MATCH_VOUCHER_NO,'') AS VOUCHER_NO,CASE WHEN MATCH_VOUCHER_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(MATCH_VOUCHER_DATE,'%d/%m/%Y') END AS VOUCHER_DATE "
                + " FROM FINANCE.D_FIN_GST_PORTAL_DOWNLOAD  "
                + " WHERE FOR_THE_PERIOD='" + cmbMonth.getSelectedItem().toString().substring(0, 2).trim() + cmbYear.getSelectedItem().toString() + "' "
                + " AND (LENGTH(COALESCE(MATCH_MIR_NO,''))>0 OR LENGTH(COALESCE(MATCH_GRN_NO,''))>0 OR LENGTH(COALESCE(MATCH_VOUCHER_NO,''))>0)";
        System.out.println(sql);
        FormatGrid(sql);
    }//GEN-LAST:event_cmdmatchActionPerformed

    private void cmdunmatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdunmatchActionPerformed
        // TODO add your handling code here:
        btnclick = "UnMatch MIR_GRN";
        String sql;
        sql = "SELECT GST_TYPE,CASE WHEN LENGTH(FOR_THE_PERIOD)=5 THEN CONCAT('0',FOR_THE_PERIOD) ELSE FOR_THE_PERIOD END AS 'MMYYYY',"
                + "PARTY_GSTIN_NO,PARTY_NAME,FILING_STATUS,ITEM_NUMBER,INVOICE_NO,"
                + "CASE WHEN INVOICE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(INVOICE_DATE,'%d/%m/%Y') END AS INVOICE_DATE,GST_RATE,"
                + "TAXABLE_AMOUNT,NET_AMOUNT,SGST_AMOUNT,CGST_AMOUNT,IGST_AMOUNT,CESS_AMOUNT,INVOICE_TYPE,PLACE_OF_SUPPLY,REVERCE_CHARGE,"
                + "CREDIT_NOTE_NO,CASE WHEN CREDIT_NOTE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(CREDIT_NOTE_DATE,'%d/%m/%Y') END AS CREDIT_NOTE_DATE,"
                + "CREDIT_NOTE_TYPE,CREDIT_NOTE_ISSUE_GST_REASON,ORIGINAL_INVOICE_NO,"
                + "CASE WHEN ORIGINAL_INVOICE_DATE='0000-00-00' THEN '' ELSE DATE_FORMAT(ORIGINAL_INVOICE_DATE,'%d/%m/%Y') END AS ORIGINAL_INVOICE_DATE,"
                + "FILE_NAME "
                + " FROM FINANCE.D_FIN_GST_PORTAL_DOWNLOAD  "
                + " WHERE FOR_THE_PERIOD='" + cmbMonth.getSelectedItem().toString().substring(0, 2).trim() + cmbYear.getSelectedItem().toString() + "' "
                + " AND LENGTH(COALESCE(MATCH_MIR_NO,''))=0 AND LENGTH(COALESCE(MATCH_GRN_NO,''))=0 AND LENGTH(COALESCE(MATCH_VOUCHER_NO,''))=0";
        FormatGrid(sql);
    }//GEN-LAST:event_cmdunmatchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JTable Table;
    private javax.swing.JButton bexcel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JComboBox cmbMonth;
    private javax.swing.JComboBox cmbYear;
    private javax.swing.JButton cmdgst;
    private javax.swing.JButton cmdmatch;
    private javax.swing.JButton cmdunmatch;
    private javax.swing.JFileChooser file1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblStatus1;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblYear;
    // End of variables declaration//GEN-END:variables

    private void UpdateMatch() {
        String sql = "";
        sql="UPDATE FINANCE.D_FIN_GST_PORTAL_DOWNLOAD D,DINESHMILLS.D_COM_SUPP_MASTER M "
                + " SET D.PARTY_NAME=M.SUPP_NAME "
                + " WHERE D.PARTY_GSTIN_NO=M.GSTIN_NO";
        System.out.println("Party Name:"+sql);
        data.Execute(sql);
        sql = "UPDATE FINANCE.D_FIN_GST_PORTAL_DOWNLOAD D,MIR_GST M "
                + " SET MATCH_MIR_NO = DOC_NO, MATCH_MIR_DATE = DOC_DATE      "
                + " WHERE D.INVOICE_NO = M.INVOICE_NO AND D.INVOICE_DATE = M.INVOICE_DATE AND "
                + " D.PARTY_GSTIN_NO = M.GSTIN_NO   "
                + " AND (MATCH_MIR_NO IS NULL OR MATCH_MIR_NO ='')";
        System.out.println("GRN Match:" + sql);
        data.Execute(sql);

        sql = "UPDATE FINANCE.D_FIN_GST_PORTAL_DOWNLOAD D, GRN_GST M "
                + " SET MATCH_GRN_NO = DOC_NO,MATCH_GRN_DATE = DOC_DATE"
                + " WHERE D.INVOICE_NO = M.INVOICE_NO AND D.INVOICE_DATE = M.INVOICE_DATE AND "
                + " D.PARTY_GSTIN_NO = M.GSTIN_NO AND (MATCH_GRN_NO IS NULL OR MATCH_GRN_NO ='')";
        System.out.println("MIR Match:" + sql);
        data.Execute(sql);
        sql = "UPDATE FINANCE.D_FIN_GST_PORTAL_DOWNLOAD D, UPLOAD_GST M "
                + " SET MATCH_VOUCHER_NO = DOC_NO,MATCH_VOUCHER_DATE = DOC_DATE "
                + " WHERE D.INVOICE_NO = M.INVOICE_NO AND D.INVOICE_DATE = M.INVOICE_DATE AND "
                + "D.PARTY_GSTIN_NO = M.GSTIN_NO AND (MATCH_VOUCHER_NO IS NULL OR MATCH_VOUCHER_NO ='')";
        System.out.println("Voucher Match:" + sql);
        data.Execute(sql);
    }
}
