/* frmFeltSalesInfo.java 
 * 
 * 
 * Created on July 13, 2005, 10:47 AM
 */
package EITLERP.GSTR1;

import EITLERP.*;
import java.awt.Color;
import java.io.File;
import java.sql.*;
import javax.swing.*;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.table.JTableHeader;

/**
 *
 * @author ashutosh/RISHI
 */
public class frmSaralGSTR1CNInfo extends javax.swing.JApplet {

    public boolean forceToChange = false;
    public boolean cancelled = false;
    private EITLTableModel[] DataModel;
    private EITLTableModel DataModelCN = new EITLTableModel();
    private EITLTableModel DataModelCN1 = new EITLTableModel();

    String strProductCode = "";
    private JDialog aDialog;
    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
    HashMap hmPieceList = new HashMap();
    String ORDER_BY = "";
    public EITLERP.FeltSales.Reports.clsExcelExporter exp = new EITLERP.FeltSales.Reports.clsExcelExporter();
    public EITLERP.FeltSales.Reports.clsExcelExporter exp1 = new EITLERP.FeltSales.Reports.clsExcelExporter();

    public void init() {
        initComponents();
        file1.setVisible(false);
        FormatGrid();//780, 560
        setSize(780, 600);
        jLabel1.setForeground(Color.WHITE);
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        Table_CN = new javax.swing.JTable();
        btnShowCN = new javax.swing.JButton();
        Export_CN = new javax.swing.JButton();
        file1 = new javax.swing.JFileChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        totalInvAmt = new javax.swing.JTextField();
        totalTaxAmt = new javax.swing.JTextField();
        totalCGSTAmt = new javax.swing.JTextField();
        totalSGSTAmt = new javax.swing.JTextField();
        totalIGSTAmt = new javax.swing.JTextField();
        CLR_BTN = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setBackground(new java.awt.Color(0, 102, 153));
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 70, 780, 10);

        txtFromDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(170, 30, 110, 30);

        txtToDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        txtToDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToDateFocusGained(evt);
            }
        });
        getContentPane().add(txtToDate);
        txtToDate.setBounds(380, 30, 100, 30);

        jPanel10.setLayout(null);

        Table_CN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_CN.setEnabled(false);
        Table_CN.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_CN.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_CN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_CNKeyPressed(evt);
            }
        });
        jScrollPane10.setViewportView(Table_CN);

        jPanel10.add(jScrollPane10);
        jScrollPane10.setBounds(10, 50, 720, 340);

        btnShowCN.setText("Show List");
        btnShowCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowCNActionPerformed(evt);
            }
        });
        jPanel10.add(btnShowCN);
        btnShowCN.setBounds(10, 10, 130, 30);

        Export_CN.setText("EXPORT TO EXCEL");
        Export_CN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_CNActionPerformed(evt);
            }
        });
        jPanel10.add(Export_CN);
        Export_CN.setBounds(540, 10, 170, 30);
        jPanel10.add(file1);
        file1.setBounds(150, -10, 517, 390);

        jLabel6.setText("NOTE VALUE");
        jPanel10.add(jLabel6);
        jLabel6.setBounds(110, 400, 110, 15);

        jLabel7.setText("TAXABLE VALUE");
        jPanel10.add(jLabel7);
        jLabel7.setBounds(230, 400, 110, 15);

        jLabel8.setText("CGST VALUE");
        jPanel10.add(jLabel8);
        jLabel8.setBounds(480, 400, 110, 15);

        jLabel9.setText("SGST VALUE");
        jPanel10.add(jLabel9);
        jLabel9.setBounds(360, 400, 110, 15);

        jLabel10.setText("IGST VALUE");
        jPanel10.add(jLabel10);
        jLabel10.setBounds(600, 400, 120, 15);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("TOTAL :");
        jPanel10.add(jLabel11);
        jLabel11.setBounds(30, 400, 70, 40);
        jPanel10.add(totalInvAmt);
        totalInvAmt.setBounds(110, 420, 110, 19);
        jPanel10.add(totalTaxAmt);
        totalTaxAmt.setBounds(230, 420, 110, 19);
        jPanel10.add(totalCGSTAmt);
        totalCGSTAmt.setBounds(470, 420, 110, 19);
        jPanel10.add(totalSGSTAmt);
        totalSGSTAmt.setBounds(350, 420, 110, 19);
        jPanel10.add(totalIGSTAmt);
        totalIGSTAmt.setBounds(590, 420, 110, 19);

        jTabbedPane2.addTab("CREDIT NOTE", jPanel10);

        getContentPane().add(jTabbedPane2);
        jTabbedPane2.setBounds(10, 80, 760, 470);

        CLR_BTN.setText("Clear");
        CLR_BTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CLR_BTN.setMargin(new java.awt.Insets(2, 7, 2, 7));
        CLR_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLR_BTNActionPerformed(evt);
            }
        });
        getContentPane().add(CLR_BTN);
        CLR_BTN.setBounds(540, 30, 80, 30);

        jLabel3.setText("Period : ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 30, 60, 20);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("From Date :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 30, 100, 20);

        jLabel5.setText("To Date :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(310, 30, 70, 20);

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("GSTR1 (CN) Upload Data");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 2, 780, 25);
    }// </editor-fold>//GEN-END:initComponents

    private void txtToDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToDateFocusGained

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void Table_CNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_CNKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_CNKeyPressed

    private void btnShowCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowCNActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        FormatGrid();
        GenerateCNData(ORDER_BY);
    }//GEN-LAST:event_btnShowCNActionPerformed

    private void Export_CNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_CNActionPerformed
        //        // TODO add your handling code here:
        //        try{
        //            exp.fillData(Table_CN,new File("/root/Desktop/gstr1_CN.xls"));
        //            exp.fillData(Table_CN,new File("D://gstr1_CN.xls"));
        //            JOptionPane.showMessageDialog(null, "Data saved at " +
        //                "'/root/Desktop/gstr1_CN.xls' successfully in Linux PC or 'D://gstr1_CN.xls' successfully in Windows PC    ", "Message",
        //                JOptionPane.INFORMATION_MESSAGE);
        //        }
        //        catch(Exception ex) {
        //            ex.printStackTrace();
        //        }
        // TODO add your handling code here:
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exp.fillData(Table_CN, new File(file1.getSelectedFile().toString() + ".xls"), "Sheet1");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_CNActionPerformed

    private void CLR_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLR_BTNActionPerformed
        txtFromDate.setText("");
        txtToDate.setText("");
        totalInvAmt.setText("");
        totalTaxAmt.setText("");
        totalSGSTAmt.setText("");
        totalCGSTAmt.setText("");
        totalIGSTAmt.setText("");
        FormatGrid();
    }//GEN-LAST:event_CLR_BTNActionPerformed

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter From Date");
            txtFromDate.requestFocus();
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.setText("");
            txtToDate.setText("");
            txtFromDate.requestFocus();
        } else if (!txtFromDate.getText().substring(0, 2).equals("01") && !txtFromDate.getText().substring(0, 2).equals("16")) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid From Date.(i.e O1/MM/YYYY or 16/MM/YYYY )");
            txtFromDate.setText("");
            txtToDate.setText("");
            txtFromDate.requestFocus();
//        } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "','2020-04-01') FROM DUAL") < 0) {
//            JOptionPane.showMessageDialog(null, "Please Enter From Date greater than or equal '01/04/2020'");
//            txtFromDate.requestFocus();
//            txtFromDate.setText("");
        } else {
            txtToDate.setText("");
            if (txtFromDate.getText().substring(0, 2).equals("01")) {
                String dt = getLastDay();
                txtToDate.setText(EITLERPGLOBAL.formatDate(dt));
                txtToDate.requestFocus();
            }
        }
    }//GEN-LAST:event_txtFromDateFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLR_BTN;
    private javax.swing.JButton Export_CN;
    private javax.swing.JTable Table_CN;
    private javax.swing.JButton btnShowCN;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFileChooser file1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField totalCGSTAmt;
    private javax.swing.JTextField totalIGSTAmt;
    private javax.swing.JTextField totalInvAmt;
    private javax.swing.JTextField totalSGSTAmt;
    private javax.swing.JTextField totalTaxAmt;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables

    private boolean Validate() {
        //Form level validations
        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter from Date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            return false;
        }

        if (txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter To Date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid To Date in DD/MM/YYYY format.");
            return false;
        }

        return true;
    }

    public String getLastDay() {
        String Date = data.getStringValueFromDB("SELECT LAST_DAY('" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "') FROM DUAL");
        return Date;
    }

    private void FormatGrid() {
        try {
            DataModelCN = new EITLTableModel();
            Table_CN.removeAll();

            Table_CN.setModel(DataModelCN);
            Table_CN.setAutoResizeMode(0);

            DataModelCN.addColumn("SrNo");
            DataModelCN.addColumn("GSTIN/ UID");
            DataModelCN.addColumn("Party Name");
            DataModelCN.addColumn("Type");
            DataModelCN.addColumn("Number");
            DataModelCN.addColumn("Date (dd/mm/yyyy)");
            DataModelCN.addColumn("Pre GST Regime Dr./ Cr. Notes");
            DataModelCN.addColumn("Place of Supply");
            DataModelCN.addColumn("Org Inv Number");
            DataModelCN.addColumn("Org Inv Date (dd/mm/yyyy)");
            DataModelCN.addColumn("Total Note Value");
            DataModelCN.addColumn("Taxable Value");
            DataModelCN.addColumn("HSN Code");
            DataModelCN.addColumn("GST Rate");
            DataModelCN.addColumn("IGST");
            DataModelCN.addColumn("CGST");
            DataModelCN.addColumn("SGST/UTGST");
            DataModelCN.addColumn("CESS");
            DataModelCN.addColumn("Org CN Number(if Amended)");
            DataModelCN.addColumn("Org CN Date(if Amended) (dd/mm/yyyy)");
            DataModelCN.addColumn("SEZ");

            DataModelCN.SetNumeric(10, true);
            DataModelCN.SetNumeric(11, true);
            DataModelCN.SetNumeric(14, true);
            DataModelCN.SetNumeric(15, true);
            DataModelCN.SetNumeric(16, true);

            Table_CN.getColumnModel().getColumn(0).setMinWidth(30);
            Table_CN.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_CN.getColumnModel().getColumn(1).setMinWidth(120);
            //Table_CN.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_CN.getColumnModel().getColumn(2).setMinWidth(120);
            //Table_CN.getColumnModel().getColumn(2).setMaxWidth(80);
            Table_CN.getColumnModel().getColumn(3).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(4).setMinWidth(80);
            //Table_CN.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_CN.getColumnModel().getColumn(5).setMinWidth(80);
            //Table_CN.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_CN.getColumnModel().getColumn(6).setMinWidth(80);
            //Table_CN.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_CN.getColumnModel().getColumn(7).setMinWidth(80);
            //Table_CN.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_CN.getColumnModel().getColumn(8).setMinWidth(80);
            //Table_CN.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_CN.getColumnModel().getColumn(9).setMinWidth(80);
            //Table_CN.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_CN.getColumnModel().getColumn(10).setMinWidth(80);
            //Table_CN.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_CN.getColumnModel().getColumn(11).setMinWidth(80);
            //Table_CN.getColumnModel().getColumn(11).setMaxWidth(80);
            Table_CN.getColumnModel().getColumn(12).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(13).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(14).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(15).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(16).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(17).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(18).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(19).setMinWidth(80);
            Table_CN.getColumnModel().getColumn(20).setMinWidth(80);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void GenerateCNData(String ORDER_BY) {

        try {

            data.Execute("TRUNCATE FINANCE.TMP_CN_GSTR_DATA ");

            data.Execute("INSERT INTO FINANCE.TMP_CN_GSTR_DATA (CN_NO,CN_DATE,HSN_CODE,GST_RATE) SELECT VOUCHER_NO,VOUCHER_DATE,59113290,12 FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE BOOK_CODE=7 AND VOUCHER_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND VOUCHER_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0 ");

            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,(SELECT VOUCHER_NO,SUB_ACCOUNT_CODE,SUM(AMOUNT) AS AMOUNT FROM FINANCE.D_FIN_VOUCHER_DETAIL,FINANCE.TMP_CN_GSTR_DATA WHERE CN_NO=VOUCHER_NO AND EFFECT='C' AND MAIN_ACCOUNT_CODE=210010 GROUP BY VOUCHER_NO) AS F SET PARTY_CODE=SUB_ACCOUNT_CODE, TOTAL_NOTE_VALUE=AMOUNT WHERE CN_NO=VOUCHER_NO ");
//            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,(SELECT VOUCHER_NO,SUB_ACCOUNT_CODE,PO_NO,PO_DATE,SUM(AMOUNT) AS AMOUNT FROM FINANCE.D_FIN_VOUCHER_DETAIL,FINANCE.TMP_CN_GSTR_DATA WHERE CN_NO=VOUCHER_NO AND EFFECT='C' AND MAIN_ACCOUNT_CODE=210010 GROUP BY VOUCHER_NO) AS F SET PARTY_CODE=SUB_ACCOUNT_CODE, ORIGINAL_INVOICE_NO=PO_NO, ORIGINAL_INVOICE_DATE=PO_DATE, TOTAL_NOTE_VALUE=AMOUNT WHERE CN_NO=VOUCHER_NO ");
            
            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,(SELECT CND_FIN_VOUCHER_NO,CND_INVOICE_NO,CND_INVOICE_DATE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL,FINANCE.TMP_CN_GSTR_DATA WHERE CN_NO=CND_FIN_VOUCHER_NO GROUP BY CND_FIN_VOUCHER_NO) AS F SET ORIGINAL_INVOICE_NO=CND_INVOICE_NO, ORIGINAL_INVOICE_DATE=CND_INVOICE_DATE WHERE CN_NO=CND_FIN_VOUCHER_NO ");

            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,(SELECT VOUCHER_NO,SUM(AMOUNT) AS AMOUNT FROM FINANCE.D_FIN_VOUCHER_DETAIL,FINANCE.TMP_CN_GSTR_DATA WHERE CN_NO=VOUCHER_NO AND EFFECT='D' AND MAIN_ACCOUNT_CODE NOT IN (SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE ACCOUNT_NAME LIKE ('%IGST%') OR ACCOUNT_NAME LIKE ('%CGST%') OR ACCOUNT_NAME LIKE ('%SGST%')) GROUP BY VOUCHER_NO) AS F SET TAXABLE_VALUE=AMOUNT WHERE CN_NO=VOUCHER_NO ");

            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,(SELECT VOUCHER_NO,SUM(AMOUNT) AS AMOUNT FROM FINANCE.D_FIN_VOUCHER_DETAIL,FINANCE.TMP_CN_GSTR_DATA WHERE CN_NO=VOUCHER_NO AND EFFECT='D' AND MAIN_ACCOUNT_CODE IN (SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE ACCOUNT_NAME LIKE ('%IGST%')) GROUP BY VOUCHER_NO) AS F SET IGST_AMT=AMOUNT WHERE CN_NO=VOUCHER_NO ");

            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,(SELECT VOUCHER_NO,SUM(AMOUNT) AS AMOUNT FROM FINANCE.D_FIN_VOUCHER_DETAIL,FINANCE.TMP_CN_GSTR_DATA WHERE CN_NO=VOUCHER_NO AND EFFECT='D' AND MAIN_ACCOUNT_CODE IN (SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE ACCOUNT_NAME LIKE ('%CGST%')) GROUP BY VOUCHER_NO) AS F SET CGST_AMT=AMOUNT WHERE CN_NO=VOUCHER_NO ");

            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,(SELECT VOUCHER_NO,SUM(AMOUNT) AS AMOUNT FROM FINANCE.D_FIN_VOUCHER_DETAIL,FINANCE.TMP_CN_GSTR_DATA WHERE CN_NO=VOUCHER_NO AND EFFECT='D' AND MAIN_ACCOUNT_CODE IN (SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE ACCOUNT_NAME LIKE ('%SGST%')) GROUP BY VOUCHER_NO) AS F SET SGST_AMT=AMOUNT WHERE CN_NO=VOUCHER_NO ");

            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,DINESHMILLS.D_SAL_PARTY_MASTER P SET T.PARTY_NAME=P.PARTY_NAME, T.GSTIN_NO=P.GSTIN_NO WHERE T.PARTY_CODE=P.PARTY_CODE ");

            data.Execute("UPDATE FINANCE.TMP_CN_GSTR_DATA T,DINESHMILLS.D_SAL_STATE_MASTER S SET T.PLACE_OF_SUPPLY=S.GST_PLACE_OF_SUPPLY WHERE SUBSTRING(T.GSTIN_NO,1,2)=SUBSTRING(S.GST_PLACE_OF_SUPPLY,1,2) AND TRIM(T.GSTIN_NO)!='' ");

            String strSQL = "SELECT * FROM FINANCE.TMP_CN_GSTR_DATA ORDER BY CN_NO";

            ResultSet rs = data.getResult(strSQL);
            int cnt = 1;

            if (rs.getRow() > 0) {
                while (!rs.isAfterLast()) {

                    Object[] rowData = new Object[25];
                    rowData[0] = cnt++;
                    rowData[1] = rs.getString("GSTIN_NO");
                    rowData[2] = rs.getString("PARTY_NAME");
                    rowData[3] = "Credit";
                    rowData[4] = rs.getString("CN_NO");
                    rowData[5] = df.format(rs.getDate("CN_DATE"));
                    rowData[6] = "No";
                    rowData[7] = rs.getString("PLACE_OF_SUPPLY");
                    rowData[8] = rs.getString("ORIGINAL_INVOICE_NO");
                    if (!rs.getString("ORIGINAL_INVOICE_DATE").equals("0000-00-00")) {
                        rowData[9] = df.format(rs.getDate("ORIGINAL_INVOICE_DATE"));
                    } else {
                        rowData[9] = "";
                    }                    
                    rowData[10] = rs.getString("TOTAL_NOTE_VALUE");
                    rowData[11] = rs.getString("TAXABLE_VALUE");
                    rowData[12] = rs.getString("HSN_CODE");
                    rowData[13] = rs.getInt("GST_RATE");
                    rowData[14] = rs.getString("IGST_AMT");
                    rowData[15] = rs.getString("CGST_AMT");
                    rowData[16] = rs.getString("SGST_AMT");
                    rowData[17] = "";
                    rowData[18] = "";
                    rowData[19] = "";
                    rowData[20] = "No";

                    DataModelCN.addRow(rowData);
                    rs.next();
                }
                rs.close();

            } else {
                JOptionPane.showMessageDialog(this, "No Record Found...", "MESSAGE", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }

        String sql;
        sql = "SELECT cast(SUM(TOTAL_NOTE_VALUE) as decimal(65,2)) FROM FINANCE.TMP_CN_GSTR_DATA";
        String invAmt = data.getStringValueFromDB(sql);
        totalInvAmt.setText(invAmt);

        sql = "SELECT cast(SUM(TAXABLE_VALUE) as decimal(65,2)) FROM FINANCE.TMP_CN_GSTR_DATA";
        String taxAmt = data.getStringValueFromDB(sql);
        totalTaxAmt.setText(taxAmt);

        sql = "SELECT cast(SUM(SGST_AMT) as decimal(65,2)) FROM FINANCE.TMP_CN_GSTR_DATA";
        String SGSTAmt = data.getStringValueFromDB(sql);
        totalSGSTAmt.setText(SGSTAmt);

        sql = "SELECT cast(SUM(CGST_AMT) as decimal(65,2)) FROM FINANCE.TMP_CN_GSTR_DATA";
        String CGSTAmt = data.getStringValueFromDB(sql);
        totalCGSTAmt.setText(CGSTAmt);

        sql = "SELECT cast(SUM(IGST_AMT) as decimal(65,2)) FROM FINANCE.TMP_CN_GSTR_DATA";
        String IGSTAmt = data.getStringValueFromDB(sql);
        totalIGSTAmt.setText(IGSTAmt);
    }

}
