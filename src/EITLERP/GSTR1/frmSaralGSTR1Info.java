/* frmFeltSalesInfo.java 
 * 
 * 
 * Created on July 13, 2005, 10:47 AM
 */
package EITLERP.GSTR1;

import EITLERP.*;
import EITLERP.Finance.FinanceGlobal;
import java.awt.Color;
import java.io.File;
import java.sql.*;
import javax.swing.*;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.table.JTableHeader;

/**
 *
 * @author ashutosh/RISHI
 */
public class frmSaralGSTR1Info extends javax.swing.JApplet {

    public boolean forceToChange = false;
    public boolean cancelled = false;
    private EITLTableModel[] DataModel;
    private EITLTableModel DataModelB2B = new EITLTableModel();
    private EITLTableModel DataModelB2B1 = new EITLTableModel();
    private EITLTableModel DataModelMisc = new EITLTableModel();

    String strProductCode = "";
    private JDialog aDialog;
    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
    HashMap hmPieceList = new HashMap();
    String ORDER_BY = "";
    public EITLERP.FeltSales.Reports.clsExcelExporter exp = new EITLERP.FeltSales.Reports.clsExcelExporter();
    public EITLERP.FeltSales.Reports.clsExcelExporter exp1 = new EITLERP.FeltSales.Reports.clsExcelExporter();
    public EITLERP.FeltSales.Reports.clsExcelExporter expMisc = new EITLERP.FeltSales.Reports.clsExcelExporter();

    public void init() {
        initComponents();
        file1.setVisible(false);
        file2.setVisible(false);
        file3.setVisible(false);
        Export_SaralGST1.setVisible(false);
        FormatGrid();//780, 560
        FormatGridtillSep();
        FormatGridMisc();
        setSize(780, 600);
        jLabel1.setForeground(Color.WHITE);
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        Table_b2b1 = new javax.swing.JTable();
        btnShowB2B1 = new javax.swing.JButton();
        Export_B2B1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        totalInvAmt1 = new javax.swing.JTextField();
        totalTaxAmt1 = new javax.swing.JTextField();
        totalCGSTAmt1 = new javax.swing.JTextField();
        totalSGSTAmt1 = new javax.swing.JTextField();
        totalIGSTAmt1 = new javax.swing.JTextField();
        Export_SaralGST1 = new javax.swing.JButton();
        file2 = new javax.swing.JFileChooser();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        Table_b2b = new javax.swing.JTable();
        btnShowB2B = new javax.swing.JButton();
        Export_B2B = new javax.swing.JButton();
        file1 = new javax.swing.JFileChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        totalInvAmt = new javax.swing.JTextField();
        totalTaxAmt = new javax.swing.JTextField();
        totalCGSTAmt = new javax.swing.JTextField();
        totalSGSTAmt = new javax.swing.JTextField();
        totalIGSTAmt = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        Table_Misc = new javax.swing.JTable();
        btnShowMisc = new javax.swing.JButton();
        Export_Misc = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        totalInvAmtMisc = new javax.swing.JTextField();
        totalTaxAmtMisc = new javax.swing.JTextField();
        totalCGSTAmtMisc = new javax.swing.JTextField();
        totalSGSTAmtMisc = new javax.swing.JTextField();
        totalIGSTAmtMisc = new javax.swing.JTextField();
        file3 = new javax.swing.JFileChooser();
        CLR_BTN = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setBackground(new java.awt.Color(0, 102, 153));
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 70, 780, 10);

        txtFromDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(170, 30, 110, 30);

        txtToDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        txtToDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToDateFocusGained(evt);
            }
        });
        getContentPane().add(txtToDate);
        txtToDate.setBounds(380, 30, 100, 30);

        jPanel11.setLayout(null);

        Table_b2b1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_b2b1.setEnabled(false);
        Table_b2b1.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_b2b1.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_b2b1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_b2b1KeyPressed(evt);
            }
        });
        jScrollPane11.setViewportView(Table_b2b1);

        jPanel11.add(jScrollPane11);
        jScrollPane11.setBounds(10, 50, 720, 340);

        btnShowB2B1.setText("Show List");
        btnShowB2B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowB2B1ActionPerformed(evt);
            }
        });
        jPanel11.add(btnShowB2B1);
        btnShowB2B1.setBounds(10, 10, 130, 30);

        Export_B2B1.setText("EXPORT TO EXCEL");
        Export_B2B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_B2B1ActionPerformed(evt);
            }
        });
        jPanel11.add(Export_B2B1);
        Export_B2B1.setBounds(540, 10, 170, 30);

        jLabel12.setText("INVOICE VALUE");
        jPanel11.add(jLabel12);
        jLabel12.setBounds(110, 400, 110, 15);

        jLabel13.setText("TAXABLE VALUE");
        jPanel11.add(jLabel13);
        jLabel13.setBounds(230, 400, 110, 15);

        jLabel14.setText("CGST VALUE");
        jPanel11.add(jLabel14);
        jLabel14.setBounds(480, 400, 110, 15);

        jLabel15.setText("SGST VALUE");
        jPanel11.add(jLabel15);
        jLabel15.setBounds(360, 400, 110, 15);

        jLabel16.setText("IGST VALUE");
        jPanel11.add(jLabel16);
        jLabel16.setBounds(600, 400, 120, 15);

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel17.setText("TOTAL :");
        jPanel11.add(jLabel17);
        jLabel17.setBounds(30, 400, 70, 40);
        jPanel11.add(totalInvAmt1);
        totalInvAmt1.setBounds(110, 420, 110, 19);
        jPanel11.add(totalTaxAmt1);
        totalTaxAmt1.setBounds(230, 420, 110, 19);
        jPanel11.add(totalCGSTAmt1);
        totalCGSTAmt1.setBounds(470, 420, 110, 19);
        jPanel11.add(totalSGSTAmt1);
        totalSGSTAmt1.setBounds(350, 420, 110, 19);
        jPanel11.add(totalIGSTAmt1);
        totalIGSTAmt1.setBounds(590, 420, 110, 19);

        Export_SaralGST1.setText("EXPORT TO SARAL GST");
        Export_SaralGST1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_SaralGST1ActionPerformed(evt);
            }
        });
        jPanel11.add(Export_SaralGST1);
        Export_SaralGST1.setBounds(250, 10, 200, 30);
        jPanel11.add(file2);
        file2.setBounds(150, -10, 517, 390);

        jTabbedPane2.addTab("B2B - till Sep or Gov. Next Notification", jPanel11);

        jPanel10.setLayout(null);

        Table_b2b.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_b2b.setEnabled(false);
        Table_b2b.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_b2b.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_b2b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_b2bKeyPressed(evt);
            }
        });
        jScrollPane10.setViewportView(Table_b2b);

        jPanel10.add(jScrollPane10);
        jScrollPane10.setBounds(10, 50, 720, 340);

        btnShowB2B.setText("Show List");
        btnShowB2B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowB2BActionPerformed(evt);
            }
        });
        jPanel10.add(btnShowB2B);
        btnShowB2B.setBounds(10, 10, 130, 30);

        Export_B2B.setText("EXPORT TO EXCEL");
        Export_B2B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_B2BActionPerformed(evt);
            }
        });
        jPanel10.add(Export_B2B);
        Export_B2B.setBounds(540, 10, 170, 30);
        jPanel10.add(file1);
        file1.setBounds(150, -10, 517, 390);

        jLabel6.setText("INVOICE VALUE");
        jPanel10.add(jLabel6);
        jLabel6.setBounds(110, 400, 110, 15);

        jLabel7.setText("TAXABLE VALUE");
        jPanel10.add(jLabel7);
        jLabel7.setBounds(230, 400, 110, 15);

        jLabel8.setText("CGST VALUE");
        jPanel10.add(jLabel8);
        jLabel8.setBounds(480, 400, 110, 15);

        jLabel9.setText("SGST VALUE");
        jPanel10.add(jLabel9);
        jLabel9.setBounds(360, 400, 110, 15);

        jLabel10.setText("IGST VALUE");
        jPanel10.add(jLabel10);
        jLabel10.setBounds(600, 400, 120, 15);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("TOTAL :");
        jPanel10.add(jLabel11);
        jLabel11.setBounds(30, 400, 70, 40);
        jPanel10.add(totalInvAmt);
        totalInvAmt.setBounds(110, 420, 110, 19);
        jPanel10.add(totalTaxAmt);
        totalTaxAmt.setBounds(230, 420, 110, 19);
        jPanel10.add(totalCGSTAmt);
        totalCGSTAmt.setBounds(470, 420, 110, 19);
        jPanel10.add(totalSGSTAmt);
        totalSGSTAmt.setBounds(350, 420, 110, 19);
        jPanel10.add(totalIGSTAmt);
        totalIGSTAmt.setBounds(590, 420, 110, 19);

        jTabbedPane2.addTab("B2B - after Sep or Gov. Next Notification", jPanel10);

        jPanel12.setLayout(null);

        Table_Misc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_Misc.setEnabled(false);
        Table_Misc.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_Misc.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_Misc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_MiscKeyPressed(evt);
            }
        });
        jScrollPane12.setViewportView(Table_Misc);

        jPanel12.add(jScrollPane12);
        jScrollPane12.setBounds(10, 50, 720, 340);

        btnShowMisc.setText("Show List");
        btnShowMisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowMiscActionPerformed(evt);
            }
        });
        jPanel12.add(btnShowMisc);
        btnShowMisc.setBounds(10, 10, 130, 30);

        Export_Misc.setText("EXPORT TO EXCEL");
        Export_Misc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_MiscActionPerformed(evt);
            }
        });
        jPanel12.add(Export_Misc);
        Export_Misc.setBounds(540, 10, 170, 30);

        jLabel18.setText("INVOICE VALUE");
        jPanel12.add(jLabel18);
        jLabel18.setBounds(110, 400, 110, 15);

        jLabel19.setText("TAXABLE VALUE");
        jPanel12.add(jLabel19);
        jLabel19.setBounds(230, 400, 110, 15);

        jLabel20.setText("CGST VALUE");
        jPanel12.add(jLabel20);
        jLabel20.setBounds(480, 400, 110, 15);

        jLabel21.setText("SGST VALUE");
        jPanel12.add(jLabel21);
        jLabel21.setBounds(360, 400, 110, 15);

        jLabel22.setText("IGST VALUE");
        jPanel12.add(jLabel22);
        jLabel22.setBounds(600, 400, 120, 15);

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel23.setText("TOTAL :");
        jPanel12.add(jLabel23);
        jLabel23.setBounds(30, 400, 70, 40);
        jPanel12.add(totalInvAmtMisc);
        totalInvAmtMisc.setBounds(110, 420, 110, 19);
        jPanel12.add(totalTaxAmtMisc);
        totalTaxAmtMisc.setBounds(230, 420, 110, 19);
        jPanel12.add(totalCGSTAmtMisc);
        totalCGSTAmtMisc.setBounds(470, 420, 110, 19);
        jPanel12.add(totalSGSTAmtMisc);
        totalSGSTAmtMisc.setBounds(350, 420, 110, 19);
        jPanel12.add(totalIGSTAmtMisc);
        totalIGSTAmtMisc.setBounds(590, 420, 110, 19);
        jPanel12.add(file3);
        file3.setBounds(150, -10, 517, 390);

        jTabbedPane2.addTab("Miscellaneous Sales", jPanel12);

        getContentPane().add(jTabbedPane2);
        jTabbedPane2.setBounds(10, 80, 760, 470);

        CLR_BTN.setText("Clear");
        CLR_BTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CLR_BTN.setMargin(new java.awt.Insets(2, 7, 2, 7));
        CLR_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLR_BTNActionPerformed(evt);
            }
        });
        getContentPane().add(CLR_BTN);
        CLR_BTN.setBounds(540, 30, 80, 30);

        jLabel3.setText("Period : ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 30, 60, 20);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("From Date :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 30, 100, 20);

        jLabel5.setText("To Date :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(310, 30, 70, 20);

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("GSTR1 (B2B) Upload Data from Sales Invoicing");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 2, 780, 25);
    }// </editor-fold>//GEN-END:initComponents

    private void txtToDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToDateFocusGained

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void Table_b2bKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_b2bKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_b2bKeyPressed

    private void btnShowB2BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowB2BActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        FormatGrid();
        GenerateB2BData(ORDER_BY);
    }//GEN-LAST:event_btnShowB2BActionPerformed

    private void Export_B2BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_B2BActionPerformed
        //        // TODO add your handling code here:
        //        try{
        //            exp.fillData(Table_b2b,new File("/root/Desktop/gstr1_B2B.xls"));
        //            exp.fillData(Table_b2b,new File("D://gstr1_B2B.xls"));
        //            JOptionPane.showMessageDialog(null, "Data saved at " +
        //                "'/root/Desktop/gstr1_B2B.xls' successfully in Linux PC or 'D://gstr1_B2B.xls' successfully in Windows PC    ", "Message",
        //                JOptionPane.INFORMATION_MESSAGE);
        //        }
        //        catch(Exception ex) {
        //            ex.printStackTrace();
        //        }
        // TODO add your handling code here:
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exp.fillData(Table_b2b, new File(file1.getSelectedFile().toString() + ".xls"), "Sheet1");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_B2BActionPerformed

    private void CLR_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLR_BTNActionPerformed
        txtFromDate.setText("");
        txtToDate.setText("");
        totalInvAmt.setText("");
        totalTaxAmt.setText("");
        totalSGSTAmt.setText("");
        totalCGSTAmt.setText("");
        totalIGSTAmt.setText("");
        FormatGrid();
    }//GEN-LAST:event_CLR_BTNActionPerformed

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter From Date");
            txtFromDate.requestFocus();
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.setText("");
            txtToDate.setText("");
            txtFromDate.requestFocus();
        } else if (!txtFromDate.getText().substring(0, 2).equals("01") && !txtFromDate.getText().substring(0, 2).equals("16")) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid From Date.(i.e O1/MM/YYYY or 16/MM/YYYY )");
            txtFromDate.setText("");
            txtToDate.setText("");
            txtFromDate.requestFocus();
//        } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "','2020-04-01') FROM DUAL") < 0) {
//            JOptionPane.showMessageDialog(null, "Please Enter From Date greater than or equal '01/04/2020'");
//            txtFromDate.requestFocus();
//            txtFromDate.setText("");
        } else {
            txtToDate.setText("");
            if (txtFromDate.getText().substring(0, 2).equals("01")) {
                String dt = getLastDay();
                txtToDate.setText(EITLERPGLOBAL.formatDate(dt));
                txtToDate.requestFocus();
            }
        }
    }//GEN-LAST:event_txtFromDateFocusLost

    private void Table_b2b1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_b2b1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_b2b1KeyPressed

    private void btnShowB2B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowB2B1ActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        FormatGridtillSep();
        GenerateB2BDatatillSep(ORDER_BY);
    }//GEN-LAST:event_btnShowB2B1ActionPerformed

    private void Export_B2B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_B2B1ActionPerformed
        // TODO add your handling code here:
        try {
            File file_1 = null;
            file2.setVisible(true);
            int returnVal = file2.showSaveDialog(this);
            if (returnVal == file2.APPROVE_OPTION) {
                file_1 = file2.getSelectedFile();
            }
            file2.setVisible(false);

            exp1.fillData(Table_b2b1, new File(file2.getSelectedFile().toString() + ".xls"), "Sheet1");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file_1.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_B2B1ActionPerformed

    private void Export_SaralGST1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_SaralGST1ActionPerformed
        // TODO add your handling code here:
        InsertIntoSaralGST();
    }//GEN-LAST:event_Export_SaralGST1ActionPerformed

    private void Table_MiscKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_MiscKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_MiscKeyPressed

    private void btnShowMiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowMiscActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        FormatGridMisc();
        GenerateB2BDataMisc(ORDER_BY);
    }//GEN-LAST:event_btnShowMiscActionPerformed

    private void Export_MiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_MiscActionPerformed
        // TODO add your handling code here:
        try {
            File file_3 = null;
            file3.setVisible(true);
            int returnVal = file3.showSaveDialog(this);
            if (returnVal == file3.APPROVE_OPTION) {
                file_3 = file3.getSelectedFile();
            }
            file3.setVisible(false);

            expMisc.fillData(Table_Misc, new File(file3.getSelectedFile().toString() + ".xls"), "Sheet1");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file_3.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_MiscActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLR_BTN;
    private javax.swing.JButton Export_B2B;
    private javax.swing.JButton Export_B2B1;
    private javax.swing.JButton Export_Misc;
    private javax.swing.JButton Export_SaralGST1;
    private javax.swing.JTable Table_Misc;
    private javax.swing.JTable Table_b2b;
    private javax.swing.JTable Table_b2b1;
    private javax.swing.JButton btnShowB2B;
    private javax.swing.JButton btnShowB2B1;
    private javax.swing.JButton btnShowMisc;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFileChooser file1;
    private javax.swing.JFileChooser file2;
    private javax.swing.JFileChooser file3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField totalCGSTAmt;
    private javax.swing.JTextField totalCGSTAmt1;
    private javax.swing.JTextField totalCGSTAmtMisc;
    private javax.swing.JTextField totalIGSTAmt;
    private javax.swing.JTextField totalIGSTAmt1;
    private javax.swing.JTextField totalIGSTAmtMisc;
    private javax.swing.JTextField totalInvAmt;
    private javax.swing.JTextField totalInvAmt1;
    private javax.swing.JTextField totalInvAmtMisc;
    private javax.swing.JTextField totalSGSTAmt;
    private javax.swing.JTextField totalSGSTAmt1;
    private javax.swing.JTextField totalSGSTAmtMisc;
    private javax.swing.JTextField totalTaxAmt;
    private javax.swing.JTextField totalTaxAmt1;
    private javax.swing.JTextField totalTaxAmtMisc;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables

    private boolean Validate() {
        //Form level validations
        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter from Date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            return false;
        }

        if (txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter To Date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid To Date in DD/MM/YYYY format.");
            return false;
        }

        return true;
    }
    
    public String getLastDay() {
        String Date = data.getStringValueFromDB("SELECT LAST_DAY('" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "') FROM DUAL");
        return Date;
    }

    private void FormatGrid() {
        try {
            DataModelB2B = new EITLTableModel();
            Table_b2b.removeAll();

            Table_b2b.setModel(DataModelB2B);
            Table_b2b.setAutoResizeMode(0);

            DataModelB2B.addColumn("SrNo");
            DataModelB2B.addColumn("GSTIN/UID of Recipient");
            DataModelB2B.addColumn("Party Name");
            DataModelB2B.addColumn("Type");
            DataModelB2B.addColumn("Number");
            DataModelB2B.addColumn("Date (dd/mm/yyyy)");
            DataModelB2B.addColumn("Document Value");
            DataModelB2B.addColumn("Taxable Value");
            DataModelB2B.addColumn("GST Rate");
            DataModelB2B.addColumn("IGST");
            DataModelB2B.addColumn("CGST");
            DataModelB2B.addColumn("SGST/UTGST");
            DataModelB2B.addColumn("CESS");
            DataModelB2B.addColumn("POS");
            DataModelB2B.addColumn("HSN Code");
            DataModelB2B.addColumn("Differential % of tax rate");
            DataModelB2B.addColumn("Supply covered  u/s  7 if IGST act");

            DataModelB2B.SetNumeric(6, true);
            DataModelB2B.SetNumeric(7, true);
            DataModelB2B.SetNumeric(8, true);
            DataModelB2B.SetNumeric(9, true);
            DataModelB2B.SetNumeric(10, true);
            DataModelB2B.SetNumeric(11, true);
            DataModelB2B.SetNumeric(12, true);

            Table_b2b.getColumnModel().getColumn(0).setMinWidth(30);
            Table_b2b.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_b2b.getColumnModel().getColumn(1).setMinWidth(120);
            //Table_b2b.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_b2b.getColumnModel().getColumn(2).setMinWidth(120);
            //Table_b2b.getColumnModel().getColumn(2).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(3).setMinWidth(80);
            Table_b2b.getColumnModel().getColumn(4).setMinWidth(80);
            //Table_b2b.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(5).setMinWidth(80);
            //Table_b2b.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(6).setMinWidth(80);
            //Table_b2b.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_b2b.getColumnModel().getColumn(7).setMinWidth(80);
            //Table_b2b.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_b2b.getColumnModel().getColumn(8).setMinWidth(80);
            //Table_b2b.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(9).setMinWidth(80);
            //Table_b2b.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(10).setMinWidth(80);
            //Table_b2b.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(11).setMinWidth(80);
            //Table_b2b.getColumnModel().getColumn(11).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(12).setMinWidth(80);
            Table_b2b.getColumnModel().getColumn(13).setMinWidth(80);
            Table_b2b.getColumnModel().getColumn(14).setMinWidth(80);
            Table_b2b.getColumnModel().getColumn(15).setMinWidth(80);
            Table_b2b.getColumnModel().getColumn(16).setMinWidth(80);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void GenerateB2BData(String ORDER_BY) {

        try {

            data.Execute("DELETE FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE >= DATE_SUB(NOW(), INTERVAL 10 DAY) AND INPUT_TYPE NOT IN (2) ");

            data.Execute("TRUNCATE TABLE FINANCE.TMP_GSTR_INVOICE_ERP ");

            data.Execute("INSERT INTO FINANCE.TMP_GSTR_INVOICE_ERP (COMPANY_ID,INPUT_TYPE,PARTY_CODE,INVOICE_NO,INVOICE_DATE,GSTIN_NO,INVOICE_VALUE,IGST_PER,IGST_AMT,CGST_PER,CGST_AMT,SGST_PER,SGST_AMT,STATE_CODE,STATE_NAME,STATE_PIN_CODE,APPROVED,CANCELLED) SELECT 2,H.INVOICE_TYPE,H.PARTY_CODE,H.INVOICE_NO,H.INVOICE_DATE,GSTIN_NO,H.NET_AMOUNT,COALESCE(IGST_PER,0),COALESCE(IGST_AMT,0),COALESCE(CGST_PER,0) ,COALESCE(CGST_AMT,0),COALESCE(SGST_PER,0) ,COALESCE(SGST_AMT,0),STATE_GST_CODE,STATE,PINCODE,H.APPROVED,H.CANCELLED  FROM  DINESHMILLS.D_SAL_INVOICE_HEADER H,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE H.INVOICE_DATE >= '2017-07-01'  AND INVOICE_TYPE IN (1,3) AND  CONCAT(INVOICE_DATE,INVOICE_NO) NOT IN (SELECT CONCAT(INVOICE_DATE,INVOICE_NO) FROM  FINANCE.D_SAL_GSTR_INVOICE_ERP ) AND P.PARTY_CODE = H.PARTY_CODE ");

            data.Execute("UPDATE FINANCE.TMP_GSTR_INVOICE_ERP E, FINANCE.D_SAL_GSTR_INVOICE C SET E.WH_CODE = C.WH_CODE, E.INVOICE_TYPE  = C.INVOICE_TYPE, E.ITEM_DESC = C.ITEM_DESC, E.GSTIN_NO= C.GSTIN_NO, E.HSN_CODE = C.HSN_CODE+0, E.TAXABLE_VALUE = C.TAXABLE_VALUE, E.PLACE_OF_SUPPLY = C.PLACE_OF_SUPPLY, E.RATE = C.RATE, E.REV_CHRG = C.REV_CHRG, E.E_COMM_GSTIN_NO  = C.E_COMM_GSTIN_NO WHERE E.INVOICE_NO = C.INVOICE_NO  AND E.PARTY_CODE = C.PARTY_CODE AND E.INVOICE_DATE = C.INVOICE_DATE AND E.INVOICE_VALUE= ROUND(C.INVOICE_VALUE+.0001,0) ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP E, FINANCE.D_SAL_GSTR_INVOICE C SET E.WH_CODE = C.WH_CODE, E.INVOICE_TYPE  = C.INVOICE_TYPE, E.ITEM_DESC = C.ITEM_DESC, E.GSTIN_NO= C.GSTIN_NO, E.HSN_CODE = C.HSN_CODE+0, E.TAXABLE_VALUE = C.TAXABLE_VALUE, E.PLACE_OF_SUPPLY = C.PLACE_OF_SUPPLY, E.RATE = C.RATE, E.REV_CHRG = C.REV_CHRG, E.E_COMM_GSTIN_NO  = C.E_COMM_GSTIN_NO WHERE E.INVOICE_NO = C.INVOICE_NO AND E.PARTY_CODE = C.PARTY_CODE AND E.INVOICE_DATE = C.INVOICE_DATE AND E.INVOICE_VALUE= ROUND(C.INVOICE_VALUE+.0001,0) AND E.TAXABLE_VALUE =0 ");

            data.Execute("UPDATE FINANCE.TMP_GSTR_INVOICE_ERP SET IGST_PER =0 WHERE IGST_AMT =0 ");
            data.Execute("UPDATE FINANCE.TMP_GSTR_INVOICE_ERP SET CGST_PER =0 WHERE CGST_AMT =0 ");
            data.Execute("UPDATE FINANCE.TMP_GSTR_INVOICE_ERP SET SGST_PER =0 WHERE SGST_AMT =0 ");

            data.Execute("INSERT INTO FINANCE.D_SAL_GSTR_INVOICE_ERP SELECT * FROM FINANCE.TMP_GSTR_INVOICE_ERP ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP A ,DINESHMILLS.D_SAL_STATE_MASTER B SET PLACE_OF_SUPPLY = GST_PLACE_OF_SUPPLY WHERE B.STATE_GST_CODE = A.STATE_CODE AND INVOICE_DATE >='2018-01-01' AND PLACE_OF_SUPPLY =''");

            //String strSQL = "SELECT *,RIGHT(HSN_CODE,4) AS HSN,CASE WHEN CGST_AMT=0 THEN '0.00' ELSE CGST_PER END AS PER_CGST,CASE WHEN SGST_AMT=0 THEN '0.00' ELSE SGST_PER END AS PER_SGST,CASE WHEN IGST_AMT=0 THEN '0.00' ELSE IGST_PER END AS PER_IGST FROM FINANCE.D_SAL_GSTR_INVOICE WHERE INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND APPROVED=1 AND CANCELLED=0 ORDER BY INVOICE_DATE,INVOICE_NO "+ORDER_BY;
            String strSQL = "SELECT F.*,RIGHT(F.HSN_CODE,4) AS HSN, ";
            strSQL += "CASE WHEN F.CGST_AMT=0 THEN '0.00' ELSE F.CGST_PER END AS PER_CGST, ";
            strSQL += "CASE WHEN F.SGST_AMT=0 THEN '0.00' ELSE F.SGST_PER END AS PER_SGST, ";
            strSQL += "CASE WHEN F.IGST_AMT=0 THEN '0.00' ELSE F.IGST_PER END AS PER_IGST, ";
            //strSQL += "CASE WHEN LENGTH(H.TOTAL_NET_QTY)>0 THEN H.TOTAL_NET_QTY ELSE H.GROSS_WEIGHT END AS TOTAL_QTY  "; 
            strSQL += "CASE WHEN COALESCE(H.TOTAL_NET_QTY,0)>0 THEN H.TOTAL_NET_QTY ELSE H.GROSS_WEIGHT END AS TOTAL_QTY  ";

            strSQL += "FROM FINANCE.D_SAL_GSTR_INVOICE_ERP F,DINESHMILLS.D_SAL_INVOICE_HEADER H ";
            strSQL += "WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE ";
            strSQL += "AND F.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND F.INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "'  ";
            strSQL += "AND F.APPROVED=1 AND F.CANCELLED=0 ORDER BY F.INVOICE_DATE,F.INVOICE_NO ";

            data.Execute("UPDATE  FINANCE.D_SAL_GSTR_INVOICE_ERP F,DINESHMILLS.D_SAL_INVOICE_HEADER H SET UOM = CASE WHEN COALESCE(H.TOTAL_NET_QTY,0)>0 THEN 'MTR' ELSE 'KGS' END, QUANTITY = CASE WHEN COALESCE(H.TOTAL_NET_QTY,0)>0 THEN H.TOTAL_NET_QTY ELSE H.GROSS_WEIGHT END WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2019-01-01' AND F.APPROVED=1 AND F.CANCELLED=0 ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP F,PRODUCTION.FELT_SAL_INVOICE_HEADER H SET F.UOM = 'SQM',QUANTITY = SQMTR WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2019-01-01'AND RATE_UNIT ='MTR' AND F.APPROVED=1 AND F.CANCELLED=0 ");

            data.Execute("UPDATE  FINANCE.D_SAL_GSTR_INVOICE_ERP SET UOM ='NOS' WHERE HSN_CODE = 6301 AND INVOICE_DATE >='2019-01-01'  ");

            data.Execute("UPDATE  FINANCE.D_SAL_GSTR_INVOICE_ERP SET UOM ='SQM'  WHERE HSN_CODE =59113290 AND UOM ='MTR' AND INVOICE_DATE >='2019-01-01' ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP F,PRODUCTION.FELT_SAL_INVOICE_HEADER H SET F.UOM = 'SQM',QUANTITY = SQMTR WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2018-04-01'AND RATE_UNIT ='MTR' AND F.APPROVED=1 AND F.CANCELLED=0 ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP F,PRODUCTION.FELT_SAL_INVOICE_HEADER H SET F.UOM = 'KGS',QUANTITY = ACTUAL_WEIGHT WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2018-04-01'AND RATE_UNIT ='KG' AND F.APPROVED=1 AND F.CANCELLED=0 AND F.UOM IS NULL");

            data.Execute("UPDATE  FINANCE.D_SAL_GSTR_INVOICE_ERP F,DINESHMILLS.D_SAL_INVOICE_HEADER H SET F.UOM = 'SQM',QUANTITY = TOTAL_SQ_MTR WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2018-04-01' AND H.INVOICE_TYPE =3 AND F.APPROVED=1 AND F.CANCELLED=0 AND F.UOM IS NULL ");

            ResultSet rs = data.getResult(strSQL);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {

                Object[] rowData = new Object[25];
                // rowData[0]=rs.getString("");
                rowData[0] = cnt++;
                rowData[1] = rs.getString("GSTIN_NO");
                pName = data.getStringValueFromDB("SELECT PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE PARTY_CODE='" + rs.getString("PARTY_CODE") + "'");
                rowData[2] = pName;
                rowData[3] = "Invoice";
                rowData[4] = rs.getString("INVOICE_NO");
                rowData[5] = df.format(rs.getDate("INVOICE_DATE"));
                rowData[6] = rs.getString("INVOICE_VALUE");
                rowData[7] = rs.getString("TAXABLE_VALUE");
                rowData[8] = rs.getInt("RATE");
                rowData[9] = rs.getString("IGST_AMT");
                rowData[10] = rs.getString("CGST_AMT");
                rowData[11] = rs.getString("SGST_AMT");
                rowData[12] = "";
                rowData[13] = rs.getString("PLACE_OF_SUPPLY");
                rowData[14] = rs.getString("HSN");
                rowData[15] = "";
                rowData[16] = "";

                DataModelB2B.addRow(rowData);
                rs.next();
            }
            rs.close();

        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }

        String sql;
        sql = "SELECT cast(SUM(INVOICE_VALUE) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String invAmt = data.getStringValueFromDB(sql);
        totalInvAmt.setText(invAmt);

        sql = "SELECT cast(SUM(TAXABLE_VALUE) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String taxAmt = data.getStringValueFromDB(sql);
        totalTaxAmt.setText(taxAmt);

        sql = "SELECT cast(SUM(SGST_AMT) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String SGSTAmt = data.getStringValueFromDB(sql);
        totalSGSTAmt.setText(SGSTAmt);

        sql = "SELECT cast(SUM(CGST_AMT) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String CGSTAmt = data.getStringValueFromDB(sql);
        totalCGSTAmt.setText(CGSTAmt);

        sql = "SELECT cast(SUM(IGST_AMT) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String IGSTAmt = data.getStringValueFromDB(sql);
        totalIGSTAmt.setText(IGSTAmt);
    }

    private void FormatGridtillSep() {
        try {
            DataModelB2B1 = new EITLTableModel();
            Table_b2b1.removeAll();

            Table_b2b1.setModel(DataModelB2B1);
            Table_b2b1.setAutoResizeMode(0);

            DataModelB2B1.addColumn("SrNo");
            DataModelB2B1.addColumn("GSTIN/UID of Recipient");
            DataModelB2B1.addColumn("Party Name");
            DataModelB2B1.addColumn("Invoice Number");
            DataModelB2B1.addColumn("Invoice Date (dd/mm/yyyy)");
            DataModelB2B1.addColumn("Total Value");
            DataModelB2B1.addColumn("Taxable Value");
            DataModelB2B1.addColumn("HSN Code");
            DataModelB2B1.addColumn("GST Rate");
            DataModelB2B1.addColumn("IGST");
            DataModelB2B1.addColumn("CGST");
            DataModelB2B1.addColumn("SGST/UTGST");
            DataModelB2B1.addColumn("CESS");
            DataModelB2B1.addColumn("POS");
            DataModelB2B1.addColumn("Reverse Charge");
            DataModelB2B1.addColumn("GSTIN of ecommerce operator (if applicable)");
            DataModelB2B1.addColumn("Original Invoice No (if Amended)");
            DataModelB2B1.addColumn("Original Invoice Date (if Amended)");

            DataModelB2B1.SetNumeric(5, true);
            DataModelB2B1.SetNumeric(6, true);
            DataModelB2B1.SetNumeric(7, true);
            DataModelB2B1.SetNumeric(8, true);
            DataModelB2B1.SetNumeric(9, true);
            DataModelB2B1.SetNumeric(10, true);
            DataModelB2B1.SetNumeric(11, true);

            Table_b2b1.getColumnModel().getColumn(0).setMinWidth(30);
            Table_b2b1.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_b2b1.getColumnModel().getColumn(1).setMinWidth(120);
            //Table_b2b1.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_b2b1.getColumnModel().getColumn(2).setMinWidth(120);
            //Table_b2b1.getColumnModel().getColumn(2).setMaxWidth(80);
            Table_b2b1.getColumnModel().getColumn(3).setMinWidth(80);
            Table_b2b1.getColumnModel().getColumn(4).setMinWidth(80);
            //Table_b2b1.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_b2b1.getColumnModel().getColumn(5).setMinWidth(80);
            //Table_b2b1.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_b2b1.getColumnModel().getColumn(6).setMinWidth(80);
            //Table_b2b1.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_b2b1.getColumnModel().getColumn(7).setMinWidth(80);
            //Table_b2b1.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_b2b1.getColumnModel().getColumn(8).setMinWidth(80);
            //Table_b2b1.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_b2b1.getColumnModel().getColumn(9).setMinWidth(80);
            //Table_b2b1.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_b2b1.getColumnModel().getColumn(10).setMinWidth(80);
            //Table_b2b1.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_b2b1.getColumnModel().getColumn(11).setMinWidth(80);
            //Table_b2b1.getColumnModel().getColumn(11).setMaxWidth(80);
            Table_b2b1.getColumnModel().getColumn(12).setMinWidth(80);
            Table_b2b1.getColumnModel().getColumn(13).setMinWidth(80);
            Table_b2b1.getColumnModel().getColumn(14).setMinWidth(80);
            Table_b2b1.getColumnModel().getColumn(15).setMinWidth(80);
            Table_b2b1.getColumnModel().getColumn(16).setMinWidth(80);
            Table_b2b1.getColumnModel().getColumn(17).setMinWidth(80);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void GenerateB2BDatatillSep(String ORDER_BY) {

        try {

            data.Execute("DELETE FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE >= DATE_SUB(NOW(), INTERVAL 10 DAY) AND INPUT_TYPE NOT IN (2) ");

            data.Execute("TRUNCATE TABLE FINANCE.TMP_GSTR_INVOICE_ERP ");

            data.Execute("INSERT INTO FINANCE.TMP_GSTR_INVOICE_ERP (COMPANY_ID,INPUT_TYPE,PARTY_CODE,INVOICE_NO,INVOICE_DATE,GSTIN_NO,INVOICE_VALUE,IGST_PER,IGST_AMT,CGST_PER,CGST_AMT,SGST_PER,SGST_AMT,STATE_CODE,STATE_NAME,STATE_PIN_CODE,APPROVED,CANCELLED) SELECT 2,H.INVOICE_TYPE,H.PARTY_CODE,H.INVOICE_NO,H.INVOICE_DATE,GSTIN_NO,H.NET_AMOUNT,COALESCE(IGST_PER,0),COALESCE(IGST_AMT,0),COALESCE(CGST_PER,0) ,COALESCE(CGST_AMT,0),COALESCE(SGST_PER,0) ,COALESCE(SGST_AMT,0),STATE_GST_CODE,STATE,PINCODE,H.APPROVED,H.CANCELLED  FROM  DINESHMILLS.D_SAL_INVOICE_HEADER H,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE H.INVOICE_DATE >= '2017-07-01'  AND INVOICE_TYPE IN (1,3) AND  CONCAT(INVOICE_DATE,INVOICE_NO) NOT IN (SELECT CONCAT(INVOICE_DATE,INVOICE_NO) FROM  FINANCE.D_SAL_GSTR_INVOICE_ERP ) AND P.PARTY_CODE = H.PARTY_CODE ");

            data.Execute("UPDATE FINANCE.TMP_GSTR_INVOICE_ERP E, FINANCE.D_SAL_GSTR_INVOICE C SET E.WH_CODE = C.WH_CODE, E.INVOICE_TYPE  = C.INVOICE_TYPE, E.ITEM_DESC = C.ITEM_DESC, E.GSTIN_NO= C.GSTIN_NO, E.HSN_CODE = C.HSN_CODE+0, E.TAXABLE_VALUE = C.TAXABLE_VALUE, E.PLACE_OF_SUPPLY = C.PLACE_OF_SUPPLY, E.RATE = C.RATE, E.REV_CHRG = C.REV_CHRG, E.E_COMM_GSTIN_NO  = C.E_COMM_GSTIN_NO WHERE E.INVOICE_NO = C.INVOICE_NO  AND E.PARTY_CODE = C.PARTY_CODE AND E.INVOICE_DATE = C.INVOICE_DATE AND E.INVOICE_VALUE= ROUND(C.INVOICE_VALUE+.0001,0) ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP E, FINANCE.D_SAL_GSTR_INVOICE C SET E.WH_CODE = C.WH_CODE, E.INVOICE_TYPE  = C.INVOICE_TYPE, E.ITEM_DESC = C.ITEM_DESC, E.GSTIN_NO= C.GSTIN_NO, E.HSN_CODE = C.HSN_CODE+0, E.TAXABLE_VALUE = C.TAXABLE_VALUE, E.PLACE_OF_SUPPLY = C.PLACE_OF_SUPPLY, E.RATE = C.RATE, E.REV_CHRG = C.REV_CHRG, E.E_COMM_GSTIN_NO  = C.E_COMM_GSTIN_NO WHERE E.INVOICE_NO = C.INVOICE_NO AND E.PARTY_CODE = C.PARTY_CODE AND E.INVOICE_DATE = C.INVOICE_DATE AND E.INVOICE_VALUE= ROUND(C.INVOICE_VALUE+.0001,0) AND E.TAXABLE_VALUE =0 ");

            data.Execute("UPDATE FINANCE.TMP_GSTR_INVOICE_ERP SET IGST_PER =0 WHERE IGST_AMT =0 ");
            data.Execute("UPDATE FINANCE.TMP_GSTR_INVOICE_ERP SET CGST_PER =0 WHERE CGST_AMT =0 ");
            data.Execute("UPDATE FINANCE.TMP_GSTR_INVOICE_ERP SET SGST_PER =0 WHERE SGST_AMT =0 ");

            data.Execute("INSERT INTO FINANCE.D_SAL_GSTR_INVOICE_ERP SELECT * FROM FINANCE.TMP_GSTR_INVOICE_ERP ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP A ,DINESHMILLS.D_SAL_STATE_MASTER B SET PLACE_OF_SUPPLY = GST_PLACE_OF_SUPPLY WHERE B.STATE_GST_CODE = A.STATE_CODE AND INVOICE_DATE >='2018-01-01' AND PLACE_OF_SUPPLY =''");

            //String strSQL = "SELECT *,RIGHT(HSN_CODE,4) AS HSN,CASE WHEN CGST_AMT=0 THEN '0.00' ELSE CGST_PER END AS PER_CGST,CASE WHEN SGST_AMT=0 THEN '0.00' ELSE SGST_PER END AS PER_SGST,CASE WHEN IGST_AMT=0 THEN '0.00' ELSE IGST_PER END AS PER_IGST FROM FINANCE.D_SAL_GSTR_INVOICE WHERE INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND APPROVED=1 AND CANCELLED=0 ORDER BY INVOICE_DATE,INVOICE_NO "+ORDER_BY;
            String strSQL = "SELECT F.*,RIGHT(F.HSN_CODE,4) AS HSN, ";
            strSQL += "CASE WHEN F.CGST_AMT=0 THEN '0.00' ELSE F.CGST_PER END AS PER_CGST, ";
            strSQL += "CASE WHEN F.SGST_AMT=0 THEN '0.00' ELSE F.SGST_PER END AS PER_SGST, ";
            strSQL += "CASE WHEN F.IGST_AMT=0 THEN '0.00' ELSE F.IGST_PER END AS PER_IGST, ";
            //strSQL += "CASE WHEN LENGTH(H.TOTAL_NET_QTY)>0 THEN H.TOTAL_NET_QTY ELSE H.GROSS_WEIGHT END AS TOTAL_QTY  "; 
            strSQL += "CASE WHEN COALESCE(H.TOTAL_NET_QTY,0)>0 THEN H.TOTAL_NET_QTY ELSE H.GROSS_WEIGHT END AS TOTAL_QTY  ";

            strSQL += "FROM FINANCE.D_SAL_GSTR_INVOICE_ERP F,DINESHMILLS.D_SAL_INVOICE_HEADER H ";
            strSQL += "WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE ";
            strSQL += "AND F.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND F.INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "'  ";
            strSQL += "AND F.APPROVED=1 AND F.CANCELLED=0 ORDER BY F.INVOICE_DATE,F.INVOICE_NO ";

            data.Execute("UPDATE  FINANCE.D_SAL_GSTR_INVOICE_ERP F,DINESHMILLS.D_SAL_INVOICE_HEADER H SET UOM = CASE WHEN COALESCE(H.TOTAL_NET_QTY,0)>0 THEN 'MTR' ELSE 'KGS' END, QUANTITY = CASE WHEN COALESCE(H.TOTAL_NET_QTY,0)>0 THEN H.TOTAL_NET_QTY ELSE H.GROSS_WEIGHT END WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2019-01-01' AND F.APPROVED=1 AND F.CANCELLED=0 ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP F,PRODUCTION.FELT_SAL_INVOICE_HEADER H SET F.UOM = 'SQM',QUANTITY = SQMTR WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2019-01-01'AND RATE_UNIT ='MTR' AND F.APPROVED=1 AND F.CANCELLED=0 ");

            data.Execute("UPDATE  FINANCE.D_SAL_GSTR_INVOICE_ERP SET UOM ='NOS' WHERE HSN_CODE = 6301 AND INVOICE_DATE >='2019-01-01'  ");

            data.Execute("UPDATE  FINANCE.D_SAL_GSTR_INVOICE_ERP SET UOM ='SQM'  WHERE HSN_CODE =59113290 AND UOM ='MTR' AND INVOICE_DATE >='2019-01-01' ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP F,PRODUCTION.FELT_SAL_INVOICE_HEADER H SET F.UOM = 'SQM',QUANTITY = SQMTR WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2018-04-01'AND RATE_UNIT ='MTR' AND F.APPROVED=1 AND F.CANCELLED=0 ");

            data.Execute("UPDATE FINANCE.D_SAL_GSTR_INVOICE_ERP F,PRODUCTION.FELT_SAL_INVOICE_HEADER H SET F.UOM = 'KGS',QUANTITY = ACTUAL_WEIGHT WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2018-04-01'AND RATE_UNIT ='KG' AND F.APPROVED=1 AND F.CANCELLED=0 AND F.UOM IS NULL");

            data.Execute("UPDATE  FINANCE.D_SAL_GSTR_INVOICE_ERP F,DINESHMILLS.D_SAL_INVOICE_HEADER H SET F.UOM = 'SQM',QUANTITY = TOTAL_SQ_MTR WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE AND F.INVOICE_DATE>='2018-04-01' AND H.INVOICE_TYPE =3 AND F.APPROVED=1 AND F.CANCELLED=0 AND F.UOM IS NULL ");

            System.out.println("SQL : "+strSQL);
            ResultSet rs = data.getResult(strSQL);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {

                Object[] rowData = new Object[25];
                // rowData[0]=rs.getString("");
                rowData[0] = cnt++;
                rowData[1] = rs.getString("GSTIN_NO");
                pName = data.getStringValueFromDB("SELECT PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE PARTY_CODE='" + rs.getString("PARTY_CODE") + "'");
                rowData[2] = pName;
                rowData[3] = rs.getString("INVOICE_NO");
                rowData[4] = df.format(rs.getDate("INVOICE_DATE"));
                rowData[5] = rs.getString("INVOICE_VALUE");
                rowData[6] = rs.getString("TAXABLE_VALUE");
                rowData[7] = rs.getString("HSN");
                rowData[8] = rs.getInt("RATE");
                rowData[9] = rs.getString("IGST_AMT");
                rowData[10] = rs.getString("CGST_AMT");
                rowData[11] = rs.getString("SGST_AMT");
                rowData[12] = "";
                rowData[13] = rs.getString("PLACE_OF_SUPPLY");
                rowData[14] = "No";
                rowData[15] = "";
                rowData[16] = "";
                rowData[17] = "";

                DataModelB2B1.addRow(rowData);
                rs.next();
            }
            rs.close();

        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }

        String sql;
        sql = "SELECT cast(SUM(INVOICE_VALUE) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String invAmt = data.getStringValueFromDB(sql);
        totalInvAmt1.setText(invAmt);

        sql = "SELECT cast(SUM(TAXABLE_VALUE) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String taxAmt = data.getStringValueFromDB(sql);
        totalTaxAmt1.setText(taxAmt);

        sql = "SELECT cast(SUM(SGST_AMT) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String SGSTAmt = data.getStringValueFromDB(sql);
        totalSGSTAmt1.setText(SGSTAmt);

        sql = "SELECT cast(SUM(CGST_AMT) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String CGSTAmt = data.getStringValueFromDB(sql);
        totalCGSTAmt1.setText(CGSTAmt);

        sql = "SELECT cast(SUM(IGST_AMT) as decimal(65,2)) FROM FINANCE.D_SAL_GSTR_INVOICE_ERP WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND APPROVED=1 AND CANCELLED=0";
        String IGSTAmt = data.getStringValueFromDB(sql);
        totalIGSTAmt1.setText(IGSTAmt);
    }
    
    private void FormatGridMisc() {
        try {
            DataModelMisc = new EITLTableModel();
            Table_Misc.removeAll();

            Table_Misc.setModel(DataModelMisc);
            Table_Misc.setAutoResizeMode(0);

            DataModelMisc.addColumn("SrNo");
            DataModelMisc.addColumn("GSTIN/UID of Recipient");
            DataModelMisc.addColumn("Party Name");
            DataModelMisc.addColumn("Invoice Number");
            DataModelMisc.addColumn("Invoice Date (dd/mm/yyyy)");
            DataModelMisc.addColumn("Total Value");
            DataModelMisc.addColumn("Taxable Value");
            DataModelMisc.addColumn("HSN Code");
            DataModelMisc.addColumn("GST Rate");
            DataModelMisc.addColumn("IGST");
            DataModelMisc.addColumn("CGST");
            DataModelMisc.addColumn("SGST/UTGST");
            DataModelMisc.addColumn("CESS");
            DataModelMisc.addColumn("POS");
            DataModelMisc.addColumn("Reverse Charge");
            DataModelMisc.addColumn("GSTIN of ecommerce operator (if applicable)");
            DataModelMisc.addColumn("Original Invoice No (if Amended)");
            DataModelMisc.addColumn("Original Invoice Date (if Amended)");

            DataModelMisc.SetNumeric(5, true);
            DataModelMisc.SetNumeric(6, true);
            DataModelMisc.SetNumeric(7, true);
            DataModelMisc.SetNumeric(8, true);
            DataModelMisc.SetNumeric(9, true);
            DataModelMisc.SetNumeric(10, true);
            DataModelMisc.SetNumeric(11, true);

            Table_Misc.getColumnModel().getColumn(0).setMinWidth(30);
            Table_Misc.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_Misc.getColumnModel().getColumn(1).setMinWidth(120);
            //Table_Misc.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_Misc.getColumnModel().getColumn(2).setMinWidth(120);
            //Table_Misc.getColumnModel().getColumn(2).setMaxWidth(80);
            Table_Misc.getColumnModel().getColumn(3).setMinWidth(80);
            Table_Misc.getColumnModel().getColumn(4).setMinWidth(80);
            //Table_Misc.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_Misc.getColumnModel().getColumn(5).setMinWidth(80);
            //Table_Misc.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_Misc.getColumnModel().getColumn(6).setMinWidth(80);
            //Table_Misc.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_Misc.getColumnModel().getColumn(7).setMinWidth(80);
            //Table_Misc.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_Misc.getColumnModel().getColumn(8).setMinWidth(80);
            //Table_Misc.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_Misc.getColumnModel().getColumn(9).setMinWidth(80);
            //Table_Misc.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_Misc.getColumnModel().getColumn(10).setMinWidth(80);
            //Table_Misc.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_Misc.getColumnModel().getColumn(11).setMinWidth(80);
            //Table_Misc.getColumnModel().getColumn(11).setMaxWidth(80);
            Table_Misc.getColumnModel().getColumn(12).setMinWidth(80);
            Table_Misc.getColumnModel().getColumn(13).setMinWidth(80);
            Table_Misc.getColumnModel().getColumn(14).setMinWidth(80);
            Table_Misc.getColumnModel().getColumn(15).setMinWidth(80);
            Table_Misc.getColumnModel().getColumn(16).setMinWidth(80);
            Table_Misc.getColumnModel().getColumn(17).setMinWidth(80);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void GenerateB2BDataMisc(String ORDER_BY) {

        double tInvAmt = 0, tTaxAmt = 0, tSgstAmt = 0, tCgstAmt = 0, tIgstAmt = 0 ;
            
        try {

            String strSQL = "SELECT *,ROUND((CGST_AMT_C*100)/TAXABLE_AMT,1) CGST_PER,ROUND((SGST_AMT_C*100)/TAXABLE_AMT,1) SGST_PER, "
                    + "ROUND((IGST_AMT_C*100)/TAXABLE_AMT,0) IGST_PER,AMT-TAX_COLLECT_AMT AS INV_AMT, "
                    + "ROUND(((CGST_AMT_C+SGST_AMT_C+IGST_AMT_C)*100)/TAXABLE_AMT,0) RATE "
                    + " FROM "
                    + "(SELECT "
                    + "H.VOUCHER_NO,VOUCHER_DATE, "
                    + "MAX(COALESCE(CASE WHEN  INVOICE_NO !='' THEN INVOICE_NO END,0)) AS INVOICE_NO, "
                    + "MAX(COALESCE(CASE WHEN  INVOICE_NO !='' THEN DATE_FORMAT(INVOICE_DATE, \"%d/%m/%Y\") END,0)) AS INVOICE_DATE, "
                    + "MAX(COALESCE(CASE WHEN EFFECT='D' THEN MAIN_ACCOUNT_CODE END,0)) AS MAC, "
                    + "MAX(COALESCE(CASE WHEN SUB_ACCOUNT_CODE !='' THEN SUB_ACCOUNT_CODE END,0)) AS SAB, "
                    + "SUM(COALESCE(CASE WHEN  EFFECT ='D'THEN AMOUNT END,0)) AS AMT, "
                    + "SUM(COALESCE(CASE WHEN MAIN_ACCOUNT_CODE IN (127183) THEN AMOUNT END,0)) AS TAX_COLLECT_AMT, "
                    //+ "#SUM(COALESCE(CASE WHEN MAIN_ACCOUNT_CODE IN (403191) THEN AMOUNT END,0)) AS TAXABLE_AMT, "
                    + "SUM(COALESCE(CASE WHEN MAIN_ACCOUNT_CODE NOT IN (231767,231764,231763,231761,231760,231759, "
                    + "231758,231757,2317561, 231756,231719,214836,127588,127587,127584,127583,127582,127581,127580, "
                    + "127579,127577,127576,127575,127574,127573,127572,127571,127570,127569,127568,127567,127566, "
                    + "127565,127183) AND EFFECT ='C' THEN AMOUNT END,0))  AS TAXABLE_AMT, "
                    + "SUM(COALESCE(CASE WHEN MAIN_ACCOUNT_CODE IN (127565,127566,127571,127572,127577,127581,127588) AND EFFECT ='C' THEN AMOUNT END,0)) AS CGST_AMT_C, "
                    + "SUM(COALESCE(CASE WHEN MAIN_ACCOUNT_CODE IN (127567,127568,127573,127574,127579,127582,127587) AND EFFECT ='C' THEN AMOUNT END,0)) AS SGST_AMT_C, "
                    + "SUM(COALESCE(CASE WHEN MAIN_ACCOUNT_CODE IN (127569,127570,127575,127576,127580,127583) AND EFFECT ='C'THEN AMOUNT END,0)) AS IGST_AMT_C,HSN_SAC_CODE "
                    + " FROM FINANCE.D_FIN_VOUCHER_DETAIL D,FINANCE.D_FIN_VOUCHER_HEADER H "
                    + "WHERE H.VOUCHER_NO=D.VOUCHER_NO AND H.VOUCHER_NO IN (SELECT DISTINCT H.VOUCHER_NO FROM "
                    + " FINANCE.D_FIN_VOUCHER_HEADER H, FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO "
                    + " AND VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND H.APPROVED =1 AND "
                    + " H.CANCELLED =0 AND SUBSTRING(H.VOUCHER_NO,1,2) IN ('JV')  AND BOOK_CODE = 02 AND "
                    + " MAIN_ACCOUNT_CODE IN (231767,231764,231763,231761,231760,231759,231758,231757,2317561, "
                    + " 231756,231719,214836,127588,127587,127584,127583,127582,127581,127580,127579,127577,127576, "
                    + " 127575,127574,127573,127572,127571,127570,127569,127568,127567,127566,127565)) "
                    + " GROUP BY H.VOUCHER_NO) AS A";
            System.out.println(" SQL : "+strSQL);
            ResultSet rs = data.getResult(strSQL);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {

                Object[] rowData = new Object[25];
                // rowData[0]=rs.getString("");
                rowData[0] = cnt++;
                rowData[1] = data.getStringValueFromDB("SELECT DISTINCT GSTIN_NO FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+rs.getString("SAB")+"'",FinanceGlobal.FinURL);
                pName = data.getStringValueFromDB("SELECT DISTINCT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+rs.getString("SAB")+"'",FinanceGlobal.FinURL);
                rowData[2] = pName;
                rowData[3] = rs.getString("INVOICE_NO").toString();
                rowData[4] = rs.getString("INVOICE_DATE");
                rowData[5] = rs.getString("INV_AMT");
                tInvAmt += Double.parseDouble(rs.getString("INV_AMT"));
                rowData[6] = rs.getString("TAXABLE_AMT");
                tTaxAmt += Double.parseDouble(rs.getString("TAXABLE_AMT"));
                rowData[7] = rs.getString("HSN_SAC_CODE");
                rowData[8] = rs.getString("RATE");
                rowData[9] = rs.getString("IGST_AMT_C");
                tIgstAmt += Double.parseDouble(rs.getString("IGST_AMT_C"));
                rowData[10] = rs.getString("CGST_AMT_C");
                tCgstAmt += Double.parseDouble(rs.getString("CGST_AMT_C"));
                rowData[11] = rs.getString("SGST_AMT_C");
                tSgstAmt += Double.parseDouble(rs.getString("SGST_AMT_C"));
                rowData[12] = "";
                rowData[13] = data.getStringValueFromDB("SELECT DISTINCT GST_PLACE_OF_SUPPLY FROM D_FIN_PARTY_MASTER F,DINESHMILLS.D_SAL_STATE_MASTER D WHERE SUBSTRING(F.GSTIN_NO,1,2)=D.STATE_GST_CODE AND F.PARTY_CODE='"+rs.getString("SAB")+"'",FinanceGlobal.FinURL);
                rowData[14] = "No";
                rowData[15] = "";
                rowData[16] = "";
                rowData[17] = "";

                DataModelMisc.addRow(rowData);
                rs.next();
            }
            rs.close();

        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }

        String invAmt = String.valueOf(tInvAmt);
        totalInvAmtMisc.setText(invAmt);

        String taxAmt = String.valueOf(tTaxAmt);
        totalTaxAmtMisc.setText(taxAmt);

        String SGSTAmt = String.valueOf(tSgstAmt);
        totalSGSTAmtMisc.setText(SGSTAmt);

        String CGSTAmt = String.valueOf(tCgstAmt);
        totalCGSTAmtMisc.setText(CGSTAmt);

        String IGSTAmt = String.valueOf(tIgstAmt);
        totalIGSTAmtMisc.setText(IGSTAmt);
    }
    
    private void InsertIntoSaralGST() {
        Connection connlocal = null, connremote = null;
        ResultSet rsTmpLocal, rsTmpRemote;
        Statement stlocal = null, stremote = null;
        String urllocal = "jdbc:mysql://200.0.0.227:3306/";
        String urlremote = "jdbc:mysql://200.0.0.229:3307/";
        String dbName = "SARAL_GST";//?zeroDateTimeBehavior=convertToNull
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "att@229";
        String strSQLLocal = "", strSQLRemote = "";
        String enterDt = data.getStringValueFromDB("SELECT NOW() FROM DUAL ");
        try {
            Class.forName(driver).newInstance();
            connlocal = DriverManager.getConnection(urllocal + "DINESHMILLS", "root", EITLERPGLOBAL.DBPassword);
            connremote = DriverManager.getConnection(urlremote + dbName, userName, password);

            //stlocal = connlocal.createStatement();
            //stremote=connremote.createStatement();
            stlocal = connlocal.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            stremote = connremote.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            //stremote.execute("TRUNCATE TABLE SDMLATTPAY.ATT_MTH_SUMMARY_227");
            //stremote.execute("DELETE FROM SDMLATTPAY.ATT_MTH_SUMMARY_227 WHERE MS_MM=" + month + " AND MS_YYYY=" + year + "");
            stremote.execute("DELETE FROM SARAL_GST.GSTR_1_B2B WHERE INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "'  ");
            
            strSQLLocal += "SELECT F.*,RIGHT(F.HSN_CODE,4) AS HSN, CASE WHEN F.CGST_AMT=0 THEN '0.00' ELSE F.CGST_PER END AS PER_CGST, CASE WHEN F.SGST_AMT=0 THEN '0.00' ELSE F.SGST_PER END AS PER_SGST, "
                    + "CASE WHEN F.IGST_AMT=0 THEN '0.00' ELSE F.IGST_PER END AS PER_IGST, CASE WHEN COALESCE(H.TOTAL_NET_QTY,0)>0 THEN H.TOTAL_NET_QTY ELSE H.GROSS_WEIGHT END AS TOTAL_QTY  "
                    + "FROM FINANCE.D_SAL_GSTR_INVOICE_ERP F,DINESHMILLS.D_SAL_INVOICE_HEADER H "
                    + "WHERE F.INVOICE_NO=H.INVOICE_NO AND F.INVOICE_DATE=H.INVOICE_DATE "
                    + "AND F.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND F.INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "'  "
                    + "AND F.APPROVED=1 AND F.CANCELLED=0 ORDER BY F.INVOICE_DATE,F.INVOICE_NO ";
            //Copy table
//            System.out.println("SQL:" + strSQLLocal);
            String pName = "";
            rsTmpLocal = stlocal.executeQuery(strSQLLocal);
            rsTmpLocal.first();
            while (!rsTmpLocal.isAfterLast()) {
                
                pName = data.getStringValueFromDB("SELECT PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE PARTY_CODE='" + rsTmpLocal.getString("PARTY_CODE") + "'");

                strSQLRemote = "INSERT INTO SARAL_GST.GSTR_1_B2B VALUES(";
                strSQLRemote += "'" + rsTmpLocal.getString("GSTIN_NO") + "',";
                strSQLRemote += "'" + pName + "',";
                strSQLRemote += "'" + rsTmpLocal.getString("INVOICE_NO") + "',";
                strSQLRemote += "'" + rsTmpLocal.getString("INVOICE_DATE") + "',";
                strSQLRemote += "'" + rsTmpLocal.getString("INVOICE_VALUE") + "',";
                strSQLRemote += "'Normal',";
                strSQLRemote += "'" + rsTmpLocal.getString("TAXABLE_VALUE") + "',";
                strSQLRemote += "'" + rsTmpLocal.getString("HSN") + "',";
                strSQLRemote += "'" + rsTmpLocal.getString("RATE") + "',";
                strSQLRemote += "'" + rsTmpLocal.getString("IGST_AMT") + "',";
                strSQLRemote += "'" + rsTmpLocal.getString("CGST_AMT") + "',";
                strSQLRemote += "'" + rsTmpLocal.getString("SGST_AMT") + "',";
                strSQLRemote += "0,";
                strSQLRemote += "'" + rsTmpLocal.getString("PLACE_OF_SUPPLY") + "',";
                strSQLRemote += "'No',";
                strSQLRemote += "'',";
                strSQLRemote += "'',";
                strSQLRemote += "'0000-00-00',";
                strSQLRemote += "'',";
                strSQLRemote += "'',";
                strSQLRemote += "'" + enterDt + "'";
                strSQLRemote += ")";
                
                stremote.execute(strSQLRemote);
                rsTmpLocal.next();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
