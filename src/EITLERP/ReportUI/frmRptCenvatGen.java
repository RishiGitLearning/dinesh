/*
 * frmRptStockStatement.java
 *
 * Created on August 13, 2005, 3:21 PM
 */

package EITLERP.ReportUI;

/**
 *
 * @author  root
 */
import EITLERP.*;
import java.sql.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import EITLERP.Utils.*;
import java.text.*;

public class frmRptCenvatGen extends javax.swing.JApplet {
    
    private EITLComboModel cmbBaseModel=new EITLComboModel();
    
    private int lineCounter=0;
    private int pageCounter=1;
    
    private String LeftMargin=EITLERPGLOBAL.Replicate(" ", 5);
    
    /** Initializes the applet frmRptStockStatement */
    public void init() {
        setSize(560, 380);
        initComponents();
        chkReprocess.setVisible(false);
        Bar.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromItemID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToItemID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        Bar = new javax.swing.JProgressBar();
        lblItem = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        chkPrint = new javax.swing.JCheckBox();
        chkReprocess = new javax.swing.JCheckBox();
        chkUpdate = new javax.swing.JCheckBox();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CENVAT REPORT (GENERAL)");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(8, 8, 187, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 0, 581, 30);

        jLabel2.setText("From Item Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(12, 48, 112, 15);

        getContentPane().add(txtFromItemID);
        txtFromItemID.setBounds(122, 46, 112, 20);

        jLabel3.setText("To Item Code");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(12, 78, 112, 15);

        getContentPane().add(txtToItemID);
        txtToItemID.setBounds(122, 76, 112, 20);

        jLabel4.setText("From Date ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(13, 150, 77, 15);

        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(88, 148, 112, 20);

        jLabel5.setText("To Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(226, 151, 53, 15);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(284, 148, 112, 20);

        cmdPrint.setText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPrint);
        cmdPrint.setBounds(429, 51, 119, 29);

        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExit);
        cmdExit.setBounds(430, 89, 116, 25);

        getContentPane().add(Bar);
        Bar.setBounds(10, 308, 200, 18);

        lblItem.setText(".");
        getContentPane().add(lblItem);
        lblItem.setBounds(12, 291, 383, 15);

        jLabel6.setText("(Keep both item code blank for all items)");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(15, 105, 260, 15);

        jLabel7.setText("Save as ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 189, 59, 15);

        getContentPane().add(txtFile);
        txtFile.setBounds(88, 187, 270, 20);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(360, 187, 35, 21);

        chkPrint.setText("Print the stock ledger");
        getContentPane().add(chkPrint);
        chkPrint.setBounds(10, 222, 183, 23);

        chkReprocess.setText("Re Process Stock Valuation");
        getContentPane().add(chkReprocess);
        chkReprocess.setBounds(199, 224, 205, 23);

        chkUpdate.setText("Update Cenvat Amount in Latest Closing");
        getContentPane().add(chkUpdate);
        chkUpdate.setBounds(11, 255, 290, 23);

    }//GEN-END:initComponents
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileDialog FileDialog=new FileDialog(findParentFrame(this));
        FileDialog.show();
        txtFile.setText(FileDialog.getDirectory()+FileDialog.getFile());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
        GenerateReportFIFO();
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.JCheckBox chkPrint;
    private javax.swing.JCheckBox chkReprocess;
    private javax.swing.JCheckBox chkUpdate;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblItem;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtFromItemID;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtToItemID;
    // End of variables declaration//GEN-END:variables
    
    
    private void PrintHeader(BufferedWriter aFile) {
        String Title="";
        
        
        //Prints Page Header
        try {
            
            Title="SHRI DINESH MILLS LTD. , "+clsCompany.getCityName(EITLERPGLOBAL.gCompanyID);
            Title=EITLERPGLOBAL.Replicate(" ", (80-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (80-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            aFile.newLine();
            
            Title="CENVAT REPORT";
            Title=EITLERPGLOBAL.Replicate(" ", (80-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (80-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title="FROM DATE "+txtFromDate.getText()+" TO "+txtToDate.getText();
            
            aFile.write(Title);
            aFile.newLine();
            
            
            Title=EITLERPGLOBAL.Replicate("-",80);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"Date      "+" "+"Doc. No.    "+" "+"    Qty"+" "+"       Amount"+" "+"    Cenvat";
            aFile.write(Title);
            aFile.newLine();
            
            Title=EITLERPGLOBAL.Replicate("-",80);
            
            aFile.write(Title);
            aFile.newLine();
            
            lineCounter=8;
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    private void writeLine(BufferedWriter aFile,String strLine) {
        //Writes line maintaining page length
        try {
            if(lineCounter>=64) {
                
                aFile.write(EITLERPGLOBAL.Replicate("-",80));
                aFile.newLine();
                aFile.write("Page : "+pageCounter);
                aFile.newLine();
                
                aFile.write("\f");
                
                pageCounter++;
                
                
                PrintHeader(aFile);
            }
            
            aFile.write(LeftMargin+strLine);
            aFile.newLine();
            lineCounter++;
        }
        catch(Exception e) {
            
        }
    }
    
    private void newPage(BufferedWriter aFile) {
        //Writes line maintaining page length
        try {
            
            while(lineCounter<=70) {
                aFile.write(" ");
                aFile.newLine();
                
                lineCounter++;
            }
            
            PrintHeader(aFile);
            
        }
        catch(Exception e) {
            
        }
    }
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    
    private void GenerateReportFIFO() {
        new Thread() {
            
            public void run() {
                DecimalFormat dFormat=new DecimalFormat("###0.00");
                
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource;
                ResultSet rsClosingHeader,rsClosingDetail;
                Statement stClosingHeader,stClosingDetail;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                double OpeningNetValue=0;
                
                double srcClosingQty=0;
                double srcClosingValue=0;
                
                double ItemTotal=0;
                double GrandTotal=0;
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                String strNetValue="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                
                long StockEntryNo=0;
                long LastStockEntryNo=0;
                
                String StockEntryDate="";
                
                try {
                    
                    if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please specify the date range");
                        return;
                    }
                    
                    if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    //Prepare our temp table for temporary query //
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    
                    
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE B.ITEM_ID NOT LIKE 'RM%' AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE B.ITEM_CODE NOT LIKE 'RM%' AND A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  ";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE B.ITEM_ID NOT LIKE 'RM%' AND A.STM_NO=B.STM_NO AND A.STM_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND STM_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ";
                    
                    
                    data.Execute(strCondition);
                    
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM STOCK_LEDGER_TEMP) ";
                    //strCondition=" AND A.ITEM_ID IN (SELECT ITEM_ID FROM D_INV_ITEM_MASTER_TMP) ";
                    
                    strCondition="";
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' ORDER BY ENTRY_DATE DESC"); // = 
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    

                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        LastStockEntryNo=rsTmp.getLong("ENTRY_NO");
                    }
                    //================================================================//
                    
                    
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(A.ITEM_ID) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.ITEM_ID NOT LIKE 'RM%' AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT COUNT(*) AS THECOUNT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //===================================================================//
                    //====================== PROCESS FIFO ===============================//
                    //==================================================================//
                    
                    Bar.setMaximum(Max);
                    Bar.setMinimum(Min);
                    Bar.setValue(0);
                    Bar.repaint();
                    
                    
                    lblItem.setText("Starting Process");
                    lblItem.repaint();
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT DISTINCT(A.ITEM_ID),A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.ITEM_ID NOT LIKE 'RM%' AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0  AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    //strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    //Loop through each item
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        
                        ItemTotal=0;
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        lblItem.setText("Processing Item : "+ItemID);
                        lblItem.repaint();
                        
                        
                        if(ItemName.length()>20) {
                            ItemName=ItemName.substring(0,20);
                        }
                        
                        UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                        
                        OpeningQty=0;
                        OpeningRate=0;
                        OpeningValue=0;
                        
                        //First Find the latest cut-off closing stock.
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),2);
                            OpeningRate=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_RATE"),2);
                            OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("CENVAT_AMOUNT"),2);
                            
                            
                            if(OpeningQty==0) {
                                OpeningRate=0;
                            }
                            else {
                                //OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                            }
                        }
                        
                        data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY=0 WHERE GRN_NO IN (SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND GRN_DATE>='"+StockEntryDate+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"') AND ITEM_ID='"+ItemID+"'");
                        
                        //Take the record between Cut-off stock date and till from date specified here.
                        strSQL="SELECT A.ISSUE_NO,B.SR_NO,A.ISSUE_DATE,B.ITEM_CODE,ITEM_EXTRA_DESC,WAREHOUSE_ID,LOCATION_ID,BOE_NO,QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>='"+StockEntryDate+"' AND A.ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_CODE='"+ItemID+"' ORDER BY ISSUE_DATE";
                        
                        rsIssue=data.getResult(strSQL);
                        rsIssue.first();
                        
                        while((!rsIssue.isAfterLast())&&rsIssue.getRow()>0) {
                            
                            
                            String IssueDate=rsIssue.getString("ISSUE_DATE");
                            IssueQty=rsIssue.getDouble("QTY");
                            String IssueNo=rsIssue.getString("ISSUE_NO");
                            int IssueSrNo=rsIssue.getInt("SR_NO");
                            
                            lblItem.setText("Issue "+IssueNo);
                            lblItem.repaint();
                            
                            if(IssueQty<=OpeningQty) {
                                OpeningQty=OpeningQty-IssueQty;
                                IssueValue=EITLERPGLOBAL.round(OpeningRate*IssueQty,2);
                                
                                //Update the rate in Issue.
                                data.Execute("UPDATE D_INV_ISSUE_DETAIL SET TMP_ISSUE_AMOUNT="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                                
                                //No GRN Updation required now.
                            }
                            else {
                                //Initialize the Issue Value
                                IssueValue=0;
                                IssueRate=0;
                                
                                //Get the Difference
                                DiffQty=OpeningQty;
                                
                                
                                IssueValue=EITLERPGLOBAL.round(DiffQty*OpeningRate,2);
                                
                                //Decrease the IssueQty
                                IssueQty=IssueQty-OpeningQty;
                                
                                OpeningQty=0;
                                
                                //Now for rest of the Qty. we have to search the GRN in FIFO order.
                                strSQL="SELECT A.GRN_NO,B.SR_NO,A.GRN_DATE,B.LANDED_RATE,B.QTY,B.TMP_ISSUED_QTY,B.COLUMN_8_AMT AS CENVAT_AMOUNT FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.TMP_ISSUED_QTY<B.QTY AND ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+StockEntryDate+"' AND A.GRN_DATE<='"+IssueDate+"' ORDER BY A.GRN_DATE";
                                rsRcpt=data.getResult(strSQL);
                                rsRcpt.first();
                                
                                if(rsRcpt.getRow()>0) {
                                    Done=false;
                                    while((!Done)&&(!rsRcpt.isAfterLast())) {
                                        String GRNNo=rsRcpt.getString("GRN_NO");
                                        int GRNSrNo=rsRcpt.getInt("SR_NO");
                                        double Qty=rsRcpt.getDouble("QTY")-rsRcpt.getDouble("TMP_ISSUED_QTY");
                                        double Rate=0;
                                        
                                        if(Qty==0) {
                                            Rate=0;
                                        }
                                        else {
                                            if(rsRcpt.getDouble("QTY")>0)
                                            {
                                            Rate=EITLERPGLOBAL.round((rsRcpt.getDouble("CENVAT_AMOUNT")/rsRcpt.getDouble("QTY")),2);    
                                            }
                                            else
                                            {
                                            Rate=EITLERPGLOBAL.round((rsRcpt.getDouble("CENVAT_AMOUNT")/1),2);    
                                            }
                                            
                                        }
                                        
                                        lblItem.setText("GRN "+GRNNo);
                                        lblItem.repaint();
                                        
                                        if(IssueQty<Qty) //Is GRN Qty sufficient to fulfill the issue ?
                                        {
                                            //DiffQty=Qty-IssueQty;
                                            DiffQty=IssueQty;
                                            
                                            IssueValue=EITLERPGLOBAL.round(IssueValue+(IssueQty*Rate),2);
                                            
                                            IssueQty=0;
                                            
                                            //We have to update the GRN.
                                            data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY=TMP_ISSUED_QTY+"+DiffQty+" WHERE GRN_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                        }
                                        else //GRN Qty. is not sufficient
                                        {
                                            DiffQty=IssueQty-Qty;
                                            
                                            IssueValue=EITLERPGLOBAL.round(IssueValue+(Qty*Rate),2);
                                            
                                            IssueQty=IssueQty-Qty;
                                            
                                            //Update the GRN with full qty.
                                            data.Execute("UPDATE D_INV_GRN_DETAIL SET TMP_ISSUED_QTY="+rsRcpt.getDouble("QTY")+" WHERE GRN_NO='"+GRNNo+"' AND SR_NO="+GRNSrNo);
                                        }
                                        
                                        if(rsRcpt.isAfterLast()||IssueQty==0) {
                                            Done=true;
                                        }
                                        
                                        if(!rsRcpt.isAfterLast()) {
                                            rsRcpt.next();
                                        }
                                    }
                                }
                                
                                
                                //Now check that Full Issue Qty has been used
                                if(IssueQty>0) {
                                    //Not enough receipts found for this much issue qty.
                                    
                                    //In this case Take the Avg. Rate
                                    if((rsIssue.getDouble("QTY")-IssueQty)==0) {
                                        IssueRate=0;
                                    }
                                    else {
                                        IssueRate=EITLERPGLOBAL.round(IssueValue/(rsIssue.getDouble("QTY")-IssueQty),2);
                                    }
                                    
                                    
                                    IssueValue=EITLERPGLOBAL.round(rsIssue.getDouble("QTY")*IssueRate,2);
                                    
                                }
                                else {
                                    
                                    //Otherwise devide the value
                                    IssueRate=EITLERPGLOBAL.round(IssueValue/rsIssue.getDouble("QTY"),2);
                                }
                                
                                //Update the Issue itself
                                data.Execute("UPDATE D_INV_ISSUE_DETAIL SET TMP_ISSUE_AMOUNT="+IssueValue+" WHERE ISSUE_NO='"+IssueNo+"' AND SR_NO="+IssueSrNo);
                            }
                            
                            rsIssue.next();
                        }
                        
                        rsItem.next();
                    }
                    //===========================END FIFO PROCESS ================================//
                    
                    
                    
                    data.Execute("DELETE FROM D_INV_ITEM_MASTER_TMP");
                    
                    boolean HasOpening=false;
                    boolean HasInward=false;
                    boolean HasClosing=false;
                    
                    
                    strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER A WHERE ITEM_ID NOT LIKE 'RM%' AND COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    //Loop through each item
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        
                        ItemTotal=0;
                        
                        HasOpening=false;
                        HasInward=false;
                        HasClosing=false;
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        lblItem.setText(ItemID);
                        lblItem.repaint();
                        
                        
                        //Now Decide the Opening Stock and Value
                        OpeningQty=0;
                        OpeningValue=0;
                        OpeningNetValue=0;
                        
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=rsTmp.getDouble("OPENING_QTY");
                            OpeningValue=rsTmp.getDouble("CENVAT_AMOUNT");
                            OpeningNetValue=rsTmp.getDouble("OPENING_VALUE");
                            
                            if(OpeningQty==0) {
                                OpeningValue=0;
                                OpeningNetValue=0;
                                OpeningRate=0;
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                            }
                        }
                        
                        // Get the Inwards from opening stock date to upto from date
                        strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(B.COLUMN_8_AMT) IS NULL,0,SUM(B.COLUMN_8_AMT)) AS SUM_CENVAT,SUM(B.QTY*B.LANDED_RATE) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_CENVAT"),2);
                            OpeningNetValue=EITLERPGLOBAL.round(OpeningNetValue+rsTmp.getDouble("SUM_VALUE"),2);
                            OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),2);
                        }
                        
                        
                        // Get the Issues from opening stock date to upto from date
                        strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(TMP_ISSUE_AMOUNT) IS NULL,0,SUM(TMP_ISSUE_AMOUNT)) AS SUM_VALUE,SUM(ISSUE_VALUE) AS ISSUE_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_CODE='"+ItemID+"'";
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),2);
                            OpeningNetValue=EITLERPGLOBAL.round(OpeningNetValue-rsTmp.getDouble("ISSUE_VALUE"),2);
                            OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),2);
                        }
                        
                        
                        //we have Opening Stock and Qty.
                        //Take the Average Rate
                        if(OpeningQty==0) {
                            OpeningRate=0;
                        }
                        else {
                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                        }
                        
                        if(OpeningValue!=0) {
                            HasOpening=true;
                        }
                        
                        //Get the transactions between date
                        strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,B.QTY,B.COLUMN_8_AMT AS VALUE,B.LANDED_RATE*B.QTY AS NET_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND B.COLUMN_8_AMT>0";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,B.QTY,B.TMP_ISSUE_AMOUNT AS VALUE,ISSUE_VALUE AS NET_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+"  ORDER BY DOC_DATE";
                        
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            while(!rsTmp.isAfterLast()) {
                                
                                String Operation=rsTmp.getString("OPERATION");
                                
                                strDocNo=rsTmp.getString("DOC_NO");
                                strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                
                                strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                
                                if(Operation.equals("+")) {
                                    HasInward=true;
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                    OpeningNetValue=EITLERPGLOBAL.round(OpeningNetValue+rsTmp.getDouble("NET_VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                }
                                
                                
                                if(Operation.equals("-")) {
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("VALUE"),2);
                                    OpeningNetValue=EITLERPGLOBAL.round(OpeningNetValue-rsTmp.getDouble("NET_VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    
                                }
                                
                                rsTmp.next();
                                
                            }
                        }
                        
                        if(OpeningQty<=0) {
                            OpeningValue=0;
                        }
                        
                        if(EITLERPGLOBAL.round(OpeningValue,2)>0) {
                            HasClosing=true;
                        }
                        
                        
                        if(HasClosing) {
                            data.Execute("INSERT INTO D_INV_ITEM_MASTER_TMP (COMPANY_ID,ITEM_ID) VALUES("+EITLERPGLOBAL.gCompanyID+",'"+ItemID+"')");
                        }
                        
                        
                        rsItem.next();
                    }
                    
                    
                    
                    
                    
                    
                    //==========Get the Data from Item Master for ===============//
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    
                    PrintHeader(aFile);
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A,D_INV_ITEM_MASTER_TMP B WHERE A.ITEM_ID NOT LIKE 'RM%' AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    ResultSet rsCount=data.getResult(strSQL);
                    rsCount.first();
                    
                    Bar.setMaximum(rsCount.getInt("THECOUNT"));
                    Bar.setMinimum(0);
                    
                    strSQL="SELECT A.ITEM_ID,A.ITEM_DESCRIPTION,A.UNIT FROM D_INV_ITEM_MASTER A,D_INV_ITEM_MASTER_TMP B WHERE  A.ITEM_ID NOT LIKE 'RM%' AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition;
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    //Loop through each item
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        
                        ItemTotal=0;
                        
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        //Fill Up the variables first
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        lblItem.setText(ItemID);
                        lblItem.repaint();
                        
                        if(ItemName.length()>20) {
                            ItemName=ItemName.substring(0,20);
                        }
                        
                        UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                        
                        if(rsItem.getRow()>1) {
                            //newPage(aFile);
                        }
                        
                        writeLine(aFile,"");
                        writeLine(aFile," Item : "+ItemID+" "+ItemName+"     "+UnitName);
                        writeLine(aFile,"");
                        
                        //Now Decide the Opening Stock and Value
                        OpeningQty=0;
                        OpeningValue=0;
                        OpeningNetValue=0;
                        
                        strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningQty=rsTmp.getDouble("OPENING_QTY");
                            OpeningValue=rsTmp.getDouble("CENVAT_AMOUNT");
                            OpeningNetValue=rsTmp.getDouble("OPENING_VALUE");
                            
                            if(OpeningQty==0) {
                                OpeningValue=0;
                                OpeningNetValue=0;
                                OpeningRate=0;
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                            }
                        }
                        
                        // Get the Inwards from opening stock date to upto from date
                        strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(B.COLUMN_8_AMT) IS NULL,0,SUM(B.COLUMN_8_AMT)) AS SUM_CENVAT,SUM(B.QTY*B.LANDED_RATE) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_CENVAT"),2);
                            OpeningNetValue=EITLERPGLOBAL.round(OpeningNetValue+rsTmp.getDouble("SUM_VALUE"),2);
                            OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),2);
                        }
                        
                        
                        // Get the Issues from opening stock date to upto from date
                        strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(TMP_ISSUE_AMOUNT) IS NULL,0,SUM(TMP_ISSUE_AMOUNT)) AS SUM_VALUE,SUM(ISSUE_VALUE) AS ISSUE_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_CODE='"+ItemID+"'";
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),2);
                            OpeningNetValue=EITLERPGLOBAL.round(OpeningNetValue-rsTmp.getDouble("ISSUE_VALUE"),2);
                            OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),2);
                        }
                        
                        
                        //we have Opening Stock and Qty.
                        //Take the Average Rate
                        if(OpeningQty==0) {
                            OpeningRate=0;
                        }
                        else {
                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                        }
                        
                        ItemTotal+=OpeningValue;
                        
                        //Print the Opening Stock
                        strOpeningQty=dFormat.format(OpeningQty);
                        strOpeningQty=EITLERPGLOBAL.Replicate(" ", 7-strOpeningQty.length())+strOpeningQty;
                        strOpeningRate=dFormat.format(OpeningRate);
                        strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                        strOpeningValue=dFormat.format(OpeningValue);
                        strOpeningValue=EITLERPGLOBAL.Replicate(" ",10-strOpeningValue.length())+strOpeningValue;
                        strNetValue=dFormat.format(OpeningNetValue);
                        strNetValue=EITLERPGLOBAL.Replicate(" ",13-strNetValue.length())+strNetValue;
                        
                        //Opening Cenvat Amount
                        writeLine(aFile, " Opening  "+" "+"            "+" "+strOpeningQty+" "+strNetValue+" "+strOpeningValue);
                        
                        //Get the transactions between date
                        strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,B.QTY,B.COLUMN_8_AMT AS VALUE,B.LANDED_RATE*B.QTY AS NET_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND B.COLUMN_8_AMT>0";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,B.QTY,B.TMP_ISSUE_AMOUNT AS VALUE,ISSUE_VALUE AS NET_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                        strSQL=strSQL+"  ORDER BY DOC_DATE";
                        
                        rsTmp=data.getResult(strSQL);
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            while(!rsTmp.isAfterLast()) {
                                
                                String Operation=rsTmp.getString("OPERATION");
                                
                                strDocNo=rsTmp.getString("DOC_NO");
                                strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                
                                strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                
                                if(Operation.equals("+")) {
                                    strRcptQty=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                    strRcptValue=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                    
                                    if(rsTmp.getDouble("QTY")==0) {
                                        strRcptRate="0";
                                    }
                                    else {
                                        strRcptRate=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                    }
                                    
                                    strNetValue=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("NET_VALUE"),2));
                                    
                                    strRcptQty=EITLERPGLOBAL.Replicate(" ", 7-strRcptQty.length())+strRcptQty;
                                    strRcptRate=EITLERPGLOBAL.Replicate(" ", 11-strRcptRate.length())+strRcptRate;
                                    strRcptValue=EITLERPGLOBAL.Replicate(" ", 10-strRcptValue.length())+strRcptValue;
                                    strNetValue=EITLERPGLOBAL.Replicate(" ", 13-strNetValue.length())+strNetValue;
                                    
                                    
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),2);
                                    OpeningNetValue=EITLERPGLOBAL.round(OpeningNetValue+rsTmp.getDouble("NET_VALUE"),2);
                                    
                                    ItemTotal+=rsTmp.getDouble("VALUE");
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    
                                    strIssueQty=EITLERPGLOBAL.Replicate(" ", 6);
                                    strIssueRate=EITLERPGLOBAL.Replicate(" ", 11);
                                    strIssueValue=EITLERPGLOBAL.Replicate(" ", 11);
                                    
                                    strClosingQty=dFormat.format(OpeningQty);
                                    strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                    
                                    strClosingRate=dFormat.format(OpeningRate);
                                    strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                    
                                    strClosingValue=dFormat.format(OpeningValue);
                                    strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                    
                                    
                                    //Write a line into Report
                                    writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strNetValue+" "+strRcptValue);
                                }
                                
                                
                                if(Operation.equals("-")) {
                                    
                                    strIssueQty=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),2));
                                    strIssueValue=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                                    
                                    if(rsTmp.getDouble("QTY")==0) {
                                        strIssueRate="0";
                                    }
                                    else {
                                        strIssueRate=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),2));
                                    }
                                    
                                    strRcptQty=EITLERPGLOBAL.Replicate(" ", 6);
                                    strRcptRate=EITLERPGLOBAL.Replicate(" ", 11);
                                    strRcptValue=EITLERPGLOBAL.Replicate(" ", 11);
                                    
                                    strIssueQty=EITLERPGLOBAL.Replicate(" ", 6-strIssueQty.length())+strIssueQty;
                                    strIssueRate=EITLERPGLOBAL.Replicate(" ", 11-strIssueRate.length())+strIssueRate;
                                    strIssueValue=EITLERPGLOBAL.Replicate(" ", 11-strIssueValue.length())+strIssueValue;
                                    
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("QTY"),2);
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("VALUE"),2);
                                    OpeningNetValue=EITLERPGLOBAL.round(OpeningNetValue-rsTmp.getDouble("NET_VALUE"),2);
                                    
                                    if(OpeningQty==0) {
                                        OpeningRate=0;
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,2);
                                    }
                                    
                                    strClosingQty=dFormat.format(OpeningQty);
                                    strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                    
                                    strClosingRate=dFormat.format(OpeningRate);
                                    strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                    
                                    strClosingValue=dFormat.format(OpeningValue);
                                    strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                    
                                    //Write a line into Report
                                    // writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                    //writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                }
                                
                                rsTmp.next();
                            }
                        }
                        
                        if(OpeningQty<=0) {
                            OpeningValue=0;
                            OpeningNetValue=0;
                            OpeningRate=0;
                        }
                        
                        if(OpeningQty<0) {
                            OpeningQty=0;
                        }
                        
                        if(OpeningValue<0) {
                            OpeningValue=0;
                        }
                        
                        if(OpeningNetValue<0) {
                            OpeningNetValue=0;
                        }
                        strOpeningQty=dFormat.format(OpeningQty);
                        strOpeningQty=EITLERPGLOBAL.Replicate(" ", 7-strOpeningQty.length())+strOpeningQty;
                        strOpeningRate=dFormat.format(OpeningRate);
                        strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                        strOpeningValue=dFormat.format(OpeningValue);
                        strOpeningValue=EITLERPGLOBAL.Replicate(" ",10-strOpeningValue.length())+strOpeningValue;
                        
                        strNetValue=dFormat.format(OpeningNetValue);
                        strNetValue=EITLERPGLOBAL.Replicate(" ",13-strNetValue.length())+strNetValue;

                        String strItemTotal=dFormat.format(ItemTotal);
                        strItemTotal=EITLERPGLOBAL.Replicate(" ",10-strItemTotal.length())+strItemTotal;
                        
                        
                        //Display Item Total
                        writeLine(aFile, " -------------------------------------------------------------------"); 
                        writeLine(aFile, " Total  "+" "+"            "+" "+"       "+" "+"               "+" "+strItemTotal);
                        writeLine(aFile," ");
                        writeLine(aFile, " Closing  "+" "+"            "+" "+strOpeningQty+" "+strNetValue+" "+strOpeningValue);
                        writeLine(aFile," ");
                        
                        
                        if(chkUpdate.isSelected())
                        {
                          data.Execute("UPDATE D_COM_OPENING_STOCK_DETAIL SET CENVAT_AMOUNT="+EITLERPGLOBAL.round(OpeningValue,2)+" WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+LastStockEntryNo);  
                        }
                        
                        rsItem.next();
                    }
                    
                    
                    aFile.close();
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null,e.getMessage());
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                    
                }
                
            };
        }.start();
    }
}
