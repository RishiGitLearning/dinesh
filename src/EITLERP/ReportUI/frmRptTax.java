/*
 * frmRptGRNInfo.java
 *
 * Created on April 16, 2008, 12:01 PM
 */

package EITLERP.ReportUI;

/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;
import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;
import java.io.*;
import java.sql.ResultSet;
import javax.swing.JTable;



public class frmRptTax extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    private EITLTableCellRenderer RowFormat=new EITLTableCellRenderer();
    private clsExcelExporter exp = new clsExcelExporter();
    EITLTableModel DataModel= new EITLTableModel();
  //  private TReportEngine objEngine=new TReportEngine();
    
    /** Initializes the applet frmRptGRNInfo */
    
    public void init() {
       // setSize(424,264);
        setSize(670,500);
        initComponents();
        
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TResult = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(null);

        jLabel6.setText("OSG TAX SUMMARY REPORT");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(20, 10, 230, 16);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 630, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("From Date :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 70, 90, 20);

        txtFromDate.setColumns(10);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(120, 70, 90, 28);

        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(220, 70, 60, 20);

        txtToDate.setColumns(10);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(285, 70, 90, 20);

        jLabel1.setText("Period");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 40, 90, 16);

        jButton1.setText("Felt CST");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(30, 110, 100, 28);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        TResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TResult.getTableHeader().setFont(new Font("Plain", Font.BOLD, 12));
        jScrollPane1.setViewportView(TResult);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 180, 620, 200);

        jButton2.setText("Excel To Export");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(170, 370, 140, 28);

        jButton4.setText("Felt Vat");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(150, 110, 90, 28);

        jButton3.setText("Filter Febric CST");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(260, 110, 150, 28);

        jButton5.setText("Filter Febric Vat");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(430, 110, 150, 28);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
          formatGrid3()  ;   // TODO add your handling code here:
         GenerateReport3();    // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         formatGrid2()  ;   // TODO add your handling code here:
         GenerateReport2();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
           formatGrid1()  ;   // TODO add your handling code here:
           GenerateReport1();     // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          try{
            
            exp.fillData(TResult,new File("D:/TAX.xls"));
            //exp.fillData(TableI,new File("C://ProductionProcess.xls"));
         //   exp.fillData(TResult,new File("D://TAX.xls"));
            JOptionPane.showMessageDialog(null, "Data saved at " +
            //"'C: \\ result.xls' successfully", "Message",
            "'D:/TAX.xls' successfully in PC     ", "Message",
            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
               formatGrid()  ;   // TODO add your handling code here:
               GenerateReport();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TResult;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        try {
           
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("TAX_INVOICE_NO");
            objReportData.AddColumn("TAX_INVOICE_DATE");
            objReportData.AddColumn("TAX_PARTY_CODE");
            objReportData.AddColumn("TAX_PARTY_NAME");
            objReportData.AddColumn("STATION");
            objReportData.AddColumn("BASIC_AMT");
            objReportData.AddColumn("CST_AMT");
            objReportData.AddColumn("TOT_AMT");
            objReportData.AddColumn("TIN_NO");
            
            
          //  TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("TAX_INVOICE_NO","");
            objOpeningRow.setValue("TAX_INVOICE_DATE","0000-00-00");
            objOpeningRow.setValue("TAX_PARTY_CODE","");
            objOpeningRow.setValue("TAX_PARTY_NAME","");
            objOpeningRow.setValue("STATION","");
            objOpeningRow.setValue("BASIC_AMT","");
            objOpeningRow.setValue("CST_AMT","");
            objOpeningRow.setValue("TOT_AMT","");
            objOpeningRow.setValue("TIN_NO","");
            
            //String strSQL = "";
            
            String strSQL="SELECT * FROM D_SAL_INVOICE_TAX WHERE TAX_FL_CD='FL' AND TAX_TR_TYPE='RC' AND TAX_INVOICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND TAX_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND CST_AMT#0 ORDER BY TAX_INVOICE_DATE";
          //  String strSQL1="SELECT * FROM D_SAL_INVOICE_TAX WHERE TAX_FL_CD='FF' AND TAX_TR_TYPE='RC' AND TAX_INVOICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND TAX_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND CST_AMT#0 ORDER BY TAX_INVOICE_DATE";

            
           ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();                    
                    Object[] rowData=new Object[21];
                    
                    //objRow=objReportData.newRow();
                    objRow.setValue("TAX_INVOICE_NO",UtilFunctions.getString(rsTmp,"TAX_INVOICE_NO",""));
                    rowData[0]=UtilFunctions.getString(rsTmp,"TAX_INVOICE_NO","");
                    objRow.setValue("TAX_INVOICE_DATE",UtilFunctions.getString(rsTmp,"TAX_INVOICE_DATE","0000-00-00"));
                    rowData[1]=UtilFunctions.getString(rsTmp,"TAX_INVOICE_DATE","0000-00-00");                   
                    objRow.setValue("TIN_NO",UtilFunctions.getString(rsTmp,"TIN_NO",""));
                    rowData[2]=UtilFunctions.getString(rsTmp,"TIN_NO","");
                    objRow.setValue("TAX_PARTY_CODE",UtilFunctions.getString(rsTmp,"TAX_PARTY_CODE",""));
                    rowData[3]=UtilFunctions.getString(rsTmp,"TAX_PARTY_CODE","");
                    objRow.setValue("TAX_PARTY_NAME",UtilFunctions.getString(rsTmp,"TAX_PARTY_NAME",""));
                    rowData[4]=UtilFunctions.getString(rsTmp,"TAX_PARTY_NAME","");
                    objRow.setValue("STATION",UtilFunctions.getString(rsTmp,"STATION",""));
                    rowData[5]=UtilFunctions.getString(rsTmp,"STATION","");
                    rowData[6]="FELT";
                    objRow.setValue("BASIC_AMT",UtilFunctions.getString(rsTmp,"BASIC_AMT",""));
                    rowData[7]=UtilFunctions.getString(rsTmp,"BASIC_AMT","");
                    objRow.setValue("CST_AMT",UtilFunctions.getString(rsTmp,"CST_AMT",""));
                    rowData[8]=UtilFunctions.getString(rsTmp,"CST_AMT","");
                    objRow.setValue("TOT_AMT",UtilFunctions.getString(rsTmp,"TOT_AMT",""));
                    rowData[9]=UtilFunctions.getString(rsTmp,"TOT_AMT","");
                    rowData[10]="FORM C";
                    
                    objReportData.AddRow(objRow);
                    DataModel.addRow(rowData);
                    rsTmp.next();
                    
                }
            }
            
          
            //END FIF SALES
            
            
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //Parameters.put("COMPANY_ID",Integer.toString(Comp_ID));
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptTex.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
   
    private void formatGrid() {
        try {
           // objRow=objReportData.newRow();
            DataModel=new EITLTableModel();
            TResult.removeAll();
            TResult.setModel(DataModel);
            TResult.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Invoice No");//8
            DataModel.addColumn("Invoice Date"); //0   
            DataModel.addColumn("Purchaser Tin No");//1
            DataModel.addColumn("Party Code");//2
            DataModel.addColumn("Name Of Purchaser");//3
            DataModel.addColumn("City");//5
            DataModel.addColumn("Desc Of Goods");//6
            DataModel.addColumn("Values Of Goods");//7
            DataModel.addColumn("Tax");//9
            DataModel.addColumn("Total");//10
            DataModel.addColumn("Form Type");//11
            
            
            
            
            
            
            /*
            DataModel.SetVariable(0,"TAX_INVOICE_NO");
            DataModel.SetVariable(1,"TAX_INVOICE_DATE");
            DataModel.SetVariable(2,"TIN_NO");
            DataModel.SetVariable(3,"TAX_PARTY_CODE");
            DataModel.SetVariable(4,"TAX_PARTY_NAME");
            DataModel.SetVariable(4,"STATION");
            DataModel.SetVariable(5,"FELT");
            DataModel.SetVariable(6,"BASIC_AMT");
            DataModel.SetVariable(7,"CST_AMT");
            DataModel.SetVariable(8,"TOT_AMT");
            DataModel.SetVariable(9,"FORM C");
           */
            
            RowFormat =new EITLTableCellRenderer();
            
            for(int j=0;j<TResult.getColumnCount();j++) {
                TResult.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
        }
        catch(Exception e) {
            
        }
                
    }
    
   private void GenerateReport1() {
        try {
           
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("TAX_INVOICE_NO");
            objReportData.AddColumn("TAX_INVOICE_DATE");
            objReportData.AddColumn("TAX_PARTY_CODE");
            objReportData.AddColumn("TAX_PARTY_NAME");
            objReportData.AddColumn("VAT4");
            objReportData.AddColumn("BASIC_AMT");
            objReportData.AddColumn("VAT1");
            objReportData.AddColumn("TOT_AMT");
            objReportData.AddColumn("TIN_NO");
            
            
          //  TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("TAX_INVOICE_NO","");
            objOpeningRow.setValue("TAX_INVOICE_DATE","0000-00-00");
            objOpeningRow.setValue("TAX_PARTY_CODE","");
            objOpeningRow.setValue("TAX_PARTY_NAME","");
            objOpeningRow.setValue("VAT4","");
            objOpeningRow.setValue("BASIC_AMT","");
            objOpeningRow.setValue("CST_AMT","");
            objOpeningRow.setValue("TOT_AMT","");
            objOpeningRow.setValue("VAT1","");
            
            //String strSQL = "";
            
            String strSQL="SELECT * FROM D_SAL_INVOICE_TAX WHERE TAX_FL_CD='FL' AND TAX_TR_TYPE IN ('TV','RV') AND TAX_INVOICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND TAX_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY TAX_INVOICE_DATE";

            
           ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();                    
                    Object[] rowData=new Object[21];
                    
                    //objRow=objReportData.newRow();
                    objRow.setValue("TAX_INVOICE_NO",UtilFunctions.getString(rsTmp,"TAX_INVOICE_NO",""));
                    rowData[0]=UtilFunctions.getString(rsTmp,"TAX_INVOICE_NO","");
                    objRow.setValue("TAX_INVOICE_DATE",UtilFunctions.getString(rsTmp,"TAX_INVOICE_DATE","0000-00-00"));
                    rowData[1]=UtilFunctions.getString(rsTmp,"TAX_INVOICE_DATE","0000-00-00");                   
                    objRow.setValue("TAX_PARTY_CODE",UtilFunctions.getString(rsTmp,"TAX_PARTY_CODE",""));
                    rowData[2]=UtilFunctions.getString(rsTmp,"TAX_PARTY_CODE","");
                    objRow.setValue("TAX_PARTY_NAME",UtilFunctions.getString(rsTmp,"TAX_PARTY_NAME",""));
                    rowData[3]=UtilFunctions.getString(rsTmp,"TAX_PARTY_NAME","");
                    objRow.setValue("TIN_NO",UtilFunctions.getString(rsTmp,"TIN_NO",""));
                    rowData[4]=UtilFunctions.getString(rsTmp,"TIN_NO","");
                    objRow.setValue("BASIC_AMT",UtilFunctions.getString(rsTmp,"BASIC_AMT",""));
                    rowData[5]=UtilFunctions.getString(rsTmp,"BASIC_AMT","");
                    objRow.setValue("VAT4",UtilFunctions.getString(rsTmp,"VAT4",""));
                    rowData[6]=UtilFunctions.getString(rsTmp,"VAT4","");
                    objRow.setValue("VAT1",UtilFunctions.getString(rsTmp,"VAT1",""));
                    rowData[7]=UtilFunctions.getString(rsTmp,"VAT1","");
                    objRow.setValue("TOT_AMT",UtilFunctions.getString(rsTmp,"TOT_AMT",""));
                    rowData[8]=UtilFunctions.getString(rsTmp,"TOT_AMT","");
                                        
                    objReportData.AddRow(objRow);
                    DataModel.addRow(rowData);
                    rsTmp.next();
                    
                }
            }
            
          
            //END FIF SALES
            
            
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //Parameters.put("COMPANY_ID",Integer.toString(Comp_ID));
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptTex1.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
   private void formatGrid1() {
        try {
           // objRow=objReportData.newRow();
            DataModel=new EITLTableModel();
            TResult.removeAll();
            TResult.setModel(DataModel);
            TResult.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Invoice No");//8
            DataModel.addColumn("Invoice Date"); //0   
            DataModel.addColumn("Party Code");//2
            DataModel.addColumn("Name Of Purchaser");//3
            DataModel.addColumn("Rc No");//5
            DataModel.addColumn("Values Of Goods");//7
            DataModel.addColumn("VAT4");//9
            DataModel.addColumn("VAT1");//9  
            DataModel.addColumn("Total");//10
            
            
            
            
            
            
            
            /*
            DataModel.SetVariable(0,"TAX_INVOICE_NO");
            DataModel.SetVariable(1,"TAX_INVOICE_DATE");
            DataModel.SetVariable(2,"TIN_NO");
            DataModel.SetVariable(3,"TAX_PARTY_CODE");
            DataModel.SetVariable(4,"TAX_PARTY_NAME");
            DataModel.SetVariable(4,"STATION");
            DataModel.SetVariable(5,"FELT");
            DataModel.SetVariable(6,"BASIC_AMT");
            DataModel.SetVariable(7,"CST_AMT");
            DataModel.SetVariable(8,"TOT_AMT");
            DataModel.SetVariable(9,"FORM C");
           */
            
            RowFormat =new EITLTableCellRenderer();
            
            for(int j=0;j<TResult.getColumnCount();j++) {
                TResult.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
        }
        catch(Exception e) {
            
        }
                
    }
   
     private void GenerateReport2() {
        try {
           
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("TAX_INVOICE_NO");
            objReportData.AddColumn("TAX_INVOICE_DATE");
            objReportData.AddColumn("TAX_PARTY_CODE");
            objReportData.AddColumn("TAX_PARTY_NAME");
            objReportData.AddColumn("STATION");
            objReportData.AddColumn("BASIC_AMT");
            objReportData.AddColumn("CST_AMT");
            objReportData.AddColumn("TOT_AMT");
            objReportData.AddColumn("TIN_NO");
            
            
          //  TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("TAX_INVOICE_NO","");
            objOpeningRow.setValue("TAX_INVOICE_DATE","0000-00-00");
            objOpeningRow.setValue("TAX_PARTY_CODE","");
            objOpeningRow.setValue("TAX_PARTY_NAME","");
            objOpeningRow.setValue("STATION","");
            objOpeningRow.setValue("BASIC_AMT","");
            objOpeningRow.setValue("CST_AMT","");
            objOpeningRow.setValue("TOT_AMT","");
            objOpeningRow.setValue("TIN_NO","");
            
            //String strSQL = "";
            
            String strSQL="SELECT * FROM D_SAL_INVOICE_TAX WHERE TAX_FL_CD='FF' AND TAX_TR_TYPE='RC' AND TAX_INVOICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND TAX_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND CST_AMT#0 ORDER BY TAX_INVOICE_DATE";
          //  String strSQL1="SELECT * FROM D_SAL_INVOICE_TAX WHERE TAX_FL_CD='FF' AND TAX_TR_TYPE='RC' AND TAX_INVOICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND TAX_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND CST_AMT#0 ORDER BY TAX_INVOICE_DATE";

            
           ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();                    
                    Object[] rowData=new Object[21];
                    
                    //objRow=objReportData.newRow();
                    objRow.setValue("TAX_INVOICE_NO",UtilFunctions.getString(rsTmp,"TAX_INVOICE_NO",""));
                    rowData[0]=UtilFunctions.getString(rsTmp,"TAX_INVOICE_NO","");
                    objRow.setValue("TAX_INVOICE_DATE",UtilFunctions.getString(rsTmp,"TAX_INVOICE_DATE","0000-00-00"));
                    rowData[1]=UtilFunctions.getString(rsTmp,"TAX_INVOICE_DATE","0000-00-00");                   
                    objRow.setValue("TIN_NO",UtilFunctions.getString(rsTmp,"TIN_NO",""));
                    rowData[2]=UtilFunctions.getString(rsTmp,"TIN_NO","");
                    objRow.setValue("TAX_PARTY_CODE",UtilFunctions.getString(rsTmp,"TAX_PARTY_CODE",""));
                    rowData[3]=UtilFunctions.getString(rsTmp,"TAX_PARTY_CODE","");
                    objRow.setValue("TAX_PARTY_NAME",UtilFunctions.getString(rsTmp,"TAX_PARTY_NAME",""));
                    rowData[4]=UtilFunctions.getString(rsTmp,"TAX_PARTY_NAME","");
                    objRow.setValue("STATION",UtilFunctions.getString(rsTmp,"STATION",""));
                    rowData[5]=UtilFunctions.getString(rsTmp,"STATION","");
                    rowData[6]="FELT";
                    objRow.setValue("BASIC_AMT",UtilFunctions.getString(rsTmp,"BASIC_AMT",""));
                    rowData[7]=UtilFunctions.getString(rsTmp,"BASIC_AMT","");
                    objRow.setValue("CST_AMT",UtilFunctions.getString(rsTmp,"CST_AMT",""));
                    rowData[8]=UtilFunctions.getString(rsTmp,"CST_AMT","");
                    objRow.setValue("TOT_AMT",UtilFunctions.getString(rsTmp,"TOT_AMT",""));
                    rowData[9]=UtilFunctions.getString(rsTmp,"TOT_AMT","");
                    rowData[10]="FORM C";
                    
                    objReportData.AddRow(objRow);
                    DataModel.addRow(rowData);
                    rsTmp.next();
                    
                }
            }
            
          
            //END FIF SALES
            
            
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //Parameters.put("COMPANY_ID",Integer.toString(Comp_ID));
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptTex.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
   
    private void formatGrid2() {
        try {
           // objRow=objReportData.newRow();
            DataModel=new EITLTableModel();
            TResult.removeAll();
            TResult.setModel(DataModel);
            TResult.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Invoice No");//8
            DataModel.addColumn("Invoice Date"); //0   
            DataModel.addColumn("Purchaser Tin No");//1
            DataModel.addColumn("Party Code");//2
            DataModel.addColumn("Name Of Purchaser");//3
            DataModel.addColumn("City");//5
            DataModel.addColumn("Desc Of Goods");//6
            DataModel.addColumn("Values Of Goods");//7
            DataModel.addColumn("Tax");//9
            DataModel.addColumn("Total");//10
            DataModel.addColumn("Form Type");//11
            
            
            
            
            
            
            /*
            DataModel.SetVariable(0,"TAX_INVOICE_NO");
            DataModel.SetVariable(1,"TAX_INVOICE_DATE");
            DataModel.SetVariable(2,"TIN_NO");
            DataModel.SetVariable(3,"TAX_PARTY_CODE");
            DataModel.SetVariable(4,"TAX_PARTY_NAME");
            DataModel.SetVariable(4,"STATION");
            DataModel.SetVariable(5,"FELT");
            DataModel.SetVariable(6,"BASIC_AMT");
            DataModel.SetVariable(7,"CST_AMT");
            DataModel.SetVariable(8,"TOT_AMT");
            DataModel.SetVariable(9,"FORM C");
           */
            
            RowFormat =new EITLTableCellRenderer();
            
            for(int j=0;j<TResult.getColumnCount();j++) {
                TResult.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
        }
        catch(Exception e) {
            
        }
                
    }
    
    
     private void GenerateReport3() {
        try {
           
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("TAX_INVOICE_NO");
            objReportData.AddColumn("TAX_INVOICE_DATE");
            objReportData.AddColumn("TAX_PARTY_CODE");
            objReportData.AddColumn("TAX_PARTY_NAME");
            objReportData.AddColumn("VAT4");
            objReportData.AddColumn("BASIC_AMT");
            objReportData.AddColumn("VAT1");
            objReportData.AddColumn("TOT_AMT");
            objReportData.AddColumn("TIN_NO");
            
            
          //  TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("TAX_INVOICE_NO","");
            objOpeningRow.setValue("TAX_INVOICE_DATE","0000-00-00");
            objOpeningRow.setValue("TAX_PARTY_CODE","");
            objOpeningRow.setValue("TAX_PARTY_NAME","");
            objOpeningRow.setValue("VAT4","");
            objOpeningRow.setValue("BASIC_AMT","");
            objOpeningRow.setValue("CST_AMT","");
            objOpeningRow.setValue("TOT_AMT","");
            objOpeningRow.setValue("VAT1","");
            
            //String strSQL = "";
            
            String strSQL="SELECT * FROM D_SAL_INVOICE_TAX WHERE TAX_FL_CD='FF' AND TAX_TR_TYPE='TV' AND TAX_INVOICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND TAX_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY TAX_INVOICE_DATE";

            
           ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();                    
                    Object[] rowData=new Object[21];
                    
                    //objRow=objReportData.newRow();
                    objRow.setValue("TAX_INVOICE_NO",UtilFunctions.getString(rsTmp,"TAX_INVOICE_NO",""));
                    rowData[0]=UtilFunctions.getString(rsTmp,"TAX_INVOICE_NO","");
                    objRow.setValue("TAX_INVOICE_DATE",UtilFunctions.getString(rsTmp,"TAX_INVOICE_DATE","0000-00-00"));
                    rowData[1]=UtilFunctions.getString(rsTmp,"TAX_INVOICE_DATE","0000-00-00");                   
                    objRow.setValue("TAX_PARTY_CODE",UtilFunctions.getString(rsTmp,"TAX_PARTY_CODE",""));
                    rowData[2]=UtilFunctions.getString(rsTmp,"TAX_PARTY_CODE","");
                    objRow.setValue("TAX_PARTY_NAME",UtilFunctions.getString(rsTmp,"TAX_PARTY_NAME",""));
                    rowData[3]=UtilFunctions.getString(rsTmp,"TAX_PARTY_NAME","");
                    objRow.setValue("TIN_NO",UtilFunctions.getString(rsTmp,"TIN_NO",""));
                    rowData[4]=UtilFunctions.getString(rsTmp,"TIN_NO","");
                    objRow.setValue("BASIC_AMT",UtilFunctions.getString(rsTmp,"BASIC_AMT",""));
                    rowData[5]=UtilFunctions.getString(rsTmp,"BASIC_AMT","");
                    objRow.setValue("VAT4",UtilFunctions.getString(rsTmp,"VAT4",""));
                    rowData[6]=UtilFunctions.getString(rsTmp,"VAT4","");
                    objRow.setValue("VAT1",UtilFunctions.getString(rsTmp,"VAT1",""));
                    rowData[7]=UtilFunctions.getString(rsTmp,"VAT1","");
                    objRow.setValue("TOT_AMT",UtilFunctions.getString(rsTmp,"TOT_AMT",""));
                    rowData[8]=UtilFunctions.getString(rsTmp,"TOT_AMT","");
                                        
                    objReportData.AddRow(objRow);
                    DataModel.addRow(rowData);
                    rsTmp.next();
                    
                }
            }
            
          
            //END FIF SALES
            
            
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //Parameters.put("COMPANY_ID",Integer.toString(Comp_ID));
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptTex1.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
   private void formatGrid3() {
        try {
           // objRow=objReportData.newRow();
            DataModel=new EITLTableModel();
            TResult.removeAll();
            TResult.setModel(DataModel);
            TResult.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Invoice No");//8
            DataModel.addColumn("Invoice Date"); //0   
            DataModel.addColumn("Party Code");//2
            DataModel.addColumn("Name Of Purchaser");//3
            DataModel.addColumn("Rc No");//5
            DataModel.addColumn("Values Of Goods");//7
            DataModel.addColumn("VAT4");//9
            DataModel.addColumn("VAT1");//9  
            DataModel.addColumn("Total");//10
            
            
            
            
            
            
            
            /*
            DataModel.SetVariable(0,"TAX_INVOICE_NO");
            DataModel.SetVariable(1,"TAX_INVOICE_DATE");
            DataModel.SetVariable(2,"TIN_NO");
            DataModel.SetVariable(3,"TAX_PARTY_CODE");
            DataModel.SetVariable(4,"TAX_PARTY_NAME");
            DataModel.SetVariable(4,"STATION");
            DataModel.SetVariable(5,"FELT");
            DataModel.SetVariable(6,"BASIC_AMT");
            DataModel.SetVariable(7,"CST_AMT");
            DataModel.SetVariable(8,"TOT_AMT");
            DataModel.SetVariable(9,"FORM C");
           */
            
            RowFormat =new EITLTableCellRenderer();
            
            for(int j=0;j<TResult.getColumnCount();j++) {
                TResult.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
        }
        catch(Exception e) {
            
        }
                
    }

    
     private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        return true;
    }
    
    
    
}
