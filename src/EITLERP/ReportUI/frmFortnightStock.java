/*
 * frmRptPendingIndent.java
 *
 * Created on January 19, 2005, 1:07 PM
 */

package EITLERP.ReportUI;

/**
 *
 * @author  root
 */

import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.*;
import java.net.*;
import java.sql.*;
import EITLERP.Finance.FinanceGlobal;
import java.text.*;
import TReportWriter.*;

public class frmFortnightStock extends javax.swing.JApplet {
    
    private EITLComboModel cmbFortnightNoModel;
    private EITLComboModel cmbYearModel;
    private TReportEngine objEngine=new TReportEngine();
    /** Initializes the applet frmRptPendingIndent */
    public void init() {
        setSize(375,250);
        initComponents();
        cmbFortnightNoModel = new EITLComboModel();
        cmbYearModel = new EITLComboModel();
        GenerateCombo();
        int CurFinYear=EITLERPGLOBAL.getCurrentFinYear();
        EITLERPGLOBAL.setComboIndex(cmbYear,CurFinYear);
        cmbFortnightNo.requestFocus();
        lblCompanyName.setText("Company :: " + clsCompany.getCompanyName(EITLERPGLOBAL.gCompanyID) + ", " + clsCompany.getCityName(EITLERPGLOBAL.gCompanyID));
        cmdLock.setEnabled(false);
        chkLockFortNight.setEnabled(false);
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 1061, 10611)) {
            chkLockFortNight.setEnabled(true);
        }
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        cmdPreview = new javax.swing.JButton();
        cmdExi = new javax.swing.JButton();
        lblFeedBack = new javax.swing.JLabel();
        lblFromDate = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        lblToDate = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        chkLockFortNight = new javax.swing.JCheckBox();
        cmdLock = new javax.swing.JButton();
        cmbFortnightNo = new javax.swing.JComboBox();
        lblFortnightNo = new javax.swing.JLabel();
        lblCompanyName = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        cmbYear = new javax.swing.JComboBox();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 204));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" FORTNIGHT STOCK STATEMENT");
        jLabel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(1, 3, 380, 27);

        cmdPreview.setText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(141, 176, 105, 28);

        cmdExi.setText("Exit");
        cmdExi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExiActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExi);
        cmdExi.setBounds(256, 176, 107, 28);

        lblFeedBack.setText("...");
        getContentPane().add(lblFeedBack);
        lblFeedBack.setBounds(12, 118, 340, 15);

        lblFromDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromDate.setText("From Date :");
        getContentPane().add(lblFromDate);
        lblFromDate.setBounds(7, 92, 76, 15);

        txtFromDate.setEditable(false);
        txtFromDate.setFont(new java.awt.Font("Dialog", 1, 12));
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(89, 89, 114, 21);

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To :");
        getContentPane().add(lblToDate);
        lblToDate.setBounds(209, 91, 25, 15);

        txtToDate.setEditable(false);
        txtToDate.setFont(new java.awt.Font("Dialog", 1, 12));
        getContentPane().add(txtToDate);
        txtToDate.setBounds(239, 89, 114, 21);

        chkLockFortNight.setText(" Lock Fortnight");
        chkLockFortNight.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkLockFortNightItemStateChanged(evt);
            }
        });

        getContentPane().add(chkLockFortNight);
        chkLockFortNight.setBounds(9, 143, 123, 17);

        cmdLock.setText("Lock");
        cmdLock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLockActionPerformed(evt);
            }
        });

        getContentPane().add(cmdLock);
        cmdLock.setBounds(23, 176, 105, 28);

        cmbFortnightNo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFortnightNoItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbFortnightNo);
        cmbFortnightNo.setBounds(104, 36, 65, 21);

        lblFortnightNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFortnightNo.setText("Fortnight No :");
        getContentPane().add(lblFortnightNo);
        lblFortnightNo.setBounds(9, 39, 88, 15);

        lblCompanyName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCompanyName.setText("...");
        getContentPane().add(lblCompanyName);
        lblCompanyName.setBounds(12, 66, 341, 15);

        lblYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblYear.setText("Year :");
        getContentPane().add(lblYear);
        lblYear.setBounds(179, 39, 88, 15);

        getContentPane().add(cmbYear);
        cmbYear.setBounds(274, 36, 79, 21);

    }//GEN-END:initComponents
    
    private void cmdLockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLockActionPerformed
        // TODO add your handling code here:
        if(EITLERPGLOBAL.getComboCode(cmbFortnightNo)==0) {
            JOptionPane.showMessageDialog(this,"PLEASE SELECT PROPER FORTNIGHT NO.");
            return;
        }
        
        if(chkLockFortNight.isSelected()) {
            int FortNo = EITLERPGLOBAL.getComboCode(cmbFortnightNo);
            String Year = Integer.toString(EITLERPGLOBAL.getComboCode(cmbYear));
            String SQL = "SELECT * FROM D_INV_FORTNIGHT_HEADER WHERE FORTNIGHT_NO="+FortNo+" AND YEAR='"+Year+"' ";
            if(data.IsRecordExist(SQL)) {
                SQL = "SELECT * FROM D_INV_FORTNIGHT_HEADER WHERE FORTNIGHT_NO="+FortNo+" AND YEAR='"+Year+"' AND LOCKED=1";
                if(data.IsRecordExist(SQL)) {
                    JOptionPane.showMessageDialog(this,"FORTNIGHT NO = "+FortNo+" WITH YEAR='"+Year+"' ALREADY EXISTS & LOCKED." );
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(this,"FORTNIGHT NO = "+FortNo+" IN YEAR="+Year+" DOES NOT EXISTS. \n PLEASE GENERATE IT FIRST THEN LOCK IT.." );
                return;
            }
            
            FortNo--;
            SQL = "SELECT * FROM D_INV_FORTNIGHT_HEADER WHERE FORTNIGHT_NO="+FortNo+" AND YEAR='"+Year+"' AND LOCKED=1";
            if(!data.IsRecordExist(SQL) && FortNo!=0) {
                JOptionPane.showMessageDialog(this,"PREVIOUS FORTNIGHT NO = "+FortNo+" WITH YEAR='"+Year+"' DOES NOT EXISTS OR DOES NOT LOCKED." );
                return;
            }
            
            FortNo++;
            data.Execute("UPDATE D_INV_FORTNIGHT_HEADER SET LOCKED=1, LOCKED_DATE='"+EITLERPGLOBAL.getCurrentDateDB()+"' " +
            "WHERE FORTNIGHT_NO="+FortNo+" AND YEAR='"+Year+"' ");
        }
    }//GEN-LAST:event_cmdLockActionPerformed
    
    private void cmbFortnightNoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFortnightNoItemStateChanged
        // TODO add your handling code here:
        int FortnightNo = EITLERPGLOBAL.getComboCode(cmbFortnightNo);
        if(FortnightNo == 0) {
            lblFeedBack.setText("Please select proper FortnightNo.");
            txtFromDate.setText("");
            txtToDate.setText("");
        } else {
            txtFromDate.setText("");
            txtToDate.setText("");
            String Year = Integer.toString(EITLERPGLOBAL.getComboCode(cmbYear));
            String FromDate = Year+"-04-01";
            String ToDate = "";
            int Counter = 0;
            String Month = EITLERPGLOBAL.Padding(Integer.toString(EITLERPGLOBAL.getMonth(FromDate)),2,"0");
            for(int i=1;i<=24;i++) {
                Counter++;
                Month = EITLERPGLOBAL.Padding(Integer.toString(EITLERPGLOBAL.getMonth(FromDate)),2,"0");
                if(i % 2 != 0) {
                    ToDate = Year+"-"+Month+"-15";
                } else {
                    ToDate = data.getStringValueFromDB("SELECT LAST_DAY('"+FromDate+"') AS LAST_DATE FROM DUAL");
                }
                if(i==FortnightNo) {
                    break;
                } else {
                    if(Counter!=2) {
                        FromDate = Year+"-"+Month+"-15";
                    } else {
                        Month = EITLERPGLOBAL.Padding(Integer.toString((Integer.parseInt(Month)+1)),2,"0");
                        if(Integer.parseInt(Month) > 12) {
                            FromDate = EITLERPGLOBAL.addDaysToDate(ToDate, 1, "yyyy-MM-dd");
                            Month = EITLERPGLOBAL.Padding(Integer.toString(EITLERPGLOBAL.getMonth(FromDate)),2,"0");
                            Year = Integer.toString(Integer.parseInt(Year) + 1);
                        }
                        FromDate = Year+"-"+Month+"-01";
                        Counter=0;
                    }
                }
            }
            txtFromDate.setText(EITLERPGLOBAL.formatDate(FromDate));
            txtToDate.setText(EITLERPGLOBAL.formatDate(ToDate));
            lblFeedBack.setText("Last Locked Fortnight No : " + data.getIntValueFromDB("SELECT MAX(FORTNIGHT_NO) FROM D_INV_FORTNIGHT_HEADER WHERE LOCKED=1 AND YEAR='"+EITLERPGLOBAL.getYear(FromDate)+"'"));
        }
    }//GEN-LAST:event_cmbFortnightNoItemStateChanged
    
    private void chkLockFortNightItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkLockFortNightItemStateChanged
        // TODO add your handling code here:
        
        if(chkLockFortNight.isSelected()) {
            cmdLock.setEnabled(true);
        } else {
            cmdLock.setEnabled(false);
        }
    }//GEN-LAST:event_chkLockFortNightItemStateChanged
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdExiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExiActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExiActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if(EITLERPGLOBAL.getComboCode(cmbFortnightNo)==0) {
            JOptionPane.showMessageDialog(this,"PLEASE SELECT PROPER FORTNIGHT NO.");
            return;
        }
        String CompanyCity = "";
        String FromDate = "";
        String ToDate = "";
        String CompanyName = "";
        int FortNo = EITLERPGLOBAL.getComboCode(cmbFortnightNo);
        String Year = Integer.toString(EITLERPGLOBAL.getComboCode(cmbYear));
        FortNo--;
        String SQL = "SELECT * FROM D_INV_FORTNIGHT_HEADER WHERE FORTNIGHT_NO="+FortNo+" AND YEAR='"+Year+"' AND LOCKED=1";
        if(!data.IsRecordExist(SQL) && FortNo!=0) {
            JOptionPane.showMessageDialog(this,"PREVIOUS FORTNIGHT NO = "+FortNo+" WITH YEAR="+Year+" DOES NOT EXISTS OR LOCKED. \n YOU CAT NOT GENERATE THIS PERIOD FORTNIGHT." );
            return;
        }
        
        FortNo++;
        SQL = "SELECT * FROM D_INV_FORTNIGHT_HEADER WHERE FORTNIGHT_NO="+FortNo+" AND YEAR='"+Year+"' AND LOCKED=1";
        if(data.IsRecordExist(SQL)) {
            FromDate = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
            ToDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
            CompanyName = clsCompany.getCompanyName(EITLERPGLOBAL.gCompanyID);
            CompanyCity = clsCompany.getCityName(EITLERPGLOBAL.gCompanyID);
            lblFeedBack.setText("Generating Report. Please wait ...");
        } else {
            FromDate = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
            ToDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
            CompanyName = clsCompany.getCompanyName(EITLERPGLOBAL.gCompanyID);
            CompanyCity = clsCompany.getCityName(EITLERPGLOBAL.gCompanyID);
            lblFeedBack.setText("Generating Report. Please wait ...");
            clsFortnightStock objStock=new clsFortnightStock();
            objStock.GenerateFortnightReport(FortNo,FromDate,ToDate,Year);
        }
        previewReport(FortNo,Year,FromDate,ToDate);
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkLockFortNight;
    private javax.swing.JComboBox cmbFortnightNo;
    private javax.swing.JComboBox cmbYear;
    private javax.swing.JButton cmdExi;
    private javax.swing.JButton cmdLock;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblFeedBack;
    private javax.swing.JLabel lblFortnightNo;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblToDate;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        
        cmbFortnightNo.setModel(cmbFortnightNoModel);
        cmbFortnightNo.removeAllItems();
        ComboData cmbData=new ComboData();
        for(int i=0;i<=24;i++) {
            cmbData=new ComboData();
            cmbData.Text=Integer.toString(i);
            cmbData.Code=i;
            cmbFortnightNoModel.addElement(cmbData);
        }
        
        HashMap List=new HashMap();
        
        cmbYear.setModel(cmbYearModel);
        cmbYear.removeAllItems();
        
        List=clsFinYear.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID);
        
        ComboData theData=new ComboData();
        for(int i=1;i<=List.size();i++) {
            clsFinYear ObjYear =(clsFinYear) List.get(Integer.toString(i));
            
            theData=new ComboData();
            theData.Text=Integer.toString((int)ObjYear.getAttribute("YEAR_FROM").getVal());
            theData.Code=(int)ObjYear.getAttribute("YEAR_FROM").getVal();
            theData.strCode =Integer.toString((int)ObjYear.getAttribute("YEAR_FROM").getVal());
            cmbYearModel.addElement(theData);
        }
    }
    
    private void previewReport(int FortnightNo, String Year, String FromDate, String ToDate) {
        TReportWriter.SimpleDataProvider.TTable objReportData;
        objReportData = new TReportWriter.SimpleDataProvider.TTable();
        try {
            objReportData=new TReportWriter.SimpleDataProvider.TTable();
            objReportData.AddColumn("ITEM_ID");
            objReportData.AddColumn("ITEM_ID_GROUP");
            objReportData.AddColumn("ITEM_NAME");
            objReportData.AddColumn("ITEM_DESC");
            objReportData.AddColumn("UNIT_OF_MESUREMENT");
            objReportData.AddColumn("OPENING_STOCK_QTY");
            objReportData.AddColumn("GRN_QTY");
            objReportData.AddColumn("ISSUE_QTY");
            objReportData.AddColumn("STM_QTY");
            objReportData.AddColumn("CLOSING_STOCK_QTY");
            objReportData.AddColumn("MIR_QTY");
            objReportData.AddColumn("ISSUED_LAST_FORTNIGHT");
            objReportData.AddColumn("CUMULATIVE_ISSUE_QTY");
            objReportData.AddColumn("AVG_ISSUE_PER_MONTH");
            objReportData.AddColumn("LAST_YEAR_AVG_CONSUMPTION");
            objReportData.AddColumn("RECMN_MONTHLY_CONS");
            objReportData.AddColumn("RECMN_STOCK_LEVEL");
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            
            ResultSet rsData = data.getResult("SELECT * FROM D_INV_FORTNIGHT_HEADER WHERE FORTNIGHT_NO="+FortnightNo+" AND YEAR='"+Year+"' ORDER BY ITEM_ID");
            rsData.first();
            if(rsData.getRow() > 0) {
                while(!rsData.isAfterLast()) {
                    String ItemID = rsData.getString("ITEM_ID");
                    ResultSet rsDetailData = data.getResult("SELECT * FROM D_INV_FORTNIGHT_DETAIL WHERE FORTNIGHT_NO="+FortnightNo+" AND YEAR='"+Year+"' AND ITEM_ID='"+ItemID+"' ORDER BY SR_NO");
                    rsDetailData.first();
                    if(rsDetailData.getRow() > 0) {
                        while(!rsDetailData.isAfterLast()) {
                            
                            objRow=objReportData.newRow();
                            objRow.setValue("ITEM_ID", rsData.getString("ITEM_ID"));
                            objRow.setValue("ITEM_ID_GROUP", rsData.getString("ITEM_ID"));
                            objRow.setValue("ITEM_DESC", rsData.getString("ITEM_DESC"));
                            objRow.setValue("ITEM_NAME", rsData.getString("ITEM_NAME"));
                            objRow.setValue("UNIT_OF_MESUREMENT", rsData.getString("UNIT_OF_MESUREMENT"));
                            objRow.setValue("OPENING_STOCK_QTY", Double.toString(rsData.getDouble("OPENING_STOCK_QTY")));
                            objRow.setValue("GRN_QTY", Double.toString(rsData.getDouble("GRN_QTY")));
                            objRow.setValue("ISSUE_QTY", Double.toString(rsData.getDouble("ISSUE_QTY")));
                            objRow.setValue("STM_QTY", Double.toString(rsData.getDouble("STM_QTY")));
                            objRow.setValue("CLOSING_STOCK_QTY", Double.toString(rsData.getDouble("CLOSING_STOCK_QTY")));
                            objRow.setValue("MIR_QTY", Double.toString(rsData.getDouble("MIR_QTY")));
                            objRow.setValue("ISSUED_LAST_FORTNIGHT", Double.toString(rsData.getDouble("ISSUED_LAST_FORTNIGHT")));
                            objRow.setValue("CUMULATIVE_ISSUE_QTY", Double.toString(rsData.getDouble("CUMULATIVE_ISSUE_QTY")));
                            objRow.setValue("AVG_ISSUE_PER_MONTH", Double.toString(rsData.getDouble("AVG_ISSUE_PER_MONTH")));
                            objRow.setValue("LAST_YEAR_AVG_CONSUMPTION", Double.toString(rsData.getDouble("LAST_YEAR_AVG_CONSUMPTION")));
                            objRow.setValue("RECMN_MONTHLY_CONS", Double.toString(rsData.getDouble("RECMN_MONTHLY_CONS")));
                            objRow.setValue("RECMN_STOCK_LEVEL", Double.toString(rsData.getDouble("RECMN_STOCK_LEVEL")));
                            objRow.setValue("PO_NO",rsDetailData.getString("PO_NO"));
                            objRow.setValue("PO_DATE",rsDetailData.getString("PO_DATE"));
                            objRow.setValue("PO_QTY",Double.toString(rsDetailData.getDouble("PO_QTY")));
                            objRow.setValue("DELIVERY_DATE",rsDetailData.getString("DELIVERY_DATE"));
                            objRow.setValue("BAL_QTY",Double.toString(rsDetailData.getDouble("BAL_QTY")));
                            rsDetailData.next();
                            objReportData.AddRow(objRow);
                        }
                    } else {
                        objRow=objReportData.newRow();
                        objRow.setValue("ITEM_ID", rsData.getString("ITEM_ID"));
                        objRow.setValue("ITEM_ID_GROUP", rsData.getString("ITEM_ID"));
                        objRow.setValue("ITEM_DESC", rsData.getString("ITEM_DESC"));
                        objRow.setValue("UNIT_OF_MESUREMENT", rsData.getString("UNIT_OF_MESUREMENT"));
                        objRow.setValue("OPENING_STOCK_QTY", Double.toString(rsData.getDouble("OPENING_STOCK_QTY")));
                        objRow.setValue("GRN_QTY", Double.toString(rsData.getDouble("GRN_QTY")));
                        objRow.setValue("ISSUE_QTY", Double.toString(rsData.getDouble("ISSUE_QTY")));
                        objRow.setValue("STM_QTY", Double.toString(rsData.getDouble("STM_QTY")));
                        objRow.setValue("CLOSING_STOCK_QTY", Double.toString(rsData.getDouble("CLOSING_STOCK_QTY")));
                        objRow.setValue("MIR_QTY", Double.toString(rsData.getDouble("MIR_QTY")));
                        objRow.setValue("ISSUED_LAST_FORTNIGHT", Double.toString(rsData.getDouble("ISSUED_LAST_FORTNIGHT")));
                        objRow.setValue("CUMULATIVE_ISSUE_QTY", Double.toString(rsData.getDouble("CUMULATIVE_ISSUE_QTY")));
                        objRow.setValue("AVG_ISSUE_PER_MONTH", Double.toString(rsData.getDouble("AVG_ISSUE_PER_MONTH")));
                        objRow.setValue("LAST_YEAR_AVG_CONSUMPTION", Double.toString(rsData.getDouble("LAST_YEAR_AVG_CONSUMPTION")));
                        objRow.setValue("RECMN_MONTHLY_CONS", Double.toString(rsData.getDouble("RECMN_MONTHLY_CONS")));
                        objRow.setValue("RECMN_STOCK_LEVEL", Double.toString(rsData.getDouble("RECMN_STOCK_LEVEL")));
                        objRow.setValue("PO_NO","");
                        objRow.setValue("PO_DATE","0000-00-00");
                        objRow.setValue("PO_QTY","");
                        objRow.setValue("DELIVERY_DATE","0000-00-00");
                        objRow.setValue("BAL_QTY","");
                        objReportData.AddRow(objRow);
                    }
                    rsData.next();
                }
            }
            
            HashMap Parameters=new HashMap();
            Parameters.put("FROM_DATE",EITLERPGLOBAL.formatDate(FromDate));
            Parameters.put("FIN_YEAR_FROM_DATE",EITLERPGLOBAL.formatDate(EITLERPGLOBAL.getFinYearStartDate(FromDate)));
            Parameters.put("TO_DATE",EITLERPGLOBAL.formatDate(ToDate));
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptFortnightStock.rpt",Parameters,objReportData);
        } catch(Exception e) {
        }
    }
}


