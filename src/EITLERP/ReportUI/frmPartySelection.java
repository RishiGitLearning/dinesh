/*
 * frmPartySelection.java
 *
 * Created on November 4, 2006, 11:34 AM
 */

package EITLERP.ReportUI;

/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Purchase.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.Utils.*;
import java.net.*;


public class frmPartySelection extends javax.swing.JApplet {
    
    public String InquiryNo = "";
    
    private EITLTableModel DataModel;
    private EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
    private JDialog aDialog;
    /** Initializes the applet frmPartySelection */
    public frmPartySelection() {
        initComponents();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        lblInquiryNo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdEMail = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        cmdAddressBook = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" SELECT THE PARTIES");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(-1, 0, 804, 25);

        lblInquiryNo.setText("Inquiry No.  :");
        getContentPane().add(lblInquiryNo);
        lblInquiryNo.setBounds(7, 32, 190, 15);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(7, 60, 490, 160);

        cmdEMail.setText("E Mail");
        cmdEMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEMailActionPerformed(evt);
            }
        });

        getContentPane().add(cmdEMail);
        cmdEMail.setBounds(300, 233, 90, 25);

        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExit);
        cmdExit.setBounds(401, 232, 90, 25);

        cmdAddressBook.setText("Address Book");
        cmdAddressBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddressBookActionPerformed(evt);
            }
        });

        getContentPane().add(cmdAddressBook);
        cmdAddressBook.setBounds(9, 239, 150, 25);

    }//GEN-END:initComponents
    
    private void cmdAddressBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddressBookActionPerformed
        // TODO add your handling code here:
        try {
            AppletFrame.startApplet("EITLERP.frmAddressBook","EITL ERP");
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_cmdAddressBookActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        aDialog.dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdEMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEMailActionPerformed
        // TODO add your handling code here:
        EMail();
    }//GEN-LAST:event_cmdEMailActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton cmdAddressBook;
    private javax.swing.JButton cmdEMail;
    private javax.swing.JButton cmdExit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInquiryNo;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
    
    private void EMail() {
        try {
            
            data.Execute("UPDATE D_PUR_INQUIRY_SUPP SET SELECTED=0 WHERE INQUIRY_NO='"+InquiryNo+"'");
            
            for(int i=0;i<Table.getRowCount();i++) {
                
                String SuppID=(String)Table.getValueAt(i,3);
                
                if(DataModel.getBoolValueByVariable("SELECTED",i)) {
                    data.Execute("UPDATE D_PUR_INQUIRY_SUPP SET SELECTED=1 WHERE INQUIRY_NO='"+InquiryNo+"' AND SUPP_ID="+SuppID);
                }
            }
            
            
            String FileName="doc"+"18"+this.InquiryNo+".pdf";
            frmSendMail ObjSend=new frmSendMail();
            ObjSend.ModuleID=18;
            ObjSend.SentBy=EITLERPGLOBAL.gNewUserID;
            ObjSend.MailDocNo=this.InquiryNo;
            ObjSend.theFile=FileName;
            
            ObjSend.colRecList.clear();
            for(int i=0;i<Table.getRowCount();i++) {
                int PartyID=Integer.parseInt((String)Table.getValueAt(i,3));
                String EMail=(String)Table.getValueAt(i, 2);
                
                if(DataModel.getBoolValueByVariable("SELECTED",i)) {
                    ObjSend.colRecList.put(Integer.toString(ObjSend.colRecList.size()+1),EMail);
                }
            }
            
            try {
                //Create the pdf File
                URL MailDocument=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptInquiryMail.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&DocNo="+this.InquiryNo+"&File="+FileName);
                MailDocument.openConnection();
                MailDocument.openStream();
            }
            catch(Exception e) {
                
            }
            
            ObjSend.ShowWindow();
            aDialog.dispose();
            
            
        }
        catch(Exception e) {
            
        }
    }
    
    private void GenerateGrid() {
        clsInquiry ObjInquiry=new clsInquiry();
        
        ObjInquiry=(clsInquiry)(new clsInquiry()).getObject(EITLERPGLOBAL.gCompanyID, this.InquiryNo);
        
        
        try {
            
            FormatGrid();
            
            for(int i=1;i<=ObjInquiry.colSupp.size();i++) {
                //Insert New Row
                Object[] rowData=new Object[4];
                
                int NewRow=Table.getRowCount()-1;
                
                clsInquirySupp ObjSupp=(clsInquirySupp) ObjInquiry.colSupp.get(Integer.toString(i));
                
                int PartyID=Integer.parseInt((String)ObjSupp.getAttribute("SUPP_ID").getObj());
                
                rowData[0]=Boolean.valueOf(true);
                rowData[1]=clsParty.getPartyNameByPartyID(EITLERPGLOBAL.gCompanyID, PartyID);
                rowData[2]=clsParty.getPartyEMail(EITLERPGLOBAL.gCompanyID,PartyID);
                rowData[3]=Integer.toString(PartyID);
                
                DataModel.addRow(rowData);
            }
        }
        catch(Exception e) {
            
        }
        
    }
    
    private void FormatGrid() {
        
        try {
            
            DataModel=new EITLTableModel();
            
            Table.removeAll();
            Table.setModel(DataModel);
            
            //Set the table Readonly
            DataModel.TableReadOnly(false);
            
            
            DataModel.addColumn("Select");
            DataModel.addColumn("Party Name");
            DataModel.addColumn("E Mail");
            DataModel.addColumn("Party ID");
            
            DataModel.SetVariable(0,"SELECTED");
            DataModel.SetVariable(1,"PARTY_NAME");
            DataModel.SetVariable(2,"EMAIL");
            DataModel.SetVariable(3,"PARTY_ID");
            
            
            DataModel.SetReadOnly(1);
            
            int CheckCol=0;
            
            Renderer.setCustomComponent(CheckCol,"CheckBox");
            JCheckBox aCheckBox=new JCheckBox();
            aCheckBox.setBackground(Color.WHITE);
            Table.getColumnModel().getColumn(CheckCol).setCellEditor(new DefaultCellEditor(aCheckBox));
            Table.getColumnModel().getColumn(CheckCol).setCellRenderer(Renderer);
        }
        catch(Exception e) {
            
        }
    }
    
    public boolean ShowDialog() {
        try {
            
            GenerateGrid();
            
            setSize(520,310);
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"List",false);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(false);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            aDialog.show();
        }
        catch(Exception e) {
        }
        return true;
    }
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
}