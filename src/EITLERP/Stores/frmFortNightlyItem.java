/*
 * frmItemCriteria.java
 *
 * Created on May 28, 2005, 3:04 PM
 */

package EITLERP.Stores;

/**
 *
 * @author  root
 */
import java.util.*;
import javax.swing.*;
import java.awt.*;
import EITLERP.*;

public class frmFortNightlyItem extends javax.swing.JApplet {
    
    
    private EITLComboModel cmbDeptModel=new EITLComboModel();
    private EITLComboModel cmbTypeModel=new EITLComboModel();
    
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
    private clsFortNightlyItem ObjFortNightlyItem = new clsFortNightlyItem();
    private boolean EditPressed = false;
    //private boolean SavePressed = true;
    
    int currentRecord = -1;
    /** Initializes the applet frmItemCriteria */
    public void init() {
        initComponents();
        //GenerateCombo();
        GenerateGrid();
        setSize(675, 560);
        txtItemCode.requestFocus();
        setFields();
        SetMenuForRights();
        lblCompanyName.setText(clsCompany.getCompanyName(EITLERPGLOBAL.gCompanyID));
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblItemCode = new javax.swing.JLabel();
        txtItemDescription = new javax.swing.JTextField();
        txtItemCode = new javax.swing.JTextField();
        lblItemName = new javax.swing.JLabel();
        lblItemCode1 = new javax.swing.JLabel();
        lblRecConsumption = new javax.swing.JLabel();
        txtRecConsumption = new javax.swing.JTextField();
        lblUnit = new javax.swing.JLabel();
        txtUnit = new javax.swing.JTextField();
        lblRecStockLevel = new javax.swing.JLabel();
        txtRecStockLevel = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        lblCompanyName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdAdd = new javax.swing.JButton();
        cmdRemove = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        cmdEdit = new javax.swing.JButton();
        cmdClear = new javax.swing.JButton();
        cmdGo = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("FORTNIGHTLY ITEM DETAILS");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(7, 10, 322, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 2, 660, 35);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        lblItemCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblItemCode.setText("Item Code :");
        jPanel2.add(lblItemCode);
        lblItemCode.setBounds(11, 12, 74, 15);

        txtItemDescription.setNextFocusableComponent(txtRecConsumption);
        txtItemDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtItemDescriptionFocusGained(evt);
            }
        });

        jPanel2.add(txtItemDescription);
        txtItemDescription.setBounds(166, 37, 467, 21);

        txtItemCode.setNextFocusableComponent(txtItemDescription);
        txtItemCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtItemCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtItemCodeFocusLost(evt);
            }
        });
        txtItemCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemCodeKeyPressed(evt);
            }
        });

        jPanel2.add(txtItemCode);
        txtItemCode.setBounds(89, 9, 165, 21);

        lblItemName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblItemName.setText("Item Name :");
        jPanel2.add(lblItemName);
        lblItemName.setBounds(260, 12, 78, 15);

        lblItemCode1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblItemCode1.setText("Item Extra Description :");
        jPanel2.add(lblItemCode1);
        lblItemCode1.setBounds(8, 40, 152, 15);

        lblRecConsumption.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRecConsumption.setText("Recommened Monthly Consumption :");
        jPanel2.add(lblRecConsumption);
        lblRecConsumption.setBounds(7, 67, 236, 15);

        txtRecConsumption.setNextFocusableComponent(txtRecStockLevel);
        txtRecConsumption.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRecConsumptionFocusGained(evt);
            }
        });

        jPanel2.add(txtRecConsumption);
        txtRecConsumption.setBounds(247, 65, 138, 21);

        lblUnit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblUnit.setText("Units of Mesurement :");
        jPanel2.add(lblUnit);
        lblUnit.setBounds(389, 67, 153, 15);

        txtUnit.setEditable(false);
        jPanel2.add(txtUnit);
        txtUnit.setBounds(549, 65, 79, 21);

        lblRecStockLevel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRecStockLevel.setText("Recommened Stock Level :");
        jPanel2.add(lblRecStockLevel);
        lblRecStockLevel.setBounds(9, 94, 235, 15);

        txtRecStockLevel.setNextFocusableComponent(cmdAdd);
        txtRecStockLevel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRecStockLevelFocusGained(evt);
            }
        });

        jPanel2.add(txtRecStockLevel);
        txtRecStockLevel.setBounds(248, 92, 137, 21);

        txtItemName.setEditable(false);
        jPanel2.add(txtItemName);
        txtItemName.setBounds(343, 10, 289, 21);

        lblCompanyName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCompanyName.setText("...");
        jPanel2.add(lblCompanyName);
        lblCompanyName.setBounds(393, 96, 243, 15);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(7, 41, 644, 119);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(9, 195, 643, 307);

        cmdAdd.setText("Add");
        cmdAdd.setNextFocusableComponent(cmdEdit);
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        getContentPane().add(cmdAdd);
        cmdAdd.setBounds(292, 165, 85, 25);

        cmdRemove.setText("Remove");
        cmdRemove.setNextFocusableComponent(cmdSave);
        cmdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveActionPerformed(evt);
            }
        });

        getContentPane().add(cmdRemove);
        cmdRemove.setBounds(474, 165, 85, 25);

        cmdSave.setText("Save");
        cmdSave.setNextFocusableComponent(txtItemCode);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSave);
        cmdSave.setBounds(564, 165, 85, 25);

        lblMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMessage.setText("...");
        lblMessage.setBorder(new javax.swing.border.EtchedBorder());
        getContentPane().add(lblMessage);
        lblMessage.setBounds(11, 509, 537, 20);

        cmdEdit.setText("Edit");
        cmdEdit.setNextFocusableComponent(cmdRemove);
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        getContentPane().add(cmdEdit);
        cmdEdit.setBounds(383, 165, 85, 25);

        cmdClear.setText("Clear");
        cmdClear.setNextFocusableComponent(cmdEdit);
        cmdClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearActionPerformed(evt);
            }
        });

        getContentPane().add(cmdClear);
        cmdClear.setBounds(202, 165, 85, 25);

        cmdGo.setText("Go");
        cmdGo.setToolTipText("Press Go Button to search key");
        cmdGo.setNextFocusableComponent(cmdEdit);
        cmdGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGoActionPerformed(evt);
            }
        });

        getContentPane().add(cmdGo);
        cmdGo.setBounds(8, 165, 57, 25);

        txtSearch.setToolTipText("Enter search key");
        getContentPane().add(txtSearch);
        txtSearch.setBounds(71, 166, 122, 23);

    }//GEN-END:initComponents
    
    private void cmdGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGoActionPerformed
        // TODO add your handling code here:
        searchWithin(' ');
    }//GEN-LAST:event_cmdGoActionPerformed
    
    private void cmdClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearActionPerformed
        // TODO add your handling code here:
        setFields();
    }//GEN-LAST:event_cmdClearActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        if(Table.getSelectedRow()>=0) {
            cmdAdd.setEnabled(false);
            cmdEdit.setEnabled(false);
            cmdRemove.setEnabled(false);
            cmdSave.setText("Done");
            currentRecord = Table.getSelectedRow();
            txtItemCode.setText(Table.getValueAt(currentRecord,2).toString());
            txtItemName.setText(Table.getValueAt(currentRecord,3).toString());
            txtItemDescription.setText(Table.getValueAt(currentRecord,4).toString());
            txtUnit.setText(Table.getValueAt(currentRecord,5).toString());
            txtRecConsumption.setText(Table.getValueAt(currentRecord,6).toString());
            txtRecStockLevel.setText(Table.getValueAt(currentRecord,7).toString());
            //SavePressed=false;
            
        } else {
            JOptionPane.showMessageDialog(null,"No row selected..");
        }
        
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void txtItemCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemCodeFocusLost
        // TODO add your handling code here:
        String lItemID = txtItemCode.getText().trim();
        String SQL = "SELECT * FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+lItemID+"' AND APPROVED=1 AND CANCELLED=0";
        if(!lItemID.trim().equals("") && data.IsRecordExist(SQL)){
            txtItemName.setText(data.getStringValueFromDB("SELECT ITEM_DESCRIPTION FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+lItemID+"'"));
            long ParaCode = data.getLongValueFromDB("SELECT UNIT FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+lItemID+"'");
            String UnitName = data.getStringValueFromDB("SELECT D_COM_PARAMETER_MAST.DESC FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND PARA_CODE="+ParaCode);
            txtUnit.setText(UnitName);
        } else {
            txtItemName.setText("");
            txtUnit.setText("");
        }
    }//GEN-LAST:event_txtItemCodeFocusLost
    
    private void txtItemCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemCodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT ITEM_ID,ITEM_DESCRIPTION FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1 AND CANCELLED=0 ORDER BY ITEM_ID";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtItemCode.setText(aList.ReturnVal);
                txtItemName.setText(data.getStringValueFromDB("SELECT ITEM_DESCRIPTION FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+aList.ReturnVal+"'"));
                long ParaCode = data.getLongValueFromDB("SELECT UNIT FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+aList.ReturnVal+"'");
                String UnitName = data.getStringValueFromDB("SELECT D_COM_PARAMETER_MAST.DESC FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND PARA_CODE="+ParaCode);
                txtUnit.setText(UnitName);
            }
        }
    }//GEN-LAST:event_txtItemCodeKeyPressed
    
    private void txtRecStockLevelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecStockLevelFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Recommened Stock Level.");
    }//GEN-LAST:event_txtRecStockLevelFocusGained
    
    private void txtRecConsumptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecConsumptionFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Insert Recommended Monthly Consumption.");
    }//GEN-LAST:event_txtRecConsumptionFocusGained
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        if(cmdSave.getText().trim().equals("Done")) {
            Table.setValueAt(txtItemCode.getText().trim(),currentRecord,2);
            Table.setValueAt(txtItemName.getText().trim(),currentRecord,3);
            Table.setValueAt(txtItemDescription.getText().trim(),currentRecord,4);
            Table.setValueAt(txtUnit.getText().trim(),currentRecord,5);
            Table.setValueAt(txtRecConsumption.getText().trim(),currentRecord,6);
            Table.setValueAt(txtRecStockLevel.getText().trim(),currentRecord,7);
            cmdAdd.setEnabled(true);
            cmdEdit.setEnabled(true);
            cmdRemove.setEnabled(true);
            cmdSave.setText("Save");
            currentRecord=-1;
            setFields();
            //SavePressed=false;
        } else {
            ObjFortNightlyItem.ItemRecord.clear();
            for(int i=0 ; i<Table.getRowCount();i++) {
                clsFortNightlyItem ObjItem = new clsFortNightlyItem();
                System.out.println(Table.getValueAt(i,0).toString() + " " + Table.getValueAt(i,1).toString() +" " + Table.getValueAt(i,2).toString());
                ObjItem.setAttribute("SR_NO",Integer.parseInt(Table.getValueAt(i,0).toString()));
                ObjItem.setAttribute("COMPANY_ID", Integer.parseInt(Table.getValueAt(i,1).toString()));
                ObjItem.setAttribute("ITEM_ID",Table.getValueAt(i,2).toString());
                ObjItem.setAttribute("ITEM_NAME",Table.getValueAt(i,3).toString());
                ObjItem.setAttribute("ITEM_DESC",Table.getValueAt(i,4).toString());
                ObjItem.setAttribute("UNIT",Table.getValueAt(i,5).toString());
                ObjItem.setAttribute("RECMN_MONTHLY_CONS",Double.parseDouble(Table.getValueAt(i,6).toString()));
                ObjItem.setAttribute("RECMN_STOCK_LEVEL",Double.parseDouble(Table.getValueAt(i,7).toString()));
                ObjFortNightlyItem.ItemRecord.put(Integer.toString(i+1), ObjItem);
                //SavePressed=true;
            }
            
            if(!ObjFortNightlyItem.Insert()) {
                JOptionPane.showMessageDialog(null,"Error :: " + ObjFortNightlyItem.LastError);
            }
            setFields();
            FormatGrid();
            GenerateGrid();
        }
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void txtItemDescriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemDescriptionFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Insert Item Extra Description");
    }//GEN-LAST:event_txtItemDescriptionFocusGained
    
    private void txtItemCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemCodeFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Press F1 to insert ItemCode.");
    }//GEN-LAST:event_txtItemCodeFocusGained
    
    private void cmdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveActionPerformed
        // TODO add your handling code here:
        if(Table.getSelectedRow()>=0 && Table.getRowCount()>0) {
            if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete selected item ?","Confirmation",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
                DataModel.removeRow(Table.getSelectedRow());
                updateSrNo();
                //SavePressed=false;
            }
        } else {
            JOptionPane.showMessageDialog(null,"No Row selected...");
        }
    }//GEN-LAST:event_cmdRemoveActionPerformed
    
    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        // TODO add your handling code here:
        if(!Validate()) {
            return;
        }
        int SrNo = DataModel.getRowCount()+1;
        Object[] rowData=new Object[9];
        rowData[0]=Integer.toString(SrNo);
        rowData[1]=Integer.toString(EITLERPGLOBAL.gCompanyID);
        rowData[2]=txtItemCode.getText().trim();
        rowData[3]=txtItemName.getText().trim();
        rowData[4]=txtItemDescription.getText().trim();
        rowData[5]=txtUnit.getText().trim();
        rowData[6]=txtRecConsumption.getText().trim();
        rowData[7]=txtRecStockLevel.getText().trim();
        DataModel.addRow(rowData);
        setFields();
        txtItemCode.requestFocus();
        //SavePressed=false;
    }//GEN-LAST:event_cmdAddActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdClear;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdGo;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JButton cmdSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblItemCode;
    private javax.swing.JLabel lblItemCode1;
    private javax.swing.JLabel lblItemName;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblRecConsumption;
    private javax.swing.JLabel lblRecStockLevel;
    private javax.swing.JLabel lblUnit;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemDescription;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtRecConsumption;
    private javax.swing.JTextField txtRecStockLevel;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
    
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        
        Table.removeAll();
        
        Table.setModel(DataModel);
        
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        //Table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        DataModel.addColumn("Sr. No.");
        DataModel.addColumn("Company ID");
        DataModel.addColumn("Item Code");
        DataModel.addColumn("Item Name");
        DataModel.addColumn("Item Extra Description");
        DataModel.addColumn("Unit");
        DataModel.addColumn("Recmn. Monthly Cons.");
        DataModel.addColumn("Recmn. Stock Level");
        Table.getColumnModel().getColumn(0).setPreferredWidth(50);
        Table.getColumnModel().getColumn(1).setPreferredWidth(80);
        Table.getColumnModel().getColumn(2).setPreferredWidth(80);
        Table.getColumnModel().getColumn(3).setPreferredWidth(200);
        Table.getColumnModel().getColumn(4).setPreferredWidth(200);
        Table.getColumnModel().getColumn(5).setPreferredWidth(40);
        Table.getColumnModel().getColumn(6).setPreferredWidth(100);
        Table.getColumnModel().getColumn(7).setPreferredWidth(100);
        DataModel.SetNumeric(1,true);
        DataModel.TableReadOnly(true);
        
        Renderer = new EITLTableCellRenderer();
        for(int j=0;j<Table.getColumnCount();j++) {
            Table.getColumnModel().getColumn(j).setCellRenderer(Renderer);
        }
    }
    
    private void setFields() {
        txtItemCode.setText("");
        txtItemName.setText("");
        txtItemDescription.setText("");
        txtRecConsumption.setText("");
        txtRecStockLevel.setText("");
        txtUnit.setText("");
    }
    
    private void GenerateGrid() {
        HashMap List=new HashMap();
        FormatGrid();
        List = ObjFortNightlyItem.getFortNightlyItemsList();
        for(int i=1;i<=List.size();i++) {
            Object[] rowData=new Object[9];
            clsFortNightlyItem ObjItem=(clsFortNightlyItem)List.get(Integer.toString(i));
            rowData[0]=Integer.toString(ObjItem.getAttribute("SR_NO").getInt());
            rowData[1]=Integer.toString(ObjItem.getAttribute("COMPANY_ID").getInt());
            rowData[2]=ObjItem.getAttribute("ITEM_ID").getString();
            rowData[3]=ObjItem.getAttribute("ITEM_NAME").getString();
            rowData[4]=ObjItem.getAttribute("ITEM_DESC").getString();
            rowData[5]=ObjItem.getAttribute("UNIT").getString();
            rowData[6]=Double.toString(ObjItem.getAttribute("RECMN_MONTHLY_CONS").getDouble());
            rowData[7]=Double.toString(ObjItem.getAttribute("RECMN_STOCK_LEVEL").getDouble());
            DataModel.addRow(rowData);
        }
    }
    
    private boolean Validate() {
        if(txtItemCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Insert Item Code.");
            return false;
        } else if(!data.IsRecordExist("SELECT * FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+txtItemCode.getText().trim()+"' AND APPROVED=1 AND CANCELLED=0")){
            JOptionPane.showMessageDialog(null,"Insert valid Item Code.");
            return false;
        }
        
        if(txtItemDescription.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Insert Item Description.");
            return false;
        }
        
        if(txtRecConsumption.getText().trim().equals("") || Double.parseDouble(txtRecConsumption.getText().trim())<=0) {
            JOptionPane.showMessageDialog(null,"Insert proper value in recommended monthly consumption field.");
            return false;
        }
        
        if(txtRecStockLevel.getText().trim().equals("") || Double.parseDouble(txtRecStockLevel.getText().trim())<=0) {
            JOptionPane.showMessageDialog(null,"Insert proper value in recommended monthly consumption field.");
            return false;
        }
        return true;
    }
    
    private void updateSrNo() {
        for(int i=0 ; i<Table.getRowCount();i++) {
            System.out.println(Table.getValueAt(i, 0).toString());
            Table.setValueAt(Integer.toString(i+1), i, 0);
        }
    }
    
    private void searchWithin(char recentKey) {
        
        try {
            
            Renderer.removeBackColors();
            
            Table.repaint();
            
            String searchString=txtSearch.getText().trim();
            
            if(!searchString.trim().equals("")) {
                
                
                if(recentKey!=' ') {
                    searchString=searchString+recentKey;
                }
                
                searchString=searchString.toLowerCase();
                
                int currentCol=Table.getSelectedColumn();
                
                for(int i=0;i<=DataModel.getRowCount()-1;i++) {
                    
                    if(DataModel.getValueAt(i,currentCol).toString().toLowerCase().trim().indexOf(searchString)!=-1) {
                        
                        DataModel.changeSelection(i, currentCol, false,false);
                        
                        for(int j=0;j<DataModel.getColumnCount();j++) {
                            Renderer.setBackColor(i, j, Color.YELLOW);
                        }
                        
                    }
                }
            }
        }
        catch(Exception e) {
        }
    }
    
    private void SetMenuForRights() {
        // --- Add Rights --
        int AddRights = 0;
        int EditRights = 0;
        int RemoveRights = 0;
        int SaveRights = 0;
        int MenuID = 0;
        if(EITLERPGLOBAL.gCompanyID==2) {
            MenuID = 1164;
            AddRights = 11641;
            EditRights = 11642;
            RemoveRights = 11643;
            SaveRights = 11644;
        } else if(EITLERPGLOBAL.gCompanyID==3) {
            MenuID = 1157;
            AddRights = 11571;
            EditRights = 11572;
            RemoveRights = 11573;
            SaveRights = 11574;
        }
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, MenuID,AddRights)) {
            cmdAdd.setEnabled(true);
        } else {
            cmdAdd.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, MenuID,EditRights)) {
            cmdEdit.setEnabled(true);
        } else {
            cmdEdit.setEnabled(false);
        }
        
        
        // --- Remove Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, MenuID,RemoveRights)) {
            cmdRemove.setEnabled(true);
        } else {
            cmdRemove.setEnabled(false);
        }
        
        // --- Save Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, MenuID,SaveRights)) {
            cmdSave.setEnabled(true);
        } else {
            cmdSave.setEnabled(false);
        }
    }
}
