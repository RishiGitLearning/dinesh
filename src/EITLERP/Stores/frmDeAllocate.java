/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */

package EITLERP.Stores;

/**
 *
 * @author  nhpatel
 */
/*<APPLET CODE=frmMR.class HEIGHT=550 WIDTH=665></APPLET>*/

import javax.swing.*;
import java.awt.*;
import EITLERP.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import javax.swing.text.*;
import java.awt.event.*;
import java.net.*;
import EITLERP.Utils.*;

public class frmDeAllocate extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsDeAllocation ObjDeAlloc;
    
    private boolean HistoryView=false;
    private String theDocNo="";
    private EITLTableModel DataModelHS;
    
    private boolean DoNotEvaluate=false;
    
    
    /** Creates new form frmTemplate */
    public void init() {
        System.gc();
        setSize(665,550);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        
        ObjDeAlloc=new clsDeAllocation();
        
        SetMenuForRights();
        
        if(getName().equals("Link")) {
            
        }
        else {
            if(ObjDeAlloc.LoadData(EITLERPGLOBAL.gCompanyID)) {
                ObjDeAlloc.MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while loading data. Error is "+ObjDeAlloc.LastError);
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        Tab = new javax.swing.JTabbedPane();
        Tab1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtItemID = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAllocationID = new javax.swing.JTextField();
        cmdSelect = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtDept = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAllocatedQty = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtIssuedQty = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtDeAllocatedQty = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtDocDate = new javax.swing.JTextField();
        lblRevNo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        lblCreatedBy = new javax.swing.JLabel();
        lblCreatedDate = new javax.swing.JLabel();
        lblModifiedBy = new javax.swing.JLabel();
        lblModifiedDate = new javax.swing.JLabel();
        lblDocumentHistory = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableHS = new javax.swing.JTable();
        cmdViewHistory = new javax.swing.JButton();
        cmdNormalView = new javax.swing.JButton();
        cmdPreviewA = new javax.swing.JButton();
        
        
        getContentPane().setLayout(null);
        
        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdTop);
        
        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdBack);
        
        cmdNext.setToolTipText("Next record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdNext);
        
        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdLast);
        
        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdNew);
        
        cmdEdit.setToolTipText("Edit Record");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdEdit);
        
        cmdDelete.setToolTipText("Delete Record");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdDelete);
        
        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdSave);
        
        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdCancel);
        
        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdFilter);
        
        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdPreview);
        
        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdPrint);
        
        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });
        
        ToolBar.add(cmdExit);
        
        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);
        
        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" STOCK DEALLOCATION");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 666, 25);
        
        Tab1.setLayout(null);
        
        Tab1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Tab1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Tab1FocusGained(evt);
            }
        });
        Tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tab1MouseClicked(evt);
            }
        });
        
        jLabel2.setText("De Allocation Doc No.");
        Tab1.add(jLabel2);
        jLabel2.setBounds(18, 16, 145, 15);
        
        txtDocNo.setBackground(new java.awt.Color(255, 255, 204));
        txtDocNo.setEnabled(false);
        Tab1.add(txtDocNo);
        txtDocNo.setBounds(161, 11, 153, 22);
        
        jPanel2.setLayout(null);
        
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel4.setText("Item Code");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(10, 11, 74, 15);
        
        txtItemID.setEnabled(false);
        txtItemID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtItemIDFocusLost(evt);
            }
        });
        txtItemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemIDKeyPressed(evt);
            }
        });
        
        jPanel2.add(txtItemID);
        txtItemID.setBounds(85, 11, 127, 19);
        
        txtItemName.setEnabled(false);
        jPanel2.add(txtItemName);
        txtItemName.setBounds(86, 34, 482, 19);
        
        jLabel5.setText("Select the allocation to free ");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(9, 69, 189, 15);
        
        txtAllocationID.setEnabled(false);
        jPanel2.add(txtAllocationID);
        txtAllocationID.setBounds(187, 68, 120, 21);
        
        cmdSelect.setText("Select");
        cmdSelect.setEnabled(false);
        cmdSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectActionPerformed(evt);
            }
        });
        
        jPanel2.add(cmdSelect);
        cmdSelect.setBounds(309, 68, 88, 22);
        
        jLabel6.setText("Department");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(22, 111, 93, 15);
        
        txtDept.setEnabled(false);
        jPanel2.add(txtDept);
        txtDept.setBounds(130, 108, 178, 21);
        
        jLabel7.setText("Allocation Qty");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(22, 139, 102, 15);
        
        txtAllocatedQty.setEnabled(false);
        jPanel2.add(txtAllocatedQty);
        txtAllocatedQty.setBounds(130, 136, 110, 21);
        
        jLabel8.setText("Issued Qty");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(22, 168, 102, 15);
        
        txtIssuedQty.setEnabled(false);
        jPanel2.add(txtIssuedQty);
        txtIssuedQty.setBounds(130, 165, 110, 21);
        
        jLabel9.setText("Total Allocated");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(22, 209, 102, 15);
        
        txtTotal.setEnabled(false);
        jPanel2.add(txtTotal);
        txtTotal.setBounds(130, 206, 110, 21);
        
        Tab1.add(jPanel2);
        jPanel2.setBounds(13, 47, 597, 253);
        
        txtDeAllocatedQty.setEnabled(false);
        Tab1.add(txtDeAllocatedQty);
        txtDeAllocatedQty.setBounds(139, 308, 105, 22);
        
        jLabel3.setText("De Allocate Qty.");
        Tab1.add(jLabel3);
        jLabel3.setBounds(20, 311, 116, 15);
        
        jLabel1.setText("Date");
        Tab1.add(jLabel1);
        jLabel1.setBounds(393, 15, 29, 15);
        
        txtDocDate.setEnabled(false);
        Tab1.add(txtDocDate);
        txtDocDate.setBounds(443, 13, 114, 20);
        
        lblRevNo.setText("...");
        Tab1.add(lblRevNo);
        lblRevNo.setBounds(318, 14, 41, 15);
        
        Tab.addTab("De Allocation Information", Tab1);
        
        jPanel1.setLayout(null);
        
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(null);
        
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel38.setText("Record Created By");
        jPanel3.add(jLabel38);
        jLabel38.setBounds(7, 10, 128, 15);
        
        jLabel39.setText("Created Date");
        jPanel3.add(jLabel39);
        jLabel39.setBounds(9, 66, 93, 15);
        
        jLabel40.setText("Last Modified By");
        jPanel3.add(jLabel40);
        jLabel40.setBounds(9, 116, 110, 15);
        
        jLabel41.setText("Modified Date");
        jPanel3.add(jLabel41);
        jLabel41.setBounds(7, 158, 93, 15);
        
        lblCreatedBy.setForeground(new java.awt.Color(51, 51, 255));
        lblCreatedBy.setText("...");
        jPanel3.add(lblCreatedBy);
        lblCreatedBy.setBounds(10, 31, 292, 15);
        
        lblCreatedDate.setForeground(new java.awt.Color(51, 51, 255));
        lblCreatedDate.setText("...");
        jPanel3.add(lblCreatedDate);
        lblCreatedDate.setBounds(10, 90, 169, 15);
        
        lblModifiedBy.setForeground(new java.awt.Color(51, 51, 255));
        lblModifiedBy.setText("...");
        jPanel3.add(lblModifiedBy);
        lblModifiedBy.setBounds(8, 138, 293, 15);
        
        lblModifiedDate.setForeground(new java.awt.Color(51, 51, 255));
        lblModifiedDate.setText("...");
        jPanel3.add(lblModifiedDate);
        lblModifiedDate.setBounds(6, 178, 169, 15);
        
        jPanel1.add(jPanel3);
        jPanel3.setBounds(16, 181, 625, 200);
        
        lblDocumentHistory.setText("Document Update History");
        jPanel1.add(lblDocumentHistory);
        lblDocumentHistory.setBounds(10, 4, 182, 15);
        
        TableHS.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
        ));
        jScrollPane3.setViewportView(TableHS);
        
        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(15, 22, 476, 148);
        
        cmdViewHistory.setText("View Revisions");
        jPanel1.add(cmdViewHistory);
        cmdViewHistory.setBounds(501, 23, 132, 21);
        
        cmdNormalView.setText("Back to Normal");
        jPanel1.add(cmdNormalView);
        cmdNormalView.setBounds(501, 51, 132, 21);
        
        cmdPreviewA.setText("Preview Report");
        jPanel1.add(cmdPreviewA);
        cmdPreviewA.setBounds(501, 81, 128, 21);
        
        Tab.addTab("Status", jPanel1);
        
        getContentPane().add(Tab);
        Tab.setBounds(2, 66, 654, 422);
        
    }//GEN-END:initComponents

    private void cmdSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectActionPerformed
        // TODO add your handling code here:
        
        if(txtItemID.getText().trim().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Please enter the item code");
          return;
        }
        
        SelectAllocation ObjSelection=new SelectAllocation();
        ObjSelection.ItemID=txtItemID.getText();
        ObjSelection.ShowList();
        
        if(ObjSelection.SelAllocationID!=0)
        {
          txtAllocationID.setText(Long.toString(ObjSelection.SelAllocationID));
          
          //Display Allocation Information
        clsAllocation ObjAllocation=clsAllocation.getObject(EITLERPGLOBAL.gCompanyID, ObjSelection.SelAllocationID);
        
        int DeptID=(int)ObjAllocation.getAttribute("DEPT_ID").getVal();
        txtDept.setText(clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,DeptID));
        
        txtAllocatedQty.setText(Double.toString(ObjAllocation.getAttribute("ALLOCATED_QTY").getVal()));
        txtIssuedQty.setText(Double.toString(ObjAllocation.getAttribute("ISSUED_QTY").getVal()));
        txtTotal.setText(Double.toString(ObjAllocation.getAttribute("ALLOCATED_QTY").getVal()-ObjAllocation.getAttribute("ISSUED_QTY").getVal()));
        
        
            
        }
    }//GEN-LAST:event_cmdSelectActionPerformed

    private void txtItemIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemIDFocusLost
        // TODO add your handling code here:
     if(!txtItemID.getText().trim().equals(""))
        {
          txtItemName.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,txtItemID.getText()));  
        }
        else
        {
          txtItemName.setText("");  
        }        
    }//GEN-LAST:event_txtItemIDFocusLost

    private void txtItemIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIDKeyPressed
        // TODO add your handling code here:
  if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT ITEM_ID,ITEM_DESCRIPTION FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1 AND CANCELLED=0 ORDER BY ITEM_ID";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtItemID.setText(aList.ReturnVal);
                txtItemName.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,aList.ReturnVal));
            }
        }        
    }//GEN-LAST:event_txtItemIDKeyPressed
    
    private void Tab1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab1FocusGained
        // TODO add your handling code here:
        txtDocDate.requestFocus();
    }//GEN-LAST:event_Tab1FocusGained
    
    private void Tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tab1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Tab1MouseClicked
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ObjDeAlloc.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
            Delete();
        }
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JPanel Tab1;
    private javax.swing.JTable TableHS;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdNormalView;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPreviewA;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdSelect;
    private javax.swing.JButton cmdTop;
    private javax.swing.JButton cmdViewHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCreatedBy;
    private javax.swing.JLabel lblCreatedDate;
    private javax.swing.JLabel lblDocumentHistory;
    private javax.swing.JLabel lblModifiedBy;
    private javax.swing.JLabel lblModifiedDate;
    private javax.swing.JLabel lblRevNo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAllocatedQty;
    private javax.swing.JTextField txtAllocationID;
    private javax.swing.JTextField txtDeAllocatedQty;
    private javax.swing.JTextField txtDept;
    private javax.swing.JTextField txtDocDate;
    private javax.swing.JTextField txtDocNo;
    private javax.swing.JTextField txtIssuedQty;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    
    private void SetFields(boolean pStat) {
        txtDocNo.setEnabled(pStat);
        txtDocDate.setEnabled(pStat);
        txtItemID.setEnabled(pStat);
        cmdSelect.setEnabled(pStat);
        txtDeAllocatedQty.setEnabled(pStat);
        
        
    }
    
    private void ClearFields() {
        txtDocNo.setText("");
        txtDocDate.setText(EITLERPGLOBAL.getCurrentDate());
        txtItemID.setText("");
        txtItemName.setText("");
        txtAllocationID.setText("0");
        txtAllocatedQty.setText("0");
        txtIssuedQty.setText("0");
        txtTotal.setText("0");
        txtDeAllocatedQty.setText("0");
        lblCreatedBy.setText("");
        lblModifiedBy.setText("");
        FormatGridHS();
        
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        
        ClearFields();
        
        txtDocNo.setText(Long.toString((long)ObjDeAlloc.getAttribute("DOC_NO").getVal()));
        lblTitle.setText("STOCK DEALLOCATION - "+txtDocNo.getText());
        lblRevNo.setText(Integer.toString((int)ObjDeAlloc.getAttribute("REVISION_NO").getVal()));
        txtDocDate.setText(EITLERPGLOBAL.formatDate((String)ObjDeAlloc.getAttribute("DOC_DATE").getObj()));
        txtItemID.setText((String)ObjDeAlloc.getAttribute("ITEM_ID").getObj());
        txtItemName.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,txtItemID.getText()));
        txtAllocationID.setText(Long.toString((long)ObjDeAlloc.getAttribute("ALLOCATION_ID").getVal()));
        
        long AllocationID=(long)ObjDeAlloc.getAttribute("ALLOCATION_ID").getVal();
        clsAllocation ObjAlloc=clsAllocation.getObject(EITLERPGLOBAL.gCompanyID, AllocationID);
        
        int DeptID=(int)ObjAlloc.getAttribute("DEPT_ID").getVal();
        txtDept.setText(clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,DeptID));
        
        txtAllocatedQty.setText(Double.toString(ObjAlloc.getAttribute("ALLOCATED_QTY").getVal()));
        txtIssuedQty.setText(Double.toString(ObjAlloc.getAttribute("ISSUED_QTY").getVal()));
        txtTotal.setText(Double.toString(ObjAlloc.getAttribute("ALLOCATED_QTY").getVal()-ObjAlloc.getAttribute("ISSUED_QTY").getVal()));
        txtDeAllocatedQty.setText(Double.toString(ObjDeAlloc.getAttribute("FREE_QTY").getVal()));
        
        lblCreatedBy.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(int)ObjDeAlloc.getAttribute("CREATED_BY").getVal()));
        lblCreatedDate.setText(EITLERPGLOBAL.formatDate((String)ObjDeAlloc.getAttribute("CREATED_DATE").getObj()));
        lblModifiedBy.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(int)ObjDeAlloc.getAttribute("MODIFIED_BY").getVal()));
        lblModifiedDate.setText(EITLERPGLOBAL.formatDate((String)ObjDeAlloc.getAttribute("MODIFIED_DATE").getObj()));
        
        //Showing Audit Trial History
        FormatGridHS();
        long DocNo=(long)ObjDeAlloc.getAttribute("DOC_NO").getVal();
        HashMap History=clsDeAllocation.getHistoryList(EITLERPGLOBAL.gCompanyID, DocNo);
        for(int i=1;i<=History.size();i++) {
            clsDeAllocation ObjHistory=(clsDeAllocation)History.get(Integer.toString(i));
            Object[] rowData=new Object[5];
            
            rowData[0]=Integer.toString((int)ObjHistory.getAttribute("REVISION_NO").getVal());
            rowData[1]=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(long)ObjHistory.getAttribute("UPDATED_BY").getVal());
            rowData[2]=EITLERPGLOBAL.formatDate((String)ObjHistory.getAttribute("ENTRY_DATE").getObj());
            
            String ApprovalStatus="";
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("A")) {
                ApprovalStatus="Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("F")) {
                ApprovalStatus="Final Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("W")) {
                ApprovalStatus="Waiting";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("R")) {
                ApprovalStatus="Rejected";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("P")) {
                ApprovalStatus="Pending";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("C")) {
                ApprovalStatus="Skiped";
            }
            
            
            rowData[3]=ApprovalStatus;
            rowData[4]=(String)ObjHistory.getAttribute("APPROVER_REMARKS").getObj();
            
            DataModelHS.addRow(rowData);
        }
        
        
        //============================================================//
    }
    
    //Sets data to the Class Object
    private void SetData() {
        
        
        ObjDeAlloc.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
        ObjDeAlloc.setAttribute("DOC_DATE",EITLERPGLOBAL.formatDateDB(txtDocDate.getText()));
        ObjDeAlloc.setAttribute("ITEM_ID",txtItemID.getText());
        ObjDeAlloc.setAttribute("ALLOCATION_ID",Long.parseLong(txtAllocationID.getText()));
        ObjDeAlloc.setAttribute("FREE_QTY",Double.parseDouble(txtDeAllocatedQty.getText()));
        
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            ObjDeAlloc.setAttribute("CREATED_BY",EITLERPGLOBAL.gUserID);
            ObjDeAlloc.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        else {
            ObjDeAlloc.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gUserID);
            ObjDeAlloc.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        
        
    }
    
    
    
    
    
    
    
    
    
    
    private void SetMenuForRights() {
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,921)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,922)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,923)) {
            cmdDelete.setEnabled(true);
        }
        else {
            cmdDelete.setEnabled(false);
        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,924)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
    }
    
    private void Add() {
        
        
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        
        
        
        EditMode=EITLERPGLOBAL.ADD;
        SetFields(true);
        DisableToolbar();
        ClearFields();
        //Display newly generated document no.
        txtDocNo.setText("0");
        txtDocDate.requestFocus();
        
        lblTitle.setText("STOCK DEALLOCATION - "+txtDocNo.getText());
        
    }
    
    private void Edit() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        
        EditMode=EITLERPGLOBAL.EDIT;
        
        DisplayData();
        SetFields(true);
        
        DisableToolbar();
        txtDocDate.requestFocus();
    }
    
    private void Delete() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        
        if(ObjDeAlloc.Delete()) {
            MoveLast();
        }
        else {
            JOptionPane.showMessageDialog(null,"Error occured while deleting. Error is "+ObjDeAlloc.LastError);
        }
    }
    
    private void Save() {
        if(!EITLERPGLOBAL.IsNumber(txtAllocationID.getText())) {
            txtAllocationID.setText("0");
        }
        
        if(!EITLERPGLOBAL.IsNumber(txtDeAllocatedQty.getText())) {
            txtDeAllocatedQty.setText("0");
        }
        
        
        
        //Form level validations
        if(txtDocDate.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter document date");
            return;
        }
        
        if(!EITLERPGLOBAL.isDate(txtDocDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid Document Date");
            return;
        }
        
        
        if(txtAllocationID.getText().trim().equals("0")||txtAllocationID.getText().trim().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Please select the allocation using Select button");
          return;
        }
        
        if(txtDeAllocatedQty.getText().trim().equals("0")||txtDeAllocatedQty.getText().trim().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Please enter quantity to deallocate");
          return;
        }
        
        double TotalQty=Double.parseDouble(txtTotal.getText());
        double FreeQty=Double.parseDouble(txtDeAllocatedQty.getText());
        
        if(FreeQty>TotalQty)
        {
          JOptionPane.showMessageDialog(null,"Deallocation quantity must be less than or equal to allocated qty.");
          return;
        }
        
        
        SetData();
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(ObjDeAlloc.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+ObjDeAlloc.LastError);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(ObjDeAlloc.Update()) {
                //Nothing to do
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+ObjDeAlloc.LastError);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
    }
    
    private void Cancel() {
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
    }
    
    private void Find() {
        /*Loader ObjLoader=new Loader(this,"EITLERP.Stores.frmMRFind",true);
        frmMRFind ObjReturn= (frmMRFind) ObjLoader.getObj();
        
        if(ObjReturn.Cancelled==false) {
            if(!ObjMR.Filter(ObjReturn.strQuery,EITLERPGLOBAL.gCompanyID)) {
                JOptionPane.showMessageDialog(null,"No records found.");
            }
            MoveLast();
        }*/
    }
    
    private void MoveFirst() {
        ObjDeAlloc.MoveFirst();
        DisplayData();
    }
    
    private void MovePrevious() {
        ObjDeAlloc.MovePrevious();
        DisplayData();
    }
    
    private void MoveNext() {
        ObjDeAlloc.MoveNext();
        DisplayData();
    }
    
    private void MoveLast() {
        ObjDeAlloc.MoveLast();
        DisplayData();
    }
    
    
    
    
    
        
    private void FormatGridHS() {
        DataModelHS=new EITLTableModel();
        
        TableHS.removeAll();
        TableHS.setModel(DataModelHS);
        
        //Set the table Readonly
        DataModelHS.TableReadOnly(true);
        
        //Add the columns
        DataModelHS.addColumn("Rev No.");
        DataModelHS.addColumn("User");
        DataModelHS.addColumn("Date");
        DataModelHS.addColumn("Status");
        DataModelHS.addColumn("Remarks");
        
        TableHS.setAutoResizeMode(TableHS.AUTO_RESIZE_OFF);
    }
    
    
    private void PreviewAuditReport() {
        /*try {
            URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptMaterialREQA.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&DocNo="+txtDocNo.getText());
            EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,"Error Previwing "+e.getMessage());
        }*/
    }
    
        
}
