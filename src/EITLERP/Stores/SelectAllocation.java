/* 
 * frmInquiry.java
 *
 * Created on June 05, 2004, 11:58 AM
 */

package EITLERP.Stores;

/**
 * 
 * @author  jadave
 */
/*<APPLET CODE=SelectIndentNo.Class HEIGHT=400 WIDTH=700></APPLET>*/
 
import javax.swing.*;
import java.awt.*; 
import java.util.*;
import EITLERP.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.sql.*;
import java.net.*;

public class SelectAllocation extends javax.swing.JApplet {
    
    private EITLTableModel DataModel;
    private EITLTableCellRenderer Rend=new EITLTableCellRenderer();
    
    public boolean Cancelled=true;
    public HashMap colSelItems=new HashMap();
    private JDialog aDialog;
    
    public boolean CopyHeader=true;
    
    public String ItemID="";
        
    private EITLComboModel cmbDeptModel;
    public long SelAllocationID=0;
    
    public SelectAllocation() {
        setSize(692,375);
        initComponents();
        FormatGrid();
        GenerateGrid();
    }
    
    public void init() {
        setSize(692,375);
        initComponents();
        FormatGrid();
        GenerateGrid();
    }
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        
        Table.removeAll();
        
        Table.setModel(DataModel);
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        DataModel.TableReadOnly(true);
        
        //Add Columns to it
        DataModel.addColumn("Allocation No."); //0 Selection
        DataModel.addColumn("Date"); //0 Selection
        DataModel.addColumn("Department"); //1 Selection
        DataModel.addColumn("Allocated Qty"); //2 Selection
        DataModel.addColumn("Issued Qty"); //3 Selection
        DataModel.addColumn("Remaining Qty"); //4 Selection
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdOK = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtItemID = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        
        getContentPane().setLayout(null);
        
        jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel1.setText("Select the Allocation ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 149, 15);
        
        Table.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
        ));
        jScrollPane1.setViewportView(Table);
        
        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(9, 91, 660, 218);
        
        cmdOK.setText("OK");
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdOK);
        cmdOK.setBounds(508, 317, 78, 25);
        
        cmdCancel.setText("Cancel");
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(592, 317, 79, 25);
        
        jLabel2.setText("Item Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 60, 76, 15);
        
        txtItemID.setEnabled(false);
        txtItemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtItemIDKeyTyped(evt);
            }
        });
        
        getContentPane().add(txtItemID);
        txtItemID.setBounds(90, 60, 134, 21);
        
        txtItemName.setEnabled(false);
        getContentPane().add(txtItemName);
        txtItemName.setBounds(230, 60, 373, 21);
        
        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        
        getContentPane().add(jButton1);
        jButton1.setBounds(606, 59, 37, 23);
        
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtItemName;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtItemIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIDKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtItemIDKeyTyped
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        SelAllocationID=0;
        Cancelled=true;
        aDialog.dispose();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        // TODO add your handling code here:
        SelAllocationID=0;
        if(Table.getRowCount()<=0) {
            Cancelled=true;
        }
        else {
            SetList();
            Cancelled=false;
        }
        aDialog.dispose();
    }//GEN-LAST:event_cmdOKActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdOK;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtItemName;
    // End of variables declaration//GEN-END:variables
    
    private void SetList() {
        
        if(Table.getSelectedRow()>=0) {
            SelAllocationID=Long.parseLong((String)Table.getValueAt(Table.getSelectedRow(),0));
        }
        else {
            SelAllocationID=0;
        }
    }
    
    private void GenerateGrid() {
        
        HashMap List=new HashMap();
        
        try {
            

            FormatGrid();
            List=clsAllocation.getAllocationList(EITLERPGLOBAL.gCompanyID, " AND ITEM_ID='"+ItemID+"'");
            
            for(int i=1;i<=List.size();i++)
            {
              clsAllocation ObjAlloc=(clsAllocation)List.get(Integer.toString(i));
              
              Object[] rowData=new Object[6];
              
              rowData[0]=Long.toString((long)ObjAlloc.getAttribute("DOC_NO").getVal());
              rowData[1]=EITLERPGLOBAL.formatDate((String)ObjAlloc.getAttribute("DOC_DATE").getObj());
              rowData[2]=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,(int)ObjAlloc.getAttribute("DEPT_ID").getVal());
              rowData[3]=Double.toString(ObjAlloc.getAttribute("ALLOCATED_QTY").getVal());
              rowData[4]=Double.toString(ObjAlloc.getAttribute("ISSUED_QTY").getVal());
              rowData[5]=Double.toString(ObjAlloc.getAttribute("ALLOCATED_QTY").getVal()-ObjAlloc.getAttribute("ISSUED_QTY").getVal());
              
              DataModel.addRow(rowData);
            }
            
            
        }
        catch(Exception e) {
            
        }
    }
    
    //Recurses through the hierarchy of classes
    //until it finds Frame
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    public boolean ShowList() {
        try {
            FormatGrid();
            GenerateGrid();
            
            txtItemID.setText(ItemID);
            txtItemName.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,ItemID));
            
            setSize(700,400);
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"Select Allocation No.",true);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(false);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            aDialog.show();
        }
        catch(Exception e) {
        }
        return !Cancelled;
    }
    
    
    
    
}
