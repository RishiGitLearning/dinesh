/*
 * frmCurrentStock.java
 *
 * Created on June 8, 2004, 2:45 PM
 */

package EITLERP.Stores;

/**
 *
 * @author  nrpithva
 */
/*<APPLET CODE=frmCurrentStock.class HEIGHT=525 WIDTH=758></APPLET>*/

import javax.swing.*;
import java.awt.*;
import EITLERP.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.sql.*;
import java.net.*;
import TReportWriter.*;
import EITLERP.Utils.SimpleDataProvider.*;
import EITLERP.Finance.Config.*;
import EITLERP.Finance.ReportsUI.*;
import java.util.Date;
import java.text.*;


public class frmItemwiseStock extends javax.swing.JApplet {
    
    private TReportEngine objEngine=new TReportEngine();
    private EITLComboModel cmbItemTypeModel= new EITLComboModel();
    private String date="";
    
    /** Initializes the applet frmCurrentStock */
    public void init() {
        setSize(420,201);
        initComponents();
        GenerateCombo();
        txtAsOnDate.setText(EITLERPGLOBAL.getCurrentDate());
        lblItemId.setVisible(false);
        jProgressBar.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        cmbItemType = new javax.swing.JComboBox();
        cmdpreview = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtAsOnDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblItemId = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.EtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.add(cmbItemType);
        cmbItemType.setBounds(120, 20, 190, 24);

        cmdpreview.setText("Preview");
        cmdpreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdpreviewActionPerformed(evt);
            }
        });

        jPanel1.add(cmdpreview);
        cmdpreview.setBounds(270, 100, 82, 25);

        jLabel2.setText("Item Type :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 20, 80, 20);

        jPanel1.add(txtAsOnDate);
        txtAsOnDate.setBounds(120, 60, 140, 19);

        jLabel3.setText("As On Date :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 60, 80, 15);

        lblItemId.setText("...");
        jPanel1.add(lblItemId);
        lblItemId.setBounds(10, 90, 240, 20);

        jProgressBar.setStringPainted(true);
        jPanel1.add(jProgressBar);
        jProgressBar.setBounds(10, 114, 240, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 40, 370, 140);

        jPanel2.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));
        jPanel2.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("ITEM STOCK INFORMATION");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(9, 8, 230, 15);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(1, 2, 800, 30);

    }//GEN-END:initComponents
    
    private void cmdpreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdpreviewActionPerformed
        // TODO add your handling code here:
        if(!valid()) {
            return;
        }
        GenerateReport();
        
    }//GEN-LAST:event_cmdpreviewActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
                                                    }//GEN-LAST:event_formMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbItemType;
    private javax.swing.JButton cmdpreview;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JLabel lblItemId;
    private javax.swing.JTextField txtAsOnDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        
        //----- Generate cmbItem ------- //
        try {
            
            cmbItemTypeModel=new EITLComboModel();
            cmbItemType.removeAll();
            cmbItemType.setModel(cmbItemTypeModel);
            
            ComboData objData=new ComboData();
            objData.Code=1;
            objData.Text="General";
            cmbItemTypeModel.addElement(objData);
            
            objData=new ComboData();
            objData.Code=2;
            objData.Text="Raw Material";
            cmbItemTypeModel.addElement(objData);
            
            objData=new ComboData();
            objData.Code=3;
            objData.Text="Raw Material STM";
            cmbItemTypeModel.addElement(objData);
            
        }
        catch(Exception e) {
            
        }
        //------------------------------ //
        
    }
    private boolean valid() {
        if(txtAsOnDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Date");
            return false;
        }
        else if(!EITLERPGLOBAL.isDate(txtAsOnDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid Date");
            return false;
        }
        try {
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            Date fromDate = df.parse(txtAsOnDate.getText());
            Date RestrictDate = df.parse("01/10/2009");
            
            
            if(EITLERPGLOBAL.getComboCode(cmbItemType)== 2 && fromDate.before(RestrictDate)) {
                JOptionPane.showMessageDialog(null,"From Date must be equals or after 01/10/2009");
                return false;
            }
        }
        catch(Exception e) {
            
        }
        return true;
    }
    private void GenerateReport() {
        
        new Thread() {
            
            public void run() {
                
                TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
                
                objData.AddColumn("SR_NO");
                objData.AddColumn("ITEM_CODE");
                objData.AddColumn("ITEM_DESC");
                objData.AddColumn("UNIT_DESC");
                objData.AddColumn("STOCK_QTY");
                objData.AddColumn("STOCK_VALUE");
                
                lblItemId.setVisible(true);
                jProgressBar.setVisible(true);
                
                
                
                try{
                    
                    TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                    
                    String ItemDesc="";
                    String Condition= "";
                    String ItemId="";
                    String Desc="";
                    String Unit="";
                    String UnitDesc="";
                    
                    int ItemType=EITLERPGLOBAL.getComboCode(cmbItemType); // 1 general 2-raw Material
                    
                    
                    if(EITLERPGLOBAL.gCompanyID ==2 ) {
                        if(ItemType==1) {
                            Condition = " AND A.ITEM_ID NOT LIKE 'RM%' ";
                            ItemDesc="OF GENERAL FOR BARODA";
                        }else if(ItemType==2){
                            Condition = " AND A.ITEM_ID LIKE 'RM%' AND A.CATEGORY_ID <> 13 ";
                            ItemDesc="OF RAW MATERIAL FOR BARODA";
                        }else if(ItemType==3){
                            Condition = " AND A.CATEGORY_ID = 13 ";
                            ItemDesc="OF RAW MATERAIL STM FOR ANKLESHWAR.";
                        }
                    }
                    if(EITLERPGLOBAL.gCompanyID ==3 ) {
                        if(ItemType==1) {
                            Condition = " AND A.ITEM_ID NOT LIKE 'RM%' ";
                            ItemDesc="OF GENERAL FOR ANKLESHWAR.";
                        }else if(ItemType==2){
                            Condition = " AND A.ITEM_ID LIKE 'RM%' AND A.CATEGORY_ID <> 13 ";
                            ItemDesc="OF RAW MATERAIL FOR ANKLESHWAR.";
                        }else if(ItemType==3){
                            Condition = " AND A.CATEGORY_ID = 13 ";
                            ItemDesc="OF RAW MATERAIL STM FOR ANKLESHWAR.";
                        }
                    }
                    
                    String str = "SELECT A.ITEM_ID,A.ITEM_DESCRIPTION,A.UNIT,B.DESC "+
                    "FROM D_INV_ITEM_MASTER A,D_COM_PARAMETER_MAST B WHERE A.COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' "+
                    "AND A.CANCELLED=0 AND A.APPROVED=1 "+
                    Condition +
                    "AND A.UNIT = B.PARA_CODE AND B.PARA_ID = 'UNIT' ORDER BY ITEM_ID";
                    ResultSet rsItem =data.getResult(str);
                    int counter=1;
                    
                    rsItem.last();
                    int cnt =rsItem.getRow();
                    jProgressBar.setMinimum(0);
                    jProgressBar.setMaximum(cnt);
                    jProgressBar.setValue(0);
                    cnt=0;
                    rsItem.first();
                    
                    
                    while(!rsItem.isAfterLast()){
                        ItemId=rsItem.getString("ITEM_ID");
                        
                        
                        
                        //                        if(ItemId.equals("RM11121003")) {
                        //                            boolean t=true;
                        //                        }
                        
                        Desc=rsItem.getString("ITEM_DESCRIPTION");
                        Unit=rsItem.getString("UNIT");
                        UnitDesc=rsItem.getString("DESC");
                        
                        clsStockInfo objStock=(new clsItemStock()).getOnHandQtyOn(EITLERPGLOBAL.gCompanyID,ItemId,EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText()));
                        double StockQty=objStock.StockQty;
                        double StockValue=(new clsItemStock()).getOnHandValueOnRaw(EITLERPGLOBAL.gCompanyID,ItemId,EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText()));
                        
                        cnt++;
                        jProgressBar.setValue(cnt);
                        lblItemId.setText(ItemId);
                        
                        
                        if(StockQty>0) {
                            objRow=objData.newRow();
                            objRow.setValue("SR_NO",String.valueOf(counter));
                            objRow.setValue("ITEM_CODE",ItemId);
                            objRow.setValue("ITEM_DESC",Desc);
                            objRow.setValue("UNIT_DESC",UnitDesc);
                            objRow.setValue("STOCK_QTY",String.valueOf(StockQty));
                            objRow.setValue("STOCK_VALUE",String.valueOf(EITLERPGLOBAL.round(StockValue,3)));
                            objData.AddRow(objRow);
                            counter++;
                        }
                        rsItem.next();
                        
                    }
                    
                    HashMap Parameters=new HashMap();
                    Parameters.put("RUN_DATE",EITLERPGLOBAL.getCurrentDate());
                    Parameters.put("ITEM_TYPE",ItemDesc);
                    Parameters.put("AS_ON_DATE",txtAsOnDate.getText());
                    
                    objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/ItemWiseStock.rpt",Parameters,objData);
                    
                    //lblItemId.setVisible(false);
                    //jProgressBar.setVisible(false);
                }
                catch(Exception e) {
                    //lblItemId.setVisible(false);
                    //jProgressBar.setVisible(false);
                    e.printStackTrace();
                    
                }
                
            };
        }.start();
        
    }
    
}
