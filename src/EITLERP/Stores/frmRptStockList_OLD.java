/*
 * frmRptStockStatement.java
 *
 * Created on August 13, 2005, 3:21 PM
 */

package EITLERP.Stores;

/**
 *
 * @author  root
 */
import EITLERP.*;
import java.sql.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import EITLERP.Utils.*;
import java.text.*;
import java.util.Date;

public class frmRptStockList_OLD extends javax.swing.JApplet {
    
    private EITLComboModel cmbBaseModel=new EITLComboModel();
    private EITLComboModel cmbItemTypeModel=new EITLComboModel();
    
    private int lineCounter=0;
    private int pageCounter=1;
    
    private String LeftMargin=EITLERPGLOBAL.Replicate(" ", 5);
    
    String strFromDate=EITLERPGLOBAL.FinFromDate;
    //String strFromDate="01/04/2005";
    
    private double pageTotal=0;
    private double cumTotal=0;
    private double finalTotal=0;
    private int FirstPage=1;
    
    /** Initializes the applet frmRptStockStatement */
    public void init() {
       // setSize(578, 474);
        setSize(578, 500);
        initComponents();
        Bar.setVisible(false);
        GenerateCombo();
        chkReprocess.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromItemID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToItemID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        Bar = new javax.swing.JProgressBar();
        lblItem = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        chkPrint = new javax.swing.JCheckBox();
        chkReprocess = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        opgItemwise = new javax.swing.JRadioButton();
        opgLocationwise = new javax.swing.JRadioButton();
        chkValue = new javax.swing.JCheckBox();
        txtValueFrom = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtValueTo = new javax.swing.JTextField();
        txtQtyTo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtQtyFrom = new javax.swing.JTextField();
        chkQty = new javax.swing.JCheckBox();
        chkIncludeNonMoving = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        cmbItemType = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("STOCK LIST PRINTING");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(8, 8, 187, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 0, 581, 30);

        jLabel2.setText("From Item Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(16, 94, 112, 15);

        getContentPane().add(txtFromItemID);
        txtFromItemID.setBounds(126, 92, 112, 20);

        jLabel3.setText("To Item Code");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(16, 117, 112, 15);

        getContentPane().add(txtToItemID);
        txtToItemID.setBounds(126, 115, 112, 20);

        jLabel4.setText("As on Date");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(18, 213, 77, 15);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(99, 211, 112, 20);

        cmdPrint.setText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPrint);
        cmdPrint.setBounds(429, 51, 119, 29);

        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExit);
        cmdExit.setBounds(430, 89, 116, 30);

        getContentPane().add(Bar);
        Bar.setBounds(15, 430, 200, 18);

        lblItem.setText(".");
        getContentPane().add(lblItem);
        lblItem.setBounds(15, 412, 480, 15);

        jLabel6.setText("(Keep both item code blank for all items)");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(19, 151, 260, 15);

        jLabel7.setText("Save as ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(25, 350, 59, 15);

        getContentPane().add(txtFile);
        txtFile.setBounds(83, 348, 270, 20);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(355, 348, 35, 21);

        chkPrint.setText("Print the stock ledger");
        getContentPane().add(chkPrint);
        chkPrint.setBounds(14, 370, 183, 20);

        chkReprocess.setText("Re Process Stock Valuation");
        getContentPane().add(chkReprocess);
        chkReprocess.setBounds(267, 390, 205, 20);

        jLabel5.setText("Location");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 185, 63, 15);

        txtLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLocationKeyPressed(evt);
            }
        });

        getContentPane().add(txtLocation);
        txtLocation.setBounds(98, 183, 112, 20);

        opgItemwise.setSelected(true);
        opgItemwise.setText("Itemwise");
        buttonGroup1.add(opgItemwise);
        getContentPane().add(opgItemwise);
        opgItemwise.setBounds(20, 316, 114, 23);

        opgLocationwise.setText("Locationwise");
        buttonGroup1.add(opgLocationwise);
        getContentPane().add(opgLocationwise);
        opgLocationwise.setBounds(139, 316, 114, 23);

        chkValue.setText("Value From");
        chkValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkValueStateChanged(evt);
            }
        });

        getContentPane().add(chkValue);
        chkValue.setBounds(19, 249, 100, 23);

        txtValueFrom.setEnabled(false);
        getContentPane().add(txtValueFrom);
        txtValueFrom.setBounds(121, 250, 112, 20);

        jLabel8.setText("To");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(238, 253, 20, 15);

        txtValueTo.setEnabled(false);
        getContentPane().add(txtValueTo);
        txtValueTo.setBounds(262, 250, 112, 20);

        txtQtyTo.setEnabled(false);
        getContentPane().add(txtQtyTo);
        txtQtyTo.setBounds(262, 278, 112, 20);

        jLabel9.setText("To");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(238, 281, 20, 15);

        txtQtyFrom.setEnabled(false);
        getContentPane().add(txtQtyFrom);
        txtQtyFrom.setBounds(121, 278, 112, 20);

        chkQty.setText("Qty");
        chkQty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkQtyStateChanged(evt);
            }
        });

        getContentPane().add(chkQty);
        chkQty.setBounds(19, 277, 100, 23);

        chkIncludeNonMoving.setText("Include only Transacted Items");
        getContentPane().add(chkIncludeNonMoving);
        chkIncludeNonMoving.setBounds(266, 370, 230, 20);

        jLabel10.setText("Item Type");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 52, 80, 15);

        cmbItemType.setAutoscrolls(true);
        getContentPane().add(cmbItemType);
        cmbItemType.setBounds(123, 50, 190, 24);

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel11.setText("<html> <b> <font color='RED'> NOTE :  Please reprocess stock ledger before  run this report. </font></b></html>");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(5, 455, 470, 20);

    }//GEN-END:initComponents
    
    private void chkQtyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkQtyStateChanged
        // TODO add your handling code here:
        try {
            
            txtQtyFrom.setEnabled(chkQty.isSelected());
            txtQtyTo.setEnabled(chkQty.isSelected());
        }
        catch(Exception e) {
            
        }
        
    }//GEN-LAST:event_chkQtyStateChanged
    
    private void chkValueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkValueStateChanged
        // TODO add your handling code here:
        try {
            
            txtValueFrom.setEnabled(chkValue.isSelected());
            txtValueTo.setEnabled(chkValue.isSelected());
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_chkValueStateChanged
    
    private void txtLocationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLocationKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT LOCATION_ID,LOCATION_NAME FROM D_INV_LOCATION_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ORDER BY LOCATION_ID";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtLocation.setText(aList.ReturnVal);
            }
        }
        
    }//GEN-LAST:event_txtLocationKeyPressed
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null," W "+getWidth()+" H "+getHeight());
    }//GEN-LAST:event_formMouseClicked
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileDialog FileDialog=new FileDialog(findParentFrame(this));
        FileDialog.show();
        txtFile.setText(FileDialog.getDirectory()+FileDialog.getFile());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
        GenerateReportWAvg();
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkIncludeNonMoving;
    private javax.swing.JCheckBox chkPrint;
    private javax.swing.JCheckBox chkQty;
    private javax.swing.JCheckBox chkReprocess;
    private javax.swing.JCheckBox chkValue;
    private javax.swing.JComboBox cmbItemType;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblItem;
    private javax.swing.JRadioButton opgItemwise;
    private javax.swing.JRadioButton opgLocationwise;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromItemID;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtQtyFrom;
    private javax.swing.JTextField txtQtyTo;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtToItemID;
    private javax.swing.JTextField txtValueFrom;
    private javax.swing.JTextField txtValueTo;
    // End of variables declaration//GEN-END:variables
    
    
    
    
    
    
    private void PrintHeader(BufferedWriter aFile) {
        String Title="";
        
        
        //Prints Page Header
        try {
            
            Title="SHRI DINESH MILLS LTD. , "+clsCompany.getCityName(EITLERPGLOBAL.gCompanyID);
            Title=EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title="STOCK LIST";
            Title=EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (100-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"AS ON DATE "+txtToDate.getText()+LeftMargin+"                                      RUN DATE "+EITLERPGLOBAL.getCurrentDate();;
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+EITLERPGLOBAL.Replicate("-",100);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"Item Code      "+" "+"Description         "+"   "+"UOM"+" "+"     Qty"+" "+"         Rate"+" "+"        Value"+" "+"Location  ";
            
            aFile.write(Title);
            aFile.newLine();
            
            
            Title=LeftMargin+"               "+" "+"                    "+" "+"      "+" "+"  Z. Qty"+" ";
            
            aFile.write(Title);
            aFile.newLine();
            
            
            Title=LeftMargin+EITLERPGLOBAL.Replicate("-",100);
            
            aFile.write(Title);
            aFile.newLine();
            
            lineCounter=7;
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    
    
    private void GenerateReportWAvg() {
        
        new Thread() {
            
            public void run() {
                DecimalFormat dFormat=new DecimalFormat("###0.000");
                
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource;
                ResultSet rsClosingHeader,rsClosingDetail;
                ResultSet rsItemGroup;
                Statement stClosingHeader,stClosingDetail;
                
                String strSQL="";
                String strCondition="";
                String strOrder="";
                
                Connection tmpConn;
                tmpConn=data.getConn();
                
                double ValueFrom = EITLERPGLOBAL.ConvertToDouble(txtValueFrom.getText());
                double ValueTo = EITLERPGLOBAL.ConvertToDouble(txtValueTo.getText());
                double QtyFrom = EITLERPGLOBAL.ConvertToDouble(txtQtyFrom.getText());
                double QtyTo = EITLERPGLOBAL.ConvertToDouble(txtQtyTo.getText());
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String ItemName1="";
                String ItemName2="";
                String UnitName="";
                int ItemCount=0;
                double OpeningQty=0;
                double OpeningRate=0;
                double OpeningValue=0;
                double InwardQty=0;
                double InwardZeroQty=0;
                double InwardRate=0;
                double InwardValue=0;
                double OutwardQty=0;
                double OutwardZeroQty=0;
                double OutwardRate=0;
                double OutwardValue=0;
                double ClosingQty=0;
                double ClosingZeroQty=0;
                double ClosingRate=0;
                double ClosingValue=0;
                double IssueQty=0;
                double IssueZeroQty=0;
                double IssueValue=0;
                double IssueRate=0;
                double DiffQty=0;
                boolean TransactionsFound=true;
                
                double srcClosingQty=0;
                double srcClosingValue=0;
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                String Location="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                int ItemType=EITLERPGLOBAL.getComboCode(cmbItemType);
                long StockEntryNo=0;
                String StockEntryDate="";
                
                pageTotal=0;
                cumTotal=0;
                finalTotal=0;
                
                clsItemStock objItemStock=new clsItemStock();
                
                try {
                    
                    if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    try {
                        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        Date fromDate = df.parse(txtToDate.getText());
                        Date RestrictDate = df.parse("01/10/2009");
                        
                        
                        if(ItemType!=1 && fromDate.before(RestrictDate)) {
                            JOptionPane.showMessageDialog(null,"From Date must be equals or after 01/10/2009");
                            return;
                        }
                    }
                    catch(Exception e) {
                        
                    }
                    
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    if(opgItemwise.isSelected()) {
                        strOrder=" ORDER BY ITEM_ID ";
                    }
                    else {
                        strOrder=" ORDER BY LOCATION_ID ";
                    }
                    
                    Location=txtLocation.getText().trim();
                    
                    
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    strFromDate = txtToDate.getText().trim(); //change as on 08/06/2009 -- Mrugesh
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                        strFromDate=EITLERPGLOBAL.formatDate(rsTmp.getString("ENTRY_DATE"));
                    }
                    //================================================================//
                    
                    
                    //                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    //                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    //                    strCondition=strCondition+" UNION ";
                    //                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    //                    strCondition=strCondition+" UNION ";
                    //                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE A.STM_NO=B.STM_NO AND A.STM_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND STM_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    
                    //                    //25/03/2009 *********
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE A.STM_NO=B.STM_NO AND A.STM_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND STM_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_COM_OPENING_STOCK_DETAIL WHERE ENTRY_NO=" + StockEntryNo + " ";
                    //                    //***********25/03/2009
                    data.Execute(strCondition);
                    
                    strCondition="";
                    
                    if(!txtLocation.getText().trim().equals("")) {
                        strCondition=strCondition+" AND LOCATION_ID LIKE '"+Location+"%' ";
                    }
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                        strFromDate=EITLERPGLOBAL.formatDate(rsTmp.getString("ENTRY_DATE"));
                    }
                    //================================================================//
                    
                    
                    if(chkReprocess.isSelected()) {
                        lblItem.setText("Processing. Please wait ...");
                        //objItemStock.ProcessLedger(strFromDate, EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
                        objItemStock.ProcessLedger(StockEntryDate, EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
                        //objItemStock.ProcessLedger("2008-04-01", EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
                        
                        while(!objItemStock.ProcessDone) {
                            //Wait until process is completed....
                        }
                        
                    }
                    //==========Get the Data from Item Master for ===============//
                    boolean Continue = false;
                    double CatReceipt=0;
                    double CatIssue=0;
                    double CatOpening=0;
                    double ItemValue=0;
                    
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    PrintHeader(aFile);
                    
                    int counteritem = 0;
                    if(ItemType==1) //General
                    {
                        strSQL="SELECT * FROM D_COM_ITEM_CATEGORY WHERE IS_SUB_CATEGORY=0 AND MAIN_CATEGORY_ID<3 ORDER BY CATEGORY_ID";
                    }
                    else {
                        strSQL="SELECT * FROM D_COM_ITEM_CATEGORY WHERE MAIN_CATEGORY_ID = 3 ORDER BY CATEGORY_ID";
                        //strSQL="SELECT * FROM D_COM_ITEM_CATEGORY WHERE IS_SUB_CATEGORY=0 AND MAIN_CATEGORY_ID=3 ORDER BY CATEGORY_ID";  //Commented By Nisarg
                    }
                    
                    rsItemGroup=data.getResult(strSQL);
                    rsItemGroup.first();
                    
                    if(rsItemGroup.getRow()>0) {
                        while(!rsItemGroup.isAfterLast()) {
                            
                            CatReceipt=0;
                            CatIssue=0;
                            CatOpening=0;
                            
                            
                            finalTotal=0;
                            String groupID=rsItemGroup.getString("CATEGORY_ID");
                            System.out.println("Category :"+groupID);
                            
                            //========= Create a text file ==============//
                            strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" AND SUBSTRING(ITEM_ID,1,"+groupID.length()+")='"+groupID+"' ";
                            ResultSet rsCount=data.getResult(strSQL);
                            rsCount.first();
                            
                            Bar.setMaximum(rsCount.getInt("THECOUNT"));
                            Bar.setMinimum(0);
                            
                            strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT,LOCATION_ID FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" AND SUBSTRING(ITEM_ID,1,"+groupID.length()+")='"+groupID+"' GROUP BY A.ITEM_ID "+strOrder;
                            rsItem=data.getResult(strSQL);
                            rsItem.first();
                            
                            ItemCount=0;
                            while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                                
                                ItemCount++;
                                
                                counteritem = counteritem+1;
                                Bar.setValue(rsItem.getRow());
                                Bar.repaint();
                                
                                //Fill Up the variables first
                                ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                                ItemName=rsItem.getString("ITEM_DESCRIPTION");
                                
                                Location=rsItem.getString("LOCATION_ID");
                                
                                ItemID=ItemID+EITLERPGLOBAL.Replicate(" ", 12-ItemID.length());
                                
                                lblItem.setText(ItemID);
                                lblItem.repaint();
                                int x = ItemName.length();
                                
                                if(ItemName.length()>25) {
                                    ItemName1=ItemName.substring(0,25);
                                    ItemName2=ItemName.substring(25,x);
                                    if(ItemName2.length()>75)
                                    {
                                        ItemName2.substring(0,74);
                                    }
                                }
                                else {
                                    if(ItemName.length()<=25) {
                                        ItemName1=ItemName+EITLERPGLOBAL.Replicate(" ", 25-ItemName.length());
                                        ItemName2="";
                                    }
                                }
                                
                                UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                                UnitName=UnitName+EITLERPGLOBAL.Replicate(" ", 3-UnitName.trim().length());
                                
                                OpeningQty=0;
                                OpeningValue=0;
                                
                                strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),3);
                                    OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),3);
                                    
                                    //if(OpeningQty==0) {
                                    if(OpeningQty<=0) {    //change as on 08/06/2009 -- Mrugesh
                                        OpeningValue=0; //change as on 08/06/2009 -- Mrugesh
                                        OpeningRate=0;
                                        OpeningQty=0; //change as on 08/06/2009 -- Mrugesh
                                    }
                                    else {
                                        OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                    }
                                }
                                
                                
                                
                                strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(LANDED_RATE*QTY) IS NULL,0,SUM(LANDED_RATE*QTY)) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND B.ITEM_ID='"+ItemID+"'";
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_VALUE"),3);
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),3);
                                }
                                
                                strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY,IF(SUM(ZERO_VAL_QTY) IS NULL,0,SUM(ZERO_VAL_QTY)) AS SUM_ZERO_QTY, IF(SUM(ISSUE_VALUE) IS NULL,0,SUM(ISSUE_VALUE)) AS SUM_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND B.ITEM_CODE='"+ItemID+"'";
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),3);
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),3);
                                }
                                
                                strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY,IF(SUM(ZERO_VAL_QTY) IS NULL,0,SUM(ZERO_VAL_QTY)) AS SUM_ZERO_QTY, IF(SUM(NET_AMOUNT) IS NULL,0,SUM(NET_AMOUNT)) AS SUM_VALUE FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.STM_NO=B.STM_NO AND A.APPROVED=1 AND A.CANCELLED=0 AND A.STM_DATE>'"+StockEntryDate+"' AND STM_DATE<'"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND B.ITEM_ID='"+ItemID+"'";
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),3);
                                    OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),3);
                                }
                                
                                
                                //if(OpeningQty==0) {
                                if(OpeningQty==0) { //change as on 08/06/2009 -- Mrugesh
                                    OpeningRate=0;
                                    OpeningValue=0; //change as on 08/06/2009 -- Mrugesh
                                    OpeningQty=0; //change as on 08/06/2009 -- Mrugesh
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                }
                                
                                
                                CatOpening+=OpeningValue;
                                
                                strOpeningQty=dFormat.format(OpeningQty);
                                strOpeningQty=EITLERPGLOBAL.Replicate(" ", 6-strOpeningQty.length())+strOpeningQty;
                                strOpeningRate=dFormat.format(OpeningRate);
                                strOpeningRate=EITLERPGLOBAL.Replicate(" ", 11-strOpeningRate.length())+strOpeningRate;
                                strOpeningValue=dFormat.format(OpeningValue);
                                strOpeningValue=EITLERPGLOBAL.Replicate(" ",11-strOpeningValue.length())+strOpeningValue;
                                
                                TransactionsFound=false;
                                
                                ItemValue=OpeningValue;
                                
                                strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                                strSQL=strSQL+" UNION ";
                                strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                                strSQL=strSQL+" UNION ";
                                strSQL=strSQL+"  SELECT B.SR_NO,A.STM_NO AS DOC_NO,A.STM_DATE AS DOC_DATE,'-' AS OPERATION,'3' AS TORDER,B.QTY,B.NET_AMOUNT AS VALUE,B.ZERO_VAL_QTY FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.STM_NO=B.STM_NO AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.STM_DATE>='"+EITLERPGLOBAL.formatDateDB(strFromDate)+"' AND STM_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                                strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                                
                                
                                rsTmp=data.getResult(strSQL);
                                rsTmp.first();
                                
                                if(rsTmp.getRow()>0) {
                                    TransactionsFound=true;
                                    while(!rsTmp.isAfterLast()) {
                                        
                                        String Operation=rsTmp.getString("OPERATION");
                                        //strOrder=rsTmp.getString("TORDER");
                                        
                                        strDocNo=rsTmp.getString("DOC_NO");
                                        strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                        strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                        
                                        if(Operation.equals("+")) {
                                            strRcptQty=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),3));
                                            strRcptValue=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3));
                                            
                                            CatReceipt+=EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3);
                                            
                                            if(rsTmp.getDouble("QTY")<=0) {
                                                strRcptRate="0.000";
                                            }
                                            else {
                                                strRcptRate=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE")/rsTmp.getDouble("QTY"),3));
                                            }
                                            
                                            strRcptQty=EITLERPGLOBAL.Replicate(" ", 6-strRcptQty.length())+strRcptQty;
                                            strRcptRate=EITLERPGLOBAL.Replicate(" ", 11-strRcptRate.length())+strRcptRate;
                                            strRcptValue=EITLERPGLOBAL.Replicate(" ", 11-strRcptValue.length())+strRcptValue;
                                            
                                            OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),3);
                                            OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),3);
                                            ItemValue+=EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3);
                                            
                                            
                                            if(OpeningQty==0) {
                                                OpeningRate=0;
                                                OpeningValue=0; //change as on 07/06/2009
                                            }
                                            else {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                            }
                                            
                                            strIssueQty=EITLERPGLOBAL.Replicate(" ", 6);
                                            strIssueRate=EITLERPGLOBAL.Replicate(" ", 11);
                                            strIssueValue=EITLERPGLOBAL.Replicate(" ", 11);
                                            
                                            strClosingQty=dFormat.format(OpeningQty);
                                            strClosingQty=EITLERPGLOBAL.Replicate(" ", 6-strClosingQty.length())+strClosingQty;
                                            
                                            strClosingRate=dFormat.format(OpeningRate);
                                            strClosingRate=EITLERPGLOBAL.Replicate(" ", 11-strClosingRate.length())+strClosingRate;
                                            
                                            strClosingValue=dFormat.format(OpeningValue);
                                            strClosingValue=EITLERPGLOBAL.Replicate(" ",11-strClosingValue.length())+strClosingValue;
                                        }
                                        
                                        
                                        if(Operation.equals("-")) {
                                            double currentIssueValue=0;
                                            double currentIssueRate=0;
                                            double currentIssueQty=0;
                                            
                                            //========NEW CODE=========//
                                            currentIssueQty=EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),3);
                                            
                                            if(OpeningValue<0) {
                                                OpeningRate=0;
                                                OpeningValue=0;
                                            } else {
                                                if(OpeningQty>0) {
                                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                                    //OpeningValue=EITLERPGLOBAL.round(OpeningValue- EITLERPGLOBAL.round((currentIssueQty*OpeningRate),3),3);
                                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue- EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3),3);
                                                    CatIssue+=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),3);
                                                    ItemValue-=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),3);
                                                } else {
                                                    OpeningRate=0;
                                                    OpeningValue=EITLERPGLOBAL.round(OpeningValue-0,3);
                                                }
                                            }
                                            
                                            OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,3);
                                            
                                            currentIssueRate=EITLERPGLOBAL.round(OpeningRate,3);
                                            currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),3);
                                            //=====END OF NEW CODE=====//
                                            
                                            
                                            strIssueQty=dFormat.format(EITLERPGLOBAL.round(currentIssueQty,3));
                                            strIssueValue=dFormat.format(EITLERPGLOBAL.round(currentIssueValue,3));
                                            strIssueRate=dFormat.format(EITLERPGLOBAL.round(currentIssueRate,3));
                                            
                                            strRcptQty=EITLERPGLOBAL.Replicate(" ", 7);
                                            strRcptRate=EITLERPGLOBAL.Replicate(" ", 12);
                                            strRcptValue=EITLERPGLOBAL.Replicate(" ", 12);
                                            
                                            strIssueQty=EITLERPGLOBAL.Replicate(" ", 7-strIssueQty.length())+strIssueQty;
                                            strIssueRate=EITLERPGLOBAL.Replicate(" ", 12-strIssueRate.length())+strIssueRate;
                                            strIssueValue=EITLERPGLOBAL.Replicate(" ", 12-strIssueValue.length())+strIssueValue;
                                            
                                            
                                            strClosingQty=dFormat.format(OpeningQty);
                                            strClosingQty=EITLERPGLOBAL.Replicate(" ", 7-strClosingQty.length())+strClosingQty;
                                            
                                            strClosingRate=dFormat.format(OpeningRate);
                                            strClosingRate=EITLERPGLOBAL.Replicate(" ", 12-strClosingRate.length())+strClosingRate;
                                            
                                            strClosingValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,3));
                                            strClosingValue=EITLERPGLOBAL.Replicate(" ",12-strClosingValue.length())+strClosingValue;
                                            
                                            data.Execute("UPDATE D_INV_ITEM_MASTER SET CLOSING_VALUE="+EITLERPGLOBAL.round(OpeningValue,3)+" WHERE ITEM_ID='"+ItemID+"'");
                                            
                                            if(OpeningQty!=0) {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                            }
                                            else {
                                                OpeningRate=0;
                                                OpeningValue=0; //change as on 08/06/2009 -- Mrugesh
                                            }
                                        }
                                        
                                        rsTmp.next();
                                    }
                                }
                                
                                if(OpeningQty==0) {
                                    OpeningValue=0;
                                }
                                
                                double OpeningZeroQty=0;
                                
                                String strOpeningZeroQty=dFormat.format(EITLERPGLOBAL.round(OpeningZeroQty,3));
                                strOpeningZeroQty=EITLERPGLOBAL.Replicate(" ", 8-strOpeningZeroQty.length())+strOpeningZeroQty;
                                
                                if(ItemValue<0) {
                                    if(Math.abs(ItemValue)<1) {
                                        ItemValue=0;
                                    }
                                }
                                
                                OpeningValue=ItemValue;
                                strOpeningQty=dFormat.format(EITLERPGLOBAL.round(OpeningQty,3));
                                strOpeningQty=EITLERPGLOBAL.Replicate(" ", 8-strOpeningQty.length())+strOpeningQty;
                                strOpeningRate=dFormat.format(EITLERPGLOBAL.round(OpeningRate,3));
                                strOpeningRate=EITLERPGLOBAL.Replicate(" ", 13-strOpeningRate.length())+strOpeningRate;
                                strOpeningValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,3));
                                strOpeningValue=EITLERPGLOBAL.Replicate(" ",13-strOpeningValue.length())+strOpeningValue;
                                
                                Continue=true;
                                
                                if(chkValue.isSelected()) {
                                    
                                    if(OpeningValue>=ValueFrom&&OpeningValue<=ValueTo) {
                                        
                                    }
                                    else {
                                        Continue=false;
                                    }
                                }
                                
                                
                                if(chkQty.isSelected()) {
                                    if(OpeningQty>=QtyFrom&&OpeningQty<=QtyTo) {
                                        
                                    }
                                    else {
                                        Continue=false;
                                    }
                                }
                                
                                
                                if(chkIncludeNonMoving.isSelected()) {
                                    if(TransactionsFound) {
                                        boolean halt = true;
                                    }
                                    else {
                                        Continue=false;
                                    }
                                }
                                
                                
                                if(ItemValue==0) {
                                    Continue=false;
                                }
                                //25/03/2009****** BELOW COMMENTS THIS DATE
                                //if(Continue) {
                                if (Double.parseDouble(strOpeningQty.trim()) > 0) {
                                    writeLine(aFile,ItemID+" "+ItemName1+"    "+UnitName+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue+" "+Location);
                                    writeLine(aFile,"             "+ItemName2);
                                    if(OpeningZeroQty>0) {
                                        writeLine(aFile, EITLERPGLOBAL.Replicate(" ", ItemID.length()) +" "+EITLERPGLOBAL.Replicate(" ",ItemName.length()) +"    "+EITLERPGLOBAL.Replicate(" ",UnitName.length())+" "+strOpeningZeroQty);
                                    }
                                    else {
                                        writeLine(aFile, " ");
                                    }
                                }
                                ItemName1="";
                                ItemName2="";
                                pageTotal+=OpeningValue;
                                cumTotal+=OpeningValue;
                                finalTotal+=OpeningValue;
                                //}
                                //**** 25/03/2009
                                
                                rsItem.next();
                            }
                            
                            
                            if(ItemCount>0) {
                                writeLine(aFile,"---------------------------------------------");
                                writeLine(aFile," Group Total :"+dFormat.format(finalTotal));
                                writeLine(aFile," ");
                            }
                            
                            System.out.println("Opening "+CatOpening);
                            System.out.println("Receipt :"+CatReceipt);
                            System.out.println("Issue :"+CatIssue);
                            
                            rsItemGroup.next();
                            
                            if(rsItemGroup.isAfterLast()) {
                                writeLine(aFile,LeftMargin+"Page Total :"+dFormat.format(pageTotal));
                                writeLine(aFile,LeftMargin+"Cum. Total :"+dFormat.format(cumTotal));
                            }
                        }
                    }
                    System.out.println("count ="+counteritem);
                    aFile.close();
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                }
                
            };
        }.start();
    }
    
    
    
    private void writeLine(BufferedWriter aFile,String strLine) {
        //Writes line maintaining page length
        try {
            DecimalFormat dFormat=new DecimalFormat("###0.000");
            if(lineCounter>=62) {
                
                aFile.write(LeftMargin+EITLERPGLOBAL.Replicate("-",100));
                aFile.newLine();
                
                aFile.write(LeftMargin+"Page Total :"+dFormat.format(pageTotal));
                aFile.newLine();
                aFile.write(LeftMargin+"Cum. Total :"+dFormat.format(cumTotal));
                aFile.newLine();
                
                aFile.write(LeftMargin+EITLERPGLOBAL.Replicate(" ",80)+"Page : "+pageCounter);
                aFile.newLine();
                
                aFile.write("\f");
                
                
                pageCounter++;
                pageTotal=0;
                lineCounter=0;
                PrintHeader(aFile);
            }
            
            aFile.write(LeftMargin+strLine);
            aFile.newLine();
            lineCounter++;
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void newPage(BufferedWriter aFile) {
        //Writes line maintaining page length
        try {
            
            while(lineCounter<=70) {
                aFile.write(" ");
                aFile.newLine();
                
                lineCounter++;
            }
            
            PrintHeader(aFile);
            
        }
        catch(Exception e) {
            
        }
    }
    
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    
    
    private void GenerateCombo() {
        try {
            
            cmbItemTypeModel=new EITLComboModel();
            cmbItemType.removeAll();
            cmbItemType.setModel(cmbItemTypeModel);
            
            ComboData objData=new ComboData();
            objData.Code=1;
            objData.Text="General";
            
            cmbItemTypeModel.addElement(objData);
            
            objData=new ComboData();
            objData.Code=2;
            objData.Text="Raw Material";
            
            cmbItemTypeModel.addElement(objData);
            
        }
        catch(Exception e) {
            
        }
    }
    
/*SELECT A.MIR_NO,DATE_FORMAT(A.MIR_DATE,'%d/%m/%Y') MIR_DATE,B.APPROVER_REMARKS,B.REVISION_NO,IF(A.SUPP_ID='000000',A.PARTY_NAME,SUPP.SUPP_NAME) SUPP_NAME,
C.ITEM_ID,I.ITEM_DESCRIPTION,C.ITEM_EXTRA_DESC
FROM
D_INV_MIR_HEADER A
LEFT JOIN D_INV_MIR_HEADER_H B ON (A.MIR_NO=B.MIR_NO AND A.MIR_TYPE=B.MIR_TYPE)
LEFT JOIN D_COM_DOC_DATA DOC ON (DOC.DOC_NO=A.MIR_NO)
LEFT JOIN D_COM_SUPP_MASTER SUPP ON (A.SUPP_ID=SUPP.SUPPLIER_CODE),
D_INV_MIR_DETAIL C
LEFT JOIN D_INV_ITEM_MASTER I ON (I.ITEM_ID=C.ITEM_ID)
WHERE A.MIR_TYPE=1 AND A.APPROVED=0
AND A.MIR_NO=C.MIR_NO AND A.MIR_TYPE=C.MIR_TYPE AND A.MIR_TYPE=1
AND DOC.STATUS='W'
AND DOC.USER_ID=15
AND DOC.MODULE_ID=5
AND A.MIR_DATE>='2005-04-01'
ORDER BY A.MIR_NO,B.REVISION_NO DESC*/
    
}
