/*
 * frmCurrentStock.java
 *
 * Created on June 8, 2004, 2:45 PM
 */

package EITLERP.Stores;

/**  
 *
 * @author  nrpithva
 */
/*<APPLET CODE=frmCurrentStock.class HEIGHT=525 WIDTH=758></APPLET>*/
  
import javax.swing.*;
import java.awt.*; 
import EITLERP.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.sql.*;
import java.net.*;
 

public class frmOldCurrentStock extends javax.swing.JApplet {
    
    private EITLComboModel cmbWareHouseModel;
    private EITLTableModel DataModel;
    
    private String SelWareHouseID="";
    
    /** Initializes the applet frmCurrentStock */
    public void init() {
        System.gc();
        setSize(758,525);
        initComponents();
        GenerateCombo();
        FormatGrid();
        txtItemID.requestFocus();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbWareHouse = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtItemID = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtLotNo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtBOENo = new javax.swing.JTextField();
        cmdShow = new javax.swing.JButton();
        cmdShow1 = new javax.swing.JButton();
        lblLocation = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtOnHandQty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAllocatedQty = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtAvailableQty = new javax.swing.JTextField();
        cmdViewAllocation = new javax.swing.JButton();
        
        getContentPane().setLayout(null);
        
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        
        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText(" ITEM CURRENT STOCK INFORMATION");
        jLabel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(2, 2, 754, 25);
        
        jPanel1.setLayout(null);
        
        jPanel1.setBorder(new javax.swing.border.EtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jLabel2.setDisplayedMnemonic('W');
        jLabel2.setLabelFor(cmbWareHouse);
        jLabel2.setText("Warehouse");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 18, 72, 15);
        
        cmbWareHouse.setNextFocusableComponent(txtItemID);
        cmbWareHouse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbWareHouseFocusGained(evt);
            }
        });
        cmbWareHouse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbWareHouseItemStateChanged(evt);
            }
        });
        
        jPanel1.add(cmbWareHouse);
        cmbWareHouse.setBounds(86, 14, 258, 24);
        
        jLabel3.setDisplayedMnemonic('I');
        jLabel3.setLabelFor(txtItemID);
        jLabel3.setText("Item ID");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(36, 54, 48, 15);
        
        txtItemID.setNextFocusableComponent(txtLotNo);
        txtItemID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtItemIDFocusLost(evt);
            }
        });
        txtItemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemIDKeyPressed(evt);
            }
        });
        
        jPanel1.add(txtItemID);
        txtItemID.setBounds(86, 50, 102, 19);
        
        txtItemName.setEditable(false);
        jPanel1.add(txtItemName);
        txtItemName.setBounds(194, 50, 300, 19);
        
        jLabel4.setText("Lot No.");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(34, 90, 46, 15);
        
        txtLotNo.setNextFocusableComponent(txtBOENo);
        txtLotNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLotNoKeyPressed(evt);
            }
        });
        
        jPanel1.add(txtLotNo);
        txtLotNo.setBounds(86, 86, 102, 19);
        
        jLabel5.setText("BOE No.");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(196, 90, 70, 15);
        
        txtBOENo.setNextFocusableComponent(cmdShow);
        txtBOENo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBOENoKeyPressed(evt);
            }
        });
        
        jPanel1.add(txtBOENo);
        txtBOENo.setBounds(274, 86, 102, 19);
        
        cmdShow.setText("Show");
        cmdShow.setNextFocusableComponent(Table);
        cmdShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowActionPerformed(evt);
            }
        });
        
        jPanel1.add(cmdShow);
        cmdShow.setBounds(414, 88, 79, 25);
        
        cmdShow1.setText("Other Information");
        cmdShow1.setNextFocusableComponent(Table);
        cmdShow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShow1ActionPerformed(evt);
            }
        });
        
        jPanel1.add(cmdShow1);
        cmdShow1.setBounds(575, 91, 151, 25);
        
        lblLocation.setText(".");
        jPanel1.add(lblLocation);
        lblLocation.setBounds(502, 51, 172, 18);
        
        getContentPane().add(jPanel1);
        jPanel1.setBounds(6, 38, 748, 122);
        
        jPanel2.setLayout(null);
        
        jPanel2.setBorder(new javax.swing.border.EtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        Table.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
        ));
        Table.setNextFocusableComponent(cmbWareHouse);
        jScrollPane1.setViewportView(Table);
        
        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(4, 4, 736, 149);
        
        getContentPane().add(jPanel2);
        jPanel2.setBounds(6, 164, 746, 160);
        
        jPanel3.setLayout(null);
        
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel7.setText("On Hand Qty ");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(7, 9, 82, 15);
        
        txtOnHandQty.setEditable(false);
        txtOnHandQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel3.add(txtOnHandQty);
        txtOnHandQty.setBounds(102, 8, 110, 19);
        
        jLabel6.setText(" Allocated Qty ");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(2, 38, 87, 15);
        
        txtAllocatedQty.setEditable(false);
        txtAllocatedQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel3.add(txtAllocatedQty);
        txtAllocatedQty.setBounds(102, 34, 110, 19);
        
        jLabel8.setText("Available Qty ");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(4, 66, 85, 15);
        
        txtAvailableQty.setEditable(false);
        txtAvailableQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel3.add(txtAvailableQty);
        txtAvailableQty.setBounds(102, 62, 110, 19);
        
        getContentPane().add(jPanel3);
        jPanel3.setBounds(8, 327, 258, 98);
        
        cmdViewAllocation.setText("View Allocations");
        cmdViewAllocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdViewAllocationActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdViewAllocation);
        cmdViewAllocation.setBounds(273, 329, 158, 25);
        
    }//GEN-END:initComponents

    private void cmdViewAllocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdViewAllocationActionPerformed
        // TODO add your handling code here:
        frmAllocation ObjAllocation=new frmAllocation();
        ObjAllocation.ItemID=txtItemID.getText().trim();
        ObjAllocation.ShowWindow();
    }//GEN-LAST:event_cmdViewAllocationActionPerformed

    private void cmdShow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShow1ActionPerformed
        // TODO add your handling code here:
        try
        {
          String lItemID=txtItemID.getText();
          
          if(lItemID.trim().equals(""))
          {
              if(Table.getRowCount()>0)
              {
                lItemID=(String)Table.getValueAt(Table.getSelectedRow(), 0);
              }
          }
          
          EITLERPGLOBAL.ChangeCursorToWait(this);
          frmItemHistory ObjItem=new frmItemHistory();
          ObjItem.ShowForm(lItemID);
          EITLERPGLOBAL.ChangeCursorToDefault(this);
        }
        catch(Exception e)
        {}
    }//GEN-LAST:event_cmdShow1ActionPerformed

    private void cmbWareHouseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbWareHouseFocusGained
        // TODO add your handling code here:
        SelWareHouseID=EITLERPGLOBAL.getCombostrCode(cmbWareHouse);
    }//GEN-LAST:event_cmbWareHouseFocusGained

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2)
        {
            JOptionPane.showMessageDialog(null," Height "+getHeight()+" Width "+getWidth());
        }
    }//GEN-LAST:event_formMouseClicked

    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:]
        SelWareHouseID=EITLERPGLOBAL.getCombostrCode(cmbWareHouse);
        EITLERPGLOBAL.ChangeCursorToWait(this);
        GeneratedGrid();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }//GEN-LAST:event_cmdShowActionPerformed

    private void txtBOENoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBOENoKeyPressed
        // TODO add your handling code here:
        String ItemID="",LotNo="",strCondition="";
        ItemID=txtItemID.getText();
        
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            if(!txtItemID.getText().trim().equals("")) {
                
                strCondition=" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' ";
               
                if(!txtLotNo.getText().trim().equals(""))
                {
                   strCondition=strCondition+" AND LOT_NO='"+txtLotNo.getText().trim()+"' ";
                }
                
                LOV aList=new LOV();
                
                aList.SQL="SELECT BOE_NO FROM D_INV_ITEM_LOT_MASTER "+strCondition;
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=1;
                
                if(aList.ShowLOV()) {
                    txtBOENo.setText(aList.ReturnVal);
                }
            }
        }
        
    }//GEN-LAST:event_txtBOENoKeyPressed
    
    private void txtLotNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLotNoKeyPressed
        // TODO add your handling code here:
        
        String ItemID="";
        ItemID=txtItemID.getText();
        
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            if(!txtItemID.getText().trim().equals("")) {
                LOV aList=new LOV();
                
                aList.SQL="SELECT LOT_NO FROM D_INV_ITEM_LOT_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND WAREHOUSE_ID='"+SelWareHouseID+"'";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=1;
                
                if(aList.ShowLOV()) {
                    txtLotNo.setText(aList.ReturnVal);
                }
            }
        }
        
    }//GEN-LAST:event_txtLotNoKeyPressed
    
    private void txtItemIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemIDFocusLost
        // TODO add your handling code here:
      txtItemName.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,txtItemID.getText()));
        
        //Set appropriate warehouse
      EITLERPGLOBAL.setComboIndex(cmbWareHouse, clsItem.getItemWareHouseID(EITLERPGLOBAL.gCompanyID, txtItemID.getText()));
      lblLocation.setText(clsItem.getItemLocationID(EITLERPGLOBAL.gCompanyID, txtItemID.getText()));  
      
    }//GEN-LAST:event_txtItemIDFocusLost
    
    private void txtItemIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIDKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT ITEM_ID,ITEM_DESCRIPTION FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1 ORDER BY ITEM_ID";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtItemID.setText(aList.ReturnVal);
                txtItemName.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,aList.ReturnVal));
                lblLocation.setText(clsItem.getItemLocationID(EITLERPGLOBAL.gCompanyID, aList.ReturnVal));
            }
        }
    }//GEN-LAST:event_txtItemIDKeyPressed
    
    private void cmbWareHouseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbWareHouseItemStateChanged
        // TODO add your handling code here:
        SelWareHouseID=EITLERPGLOBAL.getCombostrCode(cmbWareHouse);
    }//GEN-LAST:event_cmbWareHouseItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JComboBox cmbWareHouse;
    private javax.swing.JButton cmdShow;
    private javax.swing.JButton cmdShow1;
    private javax.swing.JButton cmdViewAllocation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JTextField txtAllocatedQty;
    private javax.swing.JTextField txtAvailableQty;
    private javax.swing.JTextField txtBOENo;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtLotNo;
    private javax.swing.JTextField txtOnHandQty;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        HashMap List=new HashMap();
        
        //----- Generate cmbWareHouse ------- //
        cmbWareHouseModel=new EITLComboModel();
        cmbWareHouse.removeAllItems();
        cmbWareHouse.setModel(cmbWareHouseModel);
        
        List=clsWarehouse.getList(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID));
        for(int i=1;i<=List.size();i++) {
            clsWarehouse ObjWareHouse=(clsWarehouse) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.strCode=(String)ObjWareHouse.getAttribute("WAREHOUSE_ID").getObj();
            aData.Text=(String)ObjWareHouse.getAttribute("WAREHOUSE_NAME").getObj();
            cmbWareHouseModel.addElement(aData);
        }
        //------------------------------ //
        
    }
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        Table.removeAll();
        
        Table.setModel(DataModel);
        TableColumnModel ColModel=Table.getColumnModel();
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        //Add Columns to it
        DataModel.addColumn("Item Code"); //0 - Read Only
        DataModel.addColumn("Lot No."); //1
        DataModel.addColumn("BOE No."); //2 //Read Only
        DataModel.addColumn("On Hand Stock"); //3
        DataModel.addColumn("Item Description"); //6
        
        DataModel.TableReadOnly(true);
    }
    
    private void GeneratedGrid() {
        Connection tmpConn;
        Statement stTmp;
        ResultSet rsTmp;
        String strQuery="";
        double lnOnHandQty=0,lnAvailableQty=0,lnAllocatedQty=0;
        
        try
        {
           //Build Query String
           strQuery="SELECT A.ITEM_ID,A.ITEM_DESCRIPTION,B.LOT_NO,B.BOE_NO,B.ON_HAND_QTY,A.ALLOCATED_QTY,B.AVAILABLE_QTY FROM D_INV_ITEM_MASTER A,D_INV_ITEM_LOT_MASTER B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ITEM_ID=B.ITEM_ID AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND B.WAREHOUSE_ID='"+SelWareHouseID+"' " ;
           
           //Add Item Condition
           if(!txtItemID.getText().trim().equals(""))
           {
              strQuery=strQuery+" AND B.ITEM_ID='"+txtItemID.getText()+"' ";
           }
           
           //Add Lot No.
           if(!txtLotNo.getText().trim().equals(""))
           {
              strQuery=strQuery+" AND B.LOT_NO='"+txtLotNo.getText()+"' ";
           }
           
           //Add BOE No.
           if(!txtBOENo.getText().trim().equals(""))
           {
              strQuery=strQuery+" AND B.BOE_NO='"+txtBOENo.getText()+"' " ;
           }
                      
           tmpConn=data.getConn();
           stTmp=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
           rsTmp=stTmp.executeQuery(strQuery); 
           rsTmp.first();
           
           FormatGrid();
           
           if(rsTmp.getRow()>0)
           {
                while(!rsTmp.isAfterLast())
                {
                   Object[] rowData=new Object[5];
                   rowData[0]=rsTmp.getString("ITEM_ID");
                   rowData[1]=rsTmp.getString("LOT_NO");
                   rowData[2]=rsTmp.getString("BOE_NO");
                   rowData[3]=Double.toString(rsTmp.getDouble("ON_HAND_QTY"));
                   rowData[4]=rsTmp.getString("ITEM_DESCRIPTION");
        
                   lnOnHandQty+=rsTmp.getDouble("ON_HAND_QTY");
                   lnAvailableQty=rsTmp.getDouble("AVAILABLE_QTY");
                   lnAllocatedQty=rsTmp.getDouble("ALLOCATED_QTY");
                   
                   DataModel.addRow(rowData);
                   rsTmp.next();
                }
                
                lnAvailableQty=lnOnHandQty-lnAllocatedQty;
                
                txtOnHandQty.setText(Double.toString(lnOnHandQty));
                txtAvailableQty.setText(Double.toString(lnAvailableQty));
                txtAllocatedQty.setText(Double.toString(lnAllocatedQty));
                
           }

        //tmpConn.close();
        stTmp.close();
        rsTmp.close();
           
        }
        catch(Exception e)
        {
            //JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }
    
}
