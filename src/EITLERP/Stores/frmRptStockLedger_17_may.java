/*
 * frmRptStockStatement.java
 *
 * Created on August 13, 2005, 3:21 PM
 */

package EITLERP.Stores;

/**
 *
 * @author  root
 */
import EITLERP.*;
import java.sql.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import EITLERP.Utils.*;
import java.text.*;
import java.util.Date;

public class frmRptStockLedger_17_may extends javax.swing.JApplet {
    
    private EITLComboModel cmbBaseModel=new EITLComboModel();
    private EITLComboModel cmbItemTypeModel=new EITLComboModel();
    
    private int lineCounter=0;
    private int pageCounter=1;
    
    private String LeftMargin=EITLERPGLOBAL.Replicate(" ", 5);
    
    /** Initializes the applet frmRptStockStatement */
    public void init() {
        setSize(560, 380);
        initComponents();
        Bar.setVisible(false);
        GenerateCombo();
        //chkReprocess.disable();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromItemID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToItemID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        Bar = new javax.swing.JProgressBar();
        lblItem = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        chkPrint = new javax.swing.JCheckBox();
        chkReprocess = new javax.swing.JCheckBox();
        chkNonTransaction = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        cmbItemType = new javax.swing.JComboBox();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("STOCK LEDGER PROCESSING");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(8, 8, 187, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 0, 581, 30);

        jLabel2.setText("From Item Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(12, 75, 112, 15);

        getContentPane().add(txtFromItemID);
        txtFromItemID.setBounds(122, 73, 112, 20);

        jLabel3.setText("To Item Code");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(12, 105, 112, 15);

        getContentPane().add(txtToItemID);
        txtToItemID.setBounds(122, 103, 112, 20);

        jLabel4.setText("From Date ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(13, 177, 77, 15);

        txtFromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromDateActionPerformed(evt);
            }
        });

        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(88, 175, 112, 20);

        jLabel5.setText("To Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(226, 178, 53, 15);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(284, 175, 112, 20);

        cmdPrint.setText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPrint);
        cmdPrint.setBounds(429, 51, 119, 29);

        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        getContentPane().add(cmdExit);
        cmdExit.setBounds(430, 89, 116, 25);

        getContentPane().add(Bar);
        Bar.setBounds(10, 335, 200, 18);

        lblItem.setText(".");
        getContentPane().add(lblItem);
        lblItem.setBounds(12, 318, 383, 15);

        jLabel6.setText("(Keep both item code blank for all items)");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(15, 132, 260, 15);

        jLabel7.setText("Save as ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 216, 59, 15);

        getContentPane().add(txtFile);
        txtFile.setBounds(88, 214, 270, 20);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(360, 214, 35, 21);

        chkPrint.setText("Print the stock ledger");
        getContentPane().add(chkPrint);
        chkPrint.setBounds(10, 249, 183, 23);

        chkReprocess.setText("Re Process Stock Valuation");
        getContentPane().add(chkReprocess);
        chkReprocess.setBounds(261, 251, 205, 23);

        chkNonTransaction.setText("Include Non-transaction Items");
        getContentPane().add(chkNonTransaction);
        chkNonTransaction.setBounds(10, 281, 230, 23);

        jLabel10.setText("Item Type");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(14, 42, 80, 15);

        cmbItemType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemTypeItemStateChanged(evt);
            }
        });
        cmbItemType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemTypeActionPerformed(evt);
            }
        });

        getContentPane().add(cmbItemType);
        cmbItemType.setBounds(122, 40, 190, 24);

    }//GEN-END:initComponents
    
    private void txtFromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFromDateActionPerformed
    
    private void cmbItemTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbItemTypeActionPerformed
    
    private void cmbItemTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemTypeItemStateChanged
        // TODO add your handling code here:
        if(EITLERPGLOBAL.getComboCode(cmbItemType) != 2 && EITLERPGLOBAL.getComboCode(cmbItemType) != 3) {
            //chkReprocess.
            chkReprocess.setEnabled(true);
        }
        else {
            chkReprocess.setSelected(false);
            chkReprocess.setEnabled(false);
        }
        
    }//GEN-LAST:event_cmbItemTypeItemStateChanged
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null," W "+getWidth()+" H "+getHeight());
    }//GEN-LAST:event_formMouseClicked
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileDialog FileDialog=new FileDialog(findParentFrame(this));
        FileDialog.show();
        txtFile.setText(FileDialog.getDirectory()+FileDialog.getFile());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
        //GenerateReportWAvg();
        
        if(EITLERPGLOBAL.getComboCode(cmbItemType) == 1) {
            GenerateReportWAvg();
        }
        else if(EITLERPGLOBAL.getComboCode(cmbItemType) == 2) {
            GenerateReportWAvgRaw();
        }
        else if(EITLERPGLOBAL.getComboCode(cmbItemType) == 3) {
            GenerateReportSTMRaw();
        }
        
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.JCheckBox chkNonTransaction;
    private javax.swing.JCheckBox chkPrint;
    private javax.swing.JCheckBox chkReprocess;
    private javax.swing.JComboBox cmbItemType;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblItem;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtFromItemID;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtToItemID;
    // End of variables declaration//GEN-END:variables
    
    
    
    
    private void GenerateReportWAvg() {
        new Thread() {
            
            public void run() {
                DecimalFormat dFormat=new DecimalFormat("###0.000");
                DecimalFormat dFormat1=new DecimalFormat("###0.000");
                clsItemStock objItemStock=new clsItemStock();
                
                
                ResultSet rsTmp,rsItem,rsRcpt,rsIssue,rsSource,rsOpening;
                
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                double OpeningQty=0,OpeningRate=0,OpeningValue=0,InwardQty=0;
                double InwardZeroQty=0,InwardRate=0,InwardValue=0,OutwardQty=0;
                double OutwardZeroQty=0,OutwardRate=0,OutwardValue=0,ClosingQty=0;
                double ClosingZeroQty=0,ClosingRate=0,ClosingValue=0,IssueQty=0;
                double IssueZeroQty=0,IssueValue=0,IssueRate=0,DiffQty=0;
                double srcClosingQty=0,srcClosingValue=0;
                
                //======Set of variables for Summary ============//
                double tOpeningQty=0,tOpeningValue=0,tReceiptQty=0,tReceiptValue=0;
                double tIssueQty=0,tIssueValue=0,tClosingQty=0,tClosingValue=0;
                double ntOpeningQty=0,ntOpeningValue=0,ntReceiptQty=0,ntReceiptValue=0;
                double ntIssueQty=0,ntIssueValue=0,ntClosingQty=0,ntClosingValue=0;
                double bOpeningQty=0,bOpeningValue=0,bReceiptQty=0,bReceiptValue=0;
                double bIssueQty=0,bIssueValue=0,bClosingQty=0,bClosingValue=0;
                double lnQty=0,lnZeroValQty=0;
                double NTQty=0,NTValue=0,TQty=0,TValue=0;
                double ReceiptTotal=0,IssueTotal=0;
                //===============================================//
                
                //=======================sum====//
                double nRecQty=0,nRecValue=0,nIssueQty=0,nIssueValue=0,nOpnQty=0,nOpnValue=0;
                double opnvalue =0;
                //==============================//
                
                boolean Done=false;
                
                String strOpeningQty="";
                String strOpeningRate="";
                String strOpeningValue="";
                String strRcptQty="";
                String strRcptRate="";
                String strRcptValue="";
                String strIssueQty="";
                String strIssueRate="";
                String strIssueValue="";
                String strClosingQty="";
                String strClosingRate="";
                String strClosingValue="";
                String strDocNo="";
                String strDocDate="";
                
                int Max=0;
                int Min=0;
                int Row=0;
                int ItemType=EITLERPGLOBAL.getComboCode(cmbItemType);
                long StockEntryNo=0;
                long NewEntryNo=0;
                long LastStockEntryNo=0;
                
                String StockEntryDate="";
                
                try {
                    
                    if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please specify the date range");
                        return;
                    }
                    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                    Date fromDate = df.parse(txtFromDate.getText());
                    Date RestrictDate = df.parse("01/10/2009");
                    
                    
                    if(ItemType!=1 && fromDate.before(RestrictDate)) {
                        JOptionPane.showMessageDialog(null,"From Date must be equals or after 01/10/2009");
                        return;
                    }
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    
                    if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    
                    
                    
                    data.Execute("DELETE FROM STOCK_LEDGER_TEMP");
                    
                    strCondition="INSERT INTO STOCK_LEDGER_TEMP (ITEM_ID) ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    strCondition=strCondition+" UNION ";
                    strCondition=strCondition+" SELECT DISTINCT(ITEM_ID) FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE A.STM_NO=B.STM_NO AND A.STM_TYPE=B.STM_TYPE AND A.STM_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND STM_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                    
                    data.Execute(strCondition);
                    
                    
                    if(ItemType==1) {
                        //strCondition=" AND A.CATEGORY_ID IN (1,3) ";
                        strCondition=" AND A.CATEGORY_ID IN (1) ";
                    }
                    //else {
                    //  strCondition=" AND A.ITEM_ID LIKE 'RM%' ";
                    //}
                    
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    //================================================================//
                    
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY ENTRY_DATE DESC ");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        LastStockEntryNo=rsTmp.getLong("ENTRY_NO");
                    }
                    //================================================================//
                    
                    
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(DISTINCT(A.ITEM_ID)) AS THECOUNT FROM D_INV_ITEM_MASTER A,STOCK_LEDGER_TEMP B WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.MAINTAIN_STOCK=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND A.ITEM_ID=B.ITEM_ID "+strCondition+" ";
                    rsItem=data.getResult(strSQL);
                    
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    
                    //===================================================================//
                    //====================== PROCESS WEIGHTED AVERAGE   =================//
                    //===================================================================//
                    String Check = "SELECT STATUS FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE>'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' ORDER BY ENTRY_DATE ";
                    if(data.getIntValueFromDB(Check) == 0 ) {
                        if(chkReprocess.isSelected()) {
                            objItemStock.ProcessLedger(StockEntryDate, EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
                            
                            while(!objItemStock.ProcessDone) {
                                //Wait until process is completed ...
                            }
                            
                        }
                    }
                    //======================END WEIGHTED AVG. PROCESS ===================//
                    
                    
                    NTQty=0;
                    NTValue=0;
                    TQty=0;
                    TValue=0;
                    
                    
                    //==========Get the Data from Item Master for ===============//
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    
                    lineCounter=0;
                    pageCounter=1;
                    
                    PrintHeader(aFile);
                    
                    ReceiptTotal=0;
                    IssueTotal=0;
                    
                    //========= Create a text file ==============//
                    strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" ";
                    ResultSet rsCount=data.getResult(strSQL);
                    rsCount.first();
                    
                    Bar.setMaximum(rsCount.getInt("THECOUNT"));
                    Bar.setMinimum(0);
                    
                    strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MAINTAIN_STOCK=1 AND APPROVED=1 AND CANCELLED=0 "+strCondition+" GROUP BY A.ITEM_ID ORDER BY ITEM_ID "; //AND SUBSTRING(ITEM_ID,1,2) NOT IN ('90','96,'99')
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    
                    int SrNo=0;
                    boolean IncludeItem=false;
                    
                    ntOpeningQty=0;
                    ntOpeningValue=0;
                    ntReceiptQty=0;
                    ntReceiptValue=0;
                    ntIssueQty=0;
                    ntIssueValue=0;
                    ntClosingQty=0;
                    ntClosingValue=0;
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        
                        strSQL=" SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_ID='"+ItemID+"' LIMIT 1 ";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+" SELECT DISTINCT(ITEM_CODE) FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_CODE='"+ItemID+"' LIMIT 1";
                        strSQL=strSQL+" UNION ";
                        strSQL=strSQL+" SELECT DISTINCT(ITEM_ID) FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE A.STM_NO=B.STM_NO AND A.STM_TYPE=B.STM_TYPE AND A.STM_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND STM_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ITEM_ID='"+ItemID+"' LIMIT 1";
                        
                        rsTmp=data.getResult(strSQL);
                        
                        bOpeningQty=0;
                        bOpeningValue=0;
                        bReceiptQty=0;
                        bReceiptValue=0;
                        bIssueQty=0;
                        bIssueValue=0;
                        bClosingQty=0;
                        bClosingValue=0;
                        
                        if(rsTmp.getRow()>0) {
                            IncludeItem=true;
                        }
                        else {
                            IncludeItem=false;
                            
                            if(!chkNonTransaction.isSelected()) {
                                //rsOpening=data.getResult("SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+LastStockEntryNo);
                                rsOpening=data.getResult("SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo);
                                rsOpening.first();
                                
                                if(rsOpening.getRow()>0) {
                                    ResultSet rsCategory=data.getResult("SELECT CATEGORY_ID FROM D_COM_ITEM_CATEGORY WHERE CATEGORY_ID=SUBSTR('"+ItemID+"',1,LENGTH(CATEGORY_ID))");
                                    
                                    if(rsCategory.getRow()>0) {
                                        if(rsOpening.getDouble("OPENING_QTY") < 0 ) {
                                            System.out.println("Non Tansaction : ItemID = " + ItemID + " QTY. = " + EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_QTY"),3));
                                        }
                                        if(rsOpening.getDouble("OPENING_VALUE") < 0 ) {
                                            System.out.println("Non Tansaction : ItemID = " + ItemID + " VALUE = " + EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_VALUE"),3));
                                        }
                                        ntOpeningQty+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_QTY"),3);
                                        ntOpeningValue+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_VALUE"),3);
                                        
                                        NTValue+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_VALUE"),3);
                                        NTQty+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_QTY"),3);
                                        
                                        ReceiptTotal+=EITLERPGLOBAL.round(rsOpening.getDouble("OPENING_VALUE"),3);
                                        
                                    }
                                }
                                
                            }
                            
                        }
                        
                        if(chkNonTransaction.isSelected()) {
                            IncludeItem=true;
                        }
                        //Muffy
                        /*ResultSet rsCategory=data.getResult("SELECT CATEGORY_ID FROM D_COM_ITEM_CATEGORY WHERE CATEGORY_ID=SUBSTR('"+ItemID+"',1,LENGTH(CATEGORY_ID))");
                        if(rsCategory.getRow()<=0) {
                            IncludeItem=false;
                        }*/
                        
                        if(IncludeItem) {
                            
                            ItemID=ItemID+EITLERPGLOBAL.Replicate(" ",15-ItemID.length());
                            
                            lblItem.setText(ItemID);
                            lblItem.repaint();
                            
                            if(ItemName.length()>20) {
                                ItemName=ItemName.substring(0,20);
                            }
                            
                            UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",rsItem.getInt("UNIT"));
                            
                            writeLine(aFile," Item : "+ItemID+" "+ItemName+"     "+UnitName);
                            
                            OpeningQty=0;
                            OpeningValue=0;
                            
                            strSQL="SELECT * FROM D_COM_OPENING_STOCK_DETAIL WHERE ITEM_ID='"+ItemID+"' AND ENTRY_NO="+StockEntryNo;
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningQty=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_QTY"),3);
                                OpeningValue=EITLERPGLOBAL.round(rsTmp.getDouble("OPENING_VALUE"),3);
                                
                                if(OpeningQty<=0) {
                                    OpeningQty=0; //change as on 08/06/2009 -- Mrugesh
                                    OpeningRate=0;
                                    OpeningValue=0; //change as on 08/06/2009 -- Mrugesh
                                }
                                else {
                                    OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                }
                            }
                            
                            
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY, IF(SUM(LANDED_RATE*QTY) IS NULL,0,SUM(LANDED_RATE*QTY)) AS SUM_VALUE FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>'"+StockEntryDate+"' AND GRN_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("SUM_VALUE"),3);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("SUM_QTY"),3);
                            }
                            
                            // Get the Issues from opening stock date to upto from date
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY,IF(SUM(ZERO_VAL_QTY) IS NULL,0,SUM(ZERO_VAL_QTY)) AS SUM_ZERO_QTY, IF(SUM(ISSUE_VALUE) IS NULL,0,SUM(ISSUE_VALUE)) AS SUM_VALUE FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND A.ISSUE_DATE>'"+StockEntryDate+"' AND ISSUE_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_CODE='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),3);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),3);
                            }
                            
                            // Get the Issues from STM
                            strSQL="SELECT IF(SUM(QTY) IS NULL,0,SUM(QTY)) AS SUM_QTY,IF(SUM(ZERO_VAL_QTY) IS NULL,0,SUM(ZERO_VAL_QTY)) AS SUM_ZERO_QTY, IF(SUM(NET_AMOUNT) IS NULL,0,SUM(NET_AMOUNT)) AS SUM_VALUE FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.STM_NO=B.STM_NO AND A.STM_TYPE=B.STM_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND A.STM_DATE>'"+StockEntryDate+"' AND STM_DATE<'"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.ITEM_ID='"+ItemID+"'";
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                OpeningValue=EITLERPGLOBAL.round(OpeningValue-rsTmp.getDouble("SUM_VALUE"),3);
                                OpeningQty=EITLERPGLOBAL.round(OpeningQty-rsTmp.getDouble("SUM_QTY"),3);
                            }
                            
                            
                            if(OpeningQty<=0) {
                                OpeningRate=0;
                                OpeningValue=0; //change as on 08/06/2008 -- Mrugesh
                                OpeningQty=0; //change as on 08/06/2008  -- Mrugesh
                            }
                            else {
                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                            }
                            
                            tOpeningQty+=OpeningQty;
                            tOpeningValue+=OpeningValue;
                            
                            bOpeningQty+=OpeningQty;
                            bOpeningValue+=OpeningValue;
                            
                            ReceiptTotal+=OpeningValue;
                            
                            
                            strOpeningQty=dFormat1.format(OpeningQty);
                            strOpeningQty=EITLERPGLOBAL.Replicate(" ", 7-strOpeningQty.length())+strOpeningQty;
                            strOpeningRate=dFormat.format(OpeningRate);
                            strOpeningRate=EITLERPGLOBAL.Replicate(" ", 12-strOpeningRate.length())+strOpeningRate;
                            strOpeningValue=dFormat.format(OpeningValue);
                            strOpeningValue=EITLERPGLOBAL.Replicate(" ",12-strOpeningValue.length())+strOpeningValue;
                            nOpnQty += OpeningQty;
                            nOpnValue += OpeningValue;
                            writeLine(aFile," ");
                            writeLine(aFile, " OPENING  : "+EITLERPGLOBAL.Replicate(" ",11)+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue);
                            writeLine(aFile," ");
                            
                            strSQL="SELECT B.SR_NO,A.GRN_NO AS DOC_NO,A.GRN_DATE AS DOC_DATE,'+' AS OPERATION,'1' AS TORDER,B.QTY,B.LANDED_RATE*B.QTY AS VALUE,0 AS ZERO_VAL_QTY FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND GRN_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+" UNION ";
                            strSQL=strSQL+"  SELECT B.SR_NO,A.ISSUE_NO AS DOC_NO,A.ISSUE_DATE AS DOC_DATE,'-' AS OPERATION,'2' AS TORDER,B.QTY,B.ISSUE_VALUE AS VALUE,B.ZERO_VAL_QTY FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND ISSUE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+" UNION ";
                            strSQL=strSQL+"  SELECT B.SR_NO,A.STM_NO AS DOC_NO,A.STM_DATE AS DOC_DATE,'-' AS OPERATION,'3' AS TORDER,B.QTY,B.NET_AMOUNT AS VALUE,B.ZERO_VAL_QTY FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.STM_NO=B.STM_NO AND A.STM_TYPE=B.STM_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.STM_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND STM_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
                            strSQL=strSQL+"  ORDER BY DOC_DATE,TORDER,DOC_NO";
                            
                            rsTmp=data.getResult(strSQL);
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    
                                    String Operation=rsTmp.getString("OPERATION");
                                    String strOrder=rsTmp.getString("TORDER");
                                    strDocNo=rsTmp.getString("DOC_NO");
                                    strDocNo=strDocNo+EITLERPGLOBAL.Replicate(" ", 12-strDocNo.length());
                                    strDocDate=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                                    
                                    int DocSrNo=rsTmp.getInt("SR_NO");
                                    
                                    if(Operation.equals("+")) {
                                        strRcptQty=dFormat1.format(EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),3));
                                        strRcptValue=dFormat.format(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3));
                                        
                                        if(rsTmp.getDouble("QTY")==0) {
                                            strRcptRate="0.000";
                                        } else {
                                            strRcptRate=dFormat.format(EITLERPGLOBAL.round(EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3)/EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),3),3));
                                        }
                                        
                                        tReceiptQty=EITLERPGLOBAL.round(tReceiptQty+rsTmp.getDouble("QTY"),3);
                                        tReceiptValue=EITLERPGLOBAL.round(tReceiptValue+rsTmp.getDouble("VALUE"),3);
                                        
                                        bReceiptQty=EITLERPGLOBAL.round(bReceiptQty+rsTmp.getDouble("QTY"),3);
                                        bReceiptValue=EITLERPGLOBAL.round(bReceiptValue+rsTmp.getDouble("VALUE"),3);
                                        
                                        strRcptQty=EITLERPGLOBAL.Replicate(" ", 7-strRcptQty.length())+strRcptQty;
                                        strRcptRate=EITLERPGLOBAL.Replicate(" ", 12-strRcptRate.length())+strRcptRate;
                                        strRcptValue=EITLERPGLOBAL.Replicate(" ", 12-strRcptValue.length())+strRcptValue;
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty+rsTmp.getDouble("QTY"),3);
                                        OpeningValue=EITLERPGLOBAL.round(OpeningValue+rsTmp.getDouble("VALUE"),3);
                                        
                                        ReceiptTotal+=EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3);
                                        
                                        if(OpeningQty==0) {
                                            System.out.println("stock GRN  Item Id = "+ItemID+ " Running Opening Qty = "+OpeningQty+" OpeningValue = " + OpeningValue);
                                            OpeningRate=0;
                                            OpeningValue=0; // change on 07/06/2009
                                        }
                                        else {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                        }
                                        
                                        strIssueQty=EITLERPGLOBAL.Replicate(" ", 7);
                                        strIssueRate=EITLERPGLOBAL.Replicate(" ", 12);
                                        strIssueValue=EITLERPGLOBAL.Replicate(" ", 12);
                                        
                                        strClosingQty=dFormat1.format(OpeningQty);
                                        strClosingQty=EITLERPGLOBAL.Replicate(" ", 7-strClosingQty.length())+strClosingQty;
                                        
                                        strClosingRate=dFormat.format(OpeningRate);
                                        strClosingRate=EITLERPGLOBAL.Replicate(" ", 12-strClosingRate.length())+strClosingRate;
                                        if(OpeningQty == 0) {
                                            strClosingValue = "0.000";
                                        } else {
                                            strClosingValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,3));
                                        }
                                        if(OpeningQty < 0 ) {
                                            System.out.println("GRN Tansaction : ItemID = " + ItemID + " QTY. = " + EITLERPGLOBAL.round(OpeningQty,3));
                                        }
                                        if(OpeningValue < 0  && !strClosingValue.trim().equals("0.000")) {
                                            System.out.println("GRN Tansaction : ItemID = " + ItemID + " VALUE = " + EITLERPGLOBAL.round(OpeningValue,3));
                                        }
                                        strClosingValue=dFormat.format(OpeningValue);
                                        strClosingValue=EITLERPGLOBAL.Replicate(" ",12-strClosingValue.length())+strClosingValue;
                                        
                                        nRecQty+=EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),3);
                                        nRecValue+=EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3);
                                        
                                        writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                    }
                                    
                                    
                                    
                                    
                                    if(Operation.equals("-")) {
                                        double currentIssueValue=0;
                                        double currentIssueRate=0;
                                        double currentIssueQty=0;
                                        
                                        //========NEW CODE=========//
                                        currentIssueQty=EITLERPGLOBAL.round(rsTmp.getDouble("QTY"),3);
                                        
                                        if(OpeningValue<0) {
                                            System.out.println("start stock Issue Item Id = "+ItemID+ " Running Opening Qty = "+OpeningQty+" OpeningValue = " + OpeningValue);
                                            OpeningRate=0;
                                            OpeningValue=0; //change on 07/06/2009
                                        } else {
                                            
                                            if(OpeningQty>0) {
                                                OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                                OpeningValue=EITLERPGLOBAL.round(OpeningValue- EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3),3);
                                                IssueTotal+=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),3);
                                            } else {
                                                OpeningRate=0;
                                                OpeningValue=EITLERPGLOBAL.round(OpeningValue-0,3);
                                            }
                                        }
                                        
                                        currentIssueRate=OpeningRate;
                                        //currentIssueValue=EITLERPGLOBAL.round((currentIssueQty*OpeningRate),2);
                                        currentIssueValue=EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),3);
                                        
                                        OpeningQty=EITLERPGLOBAL.round(OpeningQty-currentIssueQty,3);
                                        //=====END OF NEW CODE=====//
                                        
                                        
                                        strIssueQty=dFormat1.format(EITLERPGLOBAL.round(currentIssueQty,3));
                                        strIssueValue=dFormat.format(EITLERPGLOBAL.round(currentIssueValue,3));
                                        
                                        tIssueQty+=currentIssueQty;
                                        tIssueValue+=currentIssueValue;
                                        
                                        bIssueQty+=currentIssueQty;
                                        bIssueValue+=currentIssueValue;
                                        
                                        strIssueRate=dFormat.format(EITLERPGLOBAL.round(currentIssueRate,3));
                                        
                                        strRcptQty=EITLERPGLOBAL.Replicate(" ", 7);
                                        strRcptRate=EITLERPGLOBAL.Replicate(" ", 12);
                                        strRcptValue=EITLERPGLOBAL.Replicate(" ", 12);
                                        
                                        strIssueQty=EITLERPGLOBAL.Replicate(" ", 7-strIssueQty.length())+strIssueQty;
                                        strIssueRate=EITLERPGLOBAL.Replicate(" ", 12-strIssueRate.length())+strIssueRate;
                                        strIssueValue=EITLERPGLOBAL.Replicate(" ", 12-strIssueValue.length())+strIssueValue;
                                        
                                        
                                        strClosingQty=dFormat1.format(OpeningQty);
                                        strClosingQty=EITLERPGLOBAL.Replicate(" ", 7-strClosingQty.length())+strClosingQty;
                                        
                                        strClosingRate=dFormat.format(OpeningRate);
                                        strClosingRate=EITLERPGLOBAL.Replicate(" ", 12-strClosingRate.length())+strClosingRate;
                                        if(OpeningQty == 0) {
                                            strClosingValue = "0.000";
                                        } else {
                                            strClosingValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,3));
                                        }
                                        strClosingValue=EITLERPGLOBAL.Replicate(" ",12-strClosingValue.length())+strClosingValue;
                                        if(OpeningQty<0) {
                                            System.out.println("end stock Issue Item Id = "+ItemID+ " Running Opening Qty = "+OpeningQty+" OpeningValue = " + OpeningValue);
                                        }
                                        if(OpeningQty!=0) {
                                            OpeningRate=EITLERPGLOBAL.round(OpeningValue/OpeningQty,3);
                                        }
                                        else {
                                            OpeningRate=0;
                                            OpeningValue=0; //change on 07/06/2009
                                        }
                                        
                                        if(OpeningQty<0) {
                                            System.out.println("Negative "+ItemID);
                                        }
                                        
                                        nIssueQty+=EITLERPGLOBAL.round(currentIssueQty,3);
                                        nIssueValue+=EITLERPGLOBAL.round(currentIssueValue,3);
                                        if(OpeningQty < 0 ) {
                                            System.out.println("ISSUE Tansaction : ItemID = " + ItemID + " QTY. = " + EITLERPGLOBAL.round(OpeningQty,3));
                                        }
                                        if(OpeningValue < 0  && !strClosingValue.trim().equals("0.000")) {
                                            System.out.println("ISSUE Tansaction : ItemID = " + ItemID + " VALUE = " + EITLERPGLOBAL.round(OpeningValue,3));
                                        }
                                        writeLine(aFile, strDocDate+" "+strDocNo+" "+strRcptQty+" "+strRcptRate+" "+strRcptValue+" "+strIssueQty+" "+strIssueRate+" "+strIssueValue+" "+strClosingQty+" "+strClosingRate+" "+strClosingValue);
                                    }
                                    rsTmp.next();
                                }
                            }
                            
                            if(OpeningQty==0) {
                                //System.out.println("OpeningQty="+OpeningQty);
                                //System.out.println("At closing  Item Id = "+ItemID+ " Running Opening Qty = "+OpeningQty+" OpeningValue = " + OpeningValue);
                                OpeningValue=0; //change on 07/06/2009
                                
                            }
                            
                            TValue+=OpeningValue;
                            TQty+=OpeningQty;
                            
                            
                            tClosingQty+=OpeningQty;
                            tClosingValue+=OpeningValue;
                            
                            bClosingQty+=OpeningQty;
                            bClosingValue+=OpeningValue;
                            opnvalue +=OpeningValue;
                            
                            data.Execute("UPDATE D_INV_ITEM_MASTER SET CLOSING_VALUE="+OpeningValue+" WHERE ITEM_ID='"+ItemID+"'");
                            
                            strOpeningQty=dFormat1.format(EITLERPGLOBAL.round(OpeningQty,3));
                            strOpeningQty=EITLERPGLOBAL.Replicate(" ", 7-strOpeningQty.length())+strOpeningQty;
                            strOpeningRate=dFormat.format(EITLERPGLOBAL.round(OpeningRate,3));
                            strOpeningRate=EITLERPGLOBAL.Replicate(" ", 12-strOpeningRate.length())+strOpeningRate;
                            if(OpeningQty == 0) {
                                strOpeningValue = "0.000";
                            } else {
                                strOpeningValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,3));
                            }
                            //strOpeningValue=dFormat.format(EITLERPGLOBAL.round(OpeningValue,3));
                            strOpeningValue=EITLERPGLOBAL.Replicate(" ",12-strOpeningValue.length())+strOpeningValue;
                            
                            String strOpeningQtyTotal=dFormat1.format(bOpeningQty);
                            strOpeningQtyTotal=EITLERPGLOBAL.Replicate(" ", 7-strOpeningQtyTotal.length())+strOpeningQtyTotal;
                            String strOpeningValueTotal=dFormat.format(bOpeningValue);
                            strOpeningValueTotal=EITLERPGLOBAL.Replicate(" ", 12-strOpeningValueTotal.length())+strOpeningValueTotal;
                            
                            String strReceiptQtyTotal=dFormat1.format(bReceiptQty);
                            strReceiptQtyTotal=EITLERPGLOBAL.Replicate(" ", 7-strReceiptQtyTotal.length())+strReceiptQtyTotal;
                            String strReceiptValueTotal=dFormat.format(bReceiptValue);
                            strReceiptValueTotal=EITLERPGLOBAL.Replicate(" ", 12-strReceiptValueTotal.length())+strReceiptValueTotal;
                            
                            String strIssueQtyTotal=dFormat1.format(bIssueQty);
                            strIssueQtyTotal=EITLERPGLOBAL.Replicate(" ", 7-strIssueQtyTotal.length())+strIssueQtyTotal;
                            String strIssueValueTotal=dFormat.format(bIssueValue);
                            strIssueValueTotal=EITLERPGLOBAL.Replicate(" ", 12-strIssueValueTotal.length())+strIssueValueTotal;
                            
                            String strClosingQtyTotal=dFormat1.format(bClosingQty);
                            strClosingQtyTotal=EITLERPGLOBAL.Replicate(" ", 7-strClosingQtyTotal.length())+strClosingQtyTotal;
                            
                            String strClosingValueTotal=dFormat.format(bClosingValue);
                            strClosingValueTotal=EITLERPGLOBAL.Replicate(" ", 12-strClosingValueTotal.length())+strClosingValueTotal;
                            
                            if(OpeningQty < 0 ) {
                                System.out.println("CLOSE Tansaction : ItemID = " + ItemID + " QTY. = " + EITLERPGLOBAL.round(OpeningQty,3));
                            }
                            if(OpeningValue < 0 && !strOpeningValue.trim().equals("0.000")) {
                                System.out.println("CLOSE Tansaction : ItemID = " + ItemID + " VALUE = " + EITLERPGLOBAL.round(OpeningValue,3));
                            }
                            writeLine(aFile," ");
                            writeLine(aFile, EITLERPGLOBAL.Replicate(" ",strDocDate.length())+" "+EITLERPGLOBAL.Replicate(" ",strDocNo.length())+" "+strReceiptQtyTotal+" "+EITLERPGLOBAL.Replicate(" ",12)+" "+strReceiptValueTotal+" "+strIssueQtyTotal+" "+EITLERPGLOBAL.Replicate(" ",12)+" "+strIssueValueTotal);
                            writeLine(aFile," ");
                            writeLine(aFile, " CLOSING  : "+EITLERPGLOBAL.Replicate(" ",11)+" "+strOpeningQty+" "+strOpeningRate+" "+strOpeningValue);
                            writeLine(aFile," ");
                            
                            
                        }
                        
                        rsItem.next();
                    }
                    
                    System.out.println("opnValue="+opnvalue);
                    
                    writeLine(aFile, "Total Opening Qty : " + dFormat1.format(nOpnQty));
                    writeLine(aFile, "Total Opening Value : " + dFormat.format(nOpnValue));
                    writeLine(aFile, "Total Receipt Qty : " + dFormat1.format(nRecQty));
                    writeLine(aFile, "Total Receipt Value : " + dFormat.format(nRecValue));
                    writeLine(aFile, "Total Issue Qty : " + dFormat1.format(nIssueQty));
                    writeLine(aFile, "Total Issue Value : " + dFormat.format(nIssueValue));
                    
                    
                    writeLine(aFile, " SUMMARY ");
                    writeLine(aFile, "         ");
                    writeLine(aFile, " * Transactions ");
                    writeLine(aFile, "              ");
                    writeLine(aFile, " Closing Qty : "+dFormat1.format(TQty));
                    writeLine(aFile, "       Value : "+dFormat.format(TValue));
                    
                    
                    writeLine(aFile, "         ");
                    writeLine(aFile, "         ");
                    writeLine(aFile, " * Non Transactions ");
                    writeLine(aFile, "              ");
                    writeLine(aFile, " Closing Qty : "+dFormat1.format(NTQty));
                    writeLine(aFile, "       Value : "+dFormat.format(NTValue));
                    
                    
                    writeLine(aFile, "         ");
                    writeLine(aFile, "         ");
                    writeLine(aFile, " * Total ");
                    writeLine(aFile, "              ");
                    writeLine(aFile, " Opening Qty : "+dFormat1.format(NTQty+TQty));
                    writeLine(aFile, "       Value : "+dFormat.format(NTValue+TValue));
                    
                    
                    aFile.close();
                    
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                }
                
            };
        }.start();
    }
    
    
    
    
    
    private void PrintHeader(BufferedWriter aFile) {
        String Title="";
        
        
        //Prints Page Header
        try {
            
            Title="SHRI DINESH MILLS LTD. , "+clsCompany.getCityName(EITLERPGLOBAL.gCompanyID);
            Title=EITLERPGLOBAL.Replicate(" ", (132-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (132-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title="STOCK LEDGER";
            Title=EITLERPGLOBAL.Replicate(" ", (132-Title.length())/2)+Title+EITLERPGLOBAL.Replicate(" ", (132-Title.length())/2);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title="FROM DATE "+txtFromDate.getText()+" TO "+txtToDate.getText()+"                                               RUN DATE "+EITLERPGLOBAL.getCurrentDate();
            
            aFile.write(Title);
            aFile.newLine();
            
            
            Title=EITLERPGLOBAL.Replicate("-",132);
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"Date      "+" "+"Doc. No.    "+" "+"               Inward            "+" "+"               Issue             "+" "+"               Closing           ";
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=LeftMargin+"          "+" "+"            "+" "+"    Qty         Rate        Value"+" "+"    Qty         Rate        Value"+" "+"    Qty         Rate        Value";
            
            aFile.write(Title);
            aFile.newLine();
            
            Title=EITLERPGLOBAL.Replicate("-",132);
            
            aFile.write(Title);
            aFile.newLine();
            
            lineCounter=7;
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    
    private void writeLine(BufferedWriter aFile,String strLine) {
        //Writes line maintaining page length
        try {
            if(lineCounter>=64) {
                
                aFile.write(EITLERPGLOBAL.Replicate("-",132));
                aFile.newLine();
                aFile.write("Page : "+pageCounter);
                aFile.newLine();
                
                aFile.write("\f");
                
                pageCounter++;
                
                
                PrintHeader(aFile);
            }
            
            aFile.write(LeftMargin+strLine);
            aFile.newLine();
            lineCounter++;
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void newPage(BufferedWriter aFile) {
        //Writes line maintaining page length
        try {
            
            while(lineCounter<=70) {
                aFile.write(" ");
                aFile.newLine();
                
                lineCounter++;
            }
            
            PrintHeader(aFile);
            
        }
        catch(Exception e) {
            
        }
    }
    
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    
    private void GenerateCombo() {
        try {
            
            cmbItemTypeModel=new EITLComboModel();
            cmbItemType.removeAll();
            cmbItemType.setModel(cmbItemTypeModel);
            
            ComboData objData=new ComboData();
            objData.Code=1;
            objData.Text="General";
            
            cmbItemTypeModel.addElement(objData);
            
            objData=new ComboData();
            objData.Code=2;
            objData.Text="Raw Material";
            
            cmbItemTypeModel.addElement(objData);
            
            objData=new ComboData();
            objData.Code=3;
            objData.Text="Raw Material STM";
            
            cmbItemTypeModel.addElement(objData);
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    
    private void GenerateReportWAvgRaw() {
        new Thread() {
            public void run() {
                DecimalFormat dFormat=new DecimalFormat("###0.000");
                DecimalFormat dFormat1=new DecimalFormat("###0.000");
                clsItemStock objItemStock=new clsItemStock();
                ResultSet rsTmp,rsItem,rsLot,rsIssue,rsGrn,rsReceipt;
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                //double OpeningQty=0,OpeningRate=0,OpeningValue=0,InwardQty=0;
                //double InwardZeroQty=0,InwardRate=0,InwardValue=0,OutwardQty=0;
                //double OutwardZeroQty=0,OutwardRate=0,OutwardValue=0,ClosingQty=0;
                //double ClosingZeroQty=0,ClosingRate=0,ClosingValue=0,IssueQty=0;
                //double IssueZeroQty=0,IssueValue=0,IssueRate=0,DiffQty=0;
                //double srcClosingQty=0,srcClosingValue=0;
                //======Set of variables for Summary ============//
                //double tOpeningQty=0,tOpeningValue=0,tReceiptQty=0,tReceiptValue=0;
                //double tIssueQty=0,tIssueValue=0,tClosingQty=0,tClosingValue=0;
                //double ntOpeningQty=0,ntOpeningValue=0,ntReceiptQty=0,ntReceiptValue=0;
                //double ntIssueQty=0,ntIssueValue=0,ntClosingQty=0,ntClosingValue=0;
                //double bOpeningQty=0,bOpeningValue=0,bReceiptQty=0,bReceiptValue=0;
                //double bIssueQty=0,bIssueValue=0,bClosingQty=0,bClosingValue=0;
                //double lnQty=0,lnZeroValQty=0;
                ///double NTQty=0,NTValue=0,TQty=0,TValue=0;
                //double ReceiptTotal=0,IssueTotal=0;
                //===============================================//
                
                
                //=============TOTAL VARIABLE===========//
                double nRecQty=0,nRecValue=0,nIssueQty=0,nIssueValue=0,nOpnQty=0,nOpnValue=0,nSTMQty=0,nSTMValue=0;
                double opnvalue =0;
                //==============================//
                
                //LOT VARIABLE------------------//
                String LotNo="";
                double LotQty=0.0,LotValue=0.0,LotRate=0.0;
                double LotOpeningQty=0.0,LotOpeningRate=0.0,LotOpeningValue=0.0;
                //----------------------------------//
                double TotalIssueQty=0.0,IssueQty=0.0,IssueRate=0.0;
                double OpeningQty=0.0,OpeningValue=0.0,OpeningRate=0.0;
                double ClosingQty=0.0,ClosingValue=0.0,ClosingRate=0.0;
                boolean Done=false;
                double TotalQty=0.0;
               /*String strOpeningQty="";
               String strOpeningRate="";
               String strOpeningValue="";
               String strRcptQty="";
               String strRcptRate="";
               String strRcptValue="";
               String strIssueQty="";
               String strIssueRate="";
               String strIssueValue="";
               String strClosingQty="";
               String strClosingRate="";
               String strClosingValue="";
               String strDocNo="";
               String strDocDate="";*/
                int Max=0;
                int Min=0;
                int Row=0;
                int ItemType=EITLERPGLOBAL.getComboCode(cmbItemType);
                long StockEntryNo=0;
                long NewEntryNo=0;
                long LastStockEntryNo=0;
                String StockEntryDate="";
                try {
                    if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please specify the date range");
                        return;
                    }
                    if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                    Date fromDate = df.parse(txtFromDate.getText());
                    Date RestrictDate = df.parse("01/10/2009");
                    if(fromDate.before(RestrictDate)) {
                        JOptionPane.showMessageDialog(null,"From Date must be equals or after 01/10/2009");
                        return;
                    }
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    if(ItemType==2) {
                        strCondition=" AND A.CATEGORY_ID IN (10,11,12,14) "; //10,11,12,14
                    }
                    //else {
                    //                        strCondition=" AND A.ITEM_ID LIKE 'RM%' ";
                    //                    }
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    
                    //================================================================//
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY ENTRY_DATE DESC ");
                    rsTmp.first();
                    if(rsTmp.getRow()>0) {
                        LastStockEntryNo=rsTmp.getLong("ENTRY_NO");
                    }
                    //================================================================//
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(DISTINCT(A.ITEM_ID)) AS THECOUNT FROM D_INV_ITEM_MASTER A WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.APPROVED=1 AND A.CANCELLED=0 "+strCondition+" ";
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //========= Create a text file ==============//
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    lineCounter=0;
                    pageCounter=1;
                    PrintHeader(aFile);
                    //ReceiptTotal=0;
                    //IssueTotal=0;
                    strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1 AND CANCELLED=0 "+strCondition+" ";
                    ResultSet rsCount=data.getResult(strSQL);
                    rsCount.first();
                    Bar.setMaximum(rsCount.getInt("THECOUNT"));
                    Bar.setMinimum(0);
                    strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1 AND CANCELLED=0 "+strCondition+" GROUP BY A.ITEM_ID ORDER BY ITEM_ID ";
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    int SrNo=0;
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        lblItem.setText("Item ID = " + ItemID);
                        lblItem.repaint();
                        if(ItemID.trim().equals("RM12103002")) {
                            boolean t = true;
                            System.out.println("t");
                        }
                        
                       
                        
                        //FIND THE ALL LOT BETWEEN THE OPENING DATE AND THE TO DATE
                        strSQL = "SELECT 'O' AS TYPE,ITEM_ID,LOT_NO AS LOT_NO,OPENING_QTY AS QTY,OPENING_RATE AS RATE,OPENING_VALUE AS VALUE,'' AS GRN_NO,'' AS GRN_DATE "+
                        "FROM D_COM_OPENING_STOCK_DETAIL "+
                        "WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ENTRY_NO = "+StockEntryNo+" AND ITEM_ID = '" + ItemID + "' "+
                        "UNION "+
                        "SELECT  'R' AS TYPE,B.ITEM_ID,C.AUTO_LOT_NO AS LOT_NO,C.LOT_ACCEPTED_QTY AS QTY ,B.LANDED_RATE AS RATE,B.QTY*B.LANDED_RATE AS VALUE,A.GRN_NO AS GRN_NO,A.GRN_DATE AS GRN_DATE "+
                        "FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B, D_INV_GRN_LOT C "+
                        "WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.GRN_NO = B.GRN_NO AND A.GRN_NO = C.GRN_NO " +
                        "AND A.APPROVED = 1 AND A.CANCELLED=0 "+
                        "AND B.SR_NO = C.GRN_SR_NO AND B.ITEM_ID = C.ITEM_ID "+
                        "AND A.GRN_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.GRN_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND B.ITEM_ID = '" + ItemID + "' ";
                        rsLot = data.getResult(strSQL);
                        
                        while((!rsLot.isAfterLast())&&rsLot.getRow()>0) {
                            
                            /*strSQL = "SELECT  'I' AS TYPE,A.ISSUE_NO,A.ISSUE_DATE,B.RATE,B.ISSUE_VALUE AS ISSUE_VALUE,C.ISSUED_LOT_QTY AS ISSUED_LOT_QTY,(B.RATE* C.ISSUED_LOT_QTY) AS VALUE,B.SR_NO "+
                            "FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B,D_INV_ISSUE_LOT C "+
                            "WHERE  A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.ISSUE_NO = B.ISSUE_NO AND A.ISSUE_NO = C.ISSUE_NO "+
                            "AND B.ITEM_CODE = C.ITEM_ID AND A.APPROVED = 1 AND A.CANCELED = 0 "+
                            "AND B.SR_NO = C.ISSUE_SR_NO AND C.AUTO_LOT_NO = '" + LotNo + "' "+
                            "AND B.ITEM_CODE =  '" + ItemID.trim() + "'  " +
                            "AND ISSUE_DATE >='"+StockEntryDate+"' AND ISSUE_DATE <'" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' "+
                            "UNION "+
                            "SELECT 'S' AS TYPE,A.STM_NO AS ISSUE_NO ,A.STM_DATE AS ISSUE_DATE,B.RATE,B.NET_AMOUNT AS ISSUE_VALUE,C.ISSUED_LOT_QTY AS ISSUED_LOT_QTY,(B.RATE* C.ISSUED_LOT_QTY) AS VALUE,B.SR_NO "+
                            "FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B,D_INV_STM_LOT C "+
                            "WHERE A.COMPANY_ID = "+EITLERPGLOBAL.gCompanyID+" AND A.STM_NO = B.STM_NO AND A.STM_NO = C.STM_NO "+
                            "AND B.ITEM_ID = C.ITEM_ID AND A.APPROVED =1 AND A.CANCELLED=0 AND B.SR_NO = C.STM_SR_NO "+
                            "AND C.AUTO_LOT_NO = '" + LotNo + "' "+
                            "AND B.ITEM_ID =  '" + ItemID.trim() + "' "+
                            "AND A.STM_DATE >='"+StockEntryDate+"' AND A.STM_DATE <'" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' " +
                            "ORDER BY 3";
                            */
                            
                            
                            
                            LotNo = rsLot.getString("LOT_NO");
                            LotQty = rsLot.getDouble("QTY");
                            LotRate=rsLot.getDouble("RATE");
                            LotValue=rsLot.getDouble("VALUE");
                            
                            writeLine(aFile,"Item ID:" + ItemID +" Lot No:"+LotNo);
                            if(rsLot.getString("TYPE").equals("O")) {
                                OpeningQty=LotQty;
                                OpeningValue=LotValue;
                                OpeningRate=LotRate;
                            } else if(rsLot.getString("TYPE").equals("R")) {
                                OpeningQty=0.000;
                                OpeningValue=0.000;
                                OpeningRate=0.000;
                            }
                            
                            writeLine(aFile, "           Opening:" + EITLERPGLOBAL.padLeft(13,String.valueOf(OpeningQty)," ") + EITLERPGLOBAL.padLeft(14,String.valueOf(OpeningRate)," ") + EITLERPGLOBAL.padLeft(14,String.valueOf(OpeningValue)," ") );
                            nOpnQty = EITLERPGLOBAL.round(nOpnQty + OpeningQty,3);
                            nOpnValue = EITLERPGLOBAL.round(nOpnValue + OpeningValue,3);
                            
                            ClosingQty = rsLot.getDouble("QTY");
                            IssueRate=LotRate;//rsLot.getDouble("RATE");
                            
                            if(rsLot.getString("TYPE").equals("O")) {
                                
                            }
                            else if(rsLot.getString("TYPE").equals("R")) {
                                writeLine(aFile ,EITLERPGLOBAL.formatDate(rsLot.getString("GRN_DATE")) + " " + rsLot.getString("GRN_NO") + EITLERPGLOBAL.padLeft(13,String.valueOf(ClosingQty), " ") + EITLERPGLOBAL.padLeft(14,String.valueOf(IssueRate)," ") + EITLERPGLOBAL.padLeft(13,String.valueOf(EITLERPGLOBAL.round(ClosingQty * rsLot.getDouble("RATE"),3)), " ") );
                                nRecQty = EITLERPGLOBAL.round(nRecQty + ClosingQty,3);
                                nRecValue= EITLERPGLOBAL.round(nRecValue + (ClosingQty * LotRate),3);//rsLot.getDouble("RATE");
                            }
                            
                            //writeLine(aFile ,EITLERPGLOBAL.formatDate(rsReceipt.getString("GRN_DATE")) + " " + rsReceipt.getString("GRN_NO") + EITLERPGLOBAL.padLeft(13,String.valueOf(ClosingQty), " ") + EITLERPGLOBAL.padLeft(14,String.valueOf(IssueRate)," ") + EITLERPGLOBAL.padLeft(13,String.valueOf(EITLERPGLOBAL.round(ClosingQty * rsReceipt.getDouble("RATE"),3)), " ") );
                            
                            //NOW FIND THE ISSUE OF THE LOT
                            strSQL = "SELECT  'I' AS TYPE,A.ISSUE_NO,A.ISSUE_DATE,B.RATE,B.ISSUE_VALUE AS ISSUE_VALUE,C.ISSUED_LOT_QTY AS ISSUED_LOT_QTY,(B.RATE* C.ISSUED_LOT_QTY) AS VALUE,B.SR_NO "+
                            "FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B,D_INV_ISSUE_LOT C "+
                            "WHERE  A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.ISSUE_NO = B.ISSUE_NO AND A.ISSUE_NO = C.ISSUE_NO "+
                            "AND B.ITEM_CODE = C.ITEM_ID AND A.APPROVED = 1 AND A.CANCELED = 0 "+
                            "AND B.SR_NO = C.ISSUE_SR_NO AND C.AUTO_LOT_NO = '" + LotNo + "' "+
                            "AND B.ITEM_CODE =  '" + ItemID.trim() + "'  " +
                            "AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ISSUE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' "+
                            "UNION "+
                            "SELECT 'S' AS TYPE,A.STM_NO AS ISSUE_NO ,A.STM_DATE AS ISSUE_DATE,B.RATE,B.NET_AMOUNT AS ISSUE_VALUE,C.ISSUED_LOT_QTY AS ISSUED_LOT_QTY,(B.RATE* C.ISSUED_LOT_QTY) AS VALUE,B.SR_NO "+
                            "FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B,D_INV_STM_LOT C "+
                            "WHERE A.COMPANY_ID = "+EITLERPGLOBAL.gCompanyID+" AND A.STM_NO = B.STM_NO AND A.STM_NO = C.STM_NO "+
                            "AND B.ITEM_ID = C.ITEM_ID AND A.APPROVED =1 AND A.CANCELLED=0 AND B.SR_NO = C.STM_SR_NO "+
                            "AND C.AUTO_LOT_NO = '" + LotNo + "' "+
                            "AND B.ITEM_ID =  '" + ItemID.trim() + "' "+
                            "AND A.STM_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND A.STM_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' " +
                            "ORDER BY 3";
                            
                            rsIssue = data.getResult(strSQL);
                            while((!rsIssue.isAfterLast())&&rsIssue.getRow()>0) {
                                ClosingQty = EITLERPGLOBAL.round(ClosingQty - rsIssue.getDouble("ISSUED_LOT_QTY"),3);
                                if(ClosingQty>0) {
                                    ClosingRate = IssueRate;
                                    ClosingValue= EITLERPGLOBAL.round(ClosingRate * ClosingQty,3);
                                } else{
                                    ClosingRate=0.0;
                                    ClosingValue=0.0;
                                }
                                writeLine(aFile ,EITLERPGLOBAL.formatDate(rsIssue.getString("ISSUE_DATE")) + " " + rsIssue.getString("ISSUE_NO") + EITLERPGLOBAL.padLeft(48,rsIssue.getString("ISSUED_LOT_QTY"), " ") + EITLERPGLOBAL.padLeft(13,String.valueOf(IssueRate)," ") + EITLERPGLOBAL.padLeft(13,String.valueOf(EITLERPGLOBAL.round(rsIssue.getDouble("ISSUED_LOT_QTY")*IssueRate,3))," ") + EITLERPGLOBAL.padLeft(7,String.valueOf(ClosingQty), " ")+ EITLERPGLOBAL.padLeft(13,String.valueOf(ClosingRate)," ") + EITLERPGLOBAL.padLeft(14,String.valueOf(ClosingValue)," "));
                                
                                if(rsIssue.getString("TYPE").equals("I")) {
                                    nIssueQty= EITLERPGLOBAL.round(nIssueQty + rsIssue.getDouble("ISSUED_LOT_QTY"),3);
                                    nIssueValue = EITLERPGLOBAL.round(nIssueValue + (rsIssue.getDouble("ISSUED_LOT_QTY")*IssueRate),3);
                                }
                                if(rsIssue.getString("TYPE").equals("S")) {
                                    nSTMQty = EITLERPGLOBAL.round(nSTMQty + rsIssue.getDouble("ISSUED_LOT_QTY"),3);
                                    nSTMValue =EITLERPGLOBAL.round(nSTMValue + (rsIssue.getDouble("ISSUED_LOT_QTY")*IssueRate),3);
                                }
                                rsIssue.next();
                            }
                            if(ClosingQty>0) {
                                ClosingRate = IssueRate;
                                ClosingValue= EITLERPGLOBAL.round(ClosingRate * ClosingQty,3);
                            } else{
                                ClosingRate=0.0;
                                ClosingValue=0.0;
                            }
                            writeLine(aFile, "           Closing Qty:" + ClosingQty + "  "+ "Closing Rate:"+ ClosingRate+ "  " +  "Closing Value:" + ClosingValue);
                            rsLot.next();
                        }
                        rsItem.next();
                        writeLine(aFile," ");
                        writeLine(aFile," ");
                    }

                    writeLine(aFile, "Total Opening Qty : " + dFormat1.format(nOpnQty));
                    writeLine(aFile, "Total Opening Value : " + dFormat.format(nOpnValue));
                    writeLine(aFile, "Total Receipt Qty : " + dFormat1.format(nRecQty));
                    writeLine(aFile, "Total Receipt Value : " + dFormat.format(nRecValue));
                    writeLine(aFile, "Total Issue Qty : " + dFormat1.format(nIssueQty));
                    writeLine(aFile, "Total Issue Value : " + dFormat.format(nIssueValue));
                    writeLine(aFile, "Total STM Qty : " + dFormat1.format(nSTMQty));
                    writeLine(aFile, "Total STM Value : " + dFormat.format(nSTMValue));
                 
                    
                                        
                    aFile.close();
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                }
                catch(Exception e) {
                    e.printStackTrace();
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                }
            };
        }.start();
    }
    
    
     private void GenerateReportSTMRaw() {
        new Thread() {
            public void run() {
                DecimalFormat dFormat=new DecimalFormat("###0.000");
                DecimalFormat dFormat1=new DecimalFormat("###0.000");
                clsItemStock objItemStock=new clsItemStock();
                ResultSet rsTmp,rsItem,rsLot,rsIssue,rsGrn,rsReceipt;
                String strSQL="";
                String strCondition="";
                Connection tmpConn;
                tmpConn=data.getConn();
                //======== Some Report writing Fields ==========//
                String strLine="";
                String ItemID="";
                String ItemName="";
                String UnitName="";
                //double OpeningQty=0,OpeningRate=0,OpeningValue=0,InwardQty=0;
                //double InwardZeroQty=0,InwardRate=0,InwardValue=0,OutwardQty=0;
                //double OutwardZeroQty=0,OutwardRate=0,OutwardValue=0,ClosingQty=0;
                //double ClosingZeroQty=0,ClosingRate=0,ClosingValue=0,IssueQty=0;
                //double IssueZeroQty=0,IssueValue=0,IssueRate=0,DiffQty=0;
                //double srcClosingQty=0,srcClosingValue=0;
                //======Set of variables for Summary ============//
                //double tOpeningQty=0,tOpeningValue=0,tReceiptQty=0,tReceiptValue=0;
                //double tIssueQty=0,tIssueValue=0,tClosingQty=0,tClosingValue=0;
                //double ntOpeningQty=0,ntOpeningValue=0,ntReceiptQty=0,ntReceiptValue=0;
                //double ntIssueQty=0,ntIssueValue=0,ntClosingQty=0,ntClosingValue=0;
                //double bOpeningQty=0,bOpeningValue=0,bReceiptQty=0,bReceiptValue=0;
                //double bIssueQty=0,bIssueValue=0,bClosingQty=0,bClosingValue=0;
                //double lnQty=0,lnZeroValQty=0;
                ///double NTQty=0,NTValue=0,TQty=0,TValue=0;
                //double ReceiptTotal=0,IssueTotal=0;
                //===============================================//
                
                
                //=============TOTAL VARIABLE===========//
                double nRecQty=0,nRecValue=0,nIssueQty=0,nIssueValue=0,nOpnQty=0,nOpnValue=0,nSTMQty=0,nSTMValue=0;
                double opnvalue =0;
                //==============================//
                
                //LOT VARIABLE------------------//
                String LotNo="";
                double LotQty=0.0,LotValue=0.0,LotRate=0.0;
                double LotOpeningQty=0.0,LotOpeningRate=0.0,LotOpeningValue=0.0;
                //----------------------------------//
                double TotalIssueQty=0.0,IssueQty=0.0,IssueRate=0.0;
                double OpeningQty=0.0,OpeningValue=0.0,OpeningRate=0.0;
                double ClosingQty=0.0,ClosingValue=0.0,ClosingRate=0.0;
                boolean Done=false;
                double TotalQty=0.0;
               /*String strOpeningQty="";
               String strOpeningRate="";
               String strOpeningValue="";
               String strRcptQty="";
               String strRcptRate="";
               String strRcptValue="";
               String strIssueQty="";
               String strIssueRate="";
               String strIssueValue="";
               String strClosingQty="";
               String strClosingRate="";
               String strClosingValue="";
               String strDocNo="";
               String strDocDate="";*/
                int Max=0;
                int Min=0;
                int Row=0;
                int ItemType=EITLERPGLOBAL.getComboCode(cmbItemType);
                long StockEntryNo=0;
                long NewEntryNo=0;
                long LastStockEntryNo=0;
                String StockEntryDate="";
                try {
                    if(txtFromDate.getText().trim().equals("")||txtToDate.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please specify the date range");
                        return;
                    }
                    if((!EITLERPGLOBAL.isDate(txtFromDate.getText()))||(!EITLERPGLOBAL.isDate(txtToDate.getText()))) {
                        JOptionPane.showMessageDialog(null,"Invalid date. Please enter valid dates");
                        return;
                    }
                    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                    Date fromDate = df.parse(txtFromDate.getText());
                    Date RestrictDate = df.parse("01/10/2009");
                    if(fromDate.before(RestrictDate)) {
                        JOptionPane.showMessageDialog(null,"From Date must be equals or after 01/10/2009");
                        return;
                    }
                    if(txtFile.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null,"Please enter the file name.");
                        return;
                    }
                    if(ItemType==3) {
                        strCondition=" AND A.CATEGORY_ID IN (13) "; //10,11,12,14
                    }
                    //else {
                    //                        strCondition=" AND A.ITEM_ID LIKE 'RM%' ";
                    //                    }
                    Bar.setVisible(true);
                    Bar.setValue(0);
                    if((!txtFromItemID.getText().equals(""))||(!txtToItemID.getText().equals(""))) {
                        if(!txtFromItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID>='"+txtFromItemID.getText()+"' ";
                        }
                        if(!txtToItemID.getText().equals("")) {
                            strCondition=strCondition+" AND A.ITEM_ID<='"+txtToItemID.getText()+"' ";
                        }
                    }
                    
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' ORDER BY ENTRY_DATE DESC");
                    rsTmp.first();
                    if(rsTmp.getRow()>0) {
                        StockEntryNo=rsTmp.getLong("ENTRY_NO");
                        StockEntryDate=rsTmp.getString("ENTRY_DATE");
                    }
                    
                    //================================================================//
                    //======= Find the last cut-off date stock entry =================//
                    rsTmp=data.getResult("SELECT ENTRY_NO,ENTRY_DATE FROM D_COM_OPENING_STOCK_HEADER WHERE ENTRY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY ENTRY_DATE DESC ");
                    rsTmp.first();
                    if(rsTmp.getRow()>0) {
                        LastStockEntryNo=rsTmp.getLong("ENTRY_NO");
                    }
                    //================================================================//
                    lblItem.setText("Deciding the no. of items");
                    lblItem.repaint();
                    
                    //========= Get the count ============//
                    strSQL="SELECT COUNT(DISTINCT(A.ITEM_ID)) AS THECOUNT FROM D_INV_ITEM_MASTER A WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.APPROVED=1 AND A.CANCELLED=0 "+strCondition+" ";
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    if(rsItem.getRow()>0) {
                        Max=rsItem.getInt("THECOUNT");
                    }
                    
                    //========= Create a text file ==============//
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
                    lineCounter=0;
                    pageCounter=1;
                    PrintHeader(aFile);
                    //ReceiptTotal=0;
                    //IssueTotal=0;
                    strSQL="SELECT COUNT(*) THECOUNT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1 AND CANCELLED=0 "+strCondition+" ";
                    ResultSet rsCount=data.getResult(strSQL);
                    rsCount.first();
                    Bar.setMaximum(rsCount.getInt("THECOUNT"));
                    Bar.setMinimum(0);
                    strSQL="SELECT ITEM_ID,ITEM_DESCRIPTION,UNIT FROM D_INV_ITEM_MASTER A WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1 AND CANCELLED=0 "+strCondition+" GROUP BY A.ITEM_ID ORDER BY ITEM_ID ";
                    rsItem=data.getResult(strSQL);
                    rsItem.first();
                    int SrNo=0;
                    
                    while((!rsItem.isAfterLast())&&rsItem.getRow()>0) {
                        Bar.setValue(rsItem.getRow());
                        Bar.repaint();
                        ItemID=rsItem.getString("ITEM_ID").trim()+EITLERPGLOBAL.Replicate(" ", 12-rsItem.getString("ITEM_ID").trim().length());
                        ItemName=rsItem.getString("ITEM_DESCRIPTION");
                        lblItem.setText("Item ID = " + ItemID);
                        lblItem.repaint();
                        if(ItemID.trim().equals("RM12103002")) {
                            boolean t = true;
                            System.out.println("t");
                        }
                        //FIND THE ALL LOT BETWEEN THE OPENING DATE AND THE TO DATE
                        strSQL = "SELECT 'O' AS TYPE,ITEM_ID,LOT_NO AS LOT_NO,OPENING_QTY AS QTY,OPENING_RATE AS RATE,OPENING_VALUE AS VALUE,'' AS GRN_NO,'' AS GRN_DATE "+
                        "FROM D_COM_OPENING_STOCK_DETAIL "+
                        "WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ENTRY_NO = "+StockEntryNo+" AND ITEM_ID = '" + ItemID + "' "+
                        "UNION "+
                        "SELECT  'R' AS TYPE,B.ITEM_ID,C.AUTO_LOT_NO AS LOT_NO,C.LOT_ACCEPTED_QTY AS QTY ,B.LANDED_RATE AS RATE,B.QTY*B.LANDED_RATE AS VALUE,A.GRN_NO AS GRN_NO,A.GRN_DATE AS GRN_DATE "+
                        "FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B, D_INV_GRN_LOT C "+
                        "WHERE A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.GRN_NO = B.GRN_NO AND A.GRN_NO = C.GRN_NO " +
                        "AND A.APPROVED = 1 AND A.CANCELLED=0 "+
                        "AND B.SR_NO = C.GRN_SR_NO AND B.ITEM_ID = C.ITEM_ID "+
                        "AND A.GRN_DATE >='" + StockEntryDate + "' AND A.GRN_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND B.ITEM_ID = '" + ItemID + "' ";
                        rsLot = data.getResult(strSQL);
                        
                        while((!rsLot.isAfterLast())&&rsLot.getRow()>0) {
                            LotNo = rsLot.getString("LOT_NO");
                            LotQty = rsLot.getDouble("QTY");
                            LotRate=rsLot.getDouble("RATE");
                            LotValue=rsLot.getDouble("VALUE");
                            
                            writeLine(aFile,"Item ID:" + ItemID +" Lot No:"+LotNo);
                            if(rsLot.getString("TYPE").equals("O")) {
                                OpeningQty=LotQty;
                                OpeningValue=LotValue;
                                OpeningRate=LotRate;
                            } else if(rsLot.getString("TYPE").equals("R")) {
                                OpeningQty=0.000;
                                OpeningValue=0.000;
                                OpeningRate=0.000;
                            }
                            
                            writeLine(aFile, "           Opening:" + EITLERPGLOBAL.padLeft(13,String.valueOf(OpeningQty)," ") + EITLERPGLOBAL.padLeft(14,String.valueOf(OpeningRate)," ") + EITLERPGLOBAL.padLeft(14,String.valueOf(OpeningValue)," ") );
                            nOpnQty = EITLERPGLOBAL.round(nOpnQty + OpeningQty,3);
                            nOpnValue = EITLERPGLOBAL.round(nOpnValue + OpeningValue,3);
                            
                            ClosingQty = rsLot.getDouble("QTY");
                            IssueRate=LotRate;//rsLot.getDouble("RATE");
                            
                            if(rsLot.getString("TYPE").equals("O")) {
                                
                            }
                            else if(rsLot.getString("TYPE").equals("R")) {
                                writeLine(aFile ,EITLERPGLOBAL.formatDate(rsLot.getString("GRN_DATE")) + " " + rsLot.getString("GRN_NO") + EITLERPGLOBAL.padLeft(13,String.valueOf(ClosingQty), " ") + EITLERPGLOBAL.padLeft(14,String.valueOf(IssueRate)," ") + EITLERPGLOBAL.padLeft(13,String.valueOf(EITLERPGLOBAL.round(ClosingQty * rsLot.getDouble("RATE"),3)), " ") );
                                nRecQty = EITLERPGLOBAL.round(nRecQty + ClosingQty,3);
                                nRecValue= EITLERPGLOBAL.round(nRecValue + (ClosingQty * LotRate),3);//rsLot.getDouble("RATE");
                            }
                            
                            //writeLine(aFile ,EITLERPGLOBAL.formatDate(rsReceipt.getString("GRN_DATE")) + " " + rsReceipt.getString("GRN_NO") + EITLERPGLOBAL.padLeft(13,String.valueOf(ClosingQty), " ") + EITLERPGLOBAL.padLeft(14,String.valueOf(IssueRate)," ") + EITLERPGLOBAL.padLeft(13,String.valueOf(EITLERPGLOBAL.round(ClosingQty * rsReceipt.getDouble("RATE"),3)), " ") );
                            
                            //NOW FIND THE ISSUE OF THE LOT
                            strSQL = "SELECT  'I' AS TYPE,A.ISSUE_NO,A.ISSUE_DATE,B.RATE,B.ISSUE_VALUE AS ISSUE_VALUE,C.ISSUED_LOT_QTY AS ISSUED_LOT_QTY,(B.RATE* C.ISSUED_LOT_QTY) AS VALUE,B.SR_NO "+
                            "FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B,D_INV_ISSUE_LOT C "+
                            "WHERE  A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND A.ISSUE_NO = B.ISSUE_NO AND A.ISSUE_NO = C.ISSUE_NO "+
                            "AND B.ITEM_CODE = C.ITEM_ID AND A.APPROVED = 1 AND A.CANCELED = 0 "+
                            "AND B.SR_NO = C.ISSUE_SR_NO AND C.AUTO_LOT_NO = '" + LotNo + "' "+
                            "AND B.ITEM_CODE =  '" + ItemID.trim() + "'  " +
                            "AND ISSUE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND ISSUE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' "+
                            "UNION "+
                            "SELECT 'S' AS TYPE,A.STM_NO AS ISSUE_NO ,A.STM_DATE AS ISSUE_DATE,B.RATE,B.NET_AMOUNT AS ISSUE_VALUE,C.ISSUED_LOT_QTY AS ISSUED_LOT_QTY,(B.RATE* C.ISSUED_LOT_QTY) AS VALUE,B.SR_NO "+
                            "FROM D_INV_STM_HEADER A,D_INV_STM_DETAIL B,D_INV_STM_LOT C "+
                            "WHERE A.COMPANY_ID = "+EITLERPGLOBAL.gCompanyID+" AND A.STM_NO = B.STM_NO AND A.STM_NO = C.STM_NO "+
                            "AND B.ITEM_ID = C.ITEM_ID AND A.APPROVED =1 AND A.CANCELLED=0 AND B.SR_NO = C.STM_SR_NO "+
                            "AND C.AUTO_LOT_NO = '" + LotNo + "' "+
                            "AND B.ITEM_ID =  '" + ItemID.trim() + "' "+
                            "AND A.STM_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND A.STM_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' " +
                            "ORDER BY 3";
                            
                            rsIssue = data.getResult(strSQL);
                            while((!rsIssue.isAfterLast())&&rsIssue.getRow()>0) {
                                ClosingQty = EITLERPGLOBAL.round(ClosingQty - rsIssue.getDouble("ISSUED_LOT_QTY"),3);
                                if(ClosingQty>0) {
                                    ClosingRate = IssueRate;
                                    ClosingValue= EITLERPGLOBAL.round(ClosingRate * ClosingQty,3);
                                } else{
                                    ClosingRate=0.0;
                                    ClosingValue=0.0;
                                }
                                writeLine(aFile ,EITLERPGLOBAL.formatDate(rsIssue.getString("ISSUE_DATE")) + " " + rsIssue.getString("ISSUE_NO") + EITLERPGLOBAL.padLeft(48,rsIssue.getString("ISSUED_LOT_QTY"), " ") + EITLERPGLOBAL.padLeft(13,String.valueOf(IssueRate)," ") + EITLERPGLOBAL.padLeft(13,String.valueOf(EITLERPGLOBAL.round(rsIssue.getDouble("ISSUED_LOT_QTY")*IssueRate,3))," ") + EITLERPGLOBAL.padLeft(7,String.valueOf(ClosingQty), " ")+ EITLERPGLOBAL.padLeft(13,String.valueOf(ClosingRate)," ") + EITLERPGLOBAL.padLeft(14,String.valueOf(ClosingValue)," "));
                                
                                if(rsIssue.getString("TYPE").equals("I")) {
                                    nIssueQty= EITLERPGLOBAL.round(nIssueQty + rsIssue.getDouble("ISSUED_LOT_QTY"),3);
                                    nIssueValue = EITLERPGLOBAL.round(nIssueValue + (rsIssue.getDouble("ISSUED_LOT_QTY")*IssueRate),3);
                                }
                                if(rsIssue.getString("TYPE").equals("S")) {
                                    nSTMQty = EITLERPGLOBAL.round(nSTMQty + rsIssue.getDouble("ISSUED_LOT_QTY"),3);
                                    nSTMValue =EITLERPGLOBAL.round(nSTMValue + (rsIssue.getDouble("ISSUED_LOT_QTY")*IssueRate),3);
                                }
                                rsIssue.next();
                            }
                            if(ClosingQty>0) {
                                ClosingRate = IssueRate;
                                ClosingValue= EITLERPGLOBAL.round(ClosingRate * ClosingQty,3);
                            } else{
                                ClosingRate=0.0;
                                ClosingValue=0.0;
                            }
                            writeLine(aFile, "           Closing Qty:" + ClosingQty + "  "+ "Closing Rate:"+ ClosingRate+ "  " +  "Closing Value:" + ClosingValue);
                            rsLot.next();
                        }
                        rsItem.next();
                        writeLine(aFile," ");
                        writeLine(aFile," ");
                    }

                    writeLine(aFile, "Total Opening Qty : " + dFormat1.format(nOpnQty));
                    writeLine(aFile, "Total Opening Value : " + dFormat.format(nOpnValue));
                    writeLine(aFile, "Total Receipt Qty : " + dFormat1.format(nRecQty));
                    writeLine(aFile, "Total Receipt Value : " + dFormat.format(nRecValue));
                    writeLine(aFile, "Total Issue Qty : " + dFormat1.format(nIssueQty));
                    writeLine(aFile, "Total Issue Value : " + dFormat.format(nIssueValue));
                    writeLine(aFile, "Total STM Qty : " + dFormat1.format(nSTMQty));
                    writeLine(aFile, "Total STM Value : " + dFormat.format(nSTMValue));
                 
                    aFile.close();
                    lblItem.setText("Done");
                    Bar.setVisible(false);
                    if(chkPrint.isSelected()) {
                        EITLPrint.PrintTextFile(txtFile.getText());
                    }
                }
                catch(Exception e) {
                    e.printStackTrace();
                    Bar.setVisible(false);
                    lblItem.setVisible(false);
                }
            };
        }.start();
    }
    
}
