/*
 * frmChangePassword.java
 *
 * Created on July 3, 2004, 3:36 PM
 */
package EITLERP.Stores;

import EITLERP.FeltSales.Budget.*;
import SDMLATTPAY.AdvanceSearch.*;
import EITLERP.*;
import SDMLATTPAY.Employee.clsMaster;
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.sql.*;
import javax.swing.*;
import java.text.DecimalFormat;
//import java.text.DecimalFormat;
import java.util.HashMap;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
//import EITLERP.Sales.clsExcelExporter;

/*<APPLET CODE=frmChangePassword HEIGHT=200 WIDTH=430></APPLET>*/
/**
 *
 * @author Daxesh Prajapati
 */
public class FrmRptStoresSparesRMSales extends javax.swing.JApplet {

    private clsExcel_Exporter exp = new clsExcel_Exporter();

    private EITLTableModel DataModel = new EITLTableModel();

    private EITLComboModel modelDept = new EITLComboModel();
    private EITLComboModel modelShift = new EITLComboModel();
    private EITLComboModel modelMainCategory = new EITLComboModel();
    private EITLComboModel modelCategory = new EITLComboModel();
    public EITLERP.FeltSales.Reports.clsExcelExporter exprt = new EITLERP.FeltSales.Reports.clsExcelExporter();

    //GenerateInvoiceParameterModificationCombo();
    /**
     * Initializes the applet frmChangePassword
     */
    public void init() {
        initComponents();
        setSize(1000, 750);

        jLabel1.setForeground(Color.WHITE);
        
        
        


        FormatGridStoresSparesRMSales();
        lblDate.setVisible(false);
        txtPartycode.setVisible(false);
        txtPartyName.setVisible(false);
        txtMachine.setVisible(false);
        lblPartyCode.setVisible(false);
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ExporttoExcelFileChooser = new javax.swing.JFileChooser();
        file1 = new javax.swing.JFileChooser();
        CoffRokadiBtnGrp = new javax.swing.ButtonGroup();
        LCBtnGrp = new javax.swing.ButtonGroup();
        GatePassBtnGrp = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblPartyCode = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        TabList = new javax.swing.JTabbedPane();
        rpt = new javax.swing.JPanel();
        btnLeaveAvailView = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        txtPartycode = new javax.swing.JTextField();
        txtPartyName = new javax.swing.JTextField();
        txtMachine = new javax.swing.JTextField();
        btnStroesSparesRMETE = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Stores Spares RM Sales Report");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 2, 1000, 25);

        jLabel2.setBackground(new java.awt.Color(0, 102, 153));
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 60, 1000, 10);

        lblPartyCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPartyCode.setText("Party Code : ");
        getContentPane().add(lblPartyCode);
        lblPartyCode.setBounds(10, 30, 110, 20);

        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDate.setText("Machine : ");
        getContentPane().add(lblDate);
        lblDate.setBounds(570, 30, 110, 20);

        TabList.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TabListStateChanged(evt);
            }
        });

        rpt.setLayout(null);

        btnLeaveAvailView.setText("Stores Spares RM");
        btnLeaveAvailView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeaveAvailViewActionPerformed(evt);
            }
        });
        rpt.add(btnLeaveAvailView);
        btnLeaveAvailView.setBounds(30, 10, 170, 30);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        rpt.add(jScrollPane1);
        jScrollPane1.setBounds(20, 50, 930, 410);

        TabList.addTab("Report", rpt);

        getContentPane().add(TabList);
        TabList.setBounds(10, 83, 980, 510);
        TabList.getAccessibleContext().setAccessibleName("Stores Spares RM");
        TabList.getAccessibleContext().setAccessibleDescription("");

        txtPartycode.setToolTipText("Press F1 key for search Employee No");
        txtPartycode = new JTextFieldHint(new JTextField(),"Search by F1");
        txtPartycode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPartycodeFocusLost(evt);
            }
        });
        txtPartycode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartycodeKeyPressed(evt);
            }
        });
        getContentPane().add(txtPartycode);
        txtPartycode.setBounds(120, 30, 120, 20);

        txtPartyName.setEditable(false);
        txtPartyName.setDisabledTextColor(java.awt.Color.black);
        txtPartyName.setEnabled(false);
        getContentPane().add(txtPartyName);
        txtPartyName.setBounds(250, 30, 280, 20);
        getContentPane().add(txtMachine);
        txtMachine.setBounds(690, 30, 80, 20);

        btnStroesSparesRMETE.setLabel("Export to Excel");
        btnStroesSparesRMETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStroesSparesRMETEActionPerformed(evt);
            }
        });
        getContentPane().add(btnStroesSparesRMETE);
        btnStroesSparesRMETE.setBounds(830, 620, 150, 30);
    }// </editor-fold>//GEN-END:initComponents


    private void txtPartycodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartycodeFocusLost
        // TODO add your handling code here:        
        if (!txtPartycode.getText().trim().equals("") && data.IsRecordExist("SELECT * FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE=210010 AND PARTY_CODE='" + txtPartycode.getText().trim() + "'")) {
            txtPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE PARTY_CODE='" + txtPartycode.getText() + "'"));
        } else {
            if (!txtPartycode.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Party Code doesn't exist.");
            }
            txtPartycode.setText("");
            txtPartyName.setText("");
        }
    }//GEN-LAST:event_txtPartycodeFocusLost

    private void txtPartycodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartycodeKeyPressed
if (evt.getKeyCode() == 112) //F1 Key pressed
        {
            LOV aList = new LOV();
            aList.SQL = "SELECT PARTY_CODE,PARTY_NAME,PARTY_CLOSE_IND FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE=210010 ";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            //aList.DefaultSearchOn=1;

            if (aList.ShowLOV()) {
                txtPartycode.setText(aList.ReturnVal);
                txtPartyName.setText(clsSales_Party.getPartyName(EITLERPGLOBAL.gCompanyID, aList.ReturnVal));
                int Ind = data.getIntValueFromDB("SELECT PARTY_CLOSE_IND FROM D_SAL_PARTY_MASTER WHERE PARTY_CODE='" + aList.ReturnVal + "' ");
//                clsSales_Party.getPartyCloseInd(EITLERPGLOBAL.gCompanyID, aList.ReturnVal);
                
//                txtpartyind.setText(clsSales_Party.getPartyCloseInd(EITLERPGLOBAL.gCompanyID, aList.ReturnVal));
            }
        }
    }//GEN-LAST:event_txtPartycodeKeyPressed

    private void btnStroesSparesRMETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStroesSparesRMETEActionPerformed
        // TODO add your handling code here:
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exprt.fillData(Table, new File(file1.getSelectedFile().toString() + ".xls"), "Sheet1");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnStroesSparesRMETEActionPerformed

    private void TabListStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TabListStateChanged
        // TODO add your handling code here:
        if (TabList.getTitleAt(TabList.getSelectedIndex()).equals("Reports")) {
            FormatGridStoresSparesRMSales();
            txtPartycode.setEnabled(true);
            txtMachine.setEnabled(true);
        }
    }//GEN-LAST:event_TabListStateChanged

    private void btnLeaveAvailViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeaveAvailViewActionPerformed
     GenerateStoresSparesRM();

        
    }//GEN-LAST:event_btnLeaveAvailViewActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup CoffRokadiBtnGrp;
    private javax.swing.JFileChooser ExporttoExcelFileChooser;
    private javax.swing.ButtonGroup GatePassBtnGrp;
    private javax.swing.ButtonGroup LCBtnGrp;
    private javax.swing.JTabbedPane TabList;
    private javax.swing.JTable Table;
    private javax.swing.JButton btnLeaveAvailView;
    private javax.swing.JButton btnStroesSparesRMETE;
    private javax.swing.JFileChooser file1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblPartyCode;
    private javax.swing.JPanel rpt;
    private javax.swing.JTextField txtMachine;
    private javax.swing.JTextField txtPartyName;
    private javax.swing.JTextField txtPartycode;
    // End of variables declaration//GEN-END:variables

     
   

    private void FormatGridStoresSparesRMSales() {
        DataModel = new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);

        Table.setAutoResizeMode(Table.AUTO_RESIZE_OFF);

        DataModel.addColumn("Sr.");
        DataModel.addColumn("INV NO");
        DataModel.addColumn("INV DATE");
        DataModel.addColumn("ITEM CODE");
        DataModel.addColumn("ITEM DESC.");
        DataModel.addColumn("QTY");
        DataModel.addColumn("RATE");
        DataModel.addColumn("ISSUE VALUE");
        DataModel.addColumn("SALES QTY");
        DataModel.addColumn("SALES RATE");
        DataModel.addColumn("SALES VALUE");
        DataModel.addColumn("DISC");
        DataModel.addColumn("TAXABLE VALUE");
        DataModel.addColumn("CGST %");
        DataModel.addColumn("CGST AMT");
        DataModel.addColumn("SGST %");
        DataModel.addColumn("SGST AMT");
        DataModel.addColumn("IGST %");
        DataModel.addColumn("IGST AMT");
        DataModel.addColumn("TOTAL");
        DataModel.addColumn("DIFF VALUE");
        DataModel.addColumn("DIFF %");
        DataModel.addColumn("INV VALUE");
        DataModel.addColumn("REF NO");
        DataModel.addColumn("V/C NO");
        
        
        DataModel.TableReadOnly(true);
        //Table.getColumnModel().getColumn(0).setMaxWidth(50);
    }
    
private void GenerateStoresSparesRM(){
    String cndtn = "";
    
        try {
            FormatGridStoresSparesRMSales(); //clear existing content of table
            ResultSet rsTmp;

            if (!txtPartycode.getText().trim().equals("")) {
                cndtn += " AND PARTY_CODE= '" + txtPartycode.getText().trim() + "'";
            }    
            
            if (!txtMachine.getText().trim().equals("")) {
                cndtn += " AND MACHINE_NO= '" + txtMachine.getText().trim() + "'";
            }

            String strSQL = "";

            strSQL = "SELECT * FROM (SELECT C.INVOICE_NO,DATE_FORMAT(C.INVOICE_DATE,'%d/%m/%Y') AS INV_DATE,ITEM_CODE,ITEM_DESCRIPTION,QTY,RATE,ISSUE_VALUE, "
                    + "SALES_QTY	,SALES_RATE,SALES_VALUE,DISCOUNT,TAXABLE_VALUE,CGST_RATE,CGST_AMT,SGST_RATE,SGST_AMT, "
                    + "IGST_RATE,IGST_AMT,TOTAL,DIFFERENCE_VALUE,INVOICE_VALUE,REQ_NO,VOUCHER_NO,ROUND(((DIFFERENCE_VALUE/ISSUE_VALUE)*100),2)	 AS DIFFPERCENTAGE FROM "
                    + "(SELECT A.INVOICE_NO,A.INVOICE_DATE,A.ITEM_CODE,B.ITEM_DESCRIPTION,QTY,RATE,ISSUE_VALUE, "
                    + "SALES_QTY,SALES_RATE,SALES_VALUE,DISCOUNT,TAXABLE_VALUE,CGST_RATE,CGST_AMT,SGST_RATE,SGST_AMT, "
                    + "IGST_RATE,IGST_AMT,TOTAL,DIFFERENCE_VALUE,INVOICE_VALUE,REQ_NO FROM "
                    + "(SELECT H.INVOICE_NO,H.INVOICE_DATE,ITEM_CODE,QTY,RATE,ISSUE_VALUE,SALES_QTY,SALES_RATE, "
                    + "SALES_VALUE,DISCOUNT,TAXABLE_VALUE,CGST_RATE,CGST_AMT,SGST_RATE,SGST_AMT,IGST_RATE,IGST_AMT, "
                    + "TOTAL,DIFFERENCE_VALUE,INVOICE_VALUE,REQ_NO FROM DINESHMILLS.D_INV_ISSUE_DETAIL  D, "
                    + "DINESHMILLS.D_INV_ISSUE_HEADER  H "
                    + "WHERE D.COMPANY_ID=H.COMPANY_ID AND D.ISSUE_NO=H.ISSUE_NO "
                    + "AND H.INVOICE_NO!='' ORDER BY H.INVOICE_DATE) AS A  "
                    + "LEFT JOIN "
                    + "(SELECT ITEM_ID,ITEM_DESCRIPTION FROM DINESHMILLS.D_INV_ITEM_MASTER WHERE CANCELLED=0) AS B "
                    + "ON A.ITEM_CODE=B.ITEM_ID) AS C "
                    + "LEFT JOIN "
                    + "(SELECT DISTINCT VOUCHER_NO,INVOICE_NO,INVOICE_DATE FROM FINANCE.D_FIN_VOUCHER_DETAIL "
                    + "WHERE INVOICE_NO!='' AND INVOICE_DATE!='0000-00-00') AS D "
                    + "ON C.INVOICE_DATE=D.INVOICE_DATE AND C.INVOICE_NO=D.INVOICE_NO  "
                    + "UNION ALL "
                    + "SELECT C.INVOICE_NO,DATE_FORMAT(C.INVOICE_DATE,'%d/%m/%Y') AS INV_DATE,ITEM_CODE,ITEM_DESCRIPTION,QTY,RATE,ISSUE_VALUE, "
                    + "SALES_QTY	,SALES_RATE,SALES_VALUE,DISCOUNT,TAXABLE_VALUE,CGST_RATE,CGST_AMT,SGST_RATE,SGST_AMT, "
                    + "IGST_RATE,IGST_AMT,TOTAL,DIFFERENCE_VALUE,INVOICE_VALUE,REQ_NO,VOUCHER_NO,ROUND(((DIFFERENCE_VALUE/ISSUE_VALUE)*100),2)	 AS DIFFPERCENTAGE FROM "
                    + "(SELECT A.INVOICE_NO,A.INVOICE_DATE,A.ITEM_CODE,B.ITEM_DESCRIPTION,QTY,RATE,ISSUE_VALUE, "
                    + "SALES_QTY,SALES_RATE,SALES_VALUE,DISCOUNT,TAXABLE_VALUE,CGST_RATE,CGST_AMT,SGST_RATE,SGST_AMT, "
                    + "IGST_RATE,IGST_AMT,TOTAL,DIFFERENCE_VALUE,INVOICE_VALUE,REQ_NO FROM "
                    + "(SELECT H.INVOICE_NO,H.INVOICE_DATE,ITEM_CODE,QTY,RATE,ISSUE_VALUE,SALES_QTY,SALES_RATE, "
                    + "SALES_VALUE,DISCOUNT,TAXABLE_VALUE,CGST_RATE,CGST_AMT,SGST_RATE,SGST_AMT,IGST_RATE,IGST_AMT, "
                    + "TOTAL,DIFFERENCE_VALUE,INVOICE_VALUE,REQ_NO FROM DINESHMILLSA.D_INV_ISSUE_DETAIL  D, "
                    + "DINESHMILLSA.D_INV_ISSUE_HEADER  H "
                    + "WHERE D.COMPANY_ID=H.COMPANY_ID AND D.ISSUE_NO=H.ISSUE_NO "
                    + "AND H.INVOICE_NO!='' ORDER BY H.INVOICE_DATE) AS A "
                    + "LEFT JOIN "
                    + "(SELECT ITEM_ID,ITEM_DESCRIPTION FROM DINESHMILLSA.D_INV_ITEM_MASTER WHERE CANCELLED=0) AS B "
                    + "ON A.ITEM_CODE=B.ITEM_ID) AS C "
                    + "LEFT JOIN "
                    + "(SELECT DISTINCT VOUCHER_NO,INVOICE_NO,INVOICE_DATE FROM FINANCE.D_FIN_VOUCHER_DETAIL  "
                    + "WHERE INVOICE_NO!='' AND INVOICE_DATE!='0000-00-00') AS D "
                    + "ON C.INVOICE_DATE=D.INVOICE_DATE AND C.INVOICE_NO=D.INVOICE_NO) AS F ";

            System.out.println("Query..." + strSQL);
            rsTmp = data.getResult(strSQL);
            rsTmp.first();
            System.out.println("Row no." + rsTmp.getRow());
            if (rsTmp.getRow() > 0) {
                int cnt = 0;
                DecimalFormat df = new DecimalFormat("###.##");
                while (!rsTmp.isAfterLast()) {
                    cnt++;

                    Object[] rowData = new Object[25];

                    rowData[0] = Integer.toString(cnt);
                    rowData[1] = rsTmp.getString("INVOICE_NO");
                    rowData[2] = rsTmp.getString("INV_DATE");
                    rowData[3] = rsTmp.getString("ITEM_CODE");
//                    rowData[4] = rsTmp.getString("POSITION_DESC");
//                    rowData[5] = rsTmp.getString("QUALITY_NO");
//                    rowData[6] = rsTmp.getString("GROUP_NAME");
                    rowData[4] = rsTmp.getString("ITEM_DESCRIPTION");
                    
                    rowData[5] = rsTmp.getString("QTY");
                    rowData[6] = rsTmp.getString("RATE");
                    rowData[7] = rsTmp.getString("ISSUE_VALUE");
                    rowData[8] = rsTmp.getString("SALES_QTY");
                    rowData[9] = rsTmp.getString("SALES_RATE");
                    rowData[10] = rsTmp.getString("SALES_VALUE");
                    rowData[11] = rsTmp.getString("DISCOUNT");
                    rowData[12] = rsTmp.getString("TAXABLE_VALUE");
                    rowData[13] = rsTmp.getString("CGST_RATE");
                    rowData[14] = rsTmp.getString("CGST_AMT");                    
                    rowData[15] = rsTmp.getString("SGST_RATE");
                    rowData[16] = rsTmp.getString("SGST_AMT");
                    rowData[17] = rsTmp.getString("IGST_RATE");
                    rowData[18] = rsTmp.getString("IGST_AMT");
                    rowData[19] = rsTmp.getString("TOTAL");                    
                    rowData[20] = rsTmp.getString("DIFFERENCE_VALUE");
                    rowData[21] = rsTmp.getString("DIFFPERCENTAGE");
                    rowData[22] = rsTmp.getString("INVOICE_VALUE");
                    rowData[23] = rsTmp.getString("REQ_NO");
                    rowData[24] = rsTmp.getString("VOUCHER_NO");
                    

                    DataModel.addRow(rowData);
                    rsTmp.next();
                }
                final TableColumnModel columnModel = Table.getColumnModel();
                for (int column = 0; column < Table.getColumnCount(); column++) {
                    int width = 60; // Min width
                    for (int row = 0; row < Table.getRowCount(); row++) {
                        TableCellRenderer renderer = Table.getCellRenderer(row, column);
                        Component comp = Table.prepareRenderer(renderer, row, column);
                        width = Math.max(comp.getPreferredSize().width + 10, width);
                    }
                    if (width > 300) {
                        width = 300;
                    }
                    columnModel.getColumn(column).setPreferredWidth(width);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    
    
    
    
}

}
