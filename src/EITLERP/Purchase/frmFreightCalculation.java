/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */

package EITLERP.Purchase;

/**
 *
 * @author  nhpatel
 */
  
import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.*;
import EITLERP.Stores.*;
import org.nfunk.jep.*; 
import org.nfunk.jep.type.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.text.*;
import javax.swing.text.*;
import java.sql.*;
import java.net.*;
 
/*<APPLET CODE=frmQuotApproval.class HEIGHT=528 WIDTH=775></APPLET>*/
/**
 *
 */
public class frmFreightCalculation extends javax.swing.JApplet {
    
    private int EditMode=0;
    
    private EITLTableModel DataModelH;
    private EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
    private EITLTableModel DataModelA;
        
    private boolean Updating=false;
    private boolean Updating_H=false;
    private boolean DoNotEvaluate=false;
    
    private clsFreightCalculation ObjFreight;
    
    private int SelHierarchyID=0; //Selected Hierarchy
    private int lnFromID=0;
    private String SelPrefix=""; //Selected Prefix
    private String SelSuffix=""; //Selected Prefix
    private int FFNo=0;
    
    private EITLComboModel cmbHierarchyModel;
    private EITLComboModel cmbToModel;
    private EITLComboModel cmbGrossUnitModel;
    private EITLComboModel cmbCartonUnitModel;
    private EITLComboModel cmbCurrencyModel;
    
    
    private boolean HistoryView=false;
    private String theDocNo="";
    private EITLTableModel DataModelHS;    
    
    public frmPendingApprovals frmPA;
    
    String cellLastValue="";
    
    /** Creates new form frmTemplate */
    public void init() {
        System.gc();
        //setSize(775,528);
         setSize(775,630);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        
        
        GenerateCombos();
        ObjFreight=new clsFreightCalculation();
        SetMenuForRights();
        
        if(getName().equals("Link"))
        {
            
        }
        else
        {
        if(ObjFreight.LoadData(EITLERPGLOBAL.gCompanyID)) {
            ObjFreight.MoveLast();
            DisplayData();
            
        }
        else {
            JOptionPane.showMessageDialog(null,"Error occured while loading data. Error is "+ObjFreight.LastError);
        }
        }
        
        txtAuditRemarks.setVisible(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        Tab = new javax.swing.JTabbedPane();
        Tab1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDocDate = new javax.swing.JTextField();
        chkCancelled = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        txtPONo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPODate = new javax.swing.JTextField();
        cmdNext1 = new javax.swing.JButton();
        lblRevNo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSuppID = new javax.swing.JTextField();
        txtSuppName = new javax.swing.JLabel();
        cmbGrossUnit = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        txtGrossWeight = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCartons = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtCartonWeight = new javax.swing.JTextField();
        cmbCartonUnit = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        txtRemarks = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtAirwayBill = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtFlight = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtIGM = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtSize = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtCBM = new javax.swing.JTextField();
        cmdDescriptionBig = new javax.swing.JButton();
        cmdRemarksBig = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        cmbCurrency = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        txtSuppAirLines = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtSuppFreightPO = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtSuppFreightAWB = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtSuppAWBRate = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtSuppFreightInvoice = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtSuppDifference = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtSuppAirport = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        txtAgentAirlines = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        txtAgentFreightPO = new javax.swing.JTextField();
        txtAgentFreightAWB = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txtAgentAWBRate = new javax.swing.JTextField();
        txtAgentFreightInvoice = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        txtAgentDifference = new javax.swing.JTextField();
        cmdNext4 = new javax.swing.JButton();
        cmdBack4 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        txtSuppIndianAgent = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        txtAgentIndianAgent = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtAgentAirport = new javax.swing.JTextField();
        Tab3 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        cmbHierarchy = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtFromRemarks = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        OpgApprove = new javax.swing.JRadioButton();
        OpgFinal = new javax.swing.JRadioButton();
        OpgReject = new javax.swing.JRadioButton();
        OpgHold = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        cmbSendTo = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        txtToRemarks = new javax.swing.JTextField();
        cmdBack3 = new javax.swing.JButton();
        cmdFromRemarksBig = new javax.swing.JButton();
        Tab4 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableA = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableHS = new javax.swing.JTable();
        cmdViewHistory = new javax.swing.JButton();
        cmdNormalView = new javax.swing.JButton();
        txtAuditRemarks = new javax.swing.JTextField();
        cmdShowRemarks = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("Firset Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit Record");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete Record");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("save Record");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel Record");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("FREIGHT CALCULATION SHEET");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 804, 25);

        Tab1.setLayout(null);

        Tab1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Tab1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Tab1FocusGained(evt);
            }
        });
        Tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tab1MouseClicked(evt);
            }
        });

        jLabel2.setText("Doc. No.");
        Tab1.add(jLabel2);
        jLabel2.setBounds(26, 18, 85, 15);

        txtDocNo.setBackground(new java.awt.Color(204, 204, 255));
        txtDocNo.setEditable(false);
        Tab1.add(txtDocNo);
        txtDocNo.setBounds(114, 14, 99, 19);

        jLabel3.setText("Date");
        Tab1.add(jLabel3);
        jLabel3.setBounds(254, 18, 29, 15);

        txtDocDate.setName("APPROVAL_DATE");
        txtDocDate.setNextFocusableComponent(txtPONo);
        txtDocDate.setEnabled(false);
        txtDocDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDocDateFocusGained(evt);
            }
        });

        Tab1.add(txtDocDate);
        txtDocDate.setBounds(290, 16, 100, 19);

        chkCancelled.setText("Cancelled");
        chkCancelled.setEnabled(false);
        chkCancelled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                chkCancelledFocusGained(evt);
            }
        });

        Tab1.add(chkCancelled);
        chkCancelled.setBounds(656, 8, 85, 23);

        jLabel4.setText("P.O. No.");
        Tab1.add(jLabel4);
        jLabel4.setBounds(32, 50, 70, 15);

        txtPONo.setName("INQUIRY_NO");
        txtPONo.setNextFocusableComponent(txtDescription);
        txtPONo.setEnabled(false);
        txtPONo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPONoFocusGained(evt);
            }
        });
        txtPONo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPONoKeyPressed(evt);
            }
        });

        Tab1.add(txtPONo);
        txtPONo.setBounds(114, 46, 99, 19);

        jLabel6.setText("Date");
        Tab1.add(jLabel6);
        jLabel6.setBounds(256, 50, 29, 15);

        txtPODate.setEditable(false);
        txtPODate.setEnabled(false);
        txtPODate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPODateFocusGained(evt);
            }
        });

        Tab1.add(txtPODate);
        txtPODate.setBounds(290, 48, 100, 19);

        cmdNext1.setText("Next >>");
        cmdNext1.setNextFocusableComponent(txtDocDate);
        cmdNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNext1ActionPerformed(evt);
            }
        });

        Tab1.add(cmdNext1);
        cmdNext1.setBounds(650, 394, 91, 25);

        lblRevNo.setText("...");
        Tab1.add(lblRevNo);
        lblRevNo.setBounds(215, 16, 37, 15);

        jLabel5.setText("Consignment");
        Tab1.add(jLabel5);
        jLabel5.setBounds(11, 82, 129, 15);

        txtDescription.setNextFocusableComponent(txtSuppID);
        txtDescription.setEnabled(false);
        Tab1.add(txtDescription);
        txtDescription.setBounds(138, 81, 461, 22);

        jLabel7.setText("Supplier");
        Tab1.add(jLabel7);
        jLabel7.setBounds(70, 120, 61, 15);

        txtSuppID.setEnabled(false);
        txtSuppID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuppIDFocusLost(evt);
            }
        });
        txtSuppID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSuppIDKeyPressed(evt);
            }
        });

        Tab1.add(txtSuppID);
        txtSuppID.setBounds(138, 118, 85, 22);

        txtSuppName.setText("...");
        Tab1.add(txtSuppName);
        txtSuppName.setBounds(228, 119, 368, 15);

        cmbGrossUnit.setNextFocusableComponent(txtCartons);
        cmbGrossUnit.setEnabled(false);
        Tab1.add(cmbGrossUnit);
        cmbGrossUnit.setBounds(259, 241, 94, 24);

        jLabel12.setText("Gross Weight");
        Tab1.add(jLabel12);
        jLabel12.setBounds(48, 244, 93, 15);

        txtGrossWeight.setNextFocusableComponent(cmbGrossUnit);
        txtGrossWeight.setEnabled(false);
        Tab1.add(txtGrossWeight);
        txtGrossWeight.setBounds(138, 241, 108, 22);

        jLabel13.setText("Cartons");
        Tab1.add(jLabel13);
        jLabel13.setBounds(47, 272, 93, 15);

        txtCartons.setEnabled(false);
        Tab1.add(txtCartons);
        txtCartons.setBounds(138, 269, 108, 22);

        jLabel16.setText("Carton Weight");
        Tab1.add(jLabel16);
        jLabel16.setBounds(37, 302, 108, 15);

        txtCartonWeight.setNextFocusableComponent(cmbCartonUnit);
        txtCartonWeight.setEnabled(false);
        Tab1.add(txtCartonWeight);
        txtCartonWeight.setBounds(138, 299, 108, 22);

        cmbCartonUnit.setNextFocusableComponent(txtRemarks);
        cmbCartonUnit.setEnabled(false);
        Tab1.add(cmbCartonUnit);
        cmbCartonUnit.setBounds(263, 299, 94, 24);

        jLabel17.setText("Remarks");
        Tab1.add(jLabel17);
        jLabel17.setBounds(61, 407, 77, 15);

        txtRemarks.setNextFocusableComponent(cmdNext1);
        txtRemarks.setEnabled(false);
        Tab1.add(txtRemarks);
        txtRemarks.setBounds(138, 403, 461, 22);

        jLabel8.setText("Airway Bill");
        Tab1.add(jLabel8);
        jLabel8.setBounds(58, 158, 70, 15);

        txtAirwayBill.setName("INQUIRY_NO");
        txtAirwayBill.setNextFocusableComponent(txtDescription);
        txtAirwayBill.setEnabled(false);
        Tab1.add(txtAirwayBill);
        txtAirwayBill.setBounds(138, 154, 175, 19);

        jLabel10.setText("Flight");
        Tab1.add(jLabel10);
        jLabel10.setBounds(59, 185, 70, 15);

        txtFlight.setName("INQUIRY_NO");
        txtFlight.setNextFocusableComponent(txtDescription);
        txtFlight.setEnabled(false);
        Tab1.add(txtFlight);
        txtFlight.setBounds(138, 181, 175, 19);

        jLabel11.setText("I.G.M.");
        Tab1.add(jLabel11);
        jLabel11.setBounds(59, 212, 70, 15);

        txtIGM.setName("INQUIRY_NO");
        txtIGM.setNextFocusableComponent(txtDescription);
        txtIGM.setEnabled(false);
        Tab1.add(txtIGM);
        txtIGM.setBounds(138, 208, 175, 19);

        jLabel14.setText("Size");
        Tab1.add(jLabel14);
        jLabel14.setBounds(96, 337, 32, 15);

        txtSize.setName("INQUIRY_NO");
        txtSize.setNextFocusableComponent(txtDescription);
        txtSize.setEnabled(false);
        Tab1.add(txtSize);
        txtSize.setBounds(138, 333, 175, 19);

        jLabel15.setText("CBM");
        Tab1.add(jLabel15);
        jLabel15.setBounds(93, 369, 32, 15);

        txtCBM.setName("INQUIRY_NO");
        txtCBM.setNextFocusableComponent(txtDescription);
        txtCBM.setEnabled(false);
        Tab1.add(txtCBM);
        txtCBM.setBounds(138, 365, 175, 19);

        cmdDescriptionBig.setText("...");
        cmdDescriptionBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDescriptionBigActionPerformed(evt);
            }
        });

        Tab1.add(cmdDescriptionBig);
        cmdDescriptionBig.setBounds(601, 81, 31, 22);

        cmdRemarksBig.setText("...");
        cmdRemarksBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemarksBigActionPerformed(evt);
            }
        });

        Tab1.add(cmdRemarksBig);
        cmdRemarksBig.setBounds(602, 403, 36, 22);

        Tab.addTab("Header ", Tab1);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel18.setText("Currency");
        jPanel2.add(jLabel18);
        jLabel18.setBounds(8, 12, 65, 15);

        cmbCurrency.setNextFocusableComponent(txtSuppAirLines);
        cmbCurrency.setEnabled(false);
        jPanel2.add(cmbCurrency);
        cmbCurrency.setBounds(78, 7, 156, 24);

        jLabel21.setText("Air Lines");
        jPanel2.add(jLabel21);
        jLabel21.setBounds(31, 105, 76, 15);

        txtSuppAirLines.setNextFocusableComponent(txtSuppFreightPO);
        txtSuppAirLines.setEnabled(false);
        txtSuppAirLines.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuppAirLinesFocusLost(evt);
            }
        });
        txtSuppAirLines.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtSuppAirLinesInputMethodTextChanged(evt);
            }
        });
        txtSuppAirLines.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                txtSuppAirLinesVetoableChange(evt);
            }
        });

        jPanel2.add(txtSuppAirLines);
        txtSuppAirLines.setBounds(116, 101, 177, 22);

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(jPanel3);
        jPanel3.setBounds(7, 70, 727, 6);

        jLabel22.setText("SUPPLIER");
        jPanel2.add(jLabel22);
        jLabel22.setBounds(136, 52, 76, 15);

        jLabel23.setText("AIRFREIGHT");
        jPanel2.add(jLabel23);
        jLabel23.setBounds(363, 52, 93, 15);

        jLabel24.setText("Freight P.O.");
        jPanel2.add(jLabel24);
        jLabel24.setBounds(22, 161, 88, 15);

        txtSuppFreightPO.setNextFocusableComponent(txtSuppFreightAWB);
        txtSuppFreightPO.setEnabled(false);
        txtSuppFreightPO.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuppFreightPOFocusLost(evt);
            }
        });

        jPanel2.add(txtSuppFreightPO);
        txtSuppFreightPO.setBounds(116, 158, 108, 22);

        jLabel27.setText("Freight AWB");
        jPanel2.add(jLabel27);
        jLabel27.setBounds(22, 185, 88, 15);

        txtSuppFreightAWB.setNextFocusableComponent(txtSuppAWBRate);
        txtSuppFreightAWB.setEnabled(false);
        txtSuppFreightAWB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuppFreightAWBFocusLost(evt);
            }
        });

        jPanel2.add(txtSuppFreightAWB);
        txtSuppFreightAWB.setBounds(116, 182, 108, 22);

        jLabel28.setText("AWB Rate");
        jPanel2.add(jLabel28);
        jLabel28.setBounds(23, 210, 88, 15);

        txtSuppAWBRate.setNextFocusableComponent(txtSuppFreightInvoice);
        txtSuppAWBRate.setEnabled(false);
        txtSuppAWBRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuppAWBRateFocusLost(evt);
            }
        });

        jPanel2.add(txtSuppAWBRate);
        txtSuppAWBRate.setBounds(116, 207, 108, 22);

        jLabel29.setText("Freight Invoice");
        jPanel2.add(jLabel29);
        jLabel29.setBounds(11, 237, 101, 15);

        txtSuppFreightInvoice.setNextFocusableComponent(txtSuppDifference);
        txtSuppFreightInvoice.setEnabled(false);
        txtSuppFreightInvoice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuppFreightInvoiceFocusLost(evt);
            }
        });

        jPanel2.add(txtSuppFreightInvoice);
        txtSuppFreightInvoice.setBounds(116, 233, 108, 22);

        jLabel30.setText("Difference");
        jPanel2.add(jLabel30);
        jLabel30.setBounds(25, 262, 88, 15);

        txtSuppDifference.setNextFocusableComponent(txtSuppAirport);
        txtSuppDifference.setEnabled(false);
        txtSuppDifference.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuppDifferenceFocusLost(evt);
            }
        });

        jPanel2.add(txtSuppDifference);
        txtSuppDifference.setBounds(116, 259, 108, 22);

        jLabel42.setText("Air Port of");
        jPanel2.add(jLabel42);
        jLabel42.setBounds(13, 315, 100, 15);

        txtSuppAirport.setEnabled(false);
        jPanel2.add(txtSuppAirport);
        txtSuppAirport.setBounds(116, 312, 169, 22);

        jLabel43.setText("Departure");
        jPanel2.add(jLabel43);
        jLabel43.setBounds(13, 332, 95, 15);

        jLabel45.setText("Air Lines");
        jPanel2.add(jLabel45);
        jLabel45.setBounds(362, 104, 71, 15);

        txtAgentAirlines.setNextFocusableComponent(txtAgentFreightPO);
        txtAgentAirlines.setEnabled(false);
        txtAgentAirlines.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgentAirlinesFocusLost(evt);
            }
        });

        jPanel2.add(txtAgentAirlines);
        txtAgentAirlines.setBounds(438, 100, 205, 22);

        jLabel46.setText("Freight P.O.");
        jPanel2.add(jLabel46);
        jLabel46.setBounds(344, 160, 88, 15);

        txtAgentFreightPO.setNextFocusableComponent(txtAgentFreightAWB);
        txtAgentFreightPO.setEnabled(false);
        txtAgentFreightPO.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgentFreightPOFocusLost(evt);
            }
        });

        jPanel2.add(txtAgentFreightPO);
        txtAgentFreightPO.setBounds(438, 157, 108, 22);

        txtAgentFreightAWB.setNextFocusableComponent(txtAgentAWBRate);
        txtAgentFreightAWB.setEnabled(false);
        txtAgentFreightAWB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgentFreightAWBFocusLost(evt);
            }
        });

        jPanel2.add(txtAgentFreightAWB);
        txtAgentFreightAWB.setBounds(438, 181, 108, 22);

        jLabel47.setText("Freight AWB");
        jPanel2.add(jLabel47);
        jLabel47.setBounds(344, 184, 88, 15);

        jLabel48.setText("AWB Rate");
        jPanel2.add(jLabel48);
        jLabel48.setBounds(345, 209, 88, 15);

        txtAgentAWBRate.setNextFocusableComponent(txtAgentFreightInvoice);
        txtAgentAWBRate.setEnabled(false);
        txtAgentAWBRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgentAWBRateFocusLost(evt);
            }
        });

        jPanel2.add(txtAgentAWBRate);
        txtAgentAWBRate.setBounds(438, 206, 108, 22);

        txtAgentFreightInvoice.setNextFocusableComponent(txtAgentDifference);
        txtAgentFreightInvoice.setEnabled(false);
        txtAgentFreightInvoice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgentFreightInvoiceFocusLost(evt);
            }
        });

        jPanel2.add(txtAgentFreightInvoice);
        txtAgentFreightInvoice.setBounds(438, 232, 108, 22);

        jLabel49.setText("Freight Invoice");
        jPanel2.add(jLabel49);
        jLabel49.setBounds(334, 236, 100, 15);

        jLabel50.setText("Difference");
        jPanel2.add(jLabel50);
        jLabel50.setBounds(347, 261, 88, 15);

        txtAgentDifference.setEnabled(false);
        txtAgentDifference.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgentDifferenceFocusLost(evt);
            }
        });

        jPanel2.add(txtAgentDifference);
        txtAgentDifference.setBounds(438, 258, 108, 22);

        cmdNext4.setText("Next");
        cmdNext4.setNextFocusableComponent(cmdBack4);
        jPanel2.add(cmdNext4);
        cmdNext4.setBounds(643, 400, 88, 25);

        cmdBack4.setText("Back");
        cmdBack4.setNextFocusableComponent(cmbCurrency);
        jPanel2.add(cmdBack4);
        cmdBack4.setBounds(644, 434, 88, 25);

        jLabel25.setText("Indian Agent");
        jPanel2.add(jLabel25);
        jLabel25.setBounds(14, 134, 94, 15);

        txtSuppIndianAgent.setNextFocusableComponent(txtSuppFreightPO);
        txtSuppIndianAgent.setEnabled(false);
        jPanel2.add(txtSuppIndianAgent);
        txtSuppIndianAgent.setBounds(116, 130, 177, 22);

        jLabel56.setText("Indian Agent");
        jPanel2.add(jLabel56);
        jLabel56.setBounds(342, 133, 90, 15);

        txtAgentIndianAgent.setNextFocusableComponent(txtAgentFreightPO);
        txtAgentIndianAgent.setEnabled(false);
        jPanel2.add(txtAgentIndianAgent);
        txtAgentIndianAgent.setBounds(438, 129, 205, 22);

        jLabel44.setText("Departure");
        jPanel2.add(jLabel44);
        jLabel44.setBounds(335, 326, 95, 15);

        jLabel51.setText("Air Port of");
        jPanel2.add(jLabel51);
        jLabel51.setBounds(335, 309, 100, 15);

        txtAgentAirport.setEnabled(false);
        jPanel2.add(txtAgentAirport);
        txtAgentAirport.setBounds(438, 306, 169, 22);

        Tab.addTab("Comparison", jPanel2);

        Tab3.setLayout(null);

        Tab3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Tab3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Tab3FocusGained(evt);
            }
        });

        jLabel31.setText("Hierarchy ");
        Tab3.add(jLabel31);
        jLabel31.setBounds(16, 18, 66, 15);

        cmbHierarchy.setNextFocusableComponent(OpgApprove);
        cmbHierarchy.setEnabled(false);
        cmbHierarchy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbHierarchyFocusGained(evt);
            }
        });
        cmbHierarchy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbHierarchyItemStateChanged(evt);
            }
        });

        Tab3.add(cmbHierarchy);
        cmbHierarchy.setBounds(86, 14, 184, 24);

        jLabel32.setText("From");
        Tab3.add(jLabel32);
        jLabel32.setBounds(20, 52, 56, 15);

        txtFrom.setBackground(new java.awt.Color(204, 204, 204));
        Tab3.add(txtFrom);
        txtFrom.setBounds(86, 50, 182, 19);

        jLabel35.setText("Remarks");
        Tab3.add(jLabel35);
        jLabel35.setBounds(20, 82, 62, 15);

        txtFromRemarks.setBackground(new java.awt.Color(204, 204, 204));
        txtFromRemarks.setEnabled(false);
        Tab3.add(txtFromRemarks);
        txtFromRemarks.setBounds(86, 78, 518, 19);

        jLabel36.setText("Your Action  ");
        Tab3.add(jLabel36);
        jLabel36.setBounds(8, 124, 76, 15);

        jPanel6.setLayout(null);

        jPanel6.setBorder(new javax.swing.border.EtchedBorder());
        OpgApprove.setText("Approve & Forward");
        buttonGroup1.add(OpgApprove);
        OpgApprove.setNextFocusableComponent(OpgFinal);
        OpgApprove.setEnabled(false);
        OpgApprove.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgApproveFocusGained(evt);
            }
        });
        OpgApprove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgApproveMouseClicked(evt);
            }
        });

        jPanel6.add(OpgApprove);
        OpgApprove.setBounds(6, 6, 166, 23);

        OpgFinal.setText("Final Approve");
        buttonGroup1.add(OpgFinal);
        OpgFinal.setNextFocusableComponent(OpgReject);
        OpgFinal.setEnabled(false);
        OpgFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgFinalFocusGained(evt);
            }
        });
        OpgFinal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgFinalMouseClicked(evt);
            }
        });

        jPanel6.add(OpgFinal);
        OpgFinal.setBounds(6, 32, 136, 20);

        OpgReject.setText("Reject");
        buttonGroup1.add(OpgReject);
        OpgReject.setNextFocusableComponent(OpgHold);
        OpgReject.setEnabled(false);
        OpgReject.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgRejectFocusGained(evt);
            }
        });
        OpgReject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgRejectMouseClicked(evt);
            }
        });

        jPanel6.add(OpgReject);
        OpgReject.setBounds(6, 54, 136, 20);

        OpgHold.setSelected(true);
        OpgHold.setText("Hold Document");
        buttonGroup1.add(OpgHold);
        OpgHold.setNextFocusableComponent(cmbSendTo);
        OpgHold.setEnabled(false);
        OpgHold.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgHoldFocusGained(evt);
            }
        });
        OpgHold.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgHoldMouseClicked(evt);
            }
        });

        jPanel6.add(OpgHold);
        OpgHold.setBounds(6, 76, 136, 20);

        Tab3.add(jPanel6);
        jPanel6.setBounds(88, 120, 182, 100);

        jLabel33.setText("Send To");
        Tab3.add(jLabel33);
        jLabel33.setBounds(18, 228, 60, 15);

        cmbSendTo.setNextFocusableComponent(txtToRemarks);
        cmbSendTo.setEnabled(false);
        cmbSendTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbSendToFocusGained(evt);
            }
        });

        Tab3.add(cmbSendTo);
        cmbSendTo.setBounds(84, 224, 184, 24);

        jLabel34.setText("Remarks");
        Tab3.add(jLabel34);
        jLabel34.setBounds(16, 264, 60, 15);

        txtToRemarks.setNextFocusableComponent(cmdBack3);
        txtToRemarks.setEnabled(false);
        txtToRemarks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToRemarksFocusGained(evt);
            }
        });

        Tab3.add(txtToRemarks);
        txtToRemarks.setBounds(84, 260, 516, 19);

        cmdBack3.setText("<<Back");
        cmdBack3.setNextFocusableComponent(cmbHierarchy);
        cmdBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBack3ActionPerformed(evt);
            }
        });

        Tab3.add(cmdBack3);
        cmdBack3.setBounds(634, 338, 102, 25);

        cmdFromRemarksBig.setText("...");
        cmdFromRemarksBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFromRemarksBigActionPerformed(evt);
            }
        });

        Tab3.add(cmdFromRemarksBig);
        cmdFromRemarksBig.setBounds(608, 77, 39, 22);

        Tab.addTab("Approval", Tab3);

        Tab4.setLayout(null);

        Tab4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel26.setText("Document Approval Status");
        Tab4.add(jLabel26);
        jLabel26.setBounds(12, 10, 242, 15);

        TableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TableA);

        Tab4.add(jScrollPane2);
        jScrollPane2.setBounds(12, 40, 654, 144);

        jLabel9.setText("Document Update History");
        Tab4.add(jLabel9);
        jLabel9.setBounds(14, 191, 182, 15);

        TableHS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TableHS);

        Tab4.add(jScrollPane3);
        jScrollPane3.setBounds(14, 207, 497, 148);

        cmdViewHistory.setText("View Revisions");
        cmdViewHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdViewHistoryActionPerformed(evt);
            }
        });

        Tab4.add(cmdViewHistory);
        cmdViewHistory.setBounds(533, 205, 132, 24);

        cmdNormalView.setText("Back to Normal");
        cmdNormalView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNormalViewActionPerformed(evt);
            }
        });

        Tab4.add(cmdNormalView);
        cmdNormalView.setBounds(533, 235, 132, 24);

        txtAuditRemarks.setEnabled(false);
        Tab4.add(txtAuditRemarks);
        txtAuditRemarks.setBounds(536, 300, 129, 19);

        cmdShowRemarks.setText("Show Remarks");
        cmdShowRemarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowRemarksActionPerformed(evt);
            }
        });

        Tab4.add(cmdShowRemarks);
        cmdShowRemarks.setBounds(533, 266, 132, 24);

        Tab.addTab("Status", Tab4);

        getContentPane().add(Tab);
        Tab.setBounds(4, 68, 752, 505);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(7, 579, 750, 22);

    }//GEN-END:initComponents

    private void cmdShowRemarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowRemarksActionPerformed
        // TODO add your handling code here:
        if(TableHS.getRowCount()>0&&TableHS.getSelectedRow()>=0)
        {
          txtAuditRemarks.setText((String)TableHS.getValueAt(TableHS.getSelectedRow(),4));
          BigEdit bigEdit=new BigEdit();
          bigEdit.theText=txtAuditRemarks;
          bigEdit.ShowEdit();
        }
        
    }//GEN-LAST:event_cmdShowRemarksActionPerformed

    private void cmdFromRemarksBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFromRemarksBigActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtFromRemarks;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_cmdFromRemarksBigActionPerformed

    private void cmdRemarksBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemarksBigActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtRemarks;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_cmdRemarksBigActionPerformed

    private void cmdDescriptionBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDescriptionBigActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtDescription;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_cmdDescriptionBigActionPerformed

    private void txtAgentDifferenceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgentDifferenceFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtAgentDifferenceFocusLost

    private void txtAgentFreightInvoiceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgentFreightInvoiceFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtAgentFreightInvoiceFocusLost

    private void txtAgentAWBRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgentAWBRateFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtAgentAWBRateFocusLost

    private void txtAgentFreightAWBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgentFreightAWBFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtAgentFreightAWBFocusLost

    private void txtAgentFreightPOFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgentFreightPOFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtAgentFreightPOFocusLost

    private void txtAgentAirlinesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgentAirlinesFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtAgentAirlinesFocusLost

    private void txtSuppDifferenceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppDifferenceFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSuppDifferenceFocusLost

    private void txtSuppFreightInvoiceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppFreightInvoiceFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSuppFreightInvoiceFocusLost

    private void txtSuppAWBRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppAWBRateFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSuppAWBRateFocusLost

    private void txtSuppFreightAWBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppFreightAWBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSuppFreightAWBFocusLost

    private void txtSuppFreightPOFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppFreightPOFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSuppFreightPOFocusLost

    private void txtSuppAirLinesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppAirLinesFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSuppAirLinesFocusLost

    private void txtSuppAirLinesVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_txtSuppAirLinesVetoableChange
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSuppAirLinesVetoableChange

    private void txtSuppAirLinesInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtSuppAirLinesInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSuppAirLinesInputMethodTextChanged

    private void txtSuppIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppIDFocusLost
        // TODO add your handling code here:
        if(!txtSuppID.getText().trim().equals("")) {
            txtSuppName.setText(clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID, txtSuppID.getText()));
        }
    }//GEN-LAST:event_txtSuppIDFocusLost

    private void txtSuppIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSuppIDKeyPressed
        // TODO add your handling code here:
        //=========== Supplier List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT SUPPLIER_CODE,SUPP_NAME FROM D_COM_SUPP_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND BLOCKED='N' AND APPROVED=1 AND ST35_REGISTERED=1 ORDER BY SUPP_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                
                txtSuppID.setText(aList.ReturnVal);
                txtSuppName.setText(clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,aList.ReturnVal));
            }
        }
        //=========================================
        
    }//GEN-LAST:event_txtSuppIDKeyPressed

    private void cmdNormalViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNormalViewActionPerformed
        // TODO add your handling code here:
        ObjFreight.LoadData(EITLERPGLOBAL.gCompanyID);
    }//GEN-LAST:event_cmdNormalViewActionPerformed

    private void cmdViewHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdViewHistoryActionPerformed
        // TODO add your handling code here:
        String DocNo=txtDocNo.getText();
        ObjFreight.ShowHistory(EITLERPGLOBAL.gCompanyID, DocNo);
        MoveLast();
    }//GEN-LAST:event_cmdViewHistoryActionPerformed
                
        
    private void txtToRemarksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToRemarksFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter the remarks for next user");
    }//GEN-LAST:event_txtToRemarksFocusGained
    
    private void cmbSendToFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbSendToFocusGained
        // TODO add your handling code here:
        ShowMessage("Select the user to whome document to be forwarded");
    }//GEN-LAST:event_cmbSendToFocusGained
    
    private void OpgHoldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgHoldFocusGained
        // TODO add your handling code here:
        ShowMessage("Select the approval action");
    }//GEN-LAST:event_OpgHoldFocusGained
    
    private void OpgRejectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgRejectFocusGained
        // TODO add your handling code here:
        ShowMessage("Select the approval action");
    }//GEN-LAST:event_OpgRejectFocusGained
    
    private void OpgFinalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgFinalFocusGained
        // TODO add your handling code here:
        ShowMessage("Select the approval action");
    }//GEN-LAST:event_OpgFinalFocusGained
    
    private void OpgApproveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgApproveFocusGained
        // TODO add your handling code here:
        ShowMessage("Select the approval action");
    }//GEN-LAST:event_OpgApproveFocusGained
    
    private void cmbHierarchyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbHierarchyFocusGained
        // TODO add your handling code here:
        ShowMessage("Select the hierarchy for approval");
    }//GEN-LAST:event_cmbHierarchyFocusGained
    
    private void chkCancelledFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chkCancelledFocusGained
        // TODO add your handling code here:
        ShowMessage("Shows cancel status of this document");
    }//GEN-LAST:event_chkCancelledFocusGained
    
    private void txtPODateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPODateFocusGained
        // TODO add your handling code here:
        ShowMessage("Shows date of PO selected");
    }//GEN-LAST:event_txtPODateFocusGained
    
    private void txtPONoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPONoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter PO no. Press F1 for the list");
    }//GEN-LAST:event_txtPONoFocusGained
    
    private void txtDocDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDocDateFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter date in DD/MM/YYYY");
    }//GEN-LAST:event_txtDocDateFocusGained
    
    private void Tab3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab3FocusGained
        // TODO add your handling code here:
        cmbHierarchy.requestFocus();
    }//GEN-LAST:event_Tab3FocusGained
    
    private void Tab1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab1FocusGained
        // TODO add your handling code here:
        txtDocDate.requestFocus();
    }//GEN-LAST:event_Tab1FocusGained
    
    private void cmdBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBack3ActionPerformed
        // TODO add your handling code here:
        Tab.setSelectedIndex(0);
    }//GEN-LAST:event_cmdBack3ActionPerformed
    
    private void cmdNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNext1ActionPerformed
        // TODO add your handling code here:
        Tab.setSelectedIndex(1);
    }//GEN-LAST:event_cmdNext1ActionPerformed
    
    private void Tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tab1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Tab1MouseClicked
    
    private void txtPONoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPONoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) //F1 key pressed
        {
            String PONo="";
            LOV aList=new LOV();
            
            aList.SQL="SELECT PO_NO,DATE_FORMAT(PO_DATE,'%d/%m/%Y') AS PO_DATE from D_PUR_PO_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                txtPONo.setText(aList.ReturnVal);
           }
        }
    }//GEN-LAST:event_txtPONoKeyPressed
    
    private void OpgHoldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgHoldMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(false);
        OpgReject.setSelected(false);
        OpgHold.setSelected(true);
    }//GEN-LAST:event_OpgHoldMouseClicked
    
    private void OpgRejectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgRejectMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(false);
        OpgReject.setSelected(true);
        OpgHold.setSelected(false);
        
    }//GEN-LAST:event_OpgRejectMouseClicked
    
    private void OpgFinalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgFinalMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(true);
        OpgReject.setSelected(false);
        OpgHold.setSelected(false);
        
        if(!OpgFinal.isEnabled())
        {
          OpgHold.setSelected(true);  
        }
    }//GEN-LAST:event_OpgFinalMouseClicked
    
    private void OpgApproveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgApproveMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(true);
        OpgFinal.setSelected(false);
        OpgReject.setSelected(false);
        OpgHold.setSelected(false);
        
        SetupApproval();
    }//GEN-LAST:event_OpgApproveMouseClicked
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        
        ObjFreight.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        PreviewReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        Delete();
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
            
    
    private void cmbHierarchyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHierarchyItemStateChanged
        // TODO add your handling code here:
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        GenerateFromCombo();
        
        if(clsHierarchy.CanSkip((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        }
        else {
            cmbSendTo.setEnabled(false);
        }
        
        if(clsHierarchy.CanFinalApprove((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        }
        else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }
        
        //Set Default Send to User
    }//GEN-LAST:event_cmbHierarchyItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton OpgApprove;
    private javax.swing.JRadioButton OpgFinal;
    private javax.swing.JRadioButton OpgHold;
    private javax.swing.JRadioButton OpgReject;
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JPanel Tab1;
    private javax.swing.JPanel Tab3;
    private javax.swing.JPanel Tab4;
    private javax.swing.JTable TableA;
    private javax.swing.JTable TableHS;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkCancelled;
    private javax.swing.JComboBox cmbCartonUnit;
    private javax.swing.JComboBox cmbCurrency;
    private javax.swing.JComboBox cmbGrossUnit;
    private javax.swing.JComboBox cmbHierarchy;
    private javax.swing.JComboBox cmbSendTo;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdBack3;
    private javax.swing.JButton cmdBack4;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdDescriptionBig;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdFromRemarksBig;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdNext1;
    private javax.swing.JButton cmdNext4;
    private javax.swing.JButton cmdNormalView;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdRemarksBig;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdShowRemarks;
    private javax.swing.JButton cmdTop;
    private javax.swing.JButton cmdViewHistory;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblRevNo;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAgentAWBRate;
    private javax.swing.JTextField txtAgentAirlines;
    private javax.swing.JTextField txtAgentAirport;
    private javax.swing.JTextField txtAgentDifference;
    private javax.swing.JTextField txtAgentFreightAWB;
    private javax.swing.JTextField txtAgentFreightInvoice;
    private javax.swing.JTextField txtAgentFreightPO;
    private javax.swing.JTextField txtAgentIndianAgent;
    private javax.swing.JTextField txtAirwayBill;
    private javax.swing.JTextField txtAuditRemarks;
    private javax.swing.JTextField txtCBM;
    private javax.swing.JTextField txtCartonWeight;
    private javax.swing.JTextField txtCartons;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtDocDate;
    private javax.swing.JTextField txtDocNo;
    private javax.swing.JTextField txtFlight;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtFromRemarks;
    private javax.swing.JTextField txtGrossWeight;
    private javax.swing.JTextField txtIGM;
    private javax.swing.JTextField txtPODate;
    private javax.swing.JTextField txtPONo;
    private javax.swing.JTextField txtRemarks;
    private javax.swing.JTextField txtSize;
    private javax.swing.JTextField txtSuppAWBRate;
    private javax.swing.JTextField txtSuppAirLines;
    private javax.swing.JTextField txtSuppAirport;
    private javax.swing.JTextField txtSuppDifference;
    private javax.swing.JTextField txtSuppFreightAWB;
    private javax.swing.JTextField txtSuppFreightInvoice;
    private javax.swing.JTextField txtSuppFreightPO;
    private javax.swing.JTextField txtSuppID;
    private javax.swing.JTextField txtSuppIndianAgent;
    private javax.swing.JLabel txtSuppName;
    private javax.swing.JTextField txtToRemarks;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        
        //=========== Color Indication ===============//
        try
        {
            
        
        if(EditMode==0)
        {
           if(ObjFreight.getAttribute("APPROVED").getInt()==1)
           {
            lblTitle.setBackground(Color.BLUE);   
           }
           
           if(ObjFreight.getAttribute("APPROVED").getInt()!=1)
           {
            lblTitle.setBackground(Color.GRAY);   
           }
           
           if(ObjFreight.getAttribute("CANCELLED").getInt()==1)
           {
            lblTitle.setBackground(Color.RED);   
           }
        }
        
        }
        catch(Exception c)
        {
            
        }
        //============================================//
        
        
        //========= Authority Delegation Check =====================//
        if(EITLERPGLOBAL.gAuthorityUserID!=EITLERPGLOBAL.gUserID) {
            int ModuleID=43;
            
            if(clsAuthority.IsAuthorityGiven(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.gUserID,EITLERPGLOBAL.gAuthorityUserID,ModuleID)) {
                EITLERPGLOBAL.gNewUserID=EITLERPGLOBAL.gAuthorityUserID;
            }
            else {
                EITLERPGLOBAL.gNewUserID=EITLERPGLOBAL.gUserID;
            }
        }
        //==========================================================//
        
        
        try {
            ClearFields();
            
            txtDocNo.setText((String)ObjFreight.getAttribute("DOC_NO").getObj());
            lblTitle.setText("FREIGHT CALCULATION SHEET - "+txtDocNo.getText());
            lblRevNo.setText(Integer.toString((int)ObjFreight.getAttribute("REVISION_NO").getVal()));
            txtDocDate.setText(EITLERPGLOBAL.formatDate((String)ObjFreight.getAttribute("DOC_DATE").getObj()));
            

            txtPONo.setText((String)ObjFreight.getAttribute("PO_NO").getObj());
            txtPODate.setText(EITLERPGLOBAL.formatDate((String)ObjFreight.getAttribute("PO_DATE").getObj()));
            txtDescription.setText((String)ObjFreight.getAttribute("CONSIGNMENT").getObj());
            txtSuppID.setText((String)ObjFreight.getAttribute("SUPP_ID").getObj());
            txtGrossWeight.setText(Double.toString(ObjFreight.getAttribute("GROSS_WEIGHT").getVal()));
            EITLERPGLOBAL.setComboIndex(cmbGrossUnit,(int)ObjFreight.getAttribute("GROSS_UNIT_ID").getVal());
            txtCartons.setText((String)ObjFreight.getAttribute("CARTONS").getObj());
            txtCartonWeight.setText(Double.toString(ObjFreight.getAttribute("CARTON_WEIGHT").getVal()));
            EITLERPGLOBAL.setComboIndex(cmbCartonUnit,(int)ObjFreight.getAttribute("CARTON_UNIT_ID").getVal());
            txtRemarks.setText((String)ObjFreight.getAttribute("REMARKS").getObj());
            
            EITLERPGLOBAL.setComboIndex(cmbCurrency,(int)ObjFreight.getAttribute("CURRENCY_ID").getVal());
            txtAirwayBill.setText((String)ObjFreight.getAttribute("AIRWAY_BILL").getObj());
            txtFlight.setText((String)ObjFreight.getAttribute("FLIGHT").getObj());
            txtIGM.setText((String)ObjFreight.getAttribute("IGM").getObj());
            txtSize.setText((String)ObjFreight.getAttribute("SIZE").getObj());
            txtCBM.setText((String)ObjFreight.getAttribute("CBM").getObj());
            
            txtAgentAirlines.setText((String)ObjFreight.getAttribute("AGENT_AIRLINES").getObj());
            txtAgentIndianAgent.setText((String)ObjFreight.getAttribute("AGENT_INDIAN_AGENT").getObj());

            txtAgentFreightPO.setText(Double.toString(ObjFreight.getAttribute("AGENT_FREIGHT_PO").getVal()));
            txtAgentFreightAWB.setText(Double.toString(ObjFreight.getAttribute("AGENT_FREIGHT_AWB").getVal()));
            txtAgentAWBRate.setText(Double.toString(ObjFreight.getAttribute("AGENT_AWB_RATE").getVal()));
            txtAgentFreightInvoice.setText(Double.toString(ObjFreight.getAttribute("AGENT_FREIGHT_INVOICE").getVal()));
            txtAgentDifference.setText(Double.toString(ObjFreight.getAttribute("AGENT_DIFFERENCE").getVal()));
            
            txtAgentAirport.setText((String)ObjFreight.getAttribute("AGENT_AIRPORT").getObj());
            
            //==
            txtSuppAirLines.setText((String)ObjFreight.getAttribute("SUPP_AIRLINES").getObj());
            txtSuppIndianAgent.setText((String)ObjFreight.getAttribute("SUPP_INDIAN_AGENT").getObj());

            txtSuppFreightPO.setText(Double.toString(ObjFreight.getAttribute("SUPP_FREIGHT_PO").getVal()));
            txtSuppFreightAWB.setText(Double.toString(ObjFreight.getAttribute("SUPP_FREIGHT_AWB").getVal()));
            txtSuppAWBRate.setText(Double.toString(ObjFreight.getAttribute("SUPP_AWB_RATE").getVal()));
            txtSuppFreightInvoice.setText(Double.toString(ObjFreight.getAttribute("SUPP_FREIGHT_INVOICE").getVal()));
            txtSuppDifference.setText(Double.toString(ObjFreight.getAttribute("SUPP_DIFFERENCE").getVal()));
            
            txtSuppAirport.setText((String)ObjFreight.getAttribute("SUPP_AIRPORT").getObj());

            
            //==
            
            chkCancelled.setSelected(ObjFreight.getAttribute("CANCELLED").getBool());

            
            EITLERPGLOBAL.setComboIndex(cmbHierarchy,(int)ObjFreight.getAttribute("HIERARCHY_ID").getVal());
            
            
            
            //======== Generating Grid for Document Approval Flow ========//
            FormatGridA();
            HashMap List=new HashMap();
            String DocNo=(String)ObjFreight.getAttribute("DOC_NO").getObj();
            List=ApprovalFlow.getDocumentFlow(EITLERPGLOBAL.gCompanyID, 43, DocNo);
            for(int i=1;i<=List.size();i++) {
                clsDocFlow ObjFlow=(clsDocFlow)List.get(Integer.toString(i));
                Object[] rowData=new Object[7];
                
                rowData[0]=Integer.toString(i);
                rowData[1]=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(int)ObjFlow.getAttribute("USER_ID").getVal());
                rowData[2]=(String)ObjFlow.getAttribute("STATUS").getObj();
                rowData[3]=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID, (int)ObjFlow.getAttribute("DEPT_ID").getVal());
                rowData[4]=EITLERPGLOBAL.formatDate((String)ObjFlow.getAttribute("RECEIVED_DATE").getObj());
                rowData[5]=EITLERPGLOBAL.formatDate((String)ObjFlow.getAttribute("ACTION_DATE").getObj());
                rowData[6]=(String)ObjFlow.getAttribute("REMARKS").getObj();
                
                DataModelA.addRow(rowData);
            }
            
            
            
        //Showing Audit Trial History
        FormatGridHS();
        HashMap History=clsFreightCalculation.getHistoryList(EITLERPGLOBAL.gCompanyID, DocNo);
        for(int i=1;i<=History.size();i++) {
            clsFreightCalculation ObjHistory=(clsFreightCalculation)History.get(Integer.toString(i));
            Object[] rowData=new Object[5];
            
            rowData[0]=Integer.toString((int)ObjHistory.getAttribute("REVISION_NO").getVal());
            rowData[1]=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(long)ObjHistory.getAttribute("UPDATED_BY").getVal());
            rowData[2]=EITLERPGLOBAL.formatDate((String)ObjHistory.getAttribute("ENTRY_DATE").getObj());
            
            String ApprovalStatus="";
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("A")) {
                ApprovalStatus="Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("F")) {
                ApprovalStatus="Final Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("W")) {
                ApprovalStatus="Waiting";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("R")) {
                ApprovalStatus="Rejected";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("P")) {
                ApprovalStatus="Pending";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("C")) {
                ApprovalStatus="Skiped";
            }
            
            
            rowData[3]=ApprovalStatus;
            rowData[4]=(String)ObjHistory.getAttribute("APPROVER_REMARKS").getObj();
            
            DataModelHS.addRow(rowData);
        }
            //============================================================//
            
            ShowMessage("Ready");
        }
        catch(Exception e) {
            
            
        }
    }
    
    
    //Sets data to the Class Object
    private void SetData() {
        //Header Fields
        
        if(!EITLERPGLOBAL.IsNumber(txtGrossWeight.getText()))
        {
           txtGrossWeight.setText("0"); 
        }

        if(!EITLERPGLOBAL.IsNumber(txtCartonWeight.getText()))
        {
           txtCartonWeight.setText("0"); 
        }

        if(!EITLERPGLOBAL.IsNumber(txtAgentFreightPO.getText()))
        {
           txtAgentFreightPO.setText("0"); 
        }
        
        if(!EITLERPGLOBAL.IsNumber(txtAgentFreightAWB.getText()))
        {
           txtAgentFreightAWB.setText("0"); 
        }

        if(!EITLERPGLOBAL.IsNumber(txtAgentAWBRate.getText()))
        {
           txtAgentAWBRate.setText("0"); 
        }
        
        if(!EITLERPGLOBAL.IsNumber(txtAgentFreightInvoice.getText()))
        {
           txtAgentFreightInvoice.setText("0"); 
        }

        if(!EITLERPGLOBAL.IsNumber(txtAgentDifference.getText()))
        {
           txtAgentDifference.setText("0"); 
        }
        
        //===
        
        if(!EITLERPGLOBAL.IsNumber(txtSuppFreightPO.getText()))
        {
           txtSuppFreightPO.setText("0"); 
        }
        
        if(!EITLERPGLOBAL.IsNumber(txtSuppFreightAWB.getText()))
        {
           txtSuppFreightAWB.setText("0"); 
        }

        if(!EITLERPGLOBAL.IsNumber(txtSuppAWBRate.getText()))
        {
           txtSuppAWBRate.setText("0"); 
        }
        
        if(!EITLERPGLOBAL.IsNumber(txtSuppFreightInvoice.getText()))
        {
           txtSuppFreightInvoice.setText("0"); 
        }

        if(!EITLERPGLOBAL.IsNumber(txtSuppDifference.getText()))
        {
           txtSuppDifference.setText("0"); 
        }
        
        
        
        ObjFreight.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
        ObjFreight.setAttribute("PREFIX",SelPrefix);
        ObjFreight.setAttribute("SUFFIX",SelSuffix);
        ObjFreight.setAttribute("FFNO",FFNo);
        ObjFreight.setAttribute("DOC_DATE",EITLERPGLOBAL.formatDateDB(txtDocDate.getText()));
        ObjFreight.setAttribute("PO_NO",txtPONo.getText());
        ObjFreight.setAttribute("PO_DATE",EITLERPGLOBAL.formatDateDB(txtPODate.getText()));
        ObjFreight.setAttribute("CONSIGNMENT",txtDescription.getText());
        ObjFreight.setAttribute("SUPP_ID",txtSuppID.getText());
        
        ObjFreight.setAttribute("GROSS_WEIGHT",Double.parseDouble(txtGrossWeight.getText()));
        ObjFreight.setAttribute("GROSS_UNIT_ID",EITLERPGLOBAL.getComboCode(cmbGrossUnit));
        ObjFreight.setAttribute("CARTONS",txtCartons.getText());
        ObjFreight.setAttribute("CARTON_WEIGHT",Double.parseDouble(txtCartonWeight.getText()));
        ObjFreight.setAttribute("CARTON_UNIT_ID",EITLERPGLOBAL.getComboCode(cmbCartonUnit));
        ObjFreight.setAttribute("REMARKS",txtRemarks.getText());
        ObjFreight.setAttribute("CURRENCY_ID",EITLERPGLOBAL.getComboCode(cmbCurrency));
        
        
        ObjFreight.setAttribute("AIRWAY_BILL",txtAirwayBill.getText());
        ObjFreight.setAttribute("FLIGHT",txtFlight.getText());
        ObjFreight.setAttribute("IGM",txtIGM.getText());
        ObjFreight.setAttribute("SIZE",txtSize.getText());
        ObjFreight.setAttribute("CBM",txtCBM.getText());
        
        ObjFreight.setAttribute("AGENT_AIRLINES",txtAgentAirlines.getText());
        ObjFreight.setAttribute("AGENT_INDIAN_AGENT",txtAgentIndianAgent.getText());
        ObjFreight.setAttribute("AGENT_FREIGHT_PO",Double.parseDouble(txtAgentFreightPO.getText()));
        ObjFreight.setAttribute("AGENT_FREIGHT_AWB",Double.parseDouble(txtAgentFreightAWB.getText()));
        ObjFreight.setAttribute("AGENT_AWB_RATE",Double.parseDouble(txtAgentAWBRate.getText()));
        ObjFreight.setAttribute("AGENT_FREIGHT_INVOICE",Double.parseDouble(txtAgentFreightInvoice.getText()));
        ObjFreight.setAttribute("AGENT_DIFFERENCE",Double.parseDouble(txtAgentDifference.getText()));
        ObjFreight.setAttribute("AGENT_AIRPORT",txtAgentAirport.getText());
        
        ObjFreight.setAttribute("SUPP_AIRLINES",txtSuppAirLines.getText());
        ObjFreight.setAttribute("SUPP_INDIAN_AGENT",txtSuppIndianAgent.getText());
        ObjFreight.setAttribute("SUPP_FREIGHT_PO",Double.parseDouble(txtSuppFreightPO.getText()));
        ObjFreight.setAttribute("SUPP_FREIGHT_AWB",Double.parseDouble(txtSuppFreightAWB.getText()));
        ObjFreight.setAttribute("SUPP_AWB_RATE",Double.parseDouble(txtSuppAWBRate.getText()));
        ObjFreight.setAttribute("SUPP_FREIGHT_INVOICE",Double.parseDouble(txtSuppFreightInvoice.getText()));
        ObjFreight.setAttribute("SUPP_DIFFERENCE",Double.parseDouble(txtSuppDifference.getText()));
        ObjFreight.setAttribute("SUPP_AIRPORT",txtSuppAirport.getText());

        
        if(chkCancelled.isSelected()) {
            ObjFreight.setAttribute("CANCELLED",true);
        }
        else {
            ObjFreight.setAttribute("CANCELLED",false);
        }
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            ObjFreight.setAttribute("CREATED_BY",EITLERPGLOBAL.gNewUserID);
            ObjFreight.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        else {
            ObjFreight.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gNewUserID);
            ObjFreight.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        
        //----- Update Approval Specific Fields -----------//
        ObjFreight.setAttribute("HIERARCHY_ID",EITLERPGLOBAL.getComboCode(cmbHierarchy));
        ObjFreight.setAttribute("FROM",EITLERPGLOBAL.gNewUserID);
        ObjFreight.setAttribute("TO",EITLERPGLOBAL.getComboCode(cmbSendTo));
        ObjFreight.setAttribute("FROM_REMARKS",txtToRemarks.getText());
        
        if(OpgApprove.isSelected()) {
            ObjFreight.setAttribute("APPROVAL_STATUS","A");
        }
        
        if(OpgFinal.isSelected()) {
            ObjFreight.setAttribute("APPROVAL_STATUS","F");
        }
        
        if(OpgReject.isSelected()) {
            ObjFreight.setAttribute("APPROVAL_STATUS","R");
        }
        
        if(OpgHold.isSelected()) {
            ObjFreight.setAttribute("APPROVAL_STATUS","H");
        }
        //-------------------------------------------------//
        
        
        
        
    }
    
    
    
        
        
    private void GenerateCombos() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        String strCondition="";
        clsUser ObjUser=new clsUser();
        
        //----- Generate cmbType ------- //
        cmbHierarchyModel=new EITLComboModel();
        cmbHierarchy.removeAllItems();
        cmbHierarchy.setModel(cmbHierarchyModel);
        
        List=clsHierarchy.getListEx(" WHERE D_COM_HIERARCHY.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID=43");
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            List=clsHierarchy.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID=43");
        }
        for(int i=1;i<=List.size();i++) {
            clsHierarchy ObjHierarchy=(clsHierarchy) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjHierarchy.getAttribute("HIERARCHY_ID").getVal();
            aData.Text=(String)ObjHierarchy.getAttribute("HIERARCHY_NAME").getObj();
            cmbHierarchyModel.addElement(aData);
        }
        //------------------------------ //
        
        
        //----- Generate Department Combo ------- //
        cmbCurrencyModel=new EITLComboModel();
        cmbCurrency.removeAllItems();
        cmbCurrency.setModel(cmbCurrencyModel);
        
        List=clsCurrency.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID);
        for(int i=1;i<=List.size();i++) {
            clsCurrency ObjCurrency=(clsCurrency) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjCurrency.getAttribute("CURRENCY_ID").getVal();
            aData.Text=(String)ObjCurrency.getAttribute("CURRENCY_DESC").getObj();
            cmbCurrencyModel.addElement(aData);
        }
        //------------------------------ //
        
       

        cmbGrossUnitModel=new EITLComboModel();
        cmbGrossUnit.removeAllItems();
        cmbGrossUnit.setModel(cmbGrossUnitModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND PARA_ID='UNIT'";
        
        List=clsParameter.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsParameter ObjPara=(clsParameter) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjPara.getAttribute("PARA_CODE").getVal();
            aData.Text=(String)ObjPara.getAttribute("DESC").getObj();
            aData.strCode="";
            cmbGrossUnitModel.addElement(aData);
        }
        
        
        cmbCartonUnitModel=new EITLComboModel();
        cmbCartonUnit.removeAllItems();
        cmbCartonUnit.setModel(cmbCartonUnitModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND PARA_ID='UNIT'";
        
        List=clsParameter.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsParameter ObjPara=(clsParameter) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjPara.getAttribute("PARA_CODE").getVal();
            aData.Text=(String)ObjPara.getAttribute("DESC").getObj();
            aData.strCode="";
            cmbCartonUnitModel.addElement(aData);
        }
        
        
        
        
        
    }
    
    private void GenerateFromCombo() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        
        try {
            if(EditMode==EITLERPGLOBAL.ADD) {
                //----- Generate cmbType ------- //
                cmbToModel=new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);
                
                List=clsHierarchy.getUserList((int)EITLERPGLOBAL.gCompanyID,SelHierarchyID,EITLERPGLOBAL.gNewUserID);
                for(int i=1;i<=List.size();i++) {
                    clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
                    ComboData aData=new ComboData();
                    aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
                    
                    if(ObjUser.getAttribute("USER_ID").getVal()==EITLERPGLOBAL.gNewUserID) {
                        //Exclude Current User
                    }
                    else {
                        cmbToModel.addElement(aData);
                    }
                }
                //------------------------------ //
            }
            else {
                //----- Generate cmbType ------- //
                cmbToModel=new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);
                
                List=ApprovalFlow.getRemainingUsers((int)EITLERPGLOBAL.gCompanyID, 43,(String)ObjFreight.getAttribute("DOC_NO").getObj());
                for(int i=1;i<=List.size();i++) {
                    clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
                    ComboData aData=new ComboData();
                    aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
                    cmbToModel.addElement(aData);
                }
                //------------------------------ //
            }
        }
        catch(Exception e)
        {}
        
    }
    
    private void SetupApproval() {
        // --- Hierarchy Change Rights Check --------
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,795)) {
            cmbHierarchy.setEnabled(true);
        }
        else {
            cmbHierarchy.setEnabled(false);
        }
        
        //Set Default Hierarchy ID for User
        int DefaultID=clsHierarchy.getDefaultHierarchy((int)EITLERPGLOBAL.gCompanyID);
        EITLERPGLOBAL.setComboIndex(cmbHierarchy,DefaultID);
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            lnFromID=(int)EITLERPGLOBAL.gNewUserID;
            txtFrom.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID));
            txtFromRemarks.setText("Creator of Document");
        }
        else {
            
            int FromUserID=ApprovalFlow.getFromID((int)EITLERPGLOBAL.gCompanyID, 43,(String)ObjFreight.getAttribute("DOC_NO").getObj());
            lnFromID=FromUserID;
            String strFromUser=clsUser.getUserName(EITLERPGLOBAL.gCompanyID, FromUserID);
            String strFromRemarks=ApprovalFlow.getFromRemarks( (int)EITLERPGLOBAL.gCompanyID,43,FromUserID,(String)ObjFreight.getAttribute("DOC_NO").getObj());
            
            txtFrom.setText(strFromUser);
            txtFromRemarks.setText(strFromRemarks);
        }
        
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        GenerateFromCombo();
        
        if(clsHierarchy.CanSkip((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        }
        else {
            cmbSendTo.setEnabled(false);
        }
        
        if(clsHierarchy.CanFinalApprove((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        }
        else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }
        
        
        //In Edit Mode Hierarchy Should be disabled
        if(EditMode==EITLERPGLOBAL.EDIT) {
            cmbHierarchy.setEnabled(false);
        }
        
        if(EditMode==0) {
            //Disable all hierarchy controls if not in Add/Edit Mode
            cmbHierarchy.setEnabled(false);
            txtFrom.setEnabled(false);
            txtFromRemarks.setEnabled(false);
            OpgApprove.setEnabled(false);
            OpgFinal.setEnabled(false);
            OpgReject.setEnabled(false);
            cmbSendTo.setEnabled(false);
            txtToRemarks.setEnabled(false);
        }
    }
    
    private void SetMenuForRights() {
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,791)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        cmdEdit.setEnabled(true);
        /*if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,292)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }*/
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,793)) {
            cmdDelete.setEnabled(true);
        }
        else {
            cmdDelete.setEnabled(false);
        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,794)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
    }
    
    
    
    private void ClearFields() {
        txtDocDate.setText("");
        txtPONo.setText("");
        txtPODate.setText("");
        txtDescription.setText("");
        txtSuppID.setText("");
        txtSuppName.setText("");
        txtGrossWeight.setText("");
        txtCartons.setText("");
        
        txtCartonWeight.setText("");
        txtRemarks.setText("");
        
        txtAirwayBill.setText("");
        txtFlight.setText("");
        txtIGM.setText("");
        txtSize.setText("");
        txtCBM.setText("");
        
        txtAgentAirlines.setText("");
        txtAgentIndianAgent.setText("");
        txtAgentFreightPO.setText("");
        txtAgentFreightAWB.setText("");
        txtAgentAWBRate.setText("");
        txtAgentFreightInvoice.setText("");
        txtAgentDifference.setText("");
        txtAgentAirport.setText("");
        
        
        txtSuppAirLines.setText("");
        txtSuppIndianAgent.setText("");
        txtSuppFreightPO.setText("");
        txtSuppFreightAWB.setText("");
        txtSuppAWBRate.setText("");
        txtSuppFreightInvoice.setText("");
        txtSuppDifference.setText("");
        txtSuppAirport.setText("");

        txtToRemarks.setText("");
        
        FormatGridA();
        FormatGridHS();
    }
    
    private void SetFields(boolean pStat) {
        txtDocDate.setEnabled(pStat);
        txtPONo.setEnabled(pStat);
        txtDescription.setEnabled(pStat);
        txtSuppID.setEnabled(pStat);
        txtGrossWeight.setEnabled(pStat);
        cmbGrossUnit.setEnabled(pStat);
        txtCartons.setEnabled(pStat);
        txtCartonWeight.setEnabled(pStat);
        cmbCartonUnit.setEnabled(pStat);
        txtRemarks.setEnabled(pStat);
        cmbCurrency.setEnabled(pStat);
        
        txtAirwayBill.setEnabled(pStat);
        txtFlight.setEnabled(pStat);
        txtIGM.setEnabled(pStat);
        txtSize.setEnabled(pStat);
        txtCBM.setEnabled(pStat);
        
        txtAgentAirlines.setEnabled(pStat);
        txtAgentIndianAgent.setEnabled(pStat);
        txtAgentFreightPO.setEnabled(pStat);
        txtAgentFreightAWB.setEnabled(pStat);
        txtAgentAWBRate.setEnabled(pStat);
        txtAgentFreightInvoice.setEnabled(pStat);
        txtAgentDifference.setEnabled(pStat);
        txtAgentAirport.setEnabled(pStat);

        
        txtSuppAirLines.setEnabled(pStat);
        txtSuppIndianAgent.setEnabled(pStat);
        txtSuppFreightPO.setEnabled(pStat);
        txtSuppFreightAWB.setEnabled(pStat);
        txtSuppAWBRate.setEnabled(pStat);
        txtSuppFreightInvoice.setEnabled(pStat);
        txtSuppDifference.setEnabled(pStat);
        txtSuppAirport.setEnabled(pStat);
        
        chkCancelled.setEnabled(pStat);
        
        OpgApprove.setEnabled(pStat);
        OpgFinal.setEnabled(pStat);
        OpgReject.setEnabled(pStat);
        OpgHold.setEnabled(pStat);
        txtToRemarks.setEnabled(pStat);
        
        SetupApproval();
        
    }
    
    private boolean Validate() {
        int ValidEntryCount=0;
        
        //Now Header level validations
        if(txtDocDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Date");
            return false;
        }
        
        if(cmbHierarchy.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(null,"Please select the hierarchy.");
            return false;
        }
        
        if((!OpgApprove.isSelected())&&(!OpgReject.isSelected())&&(!OpgFinal.isSelected())&&(!OpgHold.isSelected())) {
            JOptionPane.showMessageDialog(null,"Please select the Approval Action");
            return false;
        }
        
        if(!EITLERPGLOBAL.isDate(txtDocDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid Approval Date");
            return false;
        }
        
        
        //New Check for Approval : When Rejecting remarks is must 
        
        if(OpgReject.isSelected()&&txtToRemarks.getText().trim().equals(""))
        {
          JOptionPane.showMessageDialog(null,"Please enter the remarks for rejection");
          return false;
        }
        
//        if( (OpgApprove.isSelected()||OpgReject.isSelected())&&cmbSendTo.getItemCount()<=0)
//        {
//          JOptionPane.showMessageDialog(null,"Please select the user, to whom rejected document to be send");
//          return false;
//        }
        
        
        return true;
    }
    
    
    
    
    private void Add() {
        
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        
        
        //Now Generate new document no.
        SelectFirstFree aList=new SelectFirstFree();
        aList.ModuleID=43;
        
        if(aList.ShowList()) {
            EditMode=EITLERPGLOBAL.ADD;
            SetFields(true);
            DisableToolbar();
            ClearFields();
            SelPrefix=aList.Prefix; //Selected Prefix;
            SelSuffix=aList.Suffix;
            FFNo=aList.FirstFreeNo;
            SetupApproval();
            //Display newly generated document no.
            txtDocNo.setText(clsFirstFree.getNextFreeNo(EITLERPGLOBAL.gCompanyID, 43, FFNo, false));
            txtDocDate.setText(EITLERPGLOBAL.getCurrentDate());
            txtDocDate.requestFocus();
            
            lblTitle.setText("FREIGHT CALCULATION SHEET - "+txtDocNo.getText());
            lblTitle.setBackground(Color.BLUE);
        }
        else {
            JOptionPane.showMessageDialog(null,"You must select doucment number prefix. If no prefixes found in the list, Please do entry in First Free Nos.");
        }
        
    }
    
    private void Edit() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        
        String lDocNo=(String)ObjFreight.getAttribute("DOC_NO").getObj();
        if(ObjFreight.IsEditable(EITLERPGLOBAL.gCompanyID, lDocNo, EITLERPGLOBAL.gNewUserID)) {
            EITLERPGLOBAL.ChangeCursorToWait(this);
            EditMode=EITLERPGLOBAL.EDIT;
            GenerateCombos();
            
            //---New Change ---//
            GenerateCombos();
            DisplayData();
            //----------------//
            
            if(ApprovalFlow.IsCreator(43,lDocNo)||clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,792)) {
                SetFields(true);
            }
            else {
                EnableApproval();
            }
            
            DisableToolbar();
            OpgHold.setSelected(true);
            txtDocDate.requestFocus();
            EITLERPGLOBAL.ChangeCursorToDefault(this);
        }
        else {
            JOptionPane.showMessageDialog(null,"You cannot edit this record. It is either approved/rejected or waiting approval for other user");
        }
    }
    
    private void Delete() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        
        String lDocNo=(String)ObjFreight.getAttribute("DOC_NO").getObj();
        
        if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
            if(ObjFreight.CanDelete(EITLERPGLOBAL.gCompanyID, lDocNo, EITLERPGLOBAL.gNewUserID)) {
                if(ObjFreight.Delete(EITLERPGLOBAL.gNewUserID)) {
                    MoveLast();
                }
                else {
                    JOptionPane.showMessageDialog(null,"Error occured while deleting. Error is "+ObjFreight.LastError);
                }
            }
            else {
                JOptionPane.showMessageDialog(null,"You cannot delete this record. It is either approved/rejected record or waiting approval for other user or is referred in other documents");
            }
        }
    }
    
    private void Save() {
        //Form level validations
        if(Validate()==false) {
            return; //Validation failed
        }
        
        EITLERPGLOBAL.ChangeCursorToWait(this);
        SetData();
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(ObjFreight.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+ObjFreight.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(ObjFreight.Update()) {
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+ObjFreight.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        ShowMessage("Ready");
        
        try
        {
        frmPA.RefreshView();
        }catch(Exception e){}
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Cancel() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    public void FindEx(String pApprovalNo) {
        ObjFreight.Filter(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND DOC_NO='"+pApprovalNo+"'",EITLERPGLOBAL.gCompanyID);
        MoveLast();
    }
    
    private void Find() {
        Loader ObjLoader=new Loader(this,"EITLERP.Purchase.frmFreightCalculationFind",true);
        frmFreightCalculationFind ObjReturn= (frmFreightCalculationFind) ObjLoader.getObj();
        
        if(ObjReturn.Cancelled==false) {
            //Add PO Type
            if(!ObjReturn.strQuery.trim().equals("")) {
                ObjReturn.strQuery=ObjReturn.strQuery;
            }
            else {
                ObjReturn.strQuery=" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND DOC_DATE>='"+EITLERPGLOBAL.FinFromDateDB+"' AND DOC_DATE<='"+EITLERPGLOBAL.FinToDateDB+"' ";
            }
            
            
            if(!ObjFreight.Filter(ObjReturn.strQuery,EITLERPGLOBAL.gCompanyID)) {
                JOptionPane.showMessageDialog(null,"No records found.");
            }
            MoveLast();
        }
        
    }
    
    private void MoveFirst() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjFreight.MoveFirst();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MovePrevious() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjFreight.MovePrevious();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    
    private void MoveNext() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjFreight.MoveNext();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    
    private void MoveLast() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjFreight.MoveLast();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    //Recurses through the hierarchy of classes
    //until it finds Frame
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    public void FindEx(int pCompanyID,String pDocNo) {
        ObjFreight.Filter(" WHERE COMPANY_ID="+Integer.toString(pCompanyID)+" AND DOC_NO='"+pDocNo+"'",pCompanyID);
        ObjFreight.MoveLast();
        DisplayData();
    }

    public void FindWaiting() {
        ObjFreight.Filter(" WHERE DOC_NO IN (SELECT D_PUR_FREIGHT_CALCULATION.DOC_NO FROM D_PUR_FREIGHT_CALCULATION,D_COM_DOC_DATA WHERE D_PUR_FREIGHT_CALCULATION.DOC_NO=D_COM_DOC_DATA.DOC_NO AND D_PUR_FREIGHT_CALCULATION.COMPANY_ID=D_COM_DOC_DATA.COMPANY_ID AND D_PUR_FREIGHT_CALCULATION.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND D_COM_DOC_DATA.USER_ID="+EITLERPGLOBAL.gNewUserID+" AND D_COM_DOC_DATA.STATUS='W' AND D_COM_DOC_DATA.MODULE_ID=43)",EITLERPGLOBAL.gCompanyID);
        ObjFreight.MoveLast();
        DisplayData();
    }
    
    
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    private void FormatGridA() {
        DataModelA=new EITLTableModel();
        
        TableA.removeAll();
        TableA.setModel(DataModelA);
        
        //Set the table Readonly
        DataModelA.TableReadOnly(true);
        
        //Add the columns
        DataModelA.addColumn("Sr.");
        DataModelA.addColumn("User");
        DataModelA.addColumn("Status");
        DataModelA.addColumn("Department");
        DataModelA.addColumn("Received Date");
        DataModelA.addColumn("Action Date");
        DataModelA.addColumn("Remarks");
        
        TableA.setAutoResizeMode(TableA.AUTO_RESIZE_OFF);
        
    }
    
    private void EnableApproval() {
        cmbSendTo.setEnabled(true);
        OpgApprove.setEnabled(true);
        OpgFinal.setEnabled(true);
        OpgReject.setEnabled(true);
        OpgHold.setEnabled(true);
        txtToRemarks.setEnabled(true);
        SetupApproval();
        
        
        //========== Setting Up Header Fields ================//
        String FieldName="";
        int SelHierarchy=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        
        for(int i=0;i<Tab1.getComponentCount()-1;i++) {
            if(Tab1.getComponent(i).getName()!=null) {
                
                FieldName=Tab1.getComponent(i).getName();
                if(clsHierarchy.CanEditField(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, SelHierarchy, "H", FieldName)) {
                    
                    Tab1.getComponent(i).setEnabled(true);
                }
                
            }
        }
        //=============== Header Fields Setup Complete =================//
        
        
        
        
    }
    

    private void FormatGridHS() {
        DataModelHS=new EITLTableModel();
        
        TableHS.removeAll();
        TableHS.setModel(DataModelHS);
        
        //Set the table Readonly
        DataModelHS.TableReadOnly(true);
        
        //Add the columns
        DataModelHS.addColumn("Rev No.");
        DataModelHS.addColumn("User");
        DataModelHS.addColumn("Date");
        DataModelHS.addColumn("Status");
        DataModelHS.addColumn("Remarks");
        
        TableHS.setAutoResizeMode(TableHS.AUTO_RESIZE_OFF);
    }

    
    private void PreviewReport() {
        
           if(!chkCancelled.isSelected())
           {
            try {
                URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/rptFreightCalculation.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&DocNo="+txtDocNo.getText());
                EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"File error "+e.getMessage());
            }
           }
           else
           {
             JOptionPane.showMessageDialog(null,"You cannot take printout of cancelled document");  
           }
    }



}



