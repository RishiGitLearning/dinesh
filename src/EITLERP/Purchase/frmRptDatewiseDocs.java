/*
 * frmRptDatewiseDocs.java
 *
 * Created on January 23, 2005, 12:13 PM
 */

package EITLERP.Purchase;

/**
 *
 * @author  root
 */
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.util.*;
import EITLERP.Stores.*;
import EITLERP.*;
import java.sql.*;
import java.net.*;

public class frmRptDatewiseDocs extends javax.swing.JApplet {
    
    private int SelModule=0;
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLComboModel cmbModuleModel=new EITLComboModel();
    private EITLComboModel cmbDeptModel=new EITLComboModel();
    
    /** Initializes the applet frmRptDatewiseDocs */
    public void init() {
        setSize(576, 550);
        initComponents();
        GenerateCombo();
        txtFromDate.setText(EITLERPGLOBAL.getCurrentDate());
        txtToDate.setText(EITLERPGLOBAL.getCurrentDate());
        FormatGridNormal();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmbModule = new javax.swing.JComboBox();
        chkDept = new javax.swing.JCheckBox();
        cmbDept = new javax.swing.JComboBox();
        OpgCreated = new javax.swing.JRadioButton();
        OpgFinalApproved = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdOpen = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        cmdShow = new javax.swing.JButton();
        
        
        getContentPane().setLayout(null);
        
        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" DOCUMENT INFORMATION (DATEWISE)");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(1, 1, 804, 25);
        
        jLabel1.setText("Document");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(36, 40, 74, 15);
        
        getContentPane().add(cmbModule);
        cmbModule.setBounds(126, 36, 304, 24);
        
        chkDept.setText("Department");
        chkDept.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDeptItemStateChanged(evt);
            }
        });
        
        getContentPane().add(chkDept);
        chkDept.setBounds(10, 83, 112, 23);
        
        cmbDept.setEnabled(false);
        getContentPane().add(cmbDept);
        cmbDept.setBounds(125, 81, 307, 24);
        
        OpgCreated.setSelected(true);
        OpgCreated.setText("Created");
        buttonGroup1.add(OpgCreated);
        getContentPane().add(OpgCreated);
        OpgCreated.setBounds(128, 128, 90, 23);
        
        OpgFinalApproved.setText("Final Approved");
        buttonGroup1.add(OpgFinalApproved);
        getContentPane().add(OpgFinalApproved);
        OpgFinalApproved.setBounds(215, 127, 126, 23);
        
        jLabel2.setText("From Date");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(35, 173, 80, 15);
        
        txtFromDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFromDateMouseClicked(evt);
            }
        });
        
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(124, 167, 111, 24);
        
        jLabel3.setText("To");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(242, 172, 30, 15);
        
        getContentPane().add(txtToDate);
        txtToDate.setBounds(272, 166, 111, 24);
        
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jPanel1);
        jPanel1.setBounds(9, 238, 530, 8);
        
        Table.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
        ));
        jScrollPane1.setViewportView(Table);
        
        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(9, 253, 531, 230);
        
        cmdOpen.setText("Open Selected Document");
        cmdOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOpenActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdOpen);
        cmdOpen.setBounds(13, 491, 191, 25);
        
        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdExit);
        cmdExit.setBounds(441, 493, 96, 25);
        
        cmdShow.setText("Show Information");
        cmdShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdShow);
        cmdShow.setBounds(360, 209, 174, 25);
        
    }//GEN-END:initComponents

    private void txtFromDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFromDateMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtFromDateMouseClicked

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();        
    }//GEN-LAST:event_cmdExitActionPerformed

    private void cmdOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOpenActionPerformed
        // TODO add your handling code here:
        String DocNo="";
        
        if(Table.getRowCount()>0) {
            //-----*
            if(SelModule==1) {
                String lItemID=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Item");
                aFrame.startAppletEx("EITLERP.frmItem","Item Master");
                frmItem ObjItem=(frmItem) aFrame.ObjApplet;
                ObjItem.FindEx((int)EITLERPGLOBAL.gCompanyID,lItemID);
            }
            
            //-----*
            if(SelModule==37) {
                String lItemID=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Supplier");
                aFrame.startAppletEx("EITLERP.frmSupplier","Supplier");
                frmSupplier ObjItem=(frmSupplier) aFrame.ObjApplet;
                ObjItem.FindEx((int)EITLERPGLOBAL.gCompanyID,lItemID);
            }


            if(SelModule==44) {
                String lItemID=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Document Cancel Request");
                aFrame.startAppletEx("EITLERP.frmDocCancel","Document Cancel Request");
                frmDocCancel ObjItem=(frmDocCancel) aFrame.ObjApplet;
                ObjItem.FindEx((int)EITLERPGLOBAL.gCompanyID,lItemID);
            }
            
            
            //----*
            if(SelModule==2) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Material Requisition");
                aFrame.startAppletEx("EITLERP.Stores.frmMR","Material Requisition");
                frmMR ObjDoc=(frmMR) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //----*
            if(SelModule==42) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Freight Comparison");
                aFrame.startAppletEx("EITLERP.Purchase.frmFreightComparison","Freight Comparison");
                frmFreightComparison ObjDoc=(frmFreightComparison) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //----*
            if(SelModule==43) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Freight Calculation");
                aFrame.startAppletEx("EITLERP.Purchase.frmFreightCalculation","Freight Calculation");
                frmFreightCalculation ObjDoc=(frmFreightCalculation) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //-----*
            if(SelModule==20) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Summary");
                aFrame.startAppletEx("EITLERP.Purchase.frmQuotApproval","Quot Approval");
                frmQuotApproval ObjDoc=(frmQuotApproval) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //------*
            if(SelModule==11) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("NRGP");
                aFrame.startAppletEx("EITLERP.Stores.FrmNRGP_General","NRGP");
                FrmNRGP_General ObjDoc=(FrmNRGP_General) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }

            //-----*
            if(SelModule==12) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("RGP");
                aFrame.startAppletEx("EITLERP.Stores.FrmRGP_General","RGP");
                FrmRGP_General ObjDoc=(FrmRGP_General) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //======*
            if(SelModule==14) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Issue");
                aFrame.startAppletEx("EITLERP.Stores.FrmIssue_General","Issue");
                FrmIssue_General ObjDoc=(FrmIssue_General) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
           
            //=====*
            if(SelModule==15) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Issue");
                aFrame.startAppletEx("EITLERP.Stores.FrmIssue_Raw","Issue");
                FrmIssue_Raw ObjDoc=(FrmIssue_Raw) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
          
            //==*
            if(SelModule==3) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Indent");
                aFrame.startAppletEx("EITLERP.Stores.FrmIndent","Indent");
                FrmIndent ObjDoc=(FrmIndent) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //========*
            if(SelModule==40) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("RGP Return");
                aFrame.startAppletEx("EITLERP.Stores.frmRGPReturn","RGP Return");
                frmRGPReturn ObjDoc=(frmRGPReturn) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //=====*
            if(SelModule==18) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Inquiry");
                aFrame.startAppletEx("EITLERP.Purchase.FrmInquiry","Inquiry");
                FrmInquiry ObjDoc=(FrmInquiry) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //------ *
            if(SelModule==4) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Gatepass Requisition");
                aFrame.startAppletEx("EITLERP.Stores.frmGPR","Gatepass Requisition");
                frmGPR ObjDoc=(frmGPR) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //======*
            if(SelModule==5) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("MIR General");
                aFrame.startAppletEx("EITLERP.Stores.frmMIRGen","MIR General");
                frmMIRGen ObjDoc=(frmMIRGen) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //======*
            if(SelModule==6) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("MIR Raw Material");
                aFrame.startAppletEx("EITLERP.Stores.frmMIR","MIR Raw Material");
                frmMIR ObjDoc=(frmMIR) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //=====*
            if(SelModule==7) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("GRN General");
                aFrame.startAppletEx("EITLERP.Stores.frmGRNGen","GRN General");
                frmGRNGen ObjDoc=(frmGRNGen) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //==========*
            if(SelModule==8) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("GRN Raw Material");
                aFrame.startAppletEx("EITLERP.Stores.frmGRN","GRN Raw Material");
                frmGRN ObjDoc=(frmGRN) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //=====*            
            if(SelModule==9) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("RJN General");
                aFrame.startAppletEx("EITLERP.Stores.frmRJNGen","RJN General");
                frmRJNGen ObjDoc=(frmRJNGen) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //======*
            if(SelModule==10) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("RJN Raw Material");
                aFrame.startAppletEx("EITLERP.Stores.frmRJN","RJN Raw Material");
                frmRJN ObjDoc=(frmRJN) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //======*
            if(SelModule==21) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOGen","Purchase Order");
                frmPOGen ObjDoc=(frmPOGen) aFrame.ObjApplet;
                ObjDoc.POType=1;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //===== *
            if(SelModule==22) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOGen","Purchase Order");
                frmPOGen ObjDoc=(frmPOGen) aFrame.ObjApplet;
                ObjDoc.POType=2;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //====*
            if(SelModule==23) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOGen","Purchase Order");
                frmPOGen ObjDoc=(frmPOGen) aFrame.ObjApplet;
                ObjDoc.POType=3;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //====*
            if(SelModule==24) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOGen","Purchase Order");
                frmPOGen ObjDoc=(frmPOGen) aFrame.ObjApplet;
                ObjDoc.POType=4;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //=====*
            if(SelModule==25) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOGen","Purchase Order");
                frmPOGen ObjDoc=(frmPOGen) aFrame.ObjApplet;
                ObjDoc.POType=5;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //======*
            if(SelModule==26) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOGen","Purchase Order");
                frmPOGen ObjDoc=(frmPOGen) aFrame.ObjApplet;
                ObjDoc.POType=6;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //=====*
            if(SelModule==27) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOGen","Purchase Order");
                frmPOGen ObjDoc=(frmPOGen) aFrame.ObjApplet;
                ObjDoc.POType=7;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //Amendments
            //======*
            if(SelModule==28) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOAmendGen","Purchase Order Amendment");
                frmPOAmendGen ObjDoc=(frmPOAmendGen) aFrame.ObjApplet;
                ObjDoc.POType=1;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            
            //=======*
            if(SelModule==29) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOAmendGen","Purchase Order Amendment");
                frmPOAmendGen ObjDoc=(frmPOAmendGen) aFrame.ObjApplet;
                ObjDoc.POType=2;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //========*
            if(SelModule==30) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOAmendGen","Purchase Order Amendment");
                frmPOAmendGen ObjDoc=(frmPOAmendGen) aFrame.ObjApplet;
                ObjDoc.POType=3;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //=======*
            if(SelModule==31) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOAmendGen","Purchase Order Amendment");
                frmPOAmendGen ObjDoc=(frmPOAmendGen) aFrame.ObjApplet;
                ObjDoc.POType=4;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //======*
            if(SelModule==32) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOAmendGen","Purchase Order Amendment");
                frmPOAmendGen ObjDoc=(frmPOAmendGen) aFrame.ObjApplet;
                ObjDoc.POType=5;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //=======*
            if(SelModule==33) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOAmendGen","Purchase Order Amendment");
                frmPOAmendGen ObjDoc=(frmPOAmendGen) aFrame.ObjApplet;
                ObjDoc.POType=6;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //=======*
            if(SelModule==34) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Purchase Order");
                aFrame.startAppletEx("EITLERP.Purchase.frmPOAmendGen","Purchase Order Amendment");
                frmPOAmendGen ObjDoc=(frmPOAmendGen) aFrame.ObjApplet;
                ObjDoc.POType=7;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
            //======*
            if(SelModule==38) {
                DocNo=(String)Table.getValueAt(Table.getSelectedRow(), 0);
                AppletFrame aFrame=new AppletFrame("Rate Approval");
                aFrame.startAppletEx("EITLERP.Purchase.frmRateApproval","Rate Approval");
                frmRateApproval ObjDoc=(frmRateApproval) aFrame.ObjApplet;
                ObjDoc.FindEx((int)EITLERPGLOBAL.gCompanyID,DocNo);
            }
            
        }
        
    }//GEN-LAST:event_cmdOpenActionPerformed
    
    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:
        FormatGridNormal();
        String strSQL="";
        
        SelModule=EITLERPGLOBAL.getComboCode(cmbModule);
        
        String HeaderTable=clsModules.getHeaderTableName(EITLERPGLOBAL.gCompanyID, SelModule);
        String DocNoField=clsModules.getDocNoFieldName(EITLERPGLOBAL.gCompanyID,SelModule);
        String DocDateField=clsModules.getDocDateFieldName(EITLERPGLOBAL.gCompanyID,SelModule);
        
        if(!DocDateField.trim().equals(""))
        {
        strSQL="SELECT "+DocNoField+" AS DOC_NO,"+DocDateField+" AS DOC_DATE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,APPROVED  FROM "+HeaderTable+" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ";
        }
        else
        {
        strSQL="SELECT "+DocNoField+" AS DOC_NO,'' AS DOC_DATE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,APPROVED  FROM "+HeaderTable+" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ";    
        }
        if(OpgCreated.isSelected()) {
            strSQL+="AND CREATED_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CREATED_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ";
        }
        else {
            strSQL+="AND MODIFIED_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND MODIFIED_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND APPROVED=1 ";
        }
        
        if(chkDept.isSelected()) {
            if(OpgCreated.isSelected()) {
                strSQL+="AND CREATED_BY IN (SELECT USER_ID FROM D_COM_USER_MASTER WHERE DEPT_ID="+EITLERPGLOBAL.getComboCode(cmbDept)+") ";
            }
            else {
                strSQL+="AND MODIFIED_BY IN (SELECT USER_ID FROM D_COM_USER_MASTER WHERE DEPT_ID="+EITLERPGLOBAL.getComboCode(cmbDept)+") AND APPROVED=1 ";
            }
        }
        
        
        //Now Generate the Grid
        try {
            Connection tmpConn;
            Statement stTmp;
            ResultSet rsTmp;
            
            tmpConn=data.getConn();
            stTmp=tmpConn.createStatement();
            rsTmp=stTmp.executeQuery(strSQL);
            
            rsTmp.first();
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Object[] rowData=new Object[4];
                    
                    rowData[0]=rsTmp.getString("DOC_NO");
                    rowData[1]=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                    
                    int UserID=rsTmp.getInt("CREATED_BY");
                    int DeptID=clsUser.getDeptID(EITLERPGLOBAL.gCompanyID, UserID);
                    String DeptName=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,DeptID);
                    
                    rowData[2]=DeptName;
                    
                    if(OpgCreated.isSelected()) {
                        rowData[3]=EITLERPGLOBAL.formatDate(rsTmp.getString("CREATED_DATE"));
                    }
                    else {
                        rowData[3]=EITLERPGLOBAL.formatDate(rsTmp.getString("MODIFIED_DATE"));
                    }
                    
                    DataModel.addRow(rowData);
                    
                    rsTmp.next();
                }
            }
            
            rsTmp.close();
            stTmp.close();
            //tmpConn.close();
            
            
        }
        catch(Exception e) {
            
        }
        
        
        
    }//GEN-LAST:event_cmdShowActionPerformed
    
    private void chkDeptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDeptItemStateChanged
        
        // TODO add your handling code here:
        cmbDept.setEnabled(chkDept.isSelected());
    }//GEN-LAST:event_chkDeptItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton OpgCreated;
    private javax.swing.JRadioButton OpgFinalApproved;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkDept;
    private javax.swing.JComboBox cmbDept;
    private javax.swing.JComboBox cmbModule;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdOpen;
    private javax.swing.JButton cmdShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        String strCondition="";
        
        //----- Generate cmbType ------- //
        cmbModuleModel=new EITLComboModel();
        cmbModule.removeAllItems();
        cmbModule.setModel(cmbModuleModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND USE_APPROVAL=1 ORDER BY MODULE_ID";
        
        List=clsModules.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsModules ObjModules=(clsModules) List.get(Integer.toString(i));
            //Check that Module Access Rights are given
            int ModuleID=(int)ObjModules.getAttribute("MODULE_ID").getVal();
            int MenuID=clsMenu.getMenuIDFromModule(EITLERPGLOBAL.gCompanyID, ModuleID);
            
            if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,MenuID)) {
                //Get the Count of Pending Documents
                ComboData aData=new ComboData();
                aData.Text=((String) ObjModules.getAttribute("MODULE_DESC").getObj());
                aData.Code=(int) ObjModules.getAttribute("MODULE_ID").getVal();
                cmbModuleModel.addElement(aData);
                
            }
        }
        
        
        //----- Generate Department Combo ------- //
        cmbDeptModel=new EITLComboModel();
        cmbDept.removeAllItems();
        cmbDept.setModel(cmbDeptModel);
        
        List=clsDepartment.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID);
        for(int i=1;i<=List.size();i++) {
            clsDepartment ObjDept=(clsDepartment) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjDept.getAttribute("DEPT_ID").getVal();
            aData.Text=(String)ObjDept.getAttribute("DEPT_DESC").getObj();
            cmbDeptModel.addElement(aData);
        }
        //------------------------------ //
        
        
    }
    
    
    private void FormatGridNormal() {
        DataModel=new EITLTableModel();
        
        Table.removeAll();
        Table.setModel(DataModel);
        
        //Set the table Readonly
        DataModel.TableReadOnly(true);
        
        //Add Columns
        DataModel.addColumn("Document No.");
        DataModel.addColumn("Document Date");
        DataModel.addColumn("Created by Dept");
        
        if(OpgCreated.isSelected()) {
            DataModel.addColumn("Created On");
        }
        else {
            DataModel.addColumn("Final Approved On");
        }
        
        
        
        //Now hide the column 1
        TableColumnModel ColModel=Table.getColumnModel();
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }
}
