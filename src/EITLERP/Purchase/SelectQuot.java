/*
 * frmInquiry.java
 *
 * Created on June 05, 2004, 11:58 AM
 */

package EITLERP.Purchase;

/** 
 *
 * @author  nrpithva
 */
/*<APPLET CODE=SelectQuot.Class HEIGHT=400 WIDTH=700></APPLET>*/
 
import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.sql.*;
import java.net.*;
 
public class SelectQuot extends javax.swing.JApplet {
    
    private EITLTableModel DataModel;
    private EITLTableCellRenderer Rend=new EITLTableCellRenderer();

    public boolean Cancelled=true;
    public HashMap colSelItems=new HashMap();
    private JDialog aDialog;
    //public int ModuleID=0;
    private String SelQuotNo="";

    public boolean CopyHeader=true;
    public clsQuotation ObjQuotation;
    
    private EITLComboModel cmbDeptModel;
    private int SelDeptID=0;
    public String condition = "";
    
    public SelectQuot()
    {
       System.gc();
       initComponents();
       FormatGrid();
    }
   
    /*public void init()
    {
       System.gc();
       initComponents();
       FormatGrid();
      
    }*/
    
   private void FormatGrid()    
{
        DataModel=new EITLTableModel();
        
        Table.removeAll();
        
        Table.setModel(DataModel);
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        for(int i=1;i<=9;i++)
        {
            DataModel.SetReadOnly(i);
        }
        
        //Add Columns to it
        DataModel.addColumn(""); //0 Selection
        DataModel.addColumn("Sr.");//1
        DataModel.addColumn("Item ID");//2
        DataModel.addColumn("Item Name");//3
        DataModel.addColumn("Qty");//4
        DataModel.addColumn("Unit ID");//5
        DataModel.addColumn("Unit");//6
        DataModel.addColumn("Rate");//7
        DataModel.addColumn("Total Amount");//8
        DataModel.addColumn("Remarks");//9
        DataModel.addColumn("Inquiry No.");//10
        DataModel.addColumn("Inquiry Sr No.");//11
        DataModel.addColumn("PO Qty");//12
        DataModel.addColumn("Balance Qty");//13
        
        Rend.setCustomComponent(0,"CheckBox");
        Table.getColumnModel().getColumn(0).setCellRenderer(Rend);
        Table.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(new JCheckBox()));
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtQuotNo = new javax.swing.JTextField();
        cmdShow = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdSelectAll = new javax.swing.JButton();
        cmdClearAll = new javax.swing.JButton();
        cmdOK = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        chkCopyHeader = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        txtSuppCode = new javax.swing.JTextField();
        txtSuppName = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel1.setText("Select Quotation Items from the List");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 260, 15);

        jLabel2.setDisplayedMnemonic('M');
        jLabel2.setText("Quot No.");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(16, 84, 56, 15);

        txtQuotNo.setNextFocusableComponent(cmdShow);
        txtQuotNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuotNoKeyPressed(evt);
            }
        });

        getContentPane().add(txtQuotNo);
        txtQuotNo.setBounds(76, 82, 106, 19);

        cmdShow.setMnemonic('S');
        cmdShow.setText("Show Items");
        cmdShow.setNextFocusableComponent(Table);
        cmdShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShow);
        cmdShow.setBounds(192, 82, 120, 22);

        jPanel4.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jPanel4);
        jPanel4.setBounds(10, 114, 662, 6);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setNextFocusableComponent(cmdOK);
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(12, 126, 660, 214);

        cmdSelectAll.setText("Select All");
        cmdSelectAll.setNextFocusableComponent(cmdClearAll);
        cmdSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSelectAll);
        cmdSelectAll.setBounds(16, 364, 106, 25);

        cmdClearAll.setText("Clear All");
        cmdClearAll.setNextFocusableComponent(txtSuppCode);
        cmdClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdClearAll);
        cmdClearAll.setBounds(134, 364, 102, 25);

        cmdOK.setText("OK");
        cmdOK.setNextFocusableComponent(cmdCancel);
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOK);
        cmdOK.setBounds(502, 362, 78, 25);

        cmdCancel.setText("Cancel");
        cmdCancel.setNextFocusableComponent(cmdSelectAll);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(586, 362, 79, 25);

        chkCopyHeader.setMnemonic('C');
        chkCopyHeader.setSelected(true);
        chkCopyHeader.setText("Copy Header Information");
        getContentPane().add(chkCopyHeader);
        chkCopyHeader.setBounds(502, 10, 170, 23);

        jLabel4.setText("Supplier");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(18, 54, 52, 15);

        txtSuppCode.setNextFocusableComponent(txtQuotNo);
        txtSuppCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuppCodeFocusLost(evt);
            }
        });
        txtSuppCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSuppCodeKeyPressed(evt);
            }
        });

        getContentPane().add(txtSuppCode);
        txtSuppCode.setBounds(76, 50, 62, 19);

        txtSuppName.setEditable(false);
        getContentPane().add(txtSuppName);
        txtSuppName.setBounds(142, 50, 212, 19);

    }//GEN-END:initComponents

    private void txtSuppCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppCodeFocusLost
        // TODO add your handling code here:
        if(!txtSuppCode.getText().trim().equals("")) {
            try
            {
            txtSuppName.setText(clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID, txtSuppCode.getText()));

            String SelSuppID=txtSuppCode.getText().trim();
            String  strSQL="SELECT COUNT(*) AS THE_COUNT FROM D_PUR_QUOT_HEADER,D_PUR_QUOT_DETAIL,D_PUR_QUOT_APPROVAL_HEADER,D_PUR_QUOT_APPROVAL_DETAIL WHERE D_PUR_QUOT_APPROVAL_HEADER.COMPANY_ID=D_PUR_QUOT_APPROVAL_DETAIL.COMPANY_ID AND D_PUR_QUOT_APPROVAL_HEADER.APPROVAL_NO=D_PUR_QUOT_APPROVAL_DETAIL.APPROVAL_NO AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_APPROVAL_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_APPROVAL_DETAIL.QUOT_ID AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_DETAIL.QUOT_ID AND D_PUR_QUOT_APPROVAL_DETAIL.APPROVED=1 AND D_PUR_QUOT_DETAIL.PO_QTY<=0 AND D_PUR_QUOT_APPROVAL_DETAIL.APPROVED=1 AND D_PUR_QUOT_APPROVAL_DETAIL.SUPP_ID='"+SelSuppID+"' AND D_PUR_QUOT_HEADER.COMPANY_ID="+EITLERPGLOBAL.gCompanyID;
            
            Connection tmpConn=data.getConn();
            Statement stTmp;
            ResultSet rsTmp;
            
            //First get the No. of records
            stTmp=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsTmp=stTmp.executeQuery(strSQL);
            rsTmp.first();
            
            if(rsTmp.getRow()>0)
            {
               if(rsTmp.getInt("THE_COUNT")==1) 
               {
                    strSQL="SELECT D_PUR_QUOT_HEADER.QUOT_ID,DATE_FORMAT(D_PUR_QUOT_HEADER.QUOT_DATE,'%d/%m/%Y') AS DATE FROM D_PUR_QUOT_HEADER,D_PUR_QUOT_DETAIL,D_PUR_QUOT_APPROVAL_HEADER,D_PUR_QUOT_APPROVAL_DETAIL WHERE D_PUR_QUOT_APPROVAL_HEADER.COMPANY_ID=D_PUR_QUOT_APPROVAL_DETAIL.COMPANY_ID AND D_PUR_QUOT_APPROVAL_HEADER.APPROVAL_NO=D_PUR_QUOT_APPROVAL_DETAIL.APPROVAL_NO AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_APPROVAL_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_APPROVAL_DETAIL.QUOT_ID AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_DETAIL.QUOT_ID AND D_PUR_QUOT_APPROVAL_DETAIL.APPROVED=1 AND D_PUR_QUOT_DETAIL.PO_QTY<=0 AND D_PUR_QUOT_APPROVAL_DETAIL.APPROVED=1 AND D_PUR_QUOT_APPROVAL_DETAIL.SUPP_ID='"+SelSuppID+"' AND D_PUR_QUOT_HEADER.COMPANY_ID="+EITLERPGLOBAL.gCompanyID;
                    stTmp=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery(strSQL);
                    rsTmp.first();
                    
                    String QuotNo=rsTmp.getString("QUOT_ID");
                    txtQuotNo.setText(QuotNo);
               }
            }
            
            
            //tmpConn.close();
            stTmp.close();
            rsTmp.close();
            
            }
            catch(Exception e)
            {}
        }
    }//GEN-LAST:event_txtSuppCodeFocusLost

    private void txtSuppCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSuppCodeKeyPressed
        // TODO add your handling code here:
        //=========== Supplier List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT SUPPLIER_CODE,SUPP_NAME FROM D_COM_SUPP_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND BLOCKED='N' AND APPROVED=1 AND ST35_REGISTERED=1 ORDER BY SUPP_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtSuppCode.setText(aList.ReturnVal);
                txtSuppName.setText(clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,aList.ReturnVal));
            }
        }
        //=========================================
        
    }//GEN-LAST:event_txtSuppCodeKeyPressed

    private void txtQuotNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuotNoKeyPressed
        // TODO add your handling code here:
        //=========== Supplier List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();

            String SelSuppID=txtSuppCode.getText().trim();
            int PartyID=clsParty.getPartyIDFromSupplier(EITLERPGLOBAL.gCompanyID,SelSuppID);
            
            if(txtSuppCode.getText().trim().equals(""))
            {
                aList.SQL="SELECT D_PUR_QUOT_HEADER.QUOT_ID,DATE_FORMAT(D_PUR_QUOT_HEADER.QUOT_DATE,'%d/%m/%Y') AS DATE FROM D_PUR_QUOT_HEADER,D_PUR_QUOT_DETAIL,D_PUR_QUOT_APPROVAL_HEADER,D_PUR_QUOT_APPROVAL_DETAIL WHERE D_PUR_QUOT_APPROVAL_HEADER.COMPANY_ID=D_PUR_QUOT_APPROVAL_DETAIL.COMPANY_ID AND D_PUR_QUOT_APPROVAL_HEADER.APPROVAL_NO=D_PUR_QUOT_APPROVAL_DETAIL.APPROVAL_NO AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_APPROVAL_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_APPROVAL_DETAIL.QUOT_ID AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_DETAIL.QUOT_ID AND D_PUR_QUOT_APPROVAL_DETAIL.APPROVED=1 AND D_PUR_QUOT_DETAIL.PO_QTY<=0 AND D_PUR_QUOT_APPROVAL_DETAIL.APPROVED=1 AND D_PUR_QUOT_HEADER.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND D_PUR_QUOT_HEADER.CANCELLED=0 " + condition;
            }
            else
            {
                aList.SQL="SELECT D_PUR_QUOT_HEADER.QUOT_ID,DATE_FORMAT(D_PUR_QUOT_HEADER.QUOT_DATE,'%d/%m/%Y') AS DATE FROM D_PUR_QUOT_HEADER,D_PUR_QUOT_DETAIL,D_PUR_QUOT_APPROVAL_HEADER,D_PUR_QUOT_APPROVAL_DETAIL WHERE D_PUR_QUOT_APPROVAL_HEADER.COMPANY_ID=D_PUR_QUOT_APPROVAL_DETAIL.COMPANY_ID AND D_PUR_QUOT_APPROVAL_HEADER.APPROVAL_NO=D_PUR_QUOT_APPROVAL_DETAIL.APPROVAL_NO AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_APPROVAL_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_APPROVAL_DETAIL.QUOT_ID AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_DETAIL.QUOT_ID AND D_PUR_QUOT_APPROVAL_DETAIL.APPROVED=1 AND D_PUR_QUOT_DETAIL.PO_QTY<=0 AND D_PUR_QUOT_APPROVAL_DETAIL.APPROVED=1 AND D_PUR_QUOT_APPROVAL_DETAIL.SUPP_ID='"+PartyID+"' AND D_PUR_QUOT_HEADER.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND D_PUR_QUOT_HEADER.CANCELLED=0 " + condition;
            }
            
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                txtQuotNo.setText(aList.ReturnVal);
            }
        }
        //=========================================
    }//GEN-LAST:event_txtQuotNoKeyPressed

    private void cmdClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearAllActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<Table.getRowCount();i++)
        {
           DataModel.setValueAt(Boolean.valueOf(false), i, 0); 
        }
    }//GEN-LAST:event_cmdClearAllActionPerformed

    private void cmdSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectAllActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<Table.getRowCount();i++)
        {
           DataModel.setValueAt(Boolean.valueOf(true), i, 0); 
        }
    }//GEN-LAST:event_cmdSelectAllActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancelled=true;
        aDialog.dispose();
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        // TODO add your handling code here:
         if(Table.getRowCount()<=0) {
            Cancelled=true;
        }
        else {
            SetList();
            Cancelled=false;
        }
        aDialog.dispose();
    }//GEN-LAST:event_cmdOKActionPerformed

    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:
        SelQuotNo=txtQuotNo.getText();
        String strQry = "SELECT * FROM D_PUR_QUOT_HEADER , D_PUR_QUOT_DETAIL  WHERE D_PUR_QUOT_HEADER.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" " +
        " AND D_PUR_QUOT_HEADER.COMPANY_ID=D_PUR_QUOT_DETAIL.COMPANY_ID AND D_PUR_QUOT_HEADER.QUOT_ID=D_PUR_QUOT_DETAIL.QUOT_ID " +
        " AND D_PUR_QUOT_HEADER.QUOT_ID='"+txtQuotNo.getText().trim()+"' AND D_PUR_QUOT_HEADER.APPROVED=1 " +
        " AND D_PUR_QUOT_HEADER.CANCELLED=0 "+condition;
        
        if (! data.IsRecordExist(strQry)) {
            JOptionPane.showMessageDialog(null,"Invalid Quotation No");
            return;
        }
        
        String docStatus=clsQuotation.getDocStatus(EITLERPGLOBAL.gCompanyID, SelQuotNo);
        
        if(!docStatus.trim().equals(""))
        {
          JOptionPane.showMessageDialog(null,docStatus);
          return;
        }
        
        FormatGrid();
        GenerateGrid();
        
        if(Table.getRowCount()==0&&docStatus.trim().equals(""))
        {
          JOptionPane.showMessageDialog(null,"No pending items found");  
        }
    }//GEN-LAST:event_cmdShowActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JCheckBox chkCopyHeader;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdClearAll;
    private javax.swing.JButton cmdOK;
    private javax.swing.JButton cmdSelectAll;
    private javax.swing.JButton cmdShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtQuotNo;
    private javax.swing.JTextField txtSuppCode;
    private javax.swing.JTextField txtSuppName;
    // End of variables declaration//GEN-END:variables
    
private void SetList()
{
    int SrNo=0;
    HashMap List=new HashMap();
    
    clsQuotation tmpObj=new clsQuotation();
    tmpObj.LoadData(EITLERPGLOBAL.gCompanyID);
    
    ObjQuotation=(clsQuotation)tmpObj.getObject(EITLERPGLOBAL.gCompanyID, txtQuotNo.getText());
    
    CopyHeader=chkCopyHeader.isSelected();
    
    colSelItems.clear();
    
    List=clsQuotation.getQuotItemListEx(EITLERPGLOBAL.gCompanyID, SelQuotNo,false);    
    //Scan the Table to get selected items
    for(int i=1;i<=List.size();i++)
    {
       clsQuotationItem ObjItem=(clsQuotationItem)List.get(Integer.toString(i));
       SrNo=(int)ObjItem.getAttribute("SR_NO").getVal();
       
        //Search in the table for SrNo.
       for(int j=0;j<Table.getRowCount();j++)
       {
           if(Integer.parseInt(Table.getValueAt(j, 1).toString())==SrNo) 
           {
             if(Table.getValueAt(j,0).toString().equals("true"))  
             {
               //Selected Item  
               colSelItems.put(Integer.toString(colSelItems.size()+1),ObjItem);
             }
           }
       }
    }
}

private void GenerateGrid()
{
    HashMap List=new HashMap();
    String QuotNo=txtQuotNo.getText(); 
    
    if(!QuotNo.equals(""))
    {
       List=clsQuotation.getQuotItemListEx(EITLERPGLOBAL.gCompanyID, QuotNo, false);
       
       for(int i=1;i<=List.size();i++)
       {
           
           clsQuotationItem ObjItem=(clsQuotationItem)List.get(Integer.toString(i));
           Object[] rowData=new Object[14];
           
           rowData[0]=Boolean.valueOf(true); //By default not selected
           rowData[1]=Integer.toString((int)ObjItem.getAttribute("SR_NO").getVal());
           rowData[2]=(String)ObjItem.getAttribute("ITEM_ID").getObj();
           rowData[3]=clsItem.getItemName(EITLERPGLOBAL.gCompanyID,(String)ObjItem.getAttribute("ITEM_ID").getObj());
           rowData[4]=Double.toString(ObjItem.getAttribute("QTY").getVal());
           rowData[5]=Integer.toString((int)ObjItem.getAttribute("UNIT").getVal());
           rowData[6]=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID, "UNIT", (int)ObjItem.getAttribute("UNIT").getVal());
           rowData[7]=Double.toString(ObjItem.getAttribute("RATE").getVal());
           rowData[8]=Double.toString(ObjItem.getAttribute("TOTAL_AMOUNT").getVal());
           rowData[9]=(String)ObjItem.getAttribute("REMARKS").getObj();
           rowData[10]=(String)ObjItem.getAttribute("INQUIRY_NO").getObj();
           rowData[11]=Integer.toString((int)ObjItem.getAttribute("INQUIRY_SRNO").getVal());
           rowData[12]=Double.toString(ObjItem.getAttribute("PO_QTY").getVal());
           rowData[13]=Double.toString(ObjItem.getAttribute("BAL_QTY").getVal());
           
           DataModel.addRow(rowData);
           
           //Set the Collection
           //DataModel.SetUserObject(Table.getRowCount()-1, colLot);
       }
    }
    
}

    //Recurses through the hierarchy of classes
    //until it finds Frame
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }

public boolean ShowList() {
        try {
            FormatGrid();

            setSize(700,430);
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"Select Inquiry Items",true);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(false);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            aDialog.show();
        }
        catch(Exception e) {
        }
        return !Cancelled;
    }       




}
