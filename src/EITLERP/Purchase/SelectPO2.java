/*
 * SelectMIR.java
 *
 * Created on May 12, 2004, 11:11 AM
 */

package EITLERP.Purchase;

/**
 *
 * @author  nrpithva
 */
/*<APPLET CODE=SelectPO2.Class HEIGHT=430 WIDTH=700></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;

public class SelectPO2 extends javax.swing.JApplet {
    
    private EITLTableModel DataModel;
    private EITLTableCellRenderer Rend=new EITLTableCellRenderer();
    private EITLComboModel cmbPOTypeModel;
    
    public boolean Cancelled=true;
    public HashMap colSelItems=new HashMap();
    private JDialog aDialog;
    public int ModuleID=0;
    private String SelPONo="";
    public int POType=1;
    
    public boolean CopyHeader=true;
    public clsPOGen ObjPO;
    
    private EITLComboModel cmbDeptModel;
    private int SelDeptID=0;
    
    public SelectPO2() {
        System.gc();
        setSize(700,430);
        initComponents();
        FormatGrid();
        GenerateCombo();
    }
    
    /** Initializes the applet SelectMIR */
    public void init() {
        System.gc();
        setSize(700,430);
        initComponents();
        FormatGrid();
        GenerateCombo();
        
        int DeptID=clsUser.getDeptID(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID);
        EITLERPGLOBAL.setComboIndex(cmbDept,DeptID);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPONo = new javax.swing.JTextField();
        cmdShow = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        cmdOK = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdSelectAll = new javax.swing.JButton();
        cmdClearAll = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cmbPOType = new javax.swing.JComboBox();
        chkCopyHeader = new javax.swing.JCheckBox();
        cmbDept = new javax.swing.JComboBox();
        chkDept = new javax.swing.JCheckBox();

        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel1.setText("Select PO Items from the List");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 212, 15);

        jLabel2.setDisplayedMnemonic('N');
        jLabel2.setLabelFor(txtPONo);
        jLabel2.setText("P.O. No.");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(14, 110, 56, 15);

        txtPONo.setNextFocusableComponent(cmdShow);
        txtPONo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPONoKeyPressed(evt);
            }
        });

        getContentPane().add(txtPONo);
        txtPONo.setBounds(76, 108, 106, 22);

        cmdShow.setMnemonic('S');
        cmdShow.setText("Show Items");
        cmdShow.setNextFocusableComponent(Table);
        cmdShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShow);
        cmdShow.setBounds(190, 108, 109, 22);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setNextFocusableComponent(cmdSelectAll);
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(8, 166, 660, 224);

        jPanel4.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jPanel4);
        jPanel4.setBounds(8, 152, 662, 6);

        cmdOK.setText("OK");
        cmdOK.setNextFocusableComponent(cmdCancel);
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOK);
        cmdOK.setBounds(500, 396, 78, 25);

        cmdCancel.setText("Cancel");
        cmdCancel.setNextFocusableComponent(cmbPOType);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(584, 396, 79, 25);

        cmdSelectAll.setText("Select All");
        cmdSelectAll.setNextFocusableComponent(cmdClearAll);
        cmdSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSelectAll);
        cmdSelectAll.setBounds(16, 396, 106, 25);

        cmdClearAll.setText("Clear All");
        cmdClearAll.setNextFocusableComponent(cmdOK);
        cmdClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdClearAll);
        cmdClearAll.setBounds(134, 396, 102, 25);

        jLabel3.setDisplayedMnemonic('T');
        jLabel3.setLabelFor(cmbPOType);
        jLabel3.setText("PO Type");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(12, 82, 56, 15);

        cmbPOType.setNextFocusableComponent(txtPONo);
        getContentPane().add(cmbPOType);
        cmbPOType.setBounds(76, 78, 224, 24);

        chkCopyHeader.setMnemonic('C');
        chkCopyHeader.setSelected(true);
        chkCopyHeader.setText("Copy Header Information");
        getContentPane().add(chkCopyHeader);
        chkCopyHeader.setBounds(502, 10, 170, 23);

        cmbDept.setEnabled(false);
        getContentPane().add(cmbDept);
        cmbDept.setBounds(76, 48, 224, 24);

        chkDept.setText("Dept");
        chkDept.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDeptItemStateChanged(evt);
            }
        });

        getContentPane().add(chkDept);
        chkDept.setBounds(9, 49, 61, 23);

    }//GEN-END:initComponents
    
    private void chkDeptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDeptItemStateChanged
        // TODO add your handling code here:
        if(chkDept.isSelected()) {
            cmbDept.setEnabled(true);
        }
        else {
            cmbDept.setEnabled(false);
        }
    }//GEN-LAST:event_chkDeptItemStateChanged
    
    private void txtPONoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPONoKeyPressed
        // TODO add your handling code here:
        //=========== Supplier List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            String strSQL="";
            
            LOV aList=new LOV();
            
            int POType=EITLERPGLOBAL.getComboCode(cmbPOType);
            
            SelDeptID=EITLERPGLOBAL.getComboCode(cmbDept);
            
            if(chkDept.isSelected()) {

                //aList.SQL= "SELECT DISTINCT(D_PUR_PO_HEADER.PO_NO) AS PO_NO,DATE_FORMAT(PO_DATE,'%d/%m/%Y') AS DATE,DEPT_DESC AS DEPT FROM D_PUR_PO_HEADER LEFT JOIN D_COM_USER_MASTER ON (BUYER=USER_ID) LEFT JOIN D_COM_DEPT_MASTER ON (D_COM_USER_MASTER.DEPT_ID=D_COM_DEPT_MASTER.DEPT_ID),D_PUR_PO_DETAIL WHERE D_PUR_PO_HEADER.COMPANY_ID=D_PUR_PO_DETAIL.COMPANY_ID AND D_PUR_PO_HEADER.PO_NO=D_PUR_PO_DETAIL.PO_NO AND D_PUR_PO_HEADER.PO_TYPE=D_PUR_PO_DETAIL.PO_TYPE AND D_PUR_PO_HEADER.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND D_PUR_PO_HEADER.PO_TYPE="+POType+" AND D_PUR_PO_DETAIL.RECD_QTY<D_PUR_PO_DETAIL.QTY AND D_PUR_PO_HEADER.APPROVED=1 AND D_PUR_PO_HEADER.CANCELLED=0 AND D_COM_DEPT_MASTER.DEPT_ID="+SelDeptID+" ORDER BY D_PUR_PO_HEADER.PO_NO";
                
                strSQL="SELECT  DISTINCT(A.PO_NO) AS PO_NO,DATE_FORMAT(A.PO_DATE,'%d/%m/%Y') AS DATE,D.DEPT_DESC AS DEPT,B.QTY ";
                strSQL+="FROM ";
                strSQL+="D_PUR_PO_HEADER A, ";
                strSQL+="D_PUR_PO_DETAIL B ";
                strSQL+="LEFT JOIN D_INV_MIR_DETAIL M ON (M.PO_NO=B.PO_NO AND M.PO_SR_NO=B.SR_NO AND M.PO_TYPE=B.PO_TYPE AND M.MIR_NO IN (SELECT MIR_NO FROM D_INV_MIR_HEADER WHERE MIR_NO=M.MIR_NO AND MIR_TYPE=M.MIR_TYPE AND APPROVED=1 AND CANCELLED=0) ), ";
                strSQL+="D_COM_DEPT_MASTER D ";
                strSQL+="WHERE A.COMPANY_ID=B.COMPANY_ID AND ";
                strSQL+="A.PO_NO=B.PO_NO AND ";
                strSQL+="A.PO_TYPE=B.PO_TYPE AND ";
                strSQL+="A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ";
                strSQL+="A.APPROVED=1 AND A.CANCELLED=0 AND ";
                strSQL+="A.PO_TYPE="+POType+" AND ";
                strSQL+="B.DEPT_ID="+SelDeptID+" AND ";
                strSQL+="B.COMPANY_ID=D.COMPANY_ID AND B.DEPT_ID=D.DEPT_ID ";
                strSQL+="GROUP BY B.PO_NO,B.PO_TYPE,B.SR_NO ";
                strSQL+="HAVING IF(SUM(M.QTY) IS NULL,0,SUM(M.QTY))<B.QTY ";
                
                aList.SQL=strSQL;
            }
            else {
                //aList.SQL= "SELECT DISTINCT(D_PUR_PO_HEADER.PO_NO) AS PO_NO,DATE_FORMAT(PO_DATE,'%d/%m/%Y') AS DATE,DEPT_DESC AS DEPT FROM D_PUR_PO_HEADER LEFT JOIN D_COM_USER_MASTER ON (BUYER=USER_ID) LEFT JOIN D_COM_DEPT_MASTER ON (D_COM_USER_MASTER.DEPT_ID=D_COM_DEPT_MASTER.DEPT_ID),D_PUR_PO_DETAIL WHERE D_PUR_PO_HEADER.COMPANY_ID=D_PUR_PO_DETAIL.COMPANY_ID AND D_PUR_PO_HEADER.PO_NO=D_PUR_PO_DETAIL.PO_NO AND D_PUR_PO_HEADER.PO_TYPE=D_PUR_PO_DETAIL.PO_TYPE AND D_PUR_PO_HEADER.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND D_PUR_PO_HEADER.PO_TYPE="+POType+" AND D_PUR_PO_DETAIL.RECD_QTY<D_PUR_PO_DETAIL.QTY AND D_PUR_PO_HEADER.APPROVED=1 AND D_PUR_PO_HEADER.CANCELLED=0 ORDER BY D_PUR_PO_HEADER.PO_NO";
                
                strSQL="SELECT DISTINCT(A.PO_NO) AS PO_NO,DATE_FORMAT(A.PO_DATE,'%d/%m/%Y') AS DATE,D.DEPT_DESC AS DEPT,B.QTY ";
                strSQL+="FROM ";
                strSQL+="D_PUR_PO_HEADER A, ";
                strSQL+="D_PUR_PO_DETAIL B ";
                strSQL+="LEFT JOIN D_INV_MIR_DETAIL M ON (M.PO_NO=B.PO_NO AND M.PO_SR_NO=B.SR_NO AND M.PO_TYPE=B.PO_TYPE AND M.MIR_NO IN (SELECT MIR_NO FROM D_INV_MIR_HEADER WHERE MIR_NO=M.MIR_NO AND MIR_TYPE=M.MIR_TYPE AND APPROVED=1 AND CANCELLED=0)), ";
                strSQL+="D_COM_DEPT_MASTER D ";
                strSQL+="WHERE A.COMPANY_ID=B.COMPANY_ID AND ";
                strSQL+="A.PO_NO=B.PO_NO AND ";
                strSQL+="A.PO_TYPE=B.PO_TYPE AND ";
                strSQL+="A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND ";
                strSQL+="A.APPROVED=1 AND A.CANCELLED=0 AND ";
                strSQL+="A.PO_TYPE="+POType+" AND ";
                strSQL+="B.COMPANY_ID=D.COMPANY_ID AND B.DEPT_ID=D.DEPT_ID ";
                strSQL+="GROUP BY B.PO_NO,B.PO_TYPE,B.SR_NO ";
                strSQL+="HAVING IF(SUM(M.QTY) IS NULL,0,SUM(M.QTY))<B.QTY ";
                
                aList.SQL=strSQL;
                
            }
            
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                txtPONo.setText(aList.ReturnVal);
            }
        }
        //=========================================
    }//GEN-LAST:event_txtPONoKeyPressed
    
    private void cmdClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearAllActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<Table.getRowCount();i++) {
            DataModel.setValueAt(Boolean.valueOf(false), i, 0);
        }
    }//GEN-LAST:event_cmdClearAllActionPerformed
    
    private void cmdSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectAllActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<Table.getRowCount();i++) {
            DataModel.setValueAt(Boolean.valueOf(true), i, 0);
        }
    }//GEN-LAST:event_cmdSelectAllActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancelled=true;
        aDialog.dispose();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        // TODO add your handling code here:
        if(Table.getRowCount()<=0) {
            Cancelled=true;
        }
        else {
            SetList();
            Cancelled=false;
        }
        aDialog.dispose();
    }//GEN-LAST:event_cmdOKActionPerformed
    
    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:
        SelPONo=txtPONo.getText();
        
        String docStatus=clsPOGen.getDocStatus(EITLERPGLOBAL.gCompanyID,SelPONo);
        
        if(!docStatus.trim().equals("")) {
            JOptionPane.showMessageDialog(null,docStatus);
            return;
        }
        
        FormatGrid();
        GenerateGrid();
        
        if(Table.getRowCount()==0&&docStatus.trim().equals("")) {
            JOptionPane.showMessageDialog(null,"No Pending Items found");
        }
    }//GEN-LAST:event_cmdShowActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JCheckBox chkCopyHeader;
    private javax.swing.JCheckBox chkDept;
    private javax.swing.JComboBox cmbDept;
    private javax.swing.JComboBox cmbPOType;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdClearAll;
    private javax.swing.JButton cmdOK;
    private javax.swing.JButton cmdSelectAll;
    private javax.swing.JButton cmdShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtPONo;
    // End of variables declaration//GEN-END:variables
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        
        Table.removeAll();
        
        Table.setModel(DataModel);
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        for(int i=1;i<=17;i++) {
            DataModel.SetReadOnly(i);
        }
        
        //Add Columns to it
        DataModel.addColumn(""); //0 Selection
        DataModel.addColumn("Sr.");//1
        DataModel.addColumn("Item ID");//2
        DataModel.addColumn("Item Name");//3
        DataModel.addColumn("Item Description");//3
        DataModel.addColumn("Part No.");//4
        DataModel.addColumn("Qty");//5
        DataModel.addColumn("Unit");//6
        DataModel.addColumn("Rate");//7
        DataModel.addColumn("Discount %");//8
        DataModel.addColumn("Discount Amount");//9
        DataModel.addColumn("Total Amount");//10
        DataModel.addColumn("Net Amount");//11
        DataModel.addColumn("Indent No.");//12
        DataModel.addColumn("Indent Sr.");//13
        DataModel.addColumn("Reference");//14
        DataModel.addColumn("Delivery Date");//15
        DataModel.addColumn("Remarks");//16
        
        Rend.setCustomComponent(0,"CheckBox");
        Table.getColumnModel().getColumn(0).setCellRenderer(Rend);
        Table.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(new JCheckBox()));
    }
    
    private void SetList() {
        int SrNo=0;
        HashMap List=new HashMap();
        
        
        clsPOGen tmpObj=new clsPOGen();
        //tmpObj.POType=clsPOGen.getPOType(EITLERPGLOBAL.gCompanyID, txtPONo.getText());
        int POType=EITLERPGLOBAL.getComboCode(cmbPOType);
        
        ObjPO=(clsPOGen)tmpObj.getObject(EITLERPGLOBAL.gCompanyID,txtPONo.getText(),POType);
        
        CopyHeader=chkCopyHeader.isSelected();
        
        colSelItems.clear();
        
        String PONo=txtPONo.getText();
        POType=EITLERPGLOBAL.getComboCode(cmbPOType);
        
        List=clsPOGen.getPOItemList(EITLERPGLOBAL.gCompanyID, PONo,false,POType);
        //Scan the Table to get selected items
        for(int i=1;i<=List.size();i++) {
            clsPOItem ObjItem=(clsPOItem)List.get(Integer.toString(i));
            
            SrNo=(int)ObjItem.getAttribute("SR_NO").getVal();
            
            //Search in the table for SrNo.
            for(int j=0;j<Table.getRowCount();j++) {
                if(Integer.parseInt(Table.getValueAt(j, 1).toString())==SrNo) {
                    if(Table.getValueAt(j,0).toString().equals("true")) {
                        //Selected Item
                        colSelItems.put(Integer.toString(colSelItems.size()+1),ObjItem);
                    }
                }
            }
        }
    }
    
    private void GenerateGrid() {
        HashMap List=new HashMap();
        String PONo=txtPONo.getText();
        int POType=EITLERPGLOBAL.getComboCode(cmbPOType);
        
        if(!PONo.equals("")) {
            List=clsPOGen.getPOItemList(EITLERPGLOBAL.gCompanyID, PONo,false,POType);
            
            for(int i=1;i<=List.size();i++) {
                clsPOItem ObjItem=(clsPOItem)List.get(Integer.toString(i));
                
                Object[] rowData=new Object[18];
                
                rowData[0]=Boolean.valueOf(false); //By default not selected
                rowData[1]=Integer.toString((int)ObjItem.getAttribute("SR_NO").getVal());
                rowData[2]=(String)ObjItem.getAttribute("ITEM_ID").getObj();
                rowData[3]=clsItem.getItemName(EITLERPGLOBAL.gCompanyID,(String)ObjItem.getAttribute("ITEM_ID").getObj());
                rowData[4]=(String)ObjItem.getAttribute("ITEM_DESC").getObj();
                rowData[5]=(String)ObjItem.getAttribute("PART_NO").getObj();
                rowData[6]=Double.toString(ObjItem.getAttribute("QTY").getVal());
                rowData[7]=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID, "UNIT", (int)ObjItem.getAttribute("UNIT").getVal());
                rowData[8]=Double.toString(ObjItem.getAttribute("RATE").getVal());
                rowData[9]=Double.toString(ObjItem.getAttribute("DISC_PER").getVal());
                rowData[10]=Double.toString(ObjItem.getAttribute("DISC_AMT").getVal());
                rowData[11]=Double.toString(ObjItem.getAttribute("TOTAL_AMOUNT").getVal());
                rowData[12]=Double.toString(ObjItem.getAttribute("NET_AMOUNT").getVal());
                rowData[13]=(String)ObjItem.getAttribute("INDENT_NO").getObj();
                rowData[14]=Integer.toString((int)ObjItem.getAttribute("INDENT_SR_NO").getVal());
                rowData[15]=(String)ObjItem.getAttribute("REFERENCE").getObj();
                rowData[16]=EITLERPGLOBAL.formatDate((String)ObjItem.getAttribute("DELIVERY_DATE").getObj());
                rowData[17]=(String)ObjItem.getAttribute("REMARKS").getObj();
                
                DataModel.addRow(rowData);
            }
        }
        
    }
    
    //Recurses through the hierarchy of classes
    //until it finds Frame
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    public boolean ShowList() {
        try {
            FormatGrid();
            
            setSize(700,440);
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"Select PO Items",true);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(true);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            aDialog.show();
        }
        catch(Exception e) {
        }
        return !Cancelled;
    }
    
    private void GenerateCombo() {
        HashMap List=new HashMap();
        String strCondition="";
        
        
        //--- Generate Type Combo ------//
        cmbPOTypeModel =new EITLComboModel();
        cmbPOType.removeAllItems();
        cmbPOType.setModel(cmbPOTypeModel);
        
        ComboData aData=new ComboData();
        aData.Code=1;
        aData.Text="General";
        cmbPOTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="Engineering";
        cmbPOTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=3;
        aData.Text="A Class";
        cmbPOTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=4;
        aData.Text="Raw Material";
        cmbPOTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=5;
        aData.Text="Spares";
        cmbPOTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=6;
        aData.Text="Capital Goods";
        cmbPOTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=7;
        aData.Text="Contract";
        cmbPOTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=9;
        aData.Text="Merchandise";
        cmbPOTypeModel.addElement(aData);
        
        //===============================//
        
        
        //----- Generate cmbType ------- //
        cmbDeptModel=new EITLComboModel();
        cmbDept.removeAllItems();
        cmbDept.setModel(cmbDeptModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" ";
        
        List=clsDepartment.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsDepartment ObjDept=(clsDepartment) List.get(Integer.toString(i));
            ComboData theData=new ComboData();
            theData.Code=(int) ObjDept.getAttribute("DEPT_ID").getVal();
            theData.Text=(String)ObjDept.getAttribute("DEPT_DESC").getObj();
            theData.strCode="";
            cmbDeptModel.addElement(theData);
        }
        //------------------------------ //
        
    }
    
}
