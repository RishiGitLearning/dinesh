/* frmFeltSalesInfo.java 
 * 
 * 
 * Created on July 13, 2005, 10:47 AM
 */
package EITLERP.Purchase.Reports.New;

import EITLERP.*;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.sql.*;
import javax.swing.*;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.table.JTableHeader;


/**
 *
 * @author ashutosh/RISHI
 */
public class frmStoresQueryReport extends javax.swing.JApplet {
    public boolean forceToChange=false;
    public boolean cancelled=false;
    private EITLTableModel[] DataModel;
    private EITLTableModel DataModelB2B = new EITLTableModel();  
    private EITLTableModel DataModelB2BMIR = new EITLTableModel();  
    private EITLTableModel DataModelB2BInvwise = new EITLTableModel();  
    private EITLTableModel DataModelB2BMIRInvwise = new EITLTableModel();  
    private EITLTableModel DataModelB2BGR = new EITLTableModel();  
    
   //private EITLTableModel DataModelB2BHSN = new EITLTableModel();  
    
    String strProductCode = "";
    private JDialog aDialog;
    DateFormat df =  new SimpleDateFormat("dd-MMM-yy");
    HashMap hmPieceList=new HashMap();
    String ORDER_BY="";
    //private clsExcelExporter exp = new clsExcelExporter();
    private EITLERP.Production.FeltCreditNote.clsExcelExporter exp = new EITLERP.Production.FeltCreditNote.clsExcelExporter();
    private clsExcelExporterB2BHSN expHSN = new clsExcelExporterB2BHSN();
    
    public void init() {
        initComponents();
        file1.setVisible(false);
       // file2.setVisible(false);
        FormatGrid();//780, 560
        
        setSize(780,660);
        jLabel1.setForeground(Color.WHITE);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        Table_b2b = new javax.swing.JTable();
        btnShowB2B = new javax.swing.JButton();
        Export_B2B = new javax.swing.JButton();
        file1 = new javax.swing.JFileChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        totalInvAmt = new javax.swing.JTextField();
        totalTaxAmt = new javax.swing.JTextField();
        totalCGSTAmt = new javax.swing.JTextField();
        totalSGSTAmt = new javax.swing.JTextField();
        totalIGSTAmt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnShowB2BMIR = new javax.swing.JButton();
        Export_B2BMIR = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        Table_b2bMIR = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        totalInvAmt1 = new javax.swing.JTextField();
        totalTaxAmt1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        totalSGSTAmt1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        totalCGSTAmt1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        totalIGSTAmt1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnShowB2B1 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        Table_b2b_Invwise = new javax.swing.JTable();
        totalSGSTAmtInvwise = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        totalCGSTAmtInvwise = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        totalTaxAmtInvwise = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        Export_B2B1 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        totalIGSTAmtInvwise = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        totalInvAmtInvwise = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnShowB2B2 = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        Table_b2b_MIRInvwise = new javax.swing.JTable();
        totalSGSTAmtMIRInvwise = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        totalCGSTAmtMIRInvwise = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        totalTaxAmtMIRInvwise = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        Export_B2B2 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        totalIGSTAmtMIRInvwise = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        totalInvAmtMIRInvwise = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnShowB2BGR = new javax.swing.JButton();
        Export_B2BGR = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        Table_b2bGR = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        totalGRInvAmt = new javax.swing.JTextField();
        totalGRTaxAmt = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        totalGRSGSTITCAmt = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        totalGRCGSTITCAmt = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        totalGRIGSTITCAmt = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        CLR_BTN = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setBackground(new java.awt.Color(0, 102, 153));
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 70, 780, 10);

        txtFromDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(170, 30, 110, 30);

        txtToDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        txtToDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToDateFocusGained(evt);
            }
        });
        getContentPane().add(txtToDate);
        txtToDate.setBounds(380, 30, 100, 30);

        jPanel10.setLayout(null);

        Table_b2b.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_b2b.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_b2b.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_b2b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_b2bKeyPressed(evt);
            }
        });
        jScrollPane10.setViewportView(Table_b2b);

        jPanel10.add(jScrollPane10);
        jScrollPane10.setBounds(10, 50, 720, 340);

        btnShowB2B.setText("Show List");
        btnShowB2B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowB2BActionPerformed(evt);
            }
        });
        jPanel10.add(btnShowB2B);
        btnShowB2B.setBounds(10, 10, 130, 30);

        Export_B2B.setText("EXPORT TO EXCEL");
        Export_B2B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_B2BActionPerformed(evt);
            }
        });
        jPanel10.add(Export_B2B);
        Export_B2B.setBounds(540, 10, 170, 28);
        jPanel10.add(file1);
        file1.setBounds(150, 10, 435, 370);

        jLabel6.setText("INVOICE VALUE");
        jPanel10.add(jLabel6);
        jLabel6.setBounds(110, 400, 110, 16);

        jLabel7.setText("TAXABLE VALUE");
        jPanel10.add(jLabel7);
        jLabel7.setBounds(230, 400, 110, 16);

        jLabel8.setText("CGST VALUE");
        jPanel10.add(jLabel8);
        jLabel8.setBounds(480, 400, 110, 16);

        jLabel9.setText("SGST VALUE");
        jPanel10.add(jLabel9);
        jLabel9.setBounds(360, 400, 110, 16);

        jLabel10.setText("IGST VALUE");
        jPanel10.add(jLabel10);
        jLabel10.setBounds(600, 400, 120, 16);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("GRN");
        jPanel10.add(jLabel11);
        jLabel11.setBounds(30, 400, 110, 17);
        jPanel10.add(totalInvAmt);
        totalInvAmt.setBounds(110, 420, 110, 28);
        jPanel10.add(totalTaxAmt);
        totalTaxAmt.setBounds(230, 420, 110, 28);
        jPanel10.add(totalCGSTAmt);
        totalCGSTAmt.setBounds(470, 420, 110, 28);
        jPanel10.add(totalSGSTAmt);
        totalSGSTAmt.setBounds(350, 420, 110, 28);
        jPanel10.add(totalIGSTAmt);
        totalIGSTAmt.setBounds(590, 420, 110, 28);

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("TOTAL :");
        jPanel10.add(jLabel12);
        jLabel12.setBounds(30, 423, 110, 17);

        jTabbedPane2.addTab("GRN & Jobwork B2B", jPanel10);

        jPanel1.setLayout(null);

        btnShowB2BMIR.setText("Show List");
        btnShowB2BMIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowB2BMIRActionPerformed(evt);
            }
        });
        jPanel1.add(btnShowB2BMIR);
        btnShowB2BMIR.setBounds(10, 10, 130, 30);

        Export_B2BMIR.setText("EXPORT TO EXCEL");
        Export_B2BMIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_B2BMIRActionPerformed(evt);
            }
        });
        jPanel1.add(Export_B2BMIR);
        Export_B2BMIR.setBounds(540, 10, 170, 28);

        Table_b2bMIR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_b2bMIR.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_b2bMIR.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_b2bMIR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_b2bMIRKeyPressed(evt);
            }
        });
        jScrollPane11.setViewportView(Table_b2bMIR);

        jPanel1.add(jScrollPane11);
        jScrollPane11.setBounds(10, 50, 720, 340);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel13.setText("MIR");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(30, 400, 110, 17);

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel14.setText("TOTAL :");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(30, 423, 110, 17);

        jLabel15.setText("INVOICE VALUE");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(110, 400, 110, 16);
        jPanel1.add(totalInvAmt1);
        totalInvAmt1.setBounds(110, 420, 110, 28);
        jPanel1.add(totalTaxAmt1);
        totalTaxAmt1.setBounds(230, 420, 110, 28);

        jLabel16.setText("TAXABLE VALUE");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(230, 400, 110, 16);
        jPanel1.add(totalSGSTAmt1);
        totalSGSTAmt1.setBounds(350, 420, 110, 28);

        jLabel17.setText("SGST VALUE");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(360, 400, 110, 16);
        jPanel1.add(totalCGSTAmt1);
        totalCGSTAmt1.setBounds(470, 420, 110, 28);

        jLabel18.setText("CGST VALUE");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(480, 400, 110, 16);
        jPanel1.add(totalIGSTAmt1);
        totalIGSTAmt1.setBounds(590, 420, 110, 28);

        jLabel19.setText("IGST VALUE");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(600, 400, 120, 16);

        jTabbedPane2.addTab("MIR B2B", jPanel1);

        jPanel2.setLayout(null);

        btnShowB2B1.setText("Show List");
        btnShowB2B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowB2B1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnShowB2B1);
        btnShowB2B1.setBounds(10, 10, 130, 30);

        Table_b2b_Invwise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_b2b_Invwise.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_b2b_Invwise.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_b2b_Invwise.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_b2b_InvwiseKeyPressed(evt);
            }
        });
        jScrollPane12.setViewportView(Table_b2b_Invwise);

        jPanel2.add(jScrollPane12);
        jScrollPane12.setBounds(10, 50, 720, 340);
        jPanel2.add(totalSGSTAmtInvwise);
        totalSGSTAmtInvwise.setBounds(350, 420, 110, 28);

        jLabel20.setText("CGST VALUE");
        jPanel2.add(jLabel20);
        jLabel20.setBounds(480, 400, 110, 16);
        jPanel2.add(totalCGSTAmtInvwise);
        totalCGSTAmtInvwise.setBounds(470, 420, 110, 28);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel21.setText("TOTAL :");
        jPanel2.add(jLabel21);
        jLabel21.setBounds(30, 423, 110, 17);
        jPanel2.add(totalTaxAmtInvwise);
        totalTaxAmtInvwise.setBounds(230, 420, 110, 28);

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel22.setText("GRN");
        jPanel2.add(jLabel22);
        jLabel22.setBounds(30, 400, 110, 17);

        jLabel23.setText("TAXABLE VALUE");
        jPanel2.add(jLabel23);
        jLabel23.setBounds(230, 400, 110, 16);

        Export_B2B1.setText("EXPORT TO EXCEL");
        Export_B2B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_B2B1ActionPerformed(evt);
            }
        });
        jPanel2.add(Export_B2B1);
        Export_B2B1.setBounds(540, 10, 170, 28);

        jLabel24.setText("SGST VALUE");
        jPanel2.add(jLabel24);
        jLabel24.setBounds(360, 400, 110, 16);
        jPanel2.add(totalIGSTAmtInvwise);
        totalIGSTAmtInvwise.setBounds(590, 420, 110, 28);

        jLabel25.setText("IGST VALUE");
        jPanel2.add(jLabel25);
        jLabel25.setBounds(600, 400, 120, 16);
        jPanel2.add(totalInvAmtInvwise);
        totalInvAmtInvwise.setBounds(110, 420, 110, 28);

        jLabel26.setText("INVOICE VALUE");
        jPanel2.add(jLabel26);
        jLabel26.setBounds(110, 400, 110, 16);

        jTabbedPane2.addTab("GRN & Jobwork (B2B) Invoicewise", jPanel2);

        jPanel3.setLayout(null);

        btnShowB2B2.setText("Show List");
        btnShowB2B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowB2B2ActionPerformed(evt);
            }
        });
        jPanel3.add(btnShowB2B2);
        btnShowB2B2.setBounds(10, 10, 130, 30);

        Table_b2b_MIRInvwise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_b2b_MIRInvwise.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_b2b_MIRInvwise.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_b2b_MIRInvwise.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_b2b_MIRInvwiseKeyPressed(evt);
            }
        });
        jScrollPane13.setViewportView(Table_b2b_MIRInvwise);

        jPanel3.add(jScrollPane13);
        jScrollPane13.setBounds(10, 50, 720, 340);
        jPanel3.add(totalSGSTAmtMIRInvwise);
        totalSGSTAmtMIRInvwise.setBounds(350, 420, 110, 28);

        jLabel27.setText("CGST VALUE");
        jPanel3.add(jLabel27);
        jLabel27.setBounds(480, 400, 110, 16);
        jPanel3.add(totalCGSTAmtMIRInvwise);
        totalCGSTAmtMIRInvwise.setBounds(470, 420, 110, 28);

        jLabel28.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel28.setText("TOTAL :");
        jPanel3.add(jLabel28);
        jLabel28.setBounds(30, 423, 110, 17);
        jPanel3.add(totalTaxAmtMIRInvwise);
        totalTaxAmtMIRInvwise.setBounds(230, 420, 110, 28);

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel29.setText("GRN");
        jPanel3.add(jLabel29);
        jLabel29.setBounds(30, 400, 110, 17);

        jLabel30.setText("TAXABLE VALUE");
        jPanel3.add(jLabel30);
        jLabel30.setBounds(230, 400, 110, 16);

        Export_B2B2.setText("EXPORT TO EXCEL");
        Export_B2B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_B2B2ActionPerformed(evt);
            }
        });
        jPanel3.add(Export_B2B2);
        Export_B2B2.setBounds(540, 10, 170, 28);

        jLabel31.setText("SGST VALUE");
        jPanel3.add(jLabel31);
        jLabel31.setBounds(360, 400, 110, 16);
        jPanel3.add(totalIGSTAmtMIRInvwise);
        totalIGSTAmtMIRInvwise.setBounds(590, 420, 110, 28);

        jLabel32.setText("IGST VALUE");
        jPanel3.add(jLabel32);
        jLabel32.setBounds(600, 400, 120, 16);
        jPanel3.add(totalInvAmtMIRInvwise);
        totalInvAmtMIRInvwise.setBounds(110, 420, 110, 28);

        jLabel33.setText("INVOICE VALUE");
        jPanel3.add(jLabel33);
        jLabel33.setBounds(110, 400, 110, 16);

        jTabbedPane2.addTab("MIR B2B Invoicewise", jPanel3);

        jPanel4.setLayout(null);

        btnShowB2BGR.setText("Show List");
        btnShowB2BGR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowB2BGRActionPerformed(evt);
            }
        });
        jPanel4.add(btnShowB2BGR);
        btnShowB2BGR.setBounds(10, 10, 130, 30);

        Export_B2BGR.setText("EXPORT TO EXCEL");
        Export_B2BGR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_B2BGRActionPerformed(evt);
            }
        });
        jPanel4.add(Export_B2BGR);
        Export_B2BGR.setBounds(540, 10, 170, 28);

        Table_b2bGR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_b2bGR.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_b2bGR.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_b2bGR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_b2bGRKeyPressed(evt);
            }
        });
        jScrollPane14.setViewportView(Table_b2bGR);

        jPanel4.add(jScrollPane14);
        jScrollPane14.setBounds(10, 50, 720, 340);

        jLabel34.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel34.setText("GR");
        jPanel4.add(jLabel34);
        jLabel34.setBounds(30, 400, 110, 17);

        jLabel35.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel35.setText("TOTAL :");
        jPanel4.add(jLabel35);
        jLabel35.setBounds(30, 423, 110, 17);

        jLabel36.setText("INVOICE VALUE");
        jPanel4.add(jLabel36);
        jLabel36.setBounds(110, 400, 110, 16);
        jPanel4.add(totalGRInvAmt);
        totalGRInvAmt.setBounds(110, 420, 110, 28);
        jPanel4.add(totalGRTaxAmt);
        totalGRTaxAmt.setBounds(230, 420, 110, 28);

        jLabel37.setText("TAXABLE VALUE");
        jPanel4.add(jLabel37);
        jLabel37.setBounds(230, 400, 110, 16);
        jPanel4.add(totalGRSGSTITCAmt);
        totalGRSGSTITCAmt.setBounds(350, 420, 110, 28);

        jLabel38.setText("SGST VALUE");
        jPanel4.add(jLabel38);
        jLabel38.setBounds(360, 400, 110, 16);
        jPanel4.add(totalGRCGSTITCAmt);
        totalGRCGSTITCAmt.setBounds(470, 420, 110, 28);

        jLabel39.setText("CGST VALUE");
        jPanel4.add(jLabel39);
        jLabel39.setBounds(480, 400, 110, 16);
        jPanel4.add(totalGRIGSTITCAmt);
        totalGRIGSTITCAmt.setBounds(590, 420, 110, 28);

        jLabel40.setText("IGST VALUE");
        jPanel4.add(jLabel40);
        jLabel40.setBounds(600, 400, 120, 16);

        jTabbedPane2.addTab("GR B2B", jPanel4);

        getContentPane().add(jTabbedPane2);
        jTabbedPane2.setBounds(0, 80, 760, 560);

        CLR_BTN.setText("Clear");
        CLR_BTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CLR_BTN.setMargin(new java.awt.Insets(2, 7, 2, 7));
        CLR_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLR_BTNActionPerformed(evt);
            }
        });
        getContentPane().add(CLR_BTN);
        CLR_BTN.setBounds(540, 30, 80, 30);

        jLabel3.setText("Period : ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 30, 60, 20);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("From Date :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 30, 100, 20);

        jLabel5.setText("To Date :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(310, 30, 70, 20);

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Stores GRN and MIR Report");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 2, 780, 25);
    }// </editor-fold>//GEN-END:initComponents

    private void txtToDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToDateFocusGained
                                 
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
    }//GEN-LAST:event_formMouseClicked

    private void Table_b2bKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_b2bKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_b2bKeyPressed

    private void btnShowB2BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowB2BActionPerformed
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        FormatGrid();
        GenerateGRNB2BData(ORDER_BY);
    }//GEN-LAST:event_btnShowB2BActionPerformed

    private void Export_B2BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_B2BActionPerformed
        //        // TODO add your handling code here:
        //        try{
            //            exp.fillData(Table_b2b,new File("/root/Desktop/gstr1_B2B.xls"));
            //            exp.fillData(Table_b2b,new File("D://gstr1_B2B.xls"));
            //            JOptionPane.showMessageDialog(null, "Data saved at " +
                //                "'/root/Desktop/gstr1_B2B.xls' successfully in Linux PC or 'D://gstr1_B2B.xls' successfully in Windows PC    ", "Message",
                //                JOptionPane.INFORMATION_MESSAGE);
            //        }
        //        catch(Exception ex) {
            //            ex.printStackTrace();
            //        }
        // TODO add your handling code here:
//        File file = null;
//        file1.setVisible(true);
//        try {
//            int returnVal = file1.showOpenDialog(this);
//            if (returnVal == file1.APPROVE_OPTION) {
//                file1.setSelectedFile(new File("GRN_B2B.xlsx"));
//                file = file1.getSelectedFile();
//            }
//
//            exp.fillData(Table_b2b, file, "B2B_GSTR1");
//            JOptionPane.showMessageDialog(null, "Data saved at "
//                + file1.getSelectedFile().toString() + " successfully... ", "Message",
//                JOptionPane.INFORMATION_MESSAGE);
//        } catch (Exception ex) {
//            //ex.printStackTrace();
//        }
        
        try {
            
            exp.fillData(Table_b2b, new File("/root/Desktop/GRN_B2B.xls"));

            exp.fillData(Table_b2b, new File("D://GRN_B2B.xls"));

            File file = new File("/root/Desktop/GRN_B2B.xls");
            File file1 = new File("D://GRN_B2B.xls");
            if (!Desktop.isDesktopSupported()) {
                JOptionPane.showMessageDialog(null, "Desktop Not Supported");
                return;
            } else {
                Desktop desk = Desktop.getDesktop();
                if (file.exists()) {
                    desk.open(file);
                } else if (file1.exists()) {
                    desk.open(file1);
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_Export_B2BActionPerformed

    private void CLR_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLR_BTNActionPerformed
        txtFromDate.setText("");
        txtToDate.setText("");
        totalInvAmt.setText("");
        totalTaxAmt.setText("");
        totalSGSTAmt.setText("");
        totalCGSTAmt.setText("");
        totalIGSTAmt.setText("");
        FormatGrid();
        
    }//GEN-LAST:event_CLR_BTNActionPerformed

    private void btnShowB2BMIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowB2BMIRActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        FormatGridMIR();
        GenerateMIRB2BData(ORDER_BY);
    }//GEN-LAST:event_btnShowB2BMIRActionPerformed

    private void Export_B2BMIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_B2BMIRActionPerformed
        // TODO add your handling code here:
        try {
            
            exp.fillData(Table_b2bMIR, new File("/root/Desktop/MIR_B2B.xls"));

            exp.fillData(Table_b2bMIR, new File("D://MIR_B2B.xls"));

            File file = new File("/root/Desktop/MIR_B2B.xls");
            File file1 = new File("D://MIR_B2B.xls");
            if (!Desktop.isDesktopSupported()) {
                JOptionPane.showMessageDialog(null, "Desktop Not Supported");
                return;
            } else {
                Desktop desk = Desktop.getDesktop();
                if (file.exists()) {
                    desk.open(file);
                } else if (file1.exists()) {
                    desk.open(file1);
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_B2BMIRActionPerformed

    private void Table_b2bMIRKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_b2bMIRKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_b2bMIRKeyPressed

    private void btnShowB2B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowB2B1ActionPerformed
if ( ! Validate()) {
            return;
        }
        FormatGridB2BInvwise();
        GenerateGRNB2BInvwiseData(ORDER_BY);
    }//GEN-LAST:event_btnShowB2B1ActionPerformed

    private void Table_b2b_InvwiseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_b2b_InvwiseKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_b2b_InvwiseKeyPressed

    private void Export_B2B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_B2B1ActionPerformed
try {
            
            exp.fillData(Table_b2b_Invwise, new File("/root/Desktop/GRN_B2B.xls"));

            exp.fillData(Table_b2b_Invwise, new File("D://GRN_B2B.xls"));

            File file = new File("/root/Desktop/GRN_B2B.xls");
            File file1 = new File("D://GRN_B2B.xls");
            if (!Desktop.isDesktopSupported()) {
                JOptionPane.showMessageDialog(null, "Desktop Not Supported");
                return;
            } else {
                Desktop desk = Desktop.getDesktop();
                if (file.exists()) {
                    desk.open(file);
                } else if (file1.exists()) {
                    desk.open(file1);
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_B2B1ActionPerformed

    private void btnShowB2B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowB2B2ActionPerformed
     if ( ! Validate()) {
            return;
        }
        FormatGridMIRInvwise();
        GenerateMIRB2BInvwiseData(ORDER_BY);
    }//GEN-LAST:event_btnShowB2B2ActionPerformed

    private void Table_b2b_MIRInvwiseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_b2b_MIRInvwiseKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_b2b_MIRInvwiseKeyPressed

    private void Export_B2B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_B2B2ActionPerformed
try {            
            exp.fillData(Table_b2b_MIRInvwise, new File("/root/Desktop/MIR_B2B.xls"));
            exp.fillData(Table_b2b_MIRInvwise, new File("D://MIR_B2B.xls"));

            File file = new File("/root/Desktop/MIR_B2B.xls");
            File file1 = new File("D://MIR_B2B.xls");
            if (!Desktop.isDesktopSupported()) {
                JOptionPane.showMessageDialog(null, "Desktop Not Supported");
                return;
            } else {
                Desktop desk = Desktop.getDesktop();
                if (file.exists()) {
                    desk.open(file);
                } else if (file1.exists()) {
                    desk.open(file1);
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_B2B2ActionPerformed

    private void btnShowB2BGRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowB2BGRActionPerformed
        if (!Validate()) {
            return;
        }
        FormatGridGR();
        GenerateGRB2BData(ORDER_BY);
    }//GEN-LAST:event_btnShowB2BGRActionPerformed

    private void Export_B2BGRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_B2BGRActionPerformed
try {
            
            exp.fillData(Table_b2bGR, new File("/root/Desktop/GR_B2B.xls"));

            exp.fillData(Table_b2bGR, new File("D://GR_B2B.xls"));

            File file = new File("/root/Desktop/GR_B2B.xls");
            File file1 = new File("D://GR_B2B.xls");
            if (!Desktop.isDesktopSupported()) {
                JOptionPane.showMessageDialog(null, "Desktop Not Supported");
                return;
            } else {
                Desktop desk = Desktop.getDesktop();
                if (file.exists()) {
                    desk.open(file);
                } else if (file1.exists()) {
                    desk.open(file1);
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_B2BGRActionPerformed

    private void Table_b2bGRKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_b2bGRKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_b2bGRKeyPressed
                
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLR_BTN;
    private javax.swing.JButton Export_B2B;
    private javax.swing.JButton Export_B2B1;
    private javax.swing.JButton Export_B2B2;
    private javax.swing.JButton Export_B2BGR;
    private javax.swing.JButton Export_B2BMIR;
    private javax.swing.JTable Table_b2b;
    private javax.swing.JTable Table_b2bGR;
    private javax.swing.JTable Table_b2bMIR;
    private javax.swing.JTable Table_b2b_Invwise;
    private javax.swing.JTable Table_b2b_MIRInvwise;
    private javax.swing.JButton btnShowB2B;
    private javax.swing.JButton btnShowB2B1;
    private javax.swing.JButton btnShowB2B2;
    private javax.swing.JButton btnShowB2BGR;
    private javax.swing.JButton btnShowB2BMIR;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFileChooser file1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField totalCGSTAmt;
    private javax.swing.JTextField totalCGSTAmt1;
    private javax.swing.JTextField totalCGSTAmtInvwise;
    private javax.swing.JTextField totalCGSTAmtMIRInvwise;
    private javax.swing.JTextField totalGRCGSTITCAmt;
    private javax.swing.JTextField totalGRIGSTITCAmt;
    private javax.swing.JTextField totalGRInvAmt;
    private javax.swing.JTextField totalGRSGSTITCAmt;
    private javax.swing.JTextField totalGRTaxAmt;
    private javax.swing.JTextField totalIGSTAmt;
    private javax.swing.JTextField totalIGSTAmt1;
    private javax.swing.JTextField totalIGSTAmtInvwise;
    private javax.swing.JTextField totalIGSTAmtMIRInvwise;
    private javax.swing.JTextField totalInvAmt;
    private javax.swing.JTextField totalInvAmt1;
    private javax.swing.JTextField totalInvAmtInvwise;
    private javax.swing.JTextField totalInvAmtMIRInvwise;
    private javax.swing.JTextField totalSGSTAmt;
    private javax.swing.JTextField totalSGSTAmt1;
    private javax.swing.JTextField totalSGSTAmtInvwise;
    private javax.swing.JTextField totalSGSTAmtMIRInvwise;
    private javax.swing.JTextField totalTaxAmt;
    private javax.swing.JTextField totalTaxAmt1;
    private javax.swing.JTextField totalTaxAmtInvwise;
    private javax.swing.JTextField totalTaxAmtMIRInvwise;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private boolean Validate() {
        //Form level validations
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter from Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter To Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        return true;
    }
    
    private void FormatGrid() {
        try {
            DataModelB2B = new EITLTableModel();
            Table_b2b.removeAll();

            Table_b2b.setModel(DataModelB2B);
            Table_b2b.setAutoResizeMode(0);

            DataModelB2B.addColumn("SrNo"); //0 - Read Only
            DataModelB2B.addColumn("GSTIN/UIN of Recipient"); //1
            DataModelB2B.addColumn("Party Name"); //2
            DataModelB2B.addColumn("INVOICE NO"); //3
            DataModelB2B.addColumn("INVOICE DATE"); //4
            DataModelB2B.addColumn("Total Value"); //5
            DataModelB2B.addColumn("Taxable Value"); //6
            DataModelB2B.addColumn("HSN Code"); //7
            DataModelB2B.addColumn("GST Rate"); //8
            DataModelB2B.addColumn("IGST AMT"); //9
            DataModelB2B.addColumn("CGST AMT"); //10
            DataModelB2B.addColumn("SGST AMT"); //11
            DataModelB2B.addColumn("CESS"); //12
            DataModelB2B.addColumn("Place of Supply"); //13
            DataModelB2B.addColumn("Eligibility"); //14
            DataModelB2B.addColumn("IGST Amt ITC"); //15
            DataModelB2B.addColumn("CGST Amt ITC"); //16
            DataModelB2B.addColumn("SGST Amt ITC"); //17
            DataModelB2B.addColumn("CESS ITC"); //18
            DataModelB2B.addColumn("Invoice No (Amend)"); //19
            DataModelB2B.addColumn("Invoice Date (Amend)"); //20
            
           
            
            DataModelB2B.SetVariable(0, "SR_N0"); 
            DataModelB2B.SetVariable(1, "GSTIN_UIN"); 
            DataModelB2B.SetVariable(2, "TRADE_NAME"); 
            DataModelB2B.SetVariable(3, "INVOICE_NO"); 
            DataModelB2B.SetVariable(4, "INVOICE_DATE"); 
            DataModelB2B.SetVariable(5, "INVOICE_AMT");
            DataModelB2B.SetVariable(6, "TAXABLE_VALUE");
            DataModelB2B.SetVariable(7, "HSN_CODE");
            DataModelB2B.SetVariable(8, "GST_RATE");
            DataModelB2B.SetVariable(9, "IGST_AMT");
            DataModelB2B.SetVariable(10, "CGST_AMT");
            DataModelB2B.SetVariable(11, "SGST_AMT");
            DataModelB2B.SetVariable(12, "CESS");
            DataModelB2B.SetVariable(13, "POS");
            DataModelB2B.SetVariable(14, "ITEM_ID");
            DataModelB2B.SetVariable(15, "IGST_AMT_ITC");
            DataModelB2B.SetVariable(16, "CGST_AMT_ITC");
            DataModelB2B.SetVariable(17, "SGST_AMT_ITC");
            DataModelB2B.SetVariable(18, "CESS_ITC");
            DataModelB2B.SetVariable(19, "INVOICE_NO_AMEND");
            DataModelB2B.SetVariable(20, "INVOICE_DATE_AMEND");
            
            
            
            for(int i=0;i<=17;i++) {
                DataModelB2B.SetReadOnly(i);
            }
                        
            Table_b2b.getColumnModel().getColumn(0).setMinWidth(30);
            Table_b2b.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_b2b.getColumnModel().getColumn(1).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_b2b.getColumnModel().getColumn(2).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(2).setMaxWidth(80);
            //Table_b2b.getColumnModel().getColumn(3).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(3).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(4).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(5).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_b2b.getColumnModel().getColumn(6).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_b2b.getColumnModel().getColumn(7).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(8).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(9).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_b2b.getColumnModel().getColumn(10).setMaxWidth(100);
            Table_b2b.getColumnModel().getColumn(11).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(12).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(13).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(14).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(15).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(16).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(17).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(18).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(19).setMinWidth(100);
            Table_b2b.getColumnModel().getColumn(20).setMinWidth(100);
            
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void FormatGridB2BInvwise() {
        try {
            DataModelB2BInvwise = new EITLTableModel();
            Table_b2b_Invwise.removeAll();

            Table_b2b_Invwise.setModel(DataModelB2BInvwise);
            Table_b2b_Invwise.setAutoResizeMode(0);

            DataModelB2BInvwise.addColumn("SrNo"); //0 - Read Only
            DataModelB2BInvwise.addColumn("GSTIN/UIN of Recipient"); //1
            DataModelB2BInvwise.addColumn("Party Name"); //2
            DataModelB2BInvwise.addColumn("INVOICE NO"); //3
            DataModelB2BInvwise.addColumn("INVOICE DATE"); //4
            DataModelB2BInvwise.addColumn("Total Value"); //5
            DataModelB2BInvwise.addColumn("Taxable Value"); //6
            DataModelB2BInvwise.addColumn("HSN Code"); //7
            DataModelB2BInvwise.addColumn("GST Rate"); //8
            DataModelB2BInvwise.addColumn("IGST AMT"); //9
            DataModelB2BInvwise.addColumn("CGST AMT"); //10
            DataModelB2BInvwise.addColumn("SGST AMT"); //11
            DataModelB2BInvwise.addColumn("CESS"); //12
            DataModelB2BInvwise.addColumn("Place of Supply"); //13
            DataModelB2BInvwise.addColumn("Eligibility"); //14
            DataModelB2BInvwise.addColumn("IGST Amt ITC"); //15
            DataModelB2BInvwise.addColumn("CGST Amt ITC"); //16
            DataModelB2BInvwise.addColumn("SGST Amt ITC"); //17
            DataModelB2BInvwise.addColumn("CESS ITC"); //18
            DataModelB2BInvwise.addColumn("Invoice No (Amend)"); //19
            DataModelB2BInvwise.addColumn("Invoice Date (Amend)"); //20
            
           
            
            DataModelB2BInvwise.SetVariable(0, "SR_N0"); 
            DataModelB2BInvwise.SetVariable(1, "GSTIN_UIN"); 
            DataModelB2BInvwise.SetVariable(2, "TRADE_NAME"); 
            DataModelB2BInvwise.SetVariable(3, "INVOICE_NO"); 
            DataModelB2BInvwise.SetVariable(4, "INVOICE_DATE"); 
            DataModelB2BInvwise.SetVariable(5, "INVOICE_AMT");
            DataModelB2BInvwise.SetVariable(6, "TAXABLE_VALUE");
            DataModelB2BInvwise.SetVariable(7, "HSN_CODE");
            DataModelB2BInvwise.SetVariable(8, "GST_RATE");
            DataModelB2BInvwise.SetVariable(9, "IGST_AMT");
            DataModelB2BInvwise.SetVariable(10, "CGST_AMT");
            DataModelB2BInvwise.SetVariable(11, "SGST_AMT");
            DataModelB2BInvwise.SetVariable(12, "CESS");
            DataModelB2BInvwise.SetVariable(13, "POS");
            DataModelB2BInvwise.SetVariable(14, "ITEM_ID");
            DataModelB2BInvwise.SetVariable(15, "IGST_AMT_ITC");
            DataModelB2BInvwise.SetVariable(16, "CGST_AMT_ITC");
            DataModelB2BInvwise.SetVariable(17, "SGST_AMT_ITC");
            DataModelB2BInvwise.SetVariable(18, "CESS_ITC");
            DataModelB2BInvwise.SetVariable(19, "INVOICE_NO_AMEND");
            DataModelB2BInvwise.SetVariable(20, "INVOICE_DATE_AMEND");
            
            
            
            for(int i=0;i<=17;i++) {
                DataModelB2BInvwise.SetReadOnly(i);
            }
                        
            Table_b2b_Invwise.getColumnModel().getColumn(0).setMinWidth(30);
            Table_b2b_Invwise.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_b2b_Invwise.getColumnModel().getColumn(1).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_b2b_Invwise.getColumnModel().getColumn(2).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(2).setMaxWidth(80);
            //Table_b2b.getColumnModel().getColumn(3).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(3).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_b2b_Invwise.getColumnModel().getColumn(4).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_b2b_Invwise.getColumnModel().getColumn(5).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(6).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(7).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_b2b_Invwise.getColumnModel().getColumn(8).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_b2b_Invwise.getColumnModel().getColumn(9).setMinWidth(100);
            //Table_b2b.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_b2b_Invwise.getColumnModel().getColumn(10).setMaxWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(11).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(12).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(13).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(14).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(15).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(16).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(17).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(18).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(19).setMinWidth(100);
            Table_b2b_Invwise.getColumnModel().getColumn(20).setMinWidth(100);
            
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void FormatGridMIR() {
        try {
            DataModelB2BMIR = new EITLTableModel();
            Table_b2bMIR.removeAll();

            Table_b2bMIR.setModel(DataModelB2BMIR);
            Table_b2bMIR.setAutoResizeMode(0);

            DataModelB2BMIR.addColumn("SrNo"); //0 - Read Only
            DataModelB2BMIR.addColumn("GSTIN/UIN of Recipient"); //1
            DataModelB2BMIR.addColumn("Party Name"); //2
            DataModelB2BMIR.addColumn("INVOICE NO"); //3
            DataModelB2BMIR.addColumn("INVOICE DATE"); //4
            DataModelB2BMIR.addColumn("Total Value"); //5
            DataModelB2BMIR.addColumn("Taxable Value"); //6
            DataModelB2BMIR.addColumn("HSN Code"); //7
            DataModelB2BMIR.addColumn("GST Rate"); //8
            DataModelB2BMIR.addColumn("IGST AMT"); //9
            DataModelB2BMIR.addColumn("CGST AMT"); //10
            DataModelB2BMIR.addColumn("SGST AMT"); //11
            DataModelB2BMIR.addColumn("CESS"); //12
            DataModelB2BMIR.addColumn("Place of Supply"); //13
            DataModelB2BMIR.addColumn("Eligibility"); //14
            DataModelB2BMIR.addColumn("IGST Amt ITC"); //15
            DataModelB2BMIR.addColumn("CGST Amt ITC"); //16
            DataModelB2BMIR.addColumn("SGST Amt ITC"); //17
            DataModelB2BMIR.addColumn("CESS ITC"); //18
            DataModelB2BMIR.addColumn("Invoice No (Amend)"); //19
            DataModelB2BMIR.addColumn("Invoice Date (Amend)"); //20
            
           
            
            DataModelB2BMIR.SetVariable(0, "SR_N0"); 
            DataModelB2BMIR.SetVariable(1, "GSTIN_UIN"); 
            DataModelB2BMIR.SetVariable(2, "TRADE_NAME"); 
            DataModelB2BMIR.SetVariable(3, "INVOICE_NO"); 
            DataModelB2BMIR.SetVariable(4, "INVOICE_DATE"); 
            DataModelB2BMIR.SetVariable(5, "INVOICE_AMT");
            DataModelB2BMIR.SetVariable(6, "TAXABLE_VALUE");
            DataModelB2BMIR.SetVariable(7, "HSN_CODE");
            DataModelB2BMIR.SetVariable(8, "GST_RATE");
            DataModelB2BMIR.SetVariable(9, "IGST_AMT");
            DataModelB2BMIR.SetVariable(10, "CGST_AMT");
            DataModelB2BMIR.SetVariable(11, "SGST_AMT");
            DataModelB2BMIR.SetVariable(12, "CESS");
            DataModelB2BMIR.SetVariable(13, "POS");
            DataModelB2BMIR.SetVariable(14, "ITEM_ID");
            DataModelB2BMIR.SetVariable(15, "IGST_AMT_ITC");
            DataModelB2BMIR.SetVariable(16, "CGST_AMT_ITC");
            DataModelB2BMIR.SetVariable(17, "SGST_AMT_ITC");
            DataModelB2BMIR.SetVariable(18, "CESS_ITC");
            DataModelB2BMIR.SetVariable(19, "INVOICE_NO_AMEND");
            DataModelB2BMIR.SetVariable(20, "INVOICE_DATE_AMEND");
            
            
            
            for(int i=0;i<=17;i++) {
                DataModelB2BMIR.SetReadOnly(i);
            }
                        
            Table_b2bMIR.getColumnModel().getColumn(0).setMinWidth(30);
            Table_b2bMIR.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_b2bMIR.getColumnModel().getColumn(1).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_b2bMIR.getColumnModel().getColumn(2).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(2).setMaxWidth(80);
            //Table_b2bMIR.getColumnModel().getColumn(3).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(3).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_b2bMIR.getColumnModel().getColumn(4).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_b2bMIR.getColumnModel().getColumn(5).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(6).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(7).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_b2bMIR.getColumnModel().getColumn(8).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_b2bMIR.getColumnModel().getColumn(9).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_b2bMIR.getColumnModel().getColumn(10).setMaxWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(11).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(12).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(13).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(14).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(15).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(16).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(17).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(18).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(19).setMinWidth(100);
            Table_b2bMIR.getColumnModel().getColumn(20).setMinWidth(100);
            
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void FormatGridMIRInvwise() {
        try {
            DataModelB2BMIRInvwise = new EITLTableModel();
            Table_b2b_MIRInvwise.removeAll();

            Table_b2b_MIRInvwise.setModel(DataModelB2BMIRInvwise);
            Table_b2b_MIRInvwise.setAutoResizeMode(0);

            DataModelB2BMIRInvwise.addColumn("SrNo"); //0 - Read Only
            DataModelB2BMIRInvwise.addColumn("GSTIN/UIN of Recipient"); //1
            DataModelB2BMIRInvwise.addColumn("Party Name"); //2
            DataModelB2BMIRInvwise.addColumn("INVOICE NO"); //3
            DataModelB2BMIRInvwise.addColumn("INVOICE DATE"); //4
            DataModelB2BMIRInvwise.addColumn("Total Value"); //5
            DataModelB2BMIRInvwise.addColumn("Taxable Value"); //6
            DataModelB2BMIRInvwise.addColumn("HSN Code"); //7
            DataModelB2BMIRInvwise.addColumn("GST Rate"); //8
            DataModelB2BMIRInvwise.addColumn("IGST AMT"); //9
            DataModelB2BMIRInvwise.addColumn("CGST AMT"); //10
            DataModelB2BMIRInvwise.addColumn("SGST AMT"); //11
            DataModelB2BMIRInvwise.addColumn("CESS"); //12
            DataModelB2BMIRInvwise.addColumn("Place of Supply"); //13
            DataModelB2BMIRInvwise.addColumn("Eligibility"); //14
            DataModelB2BMIRInvwise.addColumn("IGST Amt ITC"); //15
            DataModelB2BMIRInvwise.addColumn("CGST Amt ITC"); //16
            DataModelB2BMIRInvwise.addColumn("SGST Amt ITC"); //17
            DataModelB2BMIRInvwise.addColumn("CESS ITC"); //18
            DataModelB2BMIRInvwise.addColumn("Invoice No (Amend)"); //19
            DataModelB2BMIRInvwise.addColumn("Invoice Date (Amend)"); //20
            
           
            
            DataModelB2BMIRInvwise.SetVariable(0, "SR_N0"); 
            DataModelB2BMIRInvwise.SetVariable(1, "GSTIN_UIN"); 
            DataModelB2BMIRInvwise.SetVariable(2, "TRADE_NAME"); 
            DataModelB2BMIRInvwise.SetVariable(3, "INVOICE_NO"); 
            DataModelB2BMIRInvwise.SetVariable(4, "INVOICE_DATE"); 
            DataModelB2BMIRInvwise.SetVariable(5, "INVOICE_AMT");
            DataModelB2BMIRInvwise.SetVariable(6, "TAXABLE_VALUE");
            DataModelB2BMIRInvwise.SetVariable(7, "HSN_CODE");
            DataModelB2BMIRInvwise.SetVariable(8, "GST_RATE");
            DataModelB2BMIRInvwise.SetVariable(9, "IGST_AMT");
            DataModelB2BMIRInvwise.SetVariable(10, "CGST_AMT");
            DataModelB2BMIRInvwise.SetVariable(11, "SGST_AMT");
            DataModelB2BMIRInvwise.SetVariable(12, "CESS");
            DataModelB2BMIRInvwise.SetVariable(13, "POS");
            DataModelB2BMIRInvwise.SetVariable(14, "ITEM_ID");
            DataModelB2BMIRInvwise.SetVariable(15, "IGST_AMT_ITC");
            DataModelB2BMIRInvwise.SetVariable(16, "CGST_AMT_ITC");
            DataModelB2BMIRInvwise.SetVariable(17, "SGST_AMT_ITC");
            DataModelB2BMIRInvwise.SetVariable(18, "CESS_ITC");
            DataModelB2BMIRInvwise.SetVariable(19, "INVOICE_NO_AMEND");
            DataModelB2BMIRInvwise.SetVariable(20, "INVOICE_DATE_AMEND");
            
            
            
            for(int i=0;i<=17;i++) {
                DataModelB2BMIRInvwise.SetReadOnly(i);
            }
                        
            Table_b2b_MIRInvwise.getColumnModel().getColumn(0).setMinWidth(30);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(1).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(2).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(2).setMaxWidth(80);
            //Table_b2bMIR.getColumnModel().getColumn(3).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(3).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(4).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(5).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(6).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(7).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(8).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(9).setMinWidth(100);
            //Table_b2bMIR.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(10).setMaxWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(11).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(12).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(13).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(14).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(15).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(16).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(17).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(18).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(19).setMinWidth(100);
            Table_b2b_MIRInvwise.getColumnModel().getColumn(20).setMinWidth(100);
            
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void FormatGridGR() {
        try {
            DataModelB2BGR = new EITLTableModel();
            Table_b2bGR.removeAll();

            Table_b2bGR.setModel(DataModelB2BGR);
            Table_b2bGR.setAutoResizeMode(0);

            DataModelB2BGR.addColumn("SrNo"); //0 - Read Only
            DataModelB2BGR.addColumn("GSTIN/UIN of Recipient"); //1
            DataModelB2BGR.addColumn("Party Name"); //2
            DataModelB2BGR.addColumn("INVOICE NO"); //3
            DataModelB2BGR.addColumn("INVOICE DATE"); //4
            DataModelB2BGR.addColumn("Total Value"); //5
            DataModelB2BGR.addColumn("Taxable Value"); //6
            DataModelB2BGR.addColumn("HSN Code"); //7
            DataModelB2BGR.addColumn("GST Rate"); //8
            DataModelB2BGR.addColumn("IGST AMT"); //9
            DataModelB2BGR.addColumn("CGST AMT"); //10
            DataModelB2BGR.addColumn("SGST AMT"); //11
            DataModelB2BGR.addColumn("CESS"); //12
            DataModelB2BGR.addColumn("Place of Supply"); //13
            DataModelB2BGR.addColumn("Eligibility"); //14
            DataModelB2BGR.addColumn("IGST Amt ITC"); //15
            DataModelB2BGR.addColumn("CGST Amt ITC"); //16
            DataModelB2BGR.addColumn("SGST Amt ITC"); //17
            DataModelB2BGR.addColumn("CESS ITC"); //18
            DataModelB2BGR.addColumn("Invoice No (Amend)"); //19
            DataModelB2BGR.addColumn("Invoice Date (Amend)"); //20

            DataModelB2BGR.SetVariable(0, "SR_N0");
            DataModelB2BGR.SetVariable(1, "GSTIN_UIN");
            DataModelB2BGR.SetVariable(2, "TRADE_NAME");
            DataModelB2BGR.SetVariable(3, "INVOICE_NO");
            DataModelB2BGR.SetVariable(4, "INVOICE_DATE");
            DataModelB2BGR.SetVariable(5, "INVOICE_AMT");
            DataModelB2BGR.SetVariable(6, "TAXABLE_VALUE");
            DataModelB2BGR.SetVariable(7, "HSN_CODE");
            DataModelB2BGR.SetVariable(8, "GST_RATE");
            DataModelB2BGR.SetVariable(9, "IGST_AMT");
            DataModelB2BGR.SetVariable(10, "CGST_AMT");
            DataModelB2BGR.SetVariable(11, "SGST_AMT");
            DataModelB2BGR.SetVariable(12, "CESS");
            DataModelB2BGR.SetVariable(13, "POS");
            DataModelB2BGR.SetVariable(14, "ITEM_ID");
            DataModelB2BGR.SetVariable(15, "IGST_AMT_ITC");
            DataModelB2BGR.SetVariable(16, "CGST_AMT_ITC");
            DataModelB2BGR.SetVariable(17, "SGST_AMT_ITC");
            DataModelB2BGR.SetVariable(18, "CESS_ITC");
            DataModelB2BGR.SetVariable(19, "INVOICE_NO_AMEND");
            DataModelB2BGR.SetVariable(20, "INVOICE_DATE_AMEND");

            for (int i = 0; i <= 17; i++) {
                DataModelB2BGR.SetReadOnly(i);
            }

            Table_b2bGR.getColumnModel().getColumn(0).setMinWidth(30);
            Table_b2bGR.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_b2bGR.getColumnModel().getColumn(1).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(1).setMaxWidth(70);
            Table_b2bGR.getColumnModel().getColumn(2).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(2).setMaxWidth(80);
            //Table_b2bGR.getColumnModel().getColumn(3).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(3).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(4).setMaxWidth(80);
            Table_b2bGR.getColumnModel().getColumn(4).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(5).setMaxWidth(80);
            Table_b2bGR.getColumnModel().getColumn(5).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(6).setMaxWidth(100);
            Table_b2bGR.getColumnModel().getColumn(6).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(7).setMaxWidth(100);
            Table_b2bGR.getColumnModel().getColumn(7).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(8).setMaxWidth(80);
            Table_b2bGR.getColumnModel().getColumn(8).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(9).setMaxWidth(80);
            Table_b2bGR.getColumnModel().getColumn(9).setMinWidth(100);
            //Table_b2bGR.getColumnModel().getColumn(10).setMaxWidth(80);
            Table_b2bGR.getColumnModel().getColumn(10).setMaxWidth(100);
            Table_b2bGR.getColumnModel().getColumn(11).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(12).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(13).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(14).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(15).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(16).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(17).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(18).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(19).setMinWidth(100);
            Table_b2bGR.getColumnModel().getColumn(20).setMinWidth(100);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void GenerateGRNB2BData(String ORDER_BY) {
        
        try {
            
            
//            data.Execute("");
            /*
            data.Execute("TRUNCATE TABLE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT");
            
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT (SUPP_ID,INVOICE_NO, INVOICE_DATE, INVOICE_AMT,  ITEM_ID, GRN_NO, GRN_DATE, QTY, UNIT, RATE, TOTAL_AMOUNT, NET_AMOUNT,HSN_CODE,IGST_RATE,CGST_RATE,SGST_RATE)  "
                    + " ( SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,H.INVOICE_AMOUNT, D.ITEM_ID,H.GRN_NO,H.GRN_DATE,D.QTY,D.UNIT,D.RATE,D.TOTAL_AMOUNT,D.NET_AMOUNT,D.HSN_SAC_CODE,D.COLUMN_3_PER,D.COLUMN_4_PER,D.COLUMN_5_PER FROM DINESHMILLS.D_INV_GRN_HEADER H,DINESHMILLS.D_INV_GRN_DETAIL D " +
                        "WHERE H.COMPANY_ID=2 AND " +
                        "H.GRN_NO IN ( SELECT distinct B.GRN_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , FINANCE.D_FIN_VOUCHER_DETAIL B " +
                        "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0) " +
                        "AND H.GRN_NO=D.GRN_NO AND H.APPROVED =1 AND H.CANCELLED =0 ORDER BY H.GRN_NO)");
            
            
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B " +
                        " SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE " +
                        " WHERE A.SUPP_ID = B.SUPPLIER_CODE"); 
            
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,DINESHMILLS.D_INV_GRN_HSN B " +
                        " SET A.TAXABLE_VALUE=B.INVOICE_AMOUNT,A.IGST_AMT=B.INVOICE_IGST,A.CGST_AMT=B.INVOICE_CGST" +
                        ",A.SGST_AMT=B.INVOICE_SGST,A.CESS=B.INVOICE_GST_COMP_CESS,A.CGST_AMT_ITC=B.CGST_INPUT_CR_AMT,"
                        + "A.SGST_AMT_ITC=B.SGST_INPUT_CR_AMT,A.IGST_AMT_ITC=B.IGST_INPUT_CR_AMT " +
                        " WHERE A.GRN_NO=B.GRN_NO AND A.GRN_DATE=B.GRN_DATE AND A.HSN_CODE=B.HSN_CODE");
            */
            
            data.Execute("TRUNCATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT");
            /*
            data.Execute(" INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT (" +
                        " GRN_NO,GRN_DATE,TAXABLE_VALUE,HSN_CODE,SGST_AMT,CGST_AMT,IGST_AMT,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC,SGST_RATE,CGST_RATE,IGST_RATE,SUPP_ID,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,CESS)\n" +
                        " " +
                        " SELECT H.GRN_NO,H.GRN_DATE,G.INVOICE_AMOUNT,HSN_CODE,INVOICE_SGST,INVOICE_CGST,INVOICE_IGST,SGST_INPUT_CR_AMT,CGST_INPUT_CR_AMT,IGST_INPUT_CR_AMT,SGST_INPUT_CR_PER,CGST_INPUT_CR_PER,IGST_INPUT_CR_PER,SUPP_ID,INVOICE_NO,INVOICE_DATE,H.INVOICE_AMOUNT,G.INVOICE_GST_COMP_CESS FROM DINESHMILLS.D_INV_GRN_HSN G,DINESHMILLS.D_INV_GRN_HEADER H " +
                        " " +
                        " WHERE H.GRN_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND H.GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  AND G.GRN_NO=H.GRN_NO AND H.APPROVED =1 AND H.CANCELLED =0 ");
            */
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ( " +
                        " GRN_NO,GRN_DATE,TAXABLE_VALUE,HSN_CODE,SGST_AMT,CGST_AMT,IGST_AMT,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC,SGST_RATE,CGST_RATE,IGST_RATE,SUPP_ID,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,CESS) " +
                        " SELECT H.GRN_NO,H.GRN_DATE,G.INVOICE_AMOUNT,HSN_CODE,INVOICE_SGST,INVOICE_CGST,INVOICE_IGST,SGST_INPUT_CR_AMT,CGST_INPUT_CR_AMT,IGST_INPUT_CR_AMT,SGST_INPUT_CR_PER,CGST_INPUT_CR_PER,IGST_INPUT_CR_PER,SUPP_ID,INVOICE_NO,INVOICE_DATE,H.INVOICE_AMOUNT,G.INVOICE_GST_COMP_CESS FROM DINESHMILLS.D_INV_GRN_HSN G,DINESHMILLS.D_INV_GRN_HEADER H " +
                        " WHERE G.GRN_NO= H.GRN_NO AND H.APPROVED =1 AND H.CANCELLED =0 " +
                        " AND H.GRN_NO IN ( SELECT distinct B.GRN_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , FINANCE.D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)");
            
            System.out.println("INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ( " +
                        " GRN_NO,GRN_DATE,TAXABLE_VALUE,HSN_CODE,SGST_AMT,CGST_AMT,IGST_AMT,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC,SGST_RATE,CGST_RATE,IGST_RATE,SUPP_ID,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,CESS) " +
                        " SELECT H.GRN_NO,H.GRN_DATE,G.INVOICE_AMOUNT,HSN_CODE,INVOICE_SGST,INVOICE_CGST,INVOICE_IGST,SGST_INPUT_CR_AMT,CGST_INPUT_CR_AMT,IGST_INPUT_CR_AMT,SGST_INPUT_CR_PER,CGST_INPUT_CR_PER,IGST_INPUT_CR_PER,SUPP_ID,INVOICE_NO,INVOICE_DATE,H.INVOICE_AMOUNT,G.INVOICE_GST_COMP_CESS FROM DINESHMILLS.D_INV_GRN_HSN G,DINESHMILLS.D_INV_GRN_HEADER H " +
                        " WHERE G.GRN_NO= H.GRN_NO AND H.APPROVED =1 AND H.CANCELLED =0 " +
                        " AND H.GRN_NO IN ( SELECT distinct B.GRN_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , FINANCE.D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)");
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT (  GRN_NO,GRN_DATE,TAXABLE_VALUE,HSN_CODE,SGST_AMT,CGST_AMT,IGST_AMT,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC,SGST_RATE,CGST_RATE,IGST_RATE,SUPP_ID,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,CESS)  \n"
                    + " SELECT H.JOB_NO,H.JOB_DATE,G.INVOICE_AMOUNT,HSN_CODE,INVOICE_SGST,INVOICE_CGST,INVOICE_IGST,SGST_INPUT_CR_AMT,CGST_INPUT_CR_AMT,IGST_INPUT_CR_AMT,SGST_INPUT_CR_PER,CGST_INPUT_CR_PER,IGST_INPUT_CR_PER,SUPP_ID,INVOICE_NO,INVOICE_DATE,H.INVOICE_AMOUNT,G.INVOICE_GST_COMP_CESS FROM DINESHMILLS.D_INV_JOB_HSN G,DINESHMILLS.D_INV_JOB_HEADER H \n"
                    + " WHERE G.JOB_NO=H.JOB_NO AND H.APPROVED=1 AND H.CANCELLED=0 AND H.JOB_NO IN ( SELECT distinct B.GRN_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , FINANCE.D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)");
           
           
            
            //data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE WHERE A.SUPP_ID = B.SUPPLIER_CODE");
            
           //data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");
           //data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS='24 - Gujarat' WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS='24 - Gujarat' WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE IN (125019)");
           data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT SET ITEM_ID = CASE WHEN (SGST_AMT_ITC+CGST_AMT_ITC+IGST_AMT_ITC) = 0 THEN 'Ineligible' ELSE 'Inputs' END,GST_RATE = SGST_RATE+CGST_RATE+IGST_RATE");
            
            
            //String strSQL = "SELECT * FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT";
            String strSQL = "SELECT * FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ORDER BY TRADE_NAME";
            
            //String strSQL2 = "SELECT *,(IGST_RATE+CGST_RATE+SGST_RATE) AS GST_RATE_DISPLAY FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT";
            
            
            ResultSet rs = data.getResult(strSQL);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {
//SR_N0, GSTIN_UIN, SUPP_ID, TRADE_NAME, TYPE, INVOICE_NO, INVOICE_DATE, INVOICE_AMT, HSN_CODE, ITEM_ID, TAXABLE_VALUE, GST_RATE, IGST_RATE, IGST_AMT, CGST_RATE, CGST_AMT, SGST_RATE, SGST_AMT, CESS, POS, DIFF_PER_TAX_RATE, SUPPLY_COVER, COMMON_CREDIT, GRN_NO, GRN_DATE, QTY, UNIT, RATE, TOTAL_AMOUNT, NET_AMOUNT
                Object[] rowData = new Object[25];
                // rowData[0]=rs.getString("");
                rowData[0] = cnt++;
                rowData[1] = rs.getString("GSTIN_UIN");//GSTIN_UIN
                rowData[2] = rs.getString("TRADE_NAME");//TRADE_NAME
                rowData[3] = rs.getString("INVOICE_NO");
                rowData[4] = EITLERPGLOBAL.formatDate(rs.getString("INVOICE_DATE"));
                rowData[5] = rs.getString("INVOICE_AMT");
                rowData[6] = rs.getString("TAXABLE_VALUE");//TAXABLE_VALUE
                rowData[7] = rs.getString("HSN_CODE");//HSN_CODE
                rowData[8] = rs.getString("GST_RATE");//GST_RATE
                rowData[9] = rs.getString("IGST_AMT");//IGST_AMT
                rowData[10] = rs.getString("CGST_AMT");//CGST_AMT
                rowData[11] = rs.getString("SGST_AMT");//SGST_AMT
                rowData[12] = rs.getString("CESS");//CESS
                rowData[13] = rs.getString("POS");//POS
                
//                String Eligibility = "";
//                if(rs.getString("ITEM_ID").equals("99002001"))
//                {
//                    Eligibility = "Capital Goods";
//                }
//                else if(rs.getString("ITEM_ID").equals("99004001"))
//                {
//                    Eligibility = "Input Service";
//                }
//                else
//                {
//                    Eligibility = "Inputs";
//                }
                rowData[14] = rs.getString("ITEM_ID");
                
                rowData[15] = rs.getString("IGST_AMT_ITC");//IGST_AMT
                rowData[16] = rs.getString("CGST_AMT_ITC");//CGST_AMT
                rowData[17] = rs.getString("SGST_AMT_ITC");//SGST_AMT
                rowData[18] = rs.getString("CESS_ITC");//CESS
                rowData[19] = rs.getString("INVOICE_NO_AMEND");//CESS
                //rowData[20] = rs.getString("INVOICE_DATE_AMEND");//CESS
                
                
                DataModelB2B.addRow(rowData);
                rs.next();
            }
            rs.close();
            //Object[] rowData2 = new Object[25];
            //DataModelB2BMIR.addRow(rowData2);
            
        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }
        
        String sql;
        sql="SELECT ROUND(SUM(INVOICE_AMT),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        System.out.println(sql);
        String invAmt = data.getStringValueFromDB(sql);
        System.out.println(invAmt);
        totalInvAmt.setText(invAmt);
        
        sql="SELECT ROUND(SUM(TAXABLE_VALUE),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String taxAmt = data.getStringValueFromDB(sql);
        totalTaxAmt.setText(taxAmt);
        
        sql="SELECT ROUND(SUM(SGST_AMT),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String SGSTAmt = data.getStringValueFromDB(sql);
        totalSGSTAmt.setText(SGSTAmt);
        
        sql="SELECT ROUND(SUM(CGST_AMT),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String CGSTAmt = data.getStringValueFromDB(sql);
        totalCGSTAmt.setText(CGSTAmt);
        
        sql="SELECT ROUND(SUM(IGST_AMT),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String IGSTAmt = data.getStringValueFromDB(sql);
        totalIGSTAmt.setText(IGSTAmt);
        
        
        
        
    }
    
    public void GenerateGRNB2BInvwiseData(String ORDER_BY) {
        
        try {
            
            
//            data.Execute("");
            /*
            data.Execute("TRUNCATE TABLE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT");
            
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT (SUPP_ID,INVOICE_NO, INVOICE_DATE, INVOICE_AMT,  ITEM_ID, GRN_NO, GRN_DATE, QTY, UNIT, RATE, TOTAL_AMOUNT, NET_AMOUNT,HSN_CODE,IGST_RATE,CGST_RATE,SGST_RATE)  "
                    + " ( SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,H.INVOICE_AMOUNT, D.ITEM_ID,H.GRN_NO,H.GRN_DATE,D.QTY,D.UNIT,D.RATE,D.TOTAL_AMOUNT,D.NET_AMOUNT,D.HSN_SAC_CODE,D.COLUMN_3_PER,D.COLUMN_4_PER,D.COLUMN_5_PER FROM DINESHMILLS.D_INV_GRN_HEADER H,DINESHMILLS.D_INV_GRN_DETAIL D " +
                        "WHERE H.COMPANY_ID=2 AND " +
                        "H.GRN_NO IN ( SELECT distinct B.GRN_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , FINANCE.D_FIN_VOUCHER_DETAIL B " +
                        "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0) " +
                        "AND H.GRN_NO=D.GRN_NO AND H.APPROVED =1 AND H.CANCELLED =0 ORDER BY H.GRN_NO)");
            
            
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B " +
                        " SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE " +
                        " WHERE A.SUPP_ID = B.SUPPLIER_CODE"); 
            
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,DINESHMILLS.D_INV_GRN_HSN B " +
                        " SET A.TAXABLE_VALUE=B.INVOICE_AMOUNT,A.IGST_AMT=B.INVOICE_IGST,A.CGST_AMT=B.INVOICE_CGST" +
                        ",A.SGST_AMT=B.INVOICE_SGST,A.CESS=B.INVOICE_GST_COMP_CESS,A.CGST_AMT_ITC=B.CGST_INPUT_CR_AMT,"
                        + "A.SGST_AMT_ITC=B.SGST_INPUT_CR_AMT,A.IGST_AMT_ITC=B.IGST_INPUT_CR_AMT " +
                        " WHERE A.GRN_NO=B.GRN_NO AND A.GRN_DATE=B.GRN_DATE AND A.HSN_CODE=B.HSN_CODE");
            */
            
            data.Execute("TRUNCATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT");
            /*
            data.Execute(" INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT (" +
                        " GRN_NO,GRN_DATE,TAXABLE_VALUE,HSN_CODE,SGST_AMT,CGST_AMT,IGST_AMT,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC,SGST_RATE,CGST_RATE,IGST_RATE,SUPP_ID,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,CESS)\n" +
                        " " +
                        " SELECT H.GRN_NO,H.GRN_DATE,G.INVOICE_AMOUNT,HSN_CODE,INVOICE_SGST,INVOICE_CGST,INVOICE_IGST,SGST_INPUT_CR_AMT,CGST_INPUT_CR_AMT,IGST_INPUT_CR_AMT,SGST_INPUT_CR_PER,CGST_INPUT_CR_PER,IGST_INPUT_CR_PER,SUPP_ID,INVOICE_NO,INVOICE_DATE,H.INVOICE_AMOUNT,G.INVOICE_GST_COMP_CESS FROM DINESHMILLS.D_INV_GRN_HSN G,DINESHMILLS.D_INV_GRN_HEADER H " +
                        " " +
                        " WHERE H.GRN_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND H.GRN_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  AND G.GRN_NO=H.GRN_NO AND H.APPROVED =1 AND H.CANCELLED =0 ");
            */
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ( " +
                        " GRN_NO,GRN_DATE,TAXABLE_VALUE,HSN_CODE,SGST_AMT,CGST_AMT,IGST_AMT,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC,SGST_RATE,CGST_RATE,IGST_RATE,SUPP_ID,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,CESS) " +
                        " SELECT H.GRN_NO,H.GRN_DATE,G.INVOICE_AMOUNT,HSN_CODE,INVOICE_SGST,INVOICE_CGST,INVOICE_IGST,SGST_INPUT_CR_AMT,CGST_INPUT_CR_AMT,IGST_INPUT_CR_AMT,SGST_INPUT_CR_PER,CGST_INPUT_CR_PER,IGST_INPUT_CR_PER,SUPP_ID,INVOICE_NO,INVOICE_DATE,H.INVOICE_AMOUNT,G.INVOICE_GST_COMP_CESS FROM DINESHMILLS.D_INV_GRN_HSN G,DINESHMILLS.D_INV_GRN_HEADER H " +
                        " WHERE G.GRN_NO= H.GRN_NO AND H.APPROVED =1 AND H.CANCELLED =0 " +
                        " AND H.GRN_NO IN ( SELECT distinct B.GRN_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , FINANCE.D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)");
            
            System.out.println("INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ( " +
                        " GRN_NO,GRN_DATE,TAXABLE_VALUE,HSN_CODE,SGST_AMT,CGST_AMT,IGST_AMT,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC,SGST_RATE,CGST_RATE,IGST_RATE,SUPP_ID,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,CESS) " +
                        " SELECT H.GRN_NO,H.GRN_DATE,G.INVOICE_AMOUNT,HSN_CODE,INVOICE_SGST,INVOICE_CGST,INVOICE_IGST,SGST_INPUT_CR_AMT,CGST_INPUT_CR_AMT,IGST_INPUT_CR_AMT,SGST_INPUT_CR_PER,CGST_INPUT_CR_PER,IGST_INPUT_CR_PER,SUPP_ID,INVOICE_NO,INVOICE_DATE,H.INVOICE_AMOUNT,G.INVOICE_GST_COMP_CESS FROM DINESHMILLS.D_INV_GRN_HSN G,DINESHMILLS.D_INV_GRN_HEADER H " +
                        " WHERE G.GRN_NO= H.GRN_NO AND H.APPROVED =1 AND H.CANCELLED =0 " +
                        " AND H.GRN_NO IN ( SELECT distinct B.GRN_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , FINANCE.D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)");
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT (  GRN_NO,GRN_DATE,TAXABLE_VALUE,HSN_CODE,SGST_AMT,CGST_AMT,IGST_AMT,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC,SGST_RATE,CGST_RATE,IGST_RATE,SUPP_ID,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,CESS)  \n"
                    + " SELECT H.JOB_NO,H.JOB_DATE,G.INVOICE_AMOUNT,HSN_CODE,INVOICE_SGST,INVOICE_CGST,INVOICE_IGST,SGST_INPUT_CR_AMT,CGST_INPUT_CR_AMT,IGST_INPUT_CR_AMT,SGST_INPUT_CR_PER,CGST_INPUT_CR_PER,IGST_INPUT_CR_PER,SUPP_ID,INVOICE_NO,INVOICE_DATE,H.INVOICE_AMOUNT,G.INVOICE_GST_COMP_CESS FROM DINESHMILLS.D_INV_JOB_HSN G,DINESHMILLS.D_INV_JOB_HEADER H \n"
                    + " WHERE G.JOB_NO=H.JOB_NO AND H.APPROVED=1 AND H.CANCELLED=0 AND H.JOB_NO IN ( SELECT distinct B.GRN_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , FINANCE.D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)");
           
           
            
            //data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE WHERE A.SUPP_ID = B.SUPPLIER_CODE");
            
           //data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");
           //data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS='24 - Gujarat' WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");
           data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS='24 - Gujarat' WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE IN (125019)");
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT SET ITEM_ID = CASE WHEN (SGST_AMT_ITC+CGST_AMT_ITC+IGST_AMT_ITC) = 0 THEN 'Ineligible' ELSE 'Inputs' END,GST_RATE = SGST_RATE+CGST_RATE+IGST_RATE");
            
            
            //String strSQL = "SELECT * FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT";
            //String strSQL = "SELECT * FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ORDER BY TRADE_NAME";
            String strSQLInvwise = "SELECT SR_N0,GSTIN_UIN,TRADE_NAME,TYPE,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,HSN_CODE,ITEM_ID,SUM(TAXABLE_VALUE) TAXABLE_VALUE,GST_RATE,SUM(IGST_AMT) IGST_AMT,SUM(CGST_AMT) CGST_AMT,SUM(SGST_AMT) SGST_AMT,SUM(CESS) CESS,POS,ITEM_ID,SUM(IGST_AMT_ITC) IGST_AMT_ITC,SUM(CGST_AMT_ITC) CGST_AMT_ITC,SUM(SGST_AMT_ITC) SGST_AMT_ITC,SUM(CESS_ITC) CESS_ITC,INVOICE_NO_AMEND,INVOICE_DATE_AMEND FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT \n"
                    + "   GROUP BY INVOICE_NO,INVOICE_DATE ORDER BY TRADE_NAME";
            //String strSQL2 = "SELECT *,(IGST_RATE+CGST_RATE+SGST_RATE) AS GST_RATE_DISPLAY FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT";
            
            
            ResultSet rs = data.getResult(strSQLInvwise);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {
//SR_N0, GSTIN_UIN, SUPP_ID, TRADE_NAME, TYPE, INVOICE_NO, INVOICE_DATE, INVOICE_AMT, HSN_CODE, ITEM_ID, TAXABLE_VALUE, GST_RATE, IGST_RATE, IGST_AMT, CGST_RATE, CGST_AMT, SGST_RATE, SGST_AMT, CESS, POS, DIFF_PER_TAX_RATE, SUPPLY_COVER, COMMON_CREDIT, GRN_NO, GRN_DATE, QTY, UNIT, RATE, TOTAL_AMOUNT, NET_AMOUNT
                Object[] rowData = new Object[25];
                // rowData[0]=rs.getString("");
                rowData[0] = cnt++;
                rowData[1] = rs.getString("GSTIN_UIN");//GSTIN_UIN
                rowData[2] = rs.getString("TRADE_NAME");//TRADE_NAME
                rowData[3] = rs.getString("INVOICE_NO");
                rowData[4] = EITLERPGLOBAL.formatDate(rs.getString("INVOICE_DATE"));
                rowData[5] = rs.getString("INVOICE_AMT");
                rowData[6] = rs.getString("TAXABLE_VALUE");//TAXABLE_VALUE
                rowData[7] = rs.getString("HSN_CODE");//HSN_CODE
                rowData[8] = rs.getString("GST_RATE");//GST_RATE
                rowData[9] = rs.getString("IGST_AMT");//IGST_AMT
                rowData[10] = rs.getString("CGST_AMT");//CGST_AMT
                rowData[11] = rs.getString("SGST_AMT");//SGST_AMT
                rowData[12] = rs.getString("CESS");//CESS
                rowData[13] = rs.getString("POS");//POS
                
//                String Eligibility = "";
//                if(rs.getString("ITEM_ID").equals("99002001"))
//                {
//                    Eligibility = "Capital Goods";
//                }
//                else if(rs.getString("ITEM_ID").equals("99004001"))
//                {
//                    Eligibility = "Input Service";
//                }
//                else
//                {
//                    Eligibility = "Inputs";
//                }
                rowData[14] = rs.getString("ITEM_ID");
                
                rowData[15] = rs.getString("IGST_AMT_ITC");//IGST_AMT
                rowData[16] = rs.getString("CGST_AMT_ITC");//CGST_AMT
                rowData[17] = rs.getString("SGST_AMT_ITC");//SGST_AMT
                rowData[18] = rs.getString("CESS_ITC");//CESS
                rowData[19] = rs.getString("INVOICE_NO_AMEND");//CESS
                //rowData[20] = rs.getString("INVOICE_DATE_AMEND");//CESS
                
                
                DataModelB2BInvwise.addRow(rowData);
                rs.next();
            }
            rs.close();
            //Object[] rowData2 = new Object[25];
            //DataModelB2BMIR.addRow(rowData2);
            
        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }
        
        String sql;
        sql="SELECT ROUND(SUM(INVOICE_AMT),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String invAmt = data.getStringValueFromDB(sql);
        totalInvAmtInvwise.setText(invAmt);
        
        sql="SELECT ROUND(SUM(TAXABLE_VALUE),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String taxAmt = data.getStringValueFromDB(sql);
        totalTaxAmtInvwise.setText(taxAmt);
        
        sql="SELECT ROUND(SUM(SGST_AMT),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String SGSTAmt = data.getStringValueFromDB(sql);
        totalSGSTAmtInvwise.setText(SGSTAmt);
        
        sql="SELECT ROUND(SUM(CGST_AMT),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String CGSTAmt = data.getStringValueFromDB(sql);
        totalCGSTAmtInvwise.setText(CGSTAmt);
        
        sql="SELECT ROUND(SUM(IGST_AMT),2) FROM DINESHMILLS.TMP_STORES_GRN_QUERY_REPORT ";
        String IGSTAmt = data.getStringValueFromDB(sql);
        totalIGSTAmtInvwise.setText(IGSTAmt);
        
        
        
        
    }
    
    public void GenerateMIRB2BData(String ORDER_BY) {
        
        try {
            
            
//            data.Execute("");
            /*
            data.Execute("TRUNCATE TABLE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT");
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ("
                    + "SUPP_ID,INVOICE_NO, INVOICE_DATE, INVOICE_AMT,  ITEM_ID, MIR_NO, MIR_DATE, QTY, UNIT, RATE, "
                    + "TOTAL_AMOUNT, NET_AMOUNT,HSN_CODE,IGST_RATE,CGST_RATE,SGST_RATE,TAXABLE_VALUE,IGST_AMT,CGST_AMT,SGST_AMT,CESS)   " +
               "SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.NET_AMOUNT, D.ITEM_ID,H.MIR_NO, " +
                        "H.MIR_DATE,D.QTY,D.UNIT,D.RATE,D.TOTAL_AMOUNT,D.NET_AMOUNT,D.HSN_SAC_CODE, " +
                        "D.COLUMN_5_PER,D.COLUMN_3_PER,D.COLUMN_4_PER,D.TOTAL_AMOUNT,D.COLUMN_5_AMT,D.COLUMN_3_AMT,D.COLUMN_4_AMT,D.COLUMN_8_AMT "
                    + " FROM DINESHMILLS.D_INV_MIR_HEADER H " +
                        ",DINESHMILLS.D_INV_MIR_DETAIL D  " +
                        "WHERE H.COMPANY_ID=2 AND H.MIR_TYPE=3 AND " +
                        "H.MIR_NO IN ( " +
                        " SELECT distinct B.GRN_NO FROM  " +
                        " FINANCE.D_FIN_VOUCHER_HEADER A ,  " +
                        " FINANCE.D_FIN_VOUCHER_DETAIL B  " +
                        "WHERE A.VOUCHER_NO = B.VOUCHER_NO  " +
                        "AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
                        " AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  " +
                        " AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)  " +
                        "AND H.MIR_NO=D.MIR_NO AND H.APPROVED =1 AND H.CANCELLED =0 ORDER BY H.MIR_NO");
            
            System.out.println("INSERT INTO DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ("
                    + "SUPP_ID,INVOICE_NO, INVOICE_DATE, INVOICE_AMT,  ITEM_ID, MIR_NO, MIR_DATE, QTY, UNIT, RATE, "
                    + "TOTAL_AMOUNT, NET_AMOUNT,HSN_CODE,IGST_RATE,CGST_RATE,SGST_RATE,TAXABLE_VALUE,IGST_AMT,CGST_AMT,SGST_AMT,CESS)   " +
               "SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.NET_AMOUNT, D.ITEM_ID,H.MIR_NO, " +
                        "H.MIR_DATE,D.QTY,D.UNIT,D.RATE,D.TOTAL_AMOUNT,D.NET_AMOUNT,D.HSN_SAC_CODE, " +
                        "D.COLUMN_5_PER,D.COLUMN_3_PER,D.COLUMN_4_PER,D.TOTAL_AMOUNT,D.COLUMN_5_AMT,D.COLUMN_3_AMT,D.COLUMN_4_AMT,D.COLUMN_8_AMT "
                    + " FROM DINESHMILLS.D_INV_MIR_HEADER H " +
                        ",DINESHMILLS.D_INV_MIR_DETAIL D  " +
                        "WHERE H.COMPANY_ID=2 AND H.MIR_TYPE=3 AND " +
                        "H.MIR_NO IN ( " +
                        " SELECT distinct B.GRN_NO FROM  " +
                        " FINANCE.D_FIN_VOUCHER_HEADER A ,  " +
                        " FINANCE.D_FIN_VOUCHER_DETAIL B  " +
                        "WHERE A.VOUCHER_NO = B.VOUCHER_NO  " +
                        "AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
                        " AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  " +
                        " AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)  " +
                        "AND H.MIR_NO=D.MIR_NO AND H.APPROVED =1 AND H.CANCELLED =0 ORDER BY H.MIR_NO");
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B " +
                        " SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE " +
                        " WHERE A.SUPP_ID = B.SUPPLIER_CODE"); 
            
            System.out.println("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B " +
                        " SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE " +
                        " WHERE A.SUPP_ID = B.SUPPLIER_CODE");
            
            */
            
            
            data.Execute("TRUNCATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT");
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT (SUPP_ID,INVOICE_NO, INVOICE_DATE,HSN_CODE,  MIR_NO, MIR_DATE,INVOICE_AMT, TAXABLE_VALUE,IGST_RATE,CGST_RATE,SGST_RATE,IGST_AMT,CGST_AMT,SGST_AMT,CESS,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC) " +
                    "  SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.HSN_SAC_CODE, H.MIR_NO, H.MIR_DATE, " +
                    "  SUM(D.NET_AMOUNT), SUM(D.TOTAL_AMOUNT),SUM(D.COLUMN_5_PER),SUM(D.COLUMN_3_PER),SUM(D.COLUMN_4_PER), SUM(D.COLUMN_5_AMT), SUM(D.COLUMN_3_AMT),SUM(D.COLUMN_4_AMT),SUM(D.COLUMN_8_AMT),SUM(D.COLUMN_10_AMT),SUM(D.COLUMN_9_AMT),SUM(D.COLUMN_11_AMT)   " +
                    "  FROM DINESHMILLS.D_INV_MIR_HEADER H ,DINESHMILLS.D_INV_MIR_DETAIL D  WHERE H.COMPANY_ID=2 AND H.MIR_TYPE=3 " +
                    "  AND H.MIR_NO=D.MIR_NO AND H.APPROVED =1 AND H.CANCELLED =0 " +
                    "  AND H.MIR_NO IN (  SELECT distinct B.GRN_NO FROM   FINANCE.D_FIN_VOUCHER_HEADER A ,   FINANCE.D_FIN_VOUCHER_DETAIL B  WHERE A.VOUCHER_NO = B.VOUCHER_NO  AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'   AND SUBSTRING(A.VOUCHER_NO,1,2) IN  ('PJ') AND A.APPROVED =1 AND A.CANCELLED =0) " +
                    "  GROUP BY H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.HSN_SAC_CODE, H.MIR_NO, H.MIR_DATE  ORDER BY H.MIR_NO");
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT (SUPP_ID,INVOICE_NO, INVOICE_DATE,HSN_CODE,  MIR_NO, MIR_DATE,INVOICE_AMT, TAXABLE_VALUE,IGST_RATE,CGST_RATE,SGST_RATE,IGST_AMT,CGST_AMT,SGST_AMT,CESS,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC) " +
                    "  SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.HSN_SAC_CODE, H.MIR_NO, H.MIR_DATE, " +
                    "  SUM(D.NET_AMOUNT), SUM(D.TOTAL_AMOUNT),SUM(D.COLUMN_5_PER),SUM(D.COLUMN_3_PER),SUM(D.COLUMN_4_PER), SUM(D.COLUMN_5_AMT), SUM(D.COLUMN_3_AMT),SUM(D.COLUMN_4_AMT),SUM(D.COLUMN_8_AMT),SUM(D.COLUMN_10_AMT),SUM(D.COLUMN_9_AMT),SUM(D.COLUMN_11_AMT)   " +
                    "  FROM DINESHMILLS.D_INV_MIR_HEADER H ,DINESHMILLS.D_INV_MIR_DETAIL D  WHERE H.COMPANY_ID=2 AND H.MIR_TYPE=3 " +
                    "  AND H.MIR_NO=D.MIR_NO AND H.APPROVED =1 AND H.CANCELLED =0 " +
                    //"  AND H.MIR_NO IN (  SELECT distinct B.GRN_NO FROM   FINANCE.D_FIN_VOUCHER_HEADER A ,   FINANCE.D_FIN_VOUCHER_DETAIL B  WHERE A.VOUCHER_NO = B.VOUCHER_NO  AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'   AND SUBSTRING(A.VOUCHER_NO,1,2) IN  ('PY') AND MAIN_ACCOUNT_CODE='450038' AND A.APPROVED =1 AND A.CANCELLED =0) " +
                    "  AND H.MIR_NO IN (  SELECT distinct B.GRN_NO FROM   FINANCE.D_FIN_VOUCHER_HEADER A ,   FINANCE.D_FIN_VOUCHER_DETAIL B  WHERE A.VOUCHER_NO = B.VOUCHER_NO  AND B.GRN_NO!='' AND A.APPROVED_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND A.APPROVED_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'   AND SUBSTRING(A.VOUCHER_NO,1,2) IN  ('PY') AND MAIN_ACCOUNT_CODE='450038' AND A.APPROVED =1 AND A.CANCELLED =0) " +
                    "  GROUP BY H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.HSN_SAC_CODE, H.MIR_NO, H.MIR_DATE  ORDER BY H.MIR_NO");
            //data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE  WHERE A.SUPP_ID = B.SUPPLIER_CODE");
            
            //data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS='24 - Gujarat' WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");
            
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT SET ITEM_ID = CASE WHEN (SGST_AMT+CGST_AMT+IGST_AMT) = 0 THEN 'Ineligible' ELSE 'Input Service' END,GST_RATE = SGST_RATE+CGST_RATE+IGST_RATE");
            
                //String strSQL2 = "SELECT * FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT";
            String strSQL2 = "SELECT * FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ORDER BY TRADE_NAME";
            
            System.out.println("SQL "+strSQL2);
            
            ResultSet rs = data.getResult(strSQL2);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {
//SR_N0, GSTIN_UIN, SUPP_ID, TRADE_NAME, TYPE, INVOICE_NO, INVOICE_DATE, INVOICE_AMT, HSN_CODE, ITEM_ID, TAXABLE_VALUE, GST_RATE, IGST_RATE, IGST_AMT, CGST_RATE, CGST_AMT, SGST_RATE, SGST_AMT, CESS, POS, DIFF_PER_TAX_RATE, SUPPLY_COVER, COMMON_CREDIT, GRN_NO, GRN_DATE, QTY, UNIT, RATE, TOTAL_AMOUNT, NET_AMOUNT
                Object[] rowData = new Object[25];
                // rowData[0]=rs.getString("");
                rowData[0] = cnt++;
                rowData[1] = rs.getString("GSTIN_UIN");//GSTIN_UIN
                rowData[2] = rs.getString("TRADE_NAME");//TRADE_NAME
                rowData[3] = rs.getString("INVOICE_NO");
                rowData[4] = EITLERPGLOBAL.formatDate(rs.getString("INVOICE_DATE"));
                rowData[5] = rs.getString("INVOICE_AMT");
                rowData[6] = rs.getString("TAXABLE_VALUE");//TAXABLE_VALUE
                rowData[7] = rs.getString("HSN_CODE");//HSN_CODE
                rowData[8] = rs.getString("GST_RATE");//GST_RATE
                rowData[9] = rs.getString("IGST_AMT");//IGST_AMT
                rowData[10] = rs.getString("CGST_AMT");//CGST_AMT
                rowData[11] = rs.getString("SGST_AMT");//SGST_AMT
                rowData[12] = rs.getString("CESS");//CESS
                rowData[13] = rs.getString("POS");//POS
                
//                String Eligibility = "";
//                if(rs.getString("ITEM_ID").equals("99002001"))
//                {
//                    Eligibility = "Capital Goods";
//                }
//                else if(rs.getString("ITEM_ID").equals("99004001"))
//                {
//                    Eligibility = "Input Service";
//                }
//                else
//                {
//                    Eligibility = "Inputs";
//                }
                rowData[14] = rs.getString("ITEM_ID");
                
                rowData[15] = rs.getString("IGST_AMT_ITC");//IGST_AMT
                rowData[16] = rs.getString("CGST_AMT_ITC");//CGST_AMT
                rowData[17] = rs.getString("SGST_AMT_ITC");//SGST_AMT
                rowData[18] = rs.getString("CESS_ITC");//CESS
                rowData[19] = rs.getString("INVOICE_NO_AMEND");//CESS
                //rowData[20] = rs.getString("INVOICE_DATE_AMEND");//CESS
                
                
                DataModelB2BMIR.addRow(rowData);
                rs.next();
            }
            rs.close();
            //Object[] rowData2 = new Object[25];
            //DataModelB2BMIR.addRow(rowData2);
            
        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }
        
        String sql;
        sql="SELECT ROUND(SUM(INVOICE_AMT),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String invAmt = data.getStringValueFromDB(sql);
        totalInvAmt1.setText(invAmt);
        
        sql="SELECT ROUND(SUM(TAXABLE_VALUE),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String taxAmt = data.getStringValueFromDB(sql);
        totalTaxAmt1.setText(taxAmt);
        
        sql="SELECT ROUND(SUM(SGST_AMT),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String SGSTAmt = data.getStringValueFromDB(sql);
        totalSGSTAmt1.setText(SGSTAmt);
        
        sql="SELECT ROUND(SUM(CGST_AMT),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String CGSTAmt = data.getStringValueFromDB(sql);
        totalCGSTAmt1.setText(CGSTAmt);
        
        sql="SELECT ROUND(SUM(IGST_AMT),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String IGSTAmt = data.getStringValueFromDB(sql);
        totalIGSTAmt1.setText(IGSTAmt);
        
        
        
        
    }    
    
    public void GenerateMIRB2BInvwiseData(String ORDER_BY) {
        
        try {
            
            
//            data.Execute("");
            /*
            data.Execute("TRUNCATE TABLE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT");
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ("
                    + "SUPP_ID,INVOICE_NO, INVOICE_DATE, INVOICE_AMT,  ITEM_ID, MIR_NO, MIR_DATE, QTY, UNIT, RATE, "
                    + "TOTAL_AMOUNT, NET_AMOUNT,HSN_CODE,IGST_RATE,CGST_RATE,SGST_RATE,TAXABLE_VALUE,IGST_AMT,CGST_AMT,SGST_AMT,CESS)   " +
               "SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.NET_AMOUNT, D.ITEM_ID,H.MIR_NO, " +
                        "H.MIR_DATE,D.QTY,D.UNIT,D.RATE,D.TOTAL_AMOUNT,D.NET_AMOUNT,D.HSN_SAC_CODE, " +
                        "D.COLUMN_5_PER,D.COLUMN_3_PER,D.COLUMN_4_PER,D.TOTAL_AMOUNT,D.COLUMN_5_AMT,D.COLUMN_3_AMT,D.COLUMN_4_AMT,D.COLUMN_8_AMT "
                    + " FROM DINESHMILLS.D_INV_MIR_HEADER H " +
                        ",DINESHMILLS.D_INV_MIR_DETAIL D  " +
                        "WHERE H.COMPANY_ID=2 AND H.MIR_TYPE=3 AND " +
                        "H.MIR_NO IN ( " +
                        " SELECT distinct B.GRN_NO FROM  " +
                        " FINANCE.D_FIN_VOUCHER_HEADER A ,  " +
                        " FINANCE.D_FIN_VOUCHER_DETAIL B  " +
                        "WHERE A.VOUCHER_NO = B.VOUCHER_NO  " +
                        "AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
                        " AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  " +
                        " AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)  " +
                        "AND H.MIR_NO=D.MIR_NO AND H.APPROVED =1 AND H.CANCELLED =0 ORDER BY H.MIR_NO");
            
            System.out.println("INSERT INTO DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ("
                    + "SUPP_ID,INVOICE_NO, INVOICE_DATE, INVOICE_AMT,  ITEM_ID, MIR_NO, MIR_DATE, QTY, UNIT, RATE, "
                    + "TOTAL_AMOUNT, NET_AMOUNT,HSN_CODE,IGST_RATE,CGST_RATE,SGST_RATE,TAXABLE_VALUE,IGST_AMT,CGST_AMT,SGST_AMT,CESS)   " +
               "SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.NET_AMOUNT, D.ITEM_ID,H.MIR_NO, " +
                        "H.MIR_DATE,D.QTY,D.UNIT,D.RATE,D.TOTAL_AMOUNT,D.NET_AMOUNT,D.HSN_SAC_CODE, " +
                        "D.COLUMN_5_PER,D.COLUMN_3_PER,D.COLUMN_4_PER,D.TOTAL_AMOUNT,D.COLUMN_5_AMT,D.COLUMN_3_AMT,D.COLUMN_4_AMT,D.COLUMN_8_AMT "
                    + " FROM DINESHMILLS.D_INV_MIR_HEADER H " +
                        ",DINESHMILLS.D_INV_MIR_DETAIL D  " +
                        "WHERE H.COMPANY_ID=2 AND H.MIR_TYPE=3 AND " +
                        "H.MIR_NO IN ( " +
                        " SELECT distinct B.GRN_NO FROM  " +
                        " FINANCE.D_FIN_VOUCHER_HEADER A ,  " +
                        " FINANCE.D_FIN_VOUCHER_DETAIL B  " +
                        "WHERE A.VOUCHER_NO = B.VOUCHER_NO  " +
                        "AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
                        " AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  " +
                        " AND SUBSTRING(A.VOUCHER_NO,1,2) = 'PJ' AND A.APPROVED =1 AND A.CANCELLED =0)  " +
                        "AND H.MIR_NO=D.MIR_NO AND H.APPROVED =1 AND H.CANCELLED =0 ORDER BY H.MIR_NO");
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B " +
                        " SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE " +
                        " WHERE A.SUPP_ID = B.SUPPLIER_CODE"); 
            
            System.out.println("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B " +
                        " SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE " +
                        " WHERE A.SUPP_ID = B.SUPPLIER_CODE");
            
            */
            
            
            data.Execute("TRUNCATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT");
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT (SUPP_ID,INVOICE_NO, INVOICE_DATE,HSN_CODE,  MIR_NO, MIR_DATE,INVOICE_AMT, TAXABLE_VALUE,IGST_RATE,CGST_RATE,SGST_RATE,IGST_AMT,CGST_AMT,SGST_AMT,CESS,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC) " +
                    "  SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.HSN_SAC_CODE, H.MIR_NO, H.MIR_DATE, " +
                    "  SUM(D.NET_AMOUNT), SUM(D.TOTAL_AMOUNT),SUM(D.COLUMN_5_PER),SUM(D.COLUMN_3_PER),SUM(D.COLUMN_4_PER), SUM(D.COLUMN_5_AMT), SUM(D.COLUMN_3_AMT),SUM(D.COLUMN_4_AMT),SUM(D.COLUMN_8_AMT),SUM(D.COLUMN_10_AMT),SUM(D.COLUMN_9_AMT),SUM(D.COLUMN_11_AMT)   " +
                    "  FROM DINESHMILLS.D_INV_MIR_HEADER H ,DINESHMILLS.D_INV_MIR_DETAIL D  WHERE H.COMPANY_ID=2 AND H.MIR_TYPE=3 " +
                    "  AND H.MIR_NO=D.MIR_NO AND H.APPROVED =1 AND H.CANCELLED =0 " +
                    "  AND H.MIR_NO IN (  SELECT distinct B.GRN_NO FROM   FINANCE.D_FIN_VOUCHER_HEADER A ,   FINANCE.D_FIN_VOUCHER_DETAIL B  WHERE A.VOUCHER_NO = B.VOUCHER_NO  AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'   AND SUBSTRING(A.VOUCHER_NO,1,2) IN  ('PJ') AND A.APPROVED =1 AND A.CANCELLED =0) " +
                    "  GROUP BY H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.HSN_SAC_CODE, H.MIR_NO, H.MIR_DATE  ORDER BY H.MIR_NO");
            
            data.Execute("INSERT INTO DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT (SUPP_ID,INVOICE_NO, INVOICE_DATE,HSN_CODE,  MIR_NO, MIR_DATE,INVOICE_AMT, TAXABLE_VALUE,IGST_RATE,CGST_RATE,SGST_RATE,IGST_AMT,CGST_AMT,SGST_AMT,CESS,SGST_AMT_ITC,CGST_AMT_ITC,IGST_AMT_ITC) " +
                    "  SELECT H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.HSN_SAC_CODE, H.MIR_NO, H.MIR_DATE, " +
                    "  SUM(D.NET_AMOUNT), SUM(D.TOTAL_AMOUNT),SUM(D.COLUMN_5_PER),SUM(D.COLUMN_3_PER),SUM(D.COLUMN_4_PER), SUM(D.COLUMN_5_AMT), SUM(D.COLUMN_3_AMT),SUM(D.COLUMN_4_AMT),SUM(D.COLUMN_8_AMT),SUM(D.COLUMN_10_AMT),SUM(D.COLUMN_9_AMT),SUM(D.COLUMN_11_AMT)   " +
                    "  FROM DINESHMILLS.D_INV_MIR_HEADER H ,DINESHMILLS.D_INV_MIR_DETAIL D  WHERE H.COMPANY_ID=2 AND H.MIR_TYPE=3 " +
                    "  AND H.MIR_NO=D.MIR_NO AND H.APPROVED =1 AND H.CANCELLED =0 " +
                    "  AND H.MIR_NO IN (  SELECT distinct B.GRN_NO FROM   FINANCE.D_FIN_VOUCHER_HEADER A ,   FINANCE.D_FIN_VOUCHER_DETAIL B  WHERE A.VOUCHER_NO = B.VOUCHER_NO  AND B.GRN_NO!='' AND A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'   AND SUBSTRING(A.VOUCHER_NO,1,2) IN  ('PY') AND MAIN_ACCOUNT_CODE='450038' AND A.APPROVED =1 AND A.CANCELLED =0) " +
                    "  GROUP BY H.SUPP_ID,H.INVOICE_NO,H.INVOICE_DATE,D.HSN_SAC_CODE, H.MIR_NO, H.MIR_DATE  ORDER BY H.MIR_NO");
            //data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,DINESHMILLS.D_COM_SUPP_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.SUPP_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE  WHERE A.SUPP_ID = B.SUPPLIER_CODE");
            
            //data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS='24 - Gujarat' WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");
            
            data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT SET ITEM_ID = CASE WHEN (SGST_AMT+CGST_AMT+IGST_AMT) = 0 THEN 'Ineligible' ELSE 'Input Service' END,GST_RATE = SGST_RATE+CGST_RATE+IGST_RATE");
            
                //String strSQL2 = "SELECT * FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT";
            //String strSQL2 = "SELECT * FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ORDER BY TRADE_NAME";
            String strSQLInvwise = "SELECT SR_N0,GSTIN_UIN,TRADE_NAME,TYPE,INVOICE_NO,INVOICE_DATE,INVOICE_AMT,HSN_CODE,ITEM_ID,SUM(TAXABLE_VALUE) TAXABLE_VALUE,GST_RATE,SUM(IGST_AMT) IGST_AMT,SUM(CGST_AMT) CGST_AMT,SUM(SGST_AMT) SGST_AMT,SUM(CESS) CESS,POS,ITEM_ID,SUM(IGST_AMT_ITC) IGST_AMT_ITC,SUM(CGST_AMT_ITC) CGST_AMT_ITC,SUM(SGST_AMT_ITC) SGST_AMT_ITC,SUM(CESS_ITC) CESS_ITC,INVOICE_NO_AMEND,INVOICE_DATE_AMEND FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT \n"
                    + "   GROUP BY INVOICE_NO,INVOICE_DATE ORDER BY TRADE_NAME";
            System.out.println("SQL "+strSQLInvwise);
            
            ResultSet rs = data.getResult(strSQLInvwise);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {
//SR_N0, GSTIN_UIN, SUPP_ID, TRADE_NAME, TYPE, INVOICE_NO, INVOICE_DATE, INVOICE_AMT, HSN_CODE, ITEM_ID, TAXABLE_VALUE, GST_RATE, IGST_RATE, IGST_AMT, CGST_RATE, CGST_AMT, SGST_RATE, SGST_AMT, CESS, POS, DIFF_PER_TAX_RATE, SUPPLY_COVER, COMMON_CREDIT, GRN_NO, GRN_DATE, QTY, UNIT, RATE, TOTAL_AMOUNT, NET_AMOUNT
                Object[] rowData = new Object[25];
                // rowData[0]=rs.getString("");
                rowData[0] = cnt++;
                rowData[1] = rs.getString("GSTIN_UIN");//GSTIN_UIN
                rowData[2] = rs.getString("TRADE_NAME");//TRADE_NAME
                rowData[3] = rs.getString("INVOICE_NO");
                rowData[4] = EITLERPGLOBAL.formatDate(rs.getString("INVOICE_DATE"));
                rowData[5] = rs.getString("INVOICE_AMT");
                rowData[6] = rs.getString("TAXABLE_VALUE");//TAXABLE_VALUE
                rowData[7] = rs.getString("HSN_CODE");//HSN_CODE
                rowData[8] = rs.getString("GST_RATE");//GST_RATE
                rowData[9] = rs.getString("IGST_AMT");//IGST_AMT
                rowData[10] = rs.getString("CGST_AMT");//CGST_AMT
                rowData[11] = rs.getString("SGST_AMT");//SGST_AMT
                rowData[12] = rs.getString("CESS");//CESS
                rowData[13] = rs.getString("POS");//POS
                
//                String Eligibility = "";
//                if(rs.getString("ITEM_ID").equals("99002001"))
//                {
//                    Eligibility = "Capital Goods";
//                }
//                else if(rs.getString("ITEM_ID").equals("99004001"))
//                {
//                    Eligibility = "Input Service";
//                }
//                else
//                {
//                    Eligibility = "Inputs";
//                }
                rowData[14] = rs.getString("ITEM_ID");
                
                rowData[15] = rs.getString("IGST_AMT_ITC");//IGST_AMT
                rowData[16] = rs.getString("CGST_AMT_ITC");//CGST_AMT
                rowData[17] = rs.getString("SGST_AMT_ITC");//SGST_AMT
                rowData[18] = rs.getString("CESS_ITC");//CESS
                rowData[19] = rs.getString("INVOICE_NO_AMEND");//CESS
                //rowData[20] = rs.getString("INVOICE_DATE_AMEND");//CESS
                
                
                DataModelB2BMIRInvwise.addRow(rowData);
                rs.next();
            }
            rs.close();
            //Object[] rowData2 = new Object[25];
            //DataModelB2BMIR.addRow(rowData2);
            
        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }
        
        String sql;
        sql="SELECT ROUND(SUM(INVOICE_AMT),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String invAmt = data.getStringValueFromDB(sql);
        totalInvAmtMIRInvwise.setText(invAmt);
        
        sql="SELECT ROUND(SUM(TAXABLE_VALUE),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String taxAmt = data.getStringValueFromDB(sql);
        totalTaxAmtMIRInvwise.setText(taxAmt);
        
        sql="SELECT ROUND(SUM(SGST_AMT),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String SGSTAmt = data.getStringValueFromDB(sql);
        totalSGSTAmtMIRInvwise.setText(SGSTAmt);
        
        sql="SELECT ROUND(SUM(CGST_AMT),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String CGSTAmt = data.getStringValueFromDB(sql);
        totalCGSTAmtMIRInvwise.setText(CGSTAmt);
        
        sql="SELECT ROUND(SUM(IGST_AMT),2) FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT ";
        String IGSTAmt = data.getStringValueFromDB(sql);
        totalIGSTAmtMIRInvwise.setText(IGSTAmt);
        
        
        
        
    }
    
    public void GenerateGRB2BData(String ORDER_BY) {

        try {

            data.Execute("TRUNCATE DINESHMILLS.TMP_GR_QUERY_REPORT");

            String strSQL="INSERT INTO DINESHMILLS.TMP_GR_QUERY_REPORT (SUPP_ID,TRADE_NAME,INVOICE_NO, INVOICE_DATE,HSN_CODE,  MIR_NO, MIR_DATE,INVOICE_AMT, TAXABLE_VALUE,IGST_RATE_ITC,CGST_RATE_ITC,SGST_RATE_ITC,IGST_AMT_ITC,CGST_AMT_ITC,SGST_AMT_ITC) "
                    + "SELECT CN_PARTY_CODE,CN_PARTY_NAME,PARTY_REF_DOC_NO,PARTY_REF_DOC_DATE,'59113290',PH.CN_ID,PH.CN_DATE,GOODS_RETURN_AMT,CN_GROSS_VALUE,IGST_ITC_PER,CGST_ITC_PER,SGST_ITC_PER,IGST_ITC_AMT,CGST_ITC_AMT,SGST_ITC_AMT "
                    + " FROM PRODUCTION.FELT_CN_TEMP_DETAIL PD,PRODUCTION.FELT_CN_TEMP_HEADER PH WHERE "
                    + " PD.CN_ID=PH.CN_ID AND PD.CN_ID IN (SELECT distinct B.GR_NO FROM FINANCE.D_FIN_VOUCHER_HEADER A , "
                    + " FINANCE.D_FIN_VOUCHER_DETAIL B  "
                    + " WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.GR_NO!='' AND "
                    + " A.VOUCHER_DATE >= '"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND "                    
                    + " SUBSTRING(A.VOUCHER_NO,1,2) = 'CN' AND A.VOUCHER_NO LIKE 'CN__08%' AND A.APPROVED =0 AND A.CANCELLED =0)";
            System.out.println(strSQL);
            data.Execute(strSQL);
            data.Execute("UPDATE DINESHMILLS.TMP_GR_QUERY_REPORT A,DINESHMILLS.D_SAL_PARTY_MASTER B  SET A.GSTIN_UIN=B.GSTIN_NO,A.POS=B.STATE WHERE A.SUPP_ID = B.PARTY_CODE AND B.MAIN_ACCOUNT_CODE='210010'");

            //data.Execute("UPDATE DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT A,FINANCE.D_FIN_PARTY_MASTER B  SET A.TYPE=2,A.TRADE_NAME=B.PARTY_NAME,A.GSTIN_UIN=B.GSTIN_NO,A.POS='24 - Gujarat' WHERE A.SUPP_ID = B.PARTY_CODE AND MAIN_ACCOUNT_CODE NOT IN (210027,210010,210072)");

            data.Execute("UPDATE DINESHMILLS.TMP_GR_QUERY_REPORT SET ITEM_ID = CASE WHEN (SGST_AMT+CGST_AMT+IGST_AMT) = 0 THEN 'Ineligible' ELSE 'Inputs' END,GST_RATE = SGST_RATE+CGST_RATE+IGST_RATE");

            //String strSQL2 = "SELECT * FROM DINESHMILLS.TMP_STORES_MIR_SERVICE_QUERY_REPORT";
            String strSQL2 = "SELECT * FROM DINESHMILLS.TMP_GR_QUERY_REPORT ORDER BY TRADE_NAME";

            System.out.println("SQL " + strSQL2);

            ResultSet rs = data.getResult(strSQL2);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {
//SR_N0, GSTIN_UIN, SUPP_ID, TRADE_NAME, TYPE, INVOICE_NO, INVOICE_DATE, INVOICE_AMT, HSN_CODE, ITEM_ID, TAXABLE_VALUE, GST_RATE, IGST_RATE, IGST_AMT, CGST_RATE, CGST_AMT, SGST_RATE, SGST_AMT, CESS, POS, DIFF_PER_TAX_RATE, SUPPLY_COVER, COMMON_CREDIT, GRN_NO, GRN_DATE, QTY, UNIT, RATE, TOTAL_AMOUNT, NET_AMOUNT
                Object[] rowData = new Object[25];
                // rowData[0]=rs.getString("");
                rowData[0] = cnt++;
                rowData[1] = rs.getString("GSTIN_UIN");//GSTIN_UIN
                rowData[2] = rs.getString("TRADE_NAME");//TRADE_NAME
                rowData[3] = rs.getString("INVOICE_NO");
                rowData[4] = EITLERPGLOBAL.formatDate(rs.getString("INVOICE_DATE"));
                rowData[5] = rs.getString("INVOICE_AMT");
                rowData[6] = rs.getString("TAXABLE_VALUE");//TAXABLE_VALUE
                rowData[7] = rs.getString("HSN_CODE");//HSN_CODE
                rowData[8] = rs.getString("GST_RATE");//GST_RATE
                rowData[9] = rs.getString("IGST_AMT");//IGST_AMT
                rowData[10] = rs.getString("CGST_AMT");//CGST_AMT
                rowData[11] = rs.getString("SGST_AMT");//SGST_AMT
                rowData[12] = rs.getString("CESS");//CESS
                rowData[13] = rs.getString("POS");//POS

//                String Eligibility = "";
//                if(rs.getString("ITEM_ID").equals("99002001"))
//                {
//                    Eligibility = "Capital Goods";
//                }
//                else if(rs.getString("ITEM_ID").equals("99004001"))
//                {
//                    Eligibility = "Input Service";
//                }
//                else
//                {
//                    Eligibility = "Inputs";
//                }
                rowData[14] = rs.getString("ITEM_ID");

                rowData[15] = rs.getString("IGST_AMT_ITC");//IGST_AMT
                rowData[16] = rs.getString("CGST_AMT_ITC");//CGST_AMT
                rowData[17] = rs.getString("SGST_AMT_ITC");//SGST_AMT
                rowData[18] = rs.getString("CESS_ITC");//CESS
                rowData[19] = rs.getString("INVOICE_NO_AMEND");//CESS
                //rowData[20] = rs.getString("INVOICE_DATE_AMEND");//CESS

                DataModelB2BGR.addRow(rowData);
                rs.next();
            }
            rs.close();
            //Object[] rowData2 = new Object[25];
            //DataModelB2BMIR.addRow(rowData2);

        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }

        String sql;
        sql = "SELECT ROUND(SUM(INVOICE_AMT),2) FROM DINESHMILLS.TMP_GR_QUERY_REPORT ";
        String invAmt = data.getStringValueFromDB(sql);
        totalGRInvAmt.setText(invAmt);

        sql = "SELECT ROUND(SUM(TAXABLE_VALUE),2) FROM DINESHMILLS.TMP_GR_QUERY_REPORT ";
        String taxAmt = data.getStringValueFromDB(sql);
        totalGRTaxAmt.setText(taxAmt);

        sql = "SELECT ROUND(SUM(SGST_AMT_ITC),2) FROM DINESHMILLS.TMP_GR_QUERY_REPORT ";
        String SGSTAmt = data.getStringValueFromDB(sql);
        totalGRSGSTITCAmt.setText(SGSTAmt);

        sql = "SELECT ROUND(SUM(CGST_AMT_ITC),2) FROM DINESHMILLS.TMP_GR_QUERY_REPORT ";
        String CGSTAmt = data.getStringValueFromDB(sql);
        totalGRCGSTITCAmt.setText(CGSTAmt);

        sql = "SELECT ROUND(SUM(IGST_AMT_ITC),2) FROM DINESHMILLS.TMP_GR_QUERY_REPORT ";
        String IGSTAmt = data.getStringValueFromDB(sql);
        totalGRIGSTITCAmt.setText(IGSTAmt);

    }    
    
}