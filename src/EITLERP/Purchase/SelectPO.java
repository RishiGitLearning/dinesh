/*
 * SelectMIR.java
 *
 * Created on May 12, 2004, 11:11 AM
 */

package EITLERP.Purchase;

/**
 * 
 * @author  nrpithva
 */
/*<APPLET CODE=SelectPO.Class HEIGHT=560 WIDTH=700></APPLET>*/
  
import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;

public class SelectPO extends javax.swing.JApplet {
    
    private EITLTableModel DataModelL;
    
    private EITLComboModel cmbFromModel;
    
    public boolean Cancelled=true;
    private JDialog aDialog;
    public int ModuleID=21;
    public int POType=1;
    
    private String SelPONo="";
    public clsPOGen SelPO;
       
    private EITLTableModel DataModelS=new EITLTableModel();
    
   public SelectPO(){
       System.gc();
       initComponents();
       FormatGrid();
       GenerateCombo();
    }
    
    /** Initializes the applet SelectPO */
    /*public void init() {
        System.gc();
        initComponents();
        FormatGrid();
        GenerateCombo();
    }*/
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
   private void initComponents() {//GEN-BEGIN:initComponents
       jLabel1 = new javax.swing.JLabel();
       txtPONo = new javax.swing.JTextField();
       cmdShow = new javax.swing.JButton();
       jPanel4 = new javax.swing.JPanel();
       jTabbedPane1 = new javax.swing.JTabbedPane();
       jPanel1 = new javax.swing.JPanel();
       jLabel2 = new javax.swing.JLabel();
       txtDocNo = new javax.swing.JTextField();
       jLabel3 = new javax.swing.JLabel();
       txtDocDate = new javax.swing.JTextField();
       txtSuppName = new javax.swing.JTextField();
       txtSuppCode = new javax.swing.JTextField();
       jLabel4 = new javax.swing.JLabel();
       jLabel16 = new javax.swing.JLabel();
       txtDeliveryDate = new javax.swing.JTextField();
       jLabel9 = new javax.swing.JLabel();
       txtQuotationNo = new javax.swing.JTextField();
       jLabel10 = new javax.swing.JLabel();
       txtQuotationDate = new javax.swing.JTextField();
       txtInquiryDate = new javax.swing.JTextField();
       jLabel15 = new javax.swing.JLabel();
       txtInquiryNo = new javax.swing.JTextField();
       jLabel12 = new javax.swing.JLabel();
       jLabel11 = new javax.swing.JLabel();
       jLabel40 = new javax.swing.JLabel();
       txtPurpose = new javax.swing.JTextField();
       txtSubject = new javax.swing.JTextField();
       jLabel41 = new javax.swing.JLabel();
       jLabel7 = new javax.swing.JLabel();
       txtRefA = new javax.swing.JTextField();
       jLabel8 = new javax.swing.JLabel();
       txtRefB = new javax.swing.JTextField();
       txtBuyer = new javax.swing.JTextField();
       jPanel2 = new javax.swing.JPanel();
       jScrollPane1 = new javax.swing.JScrollPane();
       TableL = new javax.swing.JTable();
       jLabel6 = new javax.swing.JLabel();
       jLabel19 = new javax.swing.JLabel();
       txtNetAmount = new javax.swing.JFormattedTextField();
       jPanel3 = new javax.swing.JPanel();
       lblSpecs = new javax.swing.JLabel();
       frameSpecs = new javax.swing.JScrollPane();
       TableS = new javax.swing.JTable();
       lblImport = new javax.swing.JLabel();
       txtImportLicense = new javax.swing.JTextField();
       jLabel47 = new javax.swing.JLabel();
       txtLine1Code = new javax.swing.JTextField();
       txtLine1 = new javax.swing.JTextField();
       txtLine2 = new javax.swing.JTextField();
       txtLine2Code = new javax.swing.JTextField();
       jLabel48 = new javax.swing.JLabel();
       jLabel39 = new javax.swing.JLabel();
       txtRemarks = new javax.swing.JTextField();
       jButton1 = new javax.swing.JButton();
       jButton2 = new javax.swing.JButton();
       jButton3 = new javax.swing.JButton();
       jButton4 = new javax.swing.JButton();
       jPanel6 = new javax.swing.JPanel();
       jLabel20 = new javax.swing.JLabel();
       txtPaymentTerm = new javax.swing.JTextField();
       txtPriceBasisTerm = new javax.swing.JTextField();
       jLabel21 = new javax.swing.JLabel();
       jLabel22 = new javax.swing.JLabel();
       txtDiscountTerm = new javax.swing.JTextField();
       txtSTTerm = new javax.swing.JTextField();
       jLabel24 = new javax.swing.JLabel();
       txtExciseTerm = new javax.swing.JTextField();
       jLabel23 = new javax.swing.JLabel();
       jLabel26 = new javax.swing.JLabel();
       txtPFTerm = new javax.swing.JTextField();
       jLabel27 = new javax.swing.JLabel();
       txtFreightTerm = new javax.swing.JTextField();
       txtOctroiTerm = new javax.swing.JTextField();
       jLabel28 = new javax.swing.JLabel();
       jPanel7 = new javax.swing.JPanel();
       jLabel29 = new javax.swing.JLabel();
       txtFOBTerm = new javax.swing.JTextField();
       jLabel30 = new javax.swing.JLabel();
       txtCIETerm = new javax.swing.JTextField();
       txtTCCTerm = new javax.swing.JTextField();
       jLabel38 = new javax.swing.JLabel();
       txtInsuranceTerm = new javax.swing.JTextField();
       jLabel37 = new javax.swing.JLabel();
       jLabel44 = new javax.swing.JLabel();
       txtCenvatTerm = new javax.swing.JTextField();
       jLabel45 = new javax.swing.JLabel();
       jPanel8 = new javax.swing.JPanel();
       jScrollPane2 = new javax.swing.JScrollPane();
       txtDespatchTerm = new javax.swing.JTextArea();
       jLabel31 = new javax.swing.JLabel();
       txtServiceTax = new javax.swing.JTextField();
       jLabel13 = new javax.swing.JLabel();
       cmbFromYear = new javax.swing.JComboBox();
       jLabel14 = new javax.swing.JLabel();
       txtToYear = new javax.swing.JTextField();
       jLabel17 = new javax.swing.JLabel();
       jPanel5 = new javax.swing.JPanel();
       cmdCopy = new javax.swing.JButton();
       cmdCancel = new javax.swing.JButton();
       jLabel5 = new javax.swing.JLabel();
       txtSuppCodeH = new javax.swing.JTextField();
       txtSuppNameH = new javax.swing.JTextField();
       cmdGetLastPO = new javax.swing.JButton();
       jLabel18 = new javax.swing.JLabel();
       txtItemID = new javax.swing.JTextField();
       txtItemName = new javax.swing.JTextField();
       
       getContentPane().setLayout(null);
       
       jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
       jLabel1.setText("Select P.O.");
       getContentPane().add(jLabel1);
       jLabel1.setBounds(7, 127, 79, 15);
       
       txtPONo.setNextFocusableComponent(cmdGetLastPO);
       txtPONo.addKeyListener(new java.awt.event.KeyAdapter() {
           public void keyPressed(java.awt.event.KeyEvent evt) {
               txtPONoKeyPressed(evt);
           }
       });
       
       getContentPane().add(txtPONo);
       txtPONo.setBounds(96, 124, 106, 19);
       
       cmdShow.setMnemonic('S');
       cmdShow.setText("Show P.O.");
       cmdShow.setNextFocusableComponent(cmdCopy);
       cmdShow.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               cmdShowActionPerformed(evt);
           }
       });
       
       getContentPane().add(cmdShow);
       cmdShow.setBounds(368, 124, 102, 22);
       
       jPanel4.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
       getContentPane().add(jPanel4);
       jPanel4.setBounds(4, 152, 680, 2);
       
       jPanel1.setLayout(null);
       
       jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
       jLabel2.setText("P.O. No.");
       jPanel1.add(jLabel2);
       jLabel2.setBounds(52, 18, 56, 15);
       
       txtDocNo.setBackground(new java.awt.Color(204, 204, 255));
       txtDocNo.setEditable(false);
       jPanel1.add(txtDocNo);
       txtDocNo.setBounds(114, 14, 114, 19);
       
       jLabel3.setText("Date");
       jPanel1.add(jLabel3);
       jLabel3.setBounds(254, 18, 29, 15);
       
       txtDocDate.setEnabled(false);
       jPanel1.add(txtDocDate);
       txtDocDate.setBounds(290, 16, 100, 19);
       
       txtSuppName.setEditable(false);
       jPanel1.add(txtSuppName);
       txtSuppName.setBounds(178, 50, 212, 19);
       
       txtSuppCode.setEnabled(false);
       jPanel1.add(txtSuppCode);
       txtSuppCode.setBounds(114, 50, 62, 19);
       
       jLabel4.setText("Supplier");
       jPanel1.add(jLabel4);
       jLabel4.setBounds(54, 54, 52, 15);
       
       jLabel16.setText("Delivery Date");
       jPanel1.add(jLabel16);
       jLabel16.setBounds(30, 88, 82, 15);
       
       txtDeliveryDate.setEnabled(false);
       jPanel1.add(txtDeliveryDate);
       txtDeliveryDate.setBounds(114, 86, 114, 19);
       
       jLabel9.setText("Quotation No.");
       jPanel1.add(jLabel9);
       jLabel9.setBounds(24, 128, 84, 15);
       
       txtQuotationNo.setEnabled(false);
       jPanel1.add(txtQuotationNo);
       txtQuotationNo.setBounds(114, 124, 114, 19);
       
       jLabel10.setText("Date");
       jPanel1.add(jLabel10);
       jLabel10.setBounds(254, 128, 29, 15);
       
       txtQuotationDate.setEnabled(false);
       jPanel1.add(txtQuotationDate);
       txtQuotationDate.setBounds(290, 126, 100, 19);
       
       txtInquiryDate.setEnabled(false);
       jPanel1.add(txtInquiryDate);
       txtInquiryDate.setBounds(290, 158, 100, 19);
       
       jLabel15.setText("Date");
       jPanel1.add(jLabel15);
       jLabel15.setBounds(254, 160, 29, 15);
       
       txtInquiryNo.setEnabled(false);
       jPanel1.add(txtInquiryNo);
       txtInquiryNo.setBounds(114, 156, 114, 19);
       
       jLabel12.setText("Inquiry No.");
       jPanel1.add(jLabel12);
       jLabel12.setBounds(40, 160, 66, 15);
       
       jLabel11.setText("Buyer");
       jPanel1.add(jLabel11);
       jLabel11.setBounds(64, 192, 42, 16);
       
       jLabel40.setText("Purpose");
       jPanel1.add(jLabel40);
       jLabel40.setBounds(48, 228, 52, 15);
       
       txtPurpose.setEnabled(false);
       jPanel1.add(txtPurpose);
       txtPurpose.setBounds(114, 224, 276, 19);
       
       txtSubject.setEnabled(false);
       jPanel1.add(txtSubject);
       txtSubject.setBounds(114, 254, 276, 19);
       
       jLabel41.setText("Subject");
       jPanel1.add(jLabel41);
       jLabel41.setBounds(48, 258, 52, 15);
       
       jLabel7.setText("Ref. A");
       jPanel1.add(jLabel7);
       jLabel7.setBounds(62, 292, 40, 15);
       
       txtRefA.setEnabled(false);
       jPanel1.add(txtRefA);
       txtRefA.setBounds(114, 288, 114, 19);
       
       jLabel8.setText("Ref. B.");
       jPanel1.add(jLabel8);
       jLabel8.setBounds(242, 292, 44, 15);
       
       txtRefB.setEnabled(false);
       jPanel1.add(txtRefB);
       txtRefB.setBounds(290, 290, 100, 19);
       
       txtBuyer.setEnabled(false);
       jPanel1.add(txtBuyer);
       txtBuyer.setBounds(114, 190, 172, 19);
       
       jTabbedPane1.addTab("P.O. Information", jPanel1);
       
       jPanel2.setLayout(null);
       
       jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
       TableL.setModel(new javax.swing.table.DefaultTableModel(
       new Object [][] {
           {null, null, null, null},
           {null, null, null, null},
           {null, null, null, null},
           {null, null, null, null}
       },
       new String [] {
           "Title 1", "Title 2", "Title 3", "Title 4"
       }
       ));
       jScrollPane1.setViewportView(TableL);
       
       jPanel2.add(jScrollPane1);
       jScrollPane1.setBounds(8, 32, 656, 246);
       
       jLabel6.setText("P.O. Items");
       jPanel2.add(jLabel6);
       jLabel6.setBounds(12, 8, 72, 15);
       
       jLabel19.setText("Net Amount");
       jPanel2.add(jLabel19);
       jLabel19.setBounds(452, 292, 74, 15);
       
       txtNetAmount.setBackground(new java.awt.Color(255, 255, 204));
       txtNetAmount.setEditable(false);
       txtNetAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
       txtNetAmount.setFont(new java.awt.Font("Arial", 1, 12));
       jPanel2.add(txtNetAmount);
       txtNetAmount.setBounds(530, 290, 132, 19);
       
       jTabbedPane1.addTab("Item Information", jPanel2);
       
       jPanel3.setLayout(null);
       
       jPanel3.setBorder(new javax.swing.border.EtchedBorder());
       lblSpecs.setText("Specifications");
       jPanel3.add(lblSpecs);
       lblSpecs.setBounds(16, 14, 160, 15);
       
       TableS.setModel(new javax.swing.table.DefaultTableModel(
       new Object [][] {
           {null, null, null, null},
           {null, null, null, null},
           {null, null, null, null},
           {null, null, null, null}
       },
       new String [] {
           "Title 1", "Title 2", "Title 3", "Title 4"
       }
       ));
       frameSpecs.setViewportView(TableS);
       
       jPanel3.add(frameSpecs);
       frameSpecs.setBounds(14, 34, 440, 118);
       
       lblImport.setText("Import License Details");
       jPanel3.add(lblImport);
       lblImport.setBounds(12, 185, 142, 15);
       
       txtImportLicense.setName("REMARKS");
       txtImportLicense.setEnabled(false);
       jPanel3.add(txtImportLicense);
       txtImportLicense.setBounds(159, 183, 469, 19);
       
       jLabel47.setText("Line 1");
       jPanel3.add(jLabel47);
       jLabel47.setBounds(22, 236, 42, 15);
       
       txtLine1Code.setName("PRINT_LINE_1");
       txtLine1Code.setEnabled(false);
       jPanel3.add(txtLine1Code);
       txtLine1Code.setBounds(70, 232, 54, 19);
       
       txtLine1.setEnabled(false);
       jPanel3.add(txtLine1);
       txtLine1.setBounds(128, 232, 408, 19);
       
       txtLine2.setEnabled(false);
       jPanel3.add(txtLine2);
       txtLine2.setBounds(130, 260, 406, 19);
       
       txtLine2Code.setName("PRINT_LINE_2");
       txtLine2Code.setEnabled(false);
       jPanel3.add(txtLine2Code);
       txtLine2Code.setBounds(72, 260, 54, 19);
       
       jLabel48.setText("Line 2");
       jPanel3.add(jLabel48);
       jLabel48.setBounds(24, 262, 42, 15);
       
       jLabel39.setText("Remarks");
       jPanel3.add(jLabel39);
       jLabel39.setBounds(12, 294, 58, 15);
       
       txtRemarks.setName("REMARKS");
       txtRemarks.setEnabled(false);
       jPanel3.add(txtRemarks);
       txtRemarks.setBounds(72, 292, 464, 19);
       
       jButton1.setText("...");
       jButton1.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               jButton1ActionPerformed(evt);
           }
       });
       
       jPanel3.add(jButton1);
       jButton1.setBounds(632, 181, 33, 22);
       
       jButton2.setText("...");
       jButton2.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               jButton2ActionPerformed(evt);
           }
       });
       
       jPanel3.add(jButton2);
       jButton2.setBounds(540, 231, 33, 22);
       
       jButton3.setText("...");
       jButton3.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               jButton3ActionPerformed(evt);
           }
       });
       
       jPanel3.add(jButton3);
       jButton3.setBounds(541, 260, 33, 22);
       
       jButton4.setText("...");
       jButton4.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               jButton4ActionPerformed(evt);
           }
       });
       
       jPanel3.add(jButton4);
       jButton4.setBounds(542, 292, 33, 22);
       
       jTabbedPane1.addTab("Other Information", jPanel3);
       
       jPanel6.setLayout(null);
       
       jPanel6.setBorder(new javax.swing.border.EtchedBorder());
       jLabel20.setText("Payment Terms");
       jPanel6.add(jLabel20);
       jLabel20.setBounds(8, 14, 96, 15);
       
       txtPaymentTerm.setName("PAYMENT_TERM");
       txtPaymentTerm.setEnabled(false);
       jPanel6.add(txtPaymentTerm);
       txtPaymentTerm.setBounds(106, 10, 322, 19);
       
       txtPriceBasisTerm.setName("PRICE_BASIS_TERM");
       txtPriceBasisTerm.setEnabled(false);
       jPanel6.add(txtPriceBasisTerm);
       txtPriceBasisTerm.setBounds(106, 38, 206, 19);
       
       jLabel21.setText("Price Basis");
       jPanel6.add(jLabel21);
       jLabel21.setBounds(8, 42, 96, 15);
       
       jLabel22.setText("Discount");
       jPanel6.add(jLabel22);
       jLabel22.setBounds(325, 40, 96, 15);
       
       txtDiscountTerm.setName("DISCOUNT_TERM");
       txtDiscountTerm.setEnabled(false);
       jPanel6.add(txtDiscountTerm);
       txtDiscountTerm.setBounds(422, 38, 206, 19);
       
       txtSTTerm.setName("ST_TERM");
       txtSTTerm.setEnabled(false);
       jPanel6.add(txtSTTerm);
       txtSTTerm.setBounds(422, 64, 206, 19);
       
       jLabel24.setText("S.T. ");
       jPanel6.add(jLabel24);
       jLabel24.setBounds(326, 66, 96, 15);
       
       txtExciseTerm.setName("EXCISE_TERM");
       txtExciseTerm.setEnabled(false);
       jPanel6.add(txtExciseTerm);
       txtExciseTerm.setBounds(106, 64, 206, 19);
       
       jLabel23.setText("Excise");
       jPanel6.add(jLabel23);
       jLabel23.setBounds(10, 68, 96, 15);
       
       jLabel26.setText("P. & F.");
       jPanel6.add(jLabel26);
       jLabel26.setBounds(10, 94, 96, 15);
       
       txtPFTerm.setName("PF_TERM");
       txtPFTerm.setEnabled(false);
       jPanel6.add(txtPFTerm);
       txtPFTerm.setBounds(106, 90, 206, 19);
       
       jLabel27.setText("Freight");
       jPanel6.add(jLabel27);
       jLabel27.setBounds(324, 92, 96, 15);
       
       txtFreightTerm.setName("FREIGHT_TERM");
       txtFreightTerm.setEnabled(false);
       jPanel6.add(txtFreightTerm);
       txtFreightTerm.setBounds(422, 90, 206, 19);
       
       txtOctroiTerm.setName("OCTROI_TERM");
       txtOctroiTerm.setEnabled(false);
       jPanel6.add(txtOctroiTerm);
       txtOctroiTerm.setBounds(106, 116, 206, 19);
       
       jLabel28.setText("Octroi");
       jPanel6.add(jLabel28);
       jLabel28.setBounds(12, 120, 96, 15);
       
       jPanel7.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
       jPanel6.add(jPanel7);
       jPanel7.setBounds(10, 144, 676, 6);
       
       jLabel29.setText("FOB");
       jPanel6.add(jLabel29);
       jLabel29.setBounds(14, 164, 96, 15);
       
       txtFOBTerm.setName("FOB_TERM");
       txtFOBTerm.setEnabled(false);
       jPanel6.add(txtFOBTerm);
       txtFOBTerm.setBounds(106, 160, 206, 19);
       
       jLabel30.setText("CIF");
       jPanel6.add(jLabel30);
       jLabel30.setBounds(330, 162, 96, 15);
       
       txtCIETerm.setName("CIE_TERM");
       txtCIETerm.setEnabled(false);
       jPanel6.add(txtCIETerm);
       txtCIETerm.setBounds(422, 158, 206, 19);
       
       txtTCCTerm.setName("TCC_TERM");
       txtTCCTerm.setEnabled(false);
       jPanel6.add(txtTCCTerm);
       txtTCCTerm.setBounds(422, 184, 206, 19);
       
       jLabel38.setText("TCC");
       jPanel6.add(jLabel38);
       jLabel38.setBounds(330, 188, 96, 15);
       
       txtInsuranceTerm.setName("INSURANCE_TERM");
       txtInsuranceTerm.setEnabled(false);
       jPanel6.add(txtInsuranceTerm);
       txtInsuranceTerm.setBounds(106, 186, 206, 19);
       
       jLabel37.setText("Insurance");
       jPanel6.add(jLabel37);
       jLabel37.setBounds(14, 190, 96, 15);
       
       jLabel44.setText("Cenvat");
       jPanel6.add(jLabel44);
       jLabel44.setBounds(16, 216, 96, 15);
       
       txtCenvatTerm.setName("CENVAT_TERM");
       txtCenvatTerm.setEnabled(false);
       jPanel6.add(txtCenvatTerm);
       txtCenvatTerm.setBounds(106, 212, 206, 19);
       
       jLabel45.setText("Despatch Instructions");
       jPanel6.add(jLabel45);
       jLabel45.setBounds(10, 260, 194, 15);
       
       jPanel8.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
       jPanel6.add(jPanel8);
       jPanel8.setBounds(10, 250, 676, 6);
       
       txtDespatchTerm.setName("DESPATCH_TERM");
       txtDespatchTerm.setEnabled(false);
       jScrollPane2.setViewportView(txtDespatchTerm);
       
       jPanel6.add(jScrollPane2);
       jScrollPane2.setBounds(11, 279, 456, 71);
       
       jLabel31.setText("Service Tax");
       jPanel6.add(jLabel31);
       jLabel31.setBounds(326, 118, 96, 15);
       
       txtServiceTax.setName("OCTROI_TERM");
       txtServiceTax.setEnabled(false);
       jPanel6.add(txtServiceTax);
       txtServiceTax.setBounds(423, 116, 206, 19);
       
       jTabbedPane1.addTab("Terms & Conditions", jPanel6);
       
       getContentPane().add(jTabbedPane1);
       jTabbedPane1.setBounds(6, 162, 678, 387);
       
       jLabel13.setText("Fin. Year");
       getContentPane().add(jLabel13);
       jLabel13.setBounds(24, 43, 65, 15);
       
       cmbFromYear.setNextFocusableComponent(txtSuppCodeH);
       cmbFromYear.addItemListener(new java.awt.event.ItemListener() {
           public void itemStateChanged(java.awt.event.ItemEvent evt) {
               cmbFromYearItemStateChanged(evt);
           }
       });
       
       getContentPane().add(cmbFromYear);
       cmbFromYear.setBounds(96, 39, 102, 24);
       
       jLabel14.setFont(new java.awt.Font("Verdana", 0, 11));
       jLabel14.setText("To");
       getContentPane().add(jLabel14);
       jLabel14.setBounds(206, 43, 24, 14);
       
       txtToYear.setEditable(false);
       getContentPane().add(txtToYear);
       txtToYear.setBounds(230, 39, 102, 19);
       
       jLabel17.setFont(new java.awt.Font("Dialog", 1, 14));
       jLabel17.setForeground(new java.awt.Color(51, 51, 255));
       jLabel17.setText("Copy P.O.");
       getContentPane().add(jLabel17);
       jLabel17.setBounds(8, 6, 70, 17);
       
       jPanel5.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
       getContentPane().add(jPanel5);
       jPanel5.setBounds(8, 32, 680, 2);
       
       cmdCopy.setBackground(new java.awt.Color(204, 204, 255));
       cmdCopy.setText("Copy");
       cmdCopy.setNextFocusableComponent(cmdCancel);
       cmdCopy.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               cmdCopyActionPerformed(evt);
           }
       });
       
       getContentPane().add(cmdCopy);
       cmdCopy.setBounds(594, 42, 80, 25);
       
       cmdCancel.setBackground(new java.awt.Color(204, 204, 255));
       cmdCancel.setText("Cancel");
       cmdCancel.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               cmdCancelActionPerformed(evt);
           }
       });
       
       getContentPane().add(cmdCancel);
       cmdCancel.setBounds(594, 70, 79, 25);
       
       jLabel5.setText("Supplier");
       getContentPane().add(jLabel5);
       jLabel5.setBounds(38, 71, 52, 15);
       
       txtSuppCodeH.setNextFocusableComponent(txtItemID);
       txtSuppCodeH.addFocusListener(new java.awt.event.FocusAdapter() {
           public void focusLost(java.awt.event.FocusEvent evt) {
               txtSuppCodeHFocusLost(evt);
           }
       });
       txtSuppCodeH.addKeyListener(new java.awt.event.KeyAdapter() {
           public void keyPressed(java.awt.event.KeyEvent evt) {
               txtSuppCodeHKeyPressed(evt);
           }
       });
       
       getContentPane().add(txtSuppCodeH);
       txtSuppCodeH.setBounds(98, 70, 62, 19);
       
       txtSuppNameH.setEditable(false);
       getContentPane().add(txtSuppNameH);
       txtSuppNameH.setBounds(162, 70, 212, 19);
       
       cmdGetLastPO.setMnemonic('S');
       cmdGetLastPO.setText("Get Last P.O. No.");
       cmdGetLastPO.setNextFocusableComponent(cmdShow);
       cmdGetLastPO.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               cmdGetLastPOActionPerformed(evt);
           }
       });
       
       getContentPane().add(cmdGetLastPO);
       cmdGetLastPO.setBounds(220, 124, 142, 22);
       
       jLabel18.setText("Item");
       getContentPane().add(jLabel18);
       jLabel18.setBounds(57, 99, 33, 15);
       
       txtItemID.setNextFocusableComponent(txtPONo);
       txtItemID.addFocusListener(new java.awt.event.FocusAdapter() {
           public void focusLost(java.awt.event.FocusEvent evt) {
               txtItemIDFocusLost(evt);
           }
       });
       txtItemID.addKeyListener(new java.awt.event.KeyAdapter() {
           public void keyPressed(java.awt.event.KeyEvent evt) {
               txtItemIDKeyPressed(evt);
           }
       });
       
       getContentPane().add(txtItemID);
       txtItemID.setBounds(98, 96, 62, 19);
       
       txtItemName.setEditable(false);
       getContentPane().add(txtItemName);
       txtItemName.setBounds(162, 96, 212, 19);
       
   }//GEN-END:initComponents

   private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       // TODO add your handling code here:
       BigEdit bigEdit=new BigEdit();
       bigEdit.theText=txtRemarks;
       bigEdit.ShowEdit();
   }//GEN-LAST:event_jButton4ActionPerformed

   private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       // TODO add your handling code here:
       BigEdit bigEdit=new BigEdit();
       bigEdit.theText=txtLine2;
       bigEdit.ShowEdit();
              
   }//GEN-LAST:event_jButton3ActionPerformed

   private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       // TODO add your handling code here:
       BigEdit bigEdit=new BigEdit();
       bigEdit.theText=txtLine1;
       bigEdit.ShowEdit();
   }//GEN-LAST:event_jButton2ActionPerformed

   private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       // TODO add your handling code here:
       BigEdit bigEdit=new BigEdit();
       bigEdit.theText=txtImportLicense;
       bigEdit.ShowEdit();
   }//GEN-LAST:event_jButton1ActionPerformed

    private void txtItemIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemIDFocusLost
        // TODO add your handling code here:
        txtItemName.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,txtItemID.getText()));        
    }//GEN-LAST:event_txtItemIDFocusLost

    private void txtItemIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIDKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT ITEM_ID,ITEM_DESCRIPTION FROM D_INV_ITEM_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND APPROVED=1 AND CANCELLED=0 ORDER BY ITEM_ID";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtItemID.setText(aList.ReturnVal);
                txtItemName.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,aList.ReturnVal));
            }
        }
        
    }//GEN-LAST:event_txtItemIDKeyPressed

    private void cmdGetLastPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGetLastPOActionPerformed
        // TODO add your handling code here:
        String dbURL=clsFinYear.getDBURL(EITLERPGLOBAL.gCompanyID,Integer.parseInt((String)cmbFromYear.getSelectedItem()));        
        txtPONo.setText(clsPOGen.getLastPOEx(EITLERPGLOBAL.gCompanyID, POType, txtSuppCodeH.getText(),txtItemID.getText(),dbURL));
    }//GEN-LAST:event_cmdGetLastPOActionPerformed

    private void txtSuppCodeHKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSuppCodeHKeyPressed
        // TODO add your handling code here:
        //=========== Supplier List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT SUPPLIER_CODE,SUPP_NAME FROM D_COM_SUPP_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND BLOCKED='N' AND APPROVED=1 ORDER BY SUPP_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtSuppCodeH.setText(aList.ReturnVal);
                txtSuppNameH.setText(clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,aList.ReturnVal));
            }
        }
        //=========================================
    }//GEN-LAST:event_txtSuppCodeHKeyPressed

    private void txtSuppCodeHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuppCodeHFocusLost
        // TODO add your handling code here:
        if(!txtSuppCodeH.getText().trim().equals("")) {
            txtSuppNameH.setText(clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID, txtSuppCodeH.getText()));
        }
    }//GEN-LAST:event_txtSuppCodeHFocusLost

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancelled=true;
        aDialog.dispose();
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void cmdCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCopyActionPerformed
        // TODO add your handling code here:
        if(txtPONo.getText().trim().equals("")||TableL.getRowCount()<=0)
        {
            Cancelled=true;
        }
        else
        {
           Cancelled=false;
        }
        aDialog.dispose();
    }//GEN-LAST:event_cmdCopyActionPerformed

    private void cmbFromYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFromYearItemStateChanged
        // TODO add your handling code here:
        int ToYear=Integer.parseInt((String)cmbFromYear.getSelectedItem())+1;
        txtToYear.setText(Integer.toString(ToYear));
    }//GEN-LAST:event_cmbFromYearItemStateChanged

    private void txtPONoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPONoKeyPressed
        // TODO add your handling code here:
        //=========== Supplier List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            
            POList aList=new POList();
            
            aList.POType=POType;
            aList.FinYear=Integer.parseInt((String)cmbFromYear.getSelectedItem());
                
            if(txtSuppCodeH.getText().trim().equals(""))
            {
                aList.SuppID="";
            }
            else
            {
                aList.SuppID=txtSuppCodeH.getText();
            }
            
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                txtPONo.setText(aList.ReturnVal);
            }
        }
        //=========================================        
    }//GEN-LAST:event_txtPONoKeyPressed

    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:
        SelPONo=txtPONo.getText();
        String dbURL=clsFinYear.getDBURL(EITLERPGLOBAL.gCompanyID,Integer.parseInt((String)cmbFromYear.getSelectedItem()));
        
        
        String docStatus=clsPOGen.getDocStatus(EITLERPGLOBAL.gCompanyID,SelPONo,dbURL);
        
        if(!docStatus.equals(""))
        {
          JOptionPane.showMessageDialog(null,docStatus);
        }
        
        SelPO=new clsPOGen();
        clsPOGen ObjPO=new clsPOGen();
        SelPO=(clsPOGen)ObjPO.getObject(EITLERPGLOBAL.gCompanyID,SelPONo,dbURL,POType);
        
        int POType=clsPOGen.getPOType(EITLERPGLOBAL.gCompanyID, SelPONo);
        
        if(POType==3)
        {
          lblSpecs.setVisible(true);
          frameSpecs.setVisible(true);
        }
        else
        {
          lblSpecs.setVisible(false);
          frameSpecs.setVisible(false);
        }
        
        if(POType==5)
        {
          lblImport.setVisible(true);
          txtImportLicense.setVisible(true);
        }
        else
        {
          lblImport.setVisible(false);
          txtImportLicense.setVisible(false);
        }
        
        DisplayData();
    }//GEN-LAST:event_cmdShowActionPerformed
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableL;
    private javax.swing.JTable TableS;
    private javax.swing.JComboBox cmbFromYear;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdCopy;
    private javax.swing.JButton cmdGetLastPO;
    private javax.swing.JButton cmdShow;
    private javax.swing.JScrollPane frameSpecs;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblImport;
    private javax.swing.JLabel lblSpecs;
    private javax.swing.JTextField txtBuyer;
    private javax.swing.JTextField txtCIETerm;
    private javax.swing.JTextField txtCenvatTerm;
    private javax.swing.JTextField txtDeliveryDate;
    private javax.swing.JTextArea txtDespatchTerm;
    private javax.swing.JTextField txtDiscountTerm;
    private javax.swing.JTextField txtDocDate;
    private javax.swing.JTextField txtDocNo;
    private javax.swing.JTextField txtExciseTerm;
    private javax.swing.JTextField txtFOBTerm;
    private javax.swing.JTextField txtFreightTerm;
    private javax.swing.JTextField txtImportLicense;
    private javax.swing.JTextField txtInquiryDate;
    private javax.swing.JTextField txtInquiryNo;
    private javax.swing.JTextField txtInsuranceTerm;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtLine1;
    private javax.swing.JTextField txtLine1Code;
    private javax.swing.JTextField txtLine2;
    private javax.swing.JTextField txtLine2Code;
    private javax.swing.JFormattedTextField txtNetAmount;
    private javax.swing.JTextField txtOctroiTerm;
    private javax.swing.JTextField txtPFTerm;
    private javax.swing.JTextField txtPONo;
    private javax.swing.JTextField txtPaymentTerm;
    private javax.swing.JTextField txtPriceBasisTerm;
    private javax.swing.JTextField txtPurpose;
    private javax.swing.JTextField txtQuotationDate;
    private javax.swing.JTextField txtQuotationNo;
    private javax.swing.JTextField txtRefA;
    private javax.swing.JTextField txtRefB;
    private javax.swing.JTextField txtRemarks;
    private javax.swing.JTextField txtSTTerm;
    private javax.swing.JTextField txtServiceTax;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtSuppCode;
    private javax.swing.JTextField txtSuppCodeH;
    private javax.swing.JTextField txtSuppName;
    private javax.swing.JTextField txtSuppNameH;
    private javax.swing.JTextField txtTCCTerm;
    private javax.swing.JTextField txtToYear;
    // End of variables declaration//GEN-END:variables
    
private void FormatGrid()    
{
        HashMap ColList=new HashMap();
        
        DataModelL=new EITLTableModel();
        
        TableL.removeAll();
        TableL.setModel(DataModelL);
        
        //Set the table Readonly
        DataModelL.TableReadOnly(false);
        
        ColList=clsSystemColumn.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+ModuleID+" AND HIDDEN=0 ORDER BY D_COM_SYSTEM_COLUMNS.ORDER");
        for(int i=1;i<=ColList.size();i++) {
            clsSystemColumn ObjColumn=(clsSystemColumn)ColList.get(Integer.toString(i));
            
            //Add Column First
            DataModelL.addColumn((String)ObjColumn.getAttribute("CAPTION").getObj()); //0
            
            
            if(ObjColumn.getAttribute("NUMERIC").getBool()) {
                DataModelL.SetNumeric(TableL.getColumnCount()-1, true);
            }
            else {
                DataModelL.SetNumeric(TableL.getColumnCount()-1, false);
            }
            
            
            String Variable=(String)ObjColumn.getAttribute("VARIABLE").getObj();
            
            if(Variable.equals("QTY")||Variable.equals("RATE")||Variable.equals("GROSS_AMOUNT")||Variable.equals("NET_AMOUNT")) {
                DataModelL.SetColID(TableL.getColumnCount()-1, -99);
            }
            else {
                DataModelL.SetColID(TableL.getColumnCount()-1, 0);
            }
            
            
            DataModelL.SetVariable(TableL.getColumnCount()-1,Variable.trim());
            DataModelL.SetOperation(TableL.getColumnCount()-1, "-");
            DataModelL.SetInclude(TableL.getColumnCount()-1,true);
            
            if(ObjColumn.getAttribute("READONLY").getBool()) {
                DataModelL.SetReadOnly(TableL.getColumnCount()-1);
            }
        }
        
        ColList=clsSystemColumn.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+ModuleID+" AND HIDDEN=1 ORDER BY D_COM_SYSTEM_COLUMNS.ORDER");
        for(int i=1;i<=ColList.size();i++) {
            clsSystemColumn ObjColumn=(clsSystemColumn)ColList.get(Integer.toString(i));
            
            //Add Column First
            DataModelL.addColumn(""); //
            DataModelL.SetColID(TableL.getColumnCount()-1, 0);
            DataModelL.SetVariable(TableL.getColumnCount()-1,(String)ObjColumn.getAttribute("VARIABLE").getObj());
            DataModelL.SetOperation(TableL.getColumnCount()-1, "-");
            DataModelL.SetInclude(TableL.getColumnCount()-1,true);
            
            DataModelL.SetReadOnly(TableL.getColumnCount()-1);
            
            //Hide the Column
            TableL.getColumnModel().getColumn(TableL.getColumnCount()-1).setPreferredWidth(0);
            TableL.getColumnModel().getColumn(TableL.getColumnCount()-1).setMaxWidth(0);
            TableL.getColumnModel().getColumn(TableL.getColumnCount()-1).setMinWidth(0);
            TableL.getColumnModel().getColumn(TableL.getColumnCount()-1).setWidth(0);
        }
        
        
        //Now hide the column 1
        TableColumnModel ColModel=TableL.getColumnModel();
        TableL.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        DataModelL.TableReadOnly(true);
}

private void DisplayData()
{
    
    String dbURL=clsFinYear.getDBURL(EITLERPGLOBAL.gCompanyID,Integer.parseInt((String)cmbFromYear.getSelectedItem()));
    
    txtDocNo.setText((String)SelPO.getAttribute("PO_NO").getObj());
    txtDocDate.setText(EITLERPGLOBAL.formatDate((String)SelPO.getAttribute("PO_DATE").getObj()));
    txtSuppCode.setText((String)SelPO.getAttribute("SUPP_ID").getObj());
    txtSuppName.setText(clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,txtSuppCode.getText(),dbURL));
    txtQuotationNo.setText((String)SelPO.getAttribute("QUOTATION_NO").getObj());
    txtQuotationDate.setText(EITLERPGLOBAL.formatDate((String)SelPO.getAttribute("QUOTATION_DATE").getObj()));
    txtInquiryNo.setText((String)SelPO.getAttribute("INQUIRY_NO").getObj());
    txtInquiryDate.setText(EITLERPGLOBAL.formatDate((String)SelPO.getAttribute("INQUIRY_DATE").getObj()));
    txtBuyer.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(int)SelPO.getAttribute("BUYER").getVal(),dbURL));
    txtPurpose.setText((String)SelPO.getAttribute("PURPOSE").getObj());
    txtSubject.setText((String)SelPO.getAttribute("SUBJECT").getObj());
    txtRefA.setText((String)SelPO.getAttribute("REF_A").getObj());
    txtRefB.setText((String)SelPO.getAttribute("REF_B").getObj());
    txtNetAmount.setText(Double.toString(SelPO.getAttribute("NET_AMOUNT").getVal()));
    
            FormatGrid();
            for(int i=1;i<=SelPO.colPOItems.size();i++) {
                //Insert New Row
                Object[] rowData=new Object[1];
                DataModelL.addRow(rowData);
                int NewRow=TableL.getRowCount()-1;
                
                clsPOItem ObjItem=(clsPOItem)SelPO.colPOItems.get(Integer.toString(i));
                
                DataModelL.setValueByVariable("SR_NO",Integer.toString(i),NewRow);
                DataModelL.setValueByVariable("ITEM_ID",(String)ObjItem.getAttribute("ITEM_ID").getObj(),NewRow);
                String ItemName=clsItem.getItemName(EITLERPGLOBAL.gCompanyID, (String)ObjItem.getAttribute("ITEM_ID").getObj(),dbURL);
                DataModelL.setValueByVariable("ITEM_NAME",ItemName,NewRow);
                DataModelL.setValueByVariable("ITEM_DESC",(String)ObjItem.getAttribute("ITEM_DESC").getObj(),NewRow);
                DataModelL.setValueByVariable("PART_NO",(String)ObjItem.getAttribute("PART_NO").getObj(),NewRow);
                DataModelL.setValueByVariable("QTY",Double.toString(ObjItem.getAttribute("QTY").getVal()),NewRow);
                DataModelL.setValueByVariable("RATE",Double.toString(ObjItem.getAttribute("RATE").getVal()),NewRow);
                DataModelL.setValueByVariable("UNIT_ID",Integer.toString((int)ObjItem.getAttribute("UNIT").getVal()),NewRow);
                String UnitName=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"UNIT",(int)ObjItem.getAttribute("UNIT").getVal(),dbURL);
                DataModelL.setValueByVariable("UNIT_NAME",UnitName,NewRow);
                DataModelL.setValueByVariable("DISC_PER",Double.toString(ObjItem.getAttribute("DISC_PER").getVal()),NewRow);
                DataModelL.setValueByVariable("DISC_AMT",Double.toString(ObjItem.getAttribute("DISC_AMT").getVal()),NewRow);
                DataModelL.setValueByVariable("GROSS_AMOUNT",Double.toString(ObjItem.getAttribute("TOTAL_AMOUNT").getVal()),NewRow);
                DataModelL.setValueByVariable("NET_AMOUNT",Double.toString(ObjItem.getAttribute("NET_AMOUNT").getVal()),NewRow);
                DataModelL.setValueByVariable("INDENT_NO",(String)ObjItem.getAttribute("INDENT_NO").getObj(),NewRow);
                DataModelL.setValueByVariable("INDENT_SR_NO",Integer.toString((int)ObjItem.getAttribute("INDENT_SR_NO").getVal()),NewRow);
                DataModelL.setValueByVariable("REFERENCE",(String)ObjItem.getAttribute("REFERENCE").getObj(),NewRow);
                DataModelL.setValueByVariable("DELIVERY_DATE",EITLERPGLOBAL.formatDate((String)ObjItem.getAttribute("DELIVERY_DATE").getObj()),NewRow);
                DataModelL.setValueByVariable("REMARKS",(String)ObjItem.getAttribute("REMARKS").getObj(),NewRow);
            }

            
            txtRemarks.setText((String)SelPO.getAttribute("REMARKS").getObj());
            
                        
            txtLine1.setText((String)SelPO.getAttribute("PRINT_LINE_1").getObj());
            txtLine2.setText((String)SelPO.getAttribute("PRINT_LINE_2").getObj());
            txtImportLicense.setText((String)SelPO.getAttribute("IMPORT_LICENSE").getObj());
            
            
            //Displaying Terms
            txtPaymentTerm.setText((String)SelPO.getAttribute("PAYMENT_TERM").getObj());
            txtPriceBasisTerm.setText((String)SelPO.getAttribute("PRICE_BASIS_TERM").getObj());
            txtDiscountTerm.setText((String)SelPO.getAttribute("DISCOUNT_TERM").getObj());
            txtExciseTerm.setText((String)SelPO.getAttribute("EXCISE_TERM").getObj());
            txtSTTerm.setText((String)SelPO.getAttribute("ST_TERM").getObj());
            txtPFTerm.setText((String)SelPO.getAttribute("PF_TERM").getObj());
            txtFreightTerm.setText((String)SelPO.getAttribute("FREIGHT_TERM").getObj());
            txtOctroiTerm.setText((String)SelPO.getAttribute("OCTROI_TERM").getObj());
            txtFOBTerm.setText((String)SelPO.getAttribute("FOB_TERM").getObj());
            txtCIETerm.setText((String)SelPO.getAttribute("CIE_TERM").getObj());
            txtInsuranceTerm.setText((String)SelPO.getAttribute("INSURANCE_TERM").getObj());
            txtTCCTerm.setText((String)SelPO.getAttribute("TCC_TERM").getObj());
            txtCenvatTerm.setText((String)SelPO.getAttribute("CENVAT_TERM").getObj());
            txtDespatchTerm.setText((String)SelPO.getAttribute("DESPATCH_TERM").getObj());
            txtServiceTax.setText((String)SelPO.getAttribute("SERVICE_TAX_TERM").getObj());
            
            //============= P.O. Terms ==============//
            //========= Display Line Items =============//
            FormatTermsGrid();
            for(int i=1;i<=SelPO.colPOTerms.size();i++) {
                //Insert New Row
                Object[] rowData=new Object[3];
                clsPOTerms ObjItem=(clsPOTerms)SelPO.colPOTerms.get(Integer.toString(i));
                String TermType=(String)ObjItem.getAttribute("TERM_TYPE").getObj();
                
                if(TermType.equals("S")) {
                    
                    rowData[0]=Integer.toString(TableS.getRowCount()+1);
                    rowData[1]=Integer.toString((int)ObjItem.getAttribute("TERM_CODE").getVal());
                    rowData[2]=(String)ObjItem.getAttribute("TERM_DESC").getObj();
                    DataModelS.addRow(rowData);
                }
                
            }
            //=======================================//
            
}

    //Recurses through the hierarchy of classes
    //until it finds Frame
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }

public boolean ShowDialog() {
        try {
            FormatGrid();
                 
            setSize(700,560);
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"Copy Purchase Order",true);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(false);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            aDialog.show();
        }
        catch(Exception e) {
        }
        return !Cancelled;
    }    

private void GenerateCombo()
{
        HashMap List=new HashMap();
        
        cmbFromModel=new EITLComboModel();
        cmbFromYear.setModel(cmbFromModel);
        cmbFromYear.removeAllItems();
        
        List=clsFinYear.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID);
        
        for(int i=1;i<=List.size();i++) {
            clsFinYear ObjYear =(clsFinYear) List.get(Integer.toString(i));
            
            ComboData cmbData=new ComboData();
            cmbData.Text=Integer.toString((int)ObjYear.getAttribute("YEAR_FROM").getVal());
            cmbData.Code=(int)ObjYear.getAttribute("YEAR_FROM").getVal();
            cmbData.strCode =Integer.toString((int)ObjYear.getAttribute("YEAR_FROM").getVal());
            cmbFromModel.addElement(cmbData);
        }
}


    private void FormatTermsGrid() {
        //--- PO Terms Formatting -----//
        DataModelS=new EITLTableModel();
        
        TableS.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        TableS.removeAll();
        TableS.setModel(DataModelS);
        
        DataModelS.addColumn("Sr.");
        DataModelS.addColumn("Code");
        DataModelS.addColumn("Description");
        
        DataModelS.SetNumeric(0, true);
        DataModelS.SetNumeric(1, true);
        
        //----- Install Table Model Event Listener -------//
        TableS.getModel().addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e) {
                if (e.getType() == TableModelEvent.UPDATE) {
                    int col = e.getColumn();
                    
                    if(col==1) {
                        int theCode=Integer.parseInt((String)TableS.getValueAt(TableS.getSelectedRow(), 1));
                        
                        String Desc=clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"OTHER_CODE",theCode);
                        TableS.setValueAt(Desc, TableS.getSelectedRow(), 2);
                    }
                }
            }
        });
        //=============================================//
        
        
    }

}
