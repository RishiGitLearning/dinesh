/*
 * frmHierarchyRecover.java
 *
 * Created on November 9, 2006, 12:57 PM
 */

package EITLERP.Utils;

/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Stores.*;
import EITLERP.Purchase.*;
import EITLERP.Finance.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.sql.*;

public class frmHierarchyRecover extends javax.swing.JApplet {
    
    private EITLComboModel cmbModuleModel;
    
    /** Initializes the applet frmHierarchyRecover */
    public void init() {
        setSize(428,207);
        initComponents();
        GenerateCombos();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtDoc = new javax.swing.JTextField();
        cmdOpenDoc = new javax.swing.JButton();
        cmbModule = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cmdOpenDoc1 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" RECOVER HIERARCHY INFORMATION");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(-1, 1, 804, 25);

        jLabel1.setText("Doc. No.");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(21, 94, 61, 15);

        txtDoc.setName("DOC_NO");
        getContentPane().add(txtDoc);
        txtDoc.setBounds(95, 90, 145, 23);

        cmdOpenDoc.setText("Open Document");
        cmdOpenDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOpenDocActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOpenDoc);
        cmdOpenDoc.setBounds(248, 89, 138, 25);

        cmbModule.setName("MODULE_ID");
        getContentPane().add(cmbModule);
        cmbModule.setBounds(94, 46, 211, 24);

        jLabel4.setText("Module");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(14, 50, 76, 15);

        cmdOpenDoc1.setText("Recover");
        cmdOpenDoc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOpenDoc1ActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOpenDoc1);
        cmdOpenDoc1.setBounds(99, 143, 138, 25);

    }//GEN-END:initComponents
    
    private void cmdOpenDoc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOpenDoc1ActionPerformed
        // TODO add your handling code here:
        try {
            
            ApprovalFlow ObjFlow = new ApprovalFlow();
            ResultSet rsDoc;
            ResultSet rsApproval;
            ResultSet rsHierarchy;
            
            int ModuleID = EITLERPGLOBAL.getComboCode(cmbModule);
            String DocNo = txtDoc.getText();
            String TableName = clsModules.getHeaderTableName(EITLERPGLOBAL.gCompanyID, ModuleID);
            String DocFieldName = clsModules.getDocNoFieldName(EITLERPGLOBAL.gCompanyID, ModuleID);
            int HierarchyID = 0;
            
            rsDoc=data.getResult("SELECT DOC_NO FROM D_COM_DOC_DATA WHERE MODULE_ID="+ModuleID+" AND DOC_NO='"+DocNo+"'");
            if(rsDoc.getRow()>0)
            {
                JOptionPane.showMessageDialog(null,"Hierarchy information of this document already exsit. Cannot overwrite existing information");
                return;
            }

            
            rsApproval=data.getResult("SELECT APPROVED FROM "+TableName+" WHERE "+DocFieldName+"='"+DocNo+"'",FinanceGlobal.FinURL);
            if(rsApproval.getRow()>0)
            {
              if(rsApproval.getBoolean("APPROVED"))  
              {
                JOptionPane.showMessageDialog(null," Cannot recover hierarhcy information for approved document.");
                return;
              }
            }else{
              rsApproval=data.getResult("SELECT APPROVED FROM PRODUCTION."+TableName+" WHERE "+DocFieldName+"='"+DocNo+"'");    
              if(rsApproval.getRow()>0){
               if(rsApproval.getBoolean("APPROVED"))  
              {
                JOptionPane.showMessageDialog(null," Cannot recover hierarhcy information for approved document.");
                return;
              }   
              }
            }
            
            
            rsHierarchy=data.getResult("SELECT HIERARCHY_ID FROM "+TableName+" WHERE "+DocFieldName+"='"+DocNo+"'",FinanceGlobal.FinURL);
            rsHierarchy.first();
            if(rsHierarchy.getRow()>0) {
                HierarchyID=rsHierarchy.getInt("HIERARCHY_ID");
            }else{
            rsHierarchy=data.getResult("SELECT HIERARCHY_ID FROM PRODUCTION."+TableName+" WHERE "+DocFieldName+"='"+DocNo+"'");    
            rsHierarchy.first();
            if(rsHierarchy.getRow()>0) {
                HierarchyID=rsHierarchy.getInt("HIERARCHY_ID");
            }
            }
            
            int Creator=clsHierarchy.getCreatorID(EITLERPGLOBAL.gCompanyID,HierarchyID);
            
            ObjFlow.CompanyID=EITLERPGLOBAL.gCompanyID;
            ObjFlow.ModuleID=ModuleID;
            ObjFlow.DocNo=DocNo;
            ObjFlow.From=Creator;
            ObjFlow.To=Creator;
            ObjFlow.Status="A";
            ObjFlow.TableName=TableName;
            ObjFlow.IsCreator=true;
            ObjFlow.HierarchyID=HierarchyID;
            ObjFlow.Remarks="";
            ObjFlow.FieldName=DocFieldName;
            
            if(ObjFlow.UpdateFlow()) {
                JOptionPane.showMessageDialog(null,"Hierarchy Information Updated. ");
            }
            else {
                JOptionPane.showMessageDialog(null,"Hierarchy Information Updation Failed. "+ObjFlow.LastError);
            }
            
            
        }
        catch(Exception e) {
         JOptionPane.showMessageDialog(null,e.getMessage());
         e.printStackTrace();
        }
        
    }//GEN-LAST:event_cmdOpenDoc1ActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdOpenDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOpenDocActionPerformed
        // TODO add your handling code here:
        if(!txtDoc.getText().equals("")) {
            clsModuleInterface.OpenDocument(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.getComboCode(cmbModule), txtDoc.getText().trim(),0);
        }
        
    }//GEN-LAST:event_cmdOpenDocActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbModule;
    private javax.swing.JButton cmdOpenDoc;
    private javax.swing.JButton cmdOpenDoc1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDoc;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombos() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        String strCondition="";
        
        //--- Module Combo ------//
        cmbModuleModel=new EITLComboModel();
        cmbModule.removeAllItems();
        cmbModule.setModel(cmbModuleModel);
        
        strCondition=" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ORDER BY MODULE_ID";
        
        List=clsModules.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsModules ObjModules=(clsModules) List.get(Integer.toString(i));
            
            int ModuleID=(int)ObjModules.getAttribute("MODULE_ID").getVal();
            int MenuID=clsMenu.getMenuIDFromModule(EITLERPGLOBAL.gCompanyID, ModuleID);
            
            
            ComboData aData=new ComboData();
            aData.Text=(String) ObjModules.getAttribute("MODULE_DESC").getObj();
            aData.Code=(int) ObjModules.getAttribute("MODULE_ID").getVal();
            cmbModuleModel.addElement(aData);
            
        }
        //===============================//
        
        
        
    }
    
}
