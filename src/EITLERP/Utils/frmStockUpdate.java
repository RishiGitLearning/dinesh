/*
 * frmStockUpdate.java
 *
 * Created on February 3, 2006, 5:14 PM
 */

package EITLERP.Utils;

/**
 *
 * @author  root
 */
import java.io.*;
import java.sql.*;
import EITLERP.*;
import EITLERP.Stores.*;
import java.util.*;
import javax.swing.*;
import java.awt.*;


public class frmStockUpdate extends javax.swing.JApplet {
    
    /** Initializes the applet frmStockUpdate */
    public void init() {
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        cmdStart = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setText("STOCK UPDATE PROCESS");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(8, 9, 204, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 2, 398, 32);

        jLabel2.setText("Updates the stock from last closing.");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(15, 51, 305, 18);

        lblStatus.setText("...");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(13, 85, 373, 17);

        cmdStart.setText("Start Updating");
        cmdStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStartActionPerformed(evt);
            }
        });

        getContentPane().add(cmdStart);
        cmdStart.setBounds(23, 127, 165, 25);

        cmdExit.setText("Exit");
        getContentPane().add(cmdExit);
        cmdExit.setBounds(205, 127, 165, 25);

    }//GEN-END:initComponents

    private void cmdStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStartActionPerformed
        // TODO add your handling code here:
        startUpdate();
    }//GEN-LAST:event_cmdStartActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables
    
    private void startUpdate() {
        
        new Thread() {
            
            public void run() {
                try {
                    Connection tmpConn=data.getConn();
                    ResultSet rsItem=null,rsItemStock=null,rsOpening=null,rsTmp=null;
                    Statement stItem=null,stItemStock=null;
                    
                    String ItemID="";
                    String WarehouseID="";
                    String LocationID="";
                    String LotNo="";
                    String BOENo="";
                    
                    int EntryNo=1;
                    String EntryDate="2005-04-01";
                    
                    double OpeningQty=0;
                    
                    data.Execute("DELETE FROM D_INV_ITEM_LOT_MASTER");
                    
                    stItemStock=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsItemStock=stItemStock.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER LIMIT 1");
                                        
                    rsItem=data.getResult("SELECT ITEM_ID,WAREHOUSE_ID,LOCATION_ID FROM D_INV_ITEM_MASTER WHERE ITEM_ID NOT LIKE 'RM%' AND APPROVED=1 AND CANCELLED=0");
                    rsItem.first();
                    
                    if(rsItem.getRow()>0) {
                        while(!rsItem.isAfterLast()) {
                            
                            lblStatus.setText(ItemID);
                            lblStatus.repaint();
                            
                            ItemID=rsItem.getString("ITEM_ID");
                            WarehouseID=rsItem.getString("WAREHOUSE_ID");
                            LocationID=rsItem.getString("LOCATION_ID");
                            
                            //get the Opening Stock
                            rsOpening=data.getResult("SELECT SUM(OPENING_QTY) AS QTY FROM D_COM_OPENING_STOCK_DETAIL WHERE ENTRY_NO="+EntryNo+" AND ITEM_ID='"+ItemID+"'");
                            System.out.println("SELECT SUM(OPENING_QTY) AS QTY FROM D_COM_OPENING_STOCK_DETAIL WHERE ENTRY_NO="+EntryNo+" AND ITEM_ID='"+ItemID+"'");
                            rsOpening.first();
                            
                            if(rsOpening.getRow()>0) {
                                OpeningQty=rsOpening.getDouble("QTY");
                            }
                            
                            //==By default do the entry =====//
                            rsItemStock.moveToInsertRow();
                            rsItemStock.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                            rsItemStock.updateString("ITEM_ID",ItemID);
                            rsItemStock.updateString("WAREHOUSE_ID",WarehouseID);
                            rsItemStock.updateString("LOCATION_ID",LocationID);
                            rsItemStock.updateString("LOT_NO","X");
                            rsItemStock.updateString("BOE_NO","X");
                            rsItemStock.updateString("BOE_SR_NO","");
                            rsItemStock.updateDouble("OPENING_QTY", OpeningQty);
                            rsItemStock.updateDouble("OPENING_RATE",0);
                            rsItemStock.updateDouble("TOTAL_RECEIPT_QTY",0);
                            rsItemStock.updateDouble("TOTAL_ISSUED_QTY",0);
                            rsItemStock.updateDouble("ZERO_OPENING_QTY",0);
                            rsItemStock.updateDouble("ZERO_RECEIPT_QTY",0);
                            rsItemStock.updateDouble("ZERO_ISSUED_QTY",0);
                            rsItemStock.updateDouble("ZERO_VAL_QTY",0);
                            rsItemStock.updateDouble("REJECTED_QTY",0);
                            rsItemStock.updateDouble("ON_HAND_QTY",OpeningQty);
                            rsItemStock.updateDouble("AVAILABLE_QTY",OpeningQty);
                            rsItemStock.updateDouble("ALLOCATED_QTY",0);
                            rsItemStock.updateInt("CREATED_BY",0);
                            rsItemStock.updateString("CREATED_DATE","0000-00-00");
                            rsItemStock.updateInt("MODIFIED_BY",0);
                            rsItemStock.updateString("MODIFIED_DATE","0000-00-00");
                            rsItemStock.updateBoolean("CHANGED", true);
                            rsItemStock.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsItemStock.insertRow();
                            //====================================//
                            
                            
                            //========Scan through Receipts for this item ===========//
                            rsOpening=data.getResult("SELECT * FROM D_INV_GRN_HEADER A,D_INV_GRN_DETAIL B WHERE A.GRN_NO=B.GRN_NO AND A.GRN_TYPE=B.GRN_TYPE AND A.APPROVED=1 AND A.CANCELLED=0 AND B.ITEM_ID='"+ItemID+"' AND A.GRN_DATE>='"+EntryDate+"'");
                            rsOpening.first();
                            
                            if(rsOpening.getRow()>0) {
                                while(!rsOpening.isAfterLast()) {
                                    String sBOENo=rsOpening.getString("BOE_NO");
                                    String sBOESrNo=rsOpening.getString("BOE_SR_NO");
                                    String sBOEDate="";
                                    
                                    OpeningQty=rsOpening.getDouble("QTY");
                                    
                                    if(sBOENo.trim().equals("")) {
                                        sBOENo="X";
                                    }
                                    
                                    //Find this entry in stock table
                                    rsTmp=data.getResult("SELECT * FROM D_INV_ITEM_LOT_MASTER WHERE ITEM_ID='"+ItemID+"' AND WAREHOUSE_ID='"+WarehouseID+"' AND LOCATION_ID='"+LocationID+"' AND BOE_NO='"+sBOENo+"'");
                                    rsTmp.first();
                                    if(rsTmp.getRow()<=0) {
                                        //==By default do the entry =====//
                                        rsItemStock.moveToInsertRow();
                                        rsItemStock.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                                        rsItemStock.updateString("ITEM_ID",ItemID);
                                        rsItemStock.updateString("WAREHOUSE_ID",WarehouseID);
                                        rsItemStock.updateString("LOCATION_ID",LocationID);
                                        rsItemStock.updateString("LOT_NO","X");
                                        rsItemStock.updateString("BOE_NO",sBOENo);
                                        rsItemStock.updateString("BOE_SR_NO",sBOESrNo);
                                        rsItemStock.updateDouble("OPENING_QTY", OpeningQty);
                                        rsItemStock.updateDouble("OPENING_RATE",0);
                                        rsItemStock.updateDouble("TOTAL_RECEIPT_QTY",0);
                                        rsItemStock.updateDouble("TOTAL_ISSUED_QTY",0);
                                        rsItemStock.updateDouble("ZERO_OPENING_QTY",0);
                                        rsItemStock.updateDouble("ZERO_RECEIPT_QTY",0);
                                        rsItemStock.updateDouble("ZERO_ISSUED_QTY",0);
                                        rsItemStock.updateDouble("ZERO_VAL_QTY",0);
                                        rsItemStock.updateDouble("REJECTED_QTY",0);
                                        rsItemStock.updateDouble("ON_HAND_QTY",OpeningQty);
                                        rsItemStock.updateDouble("AVAILABLE_QTY",OpeningQty);
                                        rsItemStock.updateDouble("ALLOCATED_QTY",0);
                                        rsItemStock.updateInt("CREATED_BY",0);
                                        rsItemStock.updateString("CREATED_DATE","0000-00-00");
                                        rsItemStock.updateInt("MODIFIED_BY",0);
                                        rsItemStock.updateString("MODIFIED_DATE","0000-00-00");
                                        rsItemStock.updateBoolean("CHANGED", true);
                                        rsItemStock.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                        rsItemStock.insertRow();
                                        //====================================//
                                        
                                        
                                    }
                                    else {
                                        
                                        //===Increase the stock =====//
                                        String strSQL="UPDATE D_INV_ITEM_LOT_MASTER SET ON_HAND_QTY=ON_HAND_QTY+"+OpeningQty+",AVAILABLE_QTY=AVAILABLE_QTY+"+OpeningQty+",TOTAL_RECEIPT_QTY=TOTAL_RECEIPT_QTY+"+OpeningQty+" WHERE ITEM_ID='"+ItemID+"' AND WAREHOUSE_ID='"+WarehouseID+"' AND LOCATION_ID='"+LocationID+"'";
                                        data.Execute(strSQL);
                                        
                                    }
                                    
                                    rsOpening.next();
                                }
                            }
                            //=================Receipt completed ==============//
                            
                            
                            //========Scan through Issues for this item ===========//
                            rsOpening=data.getResult("SELECT * FROM D_INV_ISSUE_HEADER A,D_INV_ISSUE_DETAIL B WHERE A.ISSUE_NO=B.ISSUE_NO AND A.APPROVED=1 AND A.CANCELED=0 AND B.ITEM_CODE='"+ItemID+"' AND A.ISSUE_DATE>='"+EntryDate+"'");
                            rsOpening.first();
                            
                            if(rsOpening.getRow()>0) {
                                while(!rsOpening.isAfterLast()) {
                                    String sBOENo=rsOpening.getString("BOE_NO");
                                    String sBOESrNo=rsOpening.getString("BOE_SR_NO");
                                    String sBOEDate="";
                                    
                                    OpeningQty=rsOpening.getDouble("QTY");
                                    
                                    if(sBOENo.trim().equals("")) {
                                        sBOENo="X";
                                    }
                                    
                                    //===Decrease the stock =====//
                                    String strSQL="UPDATE D_INV_ITEM_LOT_MASTER SET ON_HAND_QTY=ON_HAND_QTY-"+OpeningQty+",AVAILABLE_QTY=AVAILABLE_QTY-"+OpeningQty+",TOTAL_ISSUED_QTY=TOTAL_ISSUED_QTY+"+OpeningQty+" WHERE ITEM_ID='"+ItemID+"' AND WAREHOUSE_ID='"+WarehouseID+"' AND LOCATION_ID='"+LocationID+"'";
                                    data.Execute(strSQL);
                                    
                                    
                                    rsOpening.next();
                                }
                            }
                            //=================Receipt completed ==============//
                            
                            
                            //====== Sum up the Stock and Update Item Master ==========//
                            rsTmp=data.getResult("SELECT SUM(ON_HAND_QTY) AS ON_HAND_QTY,SUM(AVAILABLE_QTY) AS AVAILABLE_QTY FROM D_INV_ITEM_LOT_MASTER WHERE ITEM_ID='"+ItemID+"'");
                            System.out.println("SELECT SUM(ON_HAND_QTY) AS ON_HAND_QTY,SUM(AVAILABLE_QTY) AS AVAILABLE_QTY FROM D_INV_ITEM_LOT_MASTER WHERE ITEM_ID='"+ItemID+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                double OnHandQty=rsTmp.getDouble("ON_HAND_QTY");
                                double AvailableQty=rsTmp.getDouble("AVAILABLE_QTY");
                                
                                data.Execute("UPDATE D_INV_ITEM_MASTER SET ON_HAND_QTY="+OnHandQty+",AVAILABLE_QTY="+AvailableQty+" WHERE ITEM_ID='"+ItemID+"'");
                            }
                            
                            
                            rsItem.next();
                        }
                        
                        
                    }
                    
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
                
                lblStatus.setText("Done");
                
            };
        }.start();
    }
    
    
}
