/*
 * frmTest.java
 *
 * Created on July 19, 2004, 10:41 AM
 */

package EITLERP.Utils;

/**
 *
 * @author  root
 *
 */

import EITLERP.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import java.net.*;
import java.sql.*;
import javax.crypto.*;
import java.util.*;
import javax.swing.text.*;
import java.text.*;
import net.sf.jasperreports.engine.*;
import org.nfunk.jep.*;
import org.nfunk.jep.type.*;

public class frmTest extends javax.swing.JApplet {
    
    private static Vector swingSets = new Vector();
    
    private boolean Forward=false;
    
    private boolean ShowWarning=false;
    
    
    /** Initializes the applet frmTest */
    public void init() {
        initComponents();
        
        cmdCreate.requestFocus();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        cmdCreate = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtTest = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        txtTest1 = new javax.swing.JTextField();
        txtTest2 = new javax.swing.JTextField();
        txtTest3 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtText2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        txtNumber = new javax.swing.JFormattedTextField();
        jButton8 = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        pane = new javax.swing.JEditorPane();
        jButton9 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenuItem2.setText("Item");
        jPopupMenu1.add(jMenuItem2);

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        cmdCreate.setText("Create File");
        cmdCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCreateActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCreate);
        cmdCreate.setBounds(23, 36, 140, 25);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(28, 412, 88, 25);

        jButton2.setText("Run Command");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(205, 347, 165, 25);

        txtTest.setName("Text1");
        txtTest.setNextFocusableComponent(txtTest1);
        txtTest.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTestFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTestFocusLost(evt);
            }
        });
        txtTest.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTestKeyTyped(evt);
            }
        });
        txtTest.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTestCaretUpdate(evt);
            }
        });

        getContentPane().add(txtTest);
        txtTest.setBounds(22, 90, 322, 19);

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(282, 302, 88, 25);

        jButton4.setText("See this");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(225, 35, 83, 25);

        jPanel1.setLayout(null);

        jButton5.setText("Show Report");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton5);
        jButton5.setBounds(9, 10, 88, 25);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(157, 402, 236, 59);

        txtTest1.setName("Text2");
        txtTest1.setNextFocusableComponent(txtTest2);
        txtTest1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTest1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTest1FocusLost(evt);
            }
        });

        getContentPane().add(txtTest1);
        txtTest1.setBounds(24, 126, 322, 19);

        txtTest2.setName("Text3");
        txtTest2.setNextFocusableComponent(txtTest3);
        txtTest2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTest2FocusLost(evt);
            }
        });

        getContentPane().add(txtTest2);
        txtTest2.setBounds(27, 144, 322, 19);

        txtTest3.setName("Text4");
        txtTest3.setNextFocusableComponent(txtTest);
        txtTest3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTest3FocusLost(evt);
            }
        });

        getContentPane().add(txtTest3);
        txtTest3.setBounds(28, 164, 312, 19);

        jButton6.setText("Insert Long Text");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton6);
        jButton6.setBounds(18, 326, 212, 25);

        jScrollPane1.setViewportView(txtText);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 194, 326, 67);

        jScrollPane2.setViewportView(txtText2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(385, 194, 319, 65);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(Table);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(400, 292, 268, 115);

        jButton7.setText("jButton7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton7);
        jButton7.setBounds(441, 452, 88, 25);

        getContentPane().add(txtNumber);
        txtNumber.setBounds(37, 472, 184, 19);

        jButton8.setText("Read File");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton8);
        jButton8.setBounds(363, 53, 129, 25);

        lblStatus.setText("jLabel1");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(138, 9, 230, 15);

        getContentPane().add(pane);
        pane.setBounds(355, 93, 190, 100);

        jButton9.setText("TEST T");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton9);
        jButton9.setBounds(286, 484, 76, 25);

        jMenu1.setText("Menu");
        jMenuItem1.setText("Item");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

    }//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        try
        {
            
           Connection objConn=data.getConn(EITLERPGLOBAL.DatabaseURL);
           Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
           ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM TMP_GENERAL");
           
           objConn.setAutoCommit(false);
           rsTmp.moveToInsertRow();
           rsTmp.updateInt("SR_NO",35);
           rsTmp.updateString("COLUMN_1","test");
           rsTmp.insertRow();
           
           objConn.rollback();
           
            
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if(evt.getButton()==evt.BUTTON3)
        {
            
            jPopupMenu1.show(this, evt.getPoint().x ,evt.getPoint().y);
           
           
        }
    }//GEN-LAST:event_formMouseClicked
    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

        try
        {
        pane.setPage("file:///root/sample.sxc");
        
        }
        catch(Exception e)
        {
         e.printStackTrace();    
        }
    }//GEN-LAST:event_jButton8ActionPerformed
    
    private void txtTestKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTestKeyTyped
        // TODO add your handling code here:
        
        
        if(txtTest.getText().length()>=5) {
            txtTest.setForeground(Color.RED);
            txtTest.setText(txtTest.getText().substring(0,5));
        }
        else {
            txtTest.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtTestKeyTyped
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try {
            
            try {
                
                //Object a=Class.forName("org.eclipse.jdt.internal.compiler.env.INameEnvironment").newInstance();
                Object a=Class.forName("net.sf.jasperreports.engine.design.JRJdtCompiler").newInstance();
            }
            catch(Exception e) {
                
            }
            
            Report.ViewReport("/EITLERPReports/TestReport.jasper", new HashMap());
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:

//        SimpleReadLinux.getWeight("COM1");
    }//GEN-LAST:event_jButton7ActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            Connection tmpConn;
            Statement stTmp;
            ResultSet rsTmp;
            
            tmpConn=data.getConn();
            stTmp=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsTmp=stTmp.executeQuery("SELECT COMPANY_ID,PO_NO,PO_TYPE,CONTRACT_DETAILS FROM D_PUR_PO_HEADER LIMIT 1");
            rsTmp.first();
            
            String theLongText="CONTRACT_DETAILS THIS IS INSERTED FROM JAVA, ASKDFKJ SDKFJSKJF SDFKJSKLFJSKD FSLKFJS KFSJDKLFJ SDKFJSKLFJSKLDFJ SDFLKSJFKSJDFLKSJDKF SDLFKJSKDFJSKLDJF SDFJSDKFJSLD FSKJFKSDJFSKDJFKLSDJFKSDJFKLSJFSKLJDFKSJDFKLSJDFKJSLDFJSDKF SLFSJLFKJSDKFJSKJFDKSJFKSDJFKSDJFKS FSLJFS FJSDKFJSDF SKFJSKLFJSKFJSKLFJKLSDJFSDKFS FSJDFLKSJDFKSDJKFLSJD FSKDFJSKLDFJKLSDJFKSJDFKLSJDKF SKFSJDKFWOIERUEIURIU UERIOWEURIOWEUIRUWE KLJFKSDFKLJSDKF WOUEIRUEWIOUREOWIRUEIW RWOIRUWEIORUIOWEURIER EORIUEIORUERUIEOREURIWEURWIERUWIERUWERWERWERIIUI  WEIORUWIR WEIROUWEIRUWEIRWEOIRUWEIR WERIOUWIORUWEIORUWIOE RWOURWIOEURWOIEURIWOEURWIOEURI WEIORUWIOEUR WEIRUWEIOR WOEURIOWEUR OWIURIOE.MXV,XM XCVMX,VX,.CMV,XCMV SJDKFJLSKDF SLDFKJWOIEUROIER EOUREIOUROIUWIOE A;KASJDFJ QIOWERIOUWIERUWE IOWUERIOUWEIRU ERIOUEIORUPWEIRU EOIRUEOPRUEIORUEIOUREIORIU ... THIS IS END";
            
            int length=theLongText.length();
            
            rsTmp.updateString("CONTRACT_DETAILS",theLongText);
            rsTmp.updateRow();
            
            
        }
        catch(Exception e) {
            
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void txtTest3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTest3FocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtTest3FocusLost
    
    private void txtTest2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTest2FocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtTest2FocusLost
    
    private void txtTestFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTestFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtTestFocusGained
    
    private void txtTest1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTest1FocusLost
        // TODO add your handling code here:
        if(txtTest1.getText().equals("")) {
            if(!GUIManager.DoNotShowWarning) {
                GUIManager.DoNotShowWarning=true;
                JOptionPane.showMessageDialog(null,"It's empty");
                GUIManager.ForcefullyFocus(this,txtTest1);
                GUIManager.DoNotShowWarning=false;
                GUIManager.MakeFocusable(this,true);
            }
        }
        
    }//GEN-LAST:event_txtTest1FocusLost
    
    private void txtTest1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTest1FocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtTest1FocusGained
    
    private void txtTestFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTestFocusLost
        // TODO add your handling code here:
        
        if(txtTest.getText().equals("")) {
            if(!GUIManager.DoNotShowWarning) {
                GUIManager.DoNotShowWarning=true;
                JOptionPane.showMessageDialog(null,"It's empty");
                GUIManager.ForcefullyFocus(this,txtTest);
                GUIManager.DoNotShowWarning=false;
                GUIManager.MakeFocusable(this,true);
            }
        }
        
    }//GEN-LAST:event_txtTestFocusLost
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

    //Report.ViewReport("/EITLERPReports/rptBlank.jasper",new HashMap());        
        
       //String NewDate=EITLERPGLOBAL.addDaysToDate("2007-03-10", 5, "yyyy-MM-dd");
        
        //String sdate="2007-10-02";
        
        //sdate=sdate.substring(8,10)+"/"+sdate.substring(5,7)+"/"+sdate.substring(0,4);
       
       //JOptionPane.showMessageDialog(null,sdate);
        
        /*String strExpr="TEST$F{VOUCHER_NO} AND";
        
        int pos=strExpr.indexOf("$F{");
        String Expr2=strExpr.substring(pos);
        int nextpos=strExpr.indexOf("}",pos);
        String Expr3=strExpr.substring(pos,nextpos+1);
        
        System.out.println(Expr3);
        
        JEP myParser=new JEP();        
        myParser.parseExpression("ABC");
	Object result=myParser.getValueAsObject();
        if(result!=null) {        
        }*/
        
        
        
        //clsDocument.UpdateDocument(32, "/root/Desktop/EITLFINANCEMODULEPO.doc");
        String MainCodes[]="125019".split(",");
        
        System.out.println(MainCodes[0]);
        
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void txtTestCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTestCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTestCaretUpdate
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        //txtText.setText("Test \nTest");
        
        txtText2.setText(txtText.getText());
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        try {
            Object c=Class.forName("EScriptlets.scTest",true, Thread.currentThread().getContextClassLoader());
            int b=0;
            JOptionPane.showMessageDialog(null,"Class created");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //int a=EITLERPGLOBAL.GetQueryResult("SELECT MAX(REVISION_NO) FROM D_INV_GATEPASS_REQ_HEADER_H");
        
        try {
            Connection tmpConn;
            Statement stTmp;
            ResultSet rsTmp;
            
            tmpConn=data.getConn("jdbc:mysql://200.0.0.227:3306/Clone");
            
            
            stTmp=tmpConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            
            rsTmp=stTmp.executeQuery("SELECT COMPANY_ID,PAYMENT_TYPE,SR_NO FROM D_COM_APPROVAL_PAYMENT_CODES");
            rsTmp.moveToInsertRow();
            rsTmp.updateInt("COMPANY_ID",1);
            rsTmp.updateString("PAYMENT_TYPE","A");
            rsTmp.updateInt("SR_NO",10);
            rsTmp.insertRow();
            
            
            
        }
        catch(Exception e) {
            int a=0;
            JOptionPane.showMessageDialog(null,"Error "+e.getMessage());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCreateActionPerformed
        // TODO add your handling code here:
        
        
        
        try {
            String dbURL="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
            int CompanyID=2;
            String DocNo="000935A";
            
            Connection tmpConn;
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            tmpConn=DriverManager.getConnection(dbURL,"root","SdmlErp@227");
            
            
            File reportFile = new File("/EITLERPReports/rpt_INV_NRGP.jasper");
            
            Map parameters = new HashMap();
            
            parameters.put("NRGP_NO", DocNo);
            parameters.put("COMP_ID", new Integer(CompanyID));
            
            
            byte[] bytes =
            JasperRunManager.runReportToPdf(
            reportFile.getPath(),
            parameters,
            tmpConn
            );
            
        }
        catch(Exception e) {
            
        }
        
    }//GEN-LAST:event_cmdCreateActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton cmdCreate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JEditorPane pane;
    private javax.swing.JFormattedTextField txtNumber;
    private javax.swing.JTextField txtTest;
    private javax.swing.JTextField txtTest1;
    private javax.swing.JTextField txtTest2;
    private javax.swing.JTextField txtTest3;
    private javax.swing.JTextArea txtText;
    private javax.swing.JTextArea txtText2;
    // End of variables declaration//GEN-END:variables
    
    
    public void updateLookAndFeel() {
        try {
            
            String currentLookAndFeel="com.sun.java.swing.plaf.gtk.GTKLookAndFeel";
            UIManager.setLookAndFeel(currentLookAndFeel);
            
            UpdateComponents(this);
            
            //SwingUtilities.updateComponentTreeUI(cmdCreate);
            
            
            //            for (Iterator itr = swingSets.iterator(); itr.hasNext(); ) {
            //                SwingSet2 ss = (SwingSet2)itr.next();
            //	        SwingUtilities.updateComponentTreeUI(ss);
            //            }
            //            // update LAF for the toplevel frame, too
            //            if (!isApplet()) {
            //                SwingUtilities.updateComponentTreeUI(getFrame());
            //            } else {
            //                SwingUtilities.updateComponentTreeUI(getApplet());
            //            }
            // 	    SwingUtilities.updateComponentTreeUI(popupMenu);
            
        } catch (Exception ex) {
        }
        
    }
    
    
    protected boolean isAvailableLookAndFeel(String laf) {
        try {
            Class lnfClass = Class.forName(laf);
            LookAndFeel newLAF = (LookAndFeel)(lnfClass.newInstance());
            return newLAF.isSupportedLookAndFeel();
        } catch(Exception e) { // If ANYTHING weird happens, return false
            return false;
        }
    }
    
    public void UpdateComponents(Object Container) {
        
        try {
            int MainCount=0;
            if(Container instanceof JPanel) {
                MainCount=((JPanel)Container).getComponentCount();
            }
            
            if(Container instanceof JApplet) {
                MainCount=((JApplet)Container).getComponentCount();
            }
            
            
            if(Container instanceof JScrollPane) {
                MainCount=((JScrollPane)Container).getComponentCount();
            }
            
            if(Container instanceof JFrame) {
                MainCount=((JFrame)Container).getComponentCount();
            }
            
            
            for(int m=0;m<MainCount;m++) {
                Component theComp=null;
                if(Container instanceof JPanel) {
                    theComp=((JPanel)Container).getComponent(m);
                    
                }
                
                if(Container instanceof JApplet) {
                    theComp=((JApplet)Container).getComponent(m);
                }
                
                
                if(Container instanceof JScrollPane) {
                    theComp=((JScrollPane)Container).getComponent(m);
                }
                
                if(Container instanceof JFrame) {
                    theComp=((JFrame)Container).getComponent(m);
                }
                
                
                if(theComp instanceof JPanel||theComp instanceof JApplet||theComp instanceof JScrollPane||theComp instanceof JFrame) {
                    UpdateComponents(Container);
                }
                
                else {
                    SwingUtilities.updateComponentTreeUI(theComp);
                }
                
            }
        }
        catch(Exception e) {
            
        }
        
    }
    
    
    private void SetNumberFormats() {
        
        DecimalFormat decimalFormat=new DecimalFormat("0.00");
        NumberFormatter ObjFormater=new NumberFormatter(decimalFormat);
        ObjFormater.setAllowsInvalid(false);
        txtNumber.setFormatterFactory(new DefaultFormatterFactory(ObjFormater));
        
        
        
    }
    
    
    private void ForwardMIR() {
        new Thread() {
            
            public void run() {
                try {
                    Connection tmpConn=data.getCreatedConn();
                    Statement stTmp;
                    ResultSet rsTmp;
                    
                    String GRNNo="";
                    String MIRNo="";
                    int MIRSrNo=0;
                    String strSQL="";
                    
                    String theFile="MIRH.txt";
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(theFile)));
                    
                    boolean Done=false;
                    while(!Done) {
                        String lineread=aFile.readLine();
                        
                        if(lineread==null) {
                            Done=true;
                        }
                        
                        else {
                            MIRNo=lineread;
                            lblStatus.setText(MIRNo);
                            lblStatus.repaint();
                            stTmp=tmpConn.createStatement();
                            rsTmp=stTmp.executeQuery("SELECT USER_ID FROM D_COM_DOC_DATA WHERE MODULE_ID=5 AND DOC_NO='"+MIRNo+"' AND STATUS='W'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                int UserID=rsTmp.getInt("USER_ID");
                                int SrNo=0;
                                
                                Statement stTmp2=tmpConn.createStatement();
                                ResultSet rsTmp2=stTmp2.executeQuery("SELECT SR_NO FROM D_COM_DOC_DATA WHERE MODULE_ID=5 AND DOC_NO='"+MIRNo+"' AND USER_ID=15 ORDER BY SR_NO DESC");
                                rsTmp2.first();
                                if(rsTmp2.getRow()>0) {
                                    SrNo=rsTmp2.getInt("SR_NO");
                                }
                                
                                
                                stTmp=tmpConn.createStatement();
                                strSQL="UPDATE D_COM_DOC_DATA SET STATUS='A' WHERE MODULE_ID=5 AND DOC_NO='"+MIRNo+"'";
                                stTmp.executeUpdate(strSQL);
                                
                                stTmp=tmpConn.createStatement();
                                strSQL="UPDATE D_COM_DOC_DATA SET STATUS='W' WHERE MODULE_ID=5 AND DOC_NO='"+MIRNo+"' AND SR_NO="+SrNo;
                                stTmp.executeUpdate(strSQL);
                                
                            }
                            
                            
                        }
                    }
                    aFile.close();
                    
                    JOptionPane.showMessageDialog(null,"Done Processing");
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
                
                
            };
        }.start();
        
    }
    
    
    
    private void InsertMIR() {
        new Thread() {
            
            public void run() {
                try {
                    ResultSet rsTmp,rsMIR,rsDept,rsUser;
                    
                    String GRNNo="";
                    String MIRNo="";
                    int MIRSrNo=0;
                    String strSQL="";
                    
                    String theFile="MIRH.txt";
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File("UserwiseMIR.txt")));
                    
                    rsDept=data.getResult("SELECT DISTINCT(DEPT_ID) DEPT_ID FROM D_INV_MIR_DETAIL WHERE MIR_NO IN (SELECT MIR_NO FROM TMP_MIR)");
                    rsDept.first();
                    
                    if(rsDept.getRow()>0) {
                        
                        while(!rsDept.isAfterLast()) {
                            int DeptID=rsDept.getInt("DEPT_ID");
                            int UserID=0;
                            String UserName="";
                            String email="";
                            String DeptName=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,DeptID);
                            
                            rsUser=data.getResult("SELECT USER_ID FROM D_COM_DOC_APPROVERS WHERE MODULE_ID=5 AND DEPT_ID="+DeptID+" AND USER_ID<>15");
                            rsUser.first();
                            
                            if(rsUser.getRow()>0) {
                                UserID=rsUser.getInt("USER_ID");
                            }
                            
                            UserName=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,UserID);
                            email=clsUser.getInternalEMail(EITLERPGLOBAL.gCompanyID,UserID);
                            
                            aFile.write(" DEPT : "+DeptName+"  USER : "+UserName);
                            aFile.newLine();
                            aFile.write("===============================================");
                            aFile.newLine();
                            
                            //Now get the MIR Nos.
                            rsMIR=data.getResult("SELECT DISTINCT(MIR_NO) MIR_NO FROM D_INV_MIR_DETAIL WHERE DEPT_ID="+DeptID+" AND MIR_NO IN (SELECT MIR_NO FROM TMP_MIR)");
                            rsMIR.first();
                            
                            if(rsMIR.getRow()>0) {
                                while(!rsMIR.isAfterLast()) {
                                    aFile.write(rsMIR.getString("MIR_NO"));
                                    aFile.newLine();
                                    
                                    rsMIR.next();
                                }
                            }
                            
                            aFile.newLine();
                            aFile.newLine();
                            
                            rsDept.next();
                        }
                        
                        
                    }
                    
                    
                    aFile.close();
                    
                    JOptionPane.showMessageDialog(null,"Done Processing");
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
                
                
            };
        }.start();
        
    }
    

private void FindDiff()
{
    
  try
  {
   String BrdURL="";
   String AnkURL="";
   String strSQL="";
   
   
   
   ResultSet rsSupp=data.getResult("SELECT DISTINCT(SUPP_ID) FROM D_INV_GRN_HEADER A WHERE A.APPROVED=1 AND A.CANCELLED=0 AND A.GRN_DATE>='2007-04-01' AND A.GRN_DATE<='2007-09-30'",BrdURL);
   rsSupp.first();
   
   
      
      
      
  }
  catch(Exception e)
  {
      
  }
  
}
    
}
