/*
 * frmItemCriteria.java
 *
 * Created on May 28, 2005, 3:04 PM
 */

package EITLERP;

/**
 *
 * @author  root
 */
import java.util.*;
import javax.swing.*;
import java.awt.*;


public class frmItemCriteria extends javax.swing.JApplet {
    
    
    private EITLComboModel cmbDeptModel=new EITLComboModel();
    private EITLComboModel cmbTypeModel=new EITLComboModel();
    
    private EITLTableModel DataModel=new EITLTableModel();
    
    private clsItemCriteria ObjItemCriteria=new clsItemCriteria();
    
    
    /** Initializes the applet frmItemCriteria */
    public void init() {
        initComponents();
        GenerateCombo();
        GenerateGrid();
        setSize(675, 560);
    }
    
    
    
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbDept = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtEntryNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        lblStartsWith = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        lblFrom = new javax.swing.JLabel();
        txtItemCodeFrom = new javax.swing.JTextField();
        lblTo = new javax.swing.JLabel();
        txtItemCodeTo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        OpgED = new javax.swing.JRadioButton();
        OpgMD = new javax.swing.JRadioButton();
        OpgAudit = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdAdd = new javax.swing.JButton();
        cmdRemove = new javax.swing.JButton();
        
        
        getContentPane().setLayout(null);
        
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        
        jPanel1.setLayout(null);
        
        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ITEM ED/MD APPROVAL CRITERIA DEFINITION");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(7, 10, 322, 15);
        
        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 2, 660, 35);
        
        jPanel2.setLayout(null);
        
        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jLabel2.setText("Department");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(12, 53, 86, 15);
        
        jPanel2.add(cmbDept);
        cmbDept.setBounds(110, 50, 251, 24);
        
        jLabel3.setText("Entry No.");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(14, 12, 64, 15);
        
        txtEntryNo.setEnabled(false);
        jPanel2.add(txtEntryNo);
        txtEntryNo.setBounds(110, 12, 118, 21);
        
        jLabel4.setText("Criteria Type");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(18, 93, 91, 15);
        
        cmbType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTypeItemStateChanged(evt);
            }
        });
        
        jPanel2.add(cmbType);
        cmbType.setBounds(110, 88, 251, 24);
        
        lblStartsWith.setText("Item code starts with");
        jPanel2.add(lblStartsWith);
        lblStartsWith.setBounds(17, 133, 142, 15);
        
        jPanel2.add(txtItemCode);
        txtItemCode.setBounds(156, 130, 118, 21);
        
        lblFrom.setText("Item Code From");
        jPanel2.add(lblFrom);
        lblFrom.setBounds(43, 132, 109, 15);
        
        jPanel2.add(txtItemCodeFrom);
        txtItemCodeFrom.setBounds(156, 131, 118, 21);
        
        lblTo.setText("To");
        jPanel2.add(lblTo);
        lblTo.setBounds(283, 135, 24, 15);
        
        jPanel2.add(txtItemCodeTo);
        txtItemCodeTo.setBounds(312, 131, 118, 21);
        
        jLabel5.setText("Approval Authority");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(25, 158, 125, 15);
        
        OpgED.setText("ED");
        buttonGroup1.add(OpgED);
        jPanel2.add(OpgED);
        OpgED.setBounds(157, 158, 51, 23);
        
        OpgMD.setText("MD");
        buttonGroup1.add(OpgMD);
        jPanel2.add(OpgMD);
        OpgMD.setBounds(214, 158, 54, 23);
        
        OpgAudit.setSelected(true);
        OpgAudit.setText("Audit");
        buttonGroup1.add(OpgAudit);
        jPanel2.add(OpgAudit);
        OpgAudit.setBounds(279, 158, 59, 23);
        
        getContentPane().add(jPanel2);
        jPanel2.setBounds(7, 41, 644, 190);
        
        Table.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
        ));
        jScrollPane1.setViewportView(Table);
        
        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(9, 269, 643, 261);
        
        cmdAdd.setText("Add Condition");
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdAdd);
        cmdAdd.setBounds(351, 238, 138, 25);
        
        cmdRemove.setText("Remove Condition");
        cmdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdRemove);
        cmdRemove.setBounds(497, 238, 151, 25);
        
    }//GEN-END:initComponents
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveActionPerformed
        // TODO add your handling code here:
        if(Table.getSelectedRow()>=0 && Table.getRowCount()>0) {
            if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete selected condition ?","Confirmation",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
                int EntryNo=Integer.parseInt((String)Table.getValueAt(Table.getSelectedRow(), 0));
                ObjItemCriteria.Remove(EITLERPGLOBAL.gCompanyID, EntryNo);
                GenerateGrid();
            }
        }
    }//GEN-LAST:event_cmdRemoveActionPerformed
    
    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        // TODO add your handling code here:
        
        if(cmbDept.getSelectedIndex()<0) {
            JOptionPane.showMessageDialog(null,"Please select the department");
            return;
        }
        
        int Type=EITLERPGLOBAL.getComboCode(cmbType);
        if(Type==1||Type==2) {
            if(txtItemCode.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null,"Please enter item code");
                return;
            }
        }
        
        if(Type==3) {
            if(txtItemCodeFrom.getText().trim().equals("")&&txtItemCodeTo.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null,"Please enter either From/To Item code");
                return;
            }
        }
        
        String ApprovalAuthority="A";
        
        if(OpgED.isSelected()) {
            ApprovalAuthority="E";
        }
        
        if(OpgMD.isSelected()) {
            ApprovalAuthority="M";
        }
        
        if(OpgAudit.isSelected()) {
            ApprovalAuthority="A";
        }
        
        //Set the Data
        ObjItemCriteria.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
        ObjItemCriteria.setAttribute("ENTRY_NO",0);
        ObjItemCriteria.setAttribute("ITEM_ID",txtItemCode.getText().trim());
        ObjItemCriteria.setAttribute("DEPT_ID",EITLERPGLOBAL.getComboCode(cmbDept));
        ObjItemCriteria.setAttribute("ITEM_CRITERIA_TYPE",EITLERPGLOBAL.getComboCode(cmbType));
        ObjItemCriteria.setAttribute("FROM_ITEM_ID",txtItemCodeFrom.getText());
        ObjItemCriteria.setAttribute("TO_ITEM_ID",txtItemCodeTo.getText());
        ObjItemCriteria.setAttribute("APPROVAL_AUTHORITY",ApprovalAuthority);
        ObjItemCriteria.setAttribute("CREATED_BY",EITLERPGLOBAL.gUserID);
        ObjItemCriteria.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        ObjItemCriteria.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gUserID);
        ObjItemCriteria.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        
        if(ObjItemCriteria.Insert()) {
            GenerateGrid();
        }
        else {
            JOptionPane.showMessageDialog(null,"Error occured while saving");
        }
    }//GEN-LAST:event_cmdAddActionPerformed
    
    private void cmbTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTypeItemStateChanged
        // TODO add your handling code here:
        int Type=EITLERPGLOBAL.getComboCode(cmbType);
        
        txtItemCode.setVisible(false);
        lblStartsWith.setVisible(false);
        lblFrom.setVisible(false);
        txtItemCodeFrom.setVisible(false);
        lblTo.setVisible(false);
        txtItemCodeTo.setVisible(false);
        
        
        if(Type==1) {
            txtItemCode.setVisible(true);
            lblStartsWith.setVisible(true);
            lblStartsWith.setText("Item Code");
        }
        
        if(Type==2) {
            txtItemCode.setVisible(true);
            lblStartsWith.setVisible(true);
            lblStartsWith.setText("Item Code Starts With");
        }
        
        if(Type==3) {
            lblFrom.setVisible(true);
            txtItemCodeFrom.setVisible(true);
            lblTo.setVisible(true);
            txtItemCodeTo.setVisible(true);
        }
        
    }//GEN-LAST:event_cmbTypeItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton OpgAudit;
    private javax.swing.JRadioButton OpgED;
    private javax.swing.JRadioButton OpgMD;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbDept;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblStartsWith;
    private javax.swing.JLabel lblTo;
    private javax.swing.JTextField txtEntryNo;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemCodeFrom;
    private javax.swing.JTextField txtItemCodeTo;
    // End of variables declaration//GEN-END:variables
    
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        
        Table.removeAll();
        
        Table.setModel(DataModel);
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        DataModel.addColumn("Entry No.");
        DataModel.addColumn("Department");
        DataModel.addColumn("Criteria Type");
        DataModel.addColumn("Item Code");
        DataModel.addColumn("From Item Code");
        DataModel.addColumn("To Item Code");
        DataModel.addColumn("Approval Authority");
        
        DataModel.SetNumeric(1,true);
        
        
        DataModel.TableReadOnly(true);
        
    }
    
    
    private void GenerateGrid() {
        HashMap List=new HashMap();
        
        List=ObjItemCriteria.getList();
        
        FormatGrid();
        
        for(int i=1;i<=List.size();i++) {
            Object[] rowData=new Object[7];
            clsItemCriteria ObjItem=(clsItemCriteria)List.get(Integer.toString(i));
            
            rowData[0]=Integer.toString((int)ObjItem.getAttribute("ENTRY_NO").getVal());
            if((int)ObjItem.getAttribute("DEPT_ID").getVal()==0) {
                rowData[1]="All Departments";
            }
            else {
                rowData[1]=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,(int)ObjItem.getAttribute("DEPT_ID").getVal());
            }
            switch((int)ObjItem.getAttribute("ITEM_CRITERIA_TYPE").getVal()) {
                case 1:
                    rowData[2]="Item Code";break;
                case 2:
                    rowData[2]="Item code starts with";break;
                case 3:
                    rowData[2]="Item Code Range";break;
                case 4:
                    rowData[2]="All Items of this department";break;
            }
            rowData[3]=(String)ObjItem.getAttribute("ITEM_ID").getObj();
            rowData[4]=(String)ObjItem.getAttribute("FROM_ITEM_ID").getObj();
            rowData[5]=(String)ObjItem.getAttribute("TO_ITEM_ID").getObj();
            rowData[6]=(String)ObjItem.getAttribute("APPROVAL_AUTHORITY").getObj();
            
            DataModel.addRow(rowData);
        }
        
    }
    
    
    
    private void GenerateCombo() {
        
        try {
            HashMap DeptList=new HashMap();

            cmbDept.removeAllItems();
            cmbDeptModel=new EITLComboModel();
            cmbDept.setModel(cmbDeptModel);


            DeptList=clsDepartment.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID);

            for(int i=1;i<=DeptList.size();i++) {
                clsDepartment ObjDept=(clsDepartment)DeptList.get(Integer.toString(i));

                ComboData aData=new ComboData();
                aData.Code=(int)ObjDept.getAttribute("DEPT_ID").getVal();
                aData.Text=(String)ObjDept.getAttribute("DEPT_DESC").getObj();

                cmbDeptModel.addElement(aData);
            }
            cmbDept.setSelectedIndex(0);




            cmbType.removeAllItems();
            cmbTypeModel=new EITLComboModel();
            cmbType.setModel(cmbTypeModel);

            ComboData aData=new ComboData();
            aData.Code=1;
            aData.Text="Exact Item Code";
            cmbTypeModel.addElement(aData);


            aData=new ComboData();
            aData.Code=2;
            aData.Text="Item Code Starting with";
            cmbTypeModel.addElement(aData);


            aData=new ComboData();
            aData.Code=3;
            aData.Text="Item Code Range";
            cmbTypeModel.addElement(aData);


            aData=new ComboData();
            aData.Code=4;
            aData.Text="All Items of this Department";
            cmbTypeModel.addElement(aData);

            EITLERPGLOBAL.setComboIndex(cmbType,1);

            txtItemCode.setVisible(true);
            lblStartsWith.setVisible(true);
            lblStartsWith.setText("Item Code");
        } catch(Exception e) {
        }
        
    }
}
