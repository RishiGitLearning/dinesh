/*
 * frmLogin.java
 *
 * Created on April 6, 2004, 11:10 AM
 */
package EITLERP;

import java.sql.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.io.*;
import EITLERP.Messaging.*;
import java.text.*;
import java.net.*;
import EITLERP.*;

/**
 *
 * @author  NITIN PITHVA
 *
 */

public class frmModule_Hierarchy extends javax.swing.JApplet {
    
    /**
     * Initialize the <i>Login</i> Form
     * @see This is sample
     *
     */
    private EITLComboModel cmbDeptModel;
    private EITLComboModel cmbModuleModel;
    private EITLTableModel DataModel;
    
    
    public void init() {
        //System.setProperty("javaplugin.maxHeapSize", "400m");
        System.gc();
        setSize(500,350);
        
        GenerateCombo();
        GenerateGrid();
        
        
    }
    
    
    
    /** Creates new form frmLogin */
    public frmModule_Hierarchy() {
        System.gc();
        initComponents();
        
        //Chaning Look and Feel
        if(GUIManager.isAvailableLookAndFeel(GUIManager.Windows)) {
            GUIManager.SetLookFeel(GUIManager.Windows);
            GUIManager.UpdateComponents(this);
        }
        
        
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbDepartment = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmbModule = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableModule = new javax.swing.JTable();
        cmdAdd = new javax.swing.JButton();
        cmdRemove = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Department :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 25, 90, 15);

        cmbDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDepartmentItemStateChanged(evt);
            }
        });
        cmbDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDepartmentActionPerformed(evt);
            }
        });

        jPanel1.add(cmbDepartment);
        cmbDepartment.setBounds(110, 20, 210, 24);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Module :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 60, 90, 15);

        jPanel1.add(cmbModule);
        cmbModule.setBounds(110, 60, 210, 24);

        TableModule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TableModule);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 120, 410, 140);

        cmdAdd.setText("Add");
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        jPanel1.add(cmdAdd);
        cmdAdd.setBounds(340, 90, 85, 25);

        cmdRemove.setText("Remove");
        cmdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveActionPerformed(evt);
            }
        });

        jPanel1.add(cmdRemove);
        cmdRemove.setBounds(340, 270, 85, 25);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 20, 460, 310);

    }//GEN-END:initComponents

    private void cmdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveActionPerformed
        // TODO add your handling code here:
        if(Delete())
        {
            JOptionPane.showMessageDialog(null,"Record is Deleted");
        }
    }//GEN-LAST:event_cmdRemoveActionPerformed
    
    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        // TODO add your handling code here:
        if(!insert())
        {
            JOptionPane.showMessageDialog(null,"Duplicate Record is Not Inserted....");
        }
    }//GEN-LAST:event_cmdAddActionPerformed
    
    private void cmbDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDepartmentActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbDepartmentActionPerformed
    
    private void cmbDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDepartmentItemStateChanged
        
    }//GEN-LAST:event_cmbDepartmentItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableModule;
    private javax.swing.JComboBox cmbDepartment;
    private javax.swing.JComboBox cmbModule;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    
    
    private void GenerateCombo() {
        HashMap List=new HashMap();
        String strCondition="";
        
        //----- Generate Department Combo ------- //
        cmbDeptModel=new EITLComboModel();
        cmbDepartment.removeAllItems();
        cmbDepartment.setModel(cmbDeptModel);
        
        List=clsDepartment.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ");
        
        
        for(int i=1;i<=List.size();i++) {
            clsDepartment ObjDept=(clsDepartment) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjDept.getAttribute("DEPT_ID").getVal();
            aData.Text=(String) ObjDept.getAttribute("DEPT_DESC").getObj();
            cmbDeptModel.addElement(aData);
        }
        //------------------------------ //
        
        
        //----- Generate Module Combo ------- //
        cmbModuleModel=new EITLComboModel();
        cmbModule.removeAllItems();
        cmbModule.setModel(cmbModuleModel);
        
        List=clsModules.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ");
        
        
        for(int i=1;i<=List.size();i++) {
            clsModules ObjModule=(clsModules) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjModule.getAttribute("MODULE_ID").getVal();
            aData.Text=(String) ObjModule.getAttribute("MODULE_DESC").getObj();
            cmbModuleModel.addElement(aData);
        }
        //------------------------------ //
        
    }
    
    private void GenerateGrid() {
        //Generates Grid from the
        FormatGrid();
        
        Connection tmpConn;
        ResultSet rsTmp;
        Statement tmpStmt;
        
        String Qry = "SELECT * FROM D_COM_DEPT_MODULES WHERE COMPANY_ID = "+EITLERPGLOBAL.gCompanyID+" ";
        int srno=1;
        
        try {
            tmpConn= data.getConn();
            tmpStmt=tmpConn.createStatement();
            rsTmp=tmpStmt.executeQuery(Qry);
            
            rsTmp.first();
            
            while(!rsTmp.isAfterLast()) {
                Object[] rowData=new Object[6];
                rowData[0]=Integer.toString(srno);
                rowData[1]=rsTmp.getString("DEPT_ID");
                rowData[2]=data.getStringValueFromDB("SELECT DEPT_DESC FROM D_COM_DEPT_MASTER WHERE DEPT_ID="+rsTmp.getString("DEPT_ID")+"");
                
                rowData[3]=rsTmp.getString("MODULE_ID");
                rowData[4]=data.getStringValueFromDB("SELECT MODULE_DESC FROM D_COM_MODULES WHERE MODULE_ID ="+rsTmp.getString("MODULE_ID")+"");
                //rowData[4]=rsTmp.getString("DEPT_ID");
                
                srno++;
                DataModel.addRow(rowData);
                rsTmp.next();
            }
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        
        TableModule.removeAll();
        
        TableModule.setModel(DataModel);
        TableModule.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        DataModel.addColumn("Sr."); //0
        DataModel.addColumn("Department Id.");//1
        DataModel.addColumn("DepartMent Name.");//2
        DataModel.addColumn("Module Id");//3
        DataModel.addColumn("Module Name");//4
        
        DataModel.SetVariable(0,"SR_NO");
        DataModel.SetVariable(1,"Department_Id");
        DataModel.SetVariable(2,"Department_Name");
        DataModel.SetVariable(3,"Module_Id");
        DataModel.SetVariable(4,"Module_Name");
        
        //DataModel.SetNumeric(3,true);
        DataModel.SetReadOnly(0);
        DataModel.SetReadOnly(1);
        DataModel.SetReadOnly(2);
        DataModel.SetReadOnly(3);
        DataModel.SetReadOnly(4);
    }
    private boolean insert() {
        try {
            //clsItemMapping ObjItem=(clsItemMapping)pObjItemMapping;
            String qry="SELECT * FROM D_COM_DEPT_MODULES WHERE COMPANY_ID ="+EITLERPGLOBAL.gCompanyID+" AND DEPT_ID = "+EITLERPGLOBAL.getComboCode(cmbDepartment)+"  AND MODULE_ID = "+EITLERPGLOBAL.getComboCode(cmbModule)+" ";
            if(data.IsRecordExist(qry))
            {
                return false;
            }
            
            
            
            
            Connection tmpConn;
            Statement stTmp;
            ResultSet rsTmp;
            
            tmpConn=data.getConn();
            stTmp=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_DEPT_MODULES");
            rsTmp.first();
            
            //EITLERPGLOBAL.getComboCode(cmbDepartment)
            
            rsTmp.moveToInsertRow();
            rsTmp.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
            rsTmp.updateInt("DEPT_ID",EITLERPGLOBAL.getComboCode(cmbDepartment));
            rsTmp.updateInt("MODULE_ID",EITLERPGLOBAL.getComboCode(cmbModule));
            
            
            rsTmp.updateBoolean("CHANGED",true);
            rsTmp.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
            rsTmp.updateInt("CREATED_BY",EITLERPGLOBAL.gUserID);
            rsTmp.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
            rsTmp.updateInt("MODIFIED_BY",EITLERPGLOBAL.gUserID);
            rsTmp.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
            rsTmp.insertRow();
            
            rsTmp.close();
            stTmp.close();
            
            GenerateGrid();
            return true;
            
        }
        catch(Exception e) {
            return false;
        }
    }
    private boolean Delete()
    {
        
        //String s= DataModel.getVariable();
        String s =TableModule.getValueAt(TableModule.getSelectedRow(), 1).toString();
        s =TableModule.getValueAt(TableModule.getSelectedRow(), 3).toString();
        
        data.Execute("DELETE FROM D_COM_DEPT_MODULES WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+TableModule.getValueAt(TableModule.getSelectedRow(), 3).toString()+" AND DEPT_ID="+TableModule.getValueAt(TableModule.getSelectedRow(), 1).toString()+" ");
        //s =TableModule.getValueAt(TableModule.getSelectedRow(), 1).toString();
        GenerateGrid();
        return true;
    }
    
}