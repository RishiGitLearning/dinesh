/*
 * frmMigrate.java
 *
 * Created on July 5, 2004, 1:24 PM
 */

package EITLERP.Migration;

/*<APPLET CODE=frmMigrate.class WIDTH=300 HEIGHT=400></APPLET>*/
/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Stores.*;
import EITLERP.Purchase.*;
import java.sql.*;
import java.io.*;
import java.net.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.JavaMail.*;


public class frmMigrate extends javax.swing.JApplet implements Runnable {
    
    public String sdmlURL="jdbc:mysql://200.0.0.227:3306/SDMLActual";
    public String bkupURL="jdbc:mysql://200.0.0.227:3306/Backup";
    
    public long Counter=0;
    frmStatus theStatus;
    private Thread runThread=new Thread(this);
    
    private String CutOffDate="2004-08-01";
    
    
    
    /** Initializes the applet frmMigrate */
    public void init() {
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        Bar = new javax.swing.JProgressBar();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txtSMTP = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jLabel1.setText("DATA MIGRATION MODULE");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(11, 6, 400, 15);

        jButton1.setText("Migrate Indent Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(9, 137, 172, 25);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        lblStatus.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(lblStatus);
        lblStatus.setBounds(5, 6, 510, 56);

        jPanel1.add(Bar);
        Bar.setBounds(7, 71, 505, 18);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(7, 33, 521, 97);

        jButton2.setText("Migrate P.O. Data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(10, 171, 172, 25);

        jButton3.setText("Migrate MIR Data");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(10, 204, 172, 25);

        jButton4.setText("Migrate GRN Data");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(10, 239, 172, 25);

        jButton5.setText("Migrate Issue Data");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton5);
        jButton5.setBounds(10, 273, 172, 25);

        jButton6.setText("Send Mail");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton6);
        jButton6.setBounds(362, 261, 130, 25);

        txtSMTP.setText("SMTP Address");
        getContentPane().add(txtSMTP);
        txtSMTP.setBounds(363, 234, 157, 19);

        jButton7.setText("Migrate RGP Data");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton7);
        jButton7.setBounds(11, 306, 172, 25);

        jButton8.setText("Migrate NRGP Data");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton8);
        jButton8.setBounds(11, 337, 172, 25);

        jButton9.setText("Migrate BOE Data");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton9);
        jButton9.setBounds(12, 370, 172, 25);

        jButton10.setText("Update Suppliers");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton10);
        jButton10.setBounds(191, 137, 172, 25);

        jButton11.setText("Update Items");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton11);
        jButton11.setBounds(191, 172, 172, 25);

        jButton12.setText("Update BOE Stock");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton12);
        jButton12.setBounds(192, 205, 172, 25);

        jButton13.setText(" Indent Update");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton13);
        jButton13.setBounds(193, 239, 172, 25);

        jButton14.setText("Migrate A CLASS");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton14);
        jButton14.setBounds(194, 272, 172, 25);

        jButton15.setText("Update Item Location");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton15);
        jButton15.setBounds(195, 313, 172, 25);

        jButton16.setText("Update Cost Center");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton16);
        jButton16.setBounds(197, 348, 172, 25);

        jButton17.setText("Update Indents ");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton17);
        jButton17.setBounds(197, 378, 172, 25);

        jButton18.setText("Update REFA");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton18);
        jButton18.setBounds(377, 140, 172, 25);

        jButton19.setText("Update GRN for MIR");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton19);
        jButton19.setBounds(377, 172, 172, 25);

        jButton20.setText("Open MIR");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton20);
        jButton20.setBounds(376, 312, 172, 25);

        jButton21.setText("Start Temp");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton21);
        jButton21.setBounds(377, 347, 166, 25);

        jButton22.setText("Open Approval");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton22);
        jButton22.setBounds(380, 385, 163, 25);

        jButton23.setText("Copy Transactions");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton23);
        jButton23.setBounds(377, 425, 163, 25);

        jButton24.setText("PTC");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton24);
        jButton24.setBounds(163, 437, 58, 25);

        jButton25.setText("Item Temp");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton25);
        jButton25.setBounds(232, 436, 117, 25);

        jButton26.setText("Item Mapping");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton26);
        jButton26.setBounds(37, 438, 117, 25);

        jButton27.setText("update Indents from Temp");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton27);
        jButton27.setBounds(180, 409, 157, 25);

    }//GEN-END:initComponents
    
    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        updateIndentsFromTemp();
    }//GEN-LAST:event_jButton27ActionPerformed
    
    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        updateItemSrNo();
    }//GEN-LAST:event_jButton26ActionPerformed
    
    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        //updateItemBlank();
        StartItemTemp();
    }//GEN-LAST:event_jButton25ActionPerformed
    
    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        updateSuppPTC();
        /*try {
            int a=0;
            a=1;
            JMail.SendMail("184.106.240.198", "andrews@microsoft.com", "nitin_pithva@yahoo.co.uk", "Contact Urgently ", "Dear Candidate \n\nI got the knowledge about you from ESSAR sources. I have read your resume and I am deeply impressed by your biodata and work you have done. We are in search of technical people who can work in Visual Basic and have passion for innovating new things. I found you suitable for the same post. If you are interested to work with microsoft, urgently reply and send your detailed resume.  \n\nRegards\n\nAndrews\n\nMicrosoft India. ","");
         
            //nv@essar.com
         
            //JOptionPane.showMessageDialog(null,"Message Sent");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,"Send error "+e.getMessage());
        }*/
        
    }//GEN-LAST:event_jButton24ActionPerformed
    
    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        CopyFromBackup("000021","000091");
    }//GEN-LAST:event_jButton23ActionPerformed
    
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        updateApprovals();
        //replaceData();
    }//GEN-LAST:event_jButton22ActionPerformed
    
    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        //StartTemp();
        //UpdatePONoInGRN();
        //UpdateDescriptions();
        //StartParty();
        StartItemTemp();
        //StartSuppTemp();
        //StartSuppPTCUpdate();
        //UpdatePOTerms();
        //StartItemNewUpdate();
        //CopyMIRFromBackup();
    }//GEN-LAST:event_jButton21ActionPerformed
    
    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        OpenMIR();
    }//GEN-LAST:event_jButton20ActionPerformed
    
    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        StartGRNUpdate();
        //StartGRNDeptUpdate();
    }//GEN-LAST:event_jButton19ActionPerformed
    
    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        StartREFA();
    }//GEN-LAST:event_jButton18ActionPerformed
    
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        UpdateIndent();
    }//GEN-LAST:event_jButton17ActionPerformed
    
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        StartCostCenter();
    }//GEN-LAST:event_jButton16ActionPerformed
    
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        try {
            Connection tmpConn;
            Statement stTmp,stLocation;
            ResultSet rsTmp,rsLocation;
            
            tmpConn=data.getConn();
            
            
            stLocation=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsLocation=stLocation.executeQuery("SELECT * FROM D_INV_LOCATION_MASTER");
            rsLocation.first();
            
            stTmp=tmpConn.createStatement();
            rsTmp=stTmp.executeQuery("SELECT DISTINCT(LOCATION_ID) AS LOCATION_ID FROM D_INV_ITEM_MASTER");
            rsTmp.first();
            
            while(!rsTmp.isAfterLast()) {
                rsLocation.moveToInsertRow();
                rsLocation.updateInt("COMPANY_ID",1);
                rsLocation.updateString("LOCATION_ID",rsTmp.getString("LOCATION_ID"));
                rsLocation.updateString("LOCATION_NAME",rsTmp.getString("LOCATION_ID"));
                rsLocation.updateString("WAREHOUSE_ID","S");
                rsLocation.insertRow();
                
                rsTmp.next();
            }
            
        }
        catch(Exception e) {
            //JOptionPane.showMessageDialog(null,e.getMessage());
            
        }
        
    }//GEN-LAST:event_jButton15ActionPerformed
    
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        StartPOAClass();
    }//GEN-LAST:event_jButton14ActionPerformed
    
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        StartIndentUpdate();
    }//GEN-LAST:event_jButton13ActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        StartBOEStock();
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        //StartItem();
        StartItemNewUpdate();
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        StartSuppliers();
    }//GEN-LAST:event_jButton10ActionPerformed
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        StartBOE();
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        StartNRGP();
    }//GEN-LAST:event_jButton8ActionPerformed
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        StartRGP();
    }//GEN-LAST:event_jButton7ActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            int a=0;
            a=1;
            //JMail.SendMail("184.106.240.198", "Bill Gates<billgates@microsoft.com>", "prashant.gandhi8781@gmail.com", "Dear Mr. Prashant \n\nWe got information regarding work you have done in regional language. We are seeking people having in depth work experience in regional language development for our forthcoming research projects on regional language technologies. Your skills meet our requirements. \n\nIf you are interested in working with us, then please reply on this mail id  gennextsolutions@yahoo.com. \n\nRegards\n\nBill Gates\n\nMicrosoft Corporation\nRedmond\nU.S.A","Placements at Micorosft Corporation","");
            
            //JMail.SendMail("184.106.240.198", "Bill Gates<billgates@microsoft.com>", "prashant.gandhi8781@gmail.com", "Dear Mr. Prashant Gandhi \n\nCongratulations for your engagement. I wish happy marriage life and glorious career from the deep of my heart. \n\nI would be happy if you send me your fiance's photograph. I will arrange a party for both of you when you come to U.S.A. and will send sponsorship papers immediately for both of you. \n\nAwaiting eagerly for the photograph. \n\nBest Regards\nBill Gates\nMicrosoft Corporation\nRedmond\nU.S.A ","Congratulations","");
            
            
            //JMail.SendMail("184.106.240.198", "Anil Ambani<anilambani@reliance.com>", "prashant.gandhi8781@gmail.com", "Dear Prashant \n\nCongratulations for engagement. Best of luck for your life ahead and we wish happy and joyful life. \n\nPlease send me your wife's photographs, I will be very happy. \n\nWaiting for your reply. \n\nRegards\nAnil Ambani\nChairman\nA.D.A.G.","Congratulations","");
            
            
            JMail.SendMail(EITLERPGLOBAL.SMTPHostIP, "Wikipedia Editor<editor@wikipedia.org>", "prathmesh_2000@yahoo.com", "Hello Mr. Prathmesh Shah\n\nI am editor of www.wikipedia.org. I look after editing made by community. We have recently received a change in Topic 'Thando' as per below\n\n Thando is a synonym for Mr. Prathmesh Shah, Age 38, working in Shri Dinesh Mills Ltd. as an Assistant Manager (IT). Thando has many girlfriends like Nilu,Reshma,Rakhi,Amisha,Mariamma and best of all his favorite Thandi. Thando is very good at flirting girls and dating married women. \n\nPlease confirm the above details and let us know before 29 Nov. 2007. If we don't get your confirmation within specified date, the content will be uploaded automatically to wikipedia and cannot be edited in future. \n\nRegards\nDavid Watson\n\nEditor Wikipedia","Confirmation for the Page edit. Topic - 'Thando' ","");
            //nv@essar.com
            
            //JOptionPane.showMessageDialog(null,"Message Sent");
        }
        catch(Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null,"Send error "+e.getMessage());
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        StartIssue();
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        StartGRN();
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        StartMIR();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        StartPO();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        StartIndent();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtSMTP;
    // End of variables declaration//GEN-END:variables
    
    
    private void StartIndent() {
        new Thread() {
            public void run() {
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsIndent;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    //Deleting Records from Cut Off Date

//                    stDest=destConn.createStatement();
//                    rsDest=stDest.executeQuery("SELECT INDENT_NO FROM D_INV_INDENT_HEADER WHERE INDENT_DATE>='"+CutOffDate+"'");
//                    rsDest.first();
//                    
//                    if(rsDest.getRow()>0) {
//                        while(!rsDest.isAfterLast()) {
//                            String IndentNo=rsDest.getString("INDENT_NO");
//                            
//                            data.Execute("DELETE FROM D_INV_INDENT_HEADER WHERE INDENT_NO='"+IndentNo+"'");
//                            data.Execute("DELETE FROM D_INV_INDENT_DETAIL WHERE INDENT_NO='"+IndentNo+"'");
//                            
//                            rsDest.next();
//                        }
//                    }
                    
                    
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM INDENT_TRANSACTION ");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Indent - Updating Trans table - "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String DeptCode=rsSource.getString("DEPT");
                            String UnitCode=rsSource.getString("SU");
                            
                            String IndentNo=rsSource.getString("REF_NO");
                            
                            //data.Execute("DELETE FROM D_INV_INDENT_HEADER WHERE INDENT_NO='"+IndentNo+"'");
                            //data.Execute("DELETE FROM D_INV_INDENT_DETAIL WHERE INDENT_NO='"+IndentNo+"'");
                            
                            
                            int DeptID=0;
                            int UserID=0;
                            int UnitID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptID=rsTmp.getInt("DEPT_ID");
                                UserID=rsTmp.getInt("USER_ID");
                            }
                            
                            rsSource.updateInt("USER_ID",UserID);
                            rsSource.updateInt("DEPT_ID",DeptID);
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC='"+UnitCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                UnitID=rsTmp.getInt("PARA_CODE");
                            }
                            
                            rsSource.updateInt("UNIT_ID",UnitID);
                            rsSource.updateRow();
                            
                            rsSource.next();
                        }
                    }
                    
                    
                    //================= Generate Indent Header ------------------------//
                    strSQL="SELECT DISTINCT(REF_NO),DATE,USER_ID,DEPT_ID,STATUS FROM INDENT_TRANSACTION GROUP BY REF_NO ";
                    
                    //Deleting previous records
                    //stSource.executeUpdate("DELETE FROM INDENT_HEADER WHERE REF_NO>'021226' AND REF_NO<'021270'");
                    
                    stTmp=srcConn.createStatement();
                    rsTmp=stTmp.executeQuery(strSQL);
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        //Delete Header rows
                        
                        
                        //Prepare Header table
                        stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        
                        stSource.executeUpdate("DELETE FROM INDENT_HEADER");
                        
                        rsSource=stSource.executeQuery("SELECT * FROM INDENT_HEADER WHERE REF_NO='1' ");
                        
                        
                        
                        while(!rsTmp.isAfterLast()) {
                            rsSource.moveToInsertRow();
                            rsSource.updateString("REF_NO",rsTmp.getString("REF_NO"));
                            rsSource.updateString("DATE",rsTmp.getString("DATE"));
                            rsSource.updateInt("DEPT_ID",rsTmp.getInt("DEPT_ID"));
                            rsSource.updateInt("USER_ID",rsTmp.getInt("USER_ID"));
                            
                            if(rsTmp.getString("STATUS").trim().equals("")) {
                                rsSource.updateBoolean("APPROVED",false);
                            }
                            else {
                                rsSource.updateBoolean("APPROVED",true);
                            }
                            rsSource.insertRow();
                            
                            rsTmp.next();
                        }
                    }
                    //============================= Header Generation Part Completed =======================//
                    
                    //-------------Updating the Sr. Nos. of Indent Line ----------------------//
                    int RecCount=0;
                    int Pointer=0;
                    
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT COUNT(*) AS THECOUNT FROM INDENT_HEADER");
                    rsSource.first();
                    if(rsSource.getRow()>0) {
                        RecCount=rsSource.getInt("THECOUNT");
                    }
                    
                    
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM INDENT_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        
                        while(!rsSource.isAfterLast()) {
                            String IndentNo=rsSource.getString("REF_NO");
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM INDENT_TRANSACTION WHERE REF_NO='"+IndentNo+"'");
                            rsTmp.first();
                            
                            int Sr=0;
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsTmp.updateInt("SR_NO",Sr);
                                    rsTmp.updateRow();
                                    rsTmp.next();
                                }
                            }
                            
                            rsSource.next();
                        }
                    }
                    //---------------- Sr. No. updation completed ---------------------------//
                    
                    
                    
                    //================ Update the Destination Tables ======================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM INDENT_HEADER");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_INDENT_HEADER WHERE INDENT_NO='1' ");
                    
                    //stDest.executeUpdate("DELETE FROM D_INV_INDENT_HEADER");
                    //stDest.executeUpdate("DELETE FROM D_INV_INDENT_DETAIL");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            //Create Record in Destination Indent Header;
                            String IndentNo=rsSource.getString("REF_NO");
                            
                            lblStatus.setText("Inserting Indents "+IndentNo);
                            lblStatus.repaint();

                            rsIndent=data.getResult("SELECT INDENT_NO FROM D_INV_INDENT_HEADER WHERE INDENT_NO='"+IndentNo+"'");
                            rsIndent.first();
                            
                            if(rsIndent.getRow()>0)
                            {
                            
                                System.out.println("Skipping Indent "+IndentNo);
                            }
                            else
                            {
                            
                            
                            //data.Execute("DELETE FROM D_INV_INDENT_HEADER WHERE INDENT_NO='"+IndentNo+"'");
                            //data.Execute("DELETE FROM D_INV_INDENT_DETAIL WHERE INDENT_NO='"+IndentNo+"'");
                            
                            rsDest.moveToInsertRow();
                            rsDest.updateInt("COMPANY_ID",3);
                            rsDest.updateString("INDENT_NO",rsSource.getString("REF_NO"));
                            rsDest.updateString("INDENT_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("DATE")));
                            rsDest.updateInt("FOR_DEPT_ID",rsSource.getInt("DEPT_ID"));
                            rsDest.updateInt("BUYER",rsSource.getInt("USER_ID"));
                            rsDest.updateBoolean("APPROVED",rsSource.getBoolean("APPROVED"));
                            rsDest.updateBoolean("CANCELED",false);
                            rsDest.updateInt("CREATED_BY",0);
                            rsDest.updateString("CREATED_DATE","0000-00-00");
                            rsDest.updateInt("MODIFIED_BY",0);
                            rsDest.updateString("MODIFIED_DATE","0000-00-00");
                            rsDest.updateBoolean("CHANGED",false);
                            rsDest.updateString("CHANGED_DATE","0000-00-00");
                            rsDest.updateString("APPROVED_DATE","0000-00-00");
                            rsDest.updateBoolean("REJECTED",false);
                            rsDest.updateString("REJECTED_DATE","0000-00-00");
                            
                            rsDest.insertRow();
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement();
                            rsTmp=stTmp.executeQuery("SELECT * FROM INDENT_TRANSACTION WHERE REF_NO='"+IndentNo+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                //Open Line Table
                                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                                rsLine=stLine.executeQuery("SELECT * FROM D_INV_INDENT_DETAIL WHERE INDENT_NO='1' ");
                                
                                int Sr=0;
                                
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsLine.moveToInsertRow();
                                    rsLine.updateInt("COMPANY_ID",3);
                                    rsLine.updateString("INDENT_NO",IndentNo);
                                    rsLine.updateInt("SR_NO",Sr);
                                    rsLine.updateString("ITEM_CODE",rsTmp.getString("ITEM_CD"));
                                    rsLine.updateString("ITEM_EXTRA_DESC",rsTmp.getString("DESC"));
                                    rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                                    rsLine.updateDouble("QTY",rsTmp.getDouble("TQTY"));
                                    rsLine.updateDouble("BAL_QTY",rsTmp.getDouble("BL_QTY"));
                                    rsLine.updateDouble("PO_QTY",rsTmp.getDouble("TQTY")-rsTmp.getDouble("BL_QTY"));
                                    rsLine.updateString("REMARKS",rsTmp.getString("REMARKS"));
                                    rsLine.updateString("LAST_PO_NO",rsTmp.getString("PREVPO"));
                                    rsLine.updateDouble("LAST_GRN_RATE",rsTmp.getDouble("PGRNRATE"));
                                    
                                    rsLine.insertRow();
                                    rsTmp.next();
                                }
                            }
                            
                            }
                            
                            rsSource.next();
                        }
                    }
                    //=====================================================================//
                    
                    
                    UpdateIndent(); //for last PO and GRN Date updation
                    
                    lblStatus.setText("Completed ");
                    lblStatus.repaint();
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null," error is "+e.getMessage());
                    
                }
            };
        }.start();
        
    }
    
    
    private void UpdateIndent() {
        
        new Thread(){
            public void run() {
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine;
                ResultSet rsSource,rsDest,rsTmp,rsLine;
                String strSQL="";
                
                try {
                    
                    
                    destConn=data.getConn();
                    
                    
                    //Updating link with indent
                    /*stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_DETAIL WHERE INDENT_NO<>'' ");
                    rsDest.first();
                     
                    while(!rsDest.isAfterLast()) {
                        lblStatus.setText("Updating PO  "+rsDest.getString("PO_NO"));
                        lblStatus.repaint();
                     
                        String ItemID=rsDest.getString("ITEM_ID");
                        String IndentNo=rsDest.getString("INDENT_NO");
                     
                        rsTmp=data.getResult("SELECT SR_NO FROM D_INV_INDENT_DETAIL WHERE INDENT_NO='"+IndentNo+"' AND ITEM_CODE='"+ItemID+"'");
                        rsTmp.first();
                     
                        if(rsTmp.getRow()>0) {
                            int SrNo=rsTmp.getInt("SR_NO");
                            data.Execute("UPDATE D_PUR_PO_DETAIL SET INDENT_SR_NO="+SrNo+" WHERE PO_NO='"+rsDest.getString("PO_NO")+"' AND SR_NO="+rsDest.getInt("SR_NO")+" AND PO_TYPE="+rsDest.getInt("PO_TYPE"));
                        }
                        else {
                            data.Execute("UPDATE D_PUR_PO_DETAIL SET INDENT_SR_NO=0 WHERE PO_NO='"+rsDest.getString("PO_NO")+"' AND SR_NO="+rsDest.getInt("SR_NO")+" AND PO_TYPE="+rsDest.getInt("PO_TYPE"));
                        }
                     
                        rsDest.next();
                    }
                     
                    lblStatus.setText("Completed");*/
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT INDENT_NO,LAST_PO_NO,LAST_PO_DATE,LAST_GRN_NO,LAST_GRN_DATE FROM D_INV_INDENT_DETAIL");
                    rsDest.first();
                     
                    while(!rsDest.isAfterLast()) {
                        lblStatus.setText("Updating Indent "+rsDest.getRow());
                        lblStatus.repaint();
                     
                        String PONo=rsDest.getString("LAST_PO_NO");
                        String GRNNo=rsDest.getString("LAST_GRN_NO");
                     
                        stTmp=destConn.createStatement();
                        rsTmp=stTmp.executeQuery("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo.trim()+"'");
                        rsTmp.first();
                     
                        if(rsTmp.getRow()>0) {
                            stDest.executeUpdate("UPDATE D_INV_INDENT_DETAIL SET LAST_PO_DATE='"+rsTmp.getString("PO_DATE")+"' WHERE INDENT_NO='"+rsDest.getString("INDENT_NO")+"'");
                        }
                     
                        stTmp=destConn.createStatement();
                        rsTmp=stTmp.executeQuery("SELECT GRN_DATE FROM D_INV_GRN_HEADER WHERE GRN_NO='"+GRNNo.trim()+"'");
                        rsTmp.first();
                     
                        if(rsTmp.getRow()>0) {
                            stDest.executeUpdate("UPDATE D_INV_INDENT_DETAIL SET LAST_GRN_DATE='"+rsTmp.getString("GRN_DATE")+"' WHERE INDENT_NO='"+rsDest.getString("INDENT_NO")+"'");
                        }
                     
                     
                        rsDest.next();
                    }
                    
                    
            /*stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT MIR_NO,PO_NO FROM D_INV_MIR_DETAIL");
            rsDest.first();
             
            while(!rsDest.isAfterLast()) {
                lblStatus.setText("Updating MIR "+rsDest.getRow());
                lblStatus.repaint();
             
                String MIRNo=rsDest.getString("MIR_NO");
                String PONo=rsDest.getString("PO_NO");
             
                stTmp=destConn.createStatement();
                rsTmp=stTmp.executeQuery("SELECT QTY FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo.trim()+"'");
                rsTmp.first();
             
                if(rsTmp.getRow()>0)
                {
                  stDest.executeUpdate("UPDATE D_INV_MIR_DETAIL SET PO_QTY="+rsTmp.getDouble("QTY")+" WHERE MIR_NO='"+MIRNo+"'");
                }
             
                rsDest.next();
            }*/
                    
                    
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null," error is "+e.getMessage());
                    
                }
            }
        }.start();
        
    }
    
    private void StartPO() {
        
        new Thread(){
            public void run() {
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms,stBlank,stEPO;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsBlank,rsEPO;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    /*stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT PO_NO FROM D_PUR_PO_HEADER WHERE PO_DATE>='"+CutOffDate+"' AND PO_TYPE=1");
                    rsDest.first();
                     
                    if(rsDest.getRow()>0) {
                        while(!rsDest.isAfterLast()) {
                            String PONo=rsDest.getString("PO_NO");
                     
                            data.Execute("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            data.Execute("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            data.Execute("DELETE FROM D_PUR_PO_TERMS WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            rsDest.next();
                        }
                    }*/
                    
                    
                    //================== Updating P.O. Header Table for Dept & User ID ==========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        
                        while(rsSource.next()) {
                            lblStatus.setText("Updating PO Source "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String DeptCode=rsSource.getString("DEPT");
                            String BuyerCode=rsSource.getString("BUYER");
                            String PONo=rsSource.getString("PO_NO");
                            
                            //data.Execute("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            //data.Execute("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            //data.Execute("DELETE FROM D_PUR_PO_TERMS WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            
                            
                            int DeptID=0;
                            int UserID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptID=rsTmp.getInt("DEPT_ID");
                            }
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE BUYER='"+BuyerCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                UserID=rsTmp.getInt("USER_ID");
                            }
                            
                            //Updating Table
                            stSource.executeUpdate("UPDATE PO_HEADER SET USER_ID="+UserID+",DEPT_ID="+DeptID+" WHERE PO_NO='"+PONo+"'");
                            stSource.executeUpdate("UPDATE PO_DETAIL SET DEPT_ID="+DeptID+" WHERE PO_NO='"+PONo+"'");
                            
                            rsSource.next();
                        }
                    }
                    //==============Updation of P.O. Header Completed ================================//
                    
                    
                    
                    //============== Updating P.O. Detail for Unit ID =========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM PO_DETAIL WHERE UNIT_ID=0");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(rsSource.next()) {
                            lblStatus.setText("Updating Units "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String UnitCode=rsSource.getString("WTUNT");
                            String PONo=rsSource.getString("PO_NO");
                            String ItemCode=rsSource.getString("ITEM_CD");
                            String DeliveryDate="";
                            String IndentNo="";
                            int IndentSrNo=0;
                            
                            int UnitID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC='"+UnitCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                UnitID=rsTmp.getInt("PARA_CODE");
                            }
                            
                            rsTmp.close();
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM PO_SCH WHERE PO_NO='"+PONo+"' AND ITEM_CD='"+ItemCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeliveryDate=rsTmp.getString("DDATE");
                            }
                            
                            rsTmp.close();
                            //Updating Indent No. and Indent Sr. No.
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM PO_HEADER WHERE PO_NO='"+PONo+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                IndentNo=rsTmp.getString("INDENTNO");
                            }
                            
                            rsTmp.close();
                            
                            //Finding Sr. No.
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM INDENT_TRANSACTION WHERE REF_NO='"+IndentNo+"' AND ITEM_CD='"+ItemCode+"' ");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                IndentSrNo=rsTmp.getInt("SR_NO");
                            }
                            
                            stSource.executeUpdate("UPDATE PO_DETAIL SET UNIT_ID="+UnitID+",DELIVERY_DATE='"+DeliveryDate+"',INDENT_NO='"+IndentNo+"',INDENT_SR_NO="+IndentSrNo+" WHERE PO_NO='"+PONo+"' AND ITEM_CD='"+ItemCode+"'");
                            
                            
                            //rsSource.updateInt("UNIT_ID",UnitID);
                            //rsSource.updateString("DELIVERY_DATE",DeliveryDate);
                            //rsSource.updateString("INDENT_NO",IndentNo);
                            //rsSource.updateInt("INDENT_SR_NO",IndentSrNo);
                            //rsSource.updateRow();
                            
                            //rsSource.next();
                        }
                    }
                    //===============Completed Updating P.O. Detail ===========================//
                    
                    
                    
                    
                    Counter=0;
                    //-------------Updating the Sr. Nos. of Indent Line ----------------------//
                    stSource=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            
                            lblStatus.setText("Updating Sr. No "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String PONo=rsSource.getString("PO_NO");
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM PO_DETAIL WHERE PO_NO='"+PONo+"'");
                            rsTmp.first();
                            
                            int Sr=0;
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    if(rsTmp.getInt("SR_NO")==0) {
                                        rsTmp.updateInt("SR_NO",Sr);
                                        rsTmp.updateRow();
                                    }
                                    rsTmp.next();
                                }
                            }
                            rsSource.next();
                        }
                    }
                    //---------------- Sr. No. updation completed ---------------------------//
                    
                    
                    lblStatus.setText("Updating units completed");
                    lblStatus.repaint();
                    //--------- Removing Old Records -----------//
                    
                    
                    //================ Update the P.O. Tables ======================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER"); //Data of 97
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE PO_NO='1'");
                    
                    stTerms=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTerms=stTerms.executeQuery("SELECT * FROM D_PUR_PO_TERMS WHERE PO_NO='1'");
                    
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            
                            
                            String PONo=rsSource.getString("PO_NO");
                            
                            lblStatus.setText("Now deleting old records"+PONo);
                            lblStatus.repaint();
                            
                            //stDest.executeUpdate("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"'");
                            //stDest.executeUpdate("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo+"'");
                            //stDest.executeUpdate("DELETE FROM D_PUR_PO_TERMS WHERE PO_NO='"+PONo+"'");
                            
                            rsSource.next();
                        }
                    }
                    
                    
                    //stDest.executeUpdate("DELETE FROM D_PUR_PO_HEADER");
                    //stDest.executeUpdate("DELETE FROM D_PUR_PO_DETAIL");
                    //stDest.executeUpdate("DELETE FROM D_PUR_PO_TERMS");
                    
                    Counter=0;
                    //rsSource.relative(5);
                    
                    rsSource.first();
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            
                            lblStatus.setText("Inserting Rows "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            //if(Counter<=3000 && Counter>1872) {
                            //Create Record in Destination Indent Header;
                            // String PONo=rsSource.getString("PO_NO");
                            //stTmp = destConn.createStatement();
                            //rsTmp = stTmp.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"'");
                            //rsTmp.first();
                            
                            //if(rsTmp.getRow()>0) {
                            
                            //}
                            //else {
                            
                            String PONo=rsSource.getString("PO_NO");
                            
                            //stDest.executeUpdate("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            //stDest.executeUpdate("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            //stDest.executeUpdate("DELETE FROM D_PUR_PO_TERMS WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
                            
                            
                            stEPO=destConn.createStatement();
                            rsEPO=stEPO.executeQuery("SELECT PO_NO FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"'");
                            rsEPO.first();
                            
                            if(rsEPO.getRow()>0)
                            {
                               System.out.println("PO No. "+PONo+" exist. Not updating it ..."); 
                            }
                            else
                            {
                                
                            
                            rsDest.moveToInsertRow();
                            rsDest.updateInt("COMPANY_ID",3);
                            rsDest.updateString("PO_NO",rsSource.getString("PO_NO"));
                            rsDest.updateString("PO_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("PO_DATE")));
                            rsDest.updateInt("PO_TYPE",1);
                            rsDest.updateString("SUPP_ID",rsSource.getString("PARTY_CD"));
                            rsDest.updateString("INQUIRY_NO",rsSource.getString("REF_NO"));
                            rsDest.updateString("INQUIRY_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("EQ_DATE")));
                            rsDest.updateString("QUOTATION_NO",rsSource.getString("QTN_NO"));
                            rsDest.updateString("QUOTATION_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("QTN_DATE")));
                            rsDest.updateInt("BUYER",rsSource.getInt("USER_ID"));
                            rsDest.updateInt("CURRENCY_ID",1);
                            rsDest.updateBoolean("APPROVED",true);
                            rsDest.updateBoolean("REJECTED",false);
                            rsDest.updateString("STATUS","C");
                            
                            rsDest.updateString("PAYMENT_TERM",rsSource.getString("TERMS"));
                            rsDest.updateString("FREIGHT_TERM",rsSource.getString("FREIGHTPI"));
                            rsDest.updateString("INSURANCE_TERM",rsSource.getString("INSURANCE"));
                            rsDest.updateString("DESPATCH_TERM",rsSource.getString("OTC").trim()+" "+rsSource.getString("OTCNEW").trim());
                            rsDest.updateString("PRICE_BASIS_TERM",rsSource.getString("PB_TXT").trim());
                            rsDest.updateString("PF_TERM",rsSource.getString("PC_TXT").trim()+" "+rsSource.getString("FC_TXT").trim());
                            rsDest.updateString("OCTROI_TERM",rsSource.getString("OCT_TXT").trim());
                            
                            if(rsSource.getDouble("EXCISE")>0) {
                                rsDest.updateString("EXCISE_TERM"," "+rsSource.getDouble("EXCISE")+"%");
                            }
                            else {
                                rsDest.updateString("EXCISE_TERM"," ");
                            }
                            
                            
                            if(rsSource.getDouble("SALESTAX")>0) {
                                rsDest.updateString("ST_TERM"," "+rsSource.getDouble("SALESTAX")+"%");
                            }
                            else {
                                rsDest.updateString("ST_TERM"," ");
                            }
                            
                            rsDest.updateDouble("COLUMN_3_PER",rsSource.getDouble("EXCISE"));
                            rsDest.updateDouble("COLUMN_4_PER",rsSource.getDouble("SALESTAX"));
                            
                            rsDest.updateBoolean("CANCELLED",false);
                            rsDest.updateInt("CREATED_BY",0);
                            rsDest.updateString("CREATED_DATE","0000-00-00");
                            rsDest.updateInt("MODIFIED_BY",0);
                            rsDest.updateString("MODIFIED_DATE","0000-00-00");
                            rsDest.updateBoolean("CHANGED",false);
                            rsDest.updateString("CHANGED_DATE","0000-00-00");
                            rsDest.updateString("APPROVED_DATE","0000-00-00");
                            rsDest.updateBoolean("REJECTED",false);
                            rsDest.updateString("REJECTED_DATE","0000-00-00");
                            
                            
                            if(rsSource.getString("DESTINATN").trim().equals("BARODA")) {
                                rsDest.updateInt("SHIP_ID",1);
                            }
                            else {
                                rsDest.updateInt("SHIP_ID",2);
                            }
                            rsDest.updateString("PTC",rsSource.getString("PTC"));
                            rsDest.updateString("PCODE",rsSource.getString("PCODE"));
                            rsDest.updateInt("CR_DAYS",rsSource.getInt("CR_DAYS"));
                            
                            String PaymentTerm=rsSource.getString("TERMS");
                            
                            //Generating Payment Term
                            //CREDIT TERMS WITH X DAYS
                            if(rsSource.getString("PTC").trim().equals("06")) {
                                if(rsSource.getInt("CR_DAYS")>0) {
                                    PaymentTerm="CREDIT TERMS WITH "+rsSource.getInt("CR_DAYS")+" DAYS";
                                }
                                else {
                                    PaymentTerm="CREDIT TERMS WITH 30 DAYS";
                                }
                            }
                            
                            //SIGHT DRAFT/HUNDI WITH X DAYS
                            if(rsSource.getString("PTC").trim().equals("02")) {
                                if(rsSource.getInt("CR_DAYS")>0) {
                                    PaymentTerm="SIGHT DRAFT/HUNDI WITH "+rsSource.getInt("CR_DAYS")+" DAYS";
                                }
                                else {
                                    PaymentTerm="SIGHT DRAFT/HUNDI WITH 30 DAYS";
                                }
                            }
                            
                            rsDest.updateString("PAYMENT_TERM",PaymentTerm);
                            
                            rsDest.insertRow();
                            
                            
                            //=========== Insert Records in Terms Table ========//
                    /*rsTerms.moveToInsertRow();
                    rsTerms.updateInt("COMPANY_ID",2);
                    rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                    rsTerms.updateInt("PO_TYPE",1);
                    rsTerms.updateInt("SR_NO",1);
                    rsTerms.updateString("TERM_TYPE","P");
                    rsTerms.updateInt("TERM_CODE",(int)EITLERPGLOBAL.formatDNumber(rsSource.getString("PTC")));
                    rsTerms.updateString("TERM_DESC",rsSource.getString("TERMS"));
                    rsTerms.insertRow();
                     
                     
                    if(rsSource.getString("OTC").trim().equals("")||rsSource.getString("OTC").trim().equals("N.A.")) {
                     
                    }
                    else {
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",2);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("OTC"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("OTCNEW").trim().equals("")||rsSource.getString("OTCNEW").trim().equals("N.A.")) {
                     
                    }
                    else {
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",3);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("OTCNEW"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("PB_TXT").trim().equals("")||rsSource.getString("PB_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",4);
                        rsTerms.updateString("TERM_TYPE","D");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("PB_TXT"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("PC_TXT").trim().equals("")||rsSource.getString("PC_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",5);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("PC_TXT"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("FC_TXT").trim().equals("")||rsSource.getString("FC_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",6);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("FC_TXT"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("OCT_TXT").trim().equals("")||rsSource.getString("OCT_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",7);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("OCT_TXT"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("LCC_TXT").trim().equals("")||rsSource.getString("LCC_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",8);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("LCC_TXT"));
                        rsTerms.insertRow();
                    }*/
                            
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement();
                            rsTmp=stTmp.executeQuery("SELECT * FROM PO_DETAIL WHERE PO_NO='"+PONo+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                //Open Line Table
                                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                                rsLine=stLine.executeQuery("SELECT * FROM D_PUR_PO_DETAIL WHERE PO_NO='1'");
                                
                                int Sr=0;
                                
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsLine.moveToInsertRow();
                                    rsLine.updateInt("COMPANY_ID",3);
                                    rsLine.updateString("PO_NO",PONo);
                                    rsLine.updateInt("SR_NO",Sr);
                                    rsLine.updateInt("PO_TYPE",1);
                                    
                                    rsLine.updateString("ITEM_ID",rsTmp.getString("ITEM_CD"));
                                    rsLine.updateString("ITEM_DESC",rsTmp.getString("DESC"));
                                    rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                                    rsLine.updateDouble("QTY",rsTmp.getDouble("TORD_QTY"));
                                    rsLine.updateDouble("RATE",rsTmp.getDouble("PO_RATE"));
                                    rsLine.updateDouble("TOTAL_AMOUNT",rsTmp.getDouble("VALUE"));
                                    rsLine.updateDouble("NET_AMOUNT",rsTmp.getDouble("VALUE"));
                                    rsLine.updateDouble("COLUMN_1_PER",rsTmp.getDouble("DISCOUNT")); //Discount Percentage
                                    rsLine.updateDouble("COLUMN_1_AMT",(rsTmp.getDouble("VALUE") *rsTmp.getDouble("DISCOUNT"))/100);
                                    
                                    rsLine.updateString("INDENT_NO",rsTmp.getString("INDENT_NO"));
                                    rsLine.updateInt("INDENT_SR_NO",rsTmp.getInt("INDENT_SR_NO"));
                                    rsLine.updateString("DELIVERY_DATE",EITLERPGLOBAL.formatDateDB2(rsTmp.getString("DELIVERY_DATE")));
                                    rsLine.updateDouble("RECD_QTY",rsTmp.getDouble("GI_QTY"));
                                    rsLine.updateDouble("PENDING_QTY",rsTmp.getDouble("TORD_QTY")-rsTmp.getDouble("GI_QTY"));
                                    rsLine.updateInt("DEPT_ID",rsTmp.getInt("DEPT_ID"));
                                    
                                    
                                    rsLine.insertRow();
                                    rsTmp.next();
                                }
                            }
                            
                            }
                            //  } //PO Found
                            //}//Counter
                            
                            rsSource.next();
                        } //While Loop
                    } //If Condition*/
                    //=====================================================================//
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error in PO Import "+e.getMessage());
                }
                
            }
        }.start();
        
    }
    
    private void StartPOAClass() {
        
        new Thread(){
            public void run() {
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT PO_NO FROM D_PUR_PO_HEADER WHERE PO_DATE>='"+CutOffDate+"' AND PO_TYPE=3");
                    rsDest.first();
                    
                    if(rsDest.getRow()>0) {
                        while(!rsDest.isAfterLast()) {
                            String PONo=rsDest.getString("PO_NO");
                            
                            data.Execute("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            data.Execute("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            
                            rsDest.next();
                        }
                    }
                    
                    //================== Updating P.O. Header Table for Dept & User ID ==========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(rsSource.next()) {
                            
                            lblStatus.setText("Updating Header "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String DeptCode=rsSource.getString("DEPT");
                            String BuyerCode=rsSource.getString("BUYER");
                            String PONo=rsSource.getString("PO_NO");
                            
                            data.Execute("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            data.Execute("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            data.Execute("DELETE FROM D_PUR_PO_TERMS WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            
                            
                            int DeptID=0;
                            int UserID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptID=rsTmp.getInt("DEPT_ID");
                            }
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE BUYER='"+BuyerCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                UserID=rsTmp.getInt("USER_ID");
                            }
                            
                            //Updating Table
                            stSource.executeUpdate("UPDATE PO_HEADER SET USER_ID="+UserID+",DEPT_ID="+DeptID+" WHERE PO_NO='"+PONo+"'");
                            
                            rsSource.next();
                        }
                    }
                    //==============Updation of P.O. Header Completed ================================//
                    
                    
                    //============== Updating P.O. Detail for Unit ID =========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM PO_DETAIL WHERE UNIT_ID=0");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(rsSource.next()) {
                            lblStatus.setText("Updating Detail "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String UnitCode=rsSource.getString("UNIT");
                            String PONo=rsSource.getString("PO_NO");
                            String ItemCode=rsSource.getString("ITEM_CD");
                            String DeliveryDate="";
                            String IndentNo="";
                            int IndentSrNo=0;
                            
                            int UnitID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE TRIM(PARA_ID)='UNIT' AND TRIM(D_COM_PARAMETER_MAST.DESC)='"+UnitCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                UnitID=rsTmp.getInt("PARA_CODE");
                            }
                            
                            rsTmp.close();
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM PO_SCH WHERE TRIM(PO_NO)='"+PONo+"' AND TRIM(ITEM_CD)='"+ItemCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeliveryDate=rsTmp.getString("DDATE");
                            }
                            
                            rsTmp.close();
                            //Updating Indent No. and Indent Sr. No.
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM PO_HEADER WHERE TRIM(PO_NO)='"+PONo+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                IndentNo=rsTmp.getString("INDENTNO");
                            }
                            
                            rsTmp.close();
                            //Finding Sr. No.
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM INDENT_TRANSACTION WHERE TRIM(REF_NO)='"+IndentNo+"' AND TRIM(ITEM_CD)='"+ItemCode+"' ");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                IndentSrNo=rsTmp.getInt("SR_NO");
                            }
                            
                            stSource.executeUpdate("UPDATE PO_DETAIL SET UNIT_ID="+UnitID+",DELIVERY_DATE='"+DeliveryDate+"',INDENT_NO='"+IndentNo+"',INDENT_SR_NO="+IndentSrNo+" WHERE PO_NO='"+PONo+"' AND ITEM_CD='"+ItemCode+"'");
                            
                            //rsSource.updateInt("UNIT_ID",UnitID);
                            //rsSource.updateString("DELIVERY_DATE",DeliveryDate);
                            //rsSource.updateString("INDENT_NO",IndentNo);
                            //rsSource.updateInt("INDENT_SR_NO",IndentSrNo);
                            //rsSource.updateRow();
                            
                            //rsSource.next();
                        }
                    }
                    //===============Completed Updating P.O. Detail ===========================//
                    
                    
                    Counter=0;
                    //-------------Updating the Sr. Nos. of Indent Line ----------------------//
                    stSource=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER");
                    rsSource.first();
                    
                    
                    if(rsSource.getRow()>0) {
                        
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            lblStatus.setText("Updating SrNo "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            String PONo=rsSource.getString("PO_NO");
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM PO_DETAIL WHERE TRIM(PO_NO)='"+PONo+"'");
                            rsTmp.first();
                            
                            int Sr=0;
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    if(rsTmp.getInt("SR_NO")==0) {
                                        rsTmp.updateInt("SR_NO",Sr);
                                        rsTmp.updateRow();
                                    }
                                    rsTmp.next();
                                }
                            }
                            rsTmp = null;
                            rsSource.next();
                        }
                    }
                    //---------------- Sr. No. updation completed ---------------------------//
                    
                    
                    
                    
                    //================ Update the P.O. Tables ======================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER"); //Data of 97
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE PO_NO='1'");
                    
                    stTerms=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTerms=stTerms.executeQuery("SELECT * FROM D_PUR_PO_TERMS WHERE PO_NO='1'");
                    
                    //--------- Removing Old Records -----------//
                    rsSource.first();
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            
                            
                            String PONo=rsSource.getString("PO_NO");
                            
                            stDest.executeUpdate("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            stDest.executeUpdate("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            
                            rsSource.next();
                        }
                    }
                    
                    
                    //stDest.executeUpdate("DELETE FROM D_PUR_PO_HEADER");
                    //stDest.executeUpdate("DELETE FROM D_PUR_PO_DETAIL");
                    //stDest.executeUpdate("DELETE FROM D_PUR_PO_TERMS");
                    
                    Counter=0;
                    //rsSource.relative(5);
                    rsSource.first();
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            
                            lblStatus.setText("Inserting "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            //if(Counter<=3000 && Counter>1872) {
                            //Create Record in Destination Indent Header;
                            // String PONo=rsSource.getString("PO_NO");
                            //stTmp = destConn.createStatement();
                            //rsTmp = stTmp.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"'");
                            //rsTmp.first();
                            
                            //if(rsTmp.getRow()>0) {
                            
                            //}
                            //else {
                            
                            String PONo=rsSource.getString("PO_NO");
                            
                            stDest.executeUpdate("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            stDest.executeUpdate("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            stDest.executeUpdate("DELETE FROM D_PUR_PO_TERMS WHERE PO_NO='"+PONo+"' AND PO_TYPE=3");
                            
                            rsDest.moveToInsertRow();
                            rsDest.updateInt("COMPANY_ID",2);
                            rsDest.updateString("PO_NO",rsSource.getString("PO_NO"));
                            rsDest.updateString("PO_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("PO_DATE")));
                            rsDest.updateInt("PO_TYPE",3);
                            rsDest.updateString("SUPP_ID",rsSource.getString("PARTY_CD"));
                            rsDest.updateString("INQUIRY_NO",rsSource.getString("REF_NO"));
                            rsDest.updateString("INQUIRY_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("EQ_DATE")));
                            rsDest.updateString("QUOTATION_NO",rsSource.getString("QTN_NO"));
                            rsDest.updateString("QUOTATION_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("QTN_DATE")));
                            rsDest.updateInt("BUYER",rsSource.getInt("USER_ID"));
                            rsDest.updateInt("CURRENCY_ID",1);
                            rsDest.updateBoolean("APPROVED",true);
                            rsDest.updateBoolean("REJECTED",false);
                            rsDest.updateString("STATUS","C");
                            rsDest.updateBoolean("CANCELLED",false);
                            rsDest.updateInt("CREATED_BY",0);
                            rsDest.updateString("CREATED_DATE","0000-00-00");
                            rsDest.updateInt("MODIFIED_BY",0);
                            rsDest.updateString("MODIFIED_DATE","0000-00-00");
                            rsDest.updateBoolean("CHANGED",false);
                            rsDest.updateString("CHANGED_DATE","0000-00-00");
                            rsDest.updateString("APPROVED_DATE","0000-00-00");
                            rsDest.updateBoolean("REJECTED",false);
                            rsDest.updateString("REJECTED_DATE","0000-00-00");
                            
                            
                            rsDest.updateString("PAYMENT_TERM",rsSource.getString("TERMS"));
                            rsDest.updateString("FREIGHT_TERM",rsSource.getString("FREIGHTPI"));
                            rsDest.updateString("INSURANCE_TERM",rsSource.getString("INSURANCE"));
                            rsDest.updateString("DESPATCH_TERM",rsSource.getString("OTC").trim()+" "+rsSource.getString("OTCNEW"));
                            rsDest.updateString("PRICE_BASIS_TERM",rsSource.getString("PB_TXT"));
                            rsDest.updateString("PF_TERM",rsSource.getString("PC_TXT")+" "+rsSource.getString("FC_TXT"));
                            rsDest.updateString("OCTROI_TERM",rsSource.getString("OCT_TXT"));
                            
                            if(rsSource.getString("DESTINATN").trim().equals("BARODA")) {
                                rsDest.updateInt("SHIP_ID",1);
                            }
                            else {
                                rsDest.updateInt("SHIP_ID",2);
                            }
                            rsDest.updateString("PTC",rsSource.getString("PTC"));
                            rsDest.updateString("PCODE",rsSource.getString("PCODE"));
                            rsDest.updateString("REMARKS",rsSource.getString("REMARK1").trim()+rsSource.getString("REMARK2").trim()+rsSource.getString("REMARK3").trim()+rsSource.getString("REMARK4").trim());
                            rsDest.updateInt("CR_DAYS",rsSource.getInt("CR_DAYS"));
                            //rsDest.updateDouble("COLUMN_3_PER",rsSource.getDouble("EXCISE"));
                            //rsDest.updateDouble("COLUMN_4_PER",rsSource.getDouble("SALESTAX"));
                            
                            //rsDest.updateString("CR_DAYS",rsSource.getString("CR_DAYS"));
                            
                            
                            String PaymentTerm=rsSource.getString("TERMS");
                            
                            //Generating Payment Term
                            //CREDIT TERMS WITH X DAYS
                            if(rsSource.getString("PTC").trim().equals("06")) {
                                if(Integer.parseInt(rsSource.getString("CR_DAYS").trim())>0) {
                                    PaymentTerm="CREDIT TERMS WITH "+rsSource.getString("CR_DAYS")+" DAYS";
                                }
                                else {
                                    PaymentTerm="CREDIT TERMS WITH 30 DAYS";
                                }
                            }
                            
                            //SIGHT DRAFT/HUNDI WITH X DAYS
                            if(rsSource.getString("PTC").trim().equals("02")) {
                                if(Integer.parseInt(rsSource.getString("CR_DAYS").trim())>0) {
                                    PaymentTerm="SIGHT DRAFT/HUNDI WITH "+rsSource.getString("CR_DAYS")+" DAYS";
                                }
                                else {
                                    PaymentTerm="SIGHT DRAFT/HUNDI WITH 30 DAYS";
                                }
                            }
                            
                            rsDest.updateString("PAYMENT_TERM",PaymentTerm);
                            rsDest.updateString("EXCISE_TERM",rsSource.getString("EXCISE"));
                            rsDest.updateString("ST_TERM",rsSource.getString("SALESTAX"));
                            rsDest.insertRow();
                            
                            
                            
                            //=========== Insert Records in Terms Table ========//
                    /*rsTerms.moveToInsertRow();
                    rsTerms.updateInt("COMPANY_ID",2);
                    rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                    rsTerms.updateInt("PO_TYPE",3);
                    rsTerms.updateInt("SR_NO",1);
                    rsTerms.updateString("TERM_TYPE","P");
                    rsTerms.updateInt("TERM_CODE",(int)EITLERPGLOBAL.formatDNumber(rsSource.getString("PTC")));
                    rsTerms.updateString("TERM_DESC",rsSource.getString("TERMS"));
                    rsTerms.insertRow();
                     
                     
                    if(rsSource.getString("PB_TXT").trim().equals("")||rsSource.getString("PB_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",3);
                        rsTerms.updateInt("SR_NO",2);
                        rsTerms.updateString("TERM_TYPE","D");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("PB_TXT"));
                        rsTerms.insertRow();
                    }
                     
                    rsTerms.moveToInsertRow();
                    rsTerms.updateInt("COMPANY_ID",2);
                    rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                    rsTerms.updateInt("PO_TYPE",3);
                    rsTerms.updateInt("SR_NO",3);
                    rsTerms.updateString("TERM_TYPE","D");
                    rsTerms.updateString("TERM_DESC",rsSource.getString("DLY_SCH"));
                    rsTerms.insertRow();
                     
                     
                    if(rsSource.getString("PC_TXT").trim().equals("")||rsSource.getString("PC_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",3);
                        rsTerms.updateInt("SR_NO",4);
                        rsTerms.updateString("TERM_TYPE","D");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("PC_TXT"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("FC_TXT").trim().equals("")||rsSource.getString("FC_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",3);
                        rsTerms.updateInt("SR_NO",5);
                        rsTerms.updateString("TERM_TYPE","D");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("FC_TXT"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("OCT_TXT").trim().equals("")||rsSource.getString("OCT_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",3);
                        rsTerms.updateInt("SR_NO",6);
                        rsTerms.updateString("TERM_TYPE","D");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("OCT_TXT"));
                        rsTerms.insertRow();
                    }
                     
                    if(rsSource.getString("LCC_TXT").trim().equals("")||rsSource.getString("LCC_TXT").trim().equals("N.A.")) {
                     
                    }
                    else {
                     
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",3);
                        rsTerms.updateInt("SR_NO",7);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("LCC_TXT"));
                        rsTerms.insertRow();
                    }*/
                            
                            for(int s=1;s<=10;s++) {
                                if(!rsSource.getString("SPEC"+Integer.toString(s)).equals("")) {
                                    rsTerms.moveToInsertRow();
                                    rsTerms.updateInt("COMPANY_ID",2);
                                    rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                                    rsTerms.updateInt("PO_TYPE",3);
                                    rsTerms.updateInt("SR_NO",s);
                                    rsTerms.updateString("TERM_TYPE","S");
                                    rsTerms.updateString("TERM_DESC",rsSource.getString("SPEC"+Integer.toString(s)));
                                    rsTerms.insertRow();
                                }
                            }
                            
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement();
                            rsTmp=stTmp.executeQuery("SELECT * FROM PO_DETAIL WHERE PO_NO='"+PONo+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                //Open Line Table
                                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                                rsLine=stLine.executeQuery("SELECT * FROM D_PUR_PO_DETAIL WHERE PO_NO='1'");
                                
                                int Sr=0;
                                
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsLine.moveToInsertRow();
                                    rsLine.updateInt("COMPANY_ID",2);
                                    rsLine.updateString("PO_NO",PONo);
                                    rsLine.updateInt("SR_NO",Sr);
                                    rsLine.updateInt("PO_TYPE",3);
                                    
                                    rsLine.updateString("ITEM_ID",rsTmp.getString("ITEM_CD"));
                                    rsLine.updateString("ITEM_DESC",rsTmp.getString("DESC"));
                                    rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                                    rsLine.updateDouble("QTY",rsTmp.getDouble("TORD_QTY"));
                                    rsLine.updateDouble("RATE",rsTmp.getDouble("PO_RATE"));
                                    rsLine.updateDouble("TOTAL_AMOUNT",rsTmp.getDouble("VALUE"));
                                    rsLine.updateDouble("NET_AMOUNT",rsTmp.getDouble("VALUE"));
                                    rsLine.updateDouble("COLUMN_1_PER",rsTmp.getDouble("DISCOUNT"));
                                    rsLine.updateString("INDENT_NO",rsTmp.getString("INDENT_NO"));
                                    rsLine.updateInt("INDENT_SR_NO",rsTmp.getInt("INDENT_SR_NO"));
                                    rsLine.updateString("DELIVERY_DATE",EITLERPGLOBAL.formatDateDB2(rsTmp.getString("DELIVERY_DATE")));
                                    rsLine.updateDouble("RECD_QTY",rsTmp.getDouble("GI_QTY"));
                                    rsLine.updateDouble("PENDING_QTY",rsTmp.getDouble("TORD_QTY")-rsTmp.getDouble("GI_QTY"));
                                    rsLine.updateInt("DEPT_ID",rsTmp.getInt("DEPT_ID"));
                                    rsLine.insertRow();
                                    
                                    rsTmp.next();
                                }
                            }
                            
                            //  } //PO Found
                            //}//Counter
                            
                            rsSource.next();
                        } //While Loop
                    } //If Condition*/
                    //=====================================================================//
                    
                    lblStatus.setText("Completed");
                    lblStatus.repaint();
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error in PO Import "+e.getMessage());
                }
                
            }
        }.start();
    }
    
    
    private void OpenMIR() {
        Connection tmpConn;
        Statement stTmp,stDoc,stUsers;
        ResultSet rsTmp,rsDoc,rsUsers;
        
        try {
            tmpConn=data.getConn();
            stTmp=tmpConn.createStatement();
            rsTmp=stTmp.executeQuery("SELECT DISTINCT(DOC_NO) FROM D_COM_DOC_DATA WHERE MODULE_ID=5 AND USER_ID=15 AND STATUS='W' ");
            rsTmp.first();
            
            stDoc=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDoc=stDoc.executeQuery("SELECT * FROM D_COM_DOC_DATA");
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    String DocNo=rsTmp.getString("DOC_NO");
                    int DeptID=0;
                    
                    rsUsers=data.getResult("SELECT DEPT_ID FROM D_INV_MIR_DETAIL WHERE MIR_NO='"+DocNo+"'");
                    rsUsers.first();
                    
                    if(rsUsers.getRow()>0) {
                        DeptID=rsUsers.getInt("DEPT_ID");
                    }
                    
                    //Based on Dept, get the list of approvers
                    rsUsers=data.getResult("SELECT * FROM D_COM_DOC_APPROVERS WHERE MODULE_ID=5 AND DEPT_ID="+DeptID+" ORDER BY SR_NO");
                    rsUsers.first();
                    
                    int SrNo=2;
                    
                    if(rsUsers.getRow()>0) {
                        while(!rsUsers.isAfterLast()) {
                            
                            int UserID=rsUsers.getInt("USER_ID");
                            SrNo++;
                            
                            //Insert Records to Doc Data
                            rsDoc.moveToInsertRow();
                            rsDoc.updateInt("COMPANY_ID",2);
                            rsDoc.updateInt("MODULE_ID",5);
                            rsDoc.updateString("DOC_NO",DocNo);
                            rsDoc.updateString("DOC_DATE","0000-00-00");
                            rsDoc.updateInt("USER_ID",UserID);
                            rsDoc.updateString("STATUS","P");
                            rsDoc.updateString("TYPE","A");
                            rsDoc.updateString("REMARKS","");
                            rsDoc.updateInt("SR_NO",SrNo);
                            rsDoc.insertRow();
                            
                            
                            rsUsers.next();
                        }
                    }
                    
                    
                    rsTmp.next();
                }
            }
            
        }
        catch(Exception e) {
            
        }
        
    }
    
    private void StartMIR() {
        new Thread()
        {
            
        public void run()
        {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsMIR;
        String strSQL="";
        
        try {
            srcConn=data.getConn(sdmlURL);
            destConn=data.getConn();
            
            
            /*stDest=destConn.createStatement();
            rsDest=stDest.executeQuery("SELECT MIR_NO FROM D_INV_MIR_HEADER WHERE MIR_DATE>='"+CutOffDate+"'");
            rsDest.first();
             
            if(rsDest.getRow()>0) {
                while(!rsDest.isAfterLast()) {
                    String MIRNo=rsDest.getString("MIR_NO");
             
                    data.Execute("DELETE FROM D_INV_MIR_HEADER WHERE MIR_NO='"+MIRNo+"'");
                    data.Execute("DELETE FROM D_INV_MIR_DETAIL WHERE MIR_NO='"+MIRNo+"'");
                    data.Execute("DELETE FROM D_INV_MIR_LOT WHERE MIR_NO='"+MIRNo+"'");
             
                    rsDest.next();
                }
             
            }*/
            
            /*
            
            //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM MIR_HEADER");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    String DeptCode=rsSource.getString("DEPT");
                    String TransportCode=rsSource.getString("TRANSPORT");
                    String PendingCode=rsSource.getString("PEND_CODE");
                    
                    String MIRNo=rsSource.getString("IN_NO");
        
                    lblStatus.setText("Updating for Dept "+MIRNo);
                    
//                    data.Execute("DELETE FROM D_INV_MIR_HEADER WHERE MIR_NO='"+MIRNo+"'");
//                    data.Execute("DELETE FROM D_INV_MIR_DETAIL WHERE MIR_NO='"+MIRNo+"'");
//                    data.Execute("DELETE FROM D_INV_MIR_LOT WHERE MIR_NO='"+MIRNo+"'");
//                    
//                    data.Execute("DELETE FROM D_INV_MIR_HEADER_H WHERE MIR_NO='"+MIRNo+"'");
//                    data.Execute("DELETE FROM D_INV_MIR_DETAIL_H WHERE MIR_NO='"+MIRNo+"'");
//                    data.Execute("DELETE FROM D_INV_MIR_LOT_H WHERE MIR_NO='"+MIRNo+"'");
//                    
//                    //Delete from Approval Flow Also
//                    data.Execute("DELETE FROM D_COM_DOC_DATA WHERE MODULE_ID=5 AND DOC_NO='"+MIRNo+"'");
                    
                    
                    int DeptID=0;
                    int TransportID=0;
                    int PendingID=0;
                    
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        DeptID=rsTmp.getInt("DEPT_ID");
                    }
                    
                    //Find out Transport ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='TRANSPORT' AND D_COM_PARAMETER_MAST.DESC=\""+TransportCode.trim()+"\"");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        TransportID=rsTmp.getInt("PARA_CODE");
                    }
                    
                    
                    //Find out GRN Pending Reason ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='GRN_REASON' AND D_COM_PARAMETER_MAST.DESC=\""+PendingCode.trim()+"\"");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        PendingID=rsTmp.getInt("PARA_CODE");
                    }
                    
                    
                    rsSource.updateInt("DEPT_ID",DeptID);
                    rsSource.updateInt("TRANSPORT_ID",TransportID);
                    rsSource.updateInt("PENDING_ID",PendingID);
                    rsSource.updateRow();
                    
                    rsSource.next();
                }
            }
            //==============Updation of P.O. Header Completed ================================//
            
            
            
            //============== Updating MIR Detail for Unit ID =========================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM MIR_DETAIL");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    String UnitCode=rsSource.getString("SU");
                    String MIRNo=rsSource.getString("IN_NO");
                    String ItemCode=rsSource.getString("ITEM_CD");
                    
                    lblStatus.setText("Updating for PO "+MIRNo);
                    
                    int POSrNo=0;
                    int UnitID=0;
                    
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC='"+UnitCode+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        UnitID=rsTmp.getInt("PARA_CODE");
                    }
                    
                    
                    //Updating Indent No. and Indent Sr. No.
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM PO_DETAIL WHERE PO_NO='"+rsSource.getString("PO_NO").trim()+"' AND ITEM_CD='"+ItemCode+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        POSrNo=rsTmp.getInt("SR_NO");
                    }
                    
                    
                    rsSource.updateInt("UNIT_ID",UnitID);
                    rsSource.updateInt("PO_SR_NO",POSrNo);
                    rsSource.updateRow();
                    rsSource.next();
                }
            }
            //===============Completed Updating P.O. Detail ===========================//
            
            
            
            //-------------Updating the Sr. Nos. of Indent Line ----------------------//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM MIR_HEADER");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                
                while(!rsSource.isAfterLast()) {
                    String MIRNo=rsSource.getString("IN_NO");
                    
                    lblStatus.setText("Updating for Sr. No. "+MIRNo);
                    
                    //Create Records in Line
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM MIR_DETAIL WHERE IN_NO='"+MIRNo+"'");
                    rsTmp.first();
                    
                    int Sr=0;
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {
                            Sr++;
                            rsTmp.updateInt("SR_NO",Sr);
                            rsTmp.updateRow();
                            rsTmp.next();
                        }
                    }
                    
                    rsSource.next();
                }
            }
            //---------------- Sr. No. updation completed ---------------------------//
            
            
            
            */
            
            //================ Update the MIR Tables ======================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM MIR_HEADER");
            rsSource.first();
            
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_INV_MIR_HEADER WHERE MIR_NO='111'");
            
            
            //stDest.executeUpdate("DELETE FROM D_INV_MIR_HEADER");
            //stDest.executeUpdate("DELETE FROM D_INV_MIR_DETAIL");
            
            Counter=0;
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    Counter++;
                    
                    //Create Record in Destination MIR Header;
                    String MIRNo=rsSource.getString("IN_NO");
                    lblStatus.setText("Inserting MIR "+MIRNo);
                    lblStatus.repaint();
                    
                    rsMIR=data.getResult("SELECT MIR_NO FROM D_INV_MIR_HEADER WHERE MIR_NO='"+MIRNo+"'");
                    rsMIR.first();
                    
                    if(rsMIR.getRow()>0)
                    {
                     
                        System.out.println("Skipping MIR "+MIRNo);
                    }
                    else
                    {
                    
                    rsDest.moveToInsertRow();
                    rsDest.updateInt("COMPANY_ID",3);
                    rsDest.updateString("MIR_NO",rsSource.getString("IN_NO"));
                    rsDest.updateString("MIR_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("DATE")));
                    rsDest.updateInt("MIR_TYPE",1);
                    rsDest.updateString("SUPP_ID",rsSource.getString("PARTY_CD"));
                    
                    if(rsSource.getString("REFA").trim().equals("IC")) {
                        rsDest.updateBoolean("IMPORT_CONCESS",true);
                    }
                    else {
                        rsDest.updateBoolean("IMPORT_CONCESS",false);
                    }
                    rsDest.updateString("REFA",rsSource.getString("REFA"));
                    rsDest.updateString("GATEPASS_NO",rsSource.getString("GPNO"));
                    rsDest.updateInt("FOR_STORE",rsSource.getInt("DEPT_ID"));
                    rsDest.updateString("CHALAN_NO",rsSource.getString("CHALN_NO"));
                    rsDest.updateString("CHALAN_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("CHAL_DATE")));
                    rsDest.updateString("INVOICE_NO",rsSource.getString("INVOICE"));
                    rsDest.updateString("INVOICE_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("INV_DATE")));
                    rsDest.updateDouble("INVOICE_AMOUNT",rsSource.getDouble("INV_AMT"));
                    rsDest.updateInt("TRANSPORTER",rsSource.getInt("TRANSPORT_ID"));
                    rsDest.updateString("LR_NO",rsSource.getString("LRNO"));
                    rsDest.updateString("LR_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("LRDATE")));
                    rsDest.updateDouble("COLUMN_6_AMT",rsSource.getDouble("OCTROI"));
                    rsDest.updateDouble("COLUMN_5_AMT",rsSource.getDouble("FRAIGHT"));
                    rsDest.updateBoolean("APPROVED",true);
                    rsDest.updateString("OPEN_STATUS","C");
                    rsDest.updateBoolean("CANCELLED",false);
                    rsDest.updateInt("CREATED_BY",0);
                    rsDest.updateString("CREATED_DATE","0000-00-00");
                    rsDest.updateInt("MODIFIED_BY",0);
                    rsDest.updateString("MODIFIED_DATE","0000-00-00");
                    rsDest.updateBoolean("CHANGED",false);
                    rsDest.updateString("CHANGED_DATE","0000-00-00");
                    rsDest.updateString("APPROVED_DATE","0000-00-00");
                    rsDest.updateBoolean("REJECTED",false);
                    rsDest.updateString("REJECTED_DATE","0000-00-00");
                    
                    rsDest.insertRow();
                    
                    
                    int DeptID=rsSource.getInt("DEPT_ID");
                    
                    //Create Records in Line
                    stTmp=srcConn.createStatement();
                    rsTmp=stTmp.executeQuery("SELECT * FROM MIR_DETAIL WHERE IN_NO='"+MIRNo+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        //Open Line Table
                        stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        rsLine=stLine.executeQuery("SELECT * FROM D_INV_MIR_DETAIL WHERE MIR_NO='111'");
                        
                        int Sr=0;
                        
                        while(!rsTmp.isAfterLast()) {
                            Sr++;
                            rsLine.moveToInsertRow();
                            rsLine.updateInt("COMPANY_ID",3);
                            rsLine.updateString("MIR_NO",MIRNo);
                            rsLine.updateInt("MIR_TYPE",1);
                            rsLine.updateInt("SR_NO",Sr);
                            rsLine.updateString("ITEM_ID",rsTmp.getString("ITEM_CD"));
                            rsLine.updateString("ITEM_EXTRA_DESC",rsTmp.getString("DESC"));
                            rsLine.updateString("BOE_NO",rsTmp.getString("BOE_NO"));
                            rsLine.updateString("BOE_SR_NO",Integer.toString(rsTmp.getInt("BOE_SR_NO")));
                            rsLine.updateString("REMARKS",rsTmp.getString("DESC"));
                            rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                            rsLine.updateDouble("QTY",rsTmp.getDouble("RC_QTY")-rsTmp.getDouble("RJ_QTY"));
                            rsLine.updateDouble("PO_QTY",rsTmp.getDouble("PO_QTY"));
                            rsLine.updateDouble("RECEIVED_QTY",rsTmp.getDouble("RC_QTY"));
                            rsLine.updateDouble("BALANCE_PO_QTY",rsTmp.getDouble("BL_QTY"));
                            rsLine.updateDouble("REJECTED_QTY",rsTmp.getDouble("RJ_QTY"));
                            rsLine.updateDouble("GROSS_QTY",rsTmp.getDouble("WEIGHT"));
                            rsLine.updateDouble("RATE",rsTmp.getDouble("DM_RATE"));
                            rsLine.updateDouble("LANDED_RATE",rsTmp.getDouble("FRATE"));
                            rsLine.updateDouble("TOTAL_AMOUNT",rsTmp.getDouble("RC_QTY")*rsTmp.getDouble("DM_RATE"));
                            rsLine.updateDouble("NET_AMOUNT",rsTmp.getDouble("RC_QTY")*rsTmp.getDouble("FRATE"));
                            rsLine.updateDouble("COLUMN_2_AMT",(rsTmp.getDouble("FRATE")-rsTmp.getDouble("DM_RATE"))*rsTmp.getDouble("RC_QTY"));
                            rsLine.updateString("PO_NO",rsTmp.getString("PO_NO"));
                            rsLine.updateInt("PO_SR_NO",rsTmp.getInt("PO_SR_NO"));
                            rsLine.updateDouble("GRN_RECD_QTY",rsTmp.getDouble("GI_QTY"));
                            rsLine.updateDouble("CHALAN_QTY",rsTmp.getDouble("CH_QTY"));
                            rsLine.updateInt("DEPT_ID",DeptID);
                            
                            if(rsTmp.getString("BAR_FLG").trim().equals("")||rsTmp.getString("BAR_FLG").trim().equals("3")) {
                                rsLine.updateString("BARCODE_TYPE","N");
                            }
                            
                            if(rsTmp.getString("BAR_FLG").trim().equals("1")) {
                                rsLine.updateString("BARCODE_TYPE","S");
                            }
                            
                            if(rsTmp.getString("BAR_FLG").trim().equals("2")) {
                                rsLine.updateString("BARCODE_TYPE","I");
                            }
                            rsLine.insertRow();
                            rsTmp.next();
                        }
                    }
                   
                    }
                    rsSource.next();
                }
            }
            //=====================================================================//
            
            
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null," Error in MIR Import "+e.getMessage());
            e.printStackTrace();
        }
        
        };
        }.start();
    }
    
    
    
    
    private void UpdatePONoInGRN() {
        
        
        new Thread() {
            
            public void run() {
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    
                    //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
            /*stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT REF_NO,ITEM_CD,PO_NO FROM GRN_DETAIL WHERE PO_NO<>''");
            rsSource.first();
             
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
             
                    lblStatus.setText("Updating GRN"+rsSource.getRow());
                    lblStatus.repaint();
             
                    String ItemID=rsSource.getString("ITEM_CD");
                    String PONo=rsSource.getString("PO_NO");
                    String GRNNo=rsSource.getString("REF_NO");
             
             
                    //Update Existing GRN with PO No.
                    stDest=destConn.createStatement();
                    stDest.executeUpdate("UPDATE D_INV_GRN_DETAIL SET PO_NO='"+PONo+"' WHERE GRN_NO='"+GRNNo+"' AND ITEM_ID='"+ItemID+"'");
             
             
                    rsSource.next();
                }
            }*/
                    //==============Updation of P.O. Header Completed ================================//
                    
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT PO_NO,MIR_NO,ITEM_ID FROM D_INV_MIR_DETAIL WHERE MIR_NO<>'' AND PO_NO<>''");
                    rsDest.first();
                    
                    if(rsDest.getRow()>0) {
                        while(!rsDest.isAfterLast()) {
                            
                            lblStatus.setText("Updating MIR "+rsDest.getRow());
                            lblStatus.repaint();
                            
                            String ItemID=rsDest.getString("ITEM_ID");
                            String PONo=rsDest.getString("PO_NO");
                            String MIRNo=rsDest.getString("MIR_NO");
                            
                            
                            //Update Existing GRN with PO No.
                            data.Execute("UPDATE D_INV_MIR_DETAIL SET PO_NO='"+PONo+"' WHERE MIR_NO='"+MIRNo+"' AND ITEM_ID='"+ItemID+"'");
                            
                            rsDest.next();
                        }
                    }
                    
                    
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error in GRN Updation "+e.getMessage());
                }
            };
        }.start();
        
    }
    
    private void StartGRN() {
        
        new Thread() {
            
            public void run() {
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms,stPO;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsPO,rsGRN;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    
                    /*stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE GRN_DATE>='"+CutOffDate+"'");
                    rsDest.first();
                     
                    if(rsDest.getRow()>0) {
                        while(!rsDest.isAfterLast()) {
                            String GRNNo=rsDest.getString("GRN_NO");
                     
                            data.Execute("DELETE FROM D_INV_GRN_HEADER WHERE GRN_NO='"+GRNNo+"'");
                            data.Execute("DELETE FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"'");
                            data.Execute("DELETE FROM D_INV_GRN_LOT WHERE GRN_NO='"+GRNNo+"'");
                     
                            rsDest.next();
                        }
                    }*/
                    
                    
                    //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM GRN_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating GRN "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String DeptCode=rsSource.getString("DEPT");
                            String TransportCode=rsSource.getString("TRANSPORT");
                            String PendingCode=rsSource.getString("PEND_CODE");
                            
                            String GRNNo=rsSource.getString("REF_NO");
                            
//                            data.Execute("DELETE FROM D_INV_GRN_HEADER WHERE GRN_NO='"+GRNNo+"'");
//                            data.Execute("DELETE FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"'");
//                            data.Execute("DELETE FROM D_INV_GRN_LOT WHERE GRN_NO='"+GRNNo+"'");
//                            
//                            
//                            data.Execute("DELETE FROM D_INV_GRN_HEADER_H WHERE GRN_NO='"+GRNNo+"'");
//                            data.Execute("DELETE FROM D_INV_GRN_DETAIL_H WHERE GRN_NO='"+GRNNo+"'");
//                            data.Execute("DELETE FROM D_INV_GRN_LOT_H WHERE GRN_NO='"+GRNNo+"'");
//                            
//                            data.Execute("DELETE FROM D_COM_DOC_DATA WHERE MODULE_ID=7 AND DOC_NO='"+GRNNo+"'");
                            
                            
                            int DeptID=0;
                            int TransportID=0;
                            int PendingID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT=\""+DeptCode+"\"");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptID=rsTmp.getInt("DEPT_ID");
                            }
                            else {
                                DeptID=0;
                            }
                            
                            
                            rsSource.updateInt("DEPT_ID",DeptID);
                            rsSource.updateRow();
                            
                            rsSource.next();
                        }
                    }
                    //==============Updation of P.O. Header Completed ================================//
                    
                    
                    
                    
                    //============== Updating MIR Detail for Unit ID =========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM GRN_DETAIL ");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            String UnitCode=rsSource.getString("SU");
                            String GRNNo=rsSource.getString("REF_NO");
                            String ItemCode=rsSource.getString("ITEM_CD");
                            
                            int MIRSrNo=0;
                            int UnitID=0;
                            int RejectedCode=rsSource.getInt("RJCODE");
                            
                            String RejectionReason=Integer.toString(RejectedCode);
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC='"+UnitCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                UnitID=rsTmp.getInt("PARA_CODE");
                            }
                            
                            
                            //Updating Indent No. and Indent Sr. No.
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM MIR_DETAIL WHERE IN_NO='"+rsSource.getString("IN_NO").trim()+"' AND ITEM_CD='"+ItemCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                MIRSrNo=rsTmp.getInt("SR_NO");
                            }
                            
                            
                            rsSource.updateInt("UNIT_ID",UnitID);
                            rsSource.updateInt("MIR_SR_NO",MIRSrNo);
                            rsSource.updateString("REJECTED_REASON",RejectionReason);
                            rsSource.updateRow();
                            rsSource.next();
                        }
                    }
                    //===============Completed Updating P.O. Detail ===========================//
                    
                    
                    
                    //-------------Updating the Sr. Nos. of Indent Line ----------------------//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM GRN_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        
                        while(!rsSource.isAfterLast()) {
                            String GRNNo=rsSource.getString("REF_NO");
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM GRN_DETAIL WHERE REF_NO='"+GRNNo+"'");
                            rsTmp.first();
                            
                            int Sr=0;
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsTmp.updateInt("SR_NO",Sr);
                                    rsTmp.updateRow();
                                    rsTmp.next();
                                }
                            }
                            
                            rsSource.next();
                        }
                    }
                    //---------------- Sr. No. updation completed ---------------------------//
                    
                    
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM GRN_HEADER");
                    rsSource.setFetchSize(1);
                    
                    
                    rsSource.first();
                    
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_GRN_HEADER WHERE GRN_NO='A123'");
                    rsDest.setFetchSize(1);
                    //JOptionPane.showMessageDialog(null,stSource.getMaxRows());
                    
                    //stDest.executeUpdate("DELETE FROM D_INV_GRN_HEADER");
                    //stDest.executeUpdate("DELETE FROM D_INV_GRN_DETAIL");
                    
                    Counter=0;
                    
                    
                    if(rsSource.getRow()>0) {
                        
                        System.gc();
                        
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            
                            lblStatus.setText("Inserting "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            //Create Record in Destination MIR Header;
                            String GRNNo=rsSource.getString("REF_NO");
                
                            rsGRN=data.getResult("SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE GRN_NO='"+GRNNo+"'");
                            rsGRN.first();
                            
                            if(rsGRN.getRow()>0)
                            {
                             System.out.println("Skipping GRN "+GRNNo);   
                            }
                            
                            else
                            {
                            
                            rsDest.moveToInsertRow();
                            rsDest.updateInt("COMPANY_ID",2);
                            rsDest.updateString("GRN_NO",rsSource.getString("REF_NO"));
                            rsDest.updateString("GRN_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("DATE")));
                            rsDest.updateInt("GRN_TYPE",1);
                            rsDest.updateString("SUPP_ID",rsSource.getString("PARTY_CD"));
                            
                            if(rsSource.getString("REFA").trim().equals("IC")) {
                                rsDest.updateBoolean("IMPORT_CONCESS",true);
                            }
                            else {
                                rsDest.updateBoolean("IMPORT_CONCESS",false);
                            }
                            rsDest.updateString("REFA",rsSource.getString("REFA"));
                            rsDest.updateString("GATEPASS_NO",rsSource.getString("GPNO"));
                            rsDest.updateInt("FOR_STORE",rsSource.getInt("DEPT_ID"));
                            rsDest.updateString("CHALAN_NO",rsSource.getString("CHALN_NO"));
                            rsDest.updateString("CHALAN_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("CHAL_DATE")));
                            rsDest.updateString("INVOICE_NO",rsSource.getString("INVOICE"));
                            rsDest.updateString("INVOICE_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("INV_DATE")));
                            rsDest.updateDouble("INVOICE_AMOUNT",rsSource.getDouble("INV_AMT"));
                            rsDest.updateInt("TRANSPORTER",rsSource.getInt("TRANSPORT_ID"));
                            rsDest.updateString("LR_NO",rsSource.getString("LRNO"));
                            rsDest.updateString("LR_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("LRDATE")));
                            rsDest.updateDouble("COLUMN_6_AMT",rsSource.getDouble("OCTROI"));
                            rsDest.updateDouble("COLUMN_5_AMT",rsSource.getDouble("FRAIGHT"));
                            rsDest.updateBoolean("APPROVED",true);
                            rsDest.updateString("OPEN_STATUS","C");
                            rsDest.updateBoolean("CANCELLED",false);
                            rsDest.updateInt("CREATED_BY",0);
                            rsDest.updateString("CREATED_DATE","0000-00-00");
                            rsDest.updateInt("MODIFIED_BY",0);
                            rsDest.updateString("MODIFIED_DATE","0000-00-00");
                            rsDest.updateBoolean("CHANGED",false);
                            rsDest.updateString("CHANGED_DATE","0000-00-00");
                            rsDest.updateString("APPROVED_DATE","0000-00-00");
                            rsDest.updateBoolean("REJECTED",false);
                            rsDest.updateString("REJECTED_DATE","0000-00-00");
                            rsDest.insertRow();
                            
                            
                            int DeptID=rsSource.getInt("DEPT_ID");
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement();
                            rsTmp=stTmp.executeQuery("SELECT * FROM GRN_DETAIL WHERE REF_NO='"+GRNNo+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                //Open Line Table
                                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                                rsLine=stLine.executeQuery("SELECT * FROM D_INV_GRN_DETAIL WHERE GRN_NO='E12322'");
                                
                                int Sr=0;
                                
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsLine.moveToInsertRow();
                                    rsLine.updateInt("COMPANY_ID",2);
                                    rsLine.updateString("GRN_NO",GRNNo);
                                    rsLine.updateInt("SR_NO",Sr);
                                    rsLine.updateInt("GRN_TYPE",1);
                                    rsLine.updateString("ITEM_ID",rsTmp.getString("ITEM_CD"));
                                    rsLine.updateString("ITEM_EXTRA_DESC",rsTmp.getString("DESC"));
                                    rsLine.updateString("REMARKS",rsTmp.getString("DESC"));
                                    rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                                    rsLine.updateDouble("QTY",rsTmp.getDouble("GI_QTY"));
                                    //rsLine.updateDouble("GROSS_QTY",rsTmp.getDouble("WEIGHT"));
                                    rsLine.updateDouble("REJECTED_QTY",rsTmp.getDouble("RJ_QTY"));
                                    rsLine.updateDouble("RATE",rsTmp.getDouble("DM_RATE"));
                                    rsLine.updateDouble("LANDED_RATE",rsTmp.getDouble("FRATE"));
                                    rsLine.updateDouble("TOTAL_AMOUNT",rsTmp.getDouble("GI_QTY")*rsTmp.getDouble("DM_RATE"));
                                    rsLine.updateDouble("NET_AMOUNT",rsTmp.getDouble("GI_VAL"));
                                    rsLine.updateDouble("COLUMN_2_AMT",(rsTmp.getDouble("FRATE")-rsTmp.getDouble("DM_RATE"))*rsTmp.getDouble("GI_QTY"));
                                    rsLine.updateString("MIR_NO",rsTmp.getString("IN_NO"));
                                    rsLine.updateInt("MIR_SR_NO",rsTmp.getInt("MIR_SR_NO"));
                                    rsLine.updateDouble("CHALAN_QTY",rsTmp.getDouble("CH_QTY"));
                                    rsLine.updateDouble("PO_QTY",rsTmp.getDouble("PO_QTY"));
                                    rsLine.updateDouble("BALANCE_PO_QTY",rsTmp.getDouble("BL_QTY"));
                                    rsLine.updateDouble("RECEIVED_QTY",rsTmp.getDouble("RC_QTY"));
                                    rsLine.updateInt("DEPT_ID",DeptID);
                                    
                                    //Get the PO No.
                                    rsLine.updateString("PO_NO",rsTmp.getString("PO_NO"));
                                    
                                    String grnItemID=rsTmp.getString("ITEM_CD");
                                    
                                    stPO=destConn.createStatement();
                                    rsPO= stPO.executeQuery("SELECT SR_NO FROM D_PUR_PO_DETAIL WHERE PO_NO='"+rsTmp.getString("PO_NO")+"' AND ITEM_ID='"+grnItemID+"'");
                                    rsPO.first();
                                    
                                    if(rsPO.getRow()>0) {
                                        rsLine.updateInt("PO_SR_NO",rsPO.getInt("SR_NO"));
                                    }
                                    
                                    
                                    rsLine.insertRow();
                                    rsTmp.next();
                                }
                            }
                            
                            }
                            rsSource.next();
                        }
                    }
                    //=====================================================================//
                    
                    lblStatus.setText("Completed");
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error in GRN Import "+e.getMessage());
                    e.printStackTrace();
                }
                
            };
        }.start();
        
    }
    
    
    
    
    
    private void StartGRNUpdate() {
        
        new Thread() {
            
            public void run() {
                
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT IN_NO,REF_NO FROM GRN_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            String GRNNo=rsSource.getString("REF_NO");
                            String MIRNo=rsSource.getString("IN_NO");
                            
                            data.Execute("UPDATE D_INV_GRN_DETAIL SET MIR_NO='"+MIRNo+"' WHERE GRN_NO='"+GRNNo+"'");
                            rsSource.next();
                        }
                    }
                    //==============Updation of P.O. Header Completed ================================//
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error in GRN Import "+e.getMessage());
                }
            }
        }.start();
        
    }
    
    
    private void StartGRNDeptUpdate() {
        
        new Thread() {
            
            public void run() {
                
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT IN_NO,REF_NO,DEPT_ID FROM GRN_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            String GRNNo=rsSource.getString("REF_NO");
                            String MIRNo=rsSource.getString("IN_NO");
                            
                            int DeptID=rsSource.getInt("DEPT_ID");
                            
                            data.Execute("UPDATE D_INV_GRN_DETAIL SET DEPT_ID="+DeptID+" WHERE GRN_NO='"+GRNNo+"'");
                            data.Execute("UPDATE D_INV_MIR_DETAIL SET DEPT_ID="+DeptID+" WHERE MIR_NO='"+MIRNo+"'");
                            
                            rsSource.next();
                        }
                    }
                    //==============Updation of P.O. Header Completed ================================//
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error in GRN Import "+e.getMessage());
                }
            }
        }.start();
        
    }
    
    private void StartIssue() {
        
        new Thread(){
            public void run() {
                
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsIssue;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    
                    /*stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT ISSUE_NO FROM D_INV_ISSUE_HEADER WHERE ISSUE_DATE>='"+CutOffDate+"'");
                    rsDest.first();
                     
                    if(rsDest.getRow()>0) {
                        while(!rsDest.isAfterLast()) {
                            String IssueNo=rsDest.getString("ISSUE_NO");
                     
                            data.Execute("DELETE FROM D_INV_ISSUE_HEADER WHERE ISSUE_NO='"+IssueNo+"'");
                            data.Execute("DELETE FROM D_INV_ISSUE_DETAIL WHERE ISSUE_NO='"+IssueNo+"'");
                     
                            rsDest.next();
                        }
                    }*/
                    
                    //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM ISSUE_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating Header "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String IssueNo=rsSource.getString("REF_NO");
                            
//                            data.Execute("DELETE FROM D_INV_ISSUE_HEADER WHERE ISSUE_NO='"+IssueNo+"'");
//                            data.Execute("DELETE FROM D_INV_ISSUE_DETAIL WHERE ISSUE_NO='"+IssueNo+"'");
//                            data.Execute("DELETE FROM D_INV_ISSUE_DETAIL_DETAIL WHERE ISSUE_NO='"+IssueNo+"'");
//                            
//                            data.Execute("DELETE FROM D_INV_ISSUE_HEADER_H WHERE ISSUE_NO='"+IssueNo+"'");
//                            data.Execute("DELETE FROM D_INV_ISSUE_DETAIL_H WHERE ISSUE_NO='"+IssueNo+"'");
//                            data.Execute("DELETE FROM D_INV_ISSUE_DETAIL_DETAIL_H WHERE ISSUE_NO='"+IssueNo+"'");
//                            
//                            data.Execute("DELETE FROM D_COM_DOC_DATA WHERE MODULE_ID=14 AND DOC_NO='"+IssueNo+"'");
                            
                            
                            int DeptID=0;
                            String DeptCode="";
                            
                            String CostC=rsSource.getString("COSTC");
                            
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM COSTC WHERE COSTC='"+CostC.trim()+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptCode=rsTmp.getString("DEPT");
                            }
                            
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptID=rsTmp.getInt("DEPT_ID");
                            }
                            
                            
                            stSource.executeUpdate("UPDATE ISSUE_HEADER SET DEPT_ID="+DeptID+" WHERE REF_NO='"+rsSource.getString("REF_NO")+"'");
                            
                            //rsSource.updateInt("DEPT_ID",DeptID);
                            //rsSource.updateRow();
                            
                            rsSource.next();
                        }
                    }
                    //==============Updation of P.O. Header Completed ================================//
                    
                    
                    
                    
                    //============== Updating Issue Detail for Unit ID =========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM ISSUE_DETAIL WHERE UNIT_ID=0");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating Detail for Unit etc. "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String UnitCode=rsSource.getString("SU");
                            int UnitID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC='"+UnitCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                UnitID=rsTmp.getInt("PARA_CODE");
                            }
                            
                            
                            int DeptID=0;
                            String DeptCode="";
                            
                            String CostC=rsSource.getString("COSTC");
                            
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM COSTC WHERE COSTC='"+CostC.trim()+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptCode=rsTmp.getString("DEPT");
                            }
                            
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptID=rsTmp.getInt("DEPT_ID");
                            }
                            
                            
                            stSource.executeUpdate("UPDATE ISSUE_DETAIL SET UNIT_ID="+UnitID+",DEPT_ID="+DeptID+" WHERE REF_NO='"+rsSource.getString("REF_NO")+"' AND ITEM_CD='"+rsSource.getString("ITEM_CD")+"'");
                            
                            
                            //rsSource.updateInt("UNIT_ID",UnitID);
                            //rsSource.updateRow();
                            rsSource.next();
                        }
                    }
                    //===============Completed Updating P.O. Detail ===========================//
                    
                    
                    
                    //-------------Updating the Sr. Nos. of Indent Line ----------------------//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM ISSUE_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating Sr. No."+rsSource.getRow());
                            lblStatus.repaint();
                            String IssueNo=rsSource.getString("REF_NO");
                            
//                            data.Execute("DELETE FROM D_INV_ISSUE_HEADER WHERE ISSUE_NO='"+IssueNo+"'");
//                            data.Execute("DELETE FROM D_INV_ISSUE_DETAIL WHERE ISSUE_NO='"+IssueNo+"'");
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM ISSUE_DETAIL WHERE REF_NO='"+IssueNo+"'");
                            rsTmp.first();
                            
                            int Sr=0;
                            
                            if(rsTmp.getRow()>0) {
                                while(!rsTmp.isAfterLast()) {
                                    
                                    Sr++;
                                    rsTmp.updateInt("SR_NO",Sr);
                                    rsTmp.updateRow();
                                    rsTmp.next();
                                }
                            }
                            
                            rsSource.next();
                        }
                    }
                    //---------------- Sr. No. updation completed ---------------------------//
                    
                    
                    //================ Update the MIR Tables ======================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM ISSUE_HEADER");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_ISSUE_HEADER WHERE ISSUE_NO='0000' ");
                    
                    
                    //stDest.executeUpdate("DELETE FROM D_INV_ISSUE_HEADER");
                    //stDest.executeUpdate("DELETE FROM D_INV_ISSUE_DETAIL");
                    
                    Counter=0;
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            
                            
                            lblStatus.setText("Now Inserting "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            //Create Record in Destination MIR Header;
                            String IssueNo=rsSource.getString("REF_NO");
                            
                            
                            rsIssue=data.getResult("SELECT ISSUE_NO FROM D_INV_ISSUE_HEADER WHERE ISSUE_NO='"+IssueNo+"'");
                            rsIssue.first();
                            
                            if(rsIssue.getRow()>0)
                            {
                             System.out.println("Skipping Issue "+IssueNo);   
                            }
                            else
                            {
                            
                            rsDest.moveToInsertRow();
                            rsDest.updateInt("COMPANY_ID",2);
                            rsDest.updateString("ISSUE_NO",rsSource.getString("REF_NO"));
                            rsDest.updateString("ISSUE_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("DATE")));
                            rsDest.updateInt("FOR_DEPT_ID",rsSource.getInt("DEPT_ID"));
                            rsDest.updateString("FOR_STORE","G");
                            rsDest.updateString("ISSUE_TYPE","GEN");
                            rsDest.updateString("PURPOSE",rsSource.getString("PURPOSE"));
                            rsDest.updateBoolean("APPROVED",true);
                            rsDest.updateString("STATUS","C");
                            rsDest.updateBoolean("CANCELED",false);
                            rsDest.insertRow();
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement();
                            rsTmp=stTmp.executeQuery("SELECT * FROM ISSUE_DETAIL WHERE REF_NO='"+IssueNo+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                //Open Line Table
                                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                                rsLine=stLine.executeQuery("SELECT * FROM D_INV_ISSUE_DETAIL WHERE ISSUE_NO='0000' ");
                                
                                
                                int Sr=0;
                                
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsLine.moveToInsertRow();
                                    rsLine.updateInt("COMPANY_ID",2);
                                    rsLine.updateString("ISSUE_NO",IssueNo);
                                    rsLine.updateInt("SR_NO",Sr);
                                    rsLine.updateString("ITEM_CODE",rsTmp.getString("ITEM_CD"));
                                    rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                                    rsLine.updateInt("DEPT_ID",rsTmp.getInt("DEPT_ID"));
                                    
                                    if(EITLERPGLOBAL.IsNumber(rsTmp.getString("COSTC"))) {
                                        rsLine.updateInt("COST_CENTER_ID",(int)Double.parseDouble(rsTmp.getString("COSTC")));
                                    }
                                    else {
                                        rsLine.updateInt("COST_CENTER_ID",0);
                                    }
                                    rsLine.updateDouble("QTY",rsTmp.getDouble("IS_QTY"));
                                    rsLine.updateDouble("QTY_REQD",rsTmp.getDouble("REQ_QTY"));
                                    rsLine.updateDouble("ZERO_VAL_QTY",rsTmp.getDouble("IS_Z_QTY"));
                                    rsLine.updateDouble("ISSUE_VALUE",rsTmp.getDouble("IS_VAL"));
                                    rsLine.updateString("REQ_NO",rsTmp.getString("REQU_NO"));
                                    rsLine.insertRow();
                                    rsTmp.next();
                                }
                            }
                            
                            }
                            rsSource.next();
                        }
                    }
                    //=====================================================================//
                    
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null," Error in Issue Import "+e.getMessage());
                    e.printStackTrace();
                }
            }
        }.start();
        
    }
    
    
    
    private void StartREFA() {
        
        new Thread(){
            public void run() {
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM MIR_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating MIR "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            stDest=destConn.createStatement();
                            stDest.executeUpdate("UPDATE D_INV_MIR_HEADER SET GATEPASS_NO='"+rsSource.getString("GPNO")+"' WHERE MIR_NO='"+rsSource.getString("IN_NO")+"'");
                            
                            rsSource.next();
                        }
                    }
                    
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error  "+e.getMessage());
                }
            }
        }.start();
        
    }
    
    
    
    private void StartBOE() {
        
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
        String strSQL="";
        
        try {
            srcConn=data.getConn(sdmlURL);
            destConn=data.getConn();
            
            //================ Update the MIR Tables ======================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT DISTINCT(ISSU_NO) FROM BOE_OPENING_ISSUE");
            rsSource.first();
            
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_INV_ISSUE_HEADER");
            
            //stDest.executeUpdate("DELETE FROM D_INV_ISSUE_HEADER");
            //stDest.executeUpdate("DELETE FROM D_INV_ISSUE_DETAIL");
            
            Counter=0;
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    Counter++;
                    
                    //Create Record in Destination MIR Header;
                    String IssueNo=rsSource.getString("ISSU_NO");
                    
                    rsDest.moveToInsertRow();
                    rsDest.updateInt("COMPANY_ID",2);
                    rsDest.updateString("ISSUE_NO",rsSource.getString("ISSU_NO")+"/O");
                    rsDest.updateString("ISSUE_DATE","0000-00-00");
                    rsDest.updateBoolean("APPROVED",true);
                    rsDest.insertRow();
                    
                    //Create Records in Line
                    stTmp=srcConn.createStatement();
                    rsTmp=stTmp.executeQuery("SELECT * FROM BOE_OPENING_ISSUE WHERE ISSU_NO='"+IssueNo+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        //Open Line Table
                        stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        rsLine=stLine.executeQuery("SELECT * FROM D_INV_ISSUE_DETAIL");
                        
                        int Sr=0;
                        
                        while(!rsTmp.isAfterLast()) {
                            Sr++;
                            rsLine.moveToInsertRow();
                            rsLine.updateInt("COMPANY_ID",2);
                            rsLine.updateString("ISSUE_NO",IssueNo+"/O");
                            rsLine.updateInt("SR_NO",Sr);
                            rsLine.updateString("ITEM_CODE",rsTmp.getString("ITEM_CD"));
                            rsLine.updateDouble("QTY",rsTmp.getDouble("QUANTITY"));
                            rsLine.updateString("REMARKS",rsTmp.getString("MCN_DESC"));
                            rsLine.insertRow();
                            rsTmp.next();
                        }
                    }
                    
                    rsSource.next();
                }
            }
            //=====================================================================//
            
            
            //=====================Update Item Stock ============================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM BOE_OPENING");
            rsSource.first();
            
            
            stLine=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsLine=stLine.executeQuery("SELECT * FROM ITEM_STOCK");
            
            stSource.executeUpdate("DELETE FROM ITEM_STOCK");
            
            
            Counter=0;
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    Counter++;
                    
                    //Create Record in Destination MIR Header;
                    String ItemCode=rsSource.getString("ITEM_CD");
                    
                    double OpeningQty=rsSource.getDouble("QUANTITY");
                    double IssueQty=0;
                    double ClosingQty=0;
                    
                    //Get the Closing Stock
                    //Create Records in Line
                    stTmp=srcConn.createStatement();
                    rsTmp=stTmp.executeQuery("SELECT SUM(QUANTITY) AS SUMQTY FROM BOE_OPENING_ISSUE WHERE ITEM_CD='"+ItemCode+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        IssueQty=rsTmp.getDouble("SUMQTY");
                    }
                    
                    ClosingQty=OpeningQty-IssueQty;
                    
                    
                    rsLine.moveToInsertRow();
                    rsLine.updateString("ITEM_CODE",ItemCode);
                    rsLine.updateString("BOE_NO","X");
                    rsLine.updateString("BOE_SR_NO","");
                    rsLine.updateString("BOE_DATE","0000-00-00");
                    rsLine.updateDouble("OPENING_QTY",OpeningQty);
                    rsLine.updateDouble("ISSUE_QTY",IssueQty);
                    rsLine.updateDouble("RECEIPT_QTY",0);
                    rsLine.updateDouble("CLOSING_QTY",ClosingQty);
                    rsLine.insertRow();
                    
                    
                    rsSource.next();
                }
            }
            //===================================================================//
            
            
            
            //----- Updating BOE Receipt Table for BOE Date - to be fetched from BOE Opening -----------//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM BOE_RECEIPT_DETAIL");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    String BOENo=rsSource.getString("BOE_NO");
                    String BOEDate="";
                    
                    int DeptID=0;
                    
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM BOE_HEADER WHERE BOE_NO='"+BOENo.trim()+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        BOEDate=rsTmp.getString("BOE_PER_DT");
                    }
                    
                    rsSource.updateString("BOE_DATE",BOEDate);
                    rsSource.updateRow();
                    
                    rsSource.next();
                }
            }
            //------------------------------------------------------------------------------------------//
            
            
            
            //----- Updating BOE Issue Table -----------//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM BOE_ISSUE_DETAIL");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    String BOENo="";
                    String BOEDate="";
                    String ReceiptNo=rsSource.getString("RECP_NO");
                    String ItemCode=rsSource.getString("ITEM_CD");
                    String BOESrNo="";
                    
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM BOE_RECEIPT_DETAIL WHERE RECP_NO='"+ReceiptNo.trim()+"' AND ITEM_CD='"+ItemCode+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        BOEDate=rsTmp.getString("BOE_DATE");
                        BOENo=rsTmp.getString("BOE_NO");
                        BOESrNo=rsTmp.getString("SR_NO");
                        
                    }
                    
                    rsSource.updateString("BOE_NO",BOENo);
                    rsSource.updateString("BOE_SR_NO",BOESrNo);
                    rsSource.updateString("BOE_DATE",BOEDate);
                    rsSource.updateRow();
                    
                    rsSource.next();
                }
            }
            //------------------------------------------------------------------------------------------//
            
            
            
            //================== Updating BOE Issue Header Table for Dept ==========================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM BOE_ISSUE_HEADER");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    String DeptCode=rsSource.getString("DEPT_CD");
                    
                    int DeptID=0;
                    
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode.trim()+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        DeptID=rsTmp.getInt("DEPT_ID");
                    }
                    
                    rsSource.updateInt("DEPT_ID",DeptID);
                    rsSource.updateRow();
                    
                    rsSource.next();
                }
            }
            //==============Updation of P.O. Header Completed ================================//
            
            
            
            
            //================ Update the MIR Tables ======================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM BOE_ISSUE_HEADER");
            rsSource.first();
            
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            while(!rsSource.isAfterLast()) {
                
                String IssueNo=rsSource.getString("ISSU_NO");
                
                stDest.executeUpdate("DELETE FROM D_INV_ISSUE_HEADER WHERE ISSUE_NO='"+IssueNo+"'");
                stDest.executeUpdate("DELETE FROM D_INV_ISSUE_DETAIL WHERE ISSUE_NO='"+IssueNo+"'");
                rsSource.next();
            }
            
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM BOE_ISSUE_HEADER");
            rsSource.first();
            
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_INV_ISSUE_HEADER WHERE ISSUE_NO='0001' ");
            
            
            //stDest.executeUpdate("DELETE FROM D_INV_ISSUE_HEADER");
            //stDest.executeUpdate("DELETE FROM D_INV_ISSUE_DETAIL");
            
            Counter=0;
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    Counter++;
                    
                    //Create Record in Destination MIR Header;
                    String IssueNo=rsSource.getString("ISSU_NO");
                    
                    rsDest.moveToInsertRow();
                    rsDest.updateInt("COMPANY_ID",2);
                    rsDest.updateString("ISSUE_NO",rsSource.getString("ISSU_NO"));
                    rsDest.updateString("ISSUE_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("ISSU_DATE")));
                    rsDest.updateInt("FOR_DEPT_ID",rsSource.getInt("DEPT_ID"));
                    rsDest.updateBoolean("APPROVED",true);
                    rsDest.insertRow();
                    
                    //Create Records in Line
                    stTmp=srcConn.createStatement();
                    rsTmp=stTmp.executeQuery("SELECT * FROM BOE_ISSUE_DETAIL WHERE ISSU_NO='"+IssueNo+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        //Open Line Table
                        stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        rsLine=stLine.executeQuery("SELECT * FROM D_INV_ISSUE_DETAIL WHERE ISSUE_NO='0001' ");
                        
                        int Sr=0;
                        
                        while(!rsTmp.isAfterLast()) {
                            Sr++;
                            rsLine.moveToInsertRow();
                            rsLine.updateInt("COMPANY_ID",2);
                            rsLine.updateString("ISSUE_NO",IssueNo);
                            rsLine.updateInt("SR_NO",Sr);
                            rsLine.updateString("ITEM_CODE",rsTmp.getString("ITEM_CD"));
                            rsLine.updateString("BOE_NO",rsTmp.getString("BOE_NO"));
                            rsLine.updateInt("UNIT",0);
                            rsLine.updateDouble("QTY",rsTmp.getDouble("QUANTITY"));
                            rsLine.updateString("MIR_NO",rsTmp.getString("RECP_NO"));
                            rsLine.updateString("REMARKS",rsTmp.getString("MCN_DESC"));
                            rsLine.insertRow();
                            rsTmp.next();
                        }
                    }
                    
                    rsSource.next();
                }
            }
            //=====================================================================//
        }
        catch(Exception e) {
            
            JOptionPane.showMessageDialog(null," Error in BOE Import "+e.getMessage());
        }
    }
    
    /**
     * This is Update Method
     * @see This is Update Method
     */
    private void UpdateStock() {
        
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
        String strSQL="";
        
        try {
            srcConn=data.getConn(sdmlURL);
            destConn=data.getConn();
            
            //============== Updating Stock (Withoud BOE & Lot) --------------------//
            strSQL="SELECT DISTINCT(ITEM_ID) FROM D_INV_GRN_HEADER,D_INV_GRN_DETAIL WHERE (BOE_NO='X' OR BOE_NO='') AND D_INV_GRN_HEADER.COMPANY_ID=D_INV_GRN_DETAIL.COMPANY_ID AND D_INV_GRN_HEADER.GRN_NO=D_INV_GRN_DETAIL.GRN_NO AND D_INV_GRN_HEADER.GRN_TYPE=D_INV_GRN_DETAIL.GRN_TYPE AND D_INV_GRN_HEADER.APPROVED=1 AND D_INV_GRN_HEADER.GRN_TYPE=1";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            if(rsDest.getRow()>0) {
                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsLine=stLine.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER");
                
                while(!rsDest.isAfterLast()) {
                    String ItemID=rsDest.getString("ITEM_ID");
                    String WarehouseID=clsItem.getItemWareHouseID(EITLERPGLOBAL.gCompanyID, ItemID);
                    String LocationID=clsItem.getItemLocationID(EITLERPGLOBAL.gCompanyID, ItemID);
                    
                    rsLine.moveToInsertRow();
                    rsLine.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                    rsLine.updateString("ITEM_ID",ItemID);
                    rsLine.updateString("LOT_NO","X");
                    rsLine.updateString("BOE_NO","X");
                    rsLine.updateString("BOE_SR_NO","");
                    rsLine.updateString("BOE_DATE","0000-00-00");
                    rsLine.updateString("WAREHOUSE_ID",WarehouseID);
                    rsLine.updateString("LOCATION_ID",LocationID);
                    rsLine.insertRow();
                    
                    rsDest.next();
                }
                
            }
            //---------------------------------------------------------------------------//
            
            
            //============== Updating Stock with Lot (Without BOE) --------------------//
            strSQL="SELECT DISTINCT(ITEM_ID),ITEM_LOT_NO FROM D_INV_GRN_HEADER,D_INV_GRN_DETAIL,D_INV_GRN_LOT WHERE D_INV_GRN_HEADER.COMPANY_ID=D_INV_GRN_DETAIL.COMPANY_ID AND D_INV_GRN_HEADER.GRN_NO=D_INV_GRN_DETAIL.GRN_NO AND D_INV_GRN_HEADER.GRN_TYPE=D_INV_GRN_DETAIL.GRN_TYPE AND D_INV_GRN_DETAIL.COMPANY_ID=D_INV_GRN_LOT.COMPANY_ID AND D_INV_GRN_DETAIL.GRN_NO=D_INV_GRN_LOT.GRN_NO AND D_INV_GRN_DETAIL.GRN_TYPE=D_INV_GRN_LOT.GRN_TYPE AND D_INV_GRN_DETAIL.SR_NO=D_INV_GRN_LOT.GRN_SR_NO AND D_INV_GRN_HEADER.APPROVED=1 AND D_INV_GRN_HEADER.GRN_TYPE=2 AND (D_INV_GRN_DETAIL.BOE_NO='X' OR D_INV_GRN_DETAIL.BOE_NO='')";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            if(rsDest.getRow()>0) {
                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsLine=stLine.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER");
                
                while(!rsDest.isAfterLast()) {
                    String ItemID=rsDest.getString("ITEM_ID");
                    String WarehouseID=clsItem.getItemWareHouseID(EITLERPGLOBAL.gCompanyID, ItemID);
                    String LocationID=clsItem.getItemLocationID(EITLERPGLOBAL.gCompanyID, ItemID);
                    String LotNo=rsDest.getString("ITEM_LOT_NO");
                    
                    rsLine.moveToInsertRow();
                    rsLine.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                    rsLine.updateString("ITEM_ID",ItemID);
                    rsLine.updateString("LOT_NO",LotNo);
                    rsLine.updateString("BOE_NO","X");
                    rsLine.updateString("BOE_SR_NO","");
                    rsLine.updateString("BOE_DATE","0000-00-00");
                    rsLine.updateString("WAREHOUSE_ID",WarehouseID);
                    rsLine.updateString("LOCATION_ID",LocationID);
                    rsLine.insertRow();
                    
                    rsDest.next();
                }
                
            }
            //---------------------------------------------------------------------------//
            
            
            
            //============== Updating Stock (With BOE & without Lot) --------------------//
            strSQL="SELECT DISTINCT(ITEM_ID),BOE_NO FROM D_INV_GRN_HEADER,D_INV_GRN_DETAIL WHERE BOE_NO<>'X' AND BOE_NO<>'' AND D_INV_GRN_HEADER.COMPANY_ID=D_INV_GRN_DETAIL.COMPANY_ID AND D_INV_GRN_HEADER.GRN_NO=D_INV_GRN_DETAIL.GRN_NO AND D_INV_GRN_HEADER.GRN_TYPE=D_INV_GRN_DETAIL.GRN_TYPE AND D_INV_GRN_HEADER.APPROVED=1 AND D_INV_GRN_HEADER.GRN_TYPE=1";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            if(rsDest.getRow()>0) {
                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsLine=stLine.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER");
                
                while(!rsDest.isAfterLast()) {
                    String ItemID=rsDest.getString("ITEM_ID");
                    String WarehouseID=clsItem.getItemWareHouseID(EITLERPGLOBAL.gCompanyID, ItemID);
                    String LocationID=clsItem.getItemLocationID(EITLERPGLOBAL.gCompanyID, ItemID);
                    String BOENo=rsDest.getString("BOE_NO");
                    
                    rsLine.moveToInsertRow();
                    rsLine.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                    rsLine.updateString("ITEM_ID",ItemID);
                    rsLine.updateString("LOT_NO","X");
                    rsLine.updateString("BOE_NO",BOENo);
                    rsLine.updateString("BOE_SR_NO","");
                    rsLine.updateString("BOE_DATE","0000-00-00");
                    rsLine.updateString("WAREHOUSE_ID",WarehouseID);
                    rsLine.updateString("LOCATION_ID",LocationID);
                    rsLine.insertRow();
                    
                    rsDest.next();
                }
                
            }
            //---------------------------------------------------------------------------//
            
            
            
            //============== Updating Stock with Lot (Without BOE) --------------------//
            strSQL="SELECT DISTINCT(ITEM_ID),ITEM_LOT_NO,BOE_NO FROM D_INV_GRN_HEADER,D_INV_GRN_DETAIL,D_INV_GRN_LOT WHERE D_INV_GRN_HEADER.COMPANY_ID=D_INV_GRN_DETAIL.COMPANY_ID AND D_INV_GRN_HEADER.GRN_NO=D_INV_GRN_DETAIL.GRN_NO AND D_INV_GRN_HEADER.GRN_TYPE=D_INV_GRN_DETAIL.GRN_TYPE AND D_INV_GRN_DETAIL.COMPANY_ID=D_INV_GRN_LOT.COMPANY_ID AND D_INV_GRN_DETAIL.GRN_NO=D_INV_GRN_LOT.GRN_NO AND D_INV_GRN_DETAIL.GRN_TYPE=D_INV_GRN_LOT.GRN_TYPE AND D_INV_GRN_DETAIL.SR_NO=D_INV_GRN_LOT.GRN_SR_NO AND D_INV_GRN_HEADER.APPROVED=1 AND D_INV_GRN_HEADER.GRN_TYPE=2 AND (D_INV_GRN_DETAIL.BOE_NO<>'X' and D_INV_GRN_DETAIL.BOE_NO<>'')";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            if(rsDest.getRow()>0) {
                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsLine=stLine.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER");
                
                while(!rsDest.isAfterLast()) {
                    String ItemID=rsDest.getString("ITEM_ID");
                    String WarehouseID=clsItem.getItemWareHouseID(EITLERPGLOBAL.gCompanyID, ItemID);
                    String LocationID=clsItem.getItemLocationID(EITLERPGLOBAL.gCompanyID, ItemID);
                    String LotNo=rsDest.getString("ITEM_LOT_NO");
                    String BOENo=rsDest.getString("BOE_NO");
                    
                    rsLine.moveToInsertRow();
                    rsLine.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                    rsLine.updateString("ITEM_ID",ItemID);
                    rsLine.updateString("LOT_NO",LotNo);
                    rsLine.updateString("BOE_NO",BOENo);
                    rsLine.updateString("BOE_SR_NO","");
                    rsLine.updateString("BOE_DATE","0000-00-00");
                    rsLine.updateString("WAREHOUSE_ID",WarehouseID);
                    rsLine.updateString("LOCATION_ID",LocationID);
                    rsLine.insertRow();
                    
                    rsDest.next();
                }
                
            }
            //---------------------------------------------------------------------------//
            
            
            
        }
        catch(Exception e) {
            
            JOptionPane.showMessageDialog(null," Error in MIR Import "+e.getMessage());
        }
        
        
        
    }
    
    
    private void StartNRGP() {
        
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
        String strSQL="";
        
        try {
            srcConn=data.getConn(sdmlURL);
            destConn=data.getConn();
            
            
            //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM NRGP_HEADER");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    String DeptCode=rsSource.getString("REQU_DEPT");
                    
                    int DeptID=0;
                    
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode.trim()+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        DeptID=rsTmp.getInt("DEPT_ID");
                    }
                    
                    rsSource.updateInt("DEPT_ID",DeptID);
                    rsSource.updateRow();
                    
                    rsSource.next();
                }
            }
            //==============Updation of P.O. Header Completed ================================//
            
            
            
            
            
            
            //============== Updating MIR Detail for Unit ID =========================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM NRGP_DETAIL");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    String UnitCode=rsSource.getString("UNIT_MEASU");
                    int UnitID=0;
                    
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC=\""+UnitCode.trim()+"\"");
                    
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        UnitID=rsTmp.getInt("PARA_CODE");
                    }
                    
                    rsSource.updateInt("UNIT_ID",UnitID);
                    rsSource.updateRow();
                    rsSource.next();
                }
            }
            //===============Completed Updating P.O. Detail ===========================//
            
            
            
            //================ Update the MIR Tables ======================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM NRGP_HEADER");
            rsSource.first();
            
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_INV_NRGP_HEADER");
            
            
            stDest.executeUpdate("DELETE FROM D_INV_NRGP_HEADER");
            stDest.executeUpdate("DELETE FROM D_INV_NRGP_DETAIL");
            
            Counter=0;
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    Counter++;
                    
                    //Create Record in Destination MIR Header;
                    String RGPNo=rsSource.getString("RGP_NO");
                    
                    rsDest.moveToInsertRow();
                    rsDest.updateInt("COMPANY_ID",2);
                    rsDest.updateString("GATEPASS_NO",rsSource.getString("RGP_NO"));
                    rsDest.updateString("GATEPASS_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("RGP_DATE")));
                    rsDest.updateString("PARTY_NAME",rsSource.getString("PARTY_NAME"));
                    rsDest.updateString("ADD1",rsSource.getString("ADDRS_LIN1"));
                    rsDest.updateString("ADD2",rsSource.getString("ADDRS_LIN2"));
                    rsDest.updateString("CITY",rsSource.getString("CITY_NAME"));
                    rsDest.updateString("DESPATCH_MODE",rsSource.getString("MODE_DESP"));
                    rsDest.updateString("PURPOSE",rsSource.getString("PURPOSE"));
                    rsDest.updateInt("FOR_DEPT",rsSource.getInt("DEPT_ID"));
                    rsDest.updateString("REMARKS",rsSource.getString("REMARK"));
                    rsDest.updateString("PACKING",rsSource.getString("T_PACKING"));
                    rsDest.updateBoolean("APPROVED",true);
                    rsDest.insertRow();
                    
                    //Create Records in Line
                    stTmp=srcConn.createStatement();
                    rsTmp=stTmp.executeQuery("SELECT * FROM NRGP_DETAIL WHERE RGP_NO='"+RGPNo+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        //Open Line Table
                        stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        rsLine=stLine.executeQuery("SELECT * FROM D_INV_NRGP_DETAIL");
                        
                        int Sr=0;
                        
                        while(!rsTmp.isAfterLast()) {
                            Sr++;
                            rsLine.moveToInsertRow();
                            rsLine.updateInt("COMPANY_ID",2);
                            rsLine.updateString("GATEPASS_NO",RGPNo);
                            rsLine.updateInt("SR_NO",Sr);
                            rsLine.updateString("ITEM_CODE",rsTmp.getString("ITEM_CD"));
                            rsLine.updateString("NRGP_DESC",rsTmp.getString("ITM_DES1")+rsTmp.getString("ITM_DES2")+rsTmp.getString("ITM_DES3"));
                            rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                            rsLine.updateDouble("QTY",rsTmp.getDouble("QUANTITY"));
                            rsLine.updateString("PACKING",rsTmp.getString("PACKING"));
                            rsLine.updateString("REMARKS",rsTmp.getString("REMARK"));
                            rsLine.insertRow();
                            rsTmp.next();
                        }
                    }
                    
                    rsSource.next();
                }
            }
            //=====================================================================//
            
            
            
        }
        catch(Exception e) {
            
            JOptionPane.showMessageDialog(null," Error in NRGP Import "+e.getMessage());
        }
        
        
        
    }
    
    
    private void StartRGP() {
        
        
        new Thread() {
            
            public void run() {
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    
                    //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM RGP_HEADER");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            String DeptCode=rsSource.getString("REQU_DEPT");
                            
                            int DeptID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode.trim()+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                DeptID=rsTmp.getInt("DEPT_ID");
                            }
                            
                            rsSource.updateInt("DEPT_ID",DeptID);
                            rsSource.updateRow();
                            
                            rsSource.next();
                        }
                    }
                    //==============Updation of P.O. Header Completed ================================//
                    
                    
                    
                    
                    
                    
                    //============== Updating MIR Detail for Unit ID =========================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM RGP_DETAIL");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            String UnitCode=rsSource.getString("UNIT_MEASU");
                            int UnitID=0;
                            
                            //Find out the User ID
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC=\""+UnitCode.trim()+"\"");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                UnitID=rsTmp.getInt("PARA_CODE");
                            }
                            
                            rsSource.updateInt("UNIT_ID",UnitID);
                            rsSource.updateRow();
                            rsSource.next();
                        }
                    }
                    //===============Completed Updating P.O. Detail ===========================//
                    
                    
                    
                    //================ Update the MIR Tables ======================//
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT * FROM RGP_HEADER");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_RGP_HEADER");
                    
                    
                    stDest.executeUpdate("DELETE FROM D_INV_RGP_HEADER");
                    stDest.executeUpdate("DELETE FROM D_INV_RGP_DETAIL");
                    stDest.executeUpdate("DELETE FROM D_INV_RGP_RETURN_HEADER");
                    stDest.executeUpdate("DELETE FROM D_INV_RGP_RETURN_DETAIL");
                    
                    Counter=0;
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            
                            //Create Record in Destination MIR Header;
                            String RGPNo=rsSource.getString("RGP_NO");
                            
                            lblStatus.setText("Inserting Returns "+RGPNo);
                            lblStatus.repaint();
                            
                            
                            rsDest.moveToInsertRow();
                            rsDest.updateInt("COMPANY_ID",2);
                            rsDest.updateString("GATEPASS_NO",rsSource.getString("RGP_NO"));
                            rsDest.updateString("GATEPASS_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("RGP_DATE")));
                            rsDest.updateString("PARTY_NAME",rsSource.getString("PARTY_NAME"));
                            rsDest.updateString("ADD1",rsSource.getString("ADDRS_LIN1"));
                            rsDest.updateString("ADD2",rsSource.getString("ADDRS_LIN2"));
                            rsDest.updateString("CITY",rsSource.getString("CITY_NAME"));
                            rsDest.updateString("DESPATCH_MODE",rsSource.getString("MODE_DESP"));
                            rsDest.updateString("PURPOSE",rsSource.getString("PURPOSE"));
                            rsDest.updateInt("FOR_DEPT",rsSource.getInt("DEPT_ID"));
                            rsDest.updateString("EXP_RETURN_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("EXP_DATE")));
                            rsDest.updateString("REMARKS",rsSource.getString("REMARK"));
                            rsDest.updateString("PACKING",rsSource.getString("T_PACKING"));
                            rsDest.updateBoolean("APPROVED",true);
                            rsDest.insertRow();
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement();
                            rsTmp=stTmp.executeQuery("SELECT * FROM RGP_DETAIL WHERE RGP_NO='"+RGPNo+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                //Open Line Table
                                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                                rsLine=stLine.executeQuery("SELECT * FROM D_INV_RGP_DETAIL");
                                
                                int Sr=0;
                                
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsLine.moveToInsertRow();
                                    rsLine.updateInt("COMPANY_ID",2);
                                    rsLine.updateString("GATEPASS_NO",RGPNo);
                                    rsLine.updateInt("SR_NO",Sr);
                                    rsLine.updateString("ITEM_CODE","");
                                    rsLine.updateString("RGP_DESC",rsTmp.getString("ITM_DES1")+rsTmp.getString("ITM_DES2")+rsTmp.getString("ITM_DES3"));
                                    rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                                    rsLine.updateDouble("QTY",rsTmp.getDouble("QUANTITY"));
                                    rsLine.updateString("PACKING",rsTmp.getString("PACKING"));
                                    rsLine.updateString("REMARKS",rsTmp.getString("REMARK"));
                                    rsLine.insertRow();
                                    rsTmp.next();
                                }
                            }
                            
                            rsSource.next();
                        }
                    }
                    //=====================================================================//
                    
                    
                    
                    //================ Update the MIR Tables ======================//
                    
                    stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsSource=stSource.executeQuery("SELECT DISTINCT(RGP_NO),RGP_SERL,RETU_SERL,RETU_DATE FROM RGP_RETURN");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_RGP_RETURN_HEADER");
                    
                    
                    stDest.executeUpdate("DELETE FROM D_INV_RGP_RETURN_HEADER");
                    stDest.executeUpdate("DELETE FROM D_INV_RGP_RETURN_DETAIL");
                    
                    Counter=0;
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            Counter++;
                            //Create Record in Destination MIR Header;
                            String RGPNo=rsSource.getString("RGP_NO");
                            String ReturnNo=rsSource.getString("RGP_NO").trim()+rsSource.getString("RGP_SERL").trim()+rsSource.getString("RETU_SERL").trim();
                            
                            lblStatus.setText("Inserting Returns "+ReturnNo);
                            lblStatus.repaint();
                            
                            rsDest.moveToInsertRow();
                            rsDest.updateInt("COMPANY_ID",2);
                            rsDest.updateString("RGP_NO",RGPNo);
                            rsDest.updateString("RETURN_NO",ReturnNo);
                            rsDest.updateString("RETURN_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("RETU_DATE")));
                            rsDest.updateBoolean("APPROVED",true);
                            rsDest.insertRow();
                            
                            //Create Records in Line
                            stTmp=srcConn.createStatement();
                            rsTmp=stTmp.executeQuery("SELECT * FROM RGP_RETURN WHERE RGP_NO='"+RGPNo+"' AND RGP_SERL='"+rsSource.getString("RGP_SERL").trim()+"' AND RETU_SERL='"+rsSource.getString("RETU_SERL").trim()+"'");
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                //Open Line Table
                                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                                rsLine=stLine.executeQuery("SELECT * FROM D_INV_RGP_RETURN_DETAIL");
                                
                                int Sr=0;
                                
                                while(!rsTmp.isAfterLast()) {
                                    Sr++;
                                    rsLine.moveToInsertRow();
                                    rsLine.updateInt("COMPANY_ID",2);
                                    rsLine.updateString("RETURN_NO",ReturnNo);
                                    rsLine.updateInt("SR_NO",Sr);
                                    
                                    if(EITLERPGLOBAL.IsNumber(rsTmp.getString("RETU_SERL"))) {
                                        rsLine.updateInt("RGP_SR_NO",Integer.parseInt(rsTmp.getString("RETU_SERL")));
                                    }
                                    else {
                                        rsLine.updateInt("RGP_SR_NO",0);
                                    }
                                    rsLine.updateString("ITEM_ID","");
                                    rsLine.updateDouble("QTY",rsTmp.getDouble("QUANTITY"));
                                    rsLine.updateString("REMARKS",rsTmp.getString("RETU_REF"));
                                    rsLine.insertRow();
                                    rsTmp.next();
                                }
                            }
                            
                            rsSource.next();
                        }
                    }
                    //=====================================================================//
                    
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error in RGP Import "+e.getMessage());
                }
            };
        }.start();
        
    }
    
    
    
    public void run() {
        try {
            JOptionPane.showMessageDialog(null,"Thread ran");
            theStatus.SetStatusText(" Pointer "+Counter);
            Thread.sleep(5000);
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null," Thread error"+e.getMessage());
        }
    }
    
    
    private void StartParty() {
        Connection tmpConn;
        Statement stParty,stSupp;
        ResultSet rsSupp;
        ResultSet rsParty;
        
        try {
            tmpConn=data.getConn();
            stParty=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            stSupp=tmpConn.createStatement();
            
            rsParty=stParty.executeQuery("SELECT * FROM D_COM_PARTY");
            rsSupp=stSupp.executeQuery("SELECT * FROM D_COM_SUPP_MASTER WHERE SUPPLIER_CODE NOT IN(SELECT SUPPLIER_CODE FROM D_COM_PARTY) AND APPROVED=1");
            
            rsSupp.first();
            
            int Counter=0;
            
            while(!rsSupp.isAfterLast()) {
                Counter++;
                
                int PartyID=(int)data.getMaxID(EITLERPGLOBAL.gCompanyID, "D_COM_PARTY", "PARTY_ID")+1;
                
                rsParty.moveToInsertRow();
                rsParty.updateInt("COMPANY_ID",2);
                rsParty.updateInt("PARTY_ID",PartyID);
                rsParty.updateBoolean("APPROVED_SUPPLIER",true);
                rsParty.updateString("SUPPLIER_CODE",rsSupp.getString("SUPPLIER_CODE"));
                rsParty.updateString("PARTY_NAME",rsSupp.getString("SUPP_NAME"));
                rsParty.updateString("ADD1",rsSupp.getString("ADD1"));
                rsParty.updateString("ADD2",rsSupp.getString("ADD2"));
                rsParty.updateString("ADD3",rsSupp.getString("ADD3"));
                rsParty.updateString("CITY",rsSupp.getString("CITY"));
                rsParty.updateString("STATE",rsSupp.getString("STATE"));
                rsParty.updateString("COUNTRY",rsSupp.getString("COUNTRY"));
                rsParty.updateString("PHONE_O",rsSupp.getString("PHONE_O"));
                rsParty.updateString("PHONE_R",rsSupp.getString("PHONE_RES"));
                rsParty.updateString("MOBILE",rsSupp.getString("MOBILE_NO"));
                rsParty.updateString("EMAIL",rsSupp.getString("EMAIL_ADD"));
                rsParty.updateString("REMARKS","");
                rsParty.insertRow();
                
                rsSupp.next();
            }
            
            JOptionPane.showMessageDialog(null,"Done");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
        
    }
    
    
    
    
    private void StartSuppPTCUpdate() {
        
        new Thread() {
            
            public void run() {
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms,stSupp;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsSupp;
                String strSQL="";
                long Counter=0;
                
                try {
                    srcConn=data.getConn();
                    destConn=data.getConn();
                    
                    stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT * FROM D_COM_SUPP_MASTER_PTC");
                    
                    rsDest.first();
                    
                    stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsLine=stLine.executeQuery("SELECT * FROM D_COM_SUPP_TERMS");
                    
                    while(!rsDest.isAfterLast()) {
                        
                        lblStatus.setText("Upading Master "+rsDest.getRow());
                        lblStatus.repaint();
                        
                        int SuppID=clsSupplier.getSupplierID(EITLERPGLOBAL.gCompanyID,rsDest.getString("SUPPLIER_CODE"));
                        int PaymentDays=rsDest.getInt("PAYMENT_DAYS");
                        String PayTerm="CREDIT TERMS WITH 30 DAYS";
                        
                        
                        String PTC=rsDest.getString("PTC");
                        String PTCDesc="";
                        
                        
                        if(EITLERPGLOBAL.IsNumber(PTC)) {
                            stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='PAYMENT_CODE' AND D_COM_PARAMETER_MAST.PARA_CODE="+Integer.parseInt(PTC));
                            rsTmp.first();
                            
                            if(rsTmp.getRow()>0) {
                                PTCDesc=rsTmp.getString("DESC");
                            }
                            
                            
                            rsLine.moveToInsertRow();
                            rsLine.updateInt("COMPANY_ID",2);
                            rsLine.updateLong("SUPP_ID",SuppID);
                            rsLine.updateInt("SR_NO",1);
                            rsLine.updateString("TERM_TYPE","P");
                            rsLine.updateInt("TERM_CODE",Integer.parseInt(rsDest.getString("PTC")));
                            rsLine.updateString("TERM_DESC",PTCDesc);
                            rsLine.insertRow();
                        }
                        
                        
                        rsDest.next();
                    }
                    
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();
        
    }
    
    
    private void StartItem() {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms,stSA;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsSA;
        String strSQL="";
        long Counter=0;
        
        try {
            srcConn=data.getConn(sdmlURL);
            destConn=data.getConn();
            
            stTmp=srcConn.createStatement();
            rsTmp=stTmp.executeQuery("SELECT * FROM ITEM_APPROVAL");
            rsTmp.first();
            
            data.Execute("UPDATE D_INV_ITEM_MASTER SET SPECIAL_APPROVAL='A'");
            
            while(!rsTmp.isAfterLast()) {
                data.Execute("UPDATE D_INV_ITEM_MASTER SET SPECIAL_APPROVAL='"+rsTmp.getString("SPECIAL_APPROVAL")+"' WHERE ITEM_ID='"+rsTmp.getString("ITEM_ID")+"'");
                
                rsTmp.next();
            }
            
            //============== Updating Stock (Withoud BOE & Lot) --------------------//
            strSQL="SELECT * FROM D_INV_ITEM_MASTER";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            
            stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsLine=stLine.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER");
            
            Counter=0;
            
            while(!rsDest.isAfterLast()) {
                Counter++;
                
                String ItemID=rsDest.getString("ITEM_ID");
                
                
                stSA=srcConn.createStatement();
                rsSA=stSA.executeQuery("SELECT * FROM ITEM_APPROVAL WHERE ITEM_ID='"+ItemID+"'");
                rsSA.first();
                
                if(rsSA.getRow()>0) {
                    data.Execute("UPDATE D_INV_ITEM_MASTER SET SPECIAL_APPROVAL='"+rsSA.getString("SPECIAL_APPROVAL")+"' WHERE ITEM_ID='"+ItemID+"'");
                }
                
                rsDest.updateLong("ITEM_SYS_ID",Counter);
                rsDest.updateInt("COMPANY_ID",2);
                rsDest.updateBoolean("APPROVED",true);
                
                String UnitName=rsDest.getString("UNIT_NAME");
                int UnitID=0;
                
                stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC='"+UnitName.trim()+"'");
                rsTmp.first();
                
                if(rsTmp.getRow()>0) {
                    UnitID=rsTmp.getInt("PARA_CODE");
                }
                
                
                //--------- Stock Effect ----------------//
                rsLine.moveToInsertRow();
                rsLine.updateInt("COMPANY_ID",2);
                rsLine.updateString("ITEM_ID",rsDest.getString("ITEM_ID"));
                rsLine.updateString("LOT_NO","X");
                rsLine.updateString("BOE_NO","X");
                
                double OpeningQty=(rsDest.getDouble("OP_QTY_MM")+rsDest.getDouble("GI_QTY_MM")-rsDest.getDouble("IS_QTY_MM"))+(rsDest.getDouble("OP_Z_QTY")+rsDest.getDouble("GI_Z_QTY")-rsDest.getDouble("IS_Z_QTY"));
                double ZeroValQty=rsDest.getDouble("OP_Z_QTY")+rsDest.getDouble("GI_Z_QTY")-rsDest.getDouble("IS_Z_QTY");
                
                rsLine.updateDouble("OPENING_QTY",OpeningQty);
                rsLine.updateDouble("AVAILABLE_QTY",OpeningQty);
                rsLine.updateDouble("ON_HAND_QTY",OpeningQty);
                rsLine.updateDouble("ZERO_VAL_QTY",ZeroValQty);
                rsLine.updateDouble("ZERO_OPENING_QTY",ZeroValQty);
                rsLine.updateString("WAREHOUSE_ID","S");
                rsLine.updateString("LOCATION_ID",rsDest.getString("LOCATION_ID"));
                rsLine.insertRow();
                //------------ Stock Effect Completed ----------//
                
                rsDest.updateDouble("OPENING_QTY",OpeningQty);
                rsDest.updateDouble("AVAILABLE_QTY",OpeningQty);
                rsDest.updateDouble("ON_HAND_QTY",OpeningQty);
                rsDest.updateDouble("ZERO_VALUE_QTY",ZeroValQty);
                //rsDest.updateDouble("ZERO_OPENING_QTY",ZeroValQty);
                rsDest.updateString("WAREHOUSE_ID","S");
                rsDest.updateInt("UNIT",UnitID);
                rsDest.updateBoolean("BLOCKED",false);
                rsDest.updateBoolean("MAINTAIN_STOCK",true);
                rsDest.updateRow();
                
                
                rsDest.next();
            }
        }
        catch(Exception e) {
            //JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    
    
    private void StartSuppliers() {
        
        new Thread() {
            
            public void run() {
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms,stSupp;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsSupp;
                String strSQL="";
                long Counter=0;
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT * FROM D_COM_SUPP_MASTER");
                    
                    rsDest.first();
                    
                    while(!rsDest.isAfterLast()) {
                        lblStatus.setText("Upading Master "+rsDest.getRow());
                        lblStatus.repaint();
                        
                        int SuppID=rsDest.getInt("SUPP_ID");
                        int PaymentDays=rsDest.getInt("PAYMENT_DAYS");
                        String PayTerm="CREDIT TERMS WITH 30 DAYS";
                        
                        //Update the Term
                        stTmp=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_SUPP_TERMS WHERE SUPP_ID="+SuppID+" AND TERM_TYPE='P' AND TERM_CODE=6");
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            if(PaymentDays>0) {
                                PayTerm="CREDIT TERMS WITH "+PaymentDays+" DAYS";
                            }
                            else {
                                PayTerm="CREDIT TERMS WITH 30 DAYS";
                                
                            }
                            
                            rsTmp.updateString("TERM_DESC",PayTerm);
                            rsTmp.updateRow();
                        }
                        
                        rsDest.next();
                    }
                    
                    //Update the PO terms with these supplier terms
                    stTmp=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_SUPP_TERMS WHERE TERM_TYPE='P' AND TERM_CODE=6");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {
                            lblStatus.setText("Updating PO "+rsTmp.getRow());
                            lblStatus.repaint();
                            
                            int SuppID=rsTmp.getInt("SUPP_ID");
                            String SuppCode="";
                            String PaymentTerm=rsTmp.getString("TERM_DESC");
                            
                            stSupp=destConn.createStatement();
                            rsSupp=stSupp.executeQuery("SELECT SUPPLIER_CODE FROM D_COM_SUPP_MASTER WHERE SUPP_ID="+SuppID);
                            rsSupp.first();
                            
                            if(rsSupp.getRow()>0) {
                                SuppCode=rsSupp.getString("SUPPLIER_CODE");
                                
                                //Update the PO with the term
                                data.Execute("UPDATE D_PUR_PO_HEADER SET PAYMENT_TERM='"+PaymentTerm+"' WHERE SUPP_ID='"+SuppCode+"'");
                            }
                            
                            rsTmp.next();
                        }
                    }
                    
                    
                    
                    
                    //============== Updating Stock (Withoud BOE & Lot) --------------------//
                /*strSQL="SELECT * FROM D_COM_SUPP_MASTER";
                stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsDest=stDest.executeQuery(strSQL);
                rsDest.first();
                 
                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsLine=stLine.executeQuery("SELECT * FROM D_COM_SUPP_TERMS");
                Counter=0;
                 
                while(!rsDest.isAfterLast()) {
                    Counter++;
                    rsDest.updateLong("SUPP_ID",Counter);
                    rsDest.updateInt("COMPANY_ID",2);
                    rsDest.updateBoolean("ST35_REGISTERED",true);
                    rsDest.updateString("BLOCKED","N");
                    rsDest.updateBoolean("APPROVED",true);
                    rsDest.updateRow();
                 
                 
                    String PTC=rsDest.getString("PTC");
                    String PTCDesc="";
                 
                 
                    if(EITLERPGLOBAL.IsNumber(PTC)) {
                        stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='PAYMENT_CODE' AND D_COM_PARAMETER_MAST.PARA_CODE="+Integer.parseInt(PTC));
                        rsTmp.first();
                 
                        if(rsTmp.getRow()>0) {
                            PTCDesc=rsTmp.getString("DESC");
                        }
                 
                 
                        rsLine.moveToInsertRow();
                        rsLine.updateInt("COMPANY_ID",2);
                        rsLine.updateLong("SUPP_ID",Counter);
                        rsLine.updateInt("SR_NO",1);
                        rsLine.updateString("TERM_TYPE","P");
                        rsLine.updateInt("TERM_CODE",Integer.parseInt(rsDest.getString("PTC")));
                        rsLine.updateString("TERM_DESC",PTCDesc);
                        rsLine.insertRow();
                    }
                 
                 
                    rsDest.next();
                }*/
                    
                }
                catch(Exception e) {
                    //JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();
        
    }
    
    
    
    
    
    private void StartItemTemp() {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms,stSA;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsSA;
        
        String strSQL="";
        long Counter=0;
        
        try {
            srcConn=data.getConn();
            destConn=data.getConn();
            
            //============== Updating Stock (Withoud BOE & Lot) --------------------//
            strSQL="SELECT * FROM D_INV_ITEM_MASTER";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            
            
            strSQL="SELECT * FROM D_INV_ITEM_MASTER_TMP ";
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery(strSQL);
            rsSource.first();
            
            stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsLine=stLine.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER");
            
            Counter=33797;
            
            while(!rsSource.isAfterLast()) {
                Counter++;
                
                String ItemID=rsSource.getString("ITEM_ID");
                
                rsTmp=data.getResult("SELECT ITEM_ID FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+ItemID+"'");
                rsTmp.first();
                
                if(rsTmp.getRow()>0) {
                    //Do not duplicate the item
                }
                else {
                    
                    
                    rsDest.moveToInsertRow();
                    rsDest.updateInt("COMPANY_ID",3);
                    rsDest.updateBoolean("APPROVED",true);
                    rsDest.updateLong("ITEM_SYS_ID",Counter);
                    rsDest.updateString("ITEM_ID",rsSource.getString("ITEM_ID"));
                    
                    
                    String UnitName=rsSource.getString("UNIT_NAME");
                    int UnitID=0;
                    
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC='"+UnitName.trim()+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        UnitID=rsTmp.getInt("PARA_CODE");
                    }
                    
                    //Other Fields
                    rsDest.updateBoolean("ONETIME",false);
                    rsDest.updateString("ITEM_DESCRIPTION",rsSource.getString("ITEM_DESCRIPTION"));
                    rsDest.updateLong("GROUP_CODE",rsSource.getLong("GROUP_CODE"));
                    rsDest.updateString("SEARCH_KEY",rsSource.getString("SEARCH_KEY"));
                    rsDest.updateString("WAREHOUSE_ID",rsSource.getString("WAREHOUSE_ID"));
                    rsDest.updateLong("CATEGORY_ID",rsSource.getLong("CATEGORY_ID"));
                    rsDest.updateString("LOCATION_ID",rsSource.getString("LOCATION_ID"));
                    rsDest.updateLong("DESC",rsSource.getLong("DESC"));
                    rsDest.updateLong("MAKE",rsSource.getLong("MAKE"));
                    rsDest.updateLong("SIZE",rsSource.getLong("SIZE"));
                    rsDest.updateString("ABC",rsSource.getString("ABC"));
                    rsDest.updateString("XYZ",rsSource.getString("XYZ"));
                    rsDest.updateString("VEN",rsSource.getString("VEN"));
                    rsDest.updateString("FSN",rsSource.getString("FSN"));
                    rsDest.updateString("MF",rsSource.getString("MF"));
                    rsDest.updateDouble("MIN_QTY",rsSource.getDouble("MIN_QTY"));
                    rsDest.updateDouble("MAX_QTY",rsSource.getDouble("MAX_QTY"));
                    rsDest.updateDouble("TOLERANCE_LIMIT",rsSource.getDouble("TOLERANCE_LIMIT"));
                    rsDest.updateDouble("UNIT_RATE",rsSource.getDouble("UNIT_RATE"));
                    rsDest.updateDouble("DNP",rsSource.getDouble("DNP"));
                    rsDest.updateDouble("QTR1_RATE",rsSource.getDouble("QTR1_RATE"));
                    rsDest.updateDouble("QTR2_RATE",rsSource.getDouble("QTR2_RATE"));
                    rsDest.updateDouble("QTR3_RATE",rsSource.getDouble("QTR3_RATE"));
                    rsDest.updateDouble("QTR4_RATE",rsSource.getDouble("QTR4_RATE"));
                    rsDest.updateDouble("REBATE",rsSource.getDouble("REBATE"));
                    rsDest.updateBoolean("EXCISE_APPLICABLE",rsSource.getBoolean("EXCISE_APPLICABLE"));
                    rsDest.updateDouble("EXCISE",rsSource.getDouble("EXCISE"));
                    rsDest.updateLong("CHAPTER_NO",rsSource.getLong("CHAPTER_NO"));
                    rsDest.updateBoolean("TAXABLE",rsSource.getBoolean("TAXABLE"));
                    rsDest.updateBoolean("CAPTIVE_CONSUMABLE",rsSource.getBoolean("CAPTIVE_CONSUMABLE"));
                    rsDest.updateDouble("REORDER_LEVEL",rsSource.getDouble("REORDER_LEVEL"));
                    rsDest.updateLong("SUPPLIER_ID",rsSource.getLong("SUPPLIER_ID"));
                    rsDest.updateLong("ITEM_HIERARCHY_ID",rsSource.getLong("ITEM_HIERARCHY_ID"));
                    rsDest.updateLong("CREATED_BY",rsSource.getLong("CREATED_BY"));
                    rsDest.updateString("CREATED_DATE",rsSource.getString("CREATED_DATE"));
                    rsDest.updateLong("MODIFIED_BY",rsSource.getLong("MODIFIED_BY"));
                    rsDest.updateString("MODIFIED_DATE",rsSource.getString("MODIFIED_DATE"));
                    rsDest.updateString("SPECIAL_APPROVAL",rsSource.getString("SPECIAL_APPROVAL"));
                    rsDest.updateBoolean("CHANGED",true);
                    rsDest.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                    
                    
                    
                    //--------- Stock Effect ----------------//
                    rsLine.moveToInsertRow();
                    rsLine.updateInt("COMPANY_ID",3);
                    rsLine.updateString("ITEM_ID",rsSource.getString("ITEM_ID"));
                    rsLine.updateString("LOT_NO","X");
                    rsLine.updateString("BOE_NO","X");
                    
                    double OpeningQty=(rsSource.getDouble("OP_QTY_MM")+rsSource.getDouble("GI_QTY_MM")-rsSource.getDouble("IS_QTY_MM"))+(rsSource.getDouble("OP_Z_QTY")+rsSource.getDouble("GI_Z_QTY")-rsSource.getDouble("IS_Z_QTY"));
                    double ZeroValQty=rsSource.getDouble("OP_Z_QTY")+rsSource.getDouble("GI_Z_QTY")-rsSource.getDouble("IS_Z_QTY");
                    
                    rsLine.updateDouble("OPENING_QTY",OpeningQty);
                    rsLine.updateDouble("AVAILABLE_QTY",OpeningQty);
                    rsLine.updateDouble("ON_HAND_QTY",OpeningQty);
                    rsLine.updateDouble("ZERO_VAL_QTY",ZeroValQty);
                    rsLine.updateDouble("ZERO_OPENING_QTY",ZeroValQty);
                    rsLine.updateString("WAREHOUSE_ID","S");
                    rsLine.updateString("LOCATION_ID",rsSource.getString("LOCATION_ID"));
                    rsLine.insertRow();
                    //------------ Stock Effect Completed ----------//
                    
                    rsDest.updateDouble("OPENING_QTY",OpeningQty);
                    rsDest.updateDouble("AVAILABLE_QTY",OpeningQty);
                    rsDest.updateDouble("ON_HAND_QTY",OpeningQty);
                    rsDest.updateDouble("ZERO_VALUE_QTY",ZeroValQty);
                    //rsDest.updateDouble("ZERO_OPENING_QTY",ZeroValQty);
                    rsDest.updateString("WAREHOUSE_ID","S");
                    rsDest.updateInt("UNIT",UnitID);
                    rsDest.updateBoolean("BLOCKED",false);
                    rsDest.updateBoolean("MAINTAIN_STOCK",true);
                    rsDest.insertRow();
                    
                }
                
                rsSource.next();
            }
            
            JOptionPane.showMessageDialog(null,"Done");
            
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    
    private void StartSuppTemp() {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms,stSA;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsSA;
        
        String strSQL="";
        long Counter=0;
        
        try {
            srcConn=data.getConn();
            destConn=data.getConn();
            
            //============== Updating Stock (Withoud BOE & Lot) --------------------//
            strSQL="SELECT * FROM D_COM_SUPP_MASTER";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            
            
            strSQL="SELECT * FROM D_COM_SUPP_MASTER_TMP";
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery(strSQL);
            rsSource.first();
            
            
            Counter=1292;
            
            while(!rsSource.isAfterLast()) {
                Counter++;
                
                String SupplierCode=rsSource.getString("SUPPLIER_CODE");
                
                rsTmp=data.getResult("SELECT SUPPLIER_CODE FROM D_COM_SUPP_MASTER WHERE SUPPLIER_CODE='"+SupplierCode+"'");
                rsTmp.first();
                
                if(rsTmp.getRow()>0) {
                    //Do not duplicate the supplier
                }
                else {
                    
                    
                    rsDest.moveToInsertRow();
                    rsDest.updateInt("COMPANY_ID",2);
                    rsDest.updateBoolean("APPROVED",true);
                    rsDest.updateLong("SUPP_ID",Counter);
                    rsDest.updateString("SUPPLIER_CODE",rsSource.getString("SUPPLIER_CODE"));
                    rsDest.updateString("SUPP_NAME",rsSource.getString("SUPP_NAME"));
                    rsDest.updateBoolean("ST35_REGISTERED",false);
                    rsDest.updateString("BLOCKED","N");
                    rsDest.insertRow();
                    
                    
                }
                
                rsSource.next();
            }
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    private void StartTemp() {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms,stSA;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsSA;
        String strSQL="";
        int Counter=0;
        
        try {
            destConn=data.getConn();
            
            
            //============== Updating Stock (Withoud BOE & Lot) --------------------//
            strSQL="SELECT * FROM D_COM_USER_RIGHTS";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            Counter=0;
            
            while(!rsDest.isAfterLast()) {
                Counter++;
                
                rsDest.updateInt("SR_NO",Counter);
                rsDest.updateRow();
                
                rsDest.next();
            }
        }
        catch(Exception e) {
            //JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    private void StartBOEStock() {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
        String strSQL="";
        long Counter=0;
        
        try {
            srcConn=data.getConn(sdmlURL);
            destConn=data.getConn();
            
            //============== Updating Stock (Withoud BOE & Lot) --------------------//
            strSQL="SELECT DISTINCT(BOE_NO),ITEM_ID FROM D_INV_MIR_DETAIL WHERE BOE_NO<>'' ";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            while(!rsDest.isAfterLast()) {
                String BOENo=rsDest.getString("BOE_NO");
                String ItemID=rsDest.getString("ITEM_ID");
                String WarehouseID=clsItem.getItemWareHouseID(EITLERPGLOBAL.gCompanyID, ItemID);
                String LocationID=clsItem.getItemLocationID(EITLERPGLOBAL.gCompanyID,ItemID);
                
                double InwardQty=0;
                double IssQty=0;
                
                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsLine=stLine.executeQuery("SELECT SUM(QTY) AS SUMQTY FROM D_INV_MIR_DETAIL WHERE ITEM_ID='"+ItemID+"' AND BOE_NO='"+BOENo+"'");
                rsLine.first();
                
                if(rsLine.getRow()>0) {
                    InwardQty=rsLine.getDouble("SUMQTY");
                }
                
                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsLine=stLine.executeQuery("SELECT SUM(QTY) AS SUMQTY FROM D_INV_ISSUE_DETAIL WHERE ITEM_CODE='"+ItemID+"' AND BOE_NO='"+BOENo+"'");
                rsLine.first();
                
                if(rsLine.getRow()>0) {
                    IssQty=rsLine.getDouble("SUMQTY");
                }
                
                stTmp=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rsTmp=stTmp.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER WHERE ITEM_ID='1' ");
                rsTmp.first();
                
                if(!BOENo.trim().equals("X")) {
                    rsTmp.moveToInsertRow();
                    rsTmp.updateInt("COMPANY_ID",2);
                    rsTmp.updateString("ITEM_ID",ItemID);
                    rsTmp.updateString("WAREHOUSE_ID",WarehouseID);
                    rsTmp.updateString("LOCATION_ID",LocationID);
                    rsTmp.updateString("LOT_NO","X");
                    rsTmp.updateString("BOE_NO",BOENo);
                    rsTmp.updateDouble("TOTAL_RECEIPT_QTY",InwardQty);
                    rsTmp.updateDouble("TOTAL_ISSUED_QTY",IssQty);
                    rsTmp.updateDouble("ON_HAND_QTY",(InwardQty-IssQty));
                    rsTmp.updateDouble("AVAILABLE_QTY",(InwardQty-IssQty));
                    rsTmp.insertRow();
                }
                
                rsDest.next();
            }
            
            
        }
        catch(Exception e) {
            //JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    private void StartIndentUpdate() {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
        String strSQL="";
        long Counter=0;
        
        try {
            srcConn=data.getConn(sdmlURL);
            destConn=data.getConn();
            
            //============== Updating Stock (Withoud BOE & Lot) --------------------//
            strSQL="SELECT * FROM D_INV_INDENT_DETAIL WHERE INDENT_NO>='020834' ";
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rsDest=stDest.executeQuery(strSQL);
            rsDest.first();
            
            while(!rsDest.isAfterLast()) {
                
                String IndentNo=rsDest.getString("INDENT_NO");
                int SrNo=rsDest.getInt("SR_NO");
                
                double POQty=0;
                
                stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                rsLine=stLine.executeQuery("SELECT SUM(QTY) AS SUMQTY FROM D_PUR_PO_DETAIL WHERE INDENT_NO='"+IndentNo+"' AND INDENT_SR_NO="+SrNo);
                rsLine.first();
                
                if(rsLine.getRow()>0) {
                    POQty=rsLine.getDouble("SUMQTY");
                }
                
                stDest.executeUpdate("UPDATE D_INV_INDENT_DETAIL SET PO_QTY="+POQty+",BAL_QTY=QTY-"+POQty+" WHERE INDENT_NO='"+IndentNo+"' AND SR_NO="+SrNo);
                
                rsDest.next();
            }
            
            
        }
        catch(Exception e) {
            //JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    
    private void StartPO2() {
        
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine,stTerms;
        ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
        String strSQL="";
        
        try {
            srcConn=data.getConn("jdbc:mysql://200.0.0.227:3306/Clone");
            destConn=data.getConn("jdbc:mysql://200.0.0.227:3306/DINESHMILLS");
            
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rsSource=stSource.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE PO_DATE>='2004-07-01' ");
            
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE PO_NO='1'");
            
            rsSource.first();
            while(!rsSource.isAfterLast()) {
                rsDest.moveToInsertRow();
                rsDest.updateInt("COMPANY_ID",2);
                rsDest.updateString("PO_NO",rsSource.getString("PO_NO"));
                rsDest.updateInt("PO_TYPE",1);
                rsDest.updateString("PO_DATE",rsSource.getString("PO_DATE"));
                rsDest.updateString("PO_REF",rsSource.getString("PO_REF"));
                
                
                
                rsSource.next();
            }
            
            
            
            //================== Updating P.O. Header Table for Dept & User ID ==========================//
           /* stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    //lblStatus.setText("PO - Updating table - "+rsSource.getRow());
                    //lblStatus.repaint();
            
                    String DeptCode=rsSource.getString("DEPT");
                    String BuyerCode=rsSource.getString("BUYER");
            
                    int DeptID=0;
                    int UserID=0;
            
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode+"'");
                    rsTmp.first();
            
                    if(rsTmp.getRow()>0) {
                        DeptID=rsTmp.getInt("DEPT_ID");
                    }
            
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE BUYER='"+BuyerCode+"'");
                    rsTmp.first();
            
                    if(rsTmp.getRow()>0) {
                        UserID=rsTmp.getInt("USER_ID");
                    }
            
                    rsSource.updateInt("USER_ID",UserID);
                    rsSource.updateInt("DEPT_ID",DeptID);
                    rsSource.updateRow();
            
                    rsSource.next();
                }
            }
            //==============Updation of P.O. Header Completed ================================//
            
            
            
            
            //============== Updating P.O. Detail for Unit ID =========================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM PO_DETAIL WHERE UNIT_ID=0");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    lblStatus.setText("P.O. - Updating Detail table - "+rsSource.getRow());
                    lblStatus.repaint();
            
                    String UnitCode=rsSource.getString("WTUNT");
                    String PONo=rsSource.getString("PO_NO");
                    String ItemCode=rsSource.getString("ITEM_CD");
                    String DeliveryDate="";
                    String IndentNo="";
                    int IndentSrNo=0;
            
                    int UnitID=0;
            
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE TRIM(PARA_ID)='UNIT' AND TRIM(D_COM_PARAMETER_MAST.DESC)='"+UnitCode+"'");
                    rsTmp.first();
            
                    if(rsTmp.getRow()>0) {
                        UnitID=rsTmp.getInt("PARA_CODE");
                    }
            
            
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM PO_SCH WHERE TRIM(PO_NO)='"+PONo+"' AND TRIM(ITEM_CD)='"+ItemCode+"'");
                    rsTmp.first();
            
                    if(rsTmp.getRow()>0) {
                        DeliveryDate=rsTmp.getString("DDATE");
                    }
            
            
                    //Updating Indent No. and Indent Sr. No.
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM PO_HEADER WHERE TRIM(PO_NO)='"+PONo+"'");
                    rsTmp.first();
            
                    if(rsTmp.getRow()>0) {
                        IndentNo=rsTmp.getString("INDENTNO");
                    }
            
                    //Finding Sr. No.
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM INDENT_TRANSACTION WHERE TRIM(REF_NO)='"+IndentNo+"' AND TRIM(ITEM_CD)='"+ItemCode+"' ");
                    rsTmp.first();
            
                    if(rsTmp.getRow()>0) {
                        IndentSrNo=rsTmp.getInt("SR_NO");
                    }
            
                    rsSource.updateInt("UNIT_ID",UnitID);
                    rsSource.updateString("DELIVERY_DATE",DeliveryDate);
                    rsSource.updateString("INDENT_NO",IndentNo);
                    rsSource.updateInt("INDENT_SR_NO",IndentSrNo);
                    rsSource.updateRow();
                    rsSource.next();
                }
            }
            //===============Completed Updating P.O. Detail ===========================//
            
            
            Counter=0;
            //-------------Updating the Sr. Nos. of Indent Line ----------------------//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
            
                while(!rsSource.isAfterLast()) {
                    Counter++;
            
                    String PONo=rsSource.getString("PO_NO");
            
                    //Create Records in Line
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM PO_DETAIL WHERE TRIM(PO_NO)='"+PONo+"'");
                    rsTmp.first();
            
                    int Sr=0;
            
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {
                            Sr++;
                            rsTmp.updateInt("SR_NO",Sr);
                            rsTmp.updateRow();
                            rsTmp.next();
                        }
                    }
            
                    rsSource.next();
                }
            }*/
            //---------------- Sr. No. updation completed ---------------------------//
            
            
            //--------- Removing Old Records -----------//
            
            
            //================ Update the P.O. Tables ======================//
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER WHERE SUBSTRING(PO_NO,1,2)='93' "); //Data of 93
            rsSource.first();
            
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE PO_NO='111'");
            
            stTerms=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsTerms=stTerms.executeQuery("SELECT * FROM D_PUR_PO_TERMS WHERE PO_NO='12'");
            
            
            //stDest.executeUpdate("DELETE FROM D_PUR_PO_HEADER");
            //stDest.executeUpdate("DELETE FROM D_PUR_PO_DETAIL");
            //stDest.executeUpdate("DELETE FROM D_PUR_PO_TERMS");
            
            Counter=0;
            //rsSource.relative(5);
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    Counter++;
                    
                    /*if(Counter<=3000 && Counter>1872) {
                        //Create Record in Destination Indent Header;
                        String PONo=rsSource.getString("PO_NO");
                        stTmp = destConn.createStatement();
                        rsTmp = stTmp.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"'");
                        rsTmp.first();
                     
                        if(rsTmp.getRow()>0) {
                     
                        }
                        else {*/
                    
                    String PONo=rsSource.getString("PO_NO");
                    
                    rsDest.moveToInsertRow();
                    rsDest.updateInt("COMPANY_ID",2);
                    rsDest.updateString("PO_NO",rsSource.getString("PO_NO"));
                    rsDest.updateString("PO_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("PO_DATE")));
                    rsDest.updateInt("PO_TYPE",1);
                    rsDest.updateString("SUPP_ID",rsSource.getString("PARTY_CD"));
                    rsDest.updateString("INQUIRY_NO",rsSource.getString("REF_NO"));
                    rsDest.updateString("INQUIRY_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("EQ_DATE")));
                    rsDest.updateString("QUOTATION_NO",rsSource.getString("QTN_NO"));
                    rsDest.updateString("QUOTATION_DATE",EITLERPGLOBAL.formatDateDB2(rsSource.getString("QTN_DATE")));
                    rsDest.updateInt("BUYER",rsSource.getInt("USER_ID"));
                    rsDest.updateInt("CURRENCY_ID",1);
                    rsDest.updateBoolean("APPROVED",true);
                    rsDest.updateBoolean("REJECTED",false);
                    rsDest.updateString("STATUS","C");
                    
                    if(rsSource.getString("DESTINATN").trim().equals("BARODA")) {
                        rsDest.updateInt("SHIP_ID",1);
                    }
                    else {
                        rsDest.updateInt("SHIP_ID",2);
                    }
                    rsDest.insertRow();
                    
                    
                    //=========== Insert Records in Terms Table ========//
                    rsTerms.moveToInsertRow();
                    rsTerms.updateInt("COMPANY_ID",2);
                    rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                    rsTerms.updateInt("PO_TYPE",1);
                    rsTerms.updateInt("SR_NO",1);
                    rsTerms.updateString("TERM_TYPE","P");
                    rsTerms.updateInt("TERM_CODE",(int)EITLERPGLOBAL.formatDNumber(rsSource.getString("PTC")));
                    rsTerms.updateString("TERM_DESC",rsSource.getString("TERMS"));
                    rsTerms.insertRow();
                    
                    
                    if(rsSource.getString("OTC").trim().equals("")||rsSource.getString("OTC").trim().equals("N.A.")) {
                        
                    }
                    else {
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",2);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("OTC"));
                        rsTerms.insertRow();
                    }
                    
                    /*if(rsSource.getString("OTCNEW").trim().equals("")||rsSource.getString("OTCNEW").trim().equals("N.A.")) {
                     
                    }
                    else {
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",3);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("OTCNEW"));
                        rsTerms.insertRow();
                    }*/
                    
                    if(rsSource.getString("PB_TXT").trim().equals("")||rsSource.getString("PB_TXT").trim().equals("N.A.")) {
                        
                    }
                    else {
                        
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",4);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("PB_TXT"));
                        rsTerms.insertRow();
                    }
                    
                    if(rsSource.getString("PC_TXT").trim().equals("")||rsSource.getString("PC_TXT").trim().equals("N.A.")) {
                        
                    }
                    else {
                        
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",5);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("PC_TXT"));
                        rsTerms.insertRow();
                    }
                    
                    if(rsSource.getString("FC_TXT").trim().equals("")||rsSource.getString("FC_TXT").trim().equals("N.A.")) {
                        
                    }
                    else {
                        
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",6);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("FC_TXT"));
                        rsTerms.insertRow();
                    }
                    
                    if(rsSource.getString("OCT_TXT").trim().equals("")||rsSource.getString("OCT_TXT").trim().equals("N.A.")) {
                        
                    }
                    else {
                        
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",7);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("OCT_TXT"));
                        rsTerms.insertRow();
                    }
                    
                    if(rsSource.getString("LCC_TXT").trim().equals("")||rsSource.getString("LCC_TXT").trim().equals("N.A.")) {
                        
                    }
                    else {
                        
                        rsTerms.moveToInsertRow();
                        rsTerms.updateInt("COMPANY_ID",2);
                        rsTerms.updateString("PO_NO",rsSource.getString("PO_NO"));
                        rsTerms.updateInt("PO_TYPE",1);
                        rsTerms.updateInt("SR_NO",8);
                        rsTerms.updateString("TERM_TYPE","O");
                        rsTerms.updateString("TERM_DESC",rsSource.getString("LCC_TXT"));
                        rsTerms.insertRow();
                    }
                    
                    
                    //Create Records in Line
                    stTmp=srcConn.createStatement();
                    rsTmp=stTmp.executeQuery("SELECT * FROM PO_DETAIL WHERE PO_NO='"+PONo+"'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        //Open Line Table
                        stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        rsLine=stLine.executeQuery("SELECT * FROM D_PUR_PO_DETAIL");
                        
                        int Sr=0;
                        
                        while(!rsTmp.isAfterLast()) {
                            Sr++;
                            rsLine.moveToInsertRow();
                            rsLine.updateInt("COMPANY_ID",2);
                            rsLine.updateString("PO_NO",PONo);
                            rsLine.updateInt("SR_NO",Sr);
                            rsLine.updateInt("PO_TYPE",1);
                            
                            rsLine.updateString("ITEM_ID",rsTmp.getString("ITEM_CD"));
                            rsLine.updateString("ITEM_DESC",rsTmp.getString("DESC"));
                            rsLine.updateInt("UNIT",rsTmp.getInt("UNIT_ID"));
                            rsLine.updateDouble("QTY",rsTmp.getDouble("TORD_QTY"));
                            rsLine.updateDouble("RATE",rsTmp.getDouble("PO_RATE"));
                            rsLine.updateDouble("TOTAL_AMOUNT",rsTmp.getDouble("VALUE"));
                            rsLine.updateDouble("NET_AMOUNT",rsTmp.getDouble("VALUE"));
                            rsLine.updateDouble("COLUMN_1_PER",rsTmp.getDouble("DISCOUNT"));
                            rsLine.updateString("INDENT_NO",rsTmp.getString("INDENT_NO"));
                            rsLine.updateInt("INDENT_SR_NO",rsTmp.getInt("INDENT_SR_NO"));
                            rsLine.updateString("DELIVERY_DATE",EITLERPGLOBAL.formatDateDB2(rsTmp.getString("DELIVERY_DATE")));
                            rsLine.updateDouble("RECD_QTY",rsTmp.getDouble("GI_QTY"));
                            rsLine.updateDouble("PENDING_QTY",rsTmp.getDouble("TORD_QTY")-rsTmp.getDouble("GI_QTY"));
                            rsLine.insertRow();
                            rsTmp.next();
                        }
                    }
                    
                    //  } //PO Found
                    //}//Counter
                    
                    rsSource.next();
                } //While Loop
            } //If Condition
            //=====================================================================//
            
        }
        catch(Exception e) {
            
            JOptionPane.showMessageDialog(null," Error in PO Import "+e.getMessage());
        }
    }
    
    
    private void StartCostCenter() {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine;
        ResultSet rsSource,rsDest,rsTmp,rsLine;
        String strSQL="";
        
        try {
            srcConn=data.getConn(sdmlURL);
            destConn=data.getConn();
            
            /*stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM COST_DEPT");
            rsSource.first();
             
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    String DeptCode=rsSource.getString("DEPT_NAME");
             
                    int DeptID=0;
             
                    //Find out the User ID
                    stTmp=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsTmp=stTmp.executeQuery("SELECT * FROM DEPT WHERE DEPT='"+DeptCode+"'");
                    rsTmp.first();
             
                    if(rsTmp.getRow()>0) {
                        DeptID=rsTmp.getInt("DEPT_ID");
                    }
             
                    rsSource.updateInt("DEPT_ID",DeptID);
                    rsSource.updateRow();
             
                    rsSource.next();
                }
            }*/
            
            
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM COST_MASTER");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    int DeptID=0;
                    
                    stTmp=srcConn.createStatement();
                    rsTmp=stTmp.executeQuery("SELECT DEPT_ID FROM COST_DEPT WHERE COSTC="+rsSource.getInt("COSTC"));
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        DeptID=rsTmp.getInt("DEPT_ID");
                    }
                    
                    rsSource.updateInt("DEPT_ID",DeptID);
                    rsSource.updateRow();
                    
                    rsSource.next();
                }
            }
            
            
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM COST_MASTER");
            rsSource.first();
            
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_COM_COST_CENTER");
            rsDest.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    
                    rsDest.moveToInsertRow();
                    rsDest.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                    rsDest.updateInt("COST_CENTER_ID",rsSource.getInt("COSTC"));
                    rsDest.updateString("COST_CENTER_NAME",rsSource.getString("COSTNAME"));
                    rsDest.updateInt("DEPT_ID",rsSource.getInt("DEPT_ID"));
                    rsDest.insertRow();
                    
                    rsSource.next();
                }
            }
            
            JOptionPane.showMessageDialog(null,"Done");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null," error is "+e.getMessage());
            
        }
        
    }
    
    
    
    
    private void updateItemSrNo() {
        Connection srcConn,destConn;
        Statement stSource,stDest,stTmp,stLine;
        ResultSet rsSource,rsDest,rsTmp,rsLine;
        String strSQL="";
        
        int counter=0;
        
        try {
            srcConn=data.getConn();
            destConn=data.getConn();
            
            stSource=srcConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsSource=stSource.executeQuery("SELECT * FROM D_COM_ITEM_MAPPING");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    counter++;
                    rsSource.updateInt("SR_NO",counter);
                    rsSource.updateRow();
                    
                    rsSource.next();
                }
            }
            
            
            
            JOptionPane.showMessageDialog(null,"Done");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null," error is "+e.getMessage());
            
        }
        
    }
    
    
    private void UpdateDescriptions() {
        new Thread() {
            
            public void run() {
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    
                    //================== Updating MIR Header Table for Dept & Transport ID & Pending ID==========================//
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT REF_NO,ITEM_CD,GRN_DETAIL.DESC FROM GRN_DETAIL");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating GRN "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String GRNNo=rsSource.getString("REF_NO");
                            String ItemID=rsSource.getString("ITEM_CD");
                            String Description=rsSource.getString("DESC");
                            
                            data.Execute("UPDATE D_INV_GRN_DETAIL SET ITEM_EXTRA_DESC='"+Description+"' WHERE GRN_NO='"+GRNNo+"' AND ITEM_ID='"+ItemID+"'");
                            
                            rsSource.next();
                        }
                    }
                    
                    
                    //MIR
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT IN_NO,ITEM_CD,MIR_DETAIL.DESC FROM MIR_DETAIL");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating MIR "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String MIRNo=rsSource.getString("IN_NO");
                            String ItemID=rsSource.getString("ITEM_CD");
                            String Description=rsSource.getString("DESC");
                            
                            data.Execute("UPDATE D_INV_MIR_DETAIL SET ITEM_EXTRA_DESC='"+Description+"' WHERE MIR_NO='"+MIRNo+"' AND ITEM_ID='"+ItemID+"'");
                            
                            rsSource.next();
                        }
                    }
                    
                    
                    //PO
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT PO_NO,ITEM_CD,PO_DETAIL.DESC FROM PO_DETAIL");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating PO "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String PONo=rsSource.getString("PO_NO");
                            String ItemID=rsSource.getString("ITEM_CD");
                            String Description=rsSource.getString("DESC");
                            
                            data.Execute("UPDATE D_PUR_PO_DETAIL SET ITEM_EXTRA_DESC='"+Description+"' WHERE PO_NO='"+PONo+"' AND ITEM_ID='"+ItemID+"'");
                            
                            rsSource.next();
                        }
                    }
                    
                    //Indent
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT REF_NO,ITEM_CD,INDENT_TRANSACTION.DESC FROM INDENT_TRANSACTION");
                    rsSource.first();
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            
                            lblStatus.setText("Updating Indent "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            String IndentNo=rsSource.getString("REF_NO");
                            String ItemID=rsSource.getString("ITEM_CD");
                            String Description=rsSource.getString("DESC");
                            
                            data.Execute("UPDATE D_INV_INDENT_DETAIL SET ITEM_EXTRA_DESC='"+Description+"' WHERE INDENT_NO='"+IndentNo+"' AND ITEM_CODE='"+ItemID+"'");
                            
                            rsSource.next();
                        }
                    }
                    
                    
                    
                    
                    
                }
                catch(Exception e) {
                    
                    JOptionPane.showMessageDialog(null," Error in GRN Import "+e.getMessage());
                }
                
            };
        }.start();
        
        
        
    }
    
    
    private void StartItemNewUpdate() {
        new Thread() {
            
            public void run() {
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms,stSA,stItem;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsSA,rsItem;
                String strSQL="";
                long Counter=0,ItemCounter=0;
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    //============== Updating Stock (Withoud BOE & Lot) --------------------//
                    /*strSQL="SELECT * FROM D_INV_ITEM_MASTER";
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_ITEM_MASTER WHERE ITEM_ID='1'");
                    rsDest.first();
                     
                    stSource=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_ITEM_MASTER_TMP ");
                    rsSource.first();
                     
                     
                    boolean ItemFound=false;
                    while(!rsSource.isAfterLast()) {
                        String ItemID=rsSource.getString("ITEM_ID");
                     
                        ItemCounter++;
                        lblStatus.setText("Processing "+ItemID+" ----> "+ItemCounter);
                        lblStatus.repaint();
                     
                        ItemFound=false;
                        //Check whether
                        rsTmp=data.getResult("SELECT ITEM_ID FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+ItemID+"'");
                        rsTmp.first();
                     
                        if(rsTmp.getRow()>0) {
                            ItemFound=true;
                        }
                     
                        if(ItemFound) {
                            data.Execute("DELETE FROM D_INV_ITEM_LOT_MASTER WHERE ITEM_ID='"+ItemID+"'");
                     
                            //Update Item Master with new data. Do not alter other fields
                            stItem=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsItem=stItem.executeQuery("SELECT * FROM D_INV_ITEM_MASTER WHERE ITEM_ID='"+ItemID+"'");
                            rsItem.first();
                     
                            if(rsItem.getRow()>0) {
                                rsItem.updateString("ITEM_DESCRIPTION",rsSource.getString("ITEM_DESCRIPTION"));
                                rsItem.updateString("WAREHOUSE_ID","S");
                                rsItem.updateString("LOCATION_ID",rsSource.getString("LOCATION_ID"));
                                rsItem.updateDouble("UNIT_RATE",rsSource.getDouble("UNIT_RATE"));
                                rsItem.updateDouble("AVG_RATE",rsSource.getDouble("AVG_RATE"));
                                rsItem.updateBoolean("EXCISE_APPLICABLE",rsSource.getBoolean("EXCISE_APPLICABLE"));
                                rsItem.updateString("LAST_GRN_NO",rsSource.getString("LAST_GRN_NO"));
                                rsItem.updateString("LAST_PO_NO",rsSource.getString("LAST_PO_NO"));
                                rsItem.updateDouble("AVG_CONSUMPTION",rsSource.getDouble("AVG_CONSUMPTION"));
                                rsItem.updateDouble("OP_QTY_MM",rsSource.getDouble("OP_QTY_MM"));
                                rsItem.updateDouble("GI_QTY_MM",rsSource.getDouble("GI_QTY_MM"));
                                rsItem.updateDouble("IS_QTY_MM",rsSource.getDouble("IS_QTY_MM"));
                                rsItem.updateDouble("OP_Z_QTY",rsSource.getDouble("OP_Z_QTY"));
                                rsItem.updateDouble("GI_Z_QTY",rsSource.getDouble("GI_Z_QTY"));
                                rsItem.updateDouble("IS_Z_QTY",rsSource.getDouble("IS_Z_QTY"));
                                rsItem.updateString("SPECIAL_APPROVAL",rsSource.getString("SPECIAL_APPROVAL"));
                                rsItem.updateRow();
                            }
                     
                        }
                        else {
                            int ItemSysID=0;
                     
                            System.out.println("New Item "+ItemID);
                            rsTmp=data.getResult("SELECT MAX(ITEM_SYS_ID) AS ITEM_SYS_ID FROM D_INV_ITEM_MASTER");
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0) {
                                ItemSysID=rsTmp.getInt("ITEM_SYS_ID")+1;
                            }
                     
                     
                            String UnitName=rsSource.getString("UNIT_NAME");
                            int UnitID=0;
                     
                            rsTmp=data.getResult("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='UNIT' AND D_COM_PARAMETER_MAST.DESC='"+UnitName.trim()+"'");
                            rsTmp.first();
                     
                     
                            if(rsTmp.getRow()>0) {
                                UnitID=rsTmp.getInt("PARA_CODE");
                            }
                     
                            //Update Item Master with new data. Do not alter other fields
                            stItem=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                            rsItem=stItem.executeQuery("SELECT * FROM D_INV_ITEM_MASTER WHERE ITEM_ID='1'");
                            rsItem.first();
                     
                            rsItem.moveToInsertRow();
                            rsItem.updateInt("COMPANY_ID",2);
                            rsItem.updateString("ITEM_ID",rsSource.getString("ITEM_ID"));
                            rsItem.updateInt("ITEM_SYS_ID",ItemSysID);
                            rsItem.updateBoolean("APPROVED",true);
                            rsItem.updateInt("UNIT",UnitID);
                            rsItem.updateString("ITEM_DESCRIPTION",rsSource.getString("ITEM_DESCRIPTION"));
                            //rsItem.updateString("WAREHOUSE_ID",rsSource.getString("WAREHOUSE_ID"));
                            rsItem.updateString("WAREHOUSE_ID","S");
                            rsItem.updateString("LOCATION_ID",rsSource.getString("LOCATION_ID"));
                            rsItem.updateDouble("UNIT_RATE",rsSource.getDouble("UNIT_RATE"));
                            rsItem.updateDouble("AVG_RATE",rsSource.getDouble("AVG_RATE"));
                            rsItem.updateBoolean("EXCISE_APPLICABLE",rsSource.getBoolean("EXCISE_APPLICABLE"));
                            rsItem.updateString("LAST_GRN_NO",rsSource.getString("LAST_GRN_NO"));
                            rsItem.updateString("LAST_PO_NO",rsSource.getString("LAST_PO_NO"));
                            rsItem.updateDouble("AVG_CONSUMPTION",rsSource.getDouble("AVG_CONSUMPTION"));
                            rsItem.updateDouble("OP_QTY_MM",rsSource.getDouble("OP_QTY_MM"));
                            rsItem.updateDouble("GI_QTY_MM",rsSource.getDouble("GI_QTY_MM"));
                            rsItem.updateDouble("IS_QTY_MM",rsSource.getDouble("IS_QTY_MM"));
                            rsItem.updateDouble("OP_Z_QTY",rsSource.getDouble("OP_Z_QTY"));
                            rsItem.updateDouble("GI_Z_QTY",rsSource.getDouble("GI_Z_QTY"));
                            rsItem.updateDouble("IS_Z_QTY",rsSource.getDouble("IS_Z_QTY"));
                            rsItem.updateString("SPECIAL_APPROVAL",rsSource.getString("SPECIAL_APPROVAL"));
                            rsItem.insertRow();
                        }
                        rsSource.next();
                    }*/
                    
                    
                    
                    //Following will be run after updation
                    data.Execute("DELETE FROM D_INV_ITEM_LOT_MASTER"); // Uncomment this line
                    
                    
                    rsTmp=data.getResult("SELECT COUNT(*) AS THECOUNT FROM D_INV_ITEM_MASTER ");
                    rsTmp.first();
                    
                    Bar.setMaximum(rsTmp.getInt("THECOUNT"));
                    Bar.setValue(0);
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_ITEM_MASTER");
                    rsDest.first();
                    
                    
                    stLine=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsLine=stLine.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER");
                    
                    Counter=0;
                    
                    while(!rsDest.isAfterLast()) {
                        Counter++;
                        
                        Bar.setValue(rsDest.getRow());
                        Bar.repaint();
                        String ItemID=rsDest.getString("ITEM_ID");
                        lblStatus.setText("Inserting "+ItemID);
                        lblStatus.repaint();
                        
                        //--------- Stock Effect ----------------//
                        rsLine.moveToInsertRow();
                        rsLine.updateInt("COMPANY_ID",2);
                        rsLine.updateString("ITEM_ID",rsDest.getString("ITEM_ID"));
                        rsLine.updateString("LOT_NO","X");
                        rsLine.updateString("BOE_NO","X");
                        
                        double OpeningQty=(rsDest.getDouble("OP_QTY_MM")+rsDest.getDouble("GI_QTY_MM")-rsDest.getDouble("IS_QTY_MM"))+(rsDest.getDouble("OP_Z_QTY")+rsDest.getDouble("GI_Z_QTY")-rsDest.getDouble("IS_Z_QTY"));
                        double ZeroValQty=rsDest.getDouble("OP_Z_QTY")+rsDest.getDouble("GI_Z_QTY")-rsDest.getDouble("IS_Z_QTY");
                        
                        rsLine.updateDouble("OPENING_QTY",OpeningQty);
                        rsLine.updateDouble("AVAILABLE_QTY",OpeningQty);
                        rsLine.updateDouble("ON_HAND_QTY",OpeningQty);
                        rsLine.updateDouble("ZERO_VAL_QTY",ZeroValQty);
                        rsLine.updateDouble("ZERO_OPENING_QTY",ZeroValQty);
                        rsLine.updateString("WAREHOUSE_ID","S");
                        rsLine.updateString("LOCATION_ID",rsDest.getString("LOCATION_ID"));
                        rsLine.insertRow();
                        //------------ Stock Effect Completed ----------//
                        
                        /*rsDest.updateDouble("OPENING_QTY",OpeningQty);
                        rsDest.updateDouble("AVAILABLE_QTY",OpeningQty);
                        rsDest.updateDouble("ON_HAND_QTY",OpeningQty);
                        rsDest.updateDouble("ZERO_VALUE_QTY",ZeroValQty);
                        rsDest.updateDouble("ZERO_OPENING_QTY",ZeroValQty);
                        rsDest.updateString("WAREHOUSE_ID","S");
                        rsDest.updateBoolean("BLOCKED",false);
                        rsDest.updateBoolean("MAINTAIN_STOCK",true);
                        rsDest.updateRow();*/
                        
                        data.Execute("UPDATE D_INV_ITEM_MASTER SET OPENING_QTY="+OpeningQty+",AVAILABLE_QTY="+OpeningQty+",ON_HAND_QTY="+OpeningQty+",ZERO_VALUE_QTY="+ZeroValQty+",WAREHOUSE_ID='S',BLOCKED='N' WHERE ITEM_ID='"+ItemID+"'");
                        
                        
                        rsDest.next();
                    }
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();
        
    }
    
    
    
    private void UpdatePOTerms() {
        
        
        //General PO Terms Updation.
        new Thread(){
            public void run() {
                
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
                    
                    stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT * FROM D_COM_SUPP_MASTER WHERE APPROVED=1 AND PAYMENT_TERM_CODE=7");
                    rsDest.first();
                    while(!rsDest.isAfterLast()) {
                        
                        int PaymentDays=rsDest.getInt("PAYMENT_DAYS");
                        String Term="CREDIT TERMS WITH "+PaymentDays+" DAYS, THROUGH BOMBAY OFFICE";
                        int SuppID=rsDest.getInt("SUPP_ID");
                        String SuppCode=rsDest.getString("SUPPLIER_CODE");
                        
                        //data.Execute("UPDATE D_COM_SUPP_TERMS SET TERM_DESC='"+Term+"' WHERE TERM_TYPE='P' AND SUPP_ID="+SuppID);
                        
                        
                        rsTmp=data.getResult("SELECT TERM_DESC FROM D_COM_SUPP_TERMS WHERE SUPP_ID="+SuppID+" AND TERM_TYPE='P'");
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            Term=rsTmp.getString("TERM_DESC");
                            data.Execute("UPDATE D_PUR_PO_HEADER SET PAYMENT_TERM='"+Term+"' WHERE SUPP_ID='"+SuppCode+"' AND APPROVED=0");
                        }
                        
                        
                        rsDest.next();
                    }
                    
                    
                    lblStatus.setText("Completed...");
                    lblStatus.repaint();
                    
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();
        
        
        //General PO Terms Updation.
        /*new Thread(){
            public void run() {
         
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
         
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
         
                    stDest=destConn.createStatement();
         
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER");
                    rsSource.first();
         
                    while(!rsSource.isAfterLast()) {
                        String PONo=rsSource.getString("PO_NO");
         
                        lblStatus.setText("Upading PO "+PONo);
                        lblStatus.repaint();
         
         
                        String PaymentTerm=rsSource.getString("TERMS");
                        String ExciseTerm="";
                        String STTerm="";
         
                        //Generating Payment Term
                        //CREDIT TERMS WITH X DAYS
                        if(rsSource.getString("PTC").trim().equals("06")) {
                            if(rsSource.getInt("CR_DAYS")>0) {
                                PaymentTerm="CREDIT TERMS WITH "+rsSource.getInt("CR_DAYS")+" DAYS";
                            }
                            else {
                                PaymentTerm="CREDIT TERMS WITH 30 DAYS";
                            }
                        }
         
                        //SIGHT DRAFT/HUNDI WITH X DAYS
                        if(rsSource.getString("PTC").trim().equals("02")) {
                            if(rsSource.getInt("CR_DAYS")>0) {
                                PaymentTerm="SIGHT DRAFT/HUNDI WITH "+rsSource.getInt("CR_DAYS")+" DAYS";
                            }
                            else {
                                PaymentTerm="SIGHT DRAFT/HUNDI WITH 30 DAYS";
                            }
                        }
         
         
                        //SIGHT DRAFT/HUNDI WITH X DAYS
                        if(rsSource.getString("PTC").trim().equals("07")) {
                            if(rsSource.getInt("CR_DAYS")>0) {
                                PaymentTerm="THROUGH BOMBAY OFFICE "+rsSource.getInt("CR_DAYS")+" DAYS";
                            }
                            else {
                                PaymentTerm="THROUGH BOMBAY OFFICE";
                            }
                        }
         
         
                        if(rsSource.getDouble("EXCISE")>0) {
                            ExciseTerm=" "+rsSource.getDouble("EXCISE")+"%";
                        }
         
                        if(rsSource.getDouble("SALESTAX")>0) {
                            STTerm=" "+rsSource.getDouble("SALESTAX")+"%";
                        }
         
                        stDest.executeUpdate("UPDATE D_PUR_PO_HEADER SET PAYMENT_TERM='"+PaymentTerm+"',EXCISE_TERM='"+ExciseTerm+"',ST_TERM='"+STTerm+"',CR_DAYS="+rsSource.getInt("CR_DAYS")+" WHERE PO_NO='"+PONo+"' AND PO_TYPE=1");
         
                        rsSource.next();
                    }
         
         
         
                    lblStatus.setText("Completed...");
                    lblStatus.repaint();
         
         
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();*/
        
        
        
        //A Class PO Terms Updation.
        /*new Thread(){
            public void run() {
         
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
         
                try {
                    srcConn=data.getConn(sdmlURL);
                    destConn=data.getConn();
         
                    stDest=destConn.createStatement();
         
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM PO_HEADER_A");
                    rsSource.first();
         
                    while(!rsSource.isAfterLast()) {
                        String PONo=rsSource.getString("PO_NO");
         
                        lblStatus.setText("Upading PO A CLASS "+PONo);
                        lblStatus.repaint();
         
         
                        String PaymentTerm=rsSource.getString("TERMS");
                        int ParaCode=Integer.parseInt(rsSource.getString("PTC"));
                            stTmp=srcConn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                            rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_PARAMETER_MAST WHERE PARA_ID='PAYMENT_CODE' AND D_COM_PARAMETER_MAST.PARA_ID="+ParaCode);
                            rsTmp.first();
         
                            if(rsTmp.getRow()>0) {
                                PaymentTerm=rsTmp.getString("DESC");
                            }
         
         
         
                        String ExciseTerm=rsSource.getString("EXCISE");
                        String STTerm=rsSource.getString("SALESTAX");
         
                        //Generating Payment Term
                        //CREDIT TERMS WITH X DAYS
                        if(rsSource.getString("PTC").trim().equals("06")) {
                            if(Integer.parseInt(rsSource.getString("CR_DAYS").trim())>0) {
                                PaymentTerm="CREDIT TERMS WITH "+rsSource.getString("CR_DAYS")+" DAYS";
                            }
                            else {
                                PaymentTerm="CREDIT TERMS WITH 30 DAYS";
                            }
                        }
         
                        //SIGHT DRAFT/HUNDI WITH X DAYS
                        if(rsSource.getString("PTC").trim().equals("02")) {
                            if(Integer.parseInt(rsSource.getString("CR_DAYS").trim())>0) {
                                PaymentTerm="SIGHT DRAFT/HUNDI WITH "+rsSource.getString("CR_DAYS")+" DAYS";
                            }
                            else {
                                PaymentTerm="SIGHT DRAFT/HUNDI WITH 30 DAYS";
                            }
                        }
         
         
         
                        stDest.executeUpdate("UPDATE D_PUR_PO_HEADER SET PAYMENT_TERM=\""+PaymentTerm+"\",EXCISE_TERM=\""+ExciseTerm+"\",ST_TERM=\""+STTerm+"\" WHERE PO_NO=\""+PONo+"\" AND PO_TYPE=3");
         
         
                        rsSource.next();
                    }
         
                lblStatus.setText("Completed...");
                lblStatus.repaint();
         
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();*/
        
        
    }
    
    
    public boolean CopyRecord(ResultSet rsSource,ResultSet rsDest) {
        try {
            ResultSetMetaData rsInfo=rsSource.getMetaData();
            if(rsSource.getRow()>0) {
                for(int i=1;i<=rsInfo.getColumnCount();i++) {
                    switch(rsInfo.getColumnType(i)) {
                        case -5: //Long
                            rsDest.updateLong(rsInfo.getColumnName(i), rsSource.getLong(i));
                            break;
                        case 4: //Integer,Small int
                            rsDest.updateInt(rsInfo.getColumnName(i), rsSource.getInt(i));
                            break;
                        case 5: //Integer,Small int
                            rsDest.updateInt(rsInfo.getColumnName(i), rsSource.getInt(i));
                            break;
                        case -6: //Integer,Small int
                            rsDest.updateInt(rsInfo.getColumnName(i), rsSource.getInt(i));
                            break;
                        case 16: //Boolean
                            rsDest.updateBoolean(rsInfo.getColumnName(i), rsSource.getBoolean(i));
                            break;
                        case 91: //Date
                            rsDest.updateDate(rsInfo.getColumnName(i), rsSource.getDate(i));
                            break;
                        case 8: //Double
                            rsDest.updateDouble(rsInfo.getColumnName(i), rsSource.getDouble(i));
                            break;
                        case 6: //Float
                            rsDest.updateFloat(rsInfo.getColumnName(i), rsSource.getFloat(i));
                            break;
                        case 12 ://Varchar
                            rsDest.updateString(rsInfo.getColumnName(i), rsSource.getString(i));
                            break;
                        default:
                            rsDest.updateString(rsInfo.getColumnName(i), rsSource.getString(i));
                            break;
                    } //Switch
                    
                    
                }
            }
            return true;
        }
        catch(Exception e) {
            return false;
        }
    }
    
    
    private void replaceData() {
        new Thread() {
            
            public void run() {
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(bkupURL);
                    destConn=data.getConn();
                    
                    
                    //UPDATING INDENTS WITH OLD ENTERED DATA
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_INDENT_HEADER WHERE APPROVED=0");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_INDENT_HEADER LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old INDENT_HEADER "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            data.Execute("DELETE FROM D_INV_INDENT_HEADER WHERE INDENT_NO='"+rsSource.getString("INDENT_NO")+"'");
                            data.Execute("DELETE FROM D_INV_INDENT_DETAIL WHERE INDENT_NO='"+rsSource.getString("INDENT_NO")+"'");
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    
                    //UPDATING INDENTS WITH OLD ENTERED DATA
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_INDENT_DETAIL WHERE INDENT_NO IN (SELECT INDENT_NO FROM D_INV_INDENT_HEADER WHERE APPROVED=0)");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_INDENT_DETAIL LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old INDENT_DETAIL "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    //PO
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE APPROVED=0");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_HEADER LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old PO_HEADER "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            data.Execute("DELETE FROM D_PUR_PO_HEADER WHERE PO_NO='"+rsSource.getString("PO_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                            data.Execute("DELETE FROM D_PUR_PO_DETAIL WHERE PO_NO='"+rsSource.getString("PO_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                            data.Execute("DELETE FROM D_PUR_PO_TERMS WHERE PO_NO='"+rsSource.getString("PO_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    
                    //PO
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_PO_DETAIL WHERE PO_NO IN (SELECT PO_NO FROM D_PUR_PO_HEADER WHERE APPROVED=0) ");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_DETAIL LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old PO_DETAIL "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    //TERMS
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_PO_TERMS WHERE PO_NO IN (SELECT PO_NO FROM D_PUR_PO_HEADER WHERE APPROVED=0) ");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_TERMS LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old PO_TERMS "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    
                    
                    
                    //MIR
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_MIR_HEADER WHERE APPROVED=0");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_MIR_HEADER LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old MIR_HEADER "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            data.Execute("DELETE FROM D_INV_MIR_HEADER WHERE MIR_NO='"+rsSource.getString("MIR_NO")+"'");
                            data.Execute("DELETE FROM D_INV_MIR_DETAIL WHERE MIR_NO='"+rsSource.getString("MIR_NO")+"'");
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    //MIR DETAIL
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_MIR_DETAIL WHERE MIR_NO IN (SELECT MIR_NO FROM D_INV_MIR_HEADER WHERE APPROVED=0)");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_MIR_DETAIL LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old MIR_DETAIL "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    //GRN
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_GRN_HEADER WHERE APPROVED=0");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_GRN_HEADER LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old GRN_HEADER "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            data.Execute("DELETE FROM D_INV_GRN_HEADER WHERE GRN_NO='"+rsSource.getString("GRN_NO")+"'");
                            data.Execute("DELETE FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+rsSource.getString("GRN_NO")+"'");
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    //GRN DETAIL
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_GRN_DETAIL WHERE GRN_NO IN (SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE APPROVED=0)");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_GRN_DETAIL LIMIT 1");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating old GRN_DETAIL "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource,rsDest);
                            rsDest.insertRow();
                            
                            rsSource.next();
                        }
                        
                    }
                    
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,"Error occured "+e.getMessage());
                }
            };
        }.start();
    }
    
    
    
    
    
    private void updateApprovals() {
        new Thread() {
            
            public void run() {
                Connection srcConn,destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                String strSQL="";
                
                try {
                    srcConn=data.getConn(bkupURL);
                    destConn=data.getConn();
                    
                    
                    //COPY D_COM_DOC_DATA
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_COM_DOC_DATA WHERE MODULE_ID=25");
                    rsSource.first();
                    
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_COM_DOC_DATA");
                    
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating D_COM_DOC_DATA "+rsSource.getRow());
                            lblStatus.repaint();
                            
                            //if(rsSource.getInt("MODULE_ID")==3||rsSource.getInt("MODULE_ID")==21||rsSource.getInt("MODULE_ID")==23||rsSource.getInt("MODULE_ID")==5||rsSource.getInt("MODULE_ID")==7||rsSource.getInt("MODULE_ID")==28||rsSource.getInt("MODULE_ID")==30||rsSource.getInt("MODULE_ID")==37||rsSource.getInt("MODULE_ID")==1) {
                            //data.Execute("DELETE FROM D_COM_DOC_DATA WHERE MODULE_ID="+rsSource.getInt("MODULE_ID")+" AND DOC_NO='"+rsSource.getString("DOC_NO")+"' AND SR_NO="+rsSource.getInt("SR_NO"));
                            
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            //}
                            rsSource.next();
                        }
                        
                    }
                    
                    
                    //UPDATING INDENTS
                    /*stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_INDENT_HEADER WHERE APPROVED=0");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_INDENT_HEADER");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating INDENT_HEADER "+rsSource.getRow());
                            lblStatus.repaint();
                     
                            data.Execute("UPDATE D_INV_INDENT_HEADER SET APPROVED=0 WHERE INDENT_NO='"+rsSource.getString("INDENT_NO")+"'");
                     
                            rsSource.next();
                        }
                     
                    }*/
                    
                    
                    //UPDATING INDENTS HISTORY
                    /*stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_INDENT_HEADER_H WHERE INDENT_NO IN (SELECT INDENT_NO FROM D_INV_INDENT_HEADER WHERE APPROVED=0) ");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_INDENT_HEADER_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating INDENT_HEADER HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_INV_INDENT_HEADER_H WHERE INDENT_NO='"+rsSource.getString("INDENT_NO")+"'");
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0) {
                     
                            }
                            else {
                                rsDest.moveToInsertRow();
                                CopyRecord(rsSource, rsDest); //Copies entire record
                                rsDest.insertRow();
                            }
                     
                            rsSource.next();
                        }
                    }*/
                    
                    
                    
                    /*stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_INDENT_DETAIL_H WHERE INDENT_NO IN (SELECT INDENT_NO FROM D_INV_INDENT_HEADER WHERE APPROVED=0) ");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_INDENT_DETAIL_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating INDENT_DETAIL HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_INV_INDENT_DETAIL_H WHERE INDENT_NO='"+rsSource.getString("INDENT_NO")+"' AND SR_NO="+rsSource.getInt("SR_NO")+" AND REVISION_NO="+rsSource.getInt("REVISION_NO"));
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0) {
                     
                            }
                            else {
                                rsDest.moveToInsertRow();
                                CopyRecord(rsSource, rsDest); //Copies entire record
                                rsDest.insertRow();
                            }
                     
                     
                            rsSource.next();
                        }
                     
                    }*/
                    
                    
                    
                    // PO GENERAL
                    /*stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_PO_HEADER WHERE APPROVED=0 AND (PO_TYPE=1 OR PO_TYPE=3) ");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_HEADER");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating PO "+rsSource.getRow());
                            lblStatus.repaint();
                     
                            data.Execute("UPDATE D_PUR_PO_HEADER SET APPROVED=0 WHERE PO_NO='"+rsSource.getString("PO_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                     
                            rsSource.next();
                        }
                     
                    }*/
                    
                    
                    
                    //UPDATING PO HISTORY
                    /*stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_PO_HEADER_H WHERE PO_NO IN (SELECT PO_NO FROM D_PUR_PO_HEADER WHERE APPROVED=0 AND (PO_TYPE=1 OR PO_TYPE=3))");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_HEADER_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating PO HEADER HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_PUR_PO_HEADER_H WHERE PO_NO='"+rsSource.getString("PO_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                     
                            rsSource.next();
                        }
                    }
                     
                     
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_PO_DETAIL_H WHERE PO_NO IN (SELECT PO_NO FROM D_PUR_PO_HEADER WHERE APPROVED=0 AND (PO_TYPE=1 OR PO_TYPE=3))");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_DETAIL_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating PO DETAIL HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_PUR_PO_DETAIL_H WHERE PO_NO='"+rsSource.getString("PO_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE")+" AND SR_NO="+rsSource.getInt("SR_NO"));
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                            rsSource.next();
                        }
                    }
                     
                     
                     
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_PO_TERMS_H WHERE PO_NO IN (SELECT PO_NO FROM D_PUR_PO_HEADER WHERE APPROVED=0 AND (PO_TYPE=1 OR PO_TYPE=3))");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_PO_TERMS_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating PO TERMS HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_PUR_PO_TERMS_H WHERE PO_NO='"+rsSource.getString("PO_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                     
                            rsSource.next();
                        }
                    }
                     
                     
                     
                    //PO AMENDMENT
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_AMEND_HEADER WHERE APPROVED=0 AND (PO_TYPE=1 OR PO_TYPE=3) ");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_AMEND_HEADER");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating PO AMENDMENT "+rsSource.getRow());
                            lblStatus.repaint();
                     
                            data.Execute("UPDATE D_PUR_AMEND_HEADER SET APPROVED=0 WHERE AMEND_NO='"+rsSource.getString("AMEND_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                     
                            rsSource.next();
                        }
                     
                    }
                     
                     
                    //UPDATING PO HISTORY
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_AMEND_HEADER_H WHERE AMEND_NO IN (SELECT AMEND_NO FROM D_PUR_AMEND_HEADER WHERE APPROVED=0 AND (PO_TYPE=1 OR PO_TYPE=3))");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_AMEND_HEADER_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating AMEND HEADER HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_PUR_AMEND_HEADER_H WHERE AMEND_NO='"+rsSource.getString("AMEND_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                     
                            rsSource.next();
                        }
                    }
                     
                     
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_AMEND_DETAIL_H WHERE AMEND_NO IN (SELECT AMEND_NO FROM D_PUR_AMEND_HEADER WHERE APPROVED=0 AND (PO_TYPE=1 OR PO_TYPE=3))");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_AMEND_DETAIL_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating AMEND DETAIL HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_PUR_AMEND_DETAIL_H WHERE AMEND_NO='"+rsSource.getString("AMEND_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                     
                            rsSource.next();
                        }
                    }
                     
                     
                     
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_PUR_AMEND_TERMS_H WHERE AMEND_NO IN (SELECT AMEND_NO FROM D_PUR_AMEND_HEADER WHERE APPROVED=0 AND (PO_TYPE=1 OR PO_TYPE=3))");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_PUR_AMEND_TERMS_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating AMEND TERMS HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_PUR_AMEND_TERMS_H WHERE AMEND_NO='"+rsSource.getString("AMEND_NO")+"' AND PO_TYPE="+rsSource.getInt("PO_TYPE"));
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                     
                            rsSource.next();
                        }
                    }
                     
                     
                     
                     
                     
                    //MIR
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_MIR_HEADER WHERE APPROVED=0 ");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_MIR_HEADER LIMIT 1");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating MIR "+rsSource.getRow());
                            lblStatus.repaint();
                     
                            data.Execute("UPDATE D_INV_MIR_HEADER SET APPROVED=0 WHERE MIR_NO='"+rsSource.getString("MIR_NO")+"'");
                     
                            rsSource.next();
                        }
                     
                    }
                     
                     
                    //UPDATING MIR HISTORY
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_MIR_HEADER_H WHERE MIR_NO IN (SELECT MIR_NO FROM D_INV_MIR_HEADER WHERE APPROVED=0)");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_MIR_HEADER_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating MIR HEADER HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_INV_MIR_HEADER_H WHERE MIR_NO='"+rsSource.getString("MIR_NO")+"'");
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                     
                     
                            rsSource.next();
                        }
                    }
                     
                     
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_MIR_DETAIL_H WHERE MIR_NO IN (SELECT MIR_NO FROM D_INV_MIR_HEADER WHERE APPROVED=0)");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_MIR_DETAIL_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating MIR DETAIL HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_INV_MIR_DETAIL_H WHERE MIR_NO='"+rsSource.getString("MIR_NO")+"'");
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                     
                            rsSource.next();
                        }
                    }
                     
                     
                     
                     
                    //GRN
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_GRN_HEADER WHERE APPROVED=0 ");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_GRN_HEADER LIMIT 1");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating GRN "+rsSource.getRow());
                            lblStatus.repaint();
                     
                            data.Execute("UPDATE D_INV_GRN_HEADER SET APPROVED=0 WHERE GRN_NO='"+rsSource.getString("GRN_NO")+"'");
                     
                            rsSource.next();
                        }
                     
                    }
                     
                     
                    //UPDATING MIR HISTORY
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_GRN_HEADER_H WHERE GRN_NO IN (SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE APPROVED=0)");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_GRN_HEADER_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating GRN HEADER HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_INV_GRN_HEADER_H WHERE GRN_NO='"+rsSource.getString("GRN_NO")+"'");
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                     
                            rsSource.next();
                        }
                    }
                     
                     
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_GRN_DETAIL_H WHERE GRN_NO IN (SELECT GRN_NO FROM D_INV_GRN_HEADER WHERE APPROVED=0)");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_GRN_DETAIL_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating GRN DETAIL HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsTmp=data.getResult("SELECT * FROM D_INV_GRN_DETAIL_H WHERE GRN_NO='"+rsSource.getString("GRN_NO")+"'");
                            rsTmp.first();
                     
                            if(rsTmp.getRow()>0)
                            {
                     
                            }
                            else
                            {
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                            }
                            rsSource.next();
                        }
                    }
                     
                     
                     
                     
                     
                    //SUPPLIER
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_COM_SUPP_MASTER WHERE APPROVED=0 ");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_COM_SUPP_MASTER");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating SUPPLIER "+rsSource.getRow());
                            lblStatus.repaint();
                     
                            data.Execute("UPDATE D_COM_SUPP_MASTER SET APPROVED=0 WHERE SUPP_ID="+rsSource.getInt("SUPP_ID"));
                     
                            rsSource.next();
                        }
                     
                    }
                     
                     
                    //UPDATING SUPPLIER HISTORY
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_COM_SUPP_MASTER_H WHERE SUPP_ID IN (SELECT SUPP_ID FROM D_COM_SUPP_MASTER WHERE APPROVED=0)");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_COM_SUPP_MASTER_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating SUPP HEADER HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                     
                     
                            rsSource.next();
                        }
                    }
                     
                     
                    //UPDATING SUPPLIER HISTORY
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_COM_SUPP_TERMS_H WHERE SUPP_ID IN (SELECT SUPP_ID FROM D_COM_SUPP_MASTER WHERE APPROVED=0)");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_COM_SUPP_TERMS_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating SUPP TERMS HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                     
                     
                            rsSource.next();
                        }
                    }
                     
                     
                     
                     
                    //ITEM
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_ITEM_MASTER WHERE APPROVED=0 ");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_ITEM_MASTER");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating ITEM "+rsSource.getRow());
                            lblStatus.repaint();
                     
                            data.Execute("UPDATE D_INV_ITEM_MASTER SET APPROVED=0 WHERE ITEM_ID='"+rsSource.getString("ITEM_ID")+"'");
                     
                            rsSource.next();
                        }
                     
                    }
                     
                     
                    //UPDATING ITEM HISTORY
                    stSource=srcConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT * FROM D_INV_ITEM_MASTER_H WHERE ITEM_ID IN (SELECT ITEM_ID FROM D_INV_ITEM_MASTER WHERE APPROVED=0)");
                    rsSource.first();
                     
                    stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_ITEM_MASTER_H");
                     
                    if(rsSource.getRow()>0) {
                        while(!rsSource.isAfterLast()) {
                            lblStatus.setText("Updating ITEM HISTORY"+rsSource.getRow());
                            lblStatus.repaint();
                     
                            rsDest.moveToInsertRow();
                            CopyRecord(rsSource, rsDest); //Copies entire record
                            rsDest.insertRow();
                     
                     
                            rsSource.next();
                        }
                    }*/
                    
                    lblStatus.setText("Completed");
                    lblStatus.repaint();
                    
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,"Error occured "+e.getMessage());
                }
            };
        }.start();
    }
    
    
    
    private void CopyFromBackup(String OldDocNo,String newDocNo) {
        try {
            
            Connection srcConn,destConn;
            Statement stSource,stDest,stTmp,stLine,stTerms;
            ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
            String strSQL="";
            
            srcConn=data.getConn(bkupURL);
            destConn=data.getConn();
            
            //HEADER
            stSource=srcConn.createStatement();
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_INV_REQ_HEADER");
            
            rsSource=stSource.executeQuery("SELECT * FROM D_INV_REQ_HEADER WHERE REQ_NO='"+OldDocNo+"'");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    rsDest.moveToInsertRow();
                    CopyRecord(rsSource,rsDest);
                    rsDest.updateString("REQ_NO",newDocNo);
                    rsDest.insertRow();
                    
                    rsSource.next();
                }
                
            }
            
            //DETAIL
            stSource=srcConn.createStatement();
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_INV_REQ_DETAIL");
            
            rsSource=stSource.executeQuery("SELECT * FROM D_INV_REQ_DETAIL WHERE REQ_NO='"+OldDocNo+"'");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    rsDest.moveToInsertRow();
                    CopyRecord(rsSource,rsDest);
                    rsDest.updateString("REQ_NO",newDocNo);
                    rsDest.insertRow();
                    
                    rsSource.next();
                }
                
            }
            
            //HEADER HISTORY
            stSource=srcConn.createStatement();
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_INV_REQ_HEADER_H");
            
            rsSource=stSource.executeQuery("SELECT * FROM D_INV_REQ_HEADER_H WHERE REQ_NO='"+OldDocNo+"'");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    rsDest.moveToInsertRow();
                    CopyRecord(rsSource,rsDest);
                    rsDest.updateString("REQ_NO",newDocNo);
                    rsDest.insertRow();
                    
                    rsSource.next();
                }
                
            }
            
            //DETAIL HISTORY
            stSource=srcConn.createStatement();
            stDest=destConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rsDest=stDest.executeQuery("SELECT * FROM D_INV_REQ_DETAIL_H");
            
            rsSource=stSource.executeQuery("SELECT * FROM D_INV_REQ_DETAIL_H WHERE REQ_NO='"+OldDocNo+"'");
            rsSource.first();
            
            if(rsSource.getRow()>0) {
                while(!rsSource.isAfterLast()) {
                    rsDest.moveToInsertRow();
                    CopyRecord(rsSource,rsDest);
                    rsDest.updateString("REQ_NO",newDocNo);
                    rsDest.insertRow();
                    
                    rsSource.next();
                }
                
            }
            
            JOptionPane.showMessageDialog(null,"Done");
            
            
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,"Error "+e.getMessage());
        }
        
    }
    
    
    
    private void CopyMIRFromBackup() {
        
        new Thread() {
            
            public void run() {
                try {
                    
                    Connection srcConn,destConn;
                    Statement stSource,stDest,stTmp,stLine,stTerms;
                    ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms;
                    String strSQL="";
                    
                    srcConn=data.getConn(bkupURL);
                    destConn=data.getConn();
                    
                    //HEADER
                    stSource=srcConn.createStatement();
                    stDest=destConn.createStatement();
                    
                    rsSource=stSource.executeQuery("SELECT MIR_NO,SR_NO,QTY,RECEIVED_QTY FROM D_INV_MIR_DETAIL ");
                    rsSource.first();
                    
                    while(!rsSource.isAfterLast()) {
                        
                        lblStatus.setText("Updating MIR "+rsSource.getRow());
                        lblStatus.repaint();
                        
                        strSQL="UPDATE D_INV_MIR_DETAIL SET QTY="+rsSource.getDouble("QTY")+",RECEIVED_QTY="+rsSource.getDouble("RECEIVED_QTY")+" WHERE MIR_NO='"+rsSource.getString("MIR_NO")+"' AND SR_NO="+rsSource.getInt("SR_NO");
                        stDest.executeUpdate(strSQL);
                        
                        rsSource.next();
                    }
                    
                    
                    
                    
                    JOptionPane.showMessageDialog(null,"Done");
                    
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,"Error "+e.getMessage());
                }
            };
        }.start();
    }
    
    
    
    private void updateSuppPTC() {
        
        new Thread() {
            
            public void run() {
                
                Connection destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms,stSupp;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsSupp;
                String strSQL="";
                long Counter=0;
                
                try {
                    destConn=data.getConn();
                    
                    stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT * FROM D_COM_SUPP_MASTER WHERE SUPPLIER_CODE NOT IN (SELECT SUPPLIER_CODE FROM D_COM_SUPP_AMEND_MASTER) AND PTC='' ");
                    rsDest.first();
                    
                    while(!rsDest.isAfterLast()) {
                        lblStatus.setText("Upading PTC "+rsDest.getRow());
                        lblStatus.repaint();
                        
                        int SuppID=rsDest.getInt("SUPP_ID");
                        int PaymentDays=0;
                        int PaymentTermCode=0;
                        boolean ptcfound=false;
                        String PTC="";
                        String SuppCode=rsDest.getString("SUPPLIER_CODE");
                        
                        //Find this supplier in terms table
                        stTmp=destConn.createStatement();
                        rsTmp=stTmp.executeQuery("SELECT * FROM D_COM_SUPP_TERMS WHERE SUPP_ID="+SuppID+" AND TERM_TYPE='P'");
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            //Get the term code
                            PaymentTermCode=rsTmp.getInt("TERM_CODE");
                            PTC=Integer.toString(PaymentTermCode);
                            PTC=EITLERPGLOBAL.Replicate("0", 2-PTC.length())+PTC.trim();
                            ptcfound=true;
                        }
                        
                        
                        stTmp=destConn.createStatement();
                        rsTmp=stTmp.executeQuery("SELECT * FROM SUPP_TERMP WHERE SUPPLIER_CODE='"+SuppCode+"'");
                        rsTmp.first();
                        
                        if(rsTmp.getRow()>0) {
                            if(!ptcfound) {
                                PTC=rsTmp.getString("PTC");
                                PaymentTermCode=Integer.parseInt(PTC);
                            }
                            PaymentDays=rsTmp.getInt("DAYS");
                        }
                        
                        //Update the supplier master
                        data.Execute("UPDATE D_COM_SUPP_MASTER SET PTC='"+PTC+"',PAYMENT_TERM_CODE="+PaymentTermCode+",PAYMENT_DAYS="+PaymentDays+" WHERE SUPP_ID="+SuppID);
                        
                        
                        rsDest.next();
                    }
                    
                    
                    
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();
        
    }
    
    
    private void updateItemBlank() {
        
        new Thread() {
            
            public void run() {
                
                Connection destConn;
                Statement stSource,stDest,stTmp,stLine,stTerms,stItem;
                ResultSet rsSource,rsDest,rsTmp,rsLine,rsTerms,rsItem;
                String strSQL="";
                long Counter=0;
                
                try {
                    destConn=data.getConn();
                    
                    stDest=destConn.createStatement();
                    rsDest=stDest.executeQuery("SELECT * FROM D_INV_ITEM_MASTER");
                    rsDest.first();
                    
                    while(!rsDest.isAfterLast()) {
                        
                        lblStatus.setText("Checking item no. "+rsDest.getRow());
                        lblStatus.repaint();
                        
                        String ItemID=rsDest.getString("ITEM_ID");
                        String WareHouseID=rsDest.getString("WAREHOUSE_ID");
                        String LocationID=rsDest.getString("LOCATION_ID");
                        
                        data.Execute("UPDATE D_INV_ITEM_LOT_MASTER SET WAREHOUSE_ID='"+WareHouseID+"',LOCATION_ID='"+LocationID+"' WHERE ITEM_ID='"+ItemID+"'");
                        
                        rsDest.next();
                    }
                    
                    /*stItem=destConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rsItem=stItem.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER WHERE ITEM_ID='1'");
                     
                     
                    while(!rsDest.isAfterLast()) {
                        lblStatus.setText("Checking item no. "+rsDest.getRow());
                        lblStatus.repaint();
                     
                        String ItemID=rsDest.getString("ITEM_ID");
                     
                        stTmp=destConn.createStatement();
                        rsTmp=stTmp.executeQuery("SELECT * FROM D_INV_ITEM_LOT_MASTER WHERE ITEM_ID='"+ItemID+"'");
                        rsTmp.first();
                     
                        if(rsTmp.getRow()>0)
                        {
                          //Nothing to do
                        }
                        else
                        {
                          rsItem.moveToInsertRow();
                          rsItem.updateInt("COMPANY_ID",rsDest.getInt("COMPANY_ID"));
                          rsItem.updateString("ITEM_ID",rsDest.getString("ITEM_ID"));
                          rsItem.updateString("LOT_NO","X");
                          rsItem.updateString("BOE_NO","X");
                          rsItem.updateString("WAREHOUSE_ID",rsDest.getString("WAREHOUSE_ID"));
                          rsItem.updateString("LOCATION_ID",rsDest.getString("LOCATION_ID"));
                          rsItem.updateString("BOE_DATE","0000-00-00");
                          rsItem.updateString("BOE_SR_NO","");
                          rsItem.updateDouble("OPENING_QTY",0);
                          rsItem.updateDouble("OPENING_RATE",0);
                          rsItem.updateDouble("TOTAL_RECEIPT_QTY",0);
                          rsItem.updateDouble("TOTAL_ISSUED_QTY",0);
                          rsItem.updateString("LAST_RECEIPT_DATE","0000-00-00");
                          rsItem.updateString("LAST_ISSUED_DATE","0000-00-00");
                          rsItem.updateDouble("ZERO_OPENING_QTY",0);
                          rsItem.updateDouble("ZERO_RECEIPT_QTY",0);
                          rsItem.updateDouble("ZERO_ISSUED_QTY",0);
                          rsItem.updateDouble("ZERO_VAL_QTY",0);
                          rsItem.updateDouble("REJECTED_QTY",0);
                          rsItem.updateDouble("ON_HAND_QTY",0);
                          rsItem.updateDouble("AVAILABLE_QTY",0);
                          rsItem.updateDouble("ALLOCATED_QTY",0);
                          rsItem.updateDouble("CREATED_BY",0);
                          rsItem.updateString("CREATED_DATE","0000-00-00");
                          rsItem.updateDouble("MODIFIED_BY",0);
                          rsItem.updateString("MODIFIED_DATE","0000-00-00");
                          rsItem.updateBoolean("CHANGED",true);
                          rsItem.updateString("CHANGED_DATE","0000-00-00");
                          rsItem.insertRow();
                     
                        }
                     
                        rsDest.next();
                    }*/
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();
        
    }
    
    
    private void updateIndentsFromTemp() {
        
        new Thread() {
            
            public void run() {
                
                Connection destConn;
                Statement stSource,stIndent,stPO;
                ResultSet rsSource,rsIndent,rsPO,rsPOQty;
                String strSQL="";
                long Counter=0;
                
                try {
                    destConn=data.getConn();
                    
                    stSource=destConn.createStatement();
                    rsSource=stSource.executeQuery("SELECT A.INDENT_NO,B.QTY,B.PO_QTY,B.ITEM_CODE FROM D_INV_INDENT_HEADER A,D_INV_INDENT_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.INDENT_NO=B.INDENT_NO AND A.APPROVED=1 AND B.PO_QTY<B.QTY AND A.CANCELED=0");
                    rsSource.first();
                    
                    while(!rsSource.isAfterLast()) {
                        
                        lblStatus.setText("Checking item no. "+rsSource.getRow());
                        lblStatus.repaint();
                        
                        String IndentNo=rsSource.getString("INDENT_NO");
                        double IndentQty=rsSource.getDouble("QTY");
                        double POQty=rsSource.getDouble("PO_QTY");
                        String ItemCode=rsSource.getString("ITEM_CODE");
                        
                        //Now Find this Indent entry in
                        rsIndent=data.getResult("SELECT * FROM INDENT_TEMP WHERE INDENT_NO='"+IndentNo+"' AND SUBSTRING(PO_NO,1,1)='B' AND ITEM_CODE='"+ItemCode+"'");
                        rsIndent.first();
                        
                        if(rsIndent.getRow()>0) {
                            String tmpIndentNo=rsIndent.getString("INDENT_NO");
                            String tmpPONo=rsIndent.getString("PO_NO");
                            
                            //Find this PO in PO File
                            rsPO=data.getResult("SELECT * FROM D_PUR_PO_DETAIL WHERE PO_NO='"+tmpPONo+"' AND ITEM_ID='"+ItemCode+"'");
                            rsPO.first();
                            
                            if(rsPO.getRow()>0) {
                                String POIndentNo=rsPO.getString("INDENT_NO");
                                if(POIndentNo.trim().equals("")) {
                                    data.Execute("UPDATE D_PUR_PO_DETAIL SET INDENT_NO='"+tmpIndentNo+"' WHERE PO_NO='"+rsPO.getString("PO_NO")+"' AND SR_NO="+rsPO.getInt("SR_NO"));
                                    
                                    //Now Update the Indent
                                    double TotalPOQty=0;
                                    rsPOQty=data.getResult("SELECT SUM(QTY) AS SUMQTY FROM D_PUR_PO_DETAIL WHERE INDENT_NO='"+tmpIndentNo+"' AND ITEM_ID='"+ItemCode+"'");
                                    rsPOQty.first();
                                    
                                    if(rsPOQty.getRow()>0) {
                                        TotalPOQty=rsPOQty.getDouble("SUMQTY");
                                    }
                                    
                                    data.Execute("UPDATE D_INV_INDENT_DETAIL SET PO_QTY="+TotalPOQty+",BAL_QTY=QTY-PO_QTY WHERE INDENT_NO='"+tmpIndentNo+"' AND ITEM_CODE='"+ItemCode+"'");
                                }
                            }
                            else {
                                //Find this PO in PO File
                                rsPO=data.getResult("SELECT * FROM D_PUR_PO_DETAIL WHERE PO_NO='"+tmpPONo.substring(0,1)+"0"+tmpPONo.substring(1)+"' AND ITEM_ID='"+ItemCode+"'");
                                rsPO.first(); 
                                if(rsPO.getRow()>0){
                                    
                                    String POIndentNo=rsPO.getString("INDENT_NO");
                                    if(POIndentNo.trim().equals("")) {
                                        data.Execute("UPDATE D_PUR_PO_DETAIL SET INDENT_NO='"+tmpIndentNo+"' WHERE PO_NO='"+rsPO.getString("PO_NO")+"' AND SR_NO="+rsPO.getInt("SR_NO"));
                                        
                                        //Now Update the Indent
                                        double TotalPOQty=0;
                                        rsPOQty=data.getResult("SELECT SUM(QTY) AS SUMQTY FROM D_PUR_PO_DETAIL WHERE INDENT_NO='"+tmpIndentNo+"' AND ITEM_ID='"+ItemCode+"'");
                                        rsPOQty.first();
                                        
                                        if(rsPOQty.getRow()>0) {
                                            TotalPOQty=rsPOQty.getDouble("SUMQTY");
                                        }
                                        
                                        
                                        data.Execute("UPDATE D_INV_INDENT_DETAIL SET PO_QTY="+TotalPOQty+",BAL_QTY=QTY-PO_QTY WHERE INDENT_NO='"+tmpIndentNo+"' AND ITEM_CODE='"+ItemCode+"'");
                                    }
                                }
                                
                                
                            }
                            
                            
                        }
                        
                        
                        rsSource.next();
                    }
                    
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e.getMessage());
                }
            };
        }.start();
        
    }
    
    
}



