/*
 * frmItemCriteria.java
 *
 * Created on May 28, 2005, 3:04 PM
 */
package EITLERP;

/**
 *
 * @author root
 */
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import EITLERP.AuthorityDelegation.*;
import java.sql.ResultSet;

public class frmYourDelegationAuthority extends javax.swing.JApplet {

    private EITLTableCellRenderer Render = new EITLTableCellRenderer();
    private EITLComboModel cmbUserModel = new EITLComboModel();
    private EITLComboModel cmbAuthorityModel = new EITLComboModel();
    private EITLComboModel cmbModuleModel = new EITLComboModel();
    private EITLComboModel cmbDeptModel = new EITLComboModel();
    public String userID = "";

    boolean canInsert=false;
    
    private EITLTableModel DataModel = new EITLTableModel();

    private clsDelegationAuthority ObjAuthority = new clsDelegationAuthority();
    private clsAuthorityDelegationRequest authdelreq = new clsAuthorityDelegationRequest();

    /**
     * Initializes the applet frmItemCriteria
     */
    public void init() {
        initComponents();
        setSize(750, 560);
        
        FormatGrid();
        GenerateGrid();
        
        
        String userName=data.getStringValueFromDB("SELECT USER_NAME FROM DINESHMILLS.D_COM_USER_MASTER WHERE USER_ID="+EITLERPGLOBAL.gUserID+"");
        jLabel1.setText(jLabel1.getText().concat(" - "+userName));
        
        
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("YOUR DELEGATION AUTHORITY OF USERS");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(7, 0, 690, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 2, 1050, 32);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(8, 90, 740, 290);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void FormatGrid() {
        DataModel = new EITLTableModel();

        Table.removeAll();

        Table.setModel(DataModel);
        TableColumnModel ColModel = Table.getColumnModel();
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        DataModel.addColumn("SR NO");
        DataModel.addColumn("USER NAME"); // Read Only - Hidden
        
        DataModel.SetReadOnly(0);
        DataModel.SetReadOnly(1);

        //Hide Unit Code column
        Table.getColumnModel().getColumn(0).setMinWidth(20);
        Table.getColumnModel().getColumn(0).setMaxWidth(40);        
        Table.getColumnModel().getColumn(1).setMinWidth(220);
        Table.getColumnModel().getColumn(1).setMaxWidth(230);                
        

    }

    private void GenerateGrid() {
        
        ResultSet rsTmp;
        String sql="";
        try {
            sql = "SELECT USER_NAME FROM\n"
                    + "(SELECT DISTINCT USER_ID FROM\n"
                    + "(SELECT DISTINCT USER_ID FROM DINESHMILLS.D_COM_AUTHORITY WHERE AUTHORITY_USER_ID="+EITLERPGLOBAL.gUserID+" AND CURDATE() BETWEEN FROM_DATE AND TO_DATE "
                    + "UNION ALL\n"
                    + "SELECT DISTINCT USER_ID FROM DINESHMILLS.D_COM_AUTHORITY_AUTO WHERE AUTHORITY_USER_ID="+EITLERPGLOBAL.gUserID+" AND CURDATE() BETWEEN FROM_DATE AND TO_DATE ) AS AL) A\n"
                    + "LEFT JOIN\n"
                    + "(SELECT USER_ID,USER_NAME FROM DINESHMILLS.D_COM_USER_MASTER) B\n"
                    + "ON A.USER_ID=B.USER_ID ";
            rsTmp=data.getResult(sql);
            rsTmp.first();
            int counter=0;
            if(rsTmp.getRow()==0) {                
                ((JFrame)getParent().getParent().getParent().getParent()).dispose();
            }
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Object[] rowData = new Object[2];
                    counter++;
                    rowData[0] = Integer.toString(counter);            
                    rowData[1] = rsTmp.getString("USER_NAME");                    
                    
                    DataModel.addRow(rowData);
                    rsTmp.next();
                }
            }
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        

    }


    
    class MyItemListener implements ItemListener
  {
    public void itemStateChanged(ItemEvent e) {
      Object source = e.getSource();
      if (source instanceof AbstractButton == false) return;
      boolean checked = e.getStateChange() == ItemEvent.SELECTED;
      for(int x = 0, y = Table.getRowCount(); x < y; x++)
      {
        Table.setValueAt(new Boolean(checked),x,0);
      }
    }
  }
}


