/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP;

import java.awt.Color;
import java.io.File;
import java.sql.ResultSet;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author root
 */
public class frmbankreco extends javax.swing.JApplet {

    /**
     * Initializes the applet frmbankreco
     */
    private EITLTableModel DataModelD, DataModelM, DataModelV, DataModelC, DataModelB;
    private EITLTableCellRenderer CellAlign = new EITLTableCellRenderer();

    private clsExcel_Exporter exp = new clsExcel_Exporter();

    private String mchqno, mchqdt, mchqamt = "0";
    private int chqpanel = 0;

    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>

        /* Create and display the applet */
        initComponents();
        setSize(950,670 );
        file1.setVisible(false);

    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrp = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtfrmdt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txttodt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmdviewbankstmt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bankstmt = new javax.swing.JTable();
        btn_exp_xls = new javax.swing.JButton();
        file1 = new javax.swing.JFileChooser();
        cmbbankstmt = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bankmismatch = new javax.swing.JTable();
        txttodt1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmdviewmismatch = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        vouchermismatch = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtstmtvdt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtcredit = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtdebit = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtinstno = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtref = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtvoucher = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtvoucherdt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtvoucheramt = new javax.swing.JTextField();
        chkcancelled = new javax.swing.JCheckBox();
        cmdsearch = new javax.swing.JButton();
        txtentrynm = new javax.swing.JTextField();
        cmdadd = new javax.swing.JButton();
        btn_exp_xls3 = new javax.swing.JButton();
        lblrcdno = new javax.swing.JLabel();
        btncrdt = new javax.swing.JRadioButton();
        btndbt = new javax.swing.JRadioButton();
        cmbbankmismatch = new javax.swing.JComboBox();
        btn_exp_xls4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cheque_mismatch = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txttodt2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cmdviewchq = new javax.swing.JButton();
        btn_exp_xls1 = new javax.swing.JButton();
        cmbbankchq = new javax.swing.JComboBox();

        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setText("From Date :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 20, 90, 25);
        jPanel1.add(txtfrmdt);
        txtfrmdt.setBounds(100, 20, 130, 30);

        jLabel2.setText("DD/MM/YYYY");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(110, 0, 90, 17);

        jLabel3.setText("To Date :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(280, 20, 70, 25);
        jPanel1.add(txttodt);
        txttodt.setBounds(350, 20, 130, 30);

        jLabel4.setText("DD/MM/YYYY");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(360, 0, 90, 17);

        cmdviewbankstmt.setText("View");
        cmdviewbankstmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdviewbankstmtActionPerformed(evt);
            }
        });
        jPanel1.add(cmdviewbankstmt);
        cmdviewbankstmt.setBounds(690, 10, 110, 40);

        bankstmt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(bankstmt);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 50, 810, 340);

        btn_exp_xls.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btn_exp_xls.setText("Export To Excel");
        btn_exp_xls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exp_xlsActionPerformed(evt);
            }
        });
        jPanel1.add(btn_exp_xls);
        btn_exp_xls.setBounds(20, 390, 160, 40);
        jPanel1.add(file1);
        file1.setBounds(210, 40, 435, 413);

        cmbbankstmt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "58->HDFC", "31->BOB", "36->CBI", "33->IOB", "54->IDBI", "37->SBI", "76->SIB", "92->YES", "75->HDFC ANK", "74->SBI ANK" }));
        jPanel1.add(cmbbankstmt);
        cmbbankstmt.setBounds(510, 12, 140, 30);

        jTabbedPane1.addTab("Statement", jPanel1);

        jPanel2.setLayout(null);

        bankmismatch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        bankmismatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bankmismatchMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bankmismatch);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(0, 60, 810, 163);
        jPanel2.add(txttodt1);
        txttodt1.setBounds(100, 20, 130, 30);

        jLabel7.setText("As on Date :");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(10, 20, 90, 25);

        jLabel8.setText("DD/MM/YYYY");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(110, 0, 90, 17);

        cmdviewmismatch.setText("View");
        cmdviewmismatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdviewmismatchActionPerformed(evt);
            }
        });
        jPanel2.add(cmdviewmismatch);
        cmdviewmismatch.setBounds(540, 10, 110, 40);

        vouchermismatch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        vouchermismatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vouchermismatchMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(vouchermismatch);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(0, 320, 810, 130);

        jPanel3.setLayout(null);

        jLabel9.setText("Stmt Value");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(0, 0, 72, 17);

        jLabel10.setText("Date");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(20, 10, 40, 17);

        txtstmtvdt.setEditable(false);
        jPanel3.add(txtstmtvdt);
        txtstmtvdt.setBounds(80, 0, 100, 27);

        jLabel11.setText("Credit");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(190, 0, 38, 17);

        jLabel12.setText("Amount");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(190, 10, 51, 17);

        txtcredit.setEditable(false);
        jPanel3.add(txtcredit);
        txtcredit.setBounds(250, 0, 120, 27);

        jLabel13.setText("Debit");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(380, 0, 34, 17);

        jLabel14.setText("Amount");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(380, 10, 51, 17);

        txtdebit.setEditable(false);
        jPanel3.add(txtdebit);
        txtdebit.setBounds(440, 0, 120, 27);

        jLabel15.setText("Instrument No.");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(0, 40, 100, 17);

        txtinstno.setEditable(false);
        jPanel3.add(txtinstno);
        txtinstno.setBounds(110, 30, 180, 27);

        jLabel16.setText("Referance No.");
        jPanel3.add(jLabel16);
        jLabel16.setBounds(310, 40, 100, 17);

        txtref.setEditable(false);
        jPanel3.add(txtref);
        txtref.setBounds(410, 30, 180, 27);

        jLabel17.setText("Voucher No.");
        jPanel3.add(jLabel17);
        jLabel17.setBounds(0, 70, 90, 17);

        txtvoucher.setEditable(false);
        jPanel3.add(txtvoucher);
        txtvoucher.setBounds(90, 60, 150, 27);

        jLabel18.setText("Voucher");
        jPanel3.add(jLabel18);
        jLabel18.setBounds(250, 60, 53, 17);

        jLabel19.setText("Date");
        jPanel3.add(jLabel19);
        jLabel19.setBounds(250, 70, 31, 17);

        txtvoucherdt.setEditable(false);
        jPanel3.add(txtvoucherdt);
        txtvoucherdt.setBounds(310, 60, 120, 27);

        jLabel20.setText("Voucher");
        jPanel3.add(jLabel20);
        jLabel20.setBounds(440, 60, 53, 17);

        jLabel21.setText("Amount");
        jPanel3.add(jLabel21);
        jLabel21.setBounds(440, 70, 60, 17);

        txtvoucheramt.setEditable(false);
        jPanel3.add(txtvoucheramt);
        txtvoucheramt.setBounds(500, 60, 120, 27);

        chkcancelled.setText("Cancelled");
        chkcancelled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkcancelledActionPerformed(evt);
            }
        });
        jPanel3.add(chkcancelled);
        chkcancelled.setBounds(640, 60, 87, 22);

        cmdsearch.setText("Search From Amount");
        cmdsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsearchActionPerformed(evt);
            }
        });
        jPanel3.add(cmdsearch);
        cmdsearch.setBounds(620, 30, 180, 29);

        txtentrynm.setEditable(false);
        jPanel3.add(txtentrynm);
        txtentrynm.setBounds(590, 0, 210, 27);

        cmdadd.setText("ADD");
        cmdadd.setEnabled(false);
        cmdadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdaddActionPerformed(evt);
            }
        });
        jPanel3.add(cmdadd);
        cmdadd.setBounds(730, 60, 70, 30);

        btn_exp_xls3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btn_exp_xls3.setText("Export To Excel");
        btn_exp_xls3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exp_xls3ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_exp_xls3);
        btn_exp_xls3.setBounds(10, 460, 160, 40);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(0, 220, 810, 90);

        lblrcdno.setForeground(new java.awt.Color(240, 236, 236));
        lblrcdno.setText("Record No");
        jPanel2.add(lblrcdno);
        lblrcdno.setBounds(733, 30, 70, 17);

        btngrp.add(btncrdt);
        btncrdt.setSelected(true);
        btncrdt.setText("Credit");
        jPanel2.add(btncrdt);
        btncrdt.setBounds(250, 20, 70, 22);

        btngrp.add(btndbt);
        btndbt.setText("Debit");
        jPanel2.add(btndbt);
        btndbt.setBounds(330, 20, 70, 22);

        cmbbankmismatch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "58->HDFC", "31->BOB", "36->CBI", "33->IOB", "54->IDBI", "37->SBI", "76->SIB", "92->YES", "75->HDFC ANK", "74->SBI ANK" }));
        jPanel2.add(cmbbankmismatch);
        cmbbankmismatch.setBounds(400, 20, 140, 30);

        btn_exp_xls4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btn_exp_xls4.setText("Export To Excel");
        btn_exp_xls4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exp_xls4ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_exp_xls4);
        btn_exp_xls4.setBounds(650, 10, 160, 40);

        jTabbedPane1.addTab("MisMatch", jPanel2);

        jPanel5.setLayout(null);

        cheque_mismatch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(cheque_mismatch);

        jPanel5.add(jScrollPane4);
        jScrollPane4.setBounds(0, 60, 810, 390);

        jPanel4.setLayout(null);
        jPanel5.add(jPanel4);
        jPanel4.setBounds(0, 180, 810, 140);

        jLabel22.setText("As on Date :");
        jPanel5.add(jLabel22);
        jLabel22.setBounds(10, 20, 90, 25);
        jPanel5.add(txttodt2);
        txttodt2.setBounds(100, 20, 130, 30);

        jLabel23.setText("DD/MM/YYYY");
        jPanel5.add(jLabel23);
        jLabel23.setBounds(110, 0, 90, 17);

        cmdviewchq.setText("View");
        cmdviewchq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdviewchqActionPerformed(evt);
            }
        });
        jPanel5.add(cmdviewchq);
        cmdviewchq.setBounds(440, 10, 110, 40);

        btn_exp_xls1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btn_exp_xls1.setText("Export To Excel");
        btn_exp_xls1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exp_xls1ActionPerformed(evt);
            }
        });
        jPanel5.add(btn_exp_xls1);
        btn_exp_xls1.setBounds(10, 460, 160, 40);

        cmbbankchq.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "58->HDFC", "31->BOB", "36->CBI", "33->IOB", "54->IDBI", "37->SBI", "76->SIB", "92->YES", "75->HDFC ANK", "74->SBI ANK" }));
        jPanel5.add(cmbbankchq);
        cmbbankchq.setBounds(260, 20, 140, 30);

        jTabbedPane1.addTab("Cheque Issued But Not Presented", jPanel5);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 10, 820, 530);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_exp_xls1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exp_xls1ActionPerformed
        // TODO add your handling code here:
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showOpenDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }

            //exp.fillData(TableRate, new File("/root/Desktop/RateMaster.xls"), "RateMaster");
            //exp.fillData(TableRate, new File("D://RateMaster.xls"), "RateMaster");
            exp.fillData(cheque_mismatch, file, "Bank_Statement");
            JOptionPane.showMessageDialog(null, "Data saved at "
                + file.toString() + " successfully ...", "Message",
                JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_exp_xls1ActionPerformed

    private void cmdviewchqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdviewchqActionPerformed
        // TODO add your handling code here:
        String sql;
        ResultSet rs;
        sql = "SELECT VOUCHER_DATE,VOUCHER_NO,CHEQUE_NO,CONCAT_WS(' , ',REMARKS,MAIN_ACCOUNT_CODE,PARTY_CODE)AS REMAERK ,"
        + "BANK_AMOUNT "
        + "FROM BANK_RECO.BANK_VOUCHER_DETAIL "
        + "WHERE VOUCHER_DATE>='2017-10-01'  AND VOUCHER_DATE<='" + EITLERPGLOBAL.formatDateDB(txttodt2.getText().trim()) + "' AND CHEQUE_NO NOT IN (SELECT STMT_REF_NO FROM BANK_RECO.D_BANK_STMT) AND "
        + "SUBSTRING(VOUCHER_NO,1,2) ='PY'  AND STMT_DATE_UP ='0000-00-00' "
        + "UNION ALL "
        + "SELECT TRANDATE,VOUCHER_NO,CHEQUE_NO,DESCRIPTION,AMOUNT FROM BANK_RECO.BANK_RECO WHERE REF='CINP' "
        + "ORDER BY VOUCHER_DATE";
        FormatGrid_Stmt_Cheque_Mismatch();
        try {
            System.out.println(sql);
            rs = data.getResult(sql);
            rs.first();
            while (!rs.isAfterLast()) {
                Object[] rowData = new Object[20];
                for (int i = 0; i < 5; i++) {
                    if (rs.getString(i + 1).equals(null)) {
                        rowData[i] = "";
                    } else {
                        rowData[i] = rs.getString(i + 1);
                    }

                }
                DataModelC.addRow(rowData);
                rs.next();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdviewchqActionPerformed

    private void cmdaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdaddActionPerformed
        // TODO add your handling code here:
        String sql;
        double crdt, dbt;
        try {
            crdt = Double.parseDouble(txtcredit.getText());
        } catch (Exception e) {
            crdt = 0;
        }
        try {
            dbt = Double.parseDouble(txtdebit.getText());
        } catch (Exception a) {
            dbt = 0;
        }
        int msave;
        if ((crdt + dbt) == Double.parseDouble(txtvoucheramt.getText())) {
            msave = JOptionPane.showConfirmDialog(null, "BANK AMOUNT AND VOUCHER AMOUNT MATCHED Do you Want to CONTINUE ?");
        } else {
            msave = JOptionPane.showConfirmDialog(null, "BANK AMOUNT AND VOUCHER AMOUNT DOES NOT MATCH Do you Want to CONTINUE ?");
        }
        if (msave == 0) {
            if (txtvoucher.getText().trim().length() > 0) {
                try {
                    sql = "INSERT INTO BANK_RECO.BANK_VOUCHER_EXTRA "
                    + "(VOUCHER_NO,VOUCHER_DATE,CHEQUE_NO,CHEQUE_DATE,CHEQUE_AMOUNT,VOUCHER_CR_AMOUNT,VOUCHER_DR_AMOUNT,BANK_AMOUNT,PARTY_CODE,BOOK_CODE,UP_FLAG,REFERENCE_ID,ENTRY_NAME,AUTOINC) "
                    + "VALUES ('" + txtvoucher.getText().trim() + "','" + txtstmtvdt.getText().trim() + "',"
                    + "'" + mchqno + "','" + mchqdt + "'," + mchqamt + ","
                    + txtcredit.getText() + ","
                    + txtdebit.getText() + ","
                    + (Double.parseDouble(txtcredit.getText().trim()) + Double.parseDouble(txtdebit.getText().trim())) + ","
                    + "0,58,3,"
                    + "'" + txtref.getText().trim() + "',"
                    + "'" + txtentrynm.getText().trim() + "',"
                    + lblrcdno.getText()
                    + ")";
                    System.out.println(sql);
                    data.Execute(sql);
                    sql = "UPDATE BANK_RECO.D_BANK_STMT SET STMT_PARTY_CODE = 0  WHERE STMT_PARTY_CODE = 3";
                    System.out.println(sql);
                    data.Execute(sql);
                    sql = "UPDATE BANK_RECO.D_BANK_STMT,BANK_RECO.BANK_VOUCHER_EXTRA  "
                    + "SET STMT_VOUCHER_NO = VOUCHER_NO,STMT_INVOICE_NO = CONCAT_WS(CHEQUE_NO,REMARKS),"
                    + "STMT_VOUCHER_DATE= VOUCHER_DATE,STMT_PARTY_CODE =3,UP_FLAG =3,"
                    + "STMT_DEPO_AMOUNT = (VOUCHER_CR_AMOUNT+VOUCHER_DR_AMOUNT) "
                    //+ "WHERE BOOK_CODE = 58 AND BANK_AMOUNT = (STMT_CREDITS+STMT_DEBITS) AND CHEQUE_DATE = STMT_VALUE_DATE AND "
                    + "WHERE BOOK_CODE = 58 AND BANK_RECO.BANK_VOUCHER_EXTRA.AUTOINC=BANK_RECO.D_BANK_STMT.AUTOINC AND "
                    + "STMT_PARTY_CODE NOT IN (1,2,4) AND UP_FLAG NOT IN (1,2,4)";
                    System.out.println(sql);
                    data.Execute(sql);
                    sql = "UPDATE BANK_RECO.D_BANK_STMT,"
                    + "(  SELECT STMT_DEPO_SLIP_NO  AS P FROM BANK_RECO.D_BANK_STMT  "
                    + "WHERE STMT_DEPO_SLIP_NO !=0 "
                    + "GROUP BY STMT_VALUE_DATE,STMT_DEPO_SLIP_NO "
                    + "HAVING COUNT(*) =2 ) AS A "
                    + "SET STMT_PARTY_CODE =4,STMT_VOUCHER_NO = 'CANCELLED',STMT_VOUCHER_DATE = STMT_VALUE_DATE "
                    + "WHERE STMT_DEPO_SLIP_NO = P AND STMT_DEPO_AMOUNT =   (STMT_CREDITS+STMT_DEBITS)";

                    System.out.println(sql);
                    data.Execute(sql);
                    sql = "UPDATE BANK_RECO.D_BANK_STMT,BANK_RECO.BANK_VOUCHER_DETAIL "
                    + "SET STMT_DATE_UP = STMT_DATE,UP_FLAG =3  "
                    //+ "WHERE BOOK_CODE = 58 AND STMT_VOUCHER_NO = VOUCHER_NO  AND STMT_DATE_UP ='0000-00-00'";
                    + "WHERE BOOK_CODE = 58 AND BANK_RECO.BANK_VOUCHER_EXTRA.AUTOINC=BANK_RECO.D_BANK_STMT.AUTOINC  AND "
                    + "STMT_DATE_UP ='0000-00-00'";
                    System.out.println(sql);
                    data.Execute(sql);
                    sql = "UPDATE BANK_RECO.BANK_VOUCHER_EXTRA A ,BANK_RECO.BANK_VOUCHER_DETAIL B  "
                    + "SET A.VOUCHER_DATE = B.VOUCHER_DATE "
                    + "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE = '0000-00-00'";
                    System.out.println(sql);
                    data.Execute(sql);
                    txtstmtvdt.setText("");
                    txtref.setText("");
                    txtcredit.setText("");
                    txtdebit.setText("");
                    txtentrynm.setText("");
                    lblrcdno.setText("");
                    txtvoucher.setText("");
                    txtvoucherdt.setText("");
                    txtvoucheramt.setText("");
                    chkcancelled.setSelected(false);
                    cmdadd.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Save Success...");
                    refresh_mismatch();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "VOUCHER NO SHOULD NOT BE BLANK");
            }
        }
    }//GEN-LAST:event_cmdaddActionPerformed

    private void cmdsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsearchActionPerformed
        // TODO add your handling code here:
        String sql;
        ResultSet rs = null;
        double crdt, dbt;
        try {
            crdt = Double.parseDouble(txtcredit.getText());
        } catch (Exception e) {
            crdt = 0;
        }
        try {
            dbt = Double.parseDouble(txtdebit.getText());
        } catch (Exception d) {
            dbt = 0;
        }
        if ((crdt + dbt) > 0) {
            try {
                sql = "SELECT VOUCHER_NO,VOUCHER_DATE,CHEQUE_AMOUNT,BANK_AMOUNT,CHEQUE_NO,CHEQUE_DATE FROM BANK_RECO.BANK_VOUCHER_DETAIL "
                + "WHERE UP_FLAG =0 AND "
                + "BANK_AMOUNT=" + (crdt + dbt);
                FormatGrid_VoucherMismatch();
                rs = data.getResult(sql);
                rs.first();
                while (!rs.isAfterLast()) {
                    Object[] rowData = new Object[20];
                    for (int i = 0; i < 6; i++) {
                        rowData[i] = rs.getString(i + 1);
                    }
                    DataModelV.addRow(rowData);
                    rs.next();
                }
            } catch (Exception q) {
                q.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please Select MisMarch Record...");
        }
    }//GEN-LAST:event_cmdsearchActionPerformed

    private void chkcancelledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkcancelledActionPerformed
        // TODO add your handling code here:
        if (chkcancelled.isSelected()) {
            txtvoucher.setText("CANCELLED");
            txtvoucherdt.setText(txtstmtvdt.getText());
            txtvoucheramt.setText(String.valueOf(Double.parseDouble(txtdebit.getText()) + Double.parseDouble(txtcredit.getText())));
            cmdadd.setEnabled(true);
        } else {
            txtvoucher.setText("");
            txtvoucherdt.setText("");
            txtvoucheramt.setText("");
            cmdadd.setEnabled(false);
        }
    }//GEN-LAST:event_chkcancelledActionPerformed

    private void vouchermismatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vouchermismatchMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            txtvoucher.setText(vouchermismatch.getValueAt(vouchermismatch.getSelectedRow(), 0).toString());
            txtvoucherdt.setText(vouchermismatch.getValueAt(vouchermismatch.getSelectedRow(), 1).toString());
            txtvoucheramt.setText(vouchermismatch.getValueAt(vouchermismatch.getSelectedRow(), 3).toString());
            mchqamt = vouchermismatch.getValueAt(vouchermismatch.getSelectedRow(), 2).toString();
            mchqno = vouchermismatch.getValueAt(vouchermismatch.getSelectedRow(), 4).toString();
            mchqdt = vouchermismatch.getValueAt(vouchermismatch.getSelectedRow(), 5).toString();
            if (txtstmtvdt.getText().trim().length() > 0 && txtvoucher.getText().trim().length() > 0) {
                cmdadd.setEnabled(true);
            } else {
                cmdadd.setEnabled(false);
            }
        }
    }//GEN-LAST:event_vouchermismatchMouseClicked

    private void cmdviewmismatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdviewmismatchActionPerformed
        // TODO add your handling code here:
        refresh_mismatch();
    }//GEN-LAST:event_cmdviewmismatchActionPerformed

    private void bankmismatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bankmismatchMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            txtstmtvdt.setText(bankmismatch.getValueAt(bankmismatch.getSelectedRow(), 5).toString());
            txtref.setText(bankmismatch.getValueAt(bankmismatch.getSelectedRow(), 4).toString());
            txtcredit.setText(bankmismatch.getValueAt(bankmismatch.getSelectedRow(), 6).toString());
            txtdebit.setText(bankmismatch.getValueAt(bankmismatch.getSelectedRow(), 7).toString());
            txtentrynm.setText(bankmismatch.getValueAt(bankmismatch.getSelectedRow(), 11).toString());
            lblrcdno.setText(bankmismatch.getValueAt(bankmismatch.getSelectedRow(), 14).toString());
            txtvoucher.setText("");
            txtvoucherdt.setText("");
            txtvoucheramt.setText("");
            chkcancelled.setSelected(false);
            cmdadd.setEnabled(false);
        }
    }//GEN-LAST:event_bankmismatchMouseClicked

    private void btn_exp_xlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exp_xlsActionPerformed
        // TODO add your handling code here:
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showOpenDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }

            //exp.fillData(TableRate, new File("/root/Desktop/RateMaster.xls"), "RateMaster");
            //exp.fillData(TableRate, new File("D://RateMaster.xls"), "RateMaster");
            exp.fillData(bankstmt, file, "Bank_Statement");
            JOptionPane.showMessageDialog(null, "Data saved at "
                + file.toString() + " successfully ...", "Message",
                JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_exp_xlsActionPerformed

    private void cmdviewbankstmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdviewbankstmtActionPerformed
        // TODO add your handling code here:
        ResultSet rs = null;
        String sql;
        FormatGrid_BankStmt();
        try {
            sql = "SELECT STMT_DATE,STMT_BRANCH,STMT_DESCRIPTION,STMT_REF_NO,STMT_CREDITS,STMT_DEBITS,STMT_INST_NO,STMT_INST_AMOUNT,STMT_VOUCHER_NO "
            + "FROM BANK_RECO.D_BANK_STMT "
            + "WHERE STMT_BANK='" + cmbbankstmt.getSelectedItem().toString().substring(4) + "' AND STMT_DATE BETWEEN '" + EITLERPGLOBAL.formatDateDB(txtfrmdt.getText().trim()) + "' AND '"
            + EITLERPGLOBAL.formatDateDB(txttodt.getText().trim()) + "' "
            + "UNION ALL "
            + "SELECT TRANDATE,'',DESCRIPTION,CHEQUE_NO,CASE WHEN REF='BCNA' THEN AMOUNT ELSE 0 END AS CREDIT,"
            + "CASE WHEN REF='BDNA' THEN AMOUNT ELSE 0 END AS DEBIT,CHEQUE_NO,0,VOUCHER_NO "
            + "FROM BANK_RECO.BANK_RECO "
            + "WHERE BANK_NAME='" + cmbbankstmt.getSelectedItem().toString().substring(4) + "' AND REF IN ('BCNA','BDNA')"
            + " AND TRAN_DATE>='" + EITLERPGLOBAL.formatDateDB(txtfrmdt.getText().trim()) + "' AND TRAN_DATE<='"
            + EITLERPGLOBAL.formatDateDB(txttodt.getText().trim()) + "' "
            + "ORDER BY STMT_DATE";
            rs = data.getResult(sql);
            rs.first();
            if (rs.getRow() > 0) {
                while (!rs.isAfterLast()) {
                    Object[] rowData = new Object[20];
                    rowData[0] = EITLERPGLOBAL.formatDate(rs.getString("STMT_DATE"));
                    rowData[1] = rs.getString("STMT_BRANCH");
                    rowData[2] = rs.getString("STMT_DESCRIPTION");
                    rowData[3] = rs.getString("STMT_REF_NO");
                    rowData[4] = rs.getDouble("STMT_CREDITS");
                    rowData[5] = rs.getDouble("STMT_DEBITS");
                    rowData[6] = rs.getString("STMT_INST_NO");
                    rowData[7] = EITLERPGLOBAL.formatDate(rs.getString("STMT_DATE"));
                    rowData[8] = rs.getDouble("STMT_INST_AMOUNT");
                    rowData[9] = rs.getString("STMT_VOUCHER_NO");
                    DataModelD.addRow(rowData);
                    rs.next();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdviewbankstmtActionPerformed

    private void btn_exp_xls3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exp_xls3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_exp_xls3ActionPerformed

    private void btn_exp_xls4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exp_xls4ActionPerformed
        // TODO add your handling code here:
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showOpenDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }

            //exp.fillData(TableRate, new File("/root/Desktop/RateMaster.xls"), "RateMaster");
            //exp.fillData(TableRate, new File("D://RateMaster.xls"), "RateMaster");
            exp.fillData(bankmismatch, file, "Bank_Mismatch");
            JOptionPane.showMessageDialog(null, "Data saved at "
                + file.toString() + " successfully ...", "Message",
                JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_exp_xls4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bankmismatch;
    private javax.swing.JTable bankstmt;
    private javax.swing.JButton btn_exp_xls;
    private javax.swing.JButton btn_exp_xls1;
    private javax.swing.JButton btn_exp_xls3;
    private javax.swing.JButton btn_exp_xls4;
    private javax.swing.JRadioButton btncrdt;
    private javax.swing.JRadioButton btndbt;
    private javax.swing.ButtonGroup btngrp;
    private javax.swing.JTable cheque_mismatch;
    private javax.swing.JCheckBox chkcancelled;
    private javax.swing.JComboBox cmbbankchq;
    private javax.swing.JComboBox cmbbankmismatch;
    private javax.swing.JComboBox cmbbankstmt;
    private javax.swing.JButton cmdadd;
    private javax.swing.JButton cmdsearch;
    private javax.swing.JButton cmdviewbankstmt;
    private javax.swing.JButton cmdviewchq;
    private javax.swing.JButton cmdviewmismatch;
    private javax.swing.JFileChooser file1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblrcdno;
    private javax.swing.JTextField txtcredit;
    private javax.swing.JTextField txtdebit;
    private javax.swing.JTextField txtentrynm;
    private javax.swing.JTextField txtfrmdt;
    private javax.swing.JTextField txtinstno;
    private javax.swing.JTextField txtref;
    private javax.swing.JTextField txtstmtvdt;
    private javax.swing.JTextField txttodt;
    private javax.swing.JTextField txttodt1;
    private javax.swing.JTextField txttodt2;
    private javax.swing.JTextField txtvoucher;
    private javax.swing.JTextField txtvoucheramt;
    private javax.swing.JTextField txtvoucherdt;
    private javax.swing.JTable vouchermismatch;
    // End of variables declaration//GEN-END:variables
private void FormatGrid_BankStmt() {
        try {
            DataModelD = new EITLTableModel();
            bankstmt.removeAll();
            bankstmt.setModel(DataModelD);
            TableColumnModel ColModel = bankstmt.getColumnModel();
            bankstmt.setAutoResizeMode(bankstmt.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.BLUE);

            DataModelD.addColumn("STATEMENT DATE"); //0
            DataModelD.addColumn("STATEMENT BRANCH");//1
            DataModelD.addColumn("DESCRIPTION"); //2
            DataModelD.addColumn("REFERANCE NO");//3            
            DataModelD.addColumn("CREDIT"); //4
            DataModelD.addColumn("DEBIT"); //5
            DataModelD.addColumn("STATEMENT INST NO"); //6
            DataModelD.addColumn("STATEMENT DATE"); //7
            DataModelD.addColumn("MT_INST_AMOUNT"); //8
            DataModelD.addColumn("STATEMENT VOURCHER");//9

            DataModelD.TableReadOnly(true);

            CellAlign.setHorizontalAlignment(JLabel.LEFT);

        } catch (Exception e) {
        }

        //Table formatting completed
    }

    private void FormatGrid_StmtMismatch() {
        try {
            DataModelM = new EITLTableModel();
            bankmismatch.removeAll();
            bankmismatch.setModel(DataModelM);
            TableColumnModel ColModel = bankmismatch.getColumnModel();
            bankmismatch.setAutoResizeMode(bankmismatch.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.BLUE);

            DataModelM.addColumn("STMT_DATE"); //0
            DataModelM.addColumn("STMT_BANK"); //1
            DataModelM.addColumn("STMT_BRANCH"); //2
            DataModelM.addColumn("STMT_DESCRIPTION"); //3
            DataModelM.addColumn("STMT_REF_NO"); //4
            DataModelM.addColumn("STMT_VALUE_DATE"); //5
            DataModelM.addColumn("STMT_CREDITS"); //6
            DataModelM.addColumn("STMT_DEBITS"); //7
            DataModelM.addColumn("STMT_BALANCE"); //8
            DataModelM.addColumn("STMT_INST_NO"); //9
            DataModelM.addColumn("STMT_INST_AMOUNT"); //10
            DataModelM.addColumn("STMT_ENTRY_NAME"); //11
            DataModelM.addColumn("STMT_E1_E2_E3"); //12
            DataModelM.addColumn("STMT_RETURN_REASON_REMARK"); //13
            DataModelM.addColumn("AUTOINC");//14

            DataModelM.TableReadOnly(true);

            CellAlign.setHorizontalAlignment(JLabel.LEFT);

        } catch (Exception e) {
        }

        //Table formatting completed
    }

    private void FormatGrid_VoucherMismatch() {
        try {
            DataModelV = new EITLTableModel();
            vouchermismatch.removeAll();
            vouchermismatch.setModel(DataModelV);
            TableColumnModel ColModel = vouchermismatch.getColumnModel();
            vouchermismatch.setAutoResizeMode(vouchermismatch.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.BLUE);

            DataModelV.addColumn("VOUCHER_NO"); //0
            DataModelV.addColumn("VOUCHER_DATE"); //1
            DataModelV.addColumn("CHEQUE_AMOUNT"); //2
            DataModelV.addColumn("BANK_AMOUNT"); //3
            DataModelV.addColumn("CHEQUE_NO");//4
            DataModelV.addColumn("CHEQUE_DATE");//5

            DataModelV.TableReadOnly(true);

            CellAlign.setHorizontalAlignment(JLabel.LEFT);

        } catch (Exception e) {
        }

        //Table formatting completed
    }

    private void FormatGrid_Stmt_Cheque_Mismatch() {
        try {
            DataModelC = new EITLTableModel();
            cheque_mismatch.removeAll();
            cheque_mismatch.setModel(DataModelC);
            TableColumnModel ColModel = cheque_mismatch.getColumnModel();
            cheque_mismatch.setAutoResizeMode(cheque_mismatch.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.BLUE);

            DataModelC.addColumn("VOUCHER_DATE"); //0
            DataModelC.addColumn("VOUCHER_NO"); //1
            DataModelC.addColumn("CHEQUE_NO");//2
            DataModelC.addColumn("REMAERK"); //3
            DataModelC.addColumn("BANK_AMOUNT"); //4

            DataModelC.TableReadOnly(true);

            CellAlign.setHorizontalAlignment(JLabel.LEFT);

        } catch (Exception e) {
        }

        //Table formatting completed
    }

    private void refresh_mismatch() {
        ResultSet rs = null;
        String sql, fld;
        if (btncrdt.isSelected()) {
            fld = "STMT_CREDITS";
        } else {
            fld = "STMT_DEBITS";
        }
        sql = "SELECT STMT_DATE,STMT_BANK,STMT_BRANCH,STMT_DESCRIPTION,STMT_REF_NO,STMT_VALUE_DATE,STMT_CREDITS,STMT_DEBITS,STMT_BALANCE,"
                + "STMT_INST_NO,STMT_INST_AMOUNT,STMT_ENTRY_NAME,STMT_E1_E2_E3,STMT_RETURN_REASON_REMARK,AUTOINC "
                + "FROM BANK_RECO.D_BANK_STMT  "
                + "WHERE STMT_PARTY_CODE NOT IN (1,2,3,4,5,6,7,8,9) AND STMT_DESCRIPTION NOT LIKE ('%B/F%') AND "
                + "STMT_DATE <='" + EITLERPGLOBAL.formatDateDB(txttodt1.getText().trim()) + "' AND "
                + fld + ">0 AND STMT_BANK='" + cmbbankstmt.getSelectedItem().toString().substring(4) + "'"
                + "";
        FormatGrid_StmtMismatch();
        try {
            rs = data.getResult(sql);
            rs.first();
            while (!rs.isAfterLast()) {
                Object[] rowData = new Object[20];
                for (int i = 0; i < 15; i++) {
                    rowData[i] = rs.getString(i + 1);
                }
                DataModelM.addRow(rowData);
                rs.next();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            sql = "SELECT VOUCHER_NO,VOUCHER_DATE,CHEQUE_AMOUNT,BANK_AMOUNT FROM BANK_RECO.BANK_VOUCHER_DETAIL "
                    + "WHERE UP_FLAG =0 AND "
                    + "VOUCHER_DATE <='" + EITLERPGLOBAL.formatDateDB(txttodt1.getText().trim()) + "'";
            FormatGrid_VoucherMismatch();
            rs = data.getResult(sql);
            rs.first();
            while (!rs.isAfterLast()) {
                Object[] rowData = new Object[20];
                for (int i = 0; i < 4; i++) {
                    rowData[i] = rs.getString(i + 1);
                }
                DataModelV.addRow(rowData);
                rs.next();
            }
        } catch (Exception q) {
            q.printStackTrace();
        }
    }
}
