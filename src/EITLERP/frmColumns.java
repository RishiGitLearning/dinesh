/*
 * frmColumns.java
 *
 * Created on May 3, 2004, 1:34 PM
 */

package EITLERP;
 
/**
 * 
 * @author  nrpithva
 */ 
import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
 
/*<APPLET CODE=frmColumns.class HEIGHT=418 WIDTH=552></APPLET>*/

public class frmColumns extends javax.swing.JApplet {
    
    
    /** Initializes the applet frmColumns */
    private clsColumn ObjColumn;
    
    private EITLComboModel cmbModuleModel=new EITLComboModel();
    private EITLComboModel cmbColumnModelL=new EITLComboModel();
    private EITLComboModel cmbColumnModelH=new EITLComboModel();
    
    private EITLTableModel DataModelH;
    private EITLTableModel DataModelL;
    
    public void init() {
        System.gc();
        setSize(552,418);
        
        initComponents();
        
        ObjColumn=new clsColumn();
        
        GenerateCombo();
        
        if(ObjColumn.LoadData((int)EITLERPGLOBAL.gCompanyID)) {
            GenerateGrid();
        }
        else {
            JOptionPane.showMessageDialog(null,"Failed to load data. Error is"+ObjColumn.LastError);
        }
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbModule = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cmbColumnH = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtCaptionH = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtVariableNameH = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableH = new javax.swing.JTable();
        cmdAddH = new javax.swing.JButton();
        cmdUpdateH = new javax.swing.JButton();
        cmdRemoveH = new javax.swing.JButton();
        cmdExitH = new javax.swing.JButton();
        cmdUPH = new javax.swing.JButton();
        cmdDownH = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cmbColumnL = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtCaptionL = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtVariableNameL = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableL = new javax.swing.JTable();
        cmdAddL = new javax.swing.JButton();
        cmdUpdateL = new javax.swing.JButton();
        cmdRemoveL = new javax.swing.JButton();
        cmdExitL = new javax.swing.JButton();
        cmdUPL = new javax.swing.JButton();
        cmdDownL = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText(" MODULEWISE CUSTOM COLUMNS");
        jLabel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-2, 0, 650, 25);

        jLabel2.setText("Select Module");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 40, 100, 15);

        cmbModule.setNextFocusableComponent(cmbColumnH);
        cmbModule.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbModuleItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbModule);
        cmbModule.setBounds(112, 36, 254, 24);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.setText("Column");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(46, 16, 54, 18);

        cmbColumnH.setNextFocusableComponent(txtCaptionH);
        jPanel1.add(cmbColumnH);
        cmbColumnH.setBounds(106, 14, 224, 24);

        jLabel4.setText("Caption");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(46, 44, 49, 15);

        txtCaptionH.setNextFocusableComponent(txtVariableNameH);
        jPanel1.add(txtCaptionH);
        txtCaptionH.setBounds(106, 42, 224, 19);

        jLabel5.setText("Variable Name");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 74, 98, 15);

        txtVariableNameH.setNextFocusableComponent(cmdAddH);
        txtVariableNameH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVariableNameHActionPerformed(evt);
            }
        });

        jPanel1.add(txtVariableNameH);
        txtVariableNameH.setBounds(106, 72, 224, 19);

        TableH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableH.setNextFocusableComponent(cmdUpdateH);
        TableH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableHMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(TableH);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(12, 114, 424, 184);

        cmdAddH.setText("Add");
        cmdAddH.setNextFocusableComponent(cmdUpdateH);
        cmdAddH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddHActionPerformed(evt);
            }
        });

        jPanel1.add(cmdAddH);
        cmdAddH.setBounds(444, 114, 86, 25);

        cmdUpdateH.setText("Update");
        cmdUpdateH.setNextFocusableComponent(cmdRemoveH);
        cmdUpdateH.setEnabled(false);
        cmdUpdateH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateHActionPerformed(evt);
            }
        });

        jPanel1.add(cmdUpdateH);
        cmdUpdateH.setBounds(444, 144, 86, 25);

        cmdRemoveH.setText("Remove");
        cmdRemoveH.setNextFocusableComponent(cmdUPH);
        cmdRemoveH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveHActionPerformed(evt);
            }
        });

        jPanel1.add(cmdRemoveH);
        cmdRemoveH.setBounds(444, 174, 86, 25);

        cmdExitH.setText("Exit");
        cmdExitH.setNextFocusableComponent(TableH);
        cmdExitH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitHActionPerformed(evt);
            }
        });

        jPanel1.add(cmdExitH);
        cmdExitH.setBounds(446, 270, 86, 25);

        cmdUPH.setFont(new java.awt.Font("Tahoma", 0, 10));
        cmdUPH.setText("up");
        cmdUPH.setNextFocusableComponent(cmdDownH);
        cmdUPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUPHActionPerformed(evt);
            }
        });

        jPanel1.add(cmdUPH);
        cmdUPH.setBounds(446, 210, 60, 23);

        cmdDownH.setFont(new java.awt.Font("Tahoma", 0, 10));
        cmdDownH.setText("down");
        cmdDownH.setNextFocusableComponent(cmdExitH);
        cmdDownH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDownHActionPerformed(evt);
            }
        });

        jPanel1.add(cmdDownH);
        cmdDownH.setBounds(446, 238, 60, 23);

        jTabbedPane1.addTab("Header Columns", jPanel1);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel6.setText("Column");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(46, 16, 54, 18);

        cmbColumnL.setNextFocusableComponent(txtCaptionL);
        jPanel2.add(cmbColumnL);
        cmbColumnL.setBounds(106, 14, 224, 24);

        jLabel7.setText("Caption");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(46, 44, 49, 15);

        txtCaptionL.setNextFocusableComponent(txtVariableNameL);
        jPanel2.add(txtCaptionL);
        txtCaptionL.setBounds(106, 42, 224, 19);

        jLabel8.setText("Variable Name");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(10, 74, 98, 15);

        txtVariableNameL.setNextFocusableComponent(cmdAddL);
        txtVariableNameL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVariableNameLActionPerformed(evt);
            }
        });

        jPanel2.add(txtVariableNameL);
        txtVariableNameL.setBounds(106, 72, 224, 19);

        TableL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableL.setNextFocusableComponent(cmdUpdateL);
        TableL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableLMouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(TableL);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(12, 114, 424, 184);

        cmdAddL.setText("Add");
        cmdAddL.setNextFocusableComponent(cmdUpdateL);
        cmdAddL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddLActionPerformed(evt);
            }
        });

        jPanel2.add(cmdAddL);
        cmdAddL.setBounds(444, 114, 86, 25);

        cmdUpdateL.setText("Update");
        cmdUpdateL.setNextFocusableComponent(cmdRemoveL);
        cmdUpdateL.setEnabled(false);
        cmdUpdateL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateLActionPerformed(evt);
            }
        });

        jPanel2.add(cmdUpdateL);
        cmdUpdateL.setBounds(444, 144, 86, 25);

        cmdRemoveL.setText("Remove");
        cmdRemoveL.setNextFocusableComponent(cmdUPL);
        cmdRemoveL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveLActionPerformed(evt);
            }
        });

        jPanel2.add(cmdRemoveL);
        cmdRemoveL.setBounds(444, 174, 86, 25);

        cmdExitL.setText("Exit");
        cmdExitL.setNextFocusableComponent(TableL);
        cmdExitL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitLActionPerformed(evt);
            }
        });

        jPanel2.add(cmdExitL);
        cmdExitL.setBounds(444, 270, 86, 25);

        cmdUPL.setFont(new java.awt.Font("Tahoma", 0, 10));
        cmdUPL.setText("up");
        cmdUPL.setNextFocusableComponent(cmdDownL);
        cmdUPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUPLActionPerformed(evt);
            }
        });

        jPanel2.add(cmdUPL);
        cmdUPL.setBounds(446, 210, 60, 23);

        cmdDownL.setFont(new java.awt.Font("Tahoma", 0, 10));
        cmdDownL.setText("down");
        cmdDownL.setNextFocusableComponent(cmdExitL);
        cmdDownL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDownLActionPerformed(evt);
            }
        });

        jPanel2.add(cmdDownL);
        cmdDownL.setBounds(446, 238, 60, 23);

        jTabbedPane1.addTab("Line Columns", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(6, 76, 542, 338);

    }//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void cmdExitLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitLActionPerformed
        // TODO add your handling code here:
        ObjColumn.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitLActionPerformed

    private void cmdExitHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitHActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitHActionPerformed

    private void TableLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableLMouseClicked
        // TODO add your handling code here:
        if(TableL.getRowCount()>0) {
            if(evt.getClickCount()==2) {
                //Display Back the contents
                int SrNo=Integer.parseInt((String)TableL.getValueAt(TableL.getSelectedRow(), 0));
                clsColumn lObjColumn=(clsColumn)clsColumn.getObject((int)EITLERPGLOBAL.gCompanyID,SrNo);
                EITLERPGLOBAL.setComboIndex(cmbColumnL,(int)lObjColumn.getAttribute("TAX_ID").getVal());
                txtCaptionL.setText((String)lObjColumn.getAttribute("CAPTION").getObj());
                txtVariableNameL.setText((String)lObjColumn.getAttribute("VARIABLE_NAME").getObj());
                
                cmdUpdateL.setEnabled(true);
                
                //Locate the record
                ObjColumn.Filter(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND SR_NO="+Integer.toString(SrNo));
            }
        }
        
    }//GEN-LAST:event_TableLMouseClicked

    private void cmdDownLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDownLActionPerformed
        // TODO add your handling code here:
        Object[] rowOne=new Object[5];
        Object[] rowTwo=new Object[5];
        
        if(TableL.getRowCount()>1&&TableL.getSelectedRow()<TableL.getRowCount()-1)
        {
            int CurRow=TableL.getSelectedRow();
            int DownRow=CurRow+1;
            
            //Record current row
            rowOne[0]=TableL.getValueAt(CurRow,0);
            //rowOne[1]=Table.getValueAt(CurRow,1);
            rowOne[2]=TableL.getValueAt(CurRow,2);
            rowOne[3]=TableL.getValueAt(CurRow,3);
            rowOne[4]=TableL.getValueAt(CurRow,4);
            
            //Record Up Row
            rowTwo[0]=TableL.getValueAt(DownRow,0);
            //rowTwo[1]=Table.getValueAt(UpRow,1);
            rowTwo[2]=TableL.getValueAt(DownRow,2);
            rowTwo[3]=TableL.getValueAt(DownRow,3);
            rowTwo[4]=TableL.getValueAt(DownRow,4);
            
            //Now Replace up row with Row One
            TableL.setValueAt(rowOne[0],DownRow,0);
            //Table.setValueAt(rowOne[1],UpRow,1);
            TableL.setValueAt(rowOne[2],DownRow,2);
            TableL.setValueAt(rowOne[3],DownRow,3);
            TableL.setValueAt(rowOne[4],DownRow,4);
            
            //Now Replace Current row with Row Two
            TableL.setValueAt(rowTwo[0],CurRow,0);
            //Table.setValueAt(rowTwo[1],CurRow,1);
            TableL.setValueAt(rowTwo[2],CurRow,2);
            TableL.setValueAt(rowTwo[3],CurRow,3);
            TableL.setValueAt(rowTwo[4],CurRow,4);
            
            TableL.changeSelection(DownRow,1,false,false);
            //Done
            UpdateSrNo();
        }
        
    }//GEN-LAST:event_cmdDownLActionPerformed

    private void cmdUPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUPLActionPerformed
        // TODO add your handling code here:
        Object[] rowOne=new Object[5];
        Object[] rowTwo=new Object[5];
        
        if(TableL.getRowCount()>1&&TableL.getSelectedRow()>0)
        {
            int CurRow=TableL.getSelectedRow();
            int UpRow=CurRow-1;
            
            //Record current row
            rowOne[0]=TableL.getValueAt(CurRow,0);
            //rowOne[1]=Table.getValueAt(CurRow,1);
            rowOne[2]=TableL.getValueAt(CurRow,2);
            rowOne[3]=TableL.getValueAt(CurRow,3);
            rowOne[4]=TableL.getValueAt(CurRow,4);
            
            
            //Record Up Row
            rowTwo[0]=TableL.getValueAt(UpRow,0);
            //rowTwo[1]=Table.getValueAt(UpRow,1);
            rowTwo[2]=TableL.getValueAt(UpRow,2);
            rowTwo[3]=TableL.getValueAt(UpRow,3);
            rowTwo[4]=TableL.getValueAt(UpRow,4);
            
            //Now Replace up row with Row One
            TableL.setValueAt(rowOne[0],UpRow,0);
            //Table.setValueAt(rowOne[1],UpRow,1);
            TableL.setValueAt(rowOne[2],UpRow,2);
            TableL.setValueAt(rowOne[3],UpRow,3);
            TableL.setValueAt(rowOne[4],UpRow,4);
            
            //Now Replace Current row with Row Two
            TableL.setValueAt(rowTwo[0],CurRow,0);
            //Table.setValueAt(rowTwo[1],CurRow,1);
            TableL.setValueAt(rowTwo[2],CurRow,2);
            TableL.setValueAt(rowTwo[3],CurRow,3);
            TableL.setValueAt(rowTwo[4],CurRow,4);
            
            TableL.changeSelection(UpRow,1,false,false);
            //Done
            
            UpdateSrNo();
        }
    }//GEN-LAST:event_cmdUPLActionPerformed

    private void cmdRemoveLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveLActionPerformed
        // TODO add your handling code here:
        if(TableL.getRowCount()>0) {
            if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
                //Display Back the contents
                int SrNo=Integer.parseInt((String)TableL.getValueAt(TableL.getSelectedRow(), 0));
                //Locate the record
                ObjColumn.Filter(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND SR_NO="+Integer.toString(SrNo));
                if(ObjColumn.Delete()) {
                    GenerateGrid();
                    UpdateSrNo();
                }
                else {
                    JOptionPane.showMessageDialog(null,ObjColumn.LastError);
                }
            }
        }
        
    }//GEN-LAST:event_cmdRemoveLActionPerformed

    private void cmdUpdateLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateLActionPerformed
        // TODO add your handling code here:
        //Form Level Validations
        if(cmbColumnL.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(null,"Please select the column from list");
            return;
        }
        
        if(txtCaptionL.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter some caption for column");
            return;
        }
        
        if(txtVariableNameL.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter variable name for this column");
            return;
        }
        
        ObjColumn.setAttribute("HEADER_LINE","L");
        ObjColumn.setAttribute("COL_ORDER",TableL.getRowCount()+1);
        ObjColumn.setAttribute("TAX_ID",EITLERPGLOBAL.getComboCode(cmbColumnL));
        ObjColumn.setAttribute("CAPTION",txtCaptionL.getText());
        ObjColumn.setAttribute("VARIABLE_NAME",txtVariableNameL.getText());
        if(ObjColumn.Update()) {
            GenerateGrid();
            txtCaptionL.setText("");
            txtVariableNameL.setText("");
            UpdateSrNo();
        }
        else {
            JOptionPane.showMessageDialog(null,ObjColumn.LastError) ;
        }
        cmdUpdateH.setEnabled(false);
        
    }//GEN-LAST:event_cmdUpdateLActionPerformed

    private void cmdAddLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddLActionPerformed
        // TODO add your handling code here:
        //Form Level Validations
        if(cmbColumnL.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(null,"Please select the column from list");
            return;
        }
        
        if(txtCaptionL.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter some caption for column");
            return;
        }
        
        if(txtVariableNameL.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter variable name for this column");
            return;
        }
        
        ObjColumn.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
        ObjColumn.setAttribute("MODULE_ID",EITLERPGLOBAL.getComboCode(cmbModule));
        ObjColumn.setAttribute("HEADER_LINE","L");
        ObjColumn.setAttribute("COL_ORDER",TableL.getRowCount()+1);
        ObjColumn.setAttribute("TAX_ID",EITLERPGLOBAL.getComboCode(cmbColumnL));
        ObjColumn.setAttribute("CAPTION",txtCaptionL.getText());
        ObjColumn.setAttribute("VARIABLE_NAME",txtVariableNameL.getText());
        if(ObjColumn.Insert()) {
            GenerateGrid();
            txtCaptionL.setText("");
            txtVariableNameL.setText("");
            UpdateSrNo();
        }
        else {
            JOptionPane.showMessageDialog(null,ObjColumn.LastError) ;
        }
        
    }//GEN-LAST:event_cmdAddLActionPerformed

    private void cmdDownHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDownHActionPerformed
        // TODO add your handling code here:
        Object[] rowOne=new Object[5];
        Object[] rowTwo=new Object[5];
        
        if(TableH.getRowCount()>1&&TableH.getSelectedRow()<TableH.getRowCount()-1)
        {
            int CurRow=TableH.getSelectedRow();
            int DownRow=CurRow+1;
            
            //Record current row
            rowOne[0]=TableH.getValueAt(CurRow,0);
            //rowOne[1]=Table.getValueAt(CurRow,1);
            rowOne[2]=TableH.getValueAt(CurRow,2);
            rowOne[3]=TableH.getValueAt(CurRow,3);
            rowOne[4]=TableH.getValueAt(CurRow,4);
            
            //Record Up Row
            rowTwo[0]=TableH.getValueAt(DownRow,0);
            //rowTwo[1]=Table.getValueAt(UpRow,1);
            rowTwo[2]=TableH.getValueAt(DownRow,2);
            rowTwo[3]=TableH.getValueAt(DownRow,3);
            rowTwo[4]=TableH.getValueAt(DownRow,4);
            
            //Now Replace up row with Row One
            TableH.setValueAt(rowOne[0],DownRow,0);
            //Table.setValueAt(rowOne[1],UpRow,1);
            TableH.setValueAt(rowOne[2],DownRow,2);
            TableH.setValueAt(rowOne[3],DownRow,3);
            TableH.setValueAt(rowOne[4],DownRow,4);
            
            //Now Replace Current row with Row Two
            TableH.setValueAt(rowTwo[0],CurRow,0);
            //Table.setValueAt(rowTwo[1],CurRow,1);
            TableH.setValueAt(rowTwo[2],CurRow,2);
            TableH.setValueAt(rowTwo[3],CurRow,3);
            TableH.setValueAt(rowTwo[4],CurRow,4);
            
            TableH.changeSelection(DownRow,1,false,false);
            //Done
            UpdateSrNo();
        }

    }//GEN-LAST:event_cmdDownHActionPerformed

    private void cmdUPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUPHActionPerformed
        // TODO add your handling code here:
        Object[] rowOne=new Object[5];
        Object[] rowTwo=new Object[5];
        
        if(TableH.getRowCount()>1&&TableH.getSelectedRow()>0)
        {
            int CurRow=TableH.getSelectedRow();
            int UpRow=CurRow-1;
            
            //Record current row
            rowOne[0]=TableH.getValueAt(CurRow,0);
            //rowOne[1]=Table.getValueAt(CurRow,1);
            rowOne[2]=TableH.getValueAt(CurRow,2);
            rowOne[3]=TableH.getValueAt(CurRow,3);
            rowOne[4]=TableH.getValueAt(CurRow,4);
            
            
            //Record Up Row
            rowTwo[0]=TableH.getValueAt(UpRow,0);
            //rowTwo[1]=Table.getValueAt(UpRow,1);
            rowTwo[2]=TableH.getValueAt(UpRow,2);
            rowTwo[3]=TableH.getValueAt(UpRow,3);
            rowTwo[4]=TableH.getValueAt(UpRow,4);
            
            //Now Replace up row with Row One
            TableH.setValueAt(rowOne[0],UpRow,0);
            //Table.setValueAt(rowOne[1],UpRow,1);
            TableH.setValueAt(rowOne[2],UpRow,2);
            TableH.setValueAt(rowOne[3],UpRow,3);
            TableH.setValueAt(rowOne[4],UpRow,4);
            
            //Now Replace Current row with Row Two
            TableH.setValueAt(rowTwo[0],CurRow,0);
            //Table.setValueAt(rowTwo[1],CurRow,1);
            TableH.setValueAt(rowTwo[2],CurRow,2);
            TableH.setValueAt(rowTwo[3],CurRow,3);
            TableH.setValueAt(rowTwo[4],CurRow,4);
            
            TableH.changeSelection(UpRow,1,false,false);
            //Done
            
            UpdateSrNo();
        }
        
    }//GEN-LAST:event_cmdUPHActionPerformed
    
    private void TableHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableHMouseClicked
        // TODO add your handling code here:
        if(TableH.getRowCount()>0) {
            if(evt.getClickCount()==2) {
                //Display Back the contents
                int SrNo=Integer.parseInt((String)TableH.getValueAt(TableH.getSelectedRow(), 0));
                clsColumn lObjColumn=(clsColumn)clsColumn.getObject((int)EITLERPGLOBAL.gCompanyID,SrNo);
                EITLERPGLOBAL.setComboIndex(cmbColumnH,(int)lObjColumn.getAttribute("TAX_ID").getVal());
                txtCaptionH.setText((String)lObjColumn.getAttribute("CAPTION").getObj());
                txtVariableNameH.setText((String)lObjColumn.getAttribute("VARIABLE_NAME").getObj());
                
                cmdUpdateH.setEnabled(true);
                
                //Locate the record
                ObjColumn.Filter(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND SR_NO="+Integer.toString(SrNo));
            }
        }
    }//GEN-LAST:event_TableHMouseClicked
    
    private void cmdRemoveHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveHActionPerformed
        // TODO add your handling code here:
        if(TableH.getRowCount()>0) {
            if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
                //Display Back the contents
                int SrNo=Integer.parseInt((String)TableH.getValueAt(TableH.getSelectedRow(), 0));
                //Locate the record
                ObjColumn.Filter(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND SR_NO="+Integer.toString(SrNo));
                if(ObjColumn.Delete()) {
                    GenerateGrid();
                    UpdateSrNo();
                }
                else {
                    JOptionPane.showMessageDialog(null,ObjColumn.LastError);
                }
            }
        }
    }//GEN-LAST:event_cmdRemoveHActionPerformed
    
    private void cmdUpdateHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateHActionPerformed
        // TODO add your handling code here:
        //Form Level Validations
        if(cmbColumnH.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(null,"Please select the column from list");
            return;
        }
        
        if(txtCaptionH.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter some caption for column");
            return;
        }
        
        if(txtVariableNameH.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter variable name for this column");
            return;
        }
        
        ObjColumn.setAttribute("HEADER_LINE","H");
        ObjColumn.setAttribute("COL_ORDER",TableH.getRowCount()+1);
        ObjColumn.setAttribute("TAX_ID",EITLERPGLOBAL.getComboCode(cmbColumnH));
        ObjColumn.setAttribute("CAPTION",txtCaptionH.getText());
        ObjColumn.setAttribute("VARIABLE_NAME",txtVariableNameH.getText());
        if(ObjColumn.Update()) {
            GenerateGrid();
            txtCaptionH.setText("");
            txtVariableNameH.setText("");
            UpdateSrNo();
        }
        else {
            JOptionPane.showMessageDialog(null,ObjColumn.LastError) ;
        }
        cmdUpdateH.setEnabled(false);
    }//GEN-LAST:event_cmdUpdateHActionPerformed
    
    private void cmdAddHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddHActionPerformed
        // TODO add your handling code here:
        
        //Form Level Validations
        if(cmbColumnH.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(null,"Please select the column from list");
            return;
        }
        
        if(txtCaptionH.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter some caption for column");
            return;
        }
        
        if(txtVariableNameH.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter variable name for this column");
            return;
        }
        
        ObjColumn.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
        ObjColumn.setAttribute("MODULE_ID",EITLERPGLOBAL.getComboCode(cmbModule));
        ObjColumn.setAttribute("HEADER_LINE","H");
        ObjColumn.setAttribute("COL_ORDER",TableH.getRowCount()+1);
        ObjColumn.setAttribute("TAX_ID",EITLERPGLOBAL.getComboCode(cmbColumnH));
        ObjColumn.setAttribute("CAPTION",txtCaptionH.getText());
        ObjColumn.setAttribute("VARIABLE_NAME",txtVariableNameH.getText());
        if(ObjColumn.Insert()) {
            GenerateGrid();
            txtCaptionH.setText("");
            txtVariableNameH.setText("");
            UpdateSrNo();
        }
        else {
            JOptionPane.showMessageDialog(null,ObjColumn.LastError) ;
        }
    }//GEN-LAST:event_cmdAddHActionPerformed
    
    private void cmbModuleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbModuleItemStateChanged
        // TODO add your handling code here:
        GenerateColumnCombo();
        GenerateGrid();
    }//GEN-LAST:event_cmbModuleItemStateChanged
    
    private void txtVariableNameLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVariableNameLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVariableNameLActionPerformed
    
    private void txtVariableNameHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVariableNameHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVariableNameHActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableH;
    private javax.swing.JTable TableL;
    private javax.swing.JComboBox cmbColumnH;
    private javax.swing.JComboBox cmbColumnL;
    private javax.swing.JComboBox cmbModule;
    private javax.swing.JButton cmdAddH;
    private javax.swing.JButton cmdAddL;
    private javax.swing.JButton cmdDownH;
    private javax.swing.JButton cmdDownL;
    private javax.swing.JButton cmdExitH;
    private javax.swing.JButton cmdExitL;
    private javax.swing.JButton cmdRemoveH;
    private javax.swing.JButton cmdRemoveL;
    private javax.swing.JButton cmdUPH;
    private javax.swing.JButton cmdUPL;
    private javax.swing.JButton cmdUpdateH;
    private javax.swing.JButton cmdUpdateL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtCaptionH;
    private javax.swing.JTextField txtCaptionL;
    private javax.swing.JTextField txtVariableNameH;
    private javax.swing.JTextField txtVariableNameL;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        
        HashMap List=new HashMap();
        String strCondition="";
        ComboData aData;

        
        //----- Generate cmbType ------- //
        cmbModuleModel=new EITLComboModel();
        cmbModule.removeAllItems();
        cmbModule.setModel(cmbModuleModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" ORDER BY MODULE_ID";
        
        List=clsModules.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsModules ObjModules=(clsModules) List.get(Integer.toString(i));
            //Check that Module Access Rights are given
            int ModuleID=(int)ObjModules.getAttribute("MODULE_ID").getVal();
            int MenuID=clsMenu.getMenuIDFromModule(EITLERPGLOBAL.gCompanyID, ModuleID);
            
            if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,MenuID)) {
                aData=new ComboData();
                aData.Text=(String) ObjModules.getAttribute("MODULE_DESC").getObj();
                aData.Code=(int) ObjModules.getAttribute("MODULE_ID").getVal();
                cmbModuleModel.addElement(aData);
            }
        }
        
        GenerateColumnCombo();
    }
    
    
    private void GenerateColumnCombo() {
        HashMap List=new HashMap();
        ComboData aData;
        
        //Generating Combo Boxes for Header Section
        cmbColumnModelH =new EITLComboModel();
        cmbColumnH.setModel(cmbColumnModelH);
        List=clsTaxColumn.getList(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND MODULE_ID="+Integer.toString(EITLERPGLOBAL.getComboCode(cmbModule)));
        for(int i=1;i<=List.size();i++) {
            clsTaxColumn ObjColumn=(clsTaxColumn)List.get(Integer.toString(i));
            aData=new ComboData();
            aData.Code=(int)ObjColumn.getAttribute("TAX_ID").getVal();
            aData.Text=(String)ObjColumn.getAttribute("CAPTION").getObj();
            cmbColumnModelH.addElement(aData);
        }
        
        //Generating Combo Boxes for Header Section
        cmbColumnModelL =new EITLComboModel();
        cmbColumnL.setModel(cmbColumnModelL);
        List=clsTaxColumn.getList(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND MODULE_ID="+Integer.toString(EITLERPGLOBAL.getComboCode(cmbModule)));
        for(int i=1;i<=List.size();i++) {
            clsTaxColumn ObjColumn=(clsTaxColumn)List.get(Integer.toString(i));
            aData=new ComboData();
            aData.Code=(int)ObjColumn.getAttribute("TAX_ID").getVal();
            aData.Text=(String)ObjColumn.getAttribute("CAPTION").getObj();
            cmbColumnModelL.addElement(aData);
        }
    }
    
    
    private void FormatGrid() {
        DataModelH=new EITLTableModel();
        DataModelL=new EITLTableModel();
        
        
        TableH.removeAll();
        TableL.removeAll();
        
        TableH.setModel(DataModelH);
        TableL.setModel(DataModelL);
        
        //Set the table Readonly
        DataModelH.TableReadOnly(true);
        DataModelL.TableReadOnly(true);
        
        //Add Columns
        DataModelH.addColumn("SrNo");
        DataModelH.addColumn("Sr.");
        DataModelH.addColumn("Column");
        DataModelH.addColumn("Caption");
        DataModelH.addColumn("Variable Name");
        
        //Add Columns
        DataModelL.addColumn("SrNo");
        DataModelL.addColumn("Sr.");
        DataModelL.addColumn("Column");
        DataModelL.addColumn("Caption");
        DataModelL.addColumn("Variable Name");
        
        //Now hide the column 1
        TableColumnModel ColModel=TableH.getColumnModel();
        TableH.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ColModel.getColumn(0).setMinWidth(0);
        ColModel.getColumn(0).setPreferredWidth(0);
        
        //Now hide the column 1
        TableColumnModel ColModelL=TableL.getColumnModel();
        TableL.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ColModelL.getColumn(0).setMinWidth(0);
        ColModelL.getColumn(0).setPreferredWidth(0);
        
    }
    
    
    private void GenerateGrid() {
        
        FormatGrid();
        
        HashMap List=new HashMap();
        String strModuleID=Integer.toString(EITLERPGLOBAL.getComboCode(cmbModule));
        
        //Generate Header Columns List
        List=clsColumn.getList(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND MODULE_ID="+strModuleID+" AND HEADER_LINE='H' ORDER BY COL_ORDER");
        
        for(int i=1;i<=List.size();i++) {
            clsColumn ObjColumn=(clsColumn)List.get(Integer.toString(i));
            Object[] rowData=new Object[5];
            
            rowData[0]=Integer.toString((int)ObjColumn.getAttribute("SR_NO").getVal());
            rowData[1]=Integer.toString(i);
            rowData[2]=clsTaxColumn.getCaption((int)EITLERPGLOBAL.gCompanyID,(int)ObjColumn.getAttribute("TAX_ID").getVal());
            rowData[3]=(String)ObjColumn.getAttribute("CAPTION").getObj();
            rowData[4]=(String)ObjColumn.getAttribute("VARIABLE_NAME").getObj();
            
            DataModelH.addRow(rowData);
        }
        
        
        //Generate Line Columns List
        List=clsColumn.getList(" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" AND MODULE_ID="+strModuleID+" AND HEADER_LINE='L' ORDER BY COL_ORDER");
        
        for(int i=1;i<=List.size();i++) {
            clsColumn ObjColumn=(clsColumn)List.get(Integer.toString(i));
            Object[] rowData=new Object[5];
            
            rowData[0]=Integer.toString((int)ObjColumn.getAttribute("SR_NO").getVal());
            rowData[1]=Integer.toString(i);
            rowData[2]=clsTaxColumn.getCaption((int)EITLERPGLOBAL.gCompanyID,(int)ObjColumn.getAttribute("TAX_ID").getVal());
            rowData[3]=(String)ObjColumn.getAttribute("CAPTION").getObj();
            rowData[4]=(String)ObjColumn.getAttribute("VARIABLE_NAME").getObj();
            
            DataModelL.addRow(rowData);
        }
    }
    
private void UpdateSrNo()
{
    for(int i=0;i<TableH.getRowCount();i++)
    {
        TableH.setValueAt(Integer.toString(i+1), i, 1);
    }
    
    for(int i=0;i<TableH.getRowCount();i++)
    {
        int SrNo= Integer.parseInt((String)TableH.getValueAt(i, 0));
        int ColOrder=Integer.parseInt((String)TableH.getValueAt(i,1));
        
        clsColumn.UpdateSrNo((int)EITLERPGLOBAL.gCompanyID,SrNo,ColOrder);
    }
    
    for(int i=0;i<TableL.getRowCount();i++)
    {
        TableL.setValueAt(Integer.toString(i+1), i, 1);
    }
    
    for(int i=0;i<TableL.getRowCount();i++)
    {
        int SrNo= Integer.parseInt((String)TableL.getValueAt(i, 0));
        int ColOrder=Integer.parseInt((String)TableL.getValueAt(i,1));
        
        clsColumn.UpdateSrNo((int)EITLERPGLOBAL.gCompanyID,SrNo,ColOrder);
    }
}

    
}
