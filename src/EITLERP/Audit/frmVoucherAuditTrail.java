/*
 * frmIndentsInfo.java
 *
 * Created on July 13, 2005, 10:47 AM
 */

package EITLERP.Audit;

import EITLERP.*;
import EITLERP.Stores.*;
import EITLERP.Purchase.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.util.*;
import java.sql.*;
import java.net.*;
import java.text.DecimalFormat;

/**
 *
 * @author  Ashutosh
 */
public class frmVoucherAuditTrail extends javax.swing.JApplet {
    
    private EITLTableModel DataModelI=new EITLTableModel();
    private EITLTableModel DataModelU=new EITLTableModel();
    private EITLTableModel DataModelD=new EITLTableModel();
    private EITLTableModel DataModelDiscount = new EITLTableModel();
    private EITLTableModel DataModelTarget = new EITLTableModel();
    private EITLTableModel DataModelTargetA = new EITLTableModel();
    private EITLTableModel DataModelMisc = new EITLTableModel();
    private EITLTableModel DataModelSeam = new EITLTableModel();
    private EITLTableModel DataModelSalesY = new EITLTableModel();
    private EITLTableModel DataModelSalesM = new EITLTableModel();
    private EITLTableModel DataModelDiverted = new EITLTableModel();
      
    private EITLComboModel cmbBuyerModel=new EITLComboModel();
    private EITLComboModel cmbOrderModel=new EITLComboModel();
    private EITLComboModel cmbDespatchModel = new EITLComboModel();
    private EITLComboModel cmbStockModel = new EITLComboModel();
    private EITLComboModel cmbDiscountModel = new EITLComboModel();
    private EITLComboModel cmbSeamModel = new EITLComboModel();
    
    private EITLComboModel cmbDeptModel=new EITLComboModel();
    private EITLComboModel cmbApprovalModel=new EITLComboModel();
    
    String strVoucherNo="";
    
    private clsExcel_Exporter exp = new clsExcel_Exporter();
    
    /** Initializes the applet frmIndentsInfo */
    public void init() {
        setSize(1000, 650);
        initComponents();
        
        FormatGridI();
        FormatGridU();
        FormatGridD();
        ForamtGridDiverted();
     //EITLERPGLOBAL.setComboIndex(cmbBuyer,EITLERPGLOBAL.gUserID);
       txtRIA.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        file1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableH = new javax.swing.JTable();
        txtRIA = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableD = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableEX = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableDOC = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtVoucherNo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtToDate = new javax.swing.JTextField();
        txtFromDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 29));
        jPanel1.setLayout(null);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("VOUCHER AUDIT TRAIL");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(2, 4, 360, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 2, 990, 29);

        jTabbedPane1.setAutoscrolls(true);
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(null);

        TableH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableH.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        TableH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableHMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableH);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(9, 48, 920, 320);
        jPanel2.add(txtRIA);
        txtRIA.setBounds(10, 400, 4, 19);

        jButton4.setText("Excel Export");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(70, 10, 130, 25);

        jTabbedPane1.addTab("VOUCHER HEADER", jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(null);

        TableD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableDMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableD);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(10, 40, 940, 330);

        jButton5.setText("Excel Export");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5);
        jButton5.setBounds(70, 10, 130, 25);

        jTabbedPane1.addTab("VOUCHER DETAIL", jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(null);

        TableEX.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TableEX);

        jPanel4.add(jScrollPane3);
        jScrollPane3.setBounds(20, 40, 920, 400);

        jButton6.setText("Excel Export");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6);
        jButton6.setBounds(70, 10, 130, 25);

        jTabbedPane1.addTab("VOUCHER DETAIL EX", jPanel4);

        jPanel5.setLayout(null);

        TableDOC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableDOC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableDOCMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TableDOC);

        jPanel5.add(jScrollPane4);
        jScrollPane4.setBounds(20, 40, 900, 370);

        jButton7.setText("Excel Export");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7);
        jButton7.setBounds(70, 10, 130, 25);

        jTabbedPane1.addTab("DOC DATA", jPanel5);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(6, 129, 960, 530);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Pending Order Form");

        jLabel2.setText("TO");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(280, 70, 30, 20);
        getContentPane().add(txtVoucherNo);
        txtVoucherNo.setBounds(140, 40, 130, 19);

        jButton1.setText("CLEAR");
        jButton1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(300, 40, 60, 20);

        jButton2.setText("Show List");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(140, 100, 90, 20);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(320, 70, 130, 19);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(140, 70, 130, 19);

        jLabel3.setText("VOUCHER NO");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 40, 110, 20);

        jLabel4.setText("DATE FROM");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 70, 110, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // ALL SHOWLIST EVENT ARE MIX..
        if (txtVoucherNo.getText().trim().equals("") && txtFromDate.getText().trim().equals("") && txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Voucher No or From Date or To Date");
            txtVoucherNo.requestFocus(true);
            //return false;
            return;
        }
        else{
        /*String cndn="";
        String voucherNo=txtVoucherNo.getText().trim();
        String fromDate=txtFromDate.getText().trim();
        String toDate=txtToDate.getText().trim();
        
            if (!voucherNo.equals("")) {
                cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.VOUCHER_NO = '" + voucherNo + "'";
            } else {
                if (!fromDate.equals("") && toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "'";
                }
                if (fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
                if (!fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "' "
                            + "AND AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
            }
            */
        GenerateHeaderAudit(); 
        GenerateDetailAudit();
        GenerateDetailExAudit();
        GenerateDocdataAudit();
        }
        
        /*
        Validate();
        if(Validate()==false) {
            JOptionPane.showMessageDialog(null,"Please enter Voucher No");
            return; //Validation failed
        }
        else
        {
        GenerateHeaderAudit(); 
        GenerateDetailAudit();
        GenerateDetailExAudit();
        GenerateDocdataAudit();
        }
         */
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtVoucherNo.setText("");
        txtFromDate.setText("");
        txtToDate.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TableDOCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableDOCMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()>=2) {
            if(TableDOC.getRowCount()>0) {
                txtRIA.setText((String)TableDOC.getValueAt(TableDOC.getSelectedRow(), 7));
                BigEdit bigEdit=new BigEdit();
                bigEdit.theText=txtRIA;
                bigEdit.ShowEdit();
            }
        }
    }//GEN-LAST:event_TableDOCMouseClicked

    private void TableDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableDMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()>=2) {
            if(TableD.getRowCount()>0) {
                txtRIA.setText((String)TableD.getValueAt(TableD.getSelectedRow(), 1));
                BigEdit bigEdit=new BigEdit();
                bigEdit.theText=txtRIA;
                bigEdit.ShowEdit();
            }
        }
    }//GEN-LAST:event_TableDMouseClicked
                    
    /**
     *
     */    
    private void TableHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableHMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()>=2) {
            if(TableH.getRowCount()>0) {
            txtRIA.setText((String)TableH.getValueAt(TableH.getSelectedRow(), 6));
                BigEdit bigEdit=new BigEdit();
                bigEdit.theText=txtRIA;
                bigEdit.ShowEdit();
            }
        }
    }//GEN-LAST:event_TableHMouseClicked
        
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        File file = null;
        file1.setVisible(true);
        try {
            int returnVal = file1.showOpenDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);
            
            exp.fillData(TableH, new File(file1.getSelectedFile().toString() + ".xls"), "GSTR2");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file1.getSelectedFile().toString() + " successfully... ", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
File file = null;
        file1.setVisible(true);
        try {
            int returnVal = file1.showOpenDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);
            
            exp.fillData(TableD, new File(file1.getSelectedFile().toString() + ".xls"), "GSTR2");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file1.getSelectedFile().toString() + " successfully... ", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
File file = null;
        file1.setVisible(true);
        try {
            int returnVal = file1.showOpenDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);
            
            exp.fillData(TableEX, new File(file1.getSelectedFile().toString() + ".xls"), "GSTR2");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file1.getSelectedFile().toString() + " successfully... ", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        File file = null;
        file1.setVisible(true);
        try {
            int returnVal = file1.showOpenDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);
            
            exp.fillData(TableDOC, new File(file1.getSelectedFile().toString() + ".xls"), "GSTR2");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file1.getSelectedFile().toString() + " successfully... ", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed
                    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableD;
    private javax.swing.JTable TableDOC;
    private javax.swing.JTable TableEX;
    private javax.swing.JTable TableH;
    private javax.swing.JFileChooser file1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtRIA;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtVoucherNo;
    // End of variables declaration//GEN-END:variables
    
    
    
    
    
    private void FormatGridI() {
     DataModelI=new EITLTableModel();
        TableH.removeAll();
      TableH.setModel(DataModelI);
        
        TableH.setAutoResizeMode(TableH.AUTO_RESIZE_OFF);
     
        DataModelI.addColumn("Sr.");
        DataModelI.addColumn("Start Date");
        DataModelI.addColumn("End Date");
        DataModelI.addColumn("User IP");
        DataModelI.addColumn("Action Type");
        DataModelI.addColumn("Revision No");
        DataModelI.addColumn("Company_id");    
        DataModelI.addColumn("Voucher No");
        DataModelI.addColumn("Book Code");
        DataModelI.addColumn("Cheque No");
        DataModelI.addColumn("Cheque Date");
        DataModelI.addColumn("Realization Date");
        DataModelI.addColumn("Customer Bank");
        DataModelI.addColumn("Bank Name");
        DataModelI.addColumn("St Category");
        DataModelI.addColumn("Approved");
        DataModelI.addColumn("Approved Date");
        DataModelI.addColumn("Rejected");
        DataModelI.addColumn("Rejected Date");
        DataModelI.addColumn("Rejected Remarks");
        DataModelI.addColumn("Created By");
        DataModelI.addColumn("Created Date");
        DataModelI.addColumn("Modified By");
        DataModelI.addColumn("Modified Date");
        DataModelI.addColumn("Hierarchy Id");
        DataModelI.addColumn("Changed");
        DataModelI.addColumn("Changed Date");
        DataModelI.addColumn("Cancelled");
        DataModelI.addColumn("Remarks");
        DataModelI.addColumn("Voucher Date");
        DataModelI.addColumn("Cheque Amount");
        DataModelI.addColumn("Voucher Type");
        DataModelI.addColumn("Payment Mode");
        DataModelI.addColumn("Legacy No");
        DataModelI.addColumn("Legacy Date");
        DataModelI.addColumn("Link No");
        DataModelI.addColumn("Reason Code");
        DataModelI.addColumn("Exclude in Adj");
        
        DataModelI.TableReadOnly(true);       
    }
    
    
    private void FormatGridU() {
       DataModelU=new EITLTableModel();
        TableD.removeAll();
        TableD.setModel(DataModelU);
        
        TableD.setAutoResizeMode(TableH.AUTO_RESIZE_OFF);
        DataModelU.addColumn("Sr.");
        DataModelU.addColumn("Start Date");
        DataModelU.addColumn("End Date");
        DataModelU.addColumn("User IP");
        DataModelU.addColumn("Action Type");
        DataModelU.addColumn("Revision No");
        DataModelU.addColumn("Company ID");
        DataModelU.addColumn("Voucher No");
        DataModelU.addColumn("Sr No");
        DataModelU.addColumn("Effect");
        DataModelU.addColumn("Account ID");
        DataModelU.addColumn("Main Account Code");
        DataModelU.addColumn("Sub Account Code");
        DataModelU.addColumn("Amount");
        DataModelU.addColumn("Applicable Amount");
        DataModelU.addColumn("Percentage");
        DataModelU.addColumn("Remarks");
        DataModelU.addColumn("Created By");
        DataModelU.addColumn("Created Date");
        DataModelU.addColumn("Modified By");
        DataModelU.addColumn("Modified Date");
        DataModelU.addColumn("Cancelled");
        DataModelU.addColumn("Changed");
        DataModelU.addColumn("Changed Date");
        DataModelU.addColumn("PO No");
        DataModelU.addColumn("PO Date");
        DataModelU.addColumn("Invoice No");
        DataModelU.addColumn("Invoice Date");
        DataModelU.addColumn("Value Date");
        DataModelU.addColumn("GRN No");
        DataModelU.addColumn("GRN Date");
        DataModelU.addColumn("Module Id");
        DataModelU.addColumn("Invoice Amt");
        DataModelU.addColumn("Link No");
        DataModelU.addColumn("Ref Company Id");
        DataModelU.addColumn("Is Deduction");
        DataModelU.addColumn("Ref Voucher No");
        DataModelU.addColumn("Ref Voucher Type");
        DataModelU.addColumn("Ref Voucher Company");
        DataModelU.addColumn("Matched");
        DataModelU.addColumn("Matched Date");
        DataModelU.addColumn("Ref Sr No");
        DataModelU.TableReadOnly(true); 
        
    }
    
    private void FormatGridD() {
       DataModelD=new EITLTableModel();
        TableDOC.removeAll();
        TableDOC.setModel(DataModelD);
        
        TableDOC.setAutoResizeMode(TableH.AUTO_RESIZE_OFF);
        DataModelD.addColumn("Sr.");
        DataModelD.addColumn("Start Date");
        DataModelD.addColumn("End Date");
        DataModelD.addColumn("User IP");
        DataModelD.addColumn("Action Type");
        DataModelD.addColumn("Revision No");
        DataModelD.addColumn("Company ID");
        DataModelD.addColumn("Module ID");
        DataModelD.addColumn("Doc No");
        DataModelD.addColumn("Doc Date");
        DataModelD.addColumn("User ID");
        DataModelD.addColumn("Status");
        DataModelD.addColumn("Type");
        DataModelD.addColumn("Remarks");
        DataModelD.addColumn("Sr No");
        DataModelD.addColumn("From User Id");
        DataModelD.addColumn("From Remarks");
        DataModelD.addColumn("Received Date ");
        DataModelD.addColumn("Action Date");
        DataModelD.addColumn("Changed");
        DataModelD.addColumn("Changed Date");        
        DataModelD.TableReadOnly(true); 
        
    }
    
     private void ForamtGridDiverted(){
         
      DataModelDiverted=new EITLTableModel();
      TableEX.removeAll();
      TableEX.setModel(DataModelDiverted);
        
      TableEX.setAutoResizeMode(TableEX.AUTO_RESIZE_OFF);
     
        DataModelDiverted.addColumn("Sr.");
        DataModelDiverted.addColumn("Start Date");
        DataModelDiverted.addColumn("End Date");
        DataModelDiverted.addColumn("User IP");
        DataModelDiverted.addColumn("Action Type");
        DataModelDiverted.addColumn("Revision No");
        DataModelDiverted.addColumn("Company ID");
        DataModelDiverted.addColumn("Voucher No");
        DataModelDiverted.addColumn("Sr No");
        DataModelDiverted.addColumn("Effect");
        DataModelDiverted.addColumn("Account ID");
        DataModelDiverted.addColumn("Main Account Code");
        DataModelDiverted.addColumn("Sub Account Code");
        DataModelDiverted.addColumn("Amount");
        DataModelDiverted.addColumn("Applicable Amount");
        DataModelDiverted.addColumn("Percentage");
        DataModelDiverted.addColumn("Remarks");
        DataModelDiverted.addColumn("Created By");
        DataModelDiverted.addColumn("Created Date");
        DataModelDiverted.addColumn("Modified By");
        DataModelDiverted.addColumn("Modified Date");
        DataModelDiverted.addColumn("Cancelled");
        DataModelDiverted.addColumn("Changed");
        DataModelDiverted.addColumn("Changed Date");
        DataModelDiverted.addColumn("Block No");
        DataModelDiverted.addColumn("PO No");
        DataModelDiverted.addColumn("PO Date");
        DataModelDiverted.addColumn("Invoice No");
        DataModelDiverted.addColumn("Invoice Date");
        DataModelDiverted.addColumn("Value Date");
        DataModelDiverted.addColumn("GRN No");
        DataModelDiverted.addColumn("GRN Date");
        DataModelDiverted.addColumn("Module Id");
        DataModelDiverted.addColumn("Invoice Amt");
        DataModelDiverted.addColumn("Link No");
        DataModelDiverted.addColumn("Ref Company Id");
        DataModelDiverted.addColumn("Is Deduction");
        DataModelDiverted.addColumn("Ref Voucher No");
        DataModelDiverted.addColumn("Ref Voucher Type");
        DataModelDiverted.addColumn("Ref Voucher Company");
        DataModelDiverted.addColumn("Matched");
        DataModelDiverted.addColumn("Matched Date");
        DataModelDiverted.addColumn("Ref Sr No");
        
        
        DataModelDiverted.TableReadOnly(true);  
         
     }
     
  private boolean Validate(){
        if (txtVoucherNo.getText().trim().equals("")) {
            //JOptionPane.showMessageDialog(null,"Please enter Voucher No");
            txtVoucherNo.requestFocus(true);
            //return false;
        }
        return false;
        }  
     
    private void GenerateHeaderAudit() {
      String strSQL="";
      String cndn="";
        String voucherNo=txtVoucherNo.getText().trim();
        String fromDate=txtFromDate.getText().trim();
        String toDate=txtToDate.getText().trim();
        
      
        try{
          FormatGridI(); //clear existing content of table      
          strVoucherNo = txtVoucherNo.getText().toString();
          ResultSet rsTmp,rsBuyer,rsIndent,rsRIA;          
        //strSQL+="WHERE ";
//        if(!txtVoucherNo.getText().equals("")){
//         strSQL+="WHERE AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.VOUCHER_NO = '"+strVoucherNo+"'";    
//        }
        if (!voucherNo.equals("")) {
                cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.VOUCHER_NO = '" + voucherNo + "'";
            } else {
                if (!fromDate.equals("") && toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "'";
                }
                if (fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
                if (!fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "' "
                            + "AND AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
            }
         strSQL="";        
        strSQL+="SELECT * FROM AUDIT_TRAIL.D_FIN_VOUCHER_HEADER_AUDIT WHERE "+cndn;        
        
         System.out.println(strSQL);
         rsTmp=data.getResult(strSQL);
         rsTmp.first();
         if(rsTmp.getRow()>0) {
                int cnt=0;
                while(!rsTmp.isAfterLast()) {
                   cnt++;     
                 Object[] rowData=new Object[38];
                    rowData[0]=Integer.toString(cnt);
                    rowData[1]=rsTmp.getString("START_DATE");
                    rowData[2]=rsTmp.getString("END_DATE");
                    rowData[3]=rsTmp.getString("USER_IP");
                    rowData[4]=rsTmp.getString("ACTION_TYPE");
                    rowData[5]=rsTmp.getString("REVISION_NO");
                    rowData[6]=rsTmp.getString("COMPANY_ID");
                    rowData[7]=rsTmp.getString("VOUCHER_NO");
                    rowData[8]=rsTmp.getString("BOOK_CODE");                    
                    rowData[9]=rsTmp.getString("CHEQUE_NO");
                    rowData[10]=EITLERPGLOBAL.formatDate(rsTmp.getString("CHEQUE_DATE"));
                    rowData[11]=EITLERPGLOBAL.formatDate(rsTmp.getString("REALIZATION_DATE"));
                    rowData[12]=rsTmp.getString("CUSTOMER_BANK");
                    rowData[13]=rsTmp.getString("BANK_NAME");
                    rowData[14]=rsTmp.getString("ST_CATEGORY");
                    rowData[15]=rsTmp.getString("APPROVED");
                    rowData[16]=EITLERPGLOBAL.formatDate(rsTmp.getString("APPROVED_DATE"));
                    rowData[17]=rsTmp.getString("REJECTED");
                    rowData[18]=EITLERPGLOBAL.formatDate(rsTmp.getString("REJECTED_DATE"));
                    rowData[19]=rsTmp.getString("REJECTED_REMARKS");
                    rowData[20]=rsTmp.getString("CREATED_BY");
                    rowData[21]=EITLERPGLOBAL.formatDate(rsTmp.getString("CREATED_DATE"));
                    rowData[22]=rsTmp.getString("MODIFIED_BY");
                    rowData[23]=EITLERPGLOBAL.formatDate(rsTmp.getString("MODIFIED_DATE"));
                    rowData[24]=rsTmp.getString("HIERARCHY_ID");
                    rowData[25]=rsTmp.getString("CHANGED");
                    rowData[26]=EITLERPGLOBAL.formatDate(rsTmp.getString("CHANGED_DATE"));
                    rowData[27]=rsTmp.getString("CANCELLED");
                    rowData[28]=rsTmp.getString("REMARKS");
                    rowData[29]=EITLERPGLOBAL.formatDate(rsTmp.getString("VOUCHER_DATE"));
                    rowData[30]=rsTmp.getString("CHEQUE_AMOUNT");
                    rowData[31]=rsTmp.getString("VOUCHER_TYPE");
                    rowData[32]=rsTmp.getString("PAYMENT_MODE");
                    rowData[33]=rsTmp.getString("LEGACY_NO");
                    rowData[34]=EITLERPGLOBAL.formatDate(rsTmp.getString("LEGACY_DATE"));
                    rowData[35]=rsTmp.getString("LINK_NO");
                    rowData[36]=rsTmp.getString("REASON_CODE");
                    rowData[37]=rsTmp.getString("EXCLUDE_IN_ADJ");                    
                    DataModelI.addRow(rowData);
              //   System.out.println("rsTmp.getString('PIECE_NO')");
                    rsTmp.next();
                }
         }
       }
      catch(Exception e){
         e.printStackTrace();
        JOptionPane.showMessageDialog(null,e.getMessage()); 
      }
   
        
    
    }
    
    private void GenerateDetailAudit() {
      String strSQL="";
      String cndn="";
        String voucherNo=txtVoucherNo.getText().trim();
        String fromDate=txtFromDate.getText().trim();
        String toDate=txtToDate.getText().trim();
        
      try{
        FormatGridU();  //clear existing content of table              
        ResultSet rsTmp,rsBuyer,rsIndent,rsRIA;          
        strVoucherNo = txtVoucherNo.getText().toString();
        
        //strSQL+="WHERE ";
        //if(!txtVoucherNo.getText().equals("")){
        // strSQL+="WHERE AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_AUDIT.VOUCHER_NO = '"+strVoucherNo+"'";    
        //} 
        if (!voucherNo.equals("")) {
                cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_AUDIT.VOUCHER_NO = '" + voucherNo + "'";
            } else {
                if (!fromDate.equals("") && toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "'";
                }
                if (fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
                if (!fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "' "
                            + "AND AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
            }
        
        strSQL= "";
        strSQL="SELECT * FROM AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_AUDIT WHERE "+cndn;        
        
         System.out.println(strSQL);
         rsTmp=data.getResult(strSQL);
         //rsTmp.first();
         if(rsTmp.getRow()>0) {
                int cnt=0;                
                while(!rsTmp.isAfterLast()) {
                    cnt++;                                         
                 Object[] rowData=new Object[43];
                    rowData[0]=Integer.toString(cnt);
                    rowData[1]=rsTmp.getString("START_DATE");
                    rowData[2]=rsTmp.getString("END_DATE");
                    rowData[3]=rsTmp.getString("USER_IP");
                    rowData[4]=rsTmp.getString("ACTION_TYPE");
                    rowData[5]=rsTmp.getString("REVISION_NO");
                    rowData[6]=rsTmp.getString("COMPANY_ID");
                    rowData[7]=rsTmp.getString("VOUCHER_NO");    
                    rowData[8]=rsTmp.getString("SR_NO");
                    rowData[9]=rsTmp.getString("EFFECT");
                    rowData[10]=rsTmp.getString("ACCOUNT_ID");
                    rowData[11]=rsTmp.getString("MAIN_ACCOUNT_CODE");
                    rowData[12]=rsTmp.getString("SUB_ACCOUNT_CODE");
                    rowData[13]=rsTmp.getString("AMOUNT");
                    rowData[14]=rsTmp.getString("APPLICABLE_AMOUNT");
                    rowData[15]=rsTmp.getString("PERCENTAGE");
                    rowData[16]=rsTmp.getString("REMARKS");
                    rowData[17]=rsTmp.getString("CREATED_BY");
                    rowData[18]=EITLERPGLOBAL.formatDate(rsTmp.getString("CREATED_DATE"));
                    rowData[19]=rsTmp.getString("MODIFIED_BY");
                    rowData[20]=EITLERPGLOBAL.formatDate(rsTmp.getString("MODIFIED_DATE"));
                    rowData[21]=rsTmp.getString("CANCELLED");
                    rowData[22]=rsTmp.getString("CHANGED");
                    rowData[23]=EITLERPGLOBAL.formatDate(rsTmp.getString("CHANGED_DATE"));
                    rowData[24]=rsTmp.getString("PO_NO");
                    rowData[25]=EITLERPGLOBAL.formatDate(rsTmp.getString("PO_DATE"));
                    rowData[26]=rsTmp.getString("INVOICE_NO");
                    rowData[27]=EITLERPGLOBAL.formatDate(rsTmp.getString("INVOICE_DATE"));
                    rowData[28]=EITLERPGLOBAL.formatDate(rsTmp.getString("VALUE_DATE"));
                    rowData[29]=rsTmp.getString("GRN_NO");
                    rowData[30]=EITLERPGLOBAL.formatDate(rsTmp.getString("GRN_DATE"));
                    rowData[31]=rsTmp.getString("MODULE_ID");
                    rowData[32]=rsTmp.getString("INVOICE_AMOUNT");
                    rowData[33]=rsTmp.getString("LINK_NO");
                    rowData[34]=rsTmp.getString("REF_COMPANY_ID");
                    rowData[35]=rsTmp.getString("IS_DEDUCTION");
                    rowData[36]=rsTmp.getString("REF_VOUCHER_NO");
                    rowData[37]=rsTmp.getString("REF_VOUCHER_TYPE");
                    rowData[38]=rsTmp.getString("REF_VOUCHER_COMPANY_ID");
                    rowData[39]=rsTmp.getString("MATCHED");
                    rowData[40]=EITLERPGLOBAL.formatDate(rsTmp.getString("MATCHED_DATE"));
                    rowData[41]=rsTmp.getString("REF_SR_NO");

                    DataModelU.addRow(rowData);
              //   System.out.println("rsTmp.getString('PIECE_NO')");
                    rsTmp.next();
                }
         }
        
      }
      catch(Exception e){
        e.printStackTrace();
        JOptionPane.showMessageDialog(null,e.getMessage());
      }
        
    /*     int DeptID=0;
        int SelUserID=0;
        String strSQL="";
        
        try {
            
            FormatGridU(); //clear existing content of table
            SelUserID=EITLERPGLOBAL.getComboCode(cmbBuyer);
            
            //Check if this user is HOD of the department
            ResultSet rsTmp,rsBuyer;
            //rsTmp=data.getResult("SELECT INDENT_NO,INDENT_DATE,FOR_DEPT_ID FROM D_INV_INDENT_HEADER WHERE APPROVED=0 AND CANCELED=0 AND FOR_DEPT_ID IN (SELECT DEPT_ID FROM D_COM_DEPT_BUYERS WHERE BUYER="+SelUserID+")");
            //rsTmp.first();
            
            strSQL="";
            
            strSQL=strSQL+" SELECT A.INDENT_NO,A.INDENT_DATE AS INDENT_DATE,A.FOR_DEPT_ID,A.CREATED_BY FROM ";
            strSQL=strSQL+" D_INV_INDENT_HEADER A, ";
            strSQL=strSQL+" D_INV_INDENT_DETAIL B ";
            strSQL=strSQL+" WHERE ";
            strSQL=strSQL+" A.INDENT_NO=B.INDENT_NO AND ";
            strSQL=strSQL+" A.APPROVED=0 AND ";
            strSQL=strSQL+" A.CANCELED=0 AND ";
            strSQL=strSQL+" A.FOR_DEPT_ID IN (SELECT DEPT_ID FROM D_COM_DEPT_BUYERS WHERE BUYER="+SelUserID+")  AND ";
            strSQL=strSQL+" A.INDENT_NO NOT IN ( ";
            strSQL=strSQL+" SELECT DISTINCT(C.INDENT_NO)  AS INDENT_NO FROM ";
            strSQL=strSQL+" D_INV_INDENT_DETAIL A, ";
            strSQL=strSQL+" D_COM_BUYER_ITEMS B, ";
            strSQL=strSQL+" D_INV_INDENT_HEADER C ";
            strSQL=strSQL+" WHERE ";
            strSQL=strSQL+" A.INDENT_NO=C.INDENT_NO AND ";
            strSQL=strSQL+" C.APPROVED=0 AND C.CANCELED=0 AND ";
            strSQL=strSQL+" A.PO_QTY<QTY AND ";
            strSQL=strSQL+" B.BUYER<>"+SelUserID+" AND ";
            strSQL=strSQL+" B.ITEM_ID=SUBSTRING(A.ITEM_CODE,1,LENGTH(B.ITEM_ID)) ";
            strSQL=strSQL+" UNION ";
            strSQL=strSQL+" SELECT DISTINCT(A.INDENT_NO) AS INDENT_NO FROM  ";
            strSQL=strSQL+" D_INV_INDENT_DETAIL A, ";
            strSQL=strSQL+" D_COM_BUYER_ITEMS B, ";
            strSQL=strSQL+" D_INV_INDENT_HEADER C, ";
            strSQL=strSQL+" D_INV_ITEM_MASTER D ";
            strSQL=strSQL+" WHERE ";
            strSQL=strSQL+" A.INDENT_NO=C.INDENT_NO AND ";
            strSQL=strSQL+" C.APPROVED=0 AND C.CANCELED=0 AND ";
            strSQL=strSQL+" B.BUYER<>"+SelUserID+" AND  ";
            strSQL=strSQL+" B.ITEM_CLASS<>'' AND ";
            strSQL=strSQL+" A.ITEM_CODE=D.ITEM_ID AND D.CANCELLED=0 AND ";
            strSQL=strSQL+" D.ABC=B.ITEM_CLASS ) ";
            strSQL=strSQL+" UNION ";
            strSQL=strSQL+" SELECT DISTINCT(C.INDENT_NO)  AS INDENT_NO,C.INDENT_DATE AS INDENT_DATE,C.FOR_DEPT_ID,C.CREATED_BY FROM  ";
            strSQL=strSQL+" D_INV_INDENT_DETAIL A, ";
            strSQL=strSQL+" D_COM_BUYER_ITEMS B, ";
            strSQL=strSQL+" D_INV_INDENT_HEADER C ";
            strSQL=strSQL+" WHERE ";
            strSQL=strSQL+" A.INDENT_NO=C.INDENT_NO AND ";
            strSQL=strSQL+" C.APPROVED=0 AND C.CANCELED=0 AND ";
            strSQL=strSQL+" B.BUYER="+SelUserID+" AND  ";
            strSQL=strSQL+" B.ITEM_ID=SUBSTRING(A.ITEM_CODE,1,LENGTH(B.ITEM_ID)) ";
            strSQL=strSQL+" UNION ";
            strSQL=strSQL+" SELECT DISTINCT(A.INDENT_NO) AS INDENT_NO,C.INDENT_DATE AS INDENT_DATE,C.FOR_DEPT_ID,C.CREATED_BY FROM  ";
            strSQL=strSQL+" D_INV_INDENT_DETAIL A, ";
            strSQL=strSQL+" D_COM_BUYER_ITEMS B, ";
            strSQL=strSQL+" D_INV_INDENT_HEADER C, ";
            strSQL=strSQL+" D_INV_ITEM_MASTER D ";
            strSQL=strSQL+" WHERE ";
            strSQL=strSQL+" A.INDENT_NO=C.INDENT_NO AND ";
            strSQL=strSQL+" C.APPROVED=0 AND C.CANCELED=0 AND ";
            strSQL=strSQL+" B.BUYER="+SelUserID+" AND  ";
            strSQL=strSQL+" B.ITEM_CLASS<>'' AND ";
            strSQL=strSQL+" A.ITEM_CODE=D.ITEM_ID AND D.CANCELLED=0 AND ";
            strSQL=strSQL+" D.ABC=B.ITEM_CLASS  ";
            strSQL=strSQL+" ORDER BY INDENT_DATE ";
            
            rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            
            if(rsTmp.getRow()>0) {
                int cnt=0;
                while(!rsTmp.isAfterLast()) {
                    cnt++;
                    
                    String BuyerName="";
                    
                    /*rsBuyer=data.getResult("SELECT BUYER FROM D_COM_DEPT_BUYERS WHERE DEPT_ID="+rsTmp.getInt("FOR_DEPT_ID")+" AND BUYER<>"+EITLERPGLOBAL.gUserID);
                    rsBuyer.first();
                    BuyerName=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.gUserID);
                     
                    if(rsBuyer.getRow()>0) {
                        BuyerName=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,rsBuyer.getInt("BUYER"));
                    }
                    
                    BuyerName=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,SelUserID);
                    
                    Object[] rowData=new Object[7];
                    rowData[0]=Integer.toString(cnt);
                    rowData[1]=BuyerName;
                    rowData[2]=rsTmp.getString("INDENT_NO");
                    rowData[3]=EITLERPGLOBAL.formatDate(rsTmp.getString("INDENT_DATE"));
                    rowData[4]=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,rsTmp.getInt("FOR_DEPT_ID"));
                    rowData[5]=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,ApprovalFlow.getWaitingUser(EITLERPGLOBAL.gCompanyID, 3, rsTmp.getString("INDENT_NO")));
                    rowData[6]=EITLERPGLOBAL.formatDate(ApprovalFlow.getWaitingReceivedDate(EITLERPGLOBAL.gCompanyID, 3, rsTmp.getString("INDENT_NO")));
                    
                    
                    DataModelU.addRow(rowData);
                    
                    rsTmp.next();
                }
            }
       }
        catch(Exception e) {
            
        }*/
    }
    
    private void GenerateDocdataAudit(){
      String strSQL="";
      String cndn="";
        String voucherNo=txtVoucherNo.getText().trim();
        String fromDate=txtFromDate.getText().trim();
        String toDate=txtToDate.getText().trim();
        
      try{
          FormatGridD();  //clear existing content of table
          strVoucherNo = txtVoucherNo.getText().toString();      
          ResultSet rsTmp,rsBuyer,rsIndent,rsRIA;
        
        //strSQL+="WHERE ";
        //if(!txtVoucherNo.getText().equals("")){
        // strSQL+="WHERE AUDIT_TRAIL.D_COM_DOC_DATA_AUDIT.DOC_NO = '"+strVoucherNo+"'";    
        //}
        if (!voucherNo.equals("")) {
                cndn += " AUDIT_TRAIL.D_COM_DOC_DATA_AUDIT.DOC_NO = '" + voucherNo + "'";
            } else {
                if (!fromDate.equals("") && toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_COM_DOC_DATA_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "'";
                }
                if (fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_COM_DOC_DATA_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
                if (!fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_COM_DOC_DATA_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "' "
                            + "AND AUDIT_TRAIL.D_COM_DOC_DATA_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
            }
        strSQL= "";
        strSQL+= "SELECT * FROM AUDIT_TRAIL.D_COM_DOC_DATA_AUDIT WHERE "+cndn;               
        
         System.out.println(strSQL);
         rsTmp=data.getResult(strSQL);
         rsTmp.first();
         if(rsTmp.getRow()>0) {
                int cnt=0;
                while(!rsTmp.isAfterLast()) {
                    cnt++; 
                    
                 Object[] rowData=new Object[21];
                    rowData[0]=Integer.toString(cnt);
                    rowData[1]=rsTmp.getString("START_DATE");
                    rowData[2]=rsTmp.getString("END_DATE");
                    rowData[3]=rsTmp.getString("USER_IP");
                    rowData[4]=rsTmp.getString("ACTION_TYPE");
                    rowData[5]=rsTmp.getString("REVISION_NO");
                    rowData[6]=rsTmp.getString("COMPANY_ID");
                    rowData[7]=rsTmp.getString("MODULE_ID");
                    rowData[8]=rsTmp.getString("DOC_NO");
                    rowData[9]=EITLERPGLOBAL.formatDate(rsTmp.getString("DOC_DATE"));
                    rowData[10]=rsTmp.getString("USER_ID");
                    rowData[11]=rsTmp.getString("STATUS");
                    rowData[12]=rsTmp.getString("TYPE");
                    rowData[13]=rsTmp.getString("REMARKS");
                    rowData[14]=rsTmp.getString("SR_NO");
                    rowData[15]=rsTmp.getString("FROM_USER_ID");
                    rowData[16]=rsTmp.getString("FROM_REMARKS");
                    rowData[17]=EITLERPGLOBAL.formatDate(rsTmp.getString("RECEIVED_DATE"));
                    rowData[18]=EITLERPGLOBAL.formatDate(rsTmp.getString("ACTION_DATE"));
                    rowData[19]=rsTmp.getString("CHANGED");
                    rowData[20]=EITLERPGLOBAL.formatDate(rsTmp.getString("CHANGED_DATE"));
                    DataModelD.addRow(rowData);
              //   System.out.println("rsTmp.getString('PIECE_NO')");
                    rsTmp.next();
                }
         }
        
      }
      catch(Exception e){
        e.printStackTrace();
        JOptionPane.showMessageDialog(null,e.getMessage());
      }
  }   
    
    private void GenerateDetailExAudit(){
      String strSQL="";
      String cndn="";
        String voucherNo=txtVoucherNo.getText().trim();
        String fromDate=txtFromDate.getText().trim();
        String toDate=txtToDate.getText().trim();
        
      try{
          ForamtGridDiverted();  //clear existing content of table
         strVoucherNo = txtVoucherNo.getText().toString();      
          ResultSet rsTmp,rsBuyer,rsIndent,rsRIA;
          
        //strSQL+="WHERE ";
        //if(!txtVoucherNo.getText().equals("")){
        // strSQL+="WHERE AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_EX_AUDIT.VOUCHER_NO = '"+strVoucherNo+"'";    
        //} 
        if (!voucherNo.equals("")) {
                cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_EX_AUDIT.VOUCHER_NO = '" + voucherNo + "'";
            } else {
                if (!fromDate.equals("") && toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_EX_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "'";
                }
                if (fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_EX_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
                if (!fromDate.equals("") && !toDate.equals("")) {
                    cndn += " AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_EX_AUDIT.START_DATE >= '" + EITLERPGLOBAL.formatDateDB(fromDate) + "' "
                            + "AND AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_EX_AUDIT.START_DATE <= '" + EITLERPGLOBAL.formatDateDB(toDate) + "'";
                }
            }
        
        strSQL= "";
        strSQL+= "SELECT * FROM AUDIT_TRAIL.D_FIN_VOUCHER_DETAIL_EX_AUDIT WHERE "+cndn;
        
        System.out.println(strSQL);
        rsTmp=data.getResult(strSQL);
        rsTmp.first();
        if(rsTmp.getRow()>0) {
                int cnt=0;
                while(!rsTmp.isAfterLast()) {
                    cnt++; 
                    
                 Object[] rowData=new Object[43];                    
                    rowData[0]=Integer.toString(cnt);
                    rowData[1]=rsTmp.getString("START_DATE");
                    rowData[2]=rsTmp.getString("END_DATE");
                    rowData[3]=rsTmp.getString("USER_IP");
                    rowData[4]=rsTmp.getString("ACTION_TYPE");
                    rowData[5]=rsTmp.getString("REVISION_NO");
                    rowData[6]=rsTmp.getString("COMPANY_ID");
                    rowData[7]=rsTmp.getString("VOUCHER_NO");    
                    rowData[8]=rsTmp.getString("SR_NO");
                    rowData[9]=rsTmp.getString("EFFECT");
                    rowData[10]=rsTmp.getString("ACCOUNT_ID");
                    rowData[11]=rsTmp.getString("MAIN_ACCOUNT_CODE");
                    rowData[12]=rsTmp.getString("SUB_ACCOUNT_CODE");
                    rowData[13]=rsTmp.getString("AMOUNT");
                    rowData[14]=rsTmp.getString("APPLICABLE_AMOUNT");
                    rowData[15]=rsTmp.getString("PERCENTAGE");
                    rowData[16]=rsTmp.getString("REMARKS");
                    rowData[17]=rsTmp.getString("CREATED_BY");
                    rowData[18]=EITLERPGLOBAL.formatDate(rsTmp.getString("CREATED_DATE"));
                    rowData[19]=rsTmp.getString("MODIFIED_BY");
                    rowData[20]=EITLERPGLOBAL.formatDate(rsTmp.getString("MODIFIED_DATE"));
                    rowData[21]=rsTmp.getString("CANCELLED");
                    rowData[22]=rsTmp.getString("CHANGED");
                    rowData[23]=EITLERPGLOBAL.formatDate(rsTmp.getString("CHANGED_DATE"));
                    rowData[24]=rsTmp.getString("BLOCK_NO");
                    rowData[25]=rsTmp.getString("PO_NO");
                    rowData[26]=EITLERPGLOBAL.formatDate(rsTmp.getString("PO_DATE"));
                    rowData[27]=rsTmp.getString("INVOICE_NO");
                    rowData[28]=EITLERPGLOBAL.formatDate(rsTmp.getString("INVOICE_DATE"));
                    rowData[29]=rsTmp.getString("VALUE_DATE");
                    rowData[30]=rsTmp.getString("GRN_NO");
                    rowData[31]=EITLERPGLOBAL.formatDate(rsTmp.getString("GRN_DATE"));
                    rowData[32]=rsTmp.getString("MODULE_ID");
                    rowData[33]=rsTmp.getString("INVOICE_AMOUNT");
                    rowData[34]=rsTmp.getString("LINK_NO");
                    rowData[35]=rsTmp.getString("REF_COMPANY_ID");
                    rowData[36]=rsTmp.getString("IS_DEDUCTION");
                    rowData[37]=rsTmp.getString("REF_VOUCHER_NO");
                    rowData[38]=rsTmp.getString("REF_VOUCHER_TYPE");
                    rowData[39]=rsTmp.getString("REF_VOUCHER_COMPANY_ID");
                    rowData[40]=rsTmp.getString("MATCHED");
                    rowData[41]=rsTmp.getString("MATCHED_DATE");
                    rowData[42]=rsTmp.getString("REF_SR_NO");

                    DataModelDiverted.addRow(rowData);
                    rsTmp.next();
                }
         }
      }
      catch(Exception e){
        e.printStackTrace();
        JOptionPane.showMessageDialog(null,e.getMessage());
      }        
    }
    
    

    
    }
    
