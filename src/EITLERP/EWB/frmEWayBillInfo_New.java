/* frmFeltSalesInfo.java
 *
 *
 * Created on July 13, 2005, 10:47 AM
 */
package EITLERP.EWB;

import EITLERP.*;
import EITLERP.Finance.UtilFunctions;
import EITLERP.Sales.clsOrderShade;
import java.awt.Color;
import java.io.File;
import java.sql.*;
import javax.swing.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.table.JTableHeader;

/**
 *
 * @author ashutosh/RISHI
 */
public class frmEWayBillInfo_New extends javax.swing.JApplet {

    public boolean forceToChange = false;
    public boolean cancelled = false;
    private EITLTableModel[] DataModel;
    private EITLTableModel DataModelEWB = new EITLTableModel();
    private EITLComboModel cmbInvoiceTypeModel;
    
    private EITLComboModel cmbOrderByModel = new EITLComboModel();

    private boolean InvFlag = false;
    private int STGCnt = 0;
    private int FLTCnt = 0;
    private int FFCnt = 0;

    String strProductCode = "";
    private JDialog aDialog;
    //DateFormat df =  new SimpleDateFormat("dd-MMM-yy");
    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
    HashMap hmPieceList = new HashMap();

    private clsExcelExporterEWB_New exp = new clsExcelExporterEWB_New();

    public void init() {
        initComponents();
        file1.setVisible(false);
        getDeptId();
        GenerateCombo();
        GenerateOrderCombo();
        FormatGrid();//780, 560
        setSize(790, 590);
        jLabel1.setForeground(Color.WHITE);
        txtFromDate.setText(EITLERPGLOBAL.formatDate(data.getStringValueFromDB("SELECT SUBDATE(CURDATE(),1) FROM DUAL")));
        txtToDate.setText(EITLERPGLOBAL.formatDate(data.getStringValueFromDB("SELECT SUBDATE(CURDATE(),1) FROM DUAL")));
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        Table_EWB = new javax.swing.JTable();
        btnShowEWB = new javax.swing.JButton();
        Export_EWB = new javax.swing.JButton();
        file1 = new javax.swing.JFileChooser();
        jLabel85 = new javax.swing.JLabel();
        cmbOrderBy = new javax.swing.JComboBox();
        btnSendMail = new javax.swing.JButton();
        CLR_BTN = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbInvoiceType = new javax.swing.JComboBox();

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setBackground(new java.awt.Color(0, 102, 153));
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 110, 780, 10);

        txtFromDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(170, 30, 110, 30);

        txtToDate = new JTextFieldHint(new JTextField(),"DD/MM/YYYY");
        txtToDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtToDateFocusLost(evt);
            }
        });
        getContentPane().add(txtToDate);
        txtToDate.setBounds(380, 30, 100, 30);

        jPanel10.setLayout(null);

        Table_EWB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_EWB.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table_EWB.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table_EWB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_EWBKeyPressed(evt);
            }
        });
        jScrollPane10.setViewportView(Table_EWB);

        jPanel10.add(jScrollPane10);
        jScrollPane10.setBounds(10, 50, 730, 330);

        btnShowEWB.setText("Show List");
        btnShowEWB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEWBActionPerformed(evt);
            }
        });
        jPanel10.add(btnShowEWB);
        btnShowEWB.setBounds(10, 10, 130, 30);

        Export_EWB.setText("EXPORT TO EXCEL");
        Export_EWB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_EWBActionPerformed(evt);
            }
        });
        jPanel10.add(Export_EWB);
        Export_EWB.setBounds(570, 10, 170, 25);

        file1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file1ActionPerformed(evt);
            }
        });
        jPanel10.add(file1);
        file1.setBounds(140, 50, 517, 380);

        jLabel85.setText("Order By");
        jPanel10.add(jLabel85);
        jLabel85.setBounds(180, 10, 70, 30);

        cmbOrderBy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOrderByItemStateChanged(evt);
            }
        });
        jPanel10.add(cmbOrderBy);
        cmbOrderBy.setBounds(250, 10, 150, 24);

        btnSendMail.setText("Send Mail");
        btnSendMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendMailActionPerformed(evt);
            }
        });
        jPanel10.add(btnSendMail);
        btnSendMail.setBounds(780, 10, 120, 25);

        jTabbedPane2.addTab("EWB", jPanel10);

        getContentPane().add(jTabbedPane2);
        jTabbedPane2.setBounds(10, 120, 770, 430);

        CLR_BTN.setText("Clear");
        CLR_BTN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CLR_BTN.setMargin(new java.awt.Insets(2, 7, 2, 7));
        CLR_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLR_BTNActionPerformed(evt);
            }
        });
        getContentPane().add(CLR_BTN);
        CLR_BTN.setBounds(540, 30, 80, 30);

        jLabel3.setText("Period : ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 30, 60, 20);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("From Date :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 30, 100, 20);

        jLabel5.setText("To Date :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(310, 30, 70, 20);

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("E-Way Bill Information System");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 2, 780, 25);

        jLabel6.setText("Type : ");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 70, 60, 20);

        cmbInvoiceType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbInvoiceTypeItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbInvoiceType);
        cmbInvoiceType.setBounds(80, 70, 180, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void file1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_file1ActionPerformed

    private void txtToDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToDateFocusGained

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void Table_EWBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_EWBKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Table_EWBKeyPressed

    private void btnShowEWBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEWBActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        FormatGrid();
        GenerateEWBData();
        InvFlag = true;
        STGCnt++;
        FLTCnt++;
        FFCnt++;
        txtFromDate.setEditable(false);
        txtToDate.setEditable(false);
    }//GEN-LAST:event_btnShowEWBActionPerformed

    private void Export_EWBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_EWBActionPerformed
        File file = null;
        file1.setVisible(true);
        try {
            int returnVal = file1.showOpenDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }

            exp.fillData(Table_EWB, file, "EWB");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file1.getSelectedFile().toString() + " successfully... ", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_Export_EWBActionPerformed

    private void CLR_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLR_BTNActionPerformed
        txtFromDate.setText("");
        txtToDate.setText("");
        txtFromDate.setText(EITLERPGLOBAL.formatDate(data.getStringValueFromDB("SELECT SUBDATE(CURDATE(),1) FROM DUAL")));
        txtToDate.setText(EITLERPGLOBAL.formatDate(data.getStringValueFromDB("SELECT SUBDATE(CURDATE(),1) FROM DUAL")));
        txtFromDate.setEditable(true);
        txtToDate.setEditable(true);
        InvFlag = false;
        GenerateCombo();
        GenerateOrderCombo();
        FormatGrid();
    }//GEN-LAST:event_CLR_BTNActionPerformed

    private void cmbInvoiceTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbInvoiceTypeItemStateChanged
        // TODO add your handling code here:
        if (InvFlag) {
            if (!Validate()) {
                return;
            }
            FormatGrid();
            ShowEWBData();
        }
    }//GEN-LAST:event_cmbInvoiceTypeItemStateChanged

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        // TODO add your handling code here:
//        if (txtFromDate.getText().trim().equals("")) {
//            JOptionPane.showMessageDialog(null, "Please Enter from Date");
//            txtFromDate.requestFocus();
//            txtFromDate.setText("");
//        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
//            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
//            txtFromDate.requestFocus();
//            txtFromDate.setText("");
//        } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "',CURDATE()) FROM DUAL") > 0) {
//            JOptionPane.showMessageDialog(null, "Please enter Current Date or Previous Date in Effective From Date");
//            txtFromDate.requestFocus();
//            txtFromDate.setText("");
//        }
    }//GEN-LAST:event_txtFromDateFocusLost

    private void txtToDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToDateFocusLost
        // TODO add your handling code here:
//        if (!txtFromDate.getText().trim().equals("") && EITLERPGLOBAL.isDate(txtFromDate.getText())) {
//            if (txtToDate.getText().trim().equals("")) {
//                JOptionPane.showMessageDialog(null, "Please Enter To Date");
//                txtToDate.requestFocus();
//                txtToDate.setText("");
//            } else if (!EITLERPGLOBAL.isDate(txtToDate.getText())) {
//                JOptionPane.showMessageDialog(null, "Invalid To Date in DD/MM/YYYY format.");
//                txtToDate.requestFocus();
//                txtToDate.setText("");
//            } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "',CURDATE()) FROM DUAL") > 0 || data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "','" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "') FROM DUAL") < 0) {
//                JOptionPane.showMessageDialog(null, "Please enter Greater Date than From Date and Less than or Equals Current Date in Effective To Date");
//                txtToDate.requestFocus();
//                txtToDate.setText("");
//            }
//        } else {
//            txtFromDate.requestFocus();
//        }
    }//GEN-LAST:event_txtToDateFocusLost

    private void cmbOrderByItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOrderByItemStateChanged
        // TODO add your handling code here:
        if (InvFlag) {
            if (!Validate()) {
                return;
            }
            FormatGrid();
            ShowEWBData();
        }
    }//GEN-LAST:event_cmbOrderByItemStateChanged

    private void btnSendMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendMailActionPerformed
        // TODO add your handling code here:
//        if (!Validate()) {
//            return;
//        }
//        
//        String FromDate = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
//        String ToDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
//        String locPath = "";
//        int InvoiceType = cmbInvoiceType.getSelectedIndex();
//
//        
//        try {
//            if (InvoiceType == 0) {
//                JOptionPane.showMessageDialog(null, "Select Type to Send E-Mail");
//            }
//            if (InvoiceType == 1 && STGCnt == 1) {
//                STGCnt++;
//                locPath = "D://STG_EWay_Data_" + FromDate + "_TO_" + ToDate + ".xls";
//                exp.fillData(Table_EWB, new File(locPath), "EWayData");
//                EWBMail.SendSuitingEWBMail(txtFromDate.getText().trim(), txtToDate.getText().trim(), locPath);
//                JOptionPane.showMessageDialog(null, "Data saved at 'D://STG_EWay_Data_" + FromDate + "_TO_" + ToDate + ".xls' successfully in Windows PC ", "Message", JOptionPane.INFORMATION_MESSAGE);
//            }
//            if (InvoiceType == 2 && FLTCnt == 1) {
//                FLTCnt++;
//                locPath = "D://FLT_EWay_Data_" + FromDate + "_TO_" + ToDate + ".xls";
//                exp.fillData(Table_EWB, new File(locPath), "EWayData");
//                EWBMail.SendFeltEWBMail(txtFromDate.getText().trim(), txtToDate.getText().trim(), locPath);
//                JOptionPane.showMessageDialog(null, "Data saved at 'D://FLT_EWay_Data_" + FromDate + "_TO_" + ToDate + ".xls' successfully in Windows PC ", "Message", JOptionPane.INFORMATION_MESSAGE);
//            }
//            if (InvoiceType == 3 && FFCnt == 1) {
//                FFCnt++;
//                locPath = "D://FF_EWay_Data_" + FromDate + "_TO_" + ToDate + ".xls";
//                exp.fillData(Table_EWB, new File(locPath), "EWayData");
//                EWBMail.SendFilterFabricEWBMail(txtFromDate.getText().trim(), txtToDate.getText().trim(), locPath);
//                JOptionPane.showMessageDialog(null, "Data saved at 'D://FF_EWay_Data_" + FromDate + "_TO_" + ToDate + ".xls' successfully in Windows PC ", "Message", JOptionPane.INFORMATION_MESSAGE);
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "E-Mail Sent.");
////            ex.printStackTrace();
//        }
    }//GEN-LAST:event_btnSendMailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLR_BTN;
    private javax.swing.JButton Export_EWB;
    private javax.swing.JTable Table_EWB;
    private javax.swing.JButton btnSendMail;
    private javax.swing.JButton btnShowEWB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbInvoiceType;
    private javax.swing.JComboBox cmbOrderBy;
    private javax.swing.JFileChooser file1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables

    private void GenerateCombo() {
        //--- Generate Type Combo ------//
        cmbInvoiceTypeModel = new EITLComboModel();

        cmbInvoiceType.removeAllItems();
        cmbInvoiceType.setModel(cmbInvoiceTypeModel);

        ComboData aData = new ComboData();
        aData.Code = 0;
        aData.Text = "All";
        cmbInvoiceTypeModel.addElement(aData);

        aData = new ComboData();
        aData.Code = 1;
        aData.Text = "Suiting";
        cmbInvoiceTypeModel.addElement(aData);

        aData = new ComboData();
        aData.Code = 2;
        aData.Text = "Felt";
        cmbInvoiceTypeModel.addElement(aData);

        aData = new ComboData();
        aData.Code = 3;
        aData.Text = "Filter Fabric";
        cmbInvoiceTypeModel.addElement(aData);

        //===============================//
    }
    
    private void GenerateOrderCombo() {
        //--- Generate Type Combo ------//
        cmbOrderByModel = new EITLComboModel();

        cmbOrderBy.removeAllItems();
        cmbOrderBy.setModel(cmbOrderByModel);

        ComboData aData = new ComboData();
        aData.Code = 0;
        aData.Text = "Select Order";
        cmbOrderByModel.addElement(aData);

        aData = new ComboData();
        aData.Code = 1;
        aData.Text = "Doc No";
        cmbOrderByModel.addElement(aData);

        aData = new ComboData();
        aData.Code = 2;
        aData.Text = "Doc Date";
        cmbOrderByModel.addElement(aData);

        aData = new ComboData();
        aData.Code = 3;
        aData.Text = "Party Code";
        cmbOrderByModel.addElement(aData);

        //===============================//
    }

    private boolean Validate() {
        //Form level validations
        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter from Date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            return false;
        }

        if (txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter To Date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid To Date in DD/MM/YYYY format.");
            return false;
        }

        return true;
    }

    private void FormatGrid() {
        try {
            DataModelEWB = new EITLTableModel();
            Table_EWB.removeAll();

            Table_EWB.setModel(DataModelEWB);
            Table_EWB.setAutoResizeMode(0);

            DataModelEWB.addColumn("SrNo");//0
            DataModelEWB.addColumn("Supply Type Code");///1
            DataModelEWB.addColumn("Reverse Charge");//2
            DataModelEWB.addColumn("e-Comm GSTIN");//3
            DataModelEWB.addColumn("Igst On Intra");//4
            DataModelEWB.addColumn("Document Type");//5
            DataModelEWB.addColumn("Document Number");//6
            DataModelEWB.addColumn("Document Date (DD/MM/YYYY)");//7
            DataModelEWB.addColumn("Buyer GSTIN");//8
            DataModelEWB.addColumn("Buyer Legal Name");//9
            DataModelEWB.addColumn("Buyer Trade Name");//10
            DataModelEWB.addColumn("Buyer POS");//11
            DataModelEWB.addColumn("Buyer Addr1");//12
            DataModelEWB.addColumn("Buyer Addr2");//13
            DataModelEWB.addColumn("Buyer Location");//14
            DataModelEWB.addColumn("Buyer Pin Code");//15
            DataModelEWB.addColumn("Buyer State");//16
            DataModelEWB.addColumn("Buyer Phone Number");//17
            DataModelEWB.addColumn("Buyer Email Id");//18
            DataModelEWB.addColumn("Dispatch Name");//19
            DataModelEWB.addColumn("Dispatch Addr1");//20
            DataModelEWB.addColumn("Dispatch Addr2");//21
            DataModelEWB.addColumn("Dispatch Location");//22
            DataModelEWB.addColumn("Dispatch Pin Code");//23
            DataModelEWB.addColumn("Dispatch State");//24
            DataModelEWB.addColumn("Shipping GSTIN");//25
            DataModelEWB.addColumn("Shipping Legal Name");//26
            DataModelEWB.addColumn("Shipping Trade Name");//27
            DataModelEWB.addColumn("Shipping Addr1");//28
            DataModelEWB.addColumn("Shipping Addr2");//29
            DataModelEWB.addColumn("Shipping Location");//30
            DataModelEWB.addColumn("Shipping Pin Code");//31
            DataModelEWB.addColumn("Shipping State");//32
            DataModelEWB.addColumn("Product Sl.No.");//33
            DataModelEWB.addColumn("Product Description");//34
            DataModelEWB.addColumn("Is_Service");//35
            DataModelEWB.addColumn("HSN code");//36
            DataModelEWB.addColumn("Bar code");//37
            DataModelEWB.addColumn("Quantity");//38
            DataModelEWB.addColumn("Free Quantity");//39
            DataModelEWB.addColumn("Unit");//40
            DataModelEWB.addColumn("Unit Price");//41
            DataModelEWB.addColumn("Gross Amount");//42
            DataModelEWB.addColumn("Discount");//43
            DataModelEWB.addColumn("Pre Tax Value");//44
            DataModelEWB.addColumn("Taxable value");//45
            DataModelEWB.addColumn("GST Rate (%)");//46
            DataModelEWB.addColumn("Sgst Amt(Rs)");//47
            DataModelEWB.addColumn("Cgst Amt (Rs)");//48
            DataModelEWB.addColumn("Igst Amt (Rs)");//49
            DataModelEWB.addColumn("Cess Rate (%)");//50
            DataModelEWB.addColumn("Cess Amt Adval (Rs)");//51
            DataModelEWB.addColumn("Cess Non Adval Amt (Rs)");//52
            DataModelEWB.addColumn("State Cess Rate (%)");//53
            DataModelEWB.addColumn("State Cess Adval Amt (Rs)");//54
            DataModelEWB.addColumn("State Cess Non-Adval Amt (Rs)");//55
            DataModelEWB.addColumn("Other Charges");//56
            DataModelEWB.addColumn("Item Total");//57
            DataModelEWB.addColumn("Batch Name");//58
            DataModelEWB.addColumn("Batch Expiry Dt");//59
            DataModelEWB.addColumn("Warranty Dt");//60
            DataModelEWB.addColumn("Total Taxable value");//61
            DataModelEWB.addColumn("Sgst Amt");//62
            DataModelEWB.addColumn("Cgst Amt");//63
            DataModelEWB.addColumn("Igst Amt");//64
            DataModelEWB.addColumn("Cess Amt");//65
            DataModelEWB.addColumn("State Cess Amt");//66
            DataModelEWB.addColumn("Discount");//67
            DataModelEWB.addColumn("Other charges");//68
            DataModelEWB.addColumn("Round off");//69
            DataModelEWB.addColumn("Total Invoice value");//70
            DataModelEWB.addColumn("Shipping Bill No");//71
            DataModelEWB.addColumn("Shipping Bill Dt");//72
            DataModelEWB.addColumn("Port");//73
            DataModelEWB.addColumn("Refund claim");//74
            DataModelEWB.addColumn("Foreign Currency");//75
            DataModelEWB.addColumn("Country Code");//76
            DataModelEWB.addColumn("Export Duty Amount");//77
            DataModelEWB.addColumn("Trans ID");//78
            DataModelEWB.addColumn("Trans Name");//79
            DataModelEWB.addColumn("Trans Mode");//80
            DataModelEWB.addColumn("Distance");//81
            DataModelEWB.addColumn("Trans Doc No.");//82
            DataModelEWB.addColumn("Trans Doc Date");//83
            DataModelEWB.addColumn("Vehicle No.");//84
            DataModelEWB.addColumn("Vehicle Type");//85
            DataModelEWB.addColumn("ERROR_LIST");//85
            

            DataModelEWB.SetVariable(0, "SR_N0");
            DataModelEWB.SetVariable(1,"SUPPLY_TYPE_CODE");//Supply Type Code
            DataModelEWB.SetVariable(2,"REVERSE_CHARGE");//Reverse Charge
            DataModelEWB.SetVariable(3,"E_COMM_GSTIN");//e-Comm GSTIN
            DataModelEWB.SetVariable(4,"IGST_ON_INTRA");//Igst On Intra
            DataModelEWB.SetVariable(5,"DOCUMENT_TYPE");//Document Type
            DataModelEWB.SetVariable(6,"DOCUMENT_NUMBER");//Document Number
            DataModelEWB.SetVariable(7,"DOCUMENT_DATE");//Document Date (DD/MM/YYYY)
            DataModelEWB.SetVariable(8,"BUYER_GSTIN");//Buyer GSTIN
            DataModelEWB.SetVariable(9,"BUYER_LEGAL_NAME");//Buyer Legal Name
            DataModelEWB.SetVariable(10,"BUYER_TRADE_NAME");//Buyer Trade Name
            DataModelEWB.SetVariable(11,"BUYER_POS");//Buyer POS
            DataModelEWB.SetVariable(12,"BUYER_ADDR1");//Buyer Addr1
            DataModelEWB.SetVariable(13,"BUYER_ADDR2");//Buyer Addr2
            DataModelEWB.SetVariable(14,"BUYER_LOCATION");//Buyer Location
            DataModelEWB.SetVariable(15,"BUYER_PINCODE");//Buyer Pin Code
            DataModelEWB.SetVariable(16,"BUYER_STATE");//Buyer State
            DataModelEWB.SetVariable(17,"BUYER_PHONE_NUMBER");//Buyer Phone Number
            DataModelEWB.SetVariable(18,"BUYER_EMAIL_ID");//Buyer Email Id
            DataModelEWB.SetVariable(19,"DISPATCH_NAME");//Dispatch Name
            DataModelEWB.SetVariable(20,"DISPATCH_ADDR1");//Dispatch Addr1
            DataModelEWB.SetVariable(21,"DISPATCH_ADDR2");//Dispatch Addr2
            DataModelEWB.SetVariable(22,"DISPATCH_LOCATION");//Dispatch Location
            DataModelEWB.SetVariable(23,"DISPATCH_PINCODE");//Dispatch Pin Code
            DataModelEWB.SetVariable(24,"DISPATCH_STATE");//Dispatch State
            DataModelEWB.SetVariable(25,"SHIPPING_GSTIN");//Shipping GSTIN
            DataModelEWB.SetVariable(26,"SHIPPING_LEGAL_NAME");//Shipping Legal Name
            DataModelEWB.SetVariable(27,"SHIPPING_TRADE_NAME");//Shipping Trade Name
            DataModelEWB.SetVariable(28,"SHIPPING_ADDR1");//Shipping Addr1
            DataModelEWB.SetVariable(29,"SHIPPING_ADDR2");//Shipping Addr2
            DataModelEWB.SetVariable(30,"SHIPPING_LOCATION");//Shipping Location
            DataModelEWB.SetVariable(31,"SHIPPING_PINCODE");//Shipping Pin Code
            DataModelEWB.SetVariable(32,"SHIPPING_STATE");//Shipping State
            DataModelEWB.SetVariable(33,"PRODUCT_SL_NO");//Product Sl.No.
            DataModelEWB.SetVariable(34,"PRODUCT_DESCRIPTION");//Product Description
            DataModelEWB.SetVariable(35,"IS_SERVICE");//Is_Service
            DataModelEWB.SetVariable(36,"HSN_CODE");//HSN code
            DataModelEWB.SetVariable(37,"BAR_CODE");//Bar code
            DataModelEWB.SetVariable(38,"QUANTITY");//Quantity
            DataModelEWB.SetVariable(39,"FREE_QUANTITY");//Free Quantity
            DataModelEWB.SetVariable(40,"PRODUCT_UNIT");//Unit
            DataModelEWB.SetVariable(41,"PRODUCT_UNIT_PRICE");//Unit Price
            DataModelEWB.SetVariable(42,"PRODUCT_GROSS_AMOUNT");//Gross Amount
            DataModelEWB.SetVariable(43,"PRODUCT_DISCOUNT");//Discount
            DataModelEWB.SetVariable(44,"PRODUCT_PRE_TAX_VALUE");//Pre Tax Value
            DataModelEWB.SetVariable(45,"PRODUCT_TAXABLE_VALUE");//Taxable value
            DataModelEWB.SetVariable(46,"PRODUCT_GST_RATE");//GST Rate (%)
            DataModelEWB.SetVariable(47,"PRODUCT_SGST_AMOUNT");//Sgst Amt(Rs)
            DataModelEWB.SetVariable(48,"PRODUCT_CGST_AMOUNT");//Cgst Amt (Rs)
            DataModelEWB.SetVariable(49,"PRODUCT_IGST_AMOUNT");//Igst Amt (Rs)
            DataModelEWB.SetVariable(50,"PRODUCT_CESS_RATE");//Cess Rate (%)
            DataModelEWB.SetVariable(51,"PRODUCT_CESS_AMOUNT_ADVAL");//Cess Amt Adval (Rs)
            DataModelEWB.SetVariable(52,"PRODUCT_CESS_NON_ADVAL_AMOUNT");//Cess Non Adval Amt (Rs)
            DataModelEWB.SetVariable(53,"STATE_CESS_RATE");//State Cess Rate (%)
            DataModelEWB.SetVariable(54,"STATE_CESS_ADVAL_AMOUNT");//State Cess Adval Amt (Rs)
            DataModelEWB.SetVariable(55,"STATE_CESS_NON_ADVAL_AMOUNT");//State Cess Non-Adval Amt (Rs)
            DataModelEWB.SetVariable(56,"OTHER_CHARGES");//Other Charges
            DataModelEWB.SetVariable(57,"ITEM_TOTAL");//Item Total
            DataModelEWB.SetVariable(58,"BATCH_NAME");//Batch Name
            DataModelEWB.SetVariable(59,"BATCH_EXPIRY_DATE");//Batch Expiry Dt
            DataModelEWB.SetVariable(60,"WARRANTY_DATE");//Warranty Dt
            DataModelEWB.SetVariable(61,"TOTAL_TAXABLE_VALUE");//Total Taxable value
            DataModelEWB.SetVariable(62,"SGST_AMOUNT");//Sgst Amt
            DataModelEWB.SetVariable(63,"CGST_AMOUNT");//Cgst Amt
            DataModelEWB.SetVariable(64,"IGST_AMOUNT");//Igst Amt
            DataModelEWB.SetVariable(65,"CESS_AMOUNT");//Cess Amt
            DataModelEWB.SetVariable(66,"STATE_CESS_AMOUNT");//State Cess Amt
            DataModelEWB.SetVariable(67,"DISCOUNT");//Discount
            DataModelEWB.SetVariable(68,"OTHER_CHARGES");//Other charges
            DataModelEWB.SetVariable(69,"ROUND_OFF");//Round off
            DataModelEWB.SetVariable(70,"TOTAL_INVOICE_VALUE");//Total Invoice value
            DataModelEWB.SetVariable(71,"SHIPPING_BILL_NO");//Shipping Bill No
            DataModelEWB.SetVariable(72,"SHIPPING_BILL_DATE");//Shipping Bill Dt
            DataModelEWB.SetVariable(73,"PORT");//Port
            DataModelEWB.SetVariable(74,"REFUND_CLAIM");//Refund claim
            DataModelEWB.SetVariable(75,"FOREIGN_CURRENCY");//Foreign Currency
            DataModelEWB.SetVariable(76,"COUNTRY_CODE");//Country Code
            DataModelEWB.SetVariable(77,"EXPORT_DUTY_AMOUNT");//Export Duty Amount
            DataModelEWB.SetVariable(78,"TRANS_ID");//Trans ID
            DataModelEWB.SetVariable(79,"TRANS_NAME");//Trans Name
            DataModelEWB.SetVariable(80,"TRANS_MODE");//Trans Mode
            DataModelEWB.SetVariable(81,"DISTANCE");//Distance
            DataModelEWB.SetVariable(82,"TRANS_DOC_NO");//Trans Doc No.
            DataModelEWB.SetVariable(83,"TRANS_DOC_DATE");//Trans Doc Date
            DataModelEWB.SetVariable(84,"VEHICLE_NO");//Vehicle No.
            DataModelEWB.SetVariable(85,"VEHICLE_TYPE");//Vehicle Type
            DataModelEWB.SetVariable(86, "ERROR_LIST");//ERROR_LIST

            for (int i = 0; i < 86; i++) {
                DataModelEWB.SetReadOnly(i);
            }

            for (int j = 0; j < 86; j++) {
                Table_EWB.getColumnModel().getColumn(j).setMinWidth(100);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void GenerateEWBData() {
        ProcessData();
        ShowEWBData();
    }

    public void ProcessData()
    {
        
        
        
    }
    
    private void ShowEWBData() {

        String FromDate = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
        String ToDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
        int InvoiceType = cmbInvoiceType.getSelectedIndex();
        int OrderBy = cmbOrderBy.getSelectedIndex();
        String orderBy = "";
        
        try {
            //String strSQL = "SELECT *,RIGHT(HSN_CODE,4) AS HSN,CASE WHEN CGST_AMT=0 THEN '0.00' ELSE CGST_PER END AS PER_CGST,CASE WHEN SGST_AMT=0 THEN '0.00' ELSE SGST_PER END AS PER_SGST,CASE WHEN IGST_AMT=0 THEN '0.00' ELSE IGST_PER END AS PER_IGST FROM FINANCE.D_SAL_GSTR_INVOICE WHERE INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND APPROVED=1 AND CANCELLED=0 ORDER BY INVOICE_DATE,INVOICE_NO "+ORDER_BY;
            String strSQL = "SELECT * ";
            strSQL += "FROM DINESHMILLS.D_SAL_EWAY_REPORT ";
            strSQL += "WHERE DOC_DATE>='" + FromDate + "' AND DOC_DATE <= '" + ToDate + "'  ";
            if (InvoiceType > 0) {
                strSQL += "AND INVOICE_TYPE=" + cmbInvoiceType.getSelectedIndex() + " ";
            }
            
            if (OrderBy == 0) {
                orderBy += " ORDER BY TRANSPORTER_ID,TRANSPORTER_NAME,DOC_DATE,DOC_NO ";
            }       
            if (OrderBy == 1) {
                orderBy += " ORDER BY DOC_NO ";
            }
            if (OrderBy == 2) {
                orderBy += " ORDER BY DOC_DATE ";
            }
            if (OrderBy == 3) {
                orderBy += " ORDER BY PARTY_CODE ";
            }

            strSQL += "AND APPROVED=1 AND CANCELLED=0 ";
            strSQL += " " +orderBy;

            ResultSet rs = data.getResult(strSQL);
            int cnt = 1;
            String pName = "";
            while (!rs.isAfterLast()) {

                Object[] rowData = new Object[87];

                rowData[0] = cnt++;
                
                rowData[1] = "B2B";//UtilFunctions.getString(rs, "SUPPLY_TYPE", "");//SUPPLY_TYPE_CODE", "");
                rowData[2] = "NO";//UtilFunctions.getString(rs, "", "");//REVERSE_CHARGE", "");
                rowData[3] = "";//UtilFunctions.getString(rs, "", "");//E_COMM_GSTIN", "");
                rowData[4] = "";//UtilFunctions.getString(rs, "", "");//IGST_ON_INTRA", "");
                rowData[5] = UtilFunctions.getString(rs, "DOC_TYPE", "");//DOCUMENT_TYPE", "");
                rowData[6] = UtilFunctions.getString(rs, "DOC_NO", "");//DOCUMENT_NUMBER", "");
                
                String DocDt = rs.getString("DOC_DATE");
                if (DocDt.equals("") || DocDt.equals("0000-00-00")) {
                    rowData[7] = "";//DOCUMENT_DATE", "");
                } else {
                    rowData[7] = df.format(rs.getDate("DOC_DATE"));//DOCUMENT_DATE", "");
                }
                
                rowData[8] = UtilFunctions.getString(rs, "TO_GSTIN", "");//BUYER_GSTIN", "");
                rowData[9] = UtilFunctions.getString(rs, "TO_OTHER_PARTY_NAME", "");//BUYER_LEGAL_NAME", "");
                rowData[10] = UtilFunctions.getString(rs, "TO_OTHER_PARTY_NAME", "");//BUYER_TRADE_NAME", "");
                rowData[11] = UtilFunctions.getString(rs, "TO_STATE", "");//BUYER_POS", "");
                rowData[12] = UtilFunctions.getString(rs, "TO_ADDRESS1", "");//BUYER_ADDR1", "");
                rowData[13] = UtilFunctions.getString(rs, "TO_ADDRESS2", "");//BUYER_ADDR2", "");
                rowData[14] = UtilFunctions.getString(rs, "TO_PLACE", "");//BUYER_LOCATION", "");
                rowData[15] = UtilFunctions.getString(rs, "TO_PINCODE", "");//BUYER_PINCODE", "");
                rowData[16] = UtilFunctions.getString(rs, "TO_STATE", "");//BUYER_STATE", "");
                rowData[17] = UtilFunctions.getString(rs, "", "");//BUYER_PHONE_NUMBER", "");
                rowData[18] = UtilFunctions.getString(rs, "", "");//BUYER_EMAIL_ID", "");
                rowData[19] = UtilFunctions.getString(rs, "FROM_OTHER_PARTY_NAME", "");//DISPATCH_NAME", "");
                rowData[20] = UtilFunctions.getString(rs, "FROM_ADDRESS1", "");//DISPATCH_ADDR1", "");
                rowData[21] = UtilFunctions.getString(rs, "FROM_ADDRESS2", "");//DISPATCH_ADDR2", "");
                rowData[22] = UtilFunctions.getString(rs, "FROM_PLACE", "");//DISPATCH_LOCATION", "");
                rowData[23] = UtilFunctions.getString(rs, "FROM_PINCODE", "");//DISPATCH_PINCODE", "");
                rowData[24] = UtilFunctions.getString(rs, "FROM_STATE", "");//DISPATCH_STATE", "");
                rowData[25] = UtilFunctions.getString(rs, "TO_GSTIN", "");//SHIPPING_GSTIN", "");
                rowData[26] = UtilFunctions.getString(rs, "TO_OTHER_PARTY_NAME", "");//SHIPPING_LEGAL_NAME", "");
                rowData[27] = UtilFunctions.getString(rs, "TO_OTHER_PARTY_NAME", "");//SHIPPING_TRADE_NAME", "");
                rowData[28] = UtilFunctions.getString(rs, "TO_ADDRESS1", "");//SHIPPING_ADDR1", "");
                rowData[29] = UtilFunctions.getString(rs, "TO_ADDRESS2", "");//SHIPPING_ADDR2", "");
                rowData[30] = UtilFunctions.getString(rs, "TO_PLACE", "");//SHIPPING_LOCATION", "");
                rowData[31] = UtilFunctions.getString(rs, "TO_PINCODE", "");//SHIPPING_PINCODE", "");
                rowData[32] = UtilFunctions.getString(rs, "TO_STATE", "");//SHIPPING_STATE", "");
                rowData[33] = "1";//UtilFunctions.getString(rs, "", "");//PRODUCT_SL_NO", "");
                rowData[34] = UtilFunctions.getString(rs, "DESCRIPTION", "");//PRODUCT_DESCRIPTION", "");
                rowData[35] = UtilFunctions.getString(rs, "NO", "");//IS_SERVICE", "");
                rowData[36] = UtilFunctions.getString(rs, "HSN", "");//HSN_CODE", "");
                rowData[37] = UtilFunctions.getString(rs, "", "");//BAR_CODE", "");
                rowData[38] = UtilFunctions.getString(rs, "QTY", "");//QUANTITY", "");
                rowData[39] = UtilFunctions.getString(rs, "", "");//FREE_QUANTITY", "");
                rowData[40] = UtilFunctions.getString(rs, "UNIT", "");//PRODUCT_UNIT", "");
                rowData[41] = UtilFunctions.getString(rs, "", "");//PRODUCT_UNIT_PRICE", "");
                rowData[42] = UtilFunctions.getString(rs, "ASSESSABLE_VALUE", "");//PRODUCT_GROSS_AMOUNT", "");
                rowData[43] = UtilFunctions.getString(rs, "", "");//PRODUCT_DISCOUNT", "");
                rowData[44] = UtilFunctions.getString(rs, "", "");//PRODUCT_PRE_TAX_VALUE", "");
                rowData[45] = UtilFunctions.getString(rs, "", "");//PRODUCT_TAXABLE_VALUE", "");
                rowData[46] = UtilFunctions.getString(rs, "TAX_RATE", "");//PRODUCT_GST_RATE", "");
                rowData[47] = UtilFunctions.getString(rs, "SGST_AMOUNT", "");//PRODUCT_SGST_AMOUNT", "");
                rowData[48] = UtilFunctions.getString(rs, "CGST_AMOUNT", "");//PRODUCT_CGST_AMOUNT", "");
                rowData[49] = UtilFunctions.getString(rs, "IGST_AMOUNT", "");//PRODUCT_IGST_AMOUNT", "");
                rowData[50] = UtilFunctions.getString(rs, "", "");//PRODUCT_CESS_RATE", "");
                rowData[51] = UtilFunctions.getString(rs, "CESS_AMOUNT", "");//PRODUCT_CESS_AMOUNT_ADVAL", "");
                rowData[52] = UtilFunctions.getString(rs, "", "");//PRODUCT_CESS_NON_ADVAL_AMOUNT", "");
                rowData[53] = UtilFunctions.getString(rs, "", "");//STATE_CESS_RATE", "");
                rowData[54] = UtilFunctions.getString(rs, "", "");//STATE_CESS_ADVAL_AMOUNT", "");
                rowData[55] = UtilFunctions.getString(rs, "", "");//STATE_CESS_NON_ADVAL_AMOUNT", "");
                rowData[56] = UtilFunctions.getString(rs, "", "");//OTHER_CHARGES", "");
                rowData[57] = UtilFunctions.getString(rs, "", "");//ITEM_TOTAL", "");
                rowData[58] = UtilFunctions.getString(rs, "", "");//BATCH_NAME", "");
                rowData[59] = UtilFunctions.getString(rs, "", "");//BATCH_EXPIRY_DATE", "");
                rowData[60] = UtilFunctions.getString(rs, "", "");//WARRANTY_DATE", "");
                rowData[61] = UtilFunctions.getString(rs, "", "");//TOTAL_TAXABLE_VALUE", "");
                rowData[62] = UtilFunctions.getString(rs, "SGST_AMOUNT", "");//SGST_AMOUNT", "");
                rowData[63] = UtilFunctions.getString(rs, "CGST_AMOUNT", "");//CGST_AMOUNT", "");
                rowData[64] = UtilFunctions.getString(rs, "IGST_AMOUNT", "");//IGST_AMOUNT", "");
                rowData[65] = UtilFunctions.getString(rs, "CESS_AMOUNT", "");//CESS_AMOUNT", "");
                rowData[66] = UtilFunctions.getString(rs, "CESS_AMOUNT", "");//STATE_CESS_AMOUNT", "");
                rowData[67] = UtilFunctions.getString(rs, "", "");//DISCOUNT", "");
                rowData[68] = UtilFunctions.getString(rs, "", "");//OTHER_CHARGES", "");
                rowData[69] = UtilFunctions.getString(rs, "", "");//ROUND_OFF", "");
                rowData[70] = UtilFunctions.getString(rs, "", "");//TOTAL_INVOICE_VALUE", "");
                rowData[71] = UtilFunctions.getString(rs, "", "");//SHIPPING_BILL_NO", "");
                rowData[72] = UtilFunctions.getString(rs, "", "");//SHIPPING_BILL_DATE", "");
                rowData[73] = UtilFunctions.getString(rs, "", "");//PORT", "");
                rowData[74] = UtilFunctions.getString(rs, "", "");//REFUND_CLAIM", "");
                rowData[75] = UtilFunctions.getString(rs, "", "");//FOREIGN_CURRENCY", "");
                rowData[76] = UtilFunctions.getString(rs, "", "");//COUNTRY_CODE", "");
                rowData[77] = UtilFunctions.getString(rs, "", "");//EXPORT_DUTY_AMOUNT", "");
                rowData[78] = UtilFunctions.getString(rs, "TRANSPORTER_ID", "");//TRANS_ID", "");
                rowData[79] = UtilFunctions.getString(rs, "TRANSPORTER_NAME", "");//TRANS_NAME", "");
                rowData[80] = UtilFunctions.getString(rs, "TRANS_MODE", "");//TRANS_MODE", "");
                rowData[81] = UtilFunctions.getString(rs, "DISTANCE_LEVEL_KM", "");//DISTANCE", "");
                rowData[82] = UtilFunctions.getString(rs, "TRANSPORTER_DOC_NO", "");//TRANS_DOC_NO", "");
                
                String TRANSPORTER_DATE = rs.getString("TRANSPORTER_DATE");
                if (TRANSPORTER_DATE.equals("") || TRANSPORTER_DATE.equals("0000-00-00")) {
                    rowData[83] = "";//TRANS_DOC_DATE", "");
                } else {
                    rowData[83] = df.format(rs.getDate("TRANSPORTER_DATE"));//TRANS_DOC_DATE", "");
                }
                
                rowData[84] = UtilFunctions.getString(rs, "VEHICLE_NO", "");//VEHICLE_NO", "");
                rowData[85] = UtilFunctions.getString(rs, "", "");//VEHICLE_TYPE", "");
                rowData[86] = UtilFunctions.getString(rs, "", "");//ERROR_LIST", "");
                
                DataModelEWB.addRow(rowData);
                rs.next();
            }
            rs.close();

        } catch (SQLException sqe) {
            sqe.printStackTrace();
        }
    }

   
    
    private void getDeptId() {
        if (EITLERPGLOBAL.gUserDeptID == 76 || EITLERPGLOBAL.gUserDeptID == 4 || EITLERPGLOBAL.gUserDeptID == 0) {
            btnSendMail.setVisible(true);
        } else {
            btnSendMail.setVisible(false);
        }
    }

}
