/*
 * EnterLotQty.java
 *
 * Created on May 12, 2004, 4:54 PM
 */

package EITLERP;

/**
 *
 * @author  nrpithva
 */
import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.*;
import EITLERP.Utils.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.sql.*;


public class frmChildSuppInfo extends javax.swing.JApplet {
    
    private EITLTableModel DataModel;
    
    public boolean Cancelled=true;
    public HashMap colSupp=new HashMap();
    public HashMap colCurrentSupp=new HashMap();
    private JDialog aDialog;
    private EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
    
    public String SuppCode="";
    
    public frmChildSuppInfo() {
        System.gc();
        initComponents();
    }
    
    /** Initializes the applet EnterLotQty */
    public void init() {
        initComponents();
        GenerateGrid();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdOK = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        
        getContentPane().setLayout(null);
        
        jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel1.setText("Specify Block condition for sister concerns");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 304, 15);
        
        jPanel4.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jPanel4);
        jPanel4.setBounds(6, 30, 662, 6);
        
        Table.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
        ));
        Table.setNextFocusableComponent(cmdOK);
        Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableKeyPressed(evt);
            }
        });
        
        jScrollPane1.setViewportView(Table);
        
        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 46, 378, 226);
        
        cmdOK.setText("OK");
        cmdOK.setNextFocusableComponent(cmdCancel);
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdOK);
        cmdOK.setBounds(418, 50, 80, 25);
        
        cmdCancel.setText("Cancel");
        cmdCancel.setNextFocusableComponent(cmdOK);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(418, 82, 79, 25);
        
    }//GEN-END:initComponents
    
    private void TableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TableKeyPressed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancelled=true;
        aDialog.dispose();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        // TODO add your handling code here:
        SetLot();
        Cancelled=false;
        aDialog.dispose();
    }//GEN-LAST:event_cmdOKActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        
        Table.removeAll();
        
        Table.setModel(DataModel);
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        DataModel.addColumn("Sr.");
        DataModel.addColumn("Supp Code");
        DataModel.addColumn("Supp Name");
        DataModel.addColumn("Blocked");
        
        DataModel.SetReadOnly(0);
        DataModel.SetReadOnly(1);
        DataModel.SetReadOnly(2);
        
        Renderer.setCustomComponent(3,"CheckBox");
        JCheckBox aCheckBox=new JCheckBox();
        aCheckBox.setBackground(Color.WHITE);
        Table.getColumnModel().getColumn(3).setCellEditor(new DefaultCellEditor(aCheckBox));
        Table.getColumnModel().getColumn(3).setCellRenderer(Renderer);
    }
    
    
    //Recurses through the hierarchy of classes
    //until it finds Frame
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    private void GenerateGrid() {
        //Generates Grid from the
        FormatGrid();
        
        ResultSet rsTmp=null;
        
        try {
            
            for(int i=1;i<=colCurrentSupp.size();i++) {
                clsSuppChilds objSupp=(clsSuppChilds)colCurrentSupp.get(Integer.toString(i));
                
                int SuppID=(int)objSupp.getAttribute("CHILD_SUPP_ID").getVal();
                String SuppCode=clsSupplier.getSupplierCode(EITLERPGLOBAL.gCompanyID,SuppID);
                
                Object[] rowData=new Object[4];
                rowData[0]=Integer.toString(i);
                rowData[1]=SuppCode;
                rowData[2]=clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,SuppCode);
                
                //Now get Block status of this supplier
                rsTmp=data.getResult("SELECT BLOCKED FROM D_COM_SUPP_MASTER WHERE SUPP_ID="+SuppID);
                rsTmp.first();
                
                if(rsTmp.getRow()>0) {
                    if(rsTmp.getString("BLOCKED").equals("Y")) {
                        rowData[3]=new Boolean(true);
                    }
                    else {
                        rowData[3]=new Boolean(false);
                    }
                }
                else {
                    rowData[3]=new Boolean(false);
                }
                
                DataModel.addRow(rowData);
            }
            
        }
        catch(Exception e) {
            
        }
    }
    
    private void SetLot() {
        int SuppID=0;
        String SuppCode="";
        
        colSupp.clear();
        for(int i=0;i<Table.getRowCount();i++) {
            clsSuppChilds objSupp=new clsSuppChilds();

            SuppCode=(String)Table.getValueAt(i, 1);
            SuppID=clsSupplier.getSupplierID(EITLERPGLOBAL.gCompanyID, SuppCode);

            boolean blocked=((Boolean)DataModel.getValueAt(i, 3)).booleanValue();
            
            objSupp.setAttribute("SUPP_ID",SuppID);
            objSupp.setAttribute("BLOCKED",blocked);
            
            colSupp.put(Integer.toString(colSupp.size()+1),objSupp);
        }
    }
    
    
    public boolean ShowList() {
        try {
            GenerateGrid();
            
            setSize(530 ,370);
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"Select MIR Items",true);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(false);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            aDialog.show();
        }
        catch(Exception e) {
        }
        return !Cancelled;
    }
    
    
    private void UpdateSrNo() {
        for(int i=0;i<Table.getRowCount();i++) {
            Table.setValueAt(Integer.toString(i+1),i,0);
        }
    }
    
}
