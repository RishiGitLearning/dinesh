/*
 * frmRptGRNInfo.java
 *
 * Created on April 16, 2008, 12:01 PM
 */

package EITLERP.Suitings;

/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;
import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;
import java.io.*;
import java.sql.ResultSet;
import javax.swing.JTable;
import java.io.File;
//import javax.swing.table.*



public class frmAgencyDetailReport extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    private EITLTableCellRenderer RowFormat=new EITLTableCellRenderer();
    private clsExcelExporter exp = new clsExcelExporter();
    EITLTableModel DataModel= new EITLTableModel();
  //  private TReportEngine objEngine=new TReportEngine();
    
    /** Initializes the applet frmRptGRNInfo */
    
    public void init() {
        setSize(500,430);
        initComponents();
        
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TResult = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtAgencyCode = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("AGENCY DETAIL REPORT");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(20, 10, 230, 15);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 490, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("From Date :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 60, 90, 20);

        txtFromDate.setColumns(10);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(110, 60, 90, 19);

        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(210, 60, 60, 20);

        txtToDate.setColumns(10);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(270, 60, 90, 20);

        jLabel1.setText("Period");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 40, 90, 15);

        jButton1.setText("Show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(240, 130, 140, 25);

        jScrollPane1.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        TResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TResult.getTableHeader().setFont(new Font("Plain", Font.BOLD, 12));
        jScrollPane1.setViewportView(TResult);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 160, 480, 200);

        jLabel4.setText("Agency Code :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 130, 90, 15);

        txtAgencyCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgencyCodeFocusLost(evt);
            }
        });
        txtAgencyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgencyCodeKeyPressed(evt);
            }
        });

        getContentPane().add(txtAgencyCode);
        txtAgencyCode.setBounds(120, 130, 90, 19);

        jButton2.setText("Excel To Export");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(130, 380, 140, 25);

        jButton3.setText("AgentWise Control Sheet");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(20, 90, 200, 25);

        jButton4.setText("MonthWise Control Sheet");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(230, 90, 200, 25);

    }//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DraftReportMonth();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          DraftReport();  
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         try{
            
           exp.fillData(TResult,new File("/root/Desktop/Agency_Report.xls"));
            //exp.fillData(TableI,new File("C://ProductionProcess.xls"));
            exp.fillData(TResult,new File("D://Agency_Report.xls"));
            JOptionPane.showMessageDialog(null, "Data saved at " +
            //"'C: \\ result.xls' successfully", "Message",
           "'/root/Desktop/Agency_Report.xls' successfully in Linux PC or 'D://Agency_Report.xls' successfully in Windows PC    ", "Message",
            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }
        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtAgencyCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgencyCodeFocusLost
         try{
            if(!txtAgencyCode.getText().equals("")){
                String strSQL="";
                ResultSet rsTmp;
                strSQL= "";
                strSQL+="SELECT AGENT_PREFIX FROM (SELECT * FROM (SELECT * FROM DINESHMILLS.D_SAL_AREA_MASTER ) AS AM  LEFT JOIN   (SELECT SUBSTRING(A.PARTY_CODE,1,2)  AS PARTY1,COUNT(QUALITY_NO) AS CNT1,SUM(TOTAL_NET_AMOUNT) AS AMT FROM DINESHMILLS.D_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE INVOICE_TYPE =1 AND A.APPROVED =1 AND A.CANCELLED =0 AND A.PARTY_CODE = B.PARTY_CODE  AND A.INVOICE_DATE >='2014-04-01' AND A.INVOICE_DATE <='2015-03-31' GROUP BY SUBSTRING(A.PARTY_CODE,1,2) ) AS A ON AM.AGENT_PREFIX = PARTY1 LEFT JOIN (SELECT SUBSTRING(PP,1,2) AS PARTY2,COUNT(DR) AS CNT2,SUM(DR) AS TOTAL FROM (SELECT A.VOUCHER_NO, MAX(SUB_ACCOUNT_CODE) AS PP,SUM(CASE WHEN EFFECT ='C' THEN AMOUNT END) AS CR,SUM(CASE WHEN EFFECT ='D' THEN AMOUNT END) AS  DR,SUM(COALESCE(CASE WHEN EFFECT ='D' AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRA,  COUNT(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRC,SUM(CASE WHEN EFFECT ='D'  AND MAIN_ACCOUNT_CODE NOT IN (303019,435046,435053)  THEN AMOUNT END) AS DRB FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B  WHERE A.VOUCHER_NO = B.VOUCHER_NO AND BOOK_CODE = 13   AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >='2014-04-01'  AND VOUCHER_DATE <='2015-03-31'  GROUP BY A.VOUCHER_NO) AS A  GROUP BY SUBSTRING(PP,1,2)  ) AS B  ON  AM.AGENT_PREFIX = PARTY2  ) AS MM  LEFT JOIN  (  SELECT SUBSTRING(PP3,1,2) AS PARTY3 , COUNT(DR3) AS CNT3,SUM(DR3) AS TOTAL3  FROM   (  SELECT A.VOUCHER_NO, MAX(SUB_ACCOUNT_CODE) AS PP3,  SUM(CASE WHEN EFFECT ='C' THEN AMOUNT END) AS CR3,  SUM(CASE WHEN EFFECT ='D'  THEN AMOUNT END) AS  DR3,  SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRA3,  COUNT(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRC3,  SUM(CASE WHEN EFFECT ='D'  AND MAIN_ACCOUNT_CODE NOT IN (303019,435046,435053)  THEN AMOUNT END) AS DRB3   FROM  FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B  WHERE A.VOUCHER_NO = B.VOUCHER_NO   AND BOOK_CODE = 15   AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >= '2014-04-01' AND VOUCHER_DATE <='2015-03-31'  GROUP BY A.VOUCHER_NO) AS A3 GROUP BY SUBSTRING(PP3,1,2)) AS C3 ON MM.AGENT_PREFIX = PARTY3 WHERE COALESCE(AMT,0)-COALESCE(TOTAL,0)-COALESCE(TOTAL3,0) != 0 AND AGENT_PREFIX="+txtAgencyCode.getText().trim()+" ORDER BY AGENT_PREFIX";
                rsTmp=data.getResult(strSQL);
                rsTmp.first();
                txtAgencyCode.setText(rsTmp.getString("AGENT_PREFIX"));
                
            }
        }
        catch(Exception e){
            // TODO add your handling code here:
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgencyCodeFocusLost

    private void txtAgencyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgencyCodeKeyPressed
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT AGENT_PREFIX,AREA_ID FROM (SELECT *   FROM   (SELECT * FROM DINESHMILLS.D_SAL_AREA_MASTER ) AS AM  LEFT JOIN   (SELECT SUBSTRING(A.PARTY_CODE,1,2)  AS PARTY1,COUNT(QUALITY_NO) AS CNT1,SUM(TOTAL_NET_AMOUNT) AS AMT FROM DINESHMILLS.D_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE INVOICE_TYPE =1 AND A.APPROVED =1 AND A.CANCELLED =0 AND A.PARTY_CODE = B.PARTY_CODE  AND A.INVOICE_DATE >='2014-04-01' AND A.INVOICE_DATE <='2015-03-31' GROUP BY SUBSTRING(A.PARTY_CODE,1,2) ) AS A ON AM.AGENT_PREFIX = PARTY1 LEFT JOIN (SELECT SUBSTRING(PP,1,2) AS PARTY2,COUNT(DR) AS CNT2,SUM(DR) AS TOTAL FROM (SELECT A.VOUCHER_NO, MAX(SUB_ACCOUNT_CODE) AS PP,SUM(CASE WHEN EFFECT ='C' THEN AMOUNT END) AS CR,SUM(CASE WHEN EFFECT ='D' THEN AMOUNT END) AS  DR,SUM(COALESCE(CASE WHEN EFFECT ='D' AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRA,  COUNT(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRC,SUM(CASE WHEN EFFECT ='D'  AND MAIN_ACCOUNT_CODE NOT IN (303019,435046,435053)  THEN AMOUNT END) AS DRB   FROM  FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B  WHERE A.VOUCHER_NO = B.VOUCHER_NO   AND BOOK_CODE = 13   AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >='2014-04-01'  AND VOUCHER_DATE <='2015-03-31'  GROUP BY A.VOUCHER_NO) AS A  GROUP BY SUBSTRING(PP,1,2)  ) AS B  ON  AM.AGENT_PREFIX = PARTY2  ) AS MM  LEFT JOIN  (  SELECT SUBSTRING(PP3,1,2) AS PARTY3 , COUNT(DR3) AS CNT3,SUM(DR3) AS TOTAL3  FROM   (  SELECT A.VOUCHER_NO, MAX(SUB_ACCOUNT_CODE) AS PP3,  SUM(CASE WHEN EFFECT ='C' THEN AMOUNT END) AS CR3,  SUM(CASE WHEN EFFECT ='D'  THEN AMOUNT END) AS  DR3,  SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRA3,  COUNT(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRC3,  SUM(CASE WHEN EFFECT ='D'  AND MAIN_ACCOUNT_CODE NOT IN (303019,435046,435053)  THEN AMOUNT END) AS DRB3   FROM  FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B  WHERE A.VOUCHER_NO = B.VOUCHER_NO   AND BOOK_CODE = 15   AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >= '2014-04-01' AND VOUCHER_DATE <='2015-03-31'  GROUP BY A.VOUCHER_NO) AS A3 GROUP BY SUBSTRING(PP3,1,2)) AS C3 ON MM.AGENT_PREFIX = PARTY3 WHERE COALESCE(AMT,0)-COALESCE(TOTAL,0)-COALESCE(TOTAL3,0) != 0 ORDER BY AGENT_PREFIX";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            //aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                txtAgencyCode.setText(aList.ReturnVal);
               
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgencyCodeKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
               formatGrid()  ;   // TODO add your handling code here:
               processAgency();
               PartyWiseDetail();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TResult;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAgencyCode;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
   
   
    private void processAgency(){
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            
            stmt.execute("DELETE  FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL1 (CND_ID,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_INVOICE_NO,CND_INVOICE_DATE,CND_EXT1,CND_WH_CD,CND_QLTY_IND,CND_GROSS_QTY,CND_NET_AMOUNT,CND_YEAR_MON_ID,CND_INVOICE_AMOUNT,CND_LINK_YEAR,CND_PERCENT,CND_EFFECT,CND_INTERVAL_CAPTION ) SELECT 33,'AGCOMM',210027,PARTY_CODE,INVOICE_NO,INVOICE_DATE,AGENT_SR_NO,WAREHOUSE_CODE,QUALITY_INDICATOR,TOTAL_GROSS_QTY, TOTAL_NET_AMOUNT,'AGCOMM1415',NET_AMOUNT,1415,3.50,'C','FROM 01/04/2015 TO 31/03/2015' FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE  INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'AND INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND CANCELLED=0 AND INVOICE_TYPE ='1' ORDER BY PARTY_CODE,INVOICE_NO");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL1 (CND_ID,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_GROSS_AMT,CND_YEAR_MON_ID,CND_NET_AMOUNT,CND_CN_AMT_GIVEN,CND_LINK_YEAR,CND_PERCENT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_INVOICE_NO ,CND_INVOICE_DATE,CND_EFFECT,CND_INTERVAL_CAPTION) SELECT 33,'AGCOMM',210027,MAX(SUB_ACCOUNT_CODE),SUM(CASE WHEN EFFECT ='D'  THEN AMOUNT END) ,'AGCOMM1415',SUM(CASE WHEN EFFECT ='D'  THEN AMOUNT END) ,SUM(CASE WHEN EFFECT ='D'  THEN AMOUNT END) ,1415,3.50,A.VOUCHER_NO, B.VOUCHER_DATE,A.VOUCHER_NO, B.VOUCHER_DATE,'D','FROM 01/04/2015 TO 31/03/2015' FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND BOOK_CODE = 13 AND B.CANCELLED =0 AND B.APPROVED =1 AND VOUCHER_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' GROUP BY A.VOUCHER_NO,B.VOUCHER_DATE");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_PERCENT =0 WHERE SUBSTRING(CND_SUB_ACCOUNT_CODE,3,2) =77  AND  CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_PERCENT =1.75 WHERE CND_SUB_ACCOUNT_CODE IN (317712,317707,307757)  AND CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'");
           
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_PERCENT =3.50 WHERE CND_SUB_ACCOUNT_CODE IN (417729,307753)  AND CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_PERCENT =3.50 WHERE CND_SUB_ACCOUNT_CODE IN (317722)  AND CND_GROSS_QTY <=200  AND CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'");
           
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_PERCENT =3.50 WHERE CND_SUB_ACCOUNT_CODE IN (307757)  AND CND_INVOICE_NO IN (5280,5281,5282,5285,5286,6449,6450) AND CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415' ");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_LC_OPENER = CONCAT(SUBSTRING(CND_SUB_ACCOUNT_CODE,1,2),'0000') WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'");
           
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_LC_OPENER = 150001  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'  AND CND_SUB_ACCOUNT_CODE = '150001'");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_LC_OPENER = 150002  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'  AND CND_SUB_ACCOUNT_CODE != '150001' AND CND_LC_OPENER = 150000");
            
            stmt.execute("DELETE  FROM  SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_LC_OPENER = 150002  AND CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'  AND CND_SUB_ACCOUNT_CODE != 150002");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_NO = CONCAT(CND_LC_OPENER,CND_YEAR_MON_ID)  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_LC_OPENER = 510000  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'  AND CND_SUB_ACCOUNT_CODE = '150001'");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_LINK_NO = CONCAT(CND_EXT1,'/',CND_LINK_YEAR)  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'");
                           
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CREDIT_AMOUNT = CND_PERCENT * CND_NET_AMOUNT/100  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'   AND CND_EFFECT ='C'");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_DEBIT_AMOUNT = CND_PERCENT * CND_GROSS_AMT/100  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'   AND CND_EFFECT ='D'");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CREDIT_AMOUNT = CND_PERCENT * CND_GROSS_AMT/100  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'   AND CND_EFFECT ='D'");
            
            stmt.execute("DELETE  FROM SALES.D_CREDIT_NOTE_DETAIL1  WHERE CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'  AND CND_LC_OPENER  IN (460000,230000)");
            
            stmt.execute("DELETE  FROM SALES.D_CREDIT_NOTE_HEADER1   WHERE CNH_TYPE = 'AGCOMM' AND CNH_YEAR_MON_ID ='AGCOMM1415'");
            
                        
            
           // stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER1 (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PERCENT,CNH_CN_AMT_GIVEN,CNH_DEBIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_GROSS_QTY,CNH_NET_AMT,CNH_GROSS_AMT,CNH_MAIN_CODE) SELECT CND_ID,CND_NO,CND_TYPE,435015,CND_LC_OPENER,3.50,SUM(CND_CREDIT_AMOUNT),SUM(CND_DEBIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,15,SUM(CND_GROSS_QTY),SUM(CND_NET_AMOUNT),SUM(CND_GROSS_AMT),'210027' FROM SALES.D_CREDIT_NOTE_DETAIL1  WHERE CND_INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'AND CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415'GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION");
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER1 (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PERCENT,CNH_CN_AMT_GIVEN,CNH_DEBIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_GROSS_QTY,CNH_NET_AMT,CNH_GROSS_AMT,CNH_MAIN_CODE) SELECT CND_ID,CND_NO,CND_TYPE,435015,CND_LC_OPENER,3.50,CASE WHEN(CND_EFFECT='C') THEN SUM(CND_CREDIT_AMOUNT-CND_DEBIT_AMOUNT) END,SUM(CND_DEBIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,15,SUM(CND_GROSS_QTY),SUM(CND_NET_AMOUNT-CND_CN_AMT_GIVEN) END,SUM(CND_GROSS_AMT),'210027' FROM SALES.D_CREDIT_NOTE_DETAIL1  WHERE CND_INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND CND_TYPE = 'AGCOMM' AND CND_YEAR_MON_ID ='AGCOMM1415' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION");
           
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_INVOICE_AMOUNT = CNH_NET_AMT - CNH_GROSS_AMT,CNH_CREDIT_AMOUNT = ROUND(CNH_CN_AMT_GIVEN- CNH_DEBIT_AMOUNT ,0) WHERE CNH_TYPE = 'AGCOMM' AND CNH_YEAR_MON_ID ='AGCOMM1415'");
    
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1,DINESHMILLS.D_SAL_PARTY_MASTER  SET CNH_CITY= CITY_ID,CNH_PARTY_NAME = PARTY_NAME   WHERE CNH_TYPE = 'AGCOMM' AND CNH_YEAR_MON_ID ='AGCOMM1415' AND PARTY_CODE = CNH_SUB_ACCOUNT_CODE");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1,FINANCE.D_FIN_GL  SET CNH_MAIN_ACCOUNT_NAME=  ACCOUNT_NAME   WHERE CNH_TYPE = 'AGCOMM' AND CNH_YEAR_MON_ID ='AGCOMM1415' AND MAIN_ACCOUNT_CODE = CNH_MAIN_ACCOUNT_CODE");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_EXT1 = ROUND((CNH_CREDIT_AMOUNT/112.36)*100,0) WHERE CNH_TYPE = 'AGCOMM' AND CNH_YEAR_MON_ID ='AGCOMM1415'  AND CNH_CREDIT_AMOUNT > 1000000");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_EXT2 = ROUND(CNH_CREDIT_AMOUNT - CNH_EXT1,0) WHERE CNH_TYPE = 'AGCOMM' AND CNH_YEAR_MON_ID ='AGCOMM1415'  AND CNH_CREDIT_AMOUNT > 1000000");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_EXT3 =CNH_EXT2 + CNH_EXT1 WHERE CNH_TYPE = 'AGCOMM' AND CNH_YEAR_MON_ID ='AGCOMM1415'  AND CNH_CREDIT_AMOUNT > 1000000");
           
            //PartyWiseDetail();
            
        }catch(SQLException e){e.printStackTrace();}
        
    }
   
   private void PartyWiseDetail() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("AGENT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_INVOICE_NO");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_GROSS_QTY");
            objReportData.AddColumn("CND_NET_AMOUNT");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_GROSS_QTY");
            objReportData.AddColumn("CNH_NET_AMT");
            objReportData.AddColumn("CNH_GROSS_AMT");
            objReportData.AddColumn("CNH_CN_AMT_GIVEN");
            objReportData.AddColumn("CNH_DEBIT_AMOUNT");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CNH_EXT1");
            objReportData.AddColumn("CNH_EXT2");
            objReportData.AddColumn("CND_EXT3");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("AGENT_CODE","");//0
            objOpeningRow.setValue("CNH_PARTY_NAME",""); //1
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE",""); //2
            objOpeningRow.setValue("CND_INVOICE_NO",""); //3
            objOpeningRow.setValue("CND_LINK_NO",""); //4
            objOpeningRow.setValue("CND_GROSS_QTY",""); //5
            objOpeningRow.setValue("CND_NET_AMOUNT",""); //6
            objOpeningRow.setValue("CND_PERCENT",""); //7
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");  //8
            objOpeningRow.setValue("CNH_GROSS_QTY",""); //9
            objOpeningRow.setValue("CNH_NET_AMT",""); //10
            objOpeningRow.setValue("CNH_GROSS_AMT",""); //11
            objOpeningRow.setValue("CNH_CN_AMT_GIVEN",""); //12
            objOpeningRow.setValue("CNH_DEBIT_AMOUNT",""); //13
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT",""); //14
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT",""); //15
            objOpeningRow.setValue("CND_INTERVAL_CAPTION",""); //16
            objOpeningRow.setValue("CNH_EXT1",""); //17
            objOpeningRow.setValue("CNH_EXT2",""); //18
            objOpeningRow.setValue("CND_EXT3",""); //19
          
           // String strSQL = "SELECT A.*,B.*,SUBSTRING(B.CND_SUB_ACCOUNT_CODE,1,2) AS AGENT_CODE FROM SALES.D_CREDIT_NOTE_HEADER1 A,SALES.D_CREDIT_NOTE_DETAIL1 B where B.CND_TYPE='AGCOMM' AND B.CND_INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.CND_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(B.CND_SUB_ACCOUNT_CODE,1,2)='47' AND B.CND_EFFECT!=' ' AND A.CNH_TYPE='AGCOMM' AND A.CNH_SUB_ACCOUNT_CODE='470000' AND B.CND_TYPE=A.CNH_TYPE ORDER BY B.CND_EFFECT,CND_SUB_ACCOUNT_CODE";
           // String strSQL = "SELECT A.*,B.*,SUBSTRING(B.CND_SUB_ACCOUNT_CODE,1,2) AS AGENT_CODE FROM SALES.D_CREDIT_NOTE_HEADER1 A,SALES.D_CREDIT_NOTE_DETAIL1 B where B.CND_TYPE='AGCOMM' AND B.CND_INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.CND_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(B.CND_SUB_ACCOUNT_CODE,1,2)='"+txtAgencyCode.getText()+"' AND B.CND_EFFECT!=' ' AND A.CNH_TYPE='AGCOMM' AND A.CNH_SUB_ACCOUNT_CODE='"+txtAgencyCode.getText()+"0000' AND B.CND_TYPE=A.CNH_TYPE ORDER BY B.CND_EFFECT,CND_SUB_ACCOUNT_CODE";
            
            String strSQL = "SELECT A.*,B.*,SUBSTRING(B.CND_SUB_ACCOUNT_CODE,1,2) AS AGENT_CODE FROM SALES.D_CREDIT_NOTE_HEADER1 A,SALES.D_CREDIT_NOTE_DETAIL1 B where B.CND_TYPE='AGCOMM' AND B.CND_INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND B.CND_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(B.CND_SUB_ACCOUNT_CODE,1,2)='"+txtAgencyCode.getText()+"' AND B.CND_EFFECT!=' ' AND A.CNH_TYPE='AGCOMM' AND B.CND_TYPE=A.CNH_TYPE AND B.CND_YEAR_MON_ID = A.CNH_YEAR_MON_ID  AND A.CNH_SUB_ACCOUNT_CODE='"+txtAgencyCode.getText()+"0000'  ORDER BY B.CND_EFFECT,CND_SUB_ACCOUNT_CODE";
            
            System.out.println(strSQL);
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    Object[] rowData=new Object[21];
                    
                    objRow.setValue("AGENT_CODE",UtilFunctions.getString(rsTmp,"AGENT_CODE",""));
                    rowData[0]=UtilFunctions.getString(rsTmp,"AGENT_CODE","");
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    rowData[1]=UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME","");
                    objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                    rowData[2]=UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE","");
                    objRow.setValue("CND_INVOICE_NO",UtilFunctions.getString(rsTmp,"CND_INVOICE_NO",""));
                    rowData[3]=UtilFunctions.getString(rsTmp,"CND_INVOICE_NO","");
                    objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                    rowData[4]=UtilFunctions.getString(rsTmp,"CND_LINK_NO","");
                    objRow.setValue("CND_GROSS_QTY",UtilFunctions.getString(rsTmp,"CND_GROSS_QTY",""));
                    rowData[5]=UtilFunctions.getString(rsTmp,"CND_GROSS_QTY","");
                    objRow.setValue("CND_NET_AMOUNT",UtilFunctions.getString(rsTmp,"CND_NET_AMOUNT",""));
                    rowData[6]=UtilFunctions.getString(rsTmp,"CND_NET_AMOUNT","");
                    objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                    rowData[7]=UtilFunctions.getString(rsTmp,"CND_PERCENT","");
                    objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                    rowData[8]=UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT","");
                    objRow.setValue("CNH_GROSS_QTY",UtilFunctions.getString(rsTmp,"CNH_GROSS_QTY",""));
                    rowData[9]=UtilFunctions.getString(rsTmp,"CNH_GROSS_QTY","");
                    objRow.setValue("CNH_NET_AMT",UtilFunctions.getString(rsTmp,"CNH_NET_AMT",""));
                    rowData[10]=UtilFunctions.getString(rsTmp,"CNH_NET_AMT","");
                    objRow.setValue("CNH_GROSS_AMT",UtilFunctions.getString(rsTmp,"CNH_GROSS_AMT",""));
                    rowData[11]=UtilFunctions.getString(rsTmp,"CNH_GROSS_AMT","");
                    objRow.setValue("CNH_CN_AMT_GIVEN",UtilFunctions.getString(rsTmp,"CNH_CN_AMT_GIVEN",""));
                    rowData[12]=UtilFunctions.getString(rsTmp,"CNH_CN_AMT_GIVEN","");
                    objRow.setValue("CNH_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_DEBIT_AMOUNT",""));
                    rowData[13]=UtilFunctions.getString(rsTmp,"CNH_DEBIT_AMOUNT","");
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    rowData[14]=UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT","");
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    rowData[15]=UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT","");
                    objRow.setValue("CNH_EXT1",UtilFunctions.getString(rsTmp,"CNH_EXT1",""));
                    rowData[16]=UtilFunctions.getString(rsTmp,"CNH_EXT1","");
                    objRow.setValue("CNH_EXT2",UtilFunctions.getString(rsTmp,"CNH_EXT2",""));
                    rowData[17]=UtilFunctions.getString(rsTmp,"CNH_EXT2","");
                    objRow.setValue("CNH_EXT3",UtilFunctions.getString(rsTmp,"CNH_EXT3",""));
                    rowData[18]=UtilFunctions.getString(rsTmp,"CNH_EXT3","");
                    objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                    rowData[19]=UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION","");
                    objReportData.AddRow(objRow);
                    
                   // objReportData.AddRow(objRow);
                    DataModel.addRow(rowData);
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            Parameters.put("CND_SUB_ACCOUNT_CODE",txtAgencyCode.getText().toString());
           // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptAgcomm.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
   
    private void formatGrid() {
        try {
           // objRow=objReportData.newRow();
            DataModel=new EITLTableModel();
            TResult.removeAll();
            TResult.setModel(DataModel);
            TResult.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Agency Code");//0
            DataModel.addColumn("Party Name"); //1   
            DataModel.addColumn("Party Code");//2
            DataModel.addColumn("Invoice No");//3
            DataModel.addColumn("Link No");//4
            DataModel.addColumn("Gross Qty");//5
            DataModel.addColumn("Net Amount");//6
            DataModel.addColumn("Percentage");//7
            DataModel.addColumn("Credit Amount");//8
            DataModel.addColumn("Gross Qty");//9
            DataModel.addColumn("Net Amount");//10
            DataModel.addColumn("Gross Amount");//11
            DataModel.addColumn("Cn Amount Given");//12
            DataModel.addColumn("Debit Amount");//13
            DataModel.addColumn("Invoice Amount");//14
            DataModel.addColumn("Credit Amount");//15
            DataModel.addColumn("C/N");//13
            DataModel.addColumn("S.Tax");//14
            DataModel.addColumn("Credit Note");//15
            DataModel.addColumn("Interval Caption");//16
            
            RowFormat =new EITLTableCellRenderer();
            
            for(int j=0;j<TResult.getColumnCount();j++) {
                TResult.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
        }
        catch(Exception e) {
            
        }
                
    }
 
     private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        } 
        return true;
    }

      private void DraftReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("AGENT_PREFIX");
            objReportData.AddColumn("ZONE_ID");
            objReportData.AddColumn("AREA_ID");
            objReportData.AddColumn("AREA_NAME");
            objReportData.AddColumn("CNT1");
            objReportData.AddColumn("AMT");
            objReportData.AddColumn("CNT2");
            objReportData.AddColumn("TOTAL");
            objReportData.AddColumn("(COALESCE(AMT,0) - COALESCE(TOTAL,0))");
            objReportData.AddColumn("CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END");
            objReportData.AddColumn("EFF1");
            objReportData.AddColumn("EFFAMT");
            objReportData.AddColumn("COALESCE(CNT3,0)+COALESCE(CNT2,0)");
            objReportData.AddColumn("TT");
            objReportData.AddColumn("NOW()");
           
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("AGENT_PREFIX","");
            objOpeningRow.setValue("ZONE_ID","");
            objOpeningRow.setValue("AREA_ID","");
            objOpeningRow.setValue("AREA_NAME","");
            objOpeningRow.setValue("CNT1","");
            objOpeningRow.setValue("AMT","");
            objOpeningRow.setValue("CNT2","");
            objOpeningRow.setValue("TOTAL","");
            objOpeningRow.setValue("(COALESCE(AMT,0) - COALESCE(TOTAL,0))","");
            objOpeningRow.setValue("CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END","");
            objOpeningRow.setValue("EFF1","");
            objOpeningRow.setValue("EFFAMT","");
            objOpeningRow.setValue("COALESCE(CNT3,0)+COALESCE(CNT2,0)","");
            objOpeningRow.setValue("TT","");
            objOpeningRow.setValue("NOW()","");
           
            
            String strSQL = "SELECT AGENT_PREFIX,ZONE_ID,AREA_ID,AREA_NAME,CNT1,AMT,CNT2,TOTAL,(COALESCE(AMT,0) - COALESCE(TOTAL,0)),CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END,CNT3 AS EFF1,TOTAL3 AS EFFAMT,COALESCE(CNT3,0)+COALESCE(CNT2,0),COALESCE(TOTAL3,0)+COALESCE(TOTAL,0) AS TT, NOW() FROM     (SELECT *   FROM   (SELECT * FROM DINESHMILLS.D_SAL_AREA_MASTER ) AS AM  LEFT JOIN   (SELECT SUBSTRING(A.PARTY_CODE,1,2)  AS PARTY1,COUNT(QUALITY_NO) AS CNT1,SUM(TOTAL_NET_AMOUNT) AS AMT FROM DINESHMILLS.D_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE INVOICE_TYPE =1 AND A.APPROVED =1 AND A.CANCELLED =0 AND A.PARTY_CODE = B.PARTY_CODE  AND A.INVOICE_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' GROUP BY SUBSTRING(A.PARTY_CODE,1,2) ) AS A ON AM.AGENT_PREFIX = PARTY1 LEFT JOIN (SELECT SUBSTRING(PP,1,2) AS PARTY2,COUNT(DR) AS CNT2,SUM(DR) AS TOTAL FROM (SELECT A.VOUCHER_NO, MAX(SUB_ACCOUNT_CODE) AS PP,SUM(CASE WHEN EFFECT ='C' THEN AMOUNT END) AS CR,SUM(CASE WHEN EFFECT ='D' THEN AMOUNT END) AS  DR,SUM(COALESCE(CASE WHEN EFFECT ='D' AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRA,  COUNT(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRC,SUM(CASE WHEN EFFECT ='D'  AND MAIN_ACCOUNT_CODE NOT IN (303019,435046,435053)  THEN AMOUNT END) AS DRB   FROM  FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B  WHERE A.VOUCHER_NO = B.VOUCHER_NO   AND BOOK_CODE = 13   AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  GROUP BY A.VOUCHER_NO) AS A  GROUP BY SUBSTRING(PP,1,2)  ) AS B  ON  AM.AGENT_PREFIX = PARTY2  ) AS MM  LEFT JOIN  (  SELECT SUBSTRING(PP3,1,2) AS PARTY3 , COUNT(DR3) AS CNT3,SUM(DR3) AS TOTAL3  FROM   (  SELECT A.VOUCHER_NO, MAX(SUB_ACCOUNT_CODE) AS PP3,  SUM(CASE WHEN EFFECT ='C' THEN AMOUNT END) AS CR3,  SUM(CASE WHEN EFFECT ='D'  THEN AMOUNT END) AS  DR3,  SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRA3,  COUNT(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRC3,  SUM(CASE WHEN EFFECT ='D'  AND MAIN_ACCOUNT_CODE NOT IN (303019,435046,435053)  THEN AMOUNT END) AS DRB3   FROM  FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B  WHERE A.VOUCHER_NO = B.VOUCHER_NO   AND BOOK_CODE = 15   AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  GROUP BY A.VOUCHER_NO) AS A3 GROUP BY SUBSTRING(PP3,1,2)) AS C3 ON MM.AGENT_PREFIX = PARTY3 WHERE COALESCE(AMT,0)-COALESCE(TOTAL,0)-COALESCE(TOTAL3,0) != 0 ORDER BY AGENT_PREFIX ";
            System.out.println(strSQL);
            
           
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("AGENT_PREFIX",UtilFunctions.getString(rsTmp,"AGENT_PREFIX",""));
                    objRow.setValue("ZONE_ID",UtilFunctions.getString(rsTmp,"ZONE_ID",""));
                    objRow.setValue("AREA_ID",UtilFunctions.getString(rsTmp,"AREA_ID",""));
                    objRow.setValue("AREA_NAME",UtilFunctions.getString(rsTmp,"AREA_NAME",""));
                    objRow.setValue("CNT1",UtilFunctions.getString(rsTmp,"CNT1",""));
                    objRow.setValue("AMT",UtilFunctions.getString(rsTmp,"AMT",""));
                    objRow.setValue("CNT2",UtilFunctions.getString(rsTmp,"CNT2",""));
                    objRow.setValue("TOTAL",UtilFunctions.getString(rsTmp,"TOTAL",""));
                    objRow.setValue("(COALESCE(AMT,0) - COALESCE(TOTAL,0))",UtilFunctions.getString(rsTmp,"(COALESCE(AMT,0) - COALESCE(TOTAL,0))",""));
                    objRow.setValue("CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END",UtilFunctions.getString(rsTmp,"CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END",""));
                    objRow.setValue("EFF1",UtilFunctions.getString(rsTmp,"EFF1",""));
                    objRow.setValue("EFFAMT",UtilFunctions.getString(rsTmp,"EFFAMT",""));
                    objRow.setValue("COALESCE(CNT3,0)+COALESCE(CNT2,0)",UtilFunctions.getString(rsTmp,"COALESCE(CNT3,0)+COALESCE(CNT2,0)",""));
                    objRow.setValue("TT",UtilFunctions.getString(rsTmp,"TT",""));
                    objRow.setValue("NOW()",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"NOW()","")));
                   
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptAgentCommission.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
     private void DraftReportMonth() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("YYYY1");
            objReportData.AddColumn("MON1");
            objReportData.AddColumn("CNT1");
            objReportData.AddColumn("AMT");
            objReportData.AddColumn("CNT2");
            objReportData.AddColumn("TOTAL");
            objReportData.AddColumn("(COALESCE(AMT,0) - COALESCE(TOTAL,0))");
            objReportData.AddColumn("CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END");
            objReportData.AddColumn("EFF1");
            objReportData.AddColumn("EFFAMT");
            objReportData.AddColumn("COALESCE(CNT3,0)+COALESCE(CNT2,0)");
            objReportData.AddColumn("TT");
            objReportData.AddColumn("NOW()");
           
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("YYYY1","");
            objOpeningRow.setValue("MON1","");
            objOpeningRow.setValue("CNT1","");
            objOpeningRow.setValue("AMT","");
            objOpeningRow.setValue("CNT2","");
            objOpeningRow.setValue("TOTAL","");
            objOpeningRow.setValue("(COALESCE(AMT,0) - COALESCE(TOTAL,0))","");
            objOpeningRow.setValue("CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END","");
            objOpeningRow.setValue("EFF1","");
            objOpeningRow.setValue("EFFAMT","");
            objOpeningRow.setValue("COALESCE(CNT3,0)+COALESCE(CNT2,0)","");
            objOpeningRow.setValue("TT","");
            objOpeningRow.setValue("NOW()","");
           
            
            String strSQL = "SELECT YYYY1, MON1,CNT1,AMT,CNT2,TOTAL  ,(COALESCE(AMT,0) - COALESCE(TOTAL,0)),  CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END  , CNT3 AS EFF1,TOTAL3 AS EFFAMT,COALESCE(CNT3,0)+COALESCE(CNT2,0),COALESCE(TOTAL3,0)+COALESCE(TOTAL,0) AS TT, NOW() FROM   (SELECT * FROM    (SELECT EXTRACT(MONTH FROM INVOICE_DATE) AS MON1,EXTRACT(YEAR FROM INVOICE_DATE) AS YYYY1 ,COUNT(QUALITY_NO) AS CNT1,SUM(TOTAL_NET_AMOUNT) AS AMT   FROM DINESHMILLS.D_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_PARTY_MASTER B   WHERE INVOICE_TYPE =1 AND A.APPROVED =1 AND A.CANCELLED =0   AND A.PARTY_CODE = B.PARTY_CODE  AND A.INVOICE_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.INVOICE_DATE <='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  GROUP BY  EXTRACT(MONTH FROM INVOICE_DATE),EXTRACT(YEAR FROM INVOICE_DATE) ) AS A  LEFT JOIN  (SELECT MON2 ,YYYY2, COUNT(DRC) AS CNT2,SUM(DR) AS TOTAL  FROM   (  SELECT A.VOUCHER_NO, EXTRACT(MONTH FROM VOUCHER_DATE) AS MON2,EXTRACT(YEAR FROM VOUCHER_DATE) AS YYYY2,  SUM(CASE WHEN EFFECT ='C' THEN AMOUNT END) AS CR,  SUM(CASE WHEN EFFECT ='D'  THEN AMOUNT END) AS  DR,  SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRA,  COUNT(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRC,  SUM(COALESCE(CASE WHEN EFFECT ='D'  AND MAIN_ACCOUNT_CODE NOT IN (303019,435046,435053)  THEN AMOUNT END,0)) AS DRB   FROM  FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B  WHERE A.VOUCHER_NO = B.VOUCHER_NO   AND BOOK_CODE = 13   AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  GROUP BY A.VOUCHER_NO, EXTRACT(MONTH FROM VOUCHER_DATE) ,EXTRACT(YEAR FROM VOUCHER_DATE)   ) AS A  GROUP BY MON2 ,YYYY2  ) AS B  ON A.MON1 = B.MON2 AND YYYY1 =YYYY2) AS MM  LEFT JOIN  (SELECT MON3 ,YYYY3, COUNT(DRC3) AS CNT3,SUM(DR3) AS TOTAL3  FROM   (  SELECT A.VOUCHER_NO, EXTRACT(MONTH FROM VOUCHER_DATE) AS MON3,EXTRACT(YEAR FROM VOUCHER_DATE) AS YYYY3,  SUM(CASE WHEN EFFECT ='C' THEN AMOUNT END) AS CR3,  SUM(CASE WHEN EFFECT ='D'  THEN AMOUNT END) AS  DR3,  SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRA3,  COUNT(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) AS DRC3,  SUM(COALESCE(CASE WHEN EFFECT ='D'  AND MAIN_ACCOUNT_CODE NOT IN (303019,435046,435053)  THEN AMOUNT END,0)) AS DRB3   FROM  FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B  WHERE A.VOUCHER_NO = B.VOUCHER_NO   AND BOOK_CODE = 15   AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  GROUP BY A.VOUCHER_NO, EXTRACT(MONTH FROM VOUCHER_DATE) ,EXTRACT(YEAR FROM VOUCHER_DATE)   ) AS A3  GROUP BY MON3 ,YYYY3  ) AS C  ON MM.MON1 = C.MON3 AND MM.YYYY1 =YYYY3 ORDER BY YYYY1,MON1";
            System.out.println(strSQL);
            
           
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("YYYY1",UtilFunctions.getString(rsTmp,"YYYY1",""));
                    objRow.setValue("MON1",UtilFunctions.getString(rsTmp,"MON1",""));
                    objRow.setValue("CNT1",UtilFunctions.getString(rsTmp,"CNT1",""));
                    objRow.setValue("AMT",UtilFunctions.getString(rsTmp,"AMT",""));
                    objRow.setValue("CNT2",UtilFunctions.getString(rsTmp,"CNT2",""));
                    objRow.setValue("TOTAL",UtilFunctions.getString(rsTmp,"TOTAL",""));
                    objRow.setValue("(COALESCE(AMT,0) - COALESCE(TOTAL,0))",UtilFunctions.getString(rsTmp,"(COALESCE(AMT,0) - COALESCE(TOTAL,0))",""));
                    objRow.setValue("CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END",UtilFunctions.getString(rsTmp,"CASE WHEN (COALESCE(AMT,0) - COALESCE(TOTAL,0))  >=0 THEN 'DR' ELSE 'CR'  END",""));
                    objRow.setValue("EFF1",UtilFunctions.getString(rsTmp,"EFF1",""));
                    objRow.setValue("EFFAMT",UtilFunctions.getString(rsTmp,"EFFAMT",""));
                    objRow.setValue("COALESCE(CNT3,0)+COALESCE(CNT2,0)",UtilFunctions.getString(rsTmp,"COALESCE(CNT3,0)+COALESCE(CNT2,0)",""));
                    objRow.setValue("TT",UtilFunctions.getString(rsTmp,"TT",""));
                    objRow.setValue("NOW()",EITLERPGLOBAL.formatDateDB(UtilFunctions.getString(rsTmp,"NOW()","")));
                   
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
           // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptAgentCommissionYearly.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
     
     
}
