/*
 * frmABDReport.java
 *
 * Created on December 20, 2013, 12:14 PM
 */

package EITLERP.Suitings;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import java.sql.*;

import EITLERP.EITLERPGLOBAL;
import EITLERP.data;
import EITLERP.clsUser;
import EITLERP.*;
/**
 *
 * @author  Vivek Kumar
 */
public class frmABDReport extends javax.swing.JApplet {
    
    
    private EITLComboModel cmbSeasonModel=new EITLComboModel();    
    /** Initializes the applet frmABDReport */
    public void init() {
        initComponents();
        GenerateCombo();
        setSize(660, 500);
        cmdQualityIdWise.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        cmdOrderNoWise = new javax.swing.JButton();
        cmdQualityIdWise = new javax.swing.JButton();
        cmdOrderNoWise1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        lblABDDiscountPercentReport = new javax.swing.JLabel();
        cmbSeason = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cmdABDReport = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cmdShowS1506082015 = new javax.swing.JButton();
        cmdS15MaheshTextile = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        cmdOrderNoWise2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cmdOrderNoWise3 = new javax.swing.JButton();
        cmdOrderNoWise4 = new javax.swing.JButton();
        cmdOrderNoWise5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("SUITINGS SALES ABD SCHEME - S14,W14 REPORT");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 650, 25);

        lblStatus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(0, 51, 255));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(20, 390, 450, 20);

        cmdOrderNoWise.setText("Order Detail up to 08/08/15");
        cmdOrderNoWise.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdOrderNoWise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOrderNoWiseActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOrderNoWise);
        cmdOrderNoWise.setBounds(10, 250, 190, 23);

        cmdQualityIdWise.setText("abvfreww");
        cmdQualityIdWise.setBorderPainted(false);
        cmdQualityIdWise.setContentAreaFilled(false);
        cmdQualityIdWise.setDefaultCapable(false);
        cmdQualityIdWise.setFocusPainted(false);
        cmdQualityIdWise.setFocusable(false);
        cmdQualityIdWise.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdQualityIdWise.setRequestFocusEnabled(false);
        cmdQualityIdWise.setRolloverEnabled(false);
        cmdQualityIdWise.setVerifyInputWhenFocusTarget(false);
        cmdQualityIdWise.setEnabled(false);
        cmdQualityIdWise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdQualityIdWiseActionPerformed(evt);
            }
        });
        getContentPane().add(cmdQualityIdWise);
        cmdQualityIdWise.setBounds(360, 80, 100, 25);

        cmdOrderNoWise1.setText("Order Detail up to 15/08/15");
        cmdOrderNoWise1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdOrderNoWise1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOrderNoWise1ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOrderNoWise1);
        cmdOrderNoWise1.setBounds(230, 250, 190, 23);

        jButton1.setText("ABD Discount % Report");
        jButton1.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(360, 100, 100, 23);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 130, 0, 0);

        jButton2.setText("Order Detail up to 16/08/2014");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(20, 430, 230, 23);

        jLabel2.setBackground(new java.awt.Color(153, 204, 255));
        jLabel2.setText("W15");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 220, 40, 20);

        jLabel3.setText("W14\n");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 370, 40, 20);

        jButton3.setText("Order Detail up to 20/08/2014");
        jButton3.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(20, 400, 220, 23);

        jButton4.setText("Order Detail up to 22/08/2014");
        jButton4.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(270, 460, 230, 23);

        jButton5.setText("Order Detail up to 26/08/2014");
        jButton5.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(270, 430, 220, 23);

        jButton6.setText("Order upto 31/08 -FINE CLOTHING");
        jButton6.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(20, 460, 230, 23);

        lblABDDiscountPercentReport.setText("ABD DISCOUNT % REPORT");
        getContentPane().add(lblABDDiscountPercentReport);
        lblABDDiscountPercentReport.setBounds(10, 40, 190, 20);
        getContentPane().add(cmbSeason);
        cmbSeason.setBounds(110, 60, 90, 20);

        jLabel4.setText("Season");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 60, 70, 20);

        cmdABDReport.setText("Report");
        cmdABDReport.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdABDReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdABDReportActionPerformed(evt);
            }
        });
        getContentPane().add(cmdABDReport);
        cmdABDReport.setBounds(220, 60, 80, 23);

        jLabel5.setText("S15");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 280, 80, 14);

        cmdShowS1506082015.setText("Order Detail up to 06/02/2015");
        cmdShowS1506082015.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowS1506082015ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdShowS1506082015);
        cmdShowS1506082015.setBounds(340, 310, 160, 23);

        cmdS15MaheshTextile.setText("Order upto 15/02/15 -Mahesh& Jainam");
        cmdS15MaheshTextile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdS15MaheshTextileActionPerformed(evt);
            }
        });
        getContentPane().add(cmdS15MaheshTextile);
        cmdS15MaheshTextile.setBounds(10, 340, 320, 23);

        jButton8.setText("Order upto 11/02/2015 rochal& NUfab");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(10, 310, 320, 23);

        jButton7.setText("13/03/2015");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(340, 340, 150, 23);

        cmdOrderNoWise2.setText("Order Detail up to 08/02/16");
        cmdOrderNoWise2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdOrderNoWise2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOrderNoWise2ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOrderNoWise2);
        cmdOrderNoWise2.setBounds(450, 250, 190, 23);

        jLabel6.setBackground(new java.awt.Color(153, 204, 255));
        jLabel6.setText("W16");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 160, 40, 20);

        cmdOrderNoWise3.setText("Order Detail up to 01/08/2016");
        cmdOrderNoWise3.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdOrderNoWise3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOrderNoWise3ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOrderNoWise3);
        cmdOrderNoWise3.setBounds(10, 190, 220, 23);

        cmdOrderNoWise4.setText("Order up to 16/08/2016 Rochal");
        cmdOrderNoWise4.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdOrderNoWise4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOrderNoWise4ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOrderNoWise4);
        cmdOrderNoWise4.setBounds(280, 190, 220, 23);

        cmdOrderNoWise5.setText("NEW QUALITY for SUMMER 2017");
        cmdOrderNoWise5.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdOrderNoWise5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOrderNoWise5ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOrderNoWise5);
        cmdOrderNoWise5.setBounds(10, 130, 220, 23);

        jLabel7.setBackground(new java.awt.Color(153, 204, 255));
        jLabel7.setText("S17");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 100, 40, 20);

        jButton9.setText("W17");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(510, 60, 55, 23);

        jButton10.setText("W17 A");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10);
        jButton10.setBounds(510, 90, 65, 23);

        jButton11.setText("W17 B");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11);
        jButton11.setBounds(510, 120, 63, 23);

        jButton12.setText("W18");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton12);
        jButton12.setBounds(340, 60, 80, 23);

        jButton13.setText("S18");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton13);
        jButton13.setBounds(420, 60, 51, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
              new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW18())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
         new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW17B())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
          new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW17A())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
           new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW17())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void cmdOrderNoWise5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOrderNoWise5ActionPerformed
        // TODO add your handling code here:
        new Thread(){
            public void run(){
                if(!printNewQualityforSummer2017())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_cmdOrderNoWise5ActionPerformed

    private void cmdOrderNoWise4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOrderNoWise4ActionPerformed
        // TODO add your handling code here:
        new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW16Rochal())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_cmdOrderNoWise4ActionPerformed

    private void cmdOrderNoWise3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOrderNoWise3ActionPerformed
        // TODO add your handling code here:
        new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW16())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_cmdOrderNoWise3ActionPerformed

    private void cmdOrderNoWise2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOrderNoWise2ActionPerformed
    new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWise())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
            // TODO add your handling code here:
    }//GEN-LAST:event_cmdOrderNoWise2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
   new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseS15PREETITEX())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
         new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseS15rochalnufab())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();        // TODO add your handling code here:
    
    }//GEN-LAST:event_jButton8ActionPerformed

    private void cmdS15MaheshTextileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdS15MaheshTextileActionPerformed
      new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseS15Mahesh())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();        // TODO add your handling code here:
    }//GEN-LAST:event_cmdS15MaheshTextileActionPerformed

    private void cmdShowS1506082015ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowS1506082015ActionPerformed
       new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseS15())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();        // TODO add your handling code here:
    }//GEN-LAST:event_cmdShowS1506082015ActionPerformed

    private void cmdABDReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdABDReportActionPerformed
        //int RefCompanyID = data.getIntValueFromDB("SELECT DISTINCT(REF_COMPANY_ID) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+txtDocNo.getText().trim()+"'AND GRN_NO='"+GRNNo+"'",FinanceGlobal.FinURL); 
        String strSQL="SELECT SCHEME_ID FROM SALES.D_SAL_SCHEME_MASTER WHERE SCHEME_NAME LIKE ('ADVANCE BOOKING %') AND SCHEME_SEASON_ID='"+EITLERPGLOBAL.getCombostrCode(cmbSeason)+"'";
       System.out.println(strSQL);
        int SchemeID = data.getIntValueFromDB(strSQL);
        System.out.println(SchemeID);
        try{
            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("COL01");
            objData.AddColumn("COL02");
            objData.AddColumn("COL03");
            objData.AddColumn("COL04");
            objData.AddColumn("COL05");
            objData.AddColumn("COL06");
            objData.AddColumn("COL07");
            objData.AddColumn("COL08");
            objData.AddColumn("COL09");
            objData.AddColumn("COL10");
            objData.AddColumn("COL11");
            objData.AddColumn("COL12");
            objData.AddColumn("COL13");
            objData.AddColumn("COL14");            
            objData.AddColumn("COL15");            
          
            
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TMP4");
            stmt.execute("INSERT INTO TEMP_DATABASE.TMP4 SELECT SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,ROUND(SCD_GROSS_QTY,2),ROUND(SCD_NET_QTY,2),ROUND(SCD_NET_AMOUNT,2),SCD_INVOICE_NO,SCD_INVOICE_DATE,ROUND(SCD_INV_RATE,2),ROUND(SCD_DISC_PERCENT,2),ROUND(SCD_DISC_AMOUNT,2),0,0,0,0,0,0,1,1 FROM SALES.D_SAL_SCHEME_DETAIL WHERE SCD_SEASON_ID ='"+EITLERPGLOBAL.getCombostrCode(cmbSeason)+"' AND SCD_SCHEME_ID= '"+SchemeID+"'");
            stmt.execute("UPDATE TEMP_DATABASE.TMP4 SET COL18 = CONCAT(SUBSTRING(COL11,9,2),'/',SUBSTRING(COL11,6,2),'/',SUBSTRING(COL11,1,4))");
            stmt.execute("UPDATE TEMP_DATABASE.TMP4 SET COL11= COL18");
            stmt.execute("INSERT INTO TEMP_DATABASE.TMP4 SELECT SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,CONCAT('TOTAL(',COUNT(SCD_SHADE),')'),'SHADE',ROUND(SUM(SCD_GROSS_QTY),2),ROUND(SUM(SCD_NET_QTY),2),ROUND(SUM(SCD_NET_AMOUNT),2),'SHADE','TOTAL AMT','-----------','----------',ROUND(SUM(SCD_DISC_AMOUNT),2),0,0,0,0,0,0,1,2 FROM SALES.D_SAL_SCHEME_DETAIL WHERE SCD_SEASON_ID ='"+EITLERPGLOBAL.getCombostrCode(cmbSeason)+"' AND SCD_SCHEME_ID= '"+SchemeID+"' GROUP BY SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE HAVING COUNT(SCD_SHADE)>1");
            stmt.execute("INSERT INTO TEMP_DATABASE.TMP4 SELECT SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,'QUALITY',CONCAT('TOTAL(',COUNT(SCD_QUALITY_ID),')'),   'QUALITY',ROUND(SUM(SCD_GROSS_QTY),2),ROUND(SUM(SCD_NET_QTY),2),ROUND(SUM(SCD_NET_AMOUNT),2),'QUALITY','TOTAL AMT','-----------','----------',ROUND(SUM(SCD_DISC_AMOUNT),2),0,0,0,0,0,0,1,3 FROM SALES.D_SAL_SCHEME_DETAIL WHERE SCD_SEASON_ID ='"+EITLERPGLOBAL.getCombostrCode(cmbSeason)+"'  AND SCD_SCHEME_ID= '"+SchemeID+"' GROUP BY SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID");
            stmt.execute("INSERT INTO TEMP_DATABASE.TMP4 SELECT SCD_SEASON_ID,SCD_PARTY_CODE,'PARTY','TOTAL',CONCAT('TOTAL(',COUNT(SCD_PARTY_CODE),')'),   'PARTY',ROUND(SUM(SCD_GROSS_QTY),2),ROUND(SUM(SCD_NET_QTY),2),ROUND(SUM(SCD_NET_AMOUNT),2),'PARTY','TOTAL AMT','-------','------',ROUND(SUM(SCD_DISC_AMOUNT),2),0,0,0,0,0,0,1,4 FROM SALES.D_SAL_SCHEME_DETAIL WHERE SCD_SEASON_ID ='"+EITLERPGLOBAL.getCombostrCode(cmbSeason)+"' AND SCD_SCHEME_ID= '"+SchemeID+"' GROUP BY SCD_SEASON_ID,SCD_PARTY_CODE");
            stmt.execute("INSERT INTO TEMP_DATABASE.TMP4 SELECT ABDD_SEASON_ID,ABDD_PARTY_CODE,ABDD_QUALITY_ID,CASE WHEN LENGTH(ABDD_SHADE) =1 THEN CONCAT('0',ABDD_SHADE) ELSE ABDD_SHADE END, ABDD_CATG,'BOOKING','SHADE', ROUND(ABDD_MTRS,2),'ABD', ROUND(ABDD_LIFT1_LIFT2_MTR+ABDD_LIFT2_LIFT3_MTR,2) AS ABD,'AFTER ABD',ROUND(ABDD_LIFT1_LIFT2_MTR_L+ABDD_LIFT2_LIFT3_MTR_L,2) AS AFTERABD,'','',0,0,0,0,0,0,1,0 FROM SALES.D_SAL_ABD_DETAIL WHERE ABDD_SEASON_ID = '"+EITLERPGLOBAL.getCombostrCode(cmbSeason)+"' AND ABDD_SCHEME_ID ='"+SchemeID+"'"); 
            stmt.execute("INSERT INTO TEMP_DATABASE.TMP4 SELECT ABDD_SEASON_ID,ABDD_PARTY_CODE,ABDD_QUALITY_ID,'QUALITY', ABDD_CATG,'BOOKING','QUALITY', ROUND(SUM(ABDD_MTRS),2),  'ABD', ROUND(SUM(ABDD_LIFT1_LIFT2_MTR+ABDD_LIFT2_LIFT3_MTR),2) AS ABD,'AFTER ABD',ROUND(SUM(ABDD_LIFT1_LIFT2_MTR_L+ABDD_LIFT2_LIFT3_MTR_L),2) AS AFTERABD,'','',0,0,0,0,0,0,1,0  FROM  SALES.D_SAL_ABD_DETAIL WHERE ABDD_SEASON_ID = '"+EITLERPGLOBAL.getCombostrCode(cmbSeason)+"' AND ABDD_SCHEME_ID ='"+SchemeID+"' GROUP BY ABDD_SEASON_ID,ABDD_PARTY_CODE,ABDD_QUALITY_ID,ABDD_CATG");
            stmt.execute("INSERT INTO TEMP_DATABASE.TMP4 SELECT ABDD_SEASON_ID,ABDD_PARTY_CODE,'PARTY','BOOKING','PARTY','BOOKING', ROUND(SUM(ABDD_MTRS),2),  'ABD', ROUND(SUM(ABDD_LIFT1_LIFT2_MTR+ABDD_LIFT2_LIFT3_MTR),2) AS ABD,'AFTER ABD',ROUND(SUM(ABDD_LIFT1_LIFT2_MTR_L+ABDD_LIFT2_LIFT3_MTR_L),2) AS AFTERABD,'','','',0,0,0,0,0,0,1,1  FROM  SALES.D_SAL_ABD_DETAIL WHERE ABDD_SEASON_ID = '"+EITLERPGLOBAL.getCombostrCode(cmbSeason)+"' AND ABDD_SCHEME_ID ='"+SchemeID+"' GROUP BY ABDD_SEASON_ID,ABDD_PARTY_CODE");
            stmt.execute("UPDATE TEMP_DATABASE.TMP4,DINESHMILLS.D_SAL_PARTY_MASTER SET COL15= CONCAT(PARTY_NAME,' ( ', DISPATCH_STATION ,' ) ') WHERE COL02 = PARTY_CODE");
            
            ResultSet rsTemp = data.getResult("SELECT COL01,COL02,COL03,COL04,COL05,COL06,COL07,COL08,COL09,COL10,COL11,COL12,COL13,COL14,COL15 FROM TEMP_DATABASE.TMP4 ORDER BY COL01,COL02,COL03,COL04,COL21,COL22,COL11");
            //stmt.execute("SELECT * FROM TEMP_DATABASE.TMP4 ORDER BY COL01,COL02,COL03,COL04,COL21,COL22,COL11");
            while(!rsTemp.isAfterLast()){
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("COL01",rsTemp.getString("COL01"));
                objRow.setValue("COL02",rsTemp.getString("COL02"));
                objRow.setValue("COL03",rsTemp.getString("COL03"));
                objRow.setValue("COL04", rsTemp.getString("COL04"));
                objRow.setValue("COL05", rsTemp.getString("COL05"));
                objRow.setValue("COL06",rsTemp.getString("COL06"));
                objRow.setValue("COL07", rsTemp.getString("COL07"));
                objRow.setValue("COL08", rsTemp.getString("COL08"));
                objRow.setValue("COL09", rsTemp.getString("COL09"));
                objRow.setValue("COL10", rsTemp.getString("COL10"));
                objRow.setValue("COL11", rsTemp.getString("COL11"));
                objRow.setValue("COL12", rsTemp.getString("COL12"));
                objRow.setValue("COL13", rsTemp.getString("COL13"));
                objRow.setValue("COL14", rsTemp.getString("COL14"));                
                objRow.setValue("COL15", rsTemp.getString("COL15"));                
                objData.AddRow(objRow);
                rsTemp.next();
            }
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDwithBreakPiecPartywiseNewUpdated.rpt",parameter,objData);
            //new TReportWriter.TReportEngine().PreviewReport("http://200.0.0.105/EITLERP/Reports/sales/rptABDwithBreakPieceupdate1.rpt",new HashMap(),objData);            
            rsTemp.close(); 
            
        }catch(Exception e){
             e.printStackTrace();
        }
        
    }//GEN-LAST:event_cmdABDReportActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW14FineClothing())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
               new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW14Jainam())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW14Rochaldas())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW14Pokarna())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseW14())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //DeleteTmpSaleSchemeTable();
        /*
        lblStatus.setText("Generate Scheme Detail Table Start");
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();            
            //-----------4.5%
            //String sql = "INSERT INTO SALES.TMP_SAL_SCHEME_DETAIL (SCD_SCHEME_ID,SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_GROSS_AMOUNT,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_AGENT_LAST_INVOICE,SCD_AGENT_SR_NO,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_PL_RATE,SCD_QUALITY_ELIGIBLE,SCD_DISC_PER_MTR_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCD_GATE_PASS_NO,SCD_GATEPASS_DATE,SCD_BALE_NO) SELECT 5,ABDI_SEASON_ID,ABDI_PARTY_CODE,ABDI_QLTY_ID,ABDI_SHADE,ABDI_PIECE_NO,ABDI_DA_CODE,0,ABDI_GROSS_QTY,0,ABDD_LIFT1_LIFT2_MTR,ABDD_LIFT1_LIFT2_MTR_AMOUNT,0,0,ABDI_INVOICE_NO,ABDI_INVOICE_DATE,ABDI_RATE,0,'',0,4.5,ROUND(ABDD_LIFT1_LIFT2_MTR_AMOUNT*.045),'','0000-00-00',0 FROM SALES.TMP_ABD_BREAKPIECE ";
            String sql = "INSERT INTO SALES.TMP_SAL_SCHEME_DETAIL (SCD_SCHEME_ID,SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_GROSS_AMOUNT,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_AGENT_LAST_INVOICE,SCD_AGENT_SR_NO,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_PL_RATE,SCD_QUALITY_ELIGIBLE,SCD_DISC_PER_MTR_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCD_GATE_PASS_NO,SCD_GATEPASS_DATE,SCD_BALE_NO) SELECT 5,ABDI_SEASON_ID,ABDI_PARTY_CODE,ABDI_QLTY_ID,ABDI_SHADE,ABDI_PIECE_NO,ABDI_DA_CODE,0,ABDI_GROSS_QTY,0,ABDD_NET_QTY_AFTER_LIFT12,ABDD_LIFT1_LIFT2_MTR_AMOUNT,0,0,ABDI_INVOICE_NO,ABDI_INVOICE_DATE,ABDI_RATE,0,'',0,4.5,ROUND(ABDD_LIFT1_LIFT2_MTR_AMOUNT*.045),'','0000-00-00',0 FROM SALES.TMP_ABD_BREAKPIECE ";
            stmt.execute(sql);            
            //----------2.25%
            //sql="INSERT INTO SALES.TMP_SAL_SCHEME_DETAIL (SCD_SCHEME_ID,SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_GROSS_AMOUNT,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_AGENT_LAST_INVOICE,SCD_AGENT_SR_NO,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_PL_RATE,SCD_QUALITY_ELIGIBLE,SCD_DISC_PER_MTR_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCD_GATE_PASS_NO,SCD_GATEPASS_DATE,SCD_BALE_NO) SELECT 5,ABDI_SEASON_ID,ABDI_PARTY_CODE,ABDI_QLTY_ID,ABDI_SHADE,ABDI_PIECE_NO,ABDI_DA_CODE,0,ABDI_GROSS_QTY,0,ABDD_LIFT1_LIFT2_MTR_L,ABDD_LIFT1_LIFT2_MTR_L_AMOUNT,0,0,ABDI_INVOICE_NO,ABDI_INVOICE_DATE,ABDI_RATE,0,'',0,2.25,ROUND(ABDD_LIFT1_LIFT2_MTR_L_AMOUNT*.0225),'','0000-00-00',0 FROM SALES.TMP_ABD_BREAKPIECE ";           
            sql="INSERT INTO SALES.TMP_SAL_SCHEME_DETAIL (SCD_SCHEME_ID,SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_GROSS_AMOUNT,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_AGENT_LAST_INVOICE,SCD_AGENT_SR_NO,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_PL_RATE,SCD_QUALITY_ELIGIBLE,SCD_DISC_PER_MTR_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCD_GATE_PASS_NO,SCD_GATEPASS_DATE,SCD_BALE_NO) SELECT 5,ABDI_SEASON_ID,ABDI_PARTY_CODE,ABDI_QLTY_ID,ABDI_SHADE,ABDI_PIECE_NO,ABDI_DA_CODE,0,ABDI_GROSS_QTY,0,ABDD_NET_QTY_AFTER_LIFT12L,ABDD_LIFT1_LIFT2_MTR_L_AMOUNT,0,0,ABDI_INVOICE_NO,ABDI_INVOICE_DATE,ABDI_RATE,0,'',0,2.25,ROUND(ABDD_LIFT1_LIFT2_MTR_L_AMOUNT*.0225),'','0000-00-00',0 FROM SALES.TMP_ABD_BREAKPIECE ";           
            stmt.execute(sql);
            //----------3.5%
            //sql="INSERT INTO SALES.TMP_SAL_SCHEME_DETAIL (SCD_SCHEME_ID,SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_GROSS_AMOUNT,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_AGENT_LAST_INVOICE,SCD_AGENT_SR_NO,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_PL_RATE,SCD_QUALITY_ELIGIBLE,SCD_DISC_PER_MTR_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCD_GATE_PASS_NO,SCD_GATEPASS_DATE,SCD_BALE_NO) SELECT 5,ABDI_SEASON_ID,ABDI_PARTY_CODE,ABDI_QLTY_ID,ABDI_SHADE,ABDI_PIECE_NO,ABDI_DA_CODE,0,ABDI_GROSS_QTY,0,ABDD_LIFT2_LIFT3_MTR,ABDD_LIFT2_LIFT3_MTR_AMOUNT,0,0,ABDI_INVOICE_NO,ABDI_INVOICE_DATE,ABDI_RATE,0,'',0,3.5,ROUND(ABDD_LIFT2_LIFT3_MTR_AMOUNT*.035),'','0000-00-00',0 FROM SALES.TMP_ABD_BREAKPIECE ";
            sql="INSERT INTO SALES.TMP_SAL_SCHEME_DETAIL (SCD_SCHEME_ID,SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_GROSS_AMOUNT,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_AGENT_LAST_INVOICE,SCD_AGENT_SR_NO,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_PL_RATE,SCD_QUALITY_ELIGIBLE,SCD_DISC_PER_MTR_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCD_GATE_PASS_NO,SCD_GATEPASS_DATE,SCD_BALE_NO) SELECT 5,ABDI_SEASON_ID,ABDI_PARTY_CODE,ABDI_QLTY_ID,ABDI_SHADE,ABDI_PIECE_NO,ABDI_DA_CODE,0,ABDI_GROSS_QTY,0,ABDD_NET_QTY_AFTER_LIFT23,ABDD_LIFT2_LIFT3_MTR_AMOUNT,0,0,ABDI_INVOICE_NO,ABDI_INVOICE_DATE,ABDI_RATE,0,'',0,3.5,ROUND(ABDD_LIFT2_LIFT3_MTR_AMOUNT*.035),'','0000-00-00',0 FROM SALES.TMP_ABD_BREAKPIECE ";
            stmt.execute(sql);
            //----------1.75%
            //sql="INSERT INTO SALES.TMP_SAL_SCHEME_DETAIL (SCD_SCHEME_ID,SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_GROSS_AMOUNT,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_AGENT_LAST_INVOICE,SCD_AGENT_SR_NO,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_PL_RATE,SCD_QUALITY_ELIGIBLE,SCD_DISC_PER_MTR_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCD_GATE_PASS_NO,SCD_GATEPASS_DATE,SCD_BALE_NO) SELECT 5,ABDI_SEASON_ID,ABDI_PARTY_CODE,ABDI_QLTY_ID,ABDI_SHADE,ABDI_PIECE_NO,ABDI_DA_CODE,0,ABDI_GROSS_QTY,0,ABDD_LIFT2_LIFT3_MTR_L,ABDD_LIFT2_LIFT3_MTR_L_AMOUNT,0,0,ABDI_INVOICE_NO,ABDI_INVOICE_DATE,ABDI_RATE,0,'',0,1.75,ROUND(ABDD_LIFT2_LIFT3_MTR_L_AMOUNT*.0175),'','0000-00-00',0 FROM SALES.TMP_ABD_BREAKPIECE";
            sql="INSERT INTO SALES.TMP_SAL_SCHEME_DETAIL (SCD_SCHEME_ID,SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_GROSS_AMOUNT,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_AGENT_LAST_INVOICE,SCD_AGENT_SR_NO,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_PL_RATE,SCD_QUALITY_ELIGIBLE,SCD_DISC_PER_MTR_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCD_GATE_PASS_NO,SCD_GATEPASS_DATE,SCD_BALE_NO) SELECT 5,ABDI_SEASON_ID,ABDI_PARTY_CODE,ABDI_QLTY_ID,ABDI_SHADE,ABDI_PIECE_NO,ABDI_DA_CODE,0,ABDI_GROSS_QTY,0,ABDD_NET_QTY_AFTER_LIFT23L,ABDD_LIFT2_LIFT3_MTR_L_AMOUNT,0,0,ABDI_INVOICE_NO,ABDI_INVOICE_DATE,ABDI_RATE,0,'',0,1.75,ROUND(ABDD_LIFT2_LIFT3_MTR_L_AMOUNT*.0175),'','0000-00-00',0 FROM SALES.TMP_ABD_BREAKPIECE";
            stmt.execute(sql);
            //--------delete 0 value net qty
            
            
            sql="DELETE FROM SALES.TMP_SAL_SCHEME_DETAIL WHERE SCD_NET_QTY=0.00";
            stmt.execute(sql);
        }catch(SQLException sqe){
            sqe.printStackTrace();            
        }     
        lblStatus.setText("Generate Scheme Detail Table Complete");
        System.out.println("Scheme Detail Done
         */
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("SCD_SEASON_ID");
            objData.AddColumn("SCD_PARTY_CODE");
            objData.AddColumn("SCD_QUALITY_ID");
            objData.AddColumn("SCD_SHADE");
            objData.AddColumn("SCD_INVOICE_NO");
            objData.AddColumn("SCD_INVOICE_DATE");
            objData.AddColumn("SCD_PIECE_NO");
            objData.AddColumn("SCD_GROSS_QTY");
            objData.AddColumn("SCD_NET_QTY");
            objData.AddColumn("SCD_FLAG");
            objData.AddColumn("SCD_NET_AMOUNT");
            objData.AddColumn("SCD_INV_RATE");
            objData.AddColumn("SCH_PARTY_NAME");
            objData.AddColumn("ABDD_CATG");
            objData.AddColumn("ABDD_BOOKED_UNIT");
            objData.AddColumn("ABDD_MTRS");
            objData.AddColumn("ABD");
            objData.AddColumn("AFTERABD");
            objData.AddColumn("SCD_DISC_PERCENT");
            objData.AddColumn("SCD_DISC_AMOUNT");            
            Connection conn=data.getConn();            
            Statement stmt=conn.createStatement();             
            String str ="SELECT SCD_SEASON_ID,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_GROSS_QTY,SCD_NET_QTY,SCD_FLAG,SCD_NET_AMOUNT,SCD_INV_RATE,SCH_PARTY_NAME,ABDD_CATG,ABDD_BOOKED_UNIT,ABDD_MTRS,D.ABDD_LIFT1_LIFT2_MTR+D.ABDD_LIFT2_LIFT3_MTR AS ABD,D.ABDD_LIFT1_LIFT2_MTR_L+D.ABDD_LIFT2_LIFT3_MTR_L AS AFTERABD,SCD_DISC_PERCENT,SCD_DISC_AMOUNT FROM (SELECT SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT,SCH_PARTY_NAME FROM (SELECT SCD_SEASON_ID,SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_PIECE_NO,SCD_FLAG,SCD_UNIT_CODE,SCD_GROSS_QTY,SCD_NET_QTY,SCD_NET_AMOUNT,SCD_INVOICE_NO,SCD_INVOICE_DATE,SCD_INV_RATE,SCD_DISC_PERCENT,SCD_DISC_AMOUNT FROM SALES.TMP_SAL_SCHEME_DETAIL) AS A LEFT JOIN (SELECT DISTINCT SCH_PARTY_CODE,SCH_PARTY_NAME FROM SALES.D_SAL_SCHEME_HEADER) AS B ON SCD_PARTY_CODE=SCH_PARTY_CODE ) AS C LEFT JOIN   (SELECT ABDD_SEASON_ID,ABDD_PARTY_CODE,ABDD_QUALITY_ID,ABDD_CATG,ABDD_SHADE,ABDD_BOOKED_UNIT,ABDD_MTRS,ABDD_LIFT1_LIFT2_MTR,ABDD_LIFT1_LIFT2_MTR_L,ABDD_LIFT2_LIFT3_MTR,ABDD_LIFT2_LIFT3_MTR_L FROM SALES.TMP_ABD_DETAIL) AS D ON ABDD_SEASON_ID=SCD_SEASON_ID AND ABDD_PARTY_CODE=SCD_PARTY_CODE AND ABDD_QUALITY_ID=SCD_QUALITY_ID AND ABDD_SHADE=SCD_SHADE ORDER BY SCD_PARTY_CODE,SCD_QUALITY_ID,SCD_SHADE,SCD_INVOICE_DATE";
            ResultSet  rsTemp =data.getResult(str);            
            while(!rsTemp.isAfterLast()){
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("SCD_SEASON_ID",rsTemp.getString("SCD_SEASON_ID"));
                objRow.setValue("SCD_PARTY_CODE",rsTemp.getString("SCD_PARTY_CODE"));
                objRow.setValue("SCD_QUALITY_ID",rsTemp.getString("SCD_QUALITY_ID"));
                objRow.setValue("SCD_SHADE", rsTemp.getString("SCD_SHADE"));
                objRow.setValue("SCD_INVOICE_NO", rsTemp.getString("SCD_INVOICE_NO"));
                objRow.setValue("SCD_INVOICE_DATE",EITLERPGLOBAL.formatDate(rsTemp.getString("SCD_INVOICE_DATE")));
                //objRow.setValue("SCD_INVOICE_DATE",rsTemp.getString("SCD_INVOICE_DATE"));
                objRow.setValue("SCD_PIECE_NO", rsTemp.getString("SCD_PIECE_NO"));
                objRow.setValue("SCD_GROSS_QTY", rsTemp.getString("SCD_GROSS_QTY"));
                objRow.setValue("SCD_NET_QTY", rsTemp.getString("SCD_NET_QTY"));
                objRow.setValue("SCD_FLAG", rsTemp.getString("SCD_FLAG"));
                objRow.setValue("SCD_NET_AMOUNT", rsTemp.getString("SCD_NET_AMOUNT"));
                objRow.setValue("SCD_INV_RATE", rsTemp.getString("SCD_INV_RATE"));
                objRow.setValue("SCH_PARTY_NAME", rsTemp.getString("SCH_PARTY_NAME"));
                objRow.setValue("ABDD_CATG", rsTemp.getString("ABDD_CATG"));
                objRow.setValue("ABDD_BOOKED_UNIT", rsTemp.getString("ABDD_BOOKED_UNIT"));
                objRow.setValue("ABDD_MTRS", rsTemp.getString("ABDD_MTRS"));
                objRow.setValue("ABD", rsTemp.getString("ABD"));
                objRow.setValue("AFTERABD", rsTemp.getString("AFTERABD"));
                objRow.setValue("SCD_DISC_PERCENT", rsTemp.getString("SCD_DISC_PERCENT"));
                objRow.setValue("SCD_DISC_AMOUNT", rsTemp.getString("SCD_DISC_AMOUNT"));
                objData.AddRow(objRow);
                rsTemp.next();
            } 
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDwithBreakPieceupdate1.rpt",parameter,objData);
            //new TReportWriter.TReportEngine().PreviewReport("http://200.0.0.105/EITLERP/Reports/sales/rptABDwithBreakPieceupdate1.rpt",new HashMap(),objData);            
            rsTemp.close();            
            //return true;
        }catch(SQLException e) {
            e.printStackTrace();
            //return false;
        }      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmdOrderNoWise1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOrderNoWise1ActionPerformed
        new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWise1())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_cmdOrderNoWise1ActionPerformed

    private void cmdQualityIdWiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdQualityIdWiseActionPerformed
        new Thread(){
            public void run(){
                if(!printABDOrderDetailQualityWise())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_cmdQualityIdWiseActionPerformed

    private void cmdOrderNoWiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOrderNoWiseActionPerformed
        new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWise())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();
    }//GEN-LAST:event_cmdOrderNoWiseActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
           new Thread(){
            public void run(){
                if(!printABDOrderDetailOrderNoWiseS18())
                    JOptionPane.showMessageDialog(frmABDReport.this,"Report Not Generated.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }.start();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed
                        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbSeason;
    private javax.swing.JButton cmdABDReport;
    private javax.swing.JButton cmdOrderNoWise;
    private javax.swing.JButton cmdOrderNoWise1;
    private javax.swing.JButton cmdOrderNoWise2;
    private javax.swing.JButton cmdOrderNoWise3;
    private javax.swing.JButton cmdOrderNoWise4;
    private javax.swing.JButton cmdOrderNoWise5;
    private javax.swing.JButton cmdQualityIdWise;
    private javax.swing.JButton cmdS15MaheshTextile;
    private javax.swing.JButton cmdShowS1506082015;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblABDDiscountPercentReport;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
    
    private boolean printABDOrderDetailQualityWise() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, (SELECT DISTINCT SLAB_SEASON_ID,SLAB_SCHEME_ID , SLAB_PARTY_CODE FROM SALES.D_SAL_SCHEME_SLAB WHERE SLAB_SCHEME_ID ='5' ) AS S,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE = SLAB_PARTY_CODE AND SN_SEASON_ID ='S14' AND SN_CANCELLED =0 AND SLAB_SEASON_ID = SN_SEASON_ID AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2013-12-16' AND SN_ORDER_DATE<='2014-02-15' "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,CONCAT(SN_SHADE,' TOTAL'),'',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, (SELECT DISTINCT SLAB_SEASON_ID,SLAB_SCHEME_ID , SLAB_PARTY_CODE FROM SALES.D_SAL_SCHEME_SLAB WHERE SLAB_SCHEME_ID ='5' ) AS S,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE = SLAB_PARTY_CODE AND SN_SEASON_ID ='S14' AND SN_CANCELLED =0 AND SLAB_SEASON_ID = SN_SEASON_ID AND CATEGORY_LIST IN('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2013-12-16' AND SN_ORDER_DATE<='2014-02-15' "+
            "GROUP BY SN_PARTY_CODE,SN_QUALITY_ID,SN_SHADE "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO,SN_ORDER_DATE,CONCAT(SN_QUALITY_ID,' TOTAL'),'','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, (SELECT DISTINCT SLAB_SEASON_ID,SLAB_SCHEME_ID , SLAB_PARTY_CODE FROM SALES.D_SAL_SCHEME_SLAB WHERE SLAB_SCHEME_ID ='5' ) AS S,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE = SLAB_PARTY_CODE AND SN_SEASON_ID ='S14' AND SN_CANCELLED =0 AND SLAB_SEASON_ID = SN_SEASON_ID AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2013-12-16' AND SN_ORDER_DATE<='2014-02-15' "+
            "GROUP BY SN_PARTY_CODE,SN_QUALITY_ID "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO,SN_ORDER_DATE,'total','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, (SELECT DISTINCT SLAB_SEASON_ID,SLAB_SCHEME_ID , SLAB_PARTY_CODE FROM SALES.D_SAL_SCHEME_SLAB WHERE SLAB_SCHEME_ID ='5' ) AS S,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE = SLAB_PARTY_CODE AND SN_SEASON_ID ='S14' AND SN_CANCELLED =0 AND SLAB_SEASON_ID = SN_SEASON_ID AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2013-12-16' AND SN_ORDER_DATE<='2014-02-15' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_QUALITY_ID,SN_SHADE";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_SHADE").contains("T")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "SHADE");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_QUALITY_ID").contains("T")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "QUALITY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    
                }else if(rsTemp.getString("SN_QUALITY_ID").contains("t")){
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","QUALITY");
            parameter.put("LAST_DATE","15/02/2014");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    /*
    private boolean printABDOrderDetailOrderNoWise() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, (SELECT DISTINCT SLAB_SEASON_ID,SLAB_SCHEME_ID , SLAB_PARTY_CODE FROM SALES.D_SAL_SCHEME_SLAB WHERE SLAB_SCHEME_ID ='5' ) AS S,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE = SLAB_PARTY_CODE AND SN_SEASON_ID ='S14' AND SN_CANCELLED =0 AND SLAB_SEASON_ID = SN_SEASON_ID AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2013-12-16' AND SN_ORDER_DATE<='2014-02-15' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, (SELECT DISTINCT SLAB_SEASON_ID,SLAB_SCHEME_ID , SLAB_PARTY_CODE FROM SALES.D_SAL_SCHEME_SLAB WHERE SLAB_SCHEME_ID ='5' ) AS S,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE = SLAB_PARTY_CODE AND SN_SEASON_ID ='S14' AND SN_CANCELLED =0 AND SLAB_SEASON_ID = SN_SEASON_ID AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2013-12-16' AND SN_ORDER_DATE<='2014-02-15' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, (SELECT DISTINCT SLAB_SEASON_ID,SLAB_SCHEME_ID , SLAB_PARTY_CODE FROM SALES.D_SAL_SCHEME_SLAB WHERE SLAB_SCHEME_ID ='5' ) AS S,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE = SLAB_PARTY_CODE AND SN_SEASON_ID ='S14' AND SN_CANCELLED =0 AND SLAB_SEASON_ID = SN_SEASON_ID AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2013-12-16' AND SN_ORDER_DATE<='2014-02-15' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    */
    
    
    
     private boolean printABDOrderDetailOrderNoWiseW17() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            /*
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            
            */
            
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','300153','300156','300170','311912','319907','509912','510901') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-07-20' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','300153','300156','300170','311912','319907','509912','510901') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-07-20' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','300153','300156','300170','311912','319907','509912','510901') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-07-20' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
              
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("SEASON","W17");
            parameter.put("START_DATE","15/06/2017");
            parameter.put("LAST_DATE","20/07/2017");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
   
     
     
     private boolean printABDOrderDetailOrderNoWiseS18() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            /*
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            
            */
            
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','510901','510501','559901','619913','670201') AND SN_SEASON_ID ='S18' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2018-01-01' AND SN_ORDER_DATE<='2018-02-15' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','510901','510501','559901','619913','670201') AND SN_SEASON_ID ='S18' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2018-01-01' AND SN_ORDER_DATE<='2018-02-15' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','510901','510501','559901','619913','670201') AND SN_SEASON_ID ='S18' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2018-01-01' AND SN_ORDER_DATE<='2018-02-15' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
              
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("SEASON","S18");
            parameter.put("START_DATE","01/01/2018");
            parameter.put("LAST_DATE","30/06/2018");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
     
     
      private boolean printABDOrderDetailOrderNoWiseW18() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            /*
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            
            */
            
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','510901','510501','559901','619913','670201') AND SN_SEASON_ID ='W18' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2018-07-01' AND SN_ORDER_DATE<='2018-07-31' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','510901','510501','559901','619913','670201') AND SN_SEASON_ID ='W18' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2018-07-01' AND SN_ORDER_DATE<='2018-07-31' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','510901','510501','559901','619913','670201') AND SN_SEASON_ID ='W18' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2018-07-01' AND SN_ORDER_DATE<='2018-07-31' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
              
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("SEASON","S18");
            parameter.put("START_DATE","01/01/2018");
            parameter.put("LAST_DATE","30/06/2018");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
     
    
    private boolean printABDOrderDetailOrderNoWiseW17A() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            /*
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            
            */
            
            
             String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913','559901') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-08-17' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913','559901') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-08-17' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913','559901') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-08-17' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
              
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("SEASON","W17");
            parameter.put("START_DATE","15/06/2017");
            parameter.put("LAST_DATE","17/08/2017");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    
    
    
     private boolean printABDOrderDetailOrderNoWiseW17B() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            /*
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            
            */
            
 String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-08-21' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-08-21' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965') AND SN_SEASON_ID ='W17' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2017-06-15' AND SN_ORDER_DATE<='2017-08-21' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
              
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE","");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE","");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("SEASON","W17");
            parameter.put("START_DATE","15/06/2017");
            parameter.put("LAST_DATE","21/08/2017");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    
    
    
    
    

    
    
    
    private boolean printNewQualityforSummer2017() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN ('159991','279965','300153','300156','300170','311912','319907','510501','559901','619913','670201') AND SN_SEASON_ID ='S17' AND SN_CANCELLED =0  AND QLT_NEW_OLD = 'NEW' AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2017-01-02' AND SN_ORDER_DATE<='2017-01-31' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN ('159991','279965','300153','300156','300170','311912','319907','510501','559901','619913','670201') AND SN_SEASON_ID ='S17' AND SN_CANCELLED =0 AND QLT_NEW_OLD = 'NEW' AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2017-01-02' AND SN_ORDER_DATE<='2017-01-31' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN ('159991','279965','300153','300156','300170','311912','319907','510501','559901','619913','670201') AND SN_SEASON_ID ='S17' AND SN_CANCELLED =0 AND QLT_NEW_OLD = 'NEW' AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2017-01-02' AND SN_ORDER_DATE<='2017-01-31' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("SEASON","S17");
            parameter.put("START_DATE","02/01/2017");
            parameter.put("LAST_DATE","31/01/2017");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private boolean printABDOrderDetailOrderNoWiseW16() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510501','670201','559901','739905') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-01' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("SEASON","W16");
            parameter.put("START_DATE","22/06/2016");
            parameter.put("LAST_DATE","01/08/2016");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private boolean printABDOrderDetailOrderNoWiseW16Rochal() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-16' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-16' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913') AND SN_SEASON_ID ='W16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2016-06-22' AND SN_ORDER_DATE<='2016-08-16' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("SEASON","W16");
            parameter.put("START_DATE","22/06/2016");
            parameter.put("LAST_DATE","16/08/2016");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private boolean printABDOrderDetailOrderNoWise() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','279965','300153','300156','300170','311912','319907','412607','509912','510201','510501','670201','559901','619913') AND SN_SEASON_ID ='S16' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND SN_UNIT_ID NOT IN (21) AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2015-12-22' AND SN_ORDER_DATE<='2016-02-08' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','311912','319907','412607','509912','510201','510501','670201','559901','159991','619913') AND SN_SEASON_ID ='S16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2015-12-22' AND SN_ORDER_DATE<='2016-02-08' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','311912','319907','412607','509912','510201','510501','670201','559901','159991','619913') AND SN_SEASON_ID ='S16' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE  AND SN_UNIT_ID NOT IN (21) AND SN_ORDER_DATE>='2015-12-22' AND SN_ORDER_DATE<='2016-02-08' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","  08/02/2016");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private boolean printABDOrderDetailOrderNoWiseW14() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','311912','412607','509912','510201','510501','559901','619915','739901') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-16' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','311912','412607','509912','510201','510501','559901','619915','739901') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-16' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','311912','412607','509912','510201','510501','559901','619915','739901') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-16' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","16/08/2014");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailW14.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    
     
    
    
    private boolean printABDOrderDetailOrderNoWiseW14Pokarna() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('319907') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-20' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('319907') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-20' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('319907') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-20' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","20/08/2014");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailW14.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private boolean printABDOrderDetailOrderNoWiseW14Rochaldas() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-22' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-22' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('619913') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-22' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","22/08/2014");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailW14.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    
    private boolean printABDOrderDetailOrderNoWiseW14Jainam() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('549901') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-26' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('549901') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-26' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('549901') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-26' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","26/08/2014");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailW14.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    
    private boolean printABDOrderDetailOrderNoWiseW14FineClothing() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('670201') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-31' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('670201') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-31' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('670201') AND SN_SEASON_ID ='W14' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-06-23' AND SN_ORDER_DATE<='2014-08-31' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","31/08/2014");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailW14.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private boolean printABDOrderDetailOrderNoWise1() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','619913') AND SN_SEASON_ID ='W15' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2015-06-22' AND SN_ORDER_DATE<='2015-08-15' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','619913') AND SN_SEASON_ID ='W15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2015-06-22' AND SN_ORDER_DATE<='2015-08-15' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('159991','619913') AND SN_SEASON_ID ='W15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2015-06-22' AND SN_ORDER_DATE<='2015-08-15' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE"," 15/08/2015");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetail.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    
     private void DeleteTmpSaleSchemeTable(){
        try{
           Connection connection = data.getConn();
           Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
           String query = "DELETE FROM SALES.TMP_SAL_SCHEME_DETAIL";
            statement.executeUpdate(query);
            lblStatus.setText(" All Data Deleted From Table");
            statement.close();
            connection.close();
        }catch(Exception e) {
            e.printStackTrace();             
        }  
    }
     
     private void GenerateCombo(){
        cmbSeasonModel=new EITLComboModel();
        cmbSeason.removeAllItems();
        cmbSeason.setModel(cmbSeasonModel);
        ComboData combodata=new ComboData();
        //combodata.Code="Select";
        combodata.Text = "Select";
        combodata.strCode ="Select";
        cmbSeasonModel.addElement(combodata);
        
        combodata=new ComboData();
        //combodata.Code="S14";
        combodata.Text = "S14";
        combodata.strCode = "S14";
        cmbSeasonModel.addElement(combodata);
        
        combodata=new ComboData();
        //combodata.Code="W14";
        combodata.Text = "W14";
        combodata.strCode ="W14";
        cmbSeasonModel.addElement(combodata);
    
        combodata=new ComboData();
        //combodata.Code="W14";
        combodata.Text = "S15";
        combodata.strCode ="S15";
        cmbSeasonModel.addElement(combodata);
    
        combodata=new ComboData();
        //combodata.Code="W14";
        combodata.Text = "W15";
        combodata.strCode ="W15";
        cmbSeasonModel.addElement(combodata);
        
        combodata=new ComboData();
        //combodata.Code="W14";
        combodata.Text = "S16";
        combodata.strCode ="S16";
        cmbSeasonModel.addElement(combodata);
        
        combodata=new ComboData();
        //combodata.Code="W14";
        combodata.Text = "W16";
        combodata.strCode ="W16";
        cmbSeasonModel.addElement(combodata);
        
        combodata=new ComboData();
        //combodata.Code="W14";
        combodata.Text = "W17";
        combodata.strCode ="W17";
        cmbSeasonModel.addElement(combodata);
        
              combodata=new ComboData();
        //combodata.Code="W14";
        combodata.Text = "S18";
        combodata.strCode ="S18";
        cmbSeasonModel.addElement(combodata);
        
                combodata=new ComboData();
        //combodata.Code="W14";
        combodata.Text = "W18";
        combodata.strCode ="W18";
        cmbSeasonModel.addElement(combodata);
     }
    
     
      private boolean printABDOrderDetailOrderNoWiseS15() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
        //    ('279965','300153','300156','300170','319907','412607','509912','510201','510501','619913','670201','739901','549901','150002')
      //      String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','311912','319907','412607','509912','510201','510501','619913','670201','739901','549901','150002') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-06' "+
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','319907','412607','509912','510201','510501','619913','670201','739901','150002') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-06' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','319907','412607','509912','510201','510501','619913','670201','739901','150002') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-06' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('279965','300153','300156','300170','319907','412607','509912','510201','510501','619913','670201','739901','150002') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-06' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","06/02/2015");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailS15.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
   
        private boolean printABDOrderDetailOrderNoWiseS15Mahesh() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN ('311912','549901') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-15' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('311912','549901') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-15' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('311912','549901') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-15' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","15/02/2015");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailS15.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
 
      private boolean printABDOrderDetailOrderNoWiseS15rochalnufab() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN ('510501','619913') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-11' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('510501','619913') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-11' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN('510501','619913') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-02-11' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","11/02/2015");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailS15.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
   
  
      
           private boolean printABDOrderDetailOrderNoWiseS15PREETITEX() {
        try{
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("STATION");
            objData.AddColumn("ORDER_NO");
            objData.AddColumn("ORDER_DATE");
            objData.AddColumn("QUALITY_NO");
            objData.AddColumn("SHADE_NO");
            objData.AddColumn("UNIT_CODE");
            objData.AddColumn("TOTAL_UNIT");
            objData.AddColumn("TOTAL_METER");
            objData.AddColumn("CATEGORY");
            objData.AddColumn("OLD_NEW");
            
            String str="SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,SN_ORDER_NO, SN_ORDER_DATE,SN_QUALITY_ID,SN_SHADE,SN_UNIT_ID,SN_UNITS,SN_ABD_TOTAL_MTR,CATEGORY_LIST,QLT_NEW_OLD FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN ('300156') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0  AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-03-13' "+
            "UNION ALL "+            
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,CONCAT(SN_ORDER_NO,' TOTAL'),'','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN ('300156') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-03-13' "+
            "GROUP BY SN_PARTY_CODE,SN_ORDER_NO "+
            "UNION ALL "+
            "SELECT SN_SEASON_ID,SN_PARTY_CODE,PARTY_NAME,CITY_ID,'total','','','','',SUM(SN_UNITS),SUM(SN_ABD_TOTAL_MTR),'','' FROM SALES.D_SAL_SALENOTE_DATA A,DINESHMILLS.D_SAL_QUALITY_MASTER Q, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE QUALITY_ID = SN_QUALITY_ID AND SEASON_ID = SN_SEASON_ID AND SN_PARTY_CODE IN ('300156') AND SN_SEASON_ID ='S15' AND SN_CANCELLED =0 AND CATEGORY_LIST IN ('REGULAR','S-QL') AND PARTY_CODE=SN_PARTY_CODE AND SN_ORDER_DATE>='2014-12-25' AND SN_ORDER_DATE<='2015-03-13' "+
            "GROUP BY SN_PARTY_CODE "+
            "ORDER BY SN_PARTY_CODE,SN_ORDER_NO,SN_QUALITY_ID+0,SN_SHADE+0,SN_UNIT_ID+0";
            
            ResultSet  rsTemp =data.getResult(str);
            while(!rsTemp.isAfterLast()){
                boolean addBlankRow=false;
                boolean addBeforeBlankRow=false;
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                
                if(rsTemp.getString("SN_ORDER_NO").contains("TOTAL")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "ORDER");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                    
                    addBlankRow=true;
                    addBeforeBlankRow=true;
                    
                }else if(rsTemp.getString("SN_ORDER_NO").contains("total")){
                    objRow.setValue("ORDER_NO", "");
                    objRow.setValue("ORDER_DATE", "");
                    objRow.setValue("QUALITY_NO", "");
                    objRow.setValue("SHADE_NO", "PARTY");
                    objRow.setValue("UNIT_CODE", "TOTAL :-");
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", "");
                    objRow.setValue("OLD_NEW", "");
                }else{
                    objRow.setValue("ORDER_NO", rsTemp.getString("SN_ORDER_NO"));
                    objRow.setValue("ORDER_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("SN_ORDER_DATE")));
                    objRow.setValue("QUALITY_NO", rsTemp.getString("SN_QUALITY_ID"));
                    objRow.setValue("SHADE_NO", rsTemp.getString("SN_SHADE"));
                    objRow.setValue("UNIT_CODE", rsTemp.getString("SN_UNIT_ID"));
                    objRow.setValue("TOTAL_UNIT", rsTemp.getString("SN_UNITS"));
                    objRow.setValue("TOTAL_METER", rsTemp.getString("SN_ABD_TOTAL_MTR"));
                    objRow.setValue("CATEGORY", rsTemp.getString("CATEGORY_LIST"));
                    objRow.setValue("OLD_NEW", rsTemp.getString("QLT_NEW_OLD"));
                }
                
                if(addBeforeBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                objData.AddRow(objRow);
                
                if(addBlankRow){
                    TReportWriter.SimpleDataProvider.TRow objBlankRow=objData.newRow();
                    
                    objBlankRow.setValue("PARTY_CODE", rsTemp.getString("SN_PARTY_CODE"));
                    objBlankRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                    objBlankRow.setValue("STATION", rsTemp.getString("CITY_ID"));
                    
                    objBlankRow.setValue("ORDER_NO", "");
                    objBlankRow.setValue("ORDER_DATE", "");
                    objBlankRow.setValue("QUALITY_NO", "");
                    objBlankRow.setValue("SHADE_NO", "");
                    objBlankRow.setValue("UNIT_CODE", "");
                    objBlankRow.setValue("TOTAL_UNIT", "");
                    objBlankRow.setValue("TOTAL_METER", "");
                    objBlankRow.setValue("CATEGORY", "");
                    objBlankRow.setValue("OLD_NEW", "");
                    objData.AddRow(objBlankRow);
                }
                
                rsTemp.next();
            }
            
            HashMap parameter=new HashMap();
            parameter.put("RUN_BY", clsUser.getUserName(2,EITLERPGLOBAL.gNewUserID));
            parameter.put("RUN_TIME", data.getStringValueFromDB("SELECT CURTIME() FROM DUAL").substring(0,5));
            parameter.put("NAME","ORDER");
            parameter.put("LAST_DATE","13/03/2015");
            
            EITLERPGLOBAL.PAGE_BREAK=true;
            new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptABDOrderDetailS15.rpt",parameter,objData);
            rsTemp.close();
            
            return true;
        }catch(SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
 
      
      
      
      
}
