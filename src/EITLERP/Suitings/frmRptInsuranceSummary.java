/*
 * frmRptGRNInfo.java
 *
 * Created on April 16, 2008, 12:01 PM
 */

package EITLERP.Suitings;

/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;

public class frmRptInsuranceSummary extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    /** Initializes the applet frmRptGRNInfo */
    public void init() {
        setSize(424,264);
        initComponents();
        
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cmdPreview = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("INSURANCE CHARGE SUMMARY REPORT");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(9, 8, 270, 15);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 2, 800, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("From Date :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 70, 90, 20);

        txtFromDate.setColumns(10);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(120, 70, 90, 19);

        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(220, 70, 60, 20);

        txtToDate.setColumns(10);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(285, 70, 90, 20);

        jLabel1.setText("Period");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(14, 46, 90, 15);

        cmdPreview.setText("Felt");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(250, 150, 130, 25);

        jButton1.setText("Filer Febric");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(70, 150, 130, 25);

        jButton2.setText("Suiting");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(170, 200, 140, 25);

    }//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        GenerateReport2();         // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        GenerateReport1();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        GenerateReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("INSURANCE");
            objReportData.AddColumn("TURN_OVER");
            objReportData.AddColumn("FROM_DATE");
            objReportData.AddColumn("TO_DATE");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("INSURANCE","");
            objOpeningRow.setValue("TURN_OVER","");
            objOpeningRow.setValue("FROM_DATE","");
            objOpeningRow.setValue("TO_DATE","");
            
            
            String strSQL = "";
            //strSQL="SELECT SUM(COLUMN_9_AMT) AS INSURANCE,SUM(SD_AMT+NET_AMOUNT) AS TURN_OVER FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=2 AND INVOICE_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND COLUMN_9_AMT>0 AND CHANGED_DATE IS NULL ORDER BY INVOICE_NO";
//CLOSED ON 13/01/2021            strSQL="SELECT SUM(COLUMN_9_AMT) AS INSURANCE,SUM(SD_AMT+NET_AMOUNT) AS TURN_OVER FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=2 AND INVOICE_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND COLUMN_9_AMT>0 ORDER BY INVOICE_NO";
            strSQL="SELECT SUM(COLUMN_9_AMT) AS INSURANCE,SUM(SD_AMT+NET_AMOUNT) AS TURN_OVER FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=2 AND INVOICE_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND COLUMN_9_AMT>0 AND APPROVED=1 AND CANCELLED=0 ORDER BY INVOICE_NO";
            
            
            System.out.println(strSQL);
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
          if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                   objRow=objReportData.newRow();
                   Object[] rowData=new Object[5];
                    
                   objRow.setValue("INSURANCE",UtilFunctions.getString(rsTmp,"INSURANCE",""));
                   objRow.setValue("TURN_OVER",UtilFunctions.getString(rsTmp,"TURN_OVER",""));
                   objRow.setValue("FROM_DATE",UtilFunctions.getString(rsTmp,"FROM_DATE",""));
                   objRow.setValue("TO_DATE",UtilFunctions.getString(rsTmp,"TO_DATE",""));
                   objReportData.AddRow(objRow);
                    
                    rsTmp.next();
               }
           }
        
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
          //  int Monthtype = cmbMonthType.getSelectedIndex();
            HashMap Parameters=new HashMap();
             Parameters.put("FROM_DATE",txtFromDate.getText().trim());
             Parameters.put("TO_DATE",txtToDate.getText().trim());
           // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
           
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/rptINS.rpt",Parameters,objReportData);
       
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }  
    
     private void GenerateReport1() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("INSURANCE");
            objReportData.AddColumn("TURN_OVER");
            objReportData.AddColumn("FROM_DATE");
            objReportData.AddColumn("TO_DATE");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("INSURANCE","");
            objOpeningRow.setValue("TURN_OVER","");
            objOpeningRow.setValue("FROM_DATE","");
            objOpeningRow.setValue("TO_DATE","");
            
            
            String strSQL = "";
            //strSQL="SELECT SUM(COLUMN_9_AMT) AS INSURANCE,SUM(SD_AMT+NET_AMOUNT) AS TURN_OVER FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=2 AND INVOICE_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND COLUMN_9_AMT>0 AND CHANGED_DATE IS NULL ORDER BY INVOICE_NO";
            strSQL="SELECT SUM(NET_AMOUNT) AS TURN_OVER, ROUND(SUM(COLUMN_9_AMT),2) AS INSURANCE FROM DINESHMILLS.D_SAL_INVOICE_HEADER D WHERE INVOICE_TYPE = 3 AND INVOICE_DATE >='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND COLUMN_9_AMT > 0 ORDER BY INVOICE_DATE";
            
            System.out.println(strSQL);
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
          if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                   objRow=objReportData.newRow();
                   Object[] rowData=new Object[5];
                    
                   objRow.setValue("INSURANCE",UtilFunctions.getString(rsTmp,"INSURANCE",""));
                   objRow.setValue("TURN_OVER",UtilFunctions.getString(rsTmp,"TURN_OVER",""));
                   objRow.setValue("FROM_DATE",UtilFunctions.getString(rsTmp,"FROM_DATE",""));
                   objRow.setValue("TO_DATE",UtilFunctions.getString(rsTmp,"TO_DATE",""));
                   objReportData.AddRow(objRow);
                    
                    rsTmp.next();
               }
           }
        
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
          //  int Monthtype = cmbMonthType.getSelectedIndex();
            HashMap Parameters=new HashMap();
             Parameters.put("FROM_DATE",txtFromDate.getText().trim());
             Parameters.put("TO_DATE",txtToDate.getText().trim());
           // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
           
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/rptINS1.rpt",Parameters,objReportData);
       
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
     
     private void GenerateReport2() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("INSURANCE");
            objReportData.AddColumn("TURN_OVER");
            objReportData.AddColumn("FROM_DATE");
            objReportData.AddColumn("TO_DATE");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("INSURANCE","");
            objOpeningRow.setValue("TURN_OVER","");
            objOpeningRow.setValue("FROM_DATE","");
            objOpeningRow.setValue("TO_DATE","");
            
            
            String strSQL = "";
            //strSQL="SELECT SUM(COLUMN_9_AMT) AS INSURANCE,SUM(SD_AMT+NET_AMOUNT) AS TURN_OVER FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=2 AND INVOICE_DATE >= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE <= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND COLUMN_9_AMT>0 AND CHANGED_DATE IS NULL ORDER BY INVOICE_NO";
            strSQL="SELECT SUM(NET_AMOUNT) AS TURN_OVER, ROUND(SUM(COLUMN_9_AMT),2) AS INSURANCE FROM DINESHMILLS.D_SAL_INVOICE_HEADER D WHERE INVOICE_TYPE = 1 AND INVOICE_DATE >='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' AND INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' AND COLUMN_9_AMT > 0 ORDER BY INVOICE_DATE";
            
            System.out.println(strSQL);
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
          if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                   objRow=objReportData.newRow();
                   Object[] rowData=new Object[5];
                    
                   objRow.setValue("INSURANCE",UtilFunctions.getString(rsTmp,"INSURANCE",""));
                   objRow.setValue("TURN_OVER",UtilFunctions.getString(rsTmp,"TURN_OVER",""));
                   objRow.setValue("FROM_DATE",UtilFunctions.getString(rsTmp,"FROM_DATE",""));
                   objRow.setValue("TO_DATE",UtilFunctions.getString(rsTmp,"TO_DATE",""));
                   objReportData.AddRow(objRow);
                    
                    rsTmp.next();
               }
           }
        
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
          //  int Monthtype = cmbMonthType.getSelectedIndex();
            HashMap Parameters=new HashMap();
             Parameters.put("FROM_DATE",txtFromDate.getText().trim());
             Parameters.put("TO_DATE",txtToDate.getText().trim());
           // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
           
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/rptINS2.rpt",Parameters,objReportData);
       
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }


    private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter from Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter To Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        return true;
    }
    
    
    
}
