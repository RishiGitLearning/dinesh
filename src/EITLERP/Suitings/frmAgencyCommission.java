/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */

package EITLERP.Suitings;

/**
 *
 * @author  root
 */


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;

import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import javax.swing.JTable;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;
import java.io.File;
//import javax.swing.table.*;


public class frmAgencyCommission extends javax.swing.JApplet {
    
    //private EITLTableModel DataModel=new EITLTableModel();
    
    EITLComboModel IntervalComboModel;
    EITLTableModel DataModel;
    
    private ResultSet rsResultSet,rsResultSet1;
    private Connection Conn;
    private Statement Stmt;
    private clsVoucher objVoucher;
    //  private EITLComboModel cmbReceiptTypeModel;
    //  private EITLComboModel cmbReportTypeModel;
    
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    private clsExcelExporter exp = new clsExcelExporter();
    
    
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(850,700);
        initComponents();
        generateIntervalCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgVoucher = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblBookName = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        cmbIntervalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Processcash = new javax.swing.JButton();
        txtInterval = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtVoucherNo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDraftDate = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("AGENCY COMMISSION PROCESS & PRINTING FORM");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 810, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(5, 67, 85, 17);

        jLabel2.setText("Agency Commission Process");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 190, 17);

        txtFromDate.setNextFocusableComponent(txtToDate);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 66, 100, 27);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(263, 67, 100, 27);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 68, 60, 17);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDBLClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 140, 800, 220);

        lblBookName.setText(".");
        getContentPane().add(lblBookName);
        lblBookName.setBounds(204, 119, 280, 17);
        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(200, 40, 150, 20);

        cmbIntervalCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIntervalComboItemStateChanged(evt);
            }
        });
        cmbIntervalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntervalComboActionPerformed(evt);
            }
        });
        getContentPane().add(cmbIntervalCombo);
        cmbIntervalCombo.setBounds(120, 100, 390, 27);

        jLabel4.setText("Select Period : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 100, 130, 17);

        Processcash.setText("1. Process Agency Commission");
        Processcash.setEnabled(false);
        Processcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesscashActionPerformed(evt);
            }
        });
        getContentPane().add(Processcash);
        Processcash.setBounds(370, 70, 250, 29);

        txtInterval.setEnabled(false);
        txtInterval.setOpaque(false);
        getContentPane().add(txtInterval);
        txtInterval.setBounds(520, 100, 280, 27);

        jButton1.setText("Agency Commision CN Summary");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(20, 400, 250, 29);

        jButton2.setText("Agency Commision CN Draft");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(20, 430, 250, 29);

        jButton5.setText("Excel To Export");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(280, 370, 150, 29);

        jButton7.setText("Agency Commision CN Detail");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(20, 370, 250, 29);

        jButton3.setText("77 Parties QualityWise CheckList");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(290, 410, 300, 29);

        jButton4.setText("Credit Note Processing");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(320, 490, 250, 29);

        jLabel5.setText("Draft Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 480, 140, 17);
        getContentPane().add(txtVoucherNo);
        txtVoucherNo.setBounds(150, 490, 160, 27);

        jLabel6.setText("Last Voucher No.");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 500, 120, 17);

        txtDraftDate.setText("2019-03-31");
        txtDraftDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDraftDateActionPerformed(evt);
            }
        });
        getContentPane().add(txtDraftDate);
        txtDraftDate.setBounds(150, 470, 160, 27);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        AllPartyWiseDetail();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      try{
            
           exp.fillData(Table,new File("/root/Desktop/AgencyPartyDetail.xls"));
            //exp.fillData(TableI,new File("C://ProductionProcess.xls"));
            exp.fillData(Table,new File("D://AgencyPartyDetail.xls"));
            JOptionPane.showMessageDialog(null, "Data saved at " +
            //"'C: \\ result.xls' successfully", "Message",
           "'/root/Desktop/AgencyPartyDetail.xls' successfully in Linux PC or 'D://AgencyPartyDetail.xls' successfully in Windows PC    ", "Message",
            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }  // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    AgencyDraft();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   //   PartyWiseCreditDetail();
       AgencySummary();       
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
                    
    private void cmbIntervalComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIntervalComboItemStateChanged
        txtInterval.setText((String)cmbIntervalCombo.getSelectedItem());
        
    }//GEN-LAST:event_cmbIntervalComboItemStateChanged
    
    private void cmbIntervalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntervalComboActionPerformed
        //if(EITLERPGLOBAL.getComboCode(cmbIntervalCombo)!=0){
        
              formatGrid();
        try{
            ResultSet rs=data.getResult("SELECT *,CONCAT(CNH_PARTY_NAME,',',CNH_CITY) AS CNH_PARTY_NAME_CITY FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_TYPE='AGCOMM' AND CNH_YEAR_MON_ID = SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,10) ORDER BY CNH_SUB_ACCOUNT_CODE");
            while(!rs.isAfterLast()){
                Object[] rowData=new Object[10];
                // rowData[0]=rs.getString("");
                rowData[0]=rs.getString("CNH_SUB_ACCOUNT_CODE");
                rowData[1]=rs.getString("CNH_PARTY_NAME_CITY");
                rowData[2]=rs.getString("CNH_NET_AMT");
                rowData[3]=rs.getString("CNH_GROSS_AMT");
                rowData[4]=rs.getString("CNH_INVOICE_AMOUNT");
                rowData[5]=rs.getString("CNH_CREDIT_AMOUNT");
                rowData[6]=rs.getString("CNH_INTERVAL_CAPTION");

                
                
                DataModel.addRow(rowData);
                rs.next();
            }
            rs.close();
            
            
        }catch(SQLException sqe){sqe.printStackTrace();}
        //}
    }//GEN-LAST:event_cmbIntervalComboActionPerformed
    
    private void ProcesscashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesscashActionPerformed
      if ( ! Validate()) {
            return;
        }
        processLCDiscount();
       
    }//GEN-LAST:event_ProcesscashActionPerformed
            
    private void mouseDBLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDBLClicked
        
    }//GEN-LAST:event_mouseDBLClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
             formatGrid77();
        try{
        //    ResultSet rs=data.getResult("SELECT *,CONCAT(CNH_PARTY_NAME,',',CNH_CITY) AS CNH_PARTY_NAME_CITY FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_TYPE='AGCOMM' AND CNH_YEAR_MON_ID = SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,10) ORDER BY CNH_SUB_ACCOUNT_CODE");
           
           ResultSet rs=data.getResult("SELECT H.PARTY_CODE,D.INVOICE_NO,D.INVOICE_DATE,D.QUALITY_NO,SUM(D.GROSS_QTY) AS GROSS_QTY,SUM(D.NET_AMOUNT) AS NET_AMOUNT,D.RATE FROM DINESHMILLS.D_SAL_INVOICE_DETAIL D,DINESHMILLS.D_SAL_INVOICE_HEADER H WHERE D.INVOICE_NO = H.INVOICE_NO AND D.INVOICE_DATE = H.INVOICE_DATE AND D.INVOICE_TYPE = H.INVOICE_TYPE AND H.INVOICE_TYPE =1 AND H.APPROVED =1 AND H.CANCELLED =0 AND SUBSTRING(H.PARTY_CODE,3,2) =77 AND H.INVOICE_DATE >=(SELECT MIN(CND_INVOICE_DATE) FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='AGCOMM' AND CND_YEAR_MON_ID =SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,10) )  AND H.INVOICE_DATE <= (SELECT MAX(CND_INVOICE_DATE) FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='AGCOMM' AND CND_YEAR_MON_ID =SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,10)) GROUP BY H.PARTY_CODE,D.INVOICE_NO,D.INVOICE_DATE,D.QUALITY_NO,D.RATE ");

            
            while(!rs.isAfterLast()){
                Object[] rowData=new Object[10];
                // rowData[0]=rs.getString("");
                rowData[0]=rs.getString("PARTY_CODE");
                rowData[1]=rs.getString("INVOICE_NO");
                rowData[2]=rs.getString("INVOICE_DATE");
                rowData[3]=rs.getString("QUALITY_NO");
                rowData[4]=rs.getString("GROSS_QTY");
                rowData[5]=rs.getString("NET_AMOUNT");
                rowData[6]=rs.getString("RATE");

                
                
                DataModel.addRow(rowData);
                rs.next();
            }
            rs.close();
            
            
        }catch(SQLException sqe){sqe.printStackTrace();}
        //}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       try {
            // if(txtVoucherNo.getText().length()==1) {
            //Update this with last voucher no. of this series
                Conn=data.getConn();
                Stmt=Conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
             
            
            
            if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL)) {
            //   rsResultSet=Stmt.executeQuery("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,4) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=14 ");
               rsResultSet=Stmt.executeQuery("SELECT VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,6) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM (SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=15 ) AS A");
                String LastDocNo="";
                String LastcnvNo="";
                int draftSrNo=0;
                
                rsResultSet.first();
                while(!rsResultSet.isAfterLast() && rsResultSet.getRow()>0) {
                    LastDocNo=rsResultSet.getString("VOUCHER_NO");
                    LastcnvNo=rsResultSet.getString("CNV");
                    draftSrNo=rsResultSet.getInt("CNSRNO");
                    
                    rsResultSet.next();
                }
                
                //String LastDocNo=data.getStringValueFromDB("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL);
               txtVoucherNo.setText(LastDocNo);
              //  txtVoucherNo.setText(Lastcnsrno);
               
                txtVoucherNo.requestFocus();
             
                

                

            
            String draftNo="";
            String draftDate = txtDraftDate.getText();
            String linkNo=" /"+Integer.toString(EITLERPGLOBAL.FinYearFrom)+"-"+Integer.toString(EITLERPGLOBAL.FinYearTo);
            int linkSrNo=8100;
            int counter=1;
            
            ResultSet rsSchemeHeader =Stmt.executeQuery("SELECT CNH_NO FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,10) AND CNH_TYPE ='AGCOMM' AND CNH_FIN_ELIGIBLE ='Y' ORDER BY CNH_NO");
          //  ResultSet rsSchemeHeader=stmt.executeQuery("SELECT SCH_PARTY_CODE FROM SALES.D_SAL_SCHEME_HEADER WHERE SCH_SCHEME_ID="+schemeId+" AND SCH_SEASON_ID='"+seasonId+"' ORDER BY SCH_PARTY_CODE");
            rsSchemeHeader.first();
            if(rsSchemeHeader.getRow()>0){
                while(!rsSchemeHeader.isAfterLast()){
                    Stmt.executeUpdate("UPDATE SALES.D_CREDIT_NOTE_HEADER SET CNH_DRAFT_CR_NOTE_NO='"+draftNo+(draftSrNo+counter)+"',CNH_LINK_NO='"+(linkSrNo+counter)+linkNo+"',CNH_FIN_VOUCHER_DATE='"+draftDate+"' ,CNH_DRAFT_CR_NOTE_DATE ='"+draftDate+"',CNH_VALUE_DATE ='"+draftDate+"'  WHERE CNH_TYPE ='AGCOMM' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,10) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
                   // stmt.execute("UPDATE SALES.D_SAL_SCHEME_HEADER  SET SCH_VOUCHER_NO = CONCAT('CN',151500000 +ABS(REPLACE(RIGHT( SCH_DRAFT_CR_NOTE_NO,4),' ',''))),SCH_LEGACY_NO = ABS(REPLACE(RIGHT( SCH_DRAFT_CR_NOTE_NO,4),' ',''))   WHERE SCH_SEASON_ID='"+seasonId+"'  AND SCH_BOOK_CODE ='TR-15'");
                    Stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER  SET CNH_FIN_VOUCHER_NO = CONCAT('CN',191500000 +ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))),CNH_LEGACY_NO = ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))  WHERE CNH_TYPE ='AGCOMM' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,10) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
            
                    rsSchemeHeader.next();
                    counter++;
                    
                }
            }
            }
             
                Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_HEADER");
                Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL");
                 Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX");
                  Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_COM_DOC_DATA");
                
                
                Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_HEADER (COMPANY_ID,VOUCHER_NO,BOOK_CODE,BANK_NAME,HIERARCHY_ID,REMARKS,VOUCHER_DATE,VOUCHER_TYPE,REASON_CODE,LEGACY_NO,LEGACY_DATE,EXCLUDE_IN_ADJ) SELECT 2,CNH_FIN_VOUCHER_NO,15,'CREDIT-NOTES- CLOTH-OTH',1502,CNH_REMARKS,CNH_DRAFT_CR_NOTE_DATE,7,CNH_REASON_CODE,CNH_LEGACY_NO,CNH_VALUE_DATE,1 FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='AGCOMM' AND CNH_FIN_ELIGIBLE ='Y' AND  CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,10)");
                
                
                
                Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL (COMPANY_ID,VOUCHER_NO,SR_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO) SELECT 2,CNH_FIN_VOUCHER_NO,1,'C',CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CREDIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CNH_LINK_NO FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='AGCOMM' AND CNH_FIN_ELIGIBLE ='Y' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,10) UNION ALL SELECT 2,CNH_FIN_VOUCHER_NO,2,'D',CNH_MAIN_ACCOUNT_CODE,'',CNH_CREDIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,CNH_LINK_NO FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='AGCOMM' AND CNH_FIN_ELIGIBLE ='Y' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,10) ");
                
               
                
                Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX (COMPANY_ID,VOUCHER_NO,SR_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO) SELECT 2,CNH_FIN_VOUCHER_NO,1,'C',CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CREDIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CNH_LINK_NO FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='AGCOMM' AND CNH_FIN_ELIGIBLE ='Y' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,10) UNION ALL SELECT 2,CNH_FIN_VOUCHER_NO,2,'D',CNH_MAIN_ACCOUNT_CODE, '',CNH_CREDIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,CNH_LINK_NO FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='AGCOMM' AND CNH_FIN_ELIGIBLE ='Y' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,10) ");
                
               
                Stmt.execute("INSERT INTO  TEMP_DATABASE.L_COM_DOC_DATA SELECT 2,70,VOUCHER_NO,NOW(),USER_ID,CASE WHEN CREATOR =1 THEN 'W' ELSE 'P'  END, CASE WHEN CREATOR =0 THEN 'A' ELSE 'C'  END,'',SR_NO,0,'','0000-00-00','0000-00-00',0,'0000-00-00'  FROM DINESHMILLS.D_COM_HIERARCHY_RIGHTS A,TEMP_DATABASE.L_FIN_VOUCHER_HEADER B WHERE B.HIERARCHY_ID =1502  AND A.HIERARCHY_ID = B.HIERARCHY_ID ");
                
             //   Stmt.execute("UPDATE  TEMP_DATABASE.L_FIN_VOUCHER_HEADER SET  VOUCHER_DATE = NOW()");
        
        
        
        }
        catch(SQLException sqe){
            sqe.printStackTrace();
           
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtDraftDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDraftDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDraftDateActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Processcash;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup bgVoucher;
    private javax.swing.JComboBox cmbIntervalCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDraftDate;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInterval;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtVoucherNo;
    // End of variables declaration//GEN-END:variables
    

    
   
    public String getStrQuery1(String SubAccountCode,String CndNo) {
        
        String strQuery;
        if(!CndNo.trim().equals("")) {
            strQuery=" AND CND_NO ="+CndNo;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        }
        // }
        else {
            strQuery = " AND CND_NO ="+CndNo;
        }
        
        return strQuery;
    }
    
    private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        
        return true;
    }
    
   
    private void generateIntervalCombo(){
        IntervalComboModel=new EITLComboModel();
        IntervalComboModel.removeAllElements();
        cmbIntervalCombo.setModel(IntervalComboModel);
        try{
            ComboData combodata=new ComboData();
            combodata.Code=0;
            combodata.Text="Select Date";
            
            IntervalComboModel.addElement(combodata);
            ResultSet rs=data.getResult("SELECT DISTINCT CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='AGCOMM' ORDER BY CNH_YEAR_MON_ID DESC ");
            while(!rs.isAfterLast()){
                combodata=new ComboData();
                combodata.Text=rs.getString("CNH_YEAR_MON_ID");
                combodata.Text=rs.getString("CNH_YEAR_MON_ID")+" : "+ rs.getString("CNH_INTERVAL_CAPTION");
                
                IntervalComboModel.addElement(combodata);
                rs.next();
            }
        }catch(SQLException e){e.printStackTrace();}
    }
    
   
    private void processLCDiscount(){
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            stmt.execute("SELECT CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_INVOICE_AMOUNT,CNH_CREDIT_AMOUNT FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_TYPE='AGCOMM' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) ORDER BY CNH_SUB_ACCOUNT_CODE");
            
            generateIntervalCombo();
            
        }catch(SQLException e){e.printStackTrace();}
        
    }
    
   
    
    
    
    private void formatGrid(){
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
        
        DataModel.addColumn("Party Code");
        DataModel.addColumn("Party Name");
        DataModel.addColumn("Invoice Amount");
        DataModel.addColumn("GR Amount");
        DataModel.addColumn("Total Amount");
        DataModel.addColumn("Credit Amount");
        DataModel.addColumn("Interval Caption");

         
    }
    
       private void formatGrid77(){
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
        
        DataModel.addColumn("PARTY CODE");
        DataModel.addColumn("INVOICE NO");
        DataModel.addColumn("INVOICE DATE");
        DataModel.addColumn("QUALITY NO");
        DataModel.addColumn("GROSS QTY");
        DataModel.addColumn("NET AMOUNT");
        DataModel.addColumn("RATE");

         
    } 
  
     private void PartyWiseCreditDetail() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_INTERVAL_CAPTION");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_INTERVAL_CAPTION","");
            
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_TYPE='AGCOMM' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,10)  ORDER BY CNH_SUB_ACCOUNT_CODE";
            System.out.println(strSQL);
            
           
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CNH_INTERVAL_CAPTION",""));
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptAgsummry.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
     
     private void AgencyDraft() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CNH_MAIN_CODE");
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CNH_CITY");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_LINK_NO");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_INTERVAL_CAPTION");
            objReportData.AddColumn("CNH_ID");
            objReportData.AddColumn("CNH_DRAFT_CR_NOTE_NO");
            objReportData.AddColumn("CNH_DRAFT_CR_NOTE_DATE");
            objReportData.AddColumn("CNH_REASON_CODE");
            objReportData.AddColumn("CNH_BOOK_CODE");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_PERCENT");
            objReportData.AddColumn("CNH_VARIABLE");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_MAIN_CODE","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_CITY","");
            objOpeningRow.setValue("CNH_LINK_NO","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CNH_ID","");
            objOpeningRow.setValue("CNH_DRAFT_CR_NOTE_NO","");
            objOpeningRow.setValue("CNH_DRAFT_CR_NOTE_DATE","");
            objOpeningRow.setValue("CNH_REASON_CODE","");
            objOpeningRow.setValue("CNH_BOOK_CODE","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CNH_PERCENT","");
            objOpeningRow.setValue("CNH_VARIABLE","");
          
  
            
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE='AGCOMM' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,10)  ORDER BY CNH_SUB_ACCOUNT_CODE";
                System.out.println(strSQL);
            
           
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_MAIN_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_CODE",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_NAME",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_CITY",UtilFunctions.getString(rsTmp,"CNH_CITY",""));
                    objRow.setValue("CNH_LINK_NO",UtilFunctions.getString(rsTmp,"CNH_LINK_NO",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CNH_INTERVAL_CAPTION",""));
                    objRow.setValue("CNH_ID",UtilFunctions.getString(rsTmp,"CNH_ID",""));
                    objRow.setValue("CNH_DRAFT_CR_NOTE_NO",UtilFunctions.getString(rsTmp,"CNH_DRAFT_CR_NOTE_NO",""));
                    objRow.setValue("CNH_DRAFT_CR_NOTE_DATE",UtilFunctions.getString(rsTmp,"CNH_DRAFT_CR_NOTE_DATE",""));
                    objRow.setValue("CNH_BOOK_CODE",UtilFunctions.getString(rsTmp,"CNH_BOOK_CODE",""));
                    objRow.setValue("CNH_REASON_CODE",UtilFunctions.getString(rsTmp,"CNH_REASON_CODE",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objRow.setValue("CNH_PERCENT",UtilFunctions.getString(rsTmp,"CNH_PERCENT",""));
                    objRow.setValue("CNH_VARIABLE",UtilFunctions.getString(rsTmp,"CNH_VARIABLE",""));
                     
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
             Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptAgcommDraft.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
     
      private void AgencySummary() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME_CITY");
            objReportData.AddColumn("CNH_NET_AMT");
            objReportData.AddColumn("CNH_GROSS_AMT");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_PERCENT");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_INTERVAL_CAPTION");
            objReportData.AddColumn("CNH_LC_OPENER");
            objReportData.AddColumn("SRNO");
            objReportData.AddColumn("CNH_EXT5");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_PARTY_NAME_CITY","");
            objOpeningRow.setValue("CNH_NET_AMT","");
            objOpeningRow.setValue("CNH_GROSS_AMT","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CNH_PERCENT","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CNH_LC_OPENER","");
            objOpeningRow.setValue("SRNO","");
            objOpeningRow.setValue("CNH_EXT5","");
            
            //   String strSQL = "SELECT CND_SUB_ACCOUNT_CODE,PARTY_NAME,SUM(CND_NET_AMOUNT) AS INVOICE_AMOUNT, SUM(CND_GROSS_AMT) AS CRN_AMOUNT, SUM(CND_NET_AMOUNT) - SUM(CND_GROSS_AMT) AS TOTAL_AMOUNT,CND_PERCENT,(SUM(CND_CREDIT_AMOUNT)  -SUM(CND_DEBIT_AMOUNT) ) AS DISC_AMOUNT FROM SALES.D_CREDIT_NOTE_DETAIL1 LEFT JOIN DINESHMILLS.D_SAL_PARTY_MASTER ON CND_SUB_ACCOUNT_CODE=PARTY_CODE  WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'  GROUP BY CND_SUB_ACCOUNT_CODE";
            String strSQL = "SELECT *,CONCAT(CNH_PARTY_NAME,',',CNH_CITY) AS CNH_PARTY_NAME_CITY FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='AGCOMM' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,10) ORDER BY CNH_NO,CNH_SUB_ACCOUNT_CODE";
            System.out.println(strSQL);
            
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("SRNO",String.valueOf(Counter));
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_PARTY_NAME_CITY",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME_CITY",""));
                    objRow.setValue("CNH_NET_AMT",UtilFunctions.getString(rsTmp,"CNH_NET_AMT",""));
                    objRow.setValue("CNH_GROSS_AMT",UtilFunctions.getString(rsTmp,"CNH_GROSS_AMT",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objRow.setValue("CNH_PERCENT",UtilFunctions.getString(rsTmp,"CNH_PERCENT",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CNH_INTERVAL_CAPTION",""));
                    objRow.setValue("CNH_LC_OPENER",UtilFunctions.getString(rsTmp,"CNH_LC_OPENER",""));
                    objRow.setValue("CNH_EXT5",UtilFunctions.getString(rsTmp,"CNH_EXT5",""));
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            // Parameters.put("CND_SUB_ACCOUNT_CODE",txtPartyCode.getText().toString());
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptAgencySummary.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        } }
    
     
     
     
      private void AllPartyWiseDetail() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("CND_AGENT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_NO");
            objReportData.AddColumn("AGENT_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_INVOICE_NO");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_GROSS_QTY");
            objReportData.AddColumn("CND_NET_AMOUNT");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CN_NET_AMOUNT");
            objReportData.AddColumn("AGENT_CODE");
            objReportData.AddColumn("CN_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_GROSS_QTY");
            objReportData.AddColumn("CNH_NET_AMT");
            objReportData.AddColumn("CNH_GROSS_AMT");
            objReportData.AddColumn("CNH_CN_AMT_GIVEN");
            objReportData.AddColumn("CNH_DEBIT_AMOUNT");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CNH_EXT1");
            objReportData.AddColumn("CNH_EXT2");
            objReportData.AddColumn("CNH_EXT3");
            objReportData.AddColumn("CNH_EXT4");
            objReportData.AddColumn("CNH_EXT5");
            objReportData.AddColumn("CNH_EXT6");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_AGENT_CODE","");//0
            objOpeningRow.setValue("CNH_PARTY_NAME",""); //1
            objOpeningRow.setValue("CNH_NO",""); //1
            objOpeningRow.setValue("AGENT_CODE",""); //1
            
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE",""); //2
            objOpeningRow.setValue("CND_INVOICE_NO",""); //3
            objOpeningRow.setValue("CND_INVOICE_DATE",""); //3
            objOpeningRow.setValue("CND_LINK_NO",""); //4
            objOpeningRow.setValue("CND_GROSS_QTY",""); //5
            objOpeningRow.setValue("CND_NET_AMOUNT",""); //6
            objOpeningRow.setValue("CND_PERCENT",""); //7
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");  //8
            objOpeningRow.setValue("CNH_GROSS_QTY",""); //9
            objOpeningRow.setValue("CNH_NET_AMT",""); //10
            objOpeningRow.setValue("CNH_GROSS_AMT",""); //11
            objOpeningRow.setValue("CNH_CN_AMT_GIVEN",""); //12
            objOpeningRow.setValue("CNH_DEBIT_AMOUNT",""); //13
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT",""); //14
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT",""); //15
            objOpeningRow.setValue("CND_INTERVAL_CAPTION",""); //16
            objOpeningRow.setValue("CNH_EXT1",""); //17
            objOpeningRow.setValue("CNH_EXT2",""); //18
            objOpeningRow.setValue("CNH_EXT3",""); //19
            objOpeningRow.setValue("CNH_EXT4",""); //19
            objOpeningRow.setValue("CNH_EXT5",""); //19
            objOpeningRow.setValue("CNH_EXT6",""); //19
            objOpeningRow.setValue("CN_NET_AMOUNT",""); //19
            objOpeningRow.setValue("CN_CREDIT_AMOUNT",""); //19
            objOpeningRow.setValue("AGENT_CODE",""); //19
           
            
            //String strSQL = "SELECT A.*,B.*,SUBSTRING(CNH_NO,1,2) AS AGENT_CODE FROM SALES.D_CREDIT_NOTE_HEADER A,SALES.D_CREDIT_NOTE_DETAIL B where B.CND_TYPE='AGCOMM' AND CND_YEAR_MON_ID = CNH_YEAR_MON_ID AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,10) AND B.CND_EFFECT!=' ' AND CND_NO = CNH_NO AND  B.CND_TYPE=A.CNH_TYPE ORDER BY CNH_NO,B.CND_EFFECT,CND_SUB_ACCOUNT_CODE";
            
            String strSQL = "SELECT A.*,B.*,(CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT) AS CN_CREDIT_AMOUNT,(CND_NET_AMOUNT+CND_GROSS_AMT) AS CN_NET_AMOUNT,SUBSTRING(CNH_NO,1,6) AS AGENT_CODE FROM SALES.D_CREDIT_NOTE_HEADER A,SALES.D_CREDIT_NOTE_DETAIL B where B.CND_TYPE='AGCOMM' AND CND_YEAR_MON_ID = CNH_YEAR_MON_ID AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,10) AND B.CND_EFFECT!=' ' AND CND_NO = CNH_NO AND  B.CND_TYPE=A.CNH_TYPE ORDER BY CNH_NO,CND_SUB_ACCOUNT_CODE,CND_INVOICE_DATE,CND_INVOICE_NO,CND_EFFECT";
            
            System.out.println(strSQL);
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    Object[] rowData=new Object[21];
                    
                    objRow.setValue("CND_AGENT_CODE",UtilFunctions.getString(rsTmp,"CND_AGENT_CODE",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_NO",UtilFunctions.getString(rsTmp,"CNH_NO",""));
                    objRow.setValue("AGENT_CODE",UtilFunctions.getString(rsTmp,"AGENT_CODE",""));
            
                    objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CND_INVOICE_NO",UtilFunctions.getString(rsTmp,"CND_INVOICE_NO",""));
                    objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE",""));
                    objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                    objRow.setValue("CND_GROSS_QTY",UtilFunctions.getString(rsTmp,"CND_GROSS_QTY",""));
                    objRow.setValue("CND_NET_AMOUNT",UtilFunctions.getString(rsTmp,"CND_NET_AMOUNT",""));
                    objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                    objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                    objRow.setValue("CN_NET_AMOUNT",UtilFunctions.getString(rsTmp,"CN_NET_AMOUNT",""));
                    objRow.setValue("AGENT_CODE",UtilFunctions.getString(rsTmp,"AGENT_CODE",""));
                    objRow.setValue("CN_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CN_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_GROSS_QTY",UtilFunctions.getString(rsTmp,"CNH_GROSS_QTY",""));
                    objRow.setValue("CNH_NET_AMT",UtilFunctions.getString(rsTmp,"CNH_NET_AMT",""));
                    objRow.setValue("CNH_GROSS_AMT",UtilFunctions.getString(rsTmp,"CNH_GROSS_AMT",""));
                    objRow.setValue("CNH_CN_AMT_GIVEN",UtilFunctions.getString(rsTmp,"CNH_CN_AMT_GIVEN",""));
                    objRow.setValue("CNH_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_DEBIT_AMOUNT",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_EXT1",UtilFunctions.getString(rsTmp,"CNH_EXT1",""));
                    objRow.setValue("CNH_EXT2",UtilFunctions.getString(rsTmp,"CNH_EXT2",""));
                    objRow.setValue("CNH_EXT3",UtilFunctions.getString(rsTmp,"CNH_EXT3",""));
                    objRow.setValue("CNH_EXT4",UtilFunctions.getString(rsTmp,"CNH_EXT4",""));
                    objRow.setValue("CNH_EXT5",UtilFunctions.getString(rsTmp,"CNH_EXT5",""));
                    objRow.setValue("CNH_EXT6",UtilFunctions.getString(rsTmp,"CNH_EXT6",""));
                    objRow.setValue("CNH_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CNH_INTERVAL_CAPTION",""));
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
             Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptAgcommDetail.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
}
