/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */

package EITLERP.Suitings;

/**
 *
 * @author  root
 */


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;



import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;


public class frmLcQTRDiscount extends javax.swing.JApplet {
    
    //private EITLTableModel DataModel=new EITLTableModel();
    
    EITLComboModel IntervalComboModel;
    EITLTableModel DataModel;
    
    private ResultSet rsResultSet,rsResultSet1;
    private Connection Conn;
    private Statement Stmt;
    private clsVoucher objVoucher;
    //  private EITLComboModel cmbReceiptTypeModel;
    //  private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(675,500);
        initComponents();
        getDept();
        txtFromDate.setText("01/01/1901");
        generateIntervalCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        bgVoucher = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblBookName = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        cmbIntervalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Processcash = new javax.swing.JButton();
        txtInterval = new javax.swing.JTextField();
        txtVoucherNo = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("LC QUATERLY DISCOUNT CREDIT NOTE PROCESS & PRINTING FORM");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 666, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(5, 67, 85, 15);

        jLabel2.setText("LC Discount Credit Note Process");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 350, 15);

        txtFromDate.setNextFocusableComponent(txtToDate);
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });

        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 66, 100, 19);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(263, 67, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 68, 60, 15);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDBLClicked(evt);
            }
        });

        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 190, 648, 200);

        lblBookName.setText(".");
        getContentPane().add(lblBookName);
        lblBookName.setBounds(204, 119, 280, 15);

        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(390, 70, 148, 14);

        jButton3.setText("2. LC Detail  Draft");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(10, 150, 240, 25);

        jButton4.setText("3. Voucher Creation");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(10, 400, 200, 25);

        cmbIntervalCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIntervalComboItemStateChanged(evt);
            }
        });
        cmbIntervalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntervalComboActionPerformed(evt);
            }
        });

        getContentPane().add(cmbIntervalCombo);
        cmbIntervalCombo.setBounds(120, 120, 390, 24);

        jLabel4.setText("Select Period : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 130, 130, 15);

        Processcash.setText("1. Process LC Quater Discount ");
        Processcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesscashActionPerformed(evt);
            }
        });

        getContentPane().add(Processcash);
        Processcash.setBounds(10, 90, 290, 25);

        getContentPane().add(txtInterval);
        txtInterval.setBounds(550, 120, 90, 19);

        txtVoucherNo.setEnabled(false);
        txtVoucherNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVoucherNoActionPerformed(evt);
            }
        });
        txtVoucherNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVoucherNoFocusLost(evt);
            }
        });

        getContentPane().add(txtVoucherNo);
        txtVoucherNo.setBounds(240, 400, 140, 19);

        jButton5.setText("4. Credit Note Draft");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton5);
        jButton5.setBounds(10, 430, 200, 25);

        jButton1.setText("LC Detail , non payment ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(270, 150, 230, 25);

        jTextField1.setText("jTextField1");
        getContentPane().add(jTextField1);
        jTextField1.setBounds(500, 400, 69, 19);

    }//GEN-END:initComponents

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        // TODO add your handling code here:
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter From Date");
            txtFromDate.requestFocus();
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if(!txtFromDate.getText().substring(0,2).equals("01")) {
            JOptionPane.showMessageDialog(null,"Please Enter Valid From Date.(i.e DATE is 'O1')");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if(!txtFromDate.getText().substring(3,5).equals("01") && !txtFromDate.getText().substring(3,5).equals("04") && !txtFromDate.getText().substring(3,5).equals("07") && !txtFromDate.getText().substring(3,5).equals("10")) {
            JOptionPane.showMessageDialog(null,"Please Enter Valid From Month.(i.e MONTH in (01,04,07,10)");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else {
            txtToDate.setText("");
            if(txtFromDate.getText().substring(3,5).equals("01")){
                txtToDate.setText("31/03/"+txtFromDate.getText().substring(6,10));
                txtToDate.requestFocus();
            }
            if(txtFromDate.getText().substring(3,5).equals("04")){
                txtToDate.setText("30/06/"+txtFromDate.getText().substring(6,10));
                txtToDate.requestFocus();
            }
            if(txtFromDate.getText().substring(3,5).equals("07")){
                txtToDate.setText("30/09/"+txtFromDate.getText().substring(6,10));
                txtToDate.requestFocus();
            }
            if(txtFromDate.getText().substring(3,5).equals("10")){
                txtToDate.setText("31/12/"+txtFromDate.getText().substring(6,10));
                txtToDate.requestFocus();
            }

        }
    }//GEN-LAST:event_txtFromDateFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DraftReportNonPayment() ;     // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        LCCreditDraftReport();
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void txtVoucherNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVoucherNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVoucherNoActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            
//            if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL)) {
//                Conn=data.getConn();
//                Stmt=Conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
//                rsResultSet=Stmt.executeQuery("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=14 ");
//                String LastDocNo="";
//                rsResultSet.first();
//                while(!rsResultSet.isAfterLast() && rsResultSet.getRow()>0) {
//                    LastDocNo=rsResultSet.getString("VOUCHER_NO");
//                    rsResultSet.next();
//                }
//                
//                txtVoucherNo.setText(LastDocNo);
//                txtVoucherNo.requestFocus();
//                

                  
            
            if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL)) {
                Conn=data.getConn();
                Stmt=Conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
//                
              // rsResultSet=Stmt.executeQuery("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,4) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=14 ");
                rsResultSet=Stmt.executeQuery("SELECT VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,6) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM (SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=14 ) AS A");
                String LastDocNo="";
                String LastcnvNo="";
                int draftSrNo=0;
                rsResultSet.first();
                while(!rsResultSet.isAfterLast() && rsResultSet.getRow()>0) {
                    LastDocNo=rsResultSet.getString("VOUCHER_NO");
                    LastcnvNo=rsResultSet.getString("CNV");
                    draftSrNo=rsResultSet.getInt("CNSRNO");
                    
                    rsResultSet.next();
                }
                
                //String LastDocNo=data.getStringValueFromDB("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL);
               txtVoucherNo.setText(LastDocNo);
               txtVoucherNo.requestFocus();
             
               //     String bookCode="TR-15";
                //     String mainCode="435187";
                
                //    String draftNo="CN161400";
                String draftNo="";
                //  String draftNo="SP.RET."+seasonId+" - ";
                //     String draftNo="SSQL."+seasonId+" - ";
                
                //   String draftNo="SPL."+seasonId+" - ";
                
                //   String draftNo="BONZ. "+seasonId+" - ";
                //    String draftNo="ABD "+seasonId+" - ";
                String draftDate="2019-06-30";
                //        String draftDate="2014-2015";
                String linkNo=" /"+Integer.toString(EITLERPGLOBAL.FinYearTo)+"-"+Integer.toString(EITLERPGLOBAL.FinYearFrom);
                //   int draftSrNo=521;
                
                String linkSrNo="";
                //int reasonCode=34;
                //     int reasonCode=36;
                
                int counter=1;
                
                ResultSet rsSchemeHeader =Stmt.executeQuery("SELECT CNH_NO,CNH_SUB_ACCOUNT_CODE FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,9) AND CNH_TYPE ='LCQTR' ORDER BY CNH_SUB_ACCOUNT_CODE,CNH_NO");
                //  ResultSet rsSchemeHeader=stmt.executeQuery("SELECT SCH_PARTY_CODE FROM SALES.D_SAL_SCHEME_HEADER WHERE SCH_SCHEME_ID="+schemeId+" AND SCH_SEASON_ID='"+seasonId+"' ORDER BY SCH_PARTY_CODE");
                rsSchemeHeader.first();
                if(rsSchemeHeader.getRow()>0){
                    while(!rsSchemeHeader.isAfterLast()){
                        Stmt.executeUpdate("UPDATE SALES.D_CREDIT_NOTE_HEADER SET CNH_DRAFT_CR_NOTE_NO='"+draftNo+(draftSrNo+counter)+"',CNH_LINK_NO='"+linkNo+"' WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,9) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
                        Stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER  SET CNH_FIN_VOUCHER_NO = CONCAT('CN',191400000 +ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))),CNH_LEGACY_NO = ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))  WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,9) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
//                        rsSchemeHeader.next();
//                        counter++;
                        
                        int counter1=1;
                        ResultSet rsSchemedetail =Stmt.executeQuery("SELECT CONCAT(CND_NO,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_INVOICE_NO,CND_INVOICE_DATE) AS CND_PO FROM SALES.D_CREDIT_NOTE_DETAIL WHERE  CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,9) AND CND_TYPE ='LCQTR' AND  CND_NO='"+rsSchemeHeader.getString("CNH_NO")+"' ORDER BY CND_NO,CND_EFFECT");
                        rsSchemedetail.first();      
                             if(rsSchemedetail.getRow()>0){
                                       while(!rsSchemedetail.isAfterLast()){
                                           Stmt.executeUpdate("UPDATE SALES.D_CREDIT_NOTE_DETAIL SET CND_EXT3='"+counter1+"' WHERE CND_TYPE ='LCQTR' AND CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,9) AND  CONCAT(CND_NO,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_INVOICE_NO,CND_INVOICE_DATE)='"+rsSchemedetail.getString("CND_PO")+"'");
                        
                        rsSchemedetail.next();
                        counter1++;
                    }
                }
                         rsSchemeHeader.next();
                        counter++;                  
                    }
                }
            
            }
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_HEADER");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_HEADER (COMPANY_ID,VOUCHER_NO,BOOK_CODE,BANK_NAME,HIERARCHY_ID,REMARKS,VOUCHER_DATE,VOUCHER_TYPE,EXCLUDE_IN_ADJ) SELECT 2,CNH_FIN_VOUCHER_NO,14,'DISCOUNT JOURNAL',1618,CNH_REMARKS,CNH_DRAFT_CR_NOTE_DATE,9,1 FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('"+txtInterval.getText()+"',1,9)");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL (COMPANY_ID,VOUCHER_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,SR_NO) SELECT 2,CNH_FIN_VOUCHER_NO,CND_EFFECT,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CONCAT(CND_LINK_NO,'/',CND_LINK_YEAR),CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_EXT3  FROM SALES.D_CREDIT_NOTE_HEADER H,SALES.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CND_EFFECT = 'C' UNION SELECT DISTINCT 2,CNH_FIN_VOUCHER_NO,CNH_EFFECT,CNH_MAIN_ACCOUNT_CODE,'',CNH_CREDIT_AMOUNT+CNH_DEBIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,'','','0000-00-00',0,CNH_EXT3  FROM SALES.D_CREDIT_NOTE_HEADER H,SALES.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CNH_EFFECT = 'D' ORDER BY CNH_FIN_VOUCHER_NO,CND_EFFECT,CND_EXT3");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX (COMPANY_ID,VOUCHER_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,SR_NO) SELECT 2,CNH_FIN_VOUCHER_NO,CND_EFFECT,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CONCAT(CND_LINK_NO,'/',CND_LINK_YEAR),CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_EXT3  FROM SALES.D_CREDIT_NOTE_HEADER H,SALES.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CND_EFFECT = 'C' UNION SELECT  DISTINCT 2,CNH_FIN_VOUCHER_NO,CNH_EFFECT,CNH_MAIN_ACCOUNT_CODE,'',CNH_CREDIT_AMOUNT+CNH_DEBIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,'','','0000-00-00',0,CNH_EXT3  FROM SALES.D_CREDIT_NOTE_HEADER H,SALES.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CNH_EFFECT = 'D' ORDER BY CNH_FIN_VOUCHER_NO,CND_EFFECT,CND_EXT3");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_COM_DOC_DATA");
            
            Stmt.execute("INSERT INTO  TEMP_DATABASE.L_COM_DOC_DATA SELECT 2,89,VOUCHER_NO,NOW(),USER_ID,CASE WHEN CREATOR =1 THEN 'W' ELSE 'P'  END, CASE WHEN CREATOR =0 THEN 'A' ELSE 'C'  END,'',SR_NO,0,'','0000-00-00','0000-00-00',0,'0000-00-00'  FROM DINESHMILLS.D_COM_HIERARCHY_RIGHTS A,TEMP_DATABASE.L_FIN_VOUCHER_HEADER B WHERE B.HIERARCHY_ID =1618 AND A.HIERARCHY_ID = B.HIERARCHY_ID");            
        }
        catch(SQLException sqe){
            sqe.printStackTrace();
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void txtVoucherNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVoucherNoFocusLost
       
    }//GEN-LAST:event_txtVoucherNoFocusLost
        
    private void cmbIntervalComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIntervalComboItemStateChanged
        txtInterval.setText((String)cmbIntervalCombo.getSelectedItem());
        
    }//GEN-LAST:event_cmbIntervalComboItemStateChanged
    
    private void cmbIntervalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntervalComboActionPerformed
     //   if(EITLERPGLOBAL.getComboCode(cmbIntervalCombo)!=""){
            formatGrid();
            try{
                ResultSet rs=data.getResult("SELECT CND_SUB_ACCOUNT_CODE,CND_LC_OPENER,CND_DAYS,CND_INVOICE_NO,CND_LINK_NO,CND_INVOICE_DATE,CND_CHARGE_CODE,CND_INVOICE_AMOUNT,CND_PERCENT,CND_INTERVAL_CAPTION,CASE WHEN CND_LC_OPENER - CND_SUB_ACCOUNT_CODE = 0 THEN '' ELSE CONCAT('LC_OPENER','(',CND_LC_OPENER,')') END AS LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT FROM SALES.D_CREDIT_NOTE_DETAIL WHERE  CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,9) AND CND_EFFECT='C' AND CND_TYPE='LCQTR' ORDER BY CND_SUB_ACCOUNT_CODE,CND_INVOICE_DATE,CND_LINK_NO+0");
                while(!rs.isAfterLast()){
                    Object[] rowData=new Object[13];
                
                    rowData[0]=rs.getString("CND_MAIN_ACCOUNT_NAME");
                    rowData[1]=rs.getString("CND_LC_OPENER");
                    rowData[2]=rs.getString("CND_SUB_ACCOUNT_CODE");
                    rowData[3]=rs.getString("CND_LINK_NO");
                    rowData[4]=rs.getString("CND_INVOICE_DATE");
                    rowData[5]=rs.getString("CND_INVOICE_AMOUNT");
                    rowData[6]=rs.getString("CND_PERCENT");
                    rowData[7]=rs.getString("CND_BOOK_CODE");
                    rowData[8]=rs.getString("CND_DAYS");
                    rowData[9]=rs.getString("CND_DEBIT_AMOUNT");
                    rowData[10]=rs.getString("CND_CREDIT_AMOUNT");
                    rowData[11]=rs.getString("CND_LC_OPENER");
                    
                    
                    
                    DataModel.addRow(rowData);
                    rs.next();
                }
                rs.close();
          
            }catch(SQLException sqe){sqe.printStackTrace();

        }
        
        
  
    }//GEN-LAST:event_cmbIntervalComboActionPerformed
    
    private void ProcesscashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesscashActionPerformed
        if ( ! Validate()) {
            return;
        }
        processLCQTRDiscount();
        // TODO add your handling code here:
    }//GEN-LAST:event_ProcesscashActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    
       DraftReport();     // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
        
    private void mouseDBLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDBLClicked
        
    }//GEN-LAST:event_mouseDBLClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Processcash;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup bgVoucher;
    private javax.swing.JComboBox cmbIntervalCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInterval;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtVoucherNo;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CND_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_BOOK_CODE");
            objReportData.AddColumn("CND_RC_VOUCHER_NO");
            objReportData.AddColumn("CND_RC_VOUCHER_DATE");
            objReportData.AddColumn("CND_RC_FIN_VOUCHER_NO");
            objReportData.AddColumn("CND_DAYS");
            objReportData.AddColumn("CND_DEBIT_AMOUNT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_LINK_NO","");
            objOpeningRow.setValue("CND_INVOICE_DATE","");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CND_PERCENT","");
            objOpeningRow.setValue("CND_BOOK_CODE","");
            objOpeningRow.setValue("CND_RC_VOUCHER_NO","");
            objOpeningRow.setValue("CND_RC_VOUCHER_DATE","");
            objOpeningRow.setValue("CND_RC_FIN_VOUCHER_NO","");
            objOpeningRow.setValue("CND_DAYS","");
            objOpeningRow.setValue("CND_DEBIT_AMOUNT","");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            
            String strSQL = "SELECT * FROM D_CREDIT_NOTE_DETAIL WHERE CND_TYPE='LCQTR'";
        
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CND_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_NAME",""));
                    objRow.setValue("CND_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                    objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_CHARGE_CODE",""));
                    objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                    objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                    objRow.setValue("CND_BOOK_CODE",UtilFunctions.getString(rsTmp,"CND_BOOK_CODE",""));
                    objRow.setValue("CND_RC_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_NO",""));
                    objRow.setValue("CND_RC_VOUCHER_DATE",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_DATE",""));
                    objRow.setValue("CND_RC_FIN_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_RC_FIN_VOUCHER_NO",""));
                    objRow.setValue("CND_DAYS",UtilFunctions.getString(rsTmp,"CND_DAYS",""));
                    objRow.setValue("CND_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_DEBIT_AMOUNT",""));
                    objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                    objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            //Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
       //     objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/LC.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    public String getStrQuery(String SubAccountCode,String MainAccountCode) {
        
        String strQuery;
        if(!MainAccountCode.trim().equals("")) {
            strQuery=" AND CND_MAIN_ACCOUNT_CODE ="+MainAccountCode;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        }
        // }
        else {
            strQuery = " AND CND_MAIN_ACCOUNT_CODE ="+MainAccountCode ;
        }
        
        return strQuery;
    }
    
    
    private void DraftReportNonPayment() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CND_NO");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CND_BOOK_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_LINK_YEAR");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_CHARGE_CODE");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_DEBIT_AMOUNT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_VALUE_DATE");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CND_LC_OPENER");
            objReportData.AddColumn("CND_RC_VOUCHER_NO");
            objReportData.AddColumn("CND_FIN_VOUCHER_NO");
            objReportData.AddColumn("CND_DAYS");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_NO","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_BOOK_CODE","");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_LINK_NO","");
            objOpeningRow.setValue("CND_LINK_YEAR","");
            objOpeningRow.setValue("CND_INVOICE_DATE","");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CND_CHARGE_CODE","");
            objOpeningRow.setValue("CND_PERCENT","");
            objOpeningRow.setValue("CND_DEBIT_AMOUNT","");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CND_VALUE_DATE","");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CND_LC_OPENER","");
            objOpeningRow.setValue("CND_RC_VOUCHER_NO","");
            objOpeningRow.setValue("CND_FIN_VOUCHER_NO","");
            objOpeningRow.setValue("CND_DAYS","");
            
            
            //         String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0";
            // String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_BOOK_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_DATE,CASE WHEN CND_EFFECT ='D' THEN 0 ELSE CND_INVOICE_AMOUNT END AS CND_INVOICE_AMOUNT,CASE WHEN CND_EFFECT ='D' THEN 0 ELSE CND_CHARGE_CODE END AS CND_CHARGE_CODE,CASE WHEN CND_EFFECT ='D' THEN 0 CND_PERCENT ELSE END AS CND_PERCENT,CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) ORDER BY SUBSTRING(CND_NO,9,6)+0,CND_SUB_ACCOUNT_CODE,CND_NO,CND_VALUE_DATE,CND_EFFECT DESC,CND_LINK_NO+0";
            //  System.out.println(strSQL);
            
            String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_LC_OPENER,CND_RC_VOUCHER_NO,CND_FIN_VOUCHER_NO,CND_DAYS,CND_SUB_ACCOUNT_CODE,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_DATE, CND_INVOICE_AMOUNT , CND_CHARGE_CODE , CND_PERCENT,CND_BOOK_CODE, CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CND_TYPE='LCQTR' AND CND_CREDIT_AMOUNT = 0 ORDER BY  CND_NO,CND_SUB_ACCOUNT_CODE,CND_INVOICE_DATE,CND_INVOICE_NO,CND_VALUE_DATE,CND_EFFECT DESC,CND_LINK_NO+0";
            System.out.println(strSQL);
            
            //   String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE FROM SALES.D_CREDIT_NOTE_DETAIL WHERE ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0,CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
            
            
            // "WHERE (CND_INOVICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+"" +
            // "AND CND_INOVICE_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"')"+
            // "ORDER BY CND_INOVICE_DATE";
            
            //"AND (A.RECEIPT_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+
            //"AND A.RECEIPT_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' ) ";  
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CND_NO",UtilFunctions.getString(rsTmp,"CND_NO",""));
                    objRow.setValue("CND_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_NAME",""));
                    objRow.setValue("CND_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CND_BOOK_CODE",UtilFunctions.getString(rsTmp,"CND_BOOK_CODE",""));
                    objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                    // objRow.setValue("CND_INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","")));
                    objRow.setValue("CND_LINK_YEAR",UtilFunctions.getString(rsTmp,"CND_LINK_YEAR",""));
                    objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE",""));
                    objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                    objRow.setValue("CND_CHARGE_CODE",UtilFunctions.getString(rsTmp,"CND_CHARGE_CODE",""));
                    objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                    objRow.setValue("CND_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_DEBIT_AMOUNT",""));
                    objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                    objRow.setValue("CND_VALUE_DATE",UtilFunctions.getString(rsTmp,"CND_VALUE_DATE",""));
                    objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                    objRow.setValue("CND_LC_OPENER",UtilFunctions.getString(rsTmp,"CND_LC_OPENER",""));
                    objRow.setValue("CND_RC_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_NO",""));
                    objRow.setValue("CND_FIN_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_FIN_VOUCHER_NO",""));
                    objRow.setValue("CND_DAYS",UtilFunctions.getString(rsTmp,"CND_DAYS",""));
                    
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptLCQTRnonpayment.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    public String getStrQuery1(String SubAccountCode,String CndNo) {
        
        String strQuery;
        if(!CndNo.trim().equals("")) {
            strQuery=" AND CND_NO ="+CndNo;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        }
        // }
        else {
            strQuery = " AND CND_NO ="+CndNo;
        }
        
        return strQuery;
    }
    
    private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        
        return true;
    }
    
    
    private void generateIntervalCombo(){
        IntervalComboModel=new EITLComboModel();
        IntervalComboModel.removeAllElements();
        cmbIntervalCombo.setModel(IntervalComboModel);
        try{
            ComboData combodata=new ComboData();
            //combodata.Code=0;
            combodata.strCode="";
            combodata.Text="Select Date";
            
            IntervalComboModel.addElement(combodata);
            ResultSet rs=data.getResult("SELECT DISTINCT CND_YEAR_MON_ID,CND_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='LCQTR' ORDER BY CND_YEAR_MON_ID DESC ");
            while(!rs.isAfterLast()){
                combodata=new ComboData();
                combodata.strCode=rs.getString("CND_YEAR_MON_ID");
                // combodata.strCode=rs.getString("SCHEME_NAME");
                //  combodata.Text=rs.getString("CND_INTERVAL_CAPTION")+"-"+rs.getString("CND_YEAR_MON_ID");
                combodata.Text=rs.getString("CND_YEAR_MON_ID")+" : "+ rs.getString("CND_INTERVAL_CAPTION");
                
                IntervalComboModel.addElement(combodata);
                rs.next();
            }
        }catch(SQLException e){e.printStackTrace();}
    }
    
    private void processLCQTRDiscount(){
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
          stmt.execute("TRUNCATE TABLE SALES.TMP_LC_CREDITNOTETEST");
            
            stmt.execute("INSERT INTO SALES.TMP_LC_CREDITNOTETEST (LCN_VOUCHER_NO,LCN_VOUCHER_DATE,LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_INVOICE_AMOUNT,LCN_AMOUNT,LCN_RC_VOUCHER,LCN_RC_VOU_DATE,LCN_LINK_NO,LCN_MATCHED_DATE,LCN_MATCHED,LCN_BOOK_CODE,LCN_LC_OPENER) SELECT A.VOUCHER_NO,VOUCHER_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,EFFECT,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,AMOUNT,GRN_NO,GRN_DATE,A.LINK_NO,MATCHED_DATE,MATCHED,BOOK_CODE,LC_OPENER_CODE FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B,(SELECT PARTY_CODE,LC_OPENER_CODE,MAX(EXP_DATE) AS EXP_DATE  FROM  DINESHMILLS.D_SAL_POLICY_LC_MASTER A GROUP BY PARTY_CODE,LC_OPENER_CODE) AS C WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.CANCELLED =0 AND B.APPROVED =1 AND SUB_ACCOUNT_CODE =PARTY_CODE AND VOUCHER_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND VOUCHER_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'SJ' AND MAIN_ACCOUNT_CODE =210027");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE LCN_SUB_ACCOUNT_CODE NOT IN  (619913,319907,549901,559901,279965,739901,739990,317707,159990,159991,439911,617714)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST ,DINESHMILLS.D_SAL_INVOICE_HEADER SET LCN_CHARGE_CODE = PAYMENT_TERM_CODE WHERE LCN_INVOICE_NO  = INVOICE_NO AND  LCN_INVOICE_DATE  = INVOICE_DATE");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE SUBSTRING(LCN_CHARGE_CODE,1,1)  IN (1,2,3,4,5,6,8,9)");
            
            
            
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM81");
            
            stmt.execute("INSERT INTO  TEMP_DATABASE.TM81 SELECT A.LINK_NO,SUB_ACCOUNT_CODE,VOUCHER_DATE,VALUE_DATE,A.VOUCHER_NO,LEGACY_NO,''FROM FINANCE.D_FIN_VOUCHER_DETAIL A, FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.CANCELLED =0 AND B.APPROVED =1  AND SUBSTRING(SUB_ACCOUNT_CODE,3,2) IN (99,77) AND VOUCHER_DATE >='2014-01-01' AND SUBSTRING(A.VOUCHER_NO,1,2) IN ('RC','JV') AND MAIN_ACCOUNT_CODE =210027  AND A.LINK_NO !=''  UNION ALL SELECT AGENT_SR,SUB_ACCOUNT_CODE,DOC_DATE,VOUCHER_DATE,VOUCHER_NO,A.DOC_NO,'' FROM FINANCE.D_FIN_DR_ADJ_DETAIL A,FINANCE.D_FIN_DR_ADJ_HEADER B  WHERE A.DOC_NO = B.DOC_NO  AND B.CANCELLED =0 AND B.APPROVED =1 AND DOC_DATE >='2014-01-01'  AND MAIN_ACCOUNT_CODE =210027 AND SUBSTRING(A.VOUCHER_NO,1,2) IN ('RC','CN','JV','CR','M1') AND B.REMARKS NOT LIKE ('%Debit Note%') AND AGENT_SR !='' AND SUBSTRING(SUB_ACCOUNT_CODE,3,2) IN (99,77) AND HIERARCHY_ID  !=1277");
            
            
            
            
            
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");
            
            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT COL01,COUNT(*),MAX(COL04),'' FROM  TEMP_DATABASE.TM81 GROUP BY COL01 ");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80 A ,TEMP_DATABASE.TM81 B  SET B.COL07 =1  WHERE A.COL01 = B.COL01 AND A.COL03 = B.COL04");
            
            stmt.execute("DELETE FROM  TEMP_DATABASE.TM81 WHERE COL07 =''");
            
            
            
              stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");
 
              stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT COL01,COUNT(*),MAX(COL05),'' FROM  TEMP_DATABASE.TM81 GROUP BY COL01");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80 A ,TEMP_DATABASE.TM81 B  SET B.COL07 =2 WHERE A.COL01 = B.COL01 AND A.COL03 = B.COL05");

            stmt.execute("DELETE FROM  TEMP_DATABASE.TM81 WHERE COL07 =1");
            
         
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81,SALES.TMP_LC_CREDITNOTETEST  SET LCN_RC_VOUCHER = COL05,LCN_RC_VALUE_DATE = COL04,EXT1=COL06,LCN_RC_VOU_DATE= COL03 WHERE COL01 = LCN_LINK_NO");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST  SET LCN_DAY = EXTRACT(DAY FROM LCN_VOUCHER_DATE), LCN_MONTH =EXTRACT(MONTH FROM LCN_VOUCHER_DATE), LCN_YEAR = EXTRACT(YEAR FROM LCN_VOUCHER_DATE)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_INTERVAL = CASE WHEN  LCN_MONTH IN (1,2,3)   THEN 'QTR01'WHEN LCN_MONTH IN (4,5,6)   THEN 'QTR02' WHEN LCN_MONTH IN (7,8,9)   THEN 'QTR03' WHEN LCN_MONTH IN (10,11,12)   THEN 'QTR04'  END");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET EXT2 = CASE WHEN  LCN_MONTH IN (4,5,6,7,8,9,10,11,12) THEN LCN_YEAR+1  WHEN LCN_MONTH IN (1,2,3)   THEN LCN_YEAR -1 END");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_YEAR_MON_ID = CONCAT(LCN_YEAR,LCN_INTERVAL)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_BANK_TR_CODE = SUBSTRING(LCN_RC_VOUCHER,5,2)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_BANK_TR_CODE = 88 WHERE SUBSTRING(LCN_RC_VOUCHER,1,2) ='CN'");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_NO = CONCAT(LCN_LC_OPENER,LCN_YEAR_MON_ID)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_INTERVAL_CAPTION = CASE WHEN  LCN_MONTH IN (1,2,3)   THEN CONCAT( 'FROM  01/01/',LCN_YEAR, '   TO 31/03/',LCN_YEAR) WHEN LCN_MONTH IN (4,5,6)   THEN CONCAT( 'FROM  01/04/',LCN_YEAR, '   TO 30/06/',LCN_YEAR)  WHEN LCN_MONTH IN (7,8,9)   THEN CONCAT( 'FROM  01/07/',LCN_YEAR, '   TO 30/09/',LCN_YEAR) WHEN LCN_MONTH IN (10,11,12)   THEN CONCAT( 'FROM  01/10/',LCN_YEAR, '   TO 31/12/',LCN_YEAR)     END ");
      
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_EFFECT = 'C'");
 
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET  LCN_DAY_DIFF  = DATEDIFF(LCN_RC_VALUE_DATE,LCN_INVOICE_DATE)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET  LCN_DAY_DIFF  = DATEDIFF(LCN_RC_VALUE_DATE,LCN_INVOICE_DATE)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET  LCN_PER  = CASE WHEN LCN_DAY_DIFF <=15 THEN 3 WHEN LCN_DAY_DIFF >=16 AND LCN_DAY_DIFF <=30  THEN 1.5 WHEN LCN_DAY_DIFF >=31 AND LCN_DAY_DIFF <=45  THEN 0 WHEN LCN_DAY_DIFF >=46   THEN 0 END WHERE LCN_RC_VALUE_DATE !='0000-00-00'");
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET  LCN_PER  = CASE WHEN LCN_DAY_DIFF <=15 THEN 3 WHEN LCN_DAY_DIFF >=16 AND LCN_DAY_DIFF <=30  THEN 3 WHEN LCN_DAY_DIFF >=31 AND LCN_DAY_DIFF <=45  THEN 3 WHEN LCN_DAY_DIFF >=46   THEN 0 END WHERE LCN_RC_VALUE_DATE !='0000-00-00' AND LCN_YEAR_MON_ID = '2016QTR04' ");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_CREDIT_AMOUNT = ROUND((LCN_PER*LCN_AMOUNT)/100,0)");
            

            stmt.execute("UPDATE  SALES.TMP_LC_CREDITNOTETEST,DINESHMILLS.D_SAL_PARTY_MASTER SET LCN_LC_NAME = PARTY_NAME WHERE PARTY_CODE = LCN_SUB_ACCOUNT_CODE");
 
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE = 'LCQTR' AND CND_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM  SALES.TMP_LC_CREDITNOTETEST)");
             
            
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_PERCENT,CND_BOOK_CODE,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION)  SELECT DISTINCT 3,LCN_NO,'LCQTR',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_AMOUNT,LCN_PER,LCN_BANK_TR_CODE,LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,LCN_DEBIT_AMOUNT,LCN_CREDIT_AMOUNT,EXT1,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION FROM SALES.TMP_LC_CREDITNOTETEST  ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_LINK_NO");
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE = 'LCQTR' AND CNH_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM  SALES.TMP_LC_CREDITNOTETEST)") ;
  
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_DEBIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_EXT3) SELECT CND_ID,CND_NO,CND_TYPE,435091,210027,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),SUM(CND_CREDIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14',COUNT(*)+1 FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE = 'LCQTR' AND CND_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM  SALES.TMP_LC_CREDITNOTETEST) GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION");
           
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL SET CND_MAIN_ACCOUNT_NAME = SUBSTRING(CND_MAIN_ACCOUNT_NAME,1,20)  WHERE CND_TYPE = 'LCQTR' AND CND_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM  SALES.TMP_LC_CREDITNOTETEST)");
           
            generateIntervalCombo();
            
        }catch(SQLException e){e.printStackTrace();}
        
    }
    
    // private void DisplayData(){
    //   try {
    
    //      txtCheckList.setText(objVoucher.objPayment.getAttribute("VOUCHER_NO").getString());
    //DoNotEvaluate=true;
    //  }
    //   }
    //  catch(Exception e){
    
    //   }
    
    
    private void formatGrid(){
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
       // TableColumnModel ColModel=Table.getColumnModel();
        
        //  DataModel.addColumn("Sr.");
        DataModel.addColumn("Party Name");
        DataModel.addColumn("Main Code");
        DataModel.addColumn("Sub Code");
        DataModel.addColumn("Link No");
        DataModel.addColumn("Invoice Date");
        DataModel.addColumn("Invoice Amount");
        DataModel.addColumn("Percent");
        DataModel.addColumn("Book Code");
        //  DataModel.addColumn("RC Voucher No");
        //  DataModel.addColumn("RC Voucher Date");
        // DataModel.addColumn("RC Fin Voucher No");
        DataModel.addColumn("Days");
        DataModel.addColumn("Debit Amount");
        DataModel.addColumn("Credit Amount");
        
    //    Table.getColumnModel().getColumnModel(1).setMaxWidth(40);
      //  TableDesc.getColumnModel().getColumn(0).setMaxWidth(50);
    }
    
    
    
      private void LCCreditDraftReport() {
        try {
           
            
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE='LCQTR' ");
            
        //    stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE)SELECT CND_ID,CND_NO,CND_TYPE,437213,210027,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),SUM(CND_CREDIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14' FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CND_TYPE = 'LC'  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION LIMIT 1000000000000");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER SELECT CND_ID,CND_NO,CND_TYPE,437213,210027,CND_LC_OPENER,'',CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),'','','0000-00-00','','',0,SUM(CND_CREDIT_AMOUNT),'','0000-00-00','','','',CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14','','' FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CND_TYPE = 'LCQTR'  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION LIMIT 1000000000000");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER SET CNH_MAIN_ACCOUNT_CODE =435091 WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = 'LCQTR' AND CNH_SUB_ACCOUNT_CODE NOT IN (308801,278901)");
         
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER,DINESHMILLS.D_SAL_PARTY_MASTER SET CNH_PARTY_NAME = PARTY_NAME,CNH_CITY = CITY_ID  WHERE CNH_SUB_ACCOUNT_CODE = PARTY_CODE AND CNH_MAIN_CODE = MAIN_ACCOUNT_CODE AND  CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CNH_TYPE = 'LCQTR' ");
            
           
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CNH_NO");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_MAIN_CODE");
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_LINK_NO");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_BOOK_CODE");
            objReportData.AddColumn("CNH_EXT1");
            objReportData.AddColumn("CNH_EXT1");
            objReportData.AddColumn("CNH_EXT1");
           
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_NO","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_MAIN_CODE","");
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CNH_LINK_NO","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_BOOK_CODE","");
           
            
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9) AND CNH_TYPE='LCQTR' ORDER BY CNH_SUB_ACCOUNT_CODE ";
            System.out.println(strSQL);
            
         
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_NO",UtilFunctions.getString(rsTmp,"CNH_NO",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_MAIN_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_CODE",""));
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    // objRow.setValue("CND_INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","")));
                    objRow.setValue("CNH_LINK_NO",UtilFunctions.getString(rsTmp,"CNH_LINK_NO",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_BOOK_CODE",UtilFunctions.getString(rsTmp,"CNH_BOOK_CODE",""));
                    
                    
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptLCDiscountcd.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    
    
       
    private void ControlLCDiscount()
    {
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
         stmt.execute("TRUNCATE TABLE SALES.TMP_LC_CREDITNOTETEST");
            
         stmt.execute("INSERT INTO SALES.TMP_LC_CREDITNOTETEST SELECT A.VOUCHER_NO,VOUCHER_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,EFFECT,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,AMOUNT,GRN_NO,GRN_DATE, '0000-00-00',A.LINK_NO,'0000-00-00','0000-00-00','0000-00-00',MATCHED_DATE,MATCHED,  '','','',    '','','',    '','','',    '','','',    '','','',    '','','',    '','','',  BOOK_CODE,'',0,0,0,0,0,LC_OPENER_CODE FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B,(SELECT PARTY_CODE,LC_OPENER_CODE,MAX(EXP_DATE) AS EXP_DATE  FROM  DINESHMILLS.D_SAL_POLICY_LC_MASTER A GROUP BY PARTY_CODE,LC_OPENER_CODE) AS C WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.CANCELLED =0 AND B.APPROVED =1 AND SUB_ACCOUNT_CODE =PARTY_CODE AND VOUCHER_DATE >='2015-01-01' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'SJ' AND MAIN_ACCOUNT_CODE =210027 LIMIT 10000000000");
            
         stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE SUBSTRING(LCN_SUB_ACCOUNT_CODE,3,2) = 99");
            
         stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST ,DINESHMILLS.D_SAL_INVOICE_HEADER SET LCN_CHARGE_CODE = PAYMENT_TERM_CODE WHERE LCN_INVOICE_NO  = INVOICE_NO AND  LCN_INVOICE_DATE  = INVOICE_DATE");
            
         stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE SUBSTRING(LCN_CHARGE_CODE,1,1)  IN (1,2,3,4,5,6,8,9)");
            
         stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST,SALES.D_CREDIT_NOTE_DETAIL SET LCN_RC_VOUCHER = CND_RC_VOUCHER_NO,LCN_YEAR_MON_ID = CND_YEAR_MON_ID  WHERE LCN_LINK_NO = CND_LINK_NO");
            
         stmt.execute("UPDATE  SALES.TMP_LC_CREDITNOTETEST,DINESHMILLS.D_SAL_PARTY_MASTER SET LCN_LC_NAME = PARTY_NAME WHERE PARTY_CODE = LCN_SUB_ACCOUNT_CODE");
  
         stmt.execute("UPDATE  SALES.TMP_LC_CREDITNOTETEST,DINESHMILLS.D_SAL_PARTY_MASTER SET EXT1 = PARTY_NAME WHERE PARTY_CODE = LCN_LC_OPENER");
         
   
         stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE LCN_YEAR_MON_ID!=''");
            
         stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE LCN_INVOICE_DATE <'2015-04-01' AND LCN_MATCHED =1");
         
                
     
          TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("LCN_NO");
            objReportData.AddColumn("LCN_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("LCN_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("LCN_LC_NAME");
            objReportData.AddColumn("EXT1");
             objReportData.AddColumn("LCN_LINK_NO");
            objReportData.AddColumn("LCN_INVOICE_NO");
            objReportData.AddColumn("LCN_INVOICE_DATE");
            objReportData.AddColumn("LCN_LC_OPENER");
            objReportData.AddColumn("LCN_AMOUNT");
            objReportData.AddColumn("LCN_MATCHED");
            objReportData.AddColumn("LCN_MATCHED_DATE");
    
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("LCN_NO","");
            objOpeningRow.setValue("LCN_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("LCN_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("LCN_LC_NAME","");
            objOpeningRow.setValue("EXT1","");
            objOpeningRow.setValue("LCN_LC_OPENER","");
            objOpeningRow.setValue("LCN_LINK_NO","");
            objOpeningRow.setValue("LCN_INVOICE_NO","");
            objOpeningRow.setValue("LCN_INVOICE_DATE","");
            objOpeningRow.setValue("LCN_AMOUNT","");
            objOpeningRow.setValue("LCN_MATCHED","");
            objOpeningRow.setValue("CNH_MATCHED_DATE","");
           
            
            String strSQL = "SELECT LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_LC_NAME,LCN_LINK_NO,LCN_INVOICE_DATE,LCN_INVOICE_NO,LCN_LC_OPENER ,EXT1,LCN_AMOUNT,LCN_MATCHED,LCN_MATCHED_DATE,LCN_NO FROM SALES.TMP_LC_CREDITNOTETEST ORDER BY LCN_LC_OPENER,LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_LINK_NO";
            System.out.println(strSQL);
            
         
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("LCN_NO",UtilFunctions.getString(rsTmp,"LCN_NO",""));
                    objRow.setValue("LCN_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"LCN_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("LCN_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"LCN_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("LCN_LC_NAME",UtilFunctions.getString(rsTmp,"LCN_LC_NAME",""));
                    objRow.setValue("LCN_LC_OPENER",UtilFunctions.getString(rsTmp,"LCN_LC_OPENER",""));
                    objRow.setValue("EXT1",UtilFunctions.getString(rsTmp,"EXT1",""));
  
                    objRow.setValue("LCN_LINK_NO",UtilFunctions.getString(rsTmp,"LCN_LINK_NO",""));
                    objRow.setValue("LCN_INVOICE_NO",UtilFunctions.getString(rsTmp,"LCN_INVOICE_NO",""));
                    objRow.setValue("LCN_INVOICE_DATE",UtilFunctions.getString(rsTmp,"LCN_INVOICE_DATE",""));
                    objRow.setValue("LCN_AMOUNT",UtilFunctions.getString(rsTmp,"LCN_AMOUNT",""));
                    objRow.setValue("LCN_MATCHED",UtilFunctions.getString(rsTmp,"LCN_MATCHED",""));
                    objRow.setValue("LCN_MATCHED_DATE",UtilFunctions.getString(rsTmp,"LCN_MATCHED_DATE",""));
                    
                    
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptLCCONTROL.rpt",Parameters,objReportData);
            
             
         
         
         
         
         
         
         
         
         
         
         
         
         
         
                        
        }catch(SQLException e){e.printStackTrace();}
        
    }
    
    private void SetData() {
        
        if(txtVoucherNo.isEnabled()) {
            objVoucher.UseSpecificVoucherNo=true;
            objVoucher.SpecificVoucherNo=txtVoucherNo.getText();
        }
        else {
            objVoucher.UseSpecificVoucherNo=false;
        }
        objVoucher.setAttribute("VOUCHER_NO",txtVoucherNo.getText());
    }
    
    private void DraftReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CND_NO");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_LINK_YEAR");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_CHARGE_CODE");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_DEBIT_AMOUNT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_VALUE_DATE");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CND_RC_VOUCHER_NO");
            objReportData.AddColumn("CND_RC_VOUCHER_DATE");
            objReportData.AddColumn("CND_DAYS");
            objReportData.AddColumn("CND_FIN_VOUCHER_NO");
            objReportData.AddColumn("CND_BOOK_CODE");
            objReportData.AddColumn("VL");
            objReportData.AddColumn("LL");
            
            
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_NO","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_LINK_NO","");
            objOpeningRow.setValue("CND_LINK_YEAR","");
            objOpeningRow.setValue("CND_INVOICE_DATE","");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT",""); 
            objOpeningRow.setValue("CND_CHARGE_CODE","");
            objOpeningRow.setValue("CND_PERCENT","");
            objOpeningRow.setValue("CND_DEBIT_AMOUNT","");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CND_VALUE_DATE","");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CND_RC_VOUCHER_NO","");
            objOpeningRow.setValue("CND_RC_VOUCHER_DATE","");
             objOpeningRow.setValue("CND_DAYS","");
             objOpeningRow.setValue("CND_FIN_VOUCHER_NO","");
             objOpeningRow.setValue("CND_BOOK_CODE","");
             objOpeningRow.setValue("VL","");
             objOpeningRow.setValue("LL","");
         
           
  //         String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0"; 
 //          String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='CASH' AND CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0"; 
           String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE, CND_INVOICE_AMOUNT , CND_CHARGE_CODE , CND_PERCENT,CND_BOOK_CODE, CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_FIN_VOUCHER_NO,RIGHT(CND_INTERVAL_CAPTION,10)AS VL,LEFT(CND_LINK_NO,2)AS LL    FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='LCQTR' AND CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9)  AND CND_CREDIT_AMOUNT !=0 UNION ALL SELECT CNH_NO,'LC DISCOUNT STG',CNH_MAIN_ACCOUNT_CODE,'',CNH_LINK_NO, '','', '' , '' , 0.00,'', CNH_DEBIT_AMOUNT,CNH_CREDIT_AMOUNT,CNH_VALUE_DATE,CNH_INTERVAL_CAPTION,'','','','',RIGHT(CNH_INTERVAL_CAPTION,10),''   FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9)  ORDER BY  CND_NO,CND_INVOICE_DATE,CND_LINK_NO"; 
           System.out.println(strSQL);
        //   String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE FROM SALES.D_CREDIT_NOTE_DETAIL WHERE ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0,CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'"; 
           
           
           // "WHERE (CND_INOVICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+"" +
          // "AND CND_INOVICE_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"')"+
          // "ORDER BY CND_INOVICE_DATE";
            
            //"AND (A.RECEIPT_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+
            //"AND A.RECEIPT_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' ) ";
            //System.out.println("sql="+strSQL);
            
       
           ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
          if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                   objRow=objReportData.newRow();
                    
                   objRow.setValue("CND_NO",UtilFunctions.getString(rsTmp,"CND_NO",""));
                   objRow.setValue("CND_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_NAME",""));
                   objRow.setValue("CND_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_CODE",""));
                   objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                   objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                  // objRow.setValue("CND_INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","")));
                   objRow.setValue("CND_LINK_YEAR",UtilFunctions.getString(rsTmp,"CND_LINK_YEAR",""));
                   objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE",""));
                   objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                   objRow.setValue("CND_CHARGE_CODE",UtilFunctions.getString(rsTmp,"CND_CHARGE_CODE",""));
                   objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                   objRow.setValue("CND_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_DEBIT_AMOUNT",""));
                   objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                   objRow.setValue("CND_VALUE_DATE",UtilFunctions.getString(rsTmp,"CND_VALUE_DATE",""));
                   objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
             
                   objRow.setValue("CND_RC_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_NO",""));
                   objRow.setValue("CND_RC_VOUCHER_DATE",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_DATE",""));
                   objRow.setValue("CND_DAYS",UtilFunctions.getString(rsTmp,"CND_DAYS",""));
                   objRow.setValue("CND_FIN_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_FIN_VOUCHER_NO",""));
                   objRow.setValue("CND_BOOK_CODE",UtilFunctions.getString(rsTmp,"CND_BOOK_CODE",""));
                   objRow.setValue("VL",UtilFunctions.getString(rsTmp,"VL",""));
                   objRow.setValue("LL",UtilFunctions.getString(rsTmp,"LL",""));
                                        
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
               }
           }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
         //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
           // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
           // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
           // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptlcqtrdraft.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    private void getDept(){
    
        if(EITLERPGLOBAL.gUserDeptID==76 || EITLERPGLOBAL.gUserDeptID==0)
        {
            txtFromDate.setEnabled(true);
            txtToDate.setEnabled(false);
            txtToDate.setVisible(true);
            Processcash.setEnabled(true);
            jButton4.setEnabled(true);
        }
        else
        {
            txtFromDate.setEnabled(false);
            txtToDate.setEnabled(false);
            txtToDate.setVisible(true);
            Processcash.setEnabled(false);
            jButton4.setEnabled(false);       
        }
    }
    
    public String getLastDay() {
        String Date=data.getStringValueFromDB("SELECT LAST_DAY('"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"') FROM DUAL");
        return Date;
    }
    
}
