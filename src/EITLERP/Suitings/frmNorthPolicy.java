/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */

package EITLERP.Suitings;

/**
 *
 * @author  root
 */


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;

import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import javax.swing.JTable;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;
import java.io.File;
//import javax.swing.table.*;


public class frmNorthPolicy extends javax.swing.JApplet {
    
    //private EITLTableModel DataModel=new EITLTableModel();
    
    EITLComboModel IntervalComboModel;
    EITLTableModel DataModel;
    
    private ResultSet rsResultSet,rsResultSet1;
    private Connection Conn;
    private Statement Stmt;
    private clsVoucher objVoucher;
    //  private EITLComboModel cmbReceiptTypeModel;
    //  private EITLComboModel cmbReportTypeModel;
    
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    private clsExcelExporter exp = new clsExcelExporter();
    
    
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(850,700);
        initComponents();
        generateIntervalCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        bgVoucher = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblBookName = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        cmbIntervalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Processcash = new javax.swing.JButton();
        txtInterval = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("NORTH POLICY PROCESS & PRINTING FORM");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 810, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(5, 67, 85, 15);

        jLabel2.setText("North Policy Discount Process");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 190, 15);

        txtFromDate.setNextFocusableComponent(txtToDate);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 66, 100, 19);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(263, 67, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 68, 60, 15);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDBLClicked(evt);
            }
        });

        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 190, 800, 170);

        lblBookName.setText(".");
        getContentPane().add(lblBookName);
        lblBookName.setBounds(204, 119, 280, 15);

        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(390, 70, 148, 14);

        cmbIntervalCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIntervalComboItemStateChanged(evt);
            }
        });
        cmbIntervalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntervalComboActionPerformed(evt);
            }
        });

        getContentPane().add(cmbIntervalCombo);
        cmbIntervalCombo.setBounds(120, 120, 390, 24);

        jLabel4.setText("Select Period : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 130, 130, 15);

        Processcash.setText("1. North Policy Process Yearly Discount");
        Processcash.setEnabled(false);
        Processcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesscashActionPerformed(evt);
            }
        });

        getContentPane().add(Processcash);
        Processcash.setBounds(10, 90, 340, 25);

        getContentPane().add(txtInterval);
        txtInterval.setBounds(550, 120, 90, 19);

        jButton1.setText("2. North Policy Party wise Detail");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(20, 380, 340, 25);

        jButton2.setText("North Policy Discount Draft");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(380, 380, 340, 25);

        jButton5.setText("Excel To Export");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton5);
        jButton5.setBounds(270, 500, 210, 25);

        jButton3.setText("3. North Policy Discount Summary");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(20, 410, 340, 25);

        jButton4.setText("Dealer Wise Report");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(380, 410, 330, 25);

        jButton6.setText("Charge Code Wise Report");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton6);
        jButton6.setBounds(20, 440, 340, 25);

    }//GEN-END:initComponents
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        ChargeWiseReport();
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DealerWiseReport();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        YealyDiscountSummary();    // add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try{
            
            exp.fillData(Table,new File("/root/Desktop/AgencyPartyDetail.xls"));
            //exp.fillData(TableI,new File("C://ProductionProcess.xls"));
            exp.fillData(Table,new File("D://AgencyPartyDetail.xls"));
            JOptionPane.showMessageDialog(null, "Data saved at " +
            //"'C: \\ result.xls' successfully", "Message",
            "'/root/Desktop/AgencyPartyDetail.xls' successfully in Linux PC or 'D://AgencyPartyDetail.xls' successfully in Windows PC    ", "Message",
            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }  // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        YearlyDraft();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PartyWiseCreditDetail();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmbIntervalComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIntervalComboItemStateChanged
        txtInterval.setText((String)cmbIntervalCombo.getSelectedItem());
        
    }//GEN-LAST:event_cmbIntervalComboItemStateChanged
    
    private void cmbIntervalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntervalComboActionPerformed
        //if(EITLERPGLOBAL.getComboCode(cmbIntervalCombo)!=0){
        
        formatGrid();
        try{
            ResultSet rs=data.getResult("SELECT CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_INVOICE_AMOUNT,CNH_CREDIT_AMOUNT,CNH_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_TYPE='NORTH' AND CNH_YEAR_MON_ID = SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,10) ORDER BY CNH_SUB_ACCOUNT_CODE");
            while(!rs.isAfterLast()){
                Object[] rowData=new Object[5];
                // rowData[0]=rs.getString("");
                rowData[0]=rs.getString("CNH_SUB_ACCOUNT_CODE");
                rowData[1]=rs.getString("CNH_PARTY_NAME");
                rowData[2]=rs.getString("CNH_INVOICE_AMOUNT");
                rowData[3]=rs.getString("CNH_CREDIT_AMOUNT");
                rowData[4]=rs.getString("CNH_INTERVAL_CAPTION");
                
                
                DataModel.addRow(rowData);
                rs.next();
            }
            rs.close();
            
            
        }catch(SQLException sqe){sqe.printStackTrace();}
        //}
    }//GEN-LAST:event_cmbIntervalComboActionPerformed
    
    private void ProcesscashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesscashActionPerformed
        //   if ( ! Validate()) {
        //       return;
        // }
       // processYealyDiscount();
        
    }//GEN-LAST:event_ProcesscashActionPerformed
    
    private void mouseDBLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDBLClicked
        
    }//GEN-LAST:event_mouseDBLClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Processcash;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup bgVoucher;
    private javax.swing.JComboBox cmbIntervalCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInterval;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    public String getStrQuery1(String SubAccountCode,String CndNo) {
        
        String strQuery;
        if(!CndNo.trim().equals("")) {
            strQuery=" AND CND_NO ="+CndNo;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        }
        // }
        else {
            strQuery = " AND CND_NO ="+CndNo;
        }
        
        return strQuery;
    }
    
    private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        
        return true;
    }
    
    
    private void generateIntervalCombo(){
        IntervalComboModel=new EITLComboModel();
        IntervalComboModel.removeAllElements();
        cmbIntervalCombo.setModel(IntervalComboModel);
        try{
            ComboData combodata=new ComboData();
            combodata.Code=0;
            combodata.Text="Select Date";
            
            IntervalComboModel.addElement(combodata);
            ResultSet rs=data.getResult("SELECT DISTINCT CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_HEADER1 WHERE CNH_TYPE ='NORTH' AND CNH_YEAR_MON_ID = 'NORTH151601' ORDER BY CNH_YEAR_MON_ID DESC ");
            while(!rs.isAfterLast()){
                combodata=new ComboData();
                combodata.Text=rs.getString("CNH_YEAR_MON_ID");
                combodata.Text=rs.getString("CNH_YEAR_MON_ID")+" : "+ rs.getString("CNH_INTERVAL_CAPTION");
                
                IntervalComboModel.addElement(combodata);
                rs.next();
            }
        }catch(SQLException e){e.printStackTrace();}
    }
    
    private void processYealyDiscount(){
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014' ");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL1 (CND_ID,CND_TYPE,CND_YEAR_MON_ID,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_INVOICE_NO,CND_INVOICE_DATE,CND_EXT1,CND_WH_CD,CND_QLTY_IND,CND_GROSS_QTY,CND_NET_AMOUNT,CND_INVOICE_AMOUNT,CND_LINK_YEAR,CND_PERCENT,CND_EFFECT,CND_INTERVAL_CAPTION,CND_NO,CND_LC_OPENER,CND_CHARGE_CODE) SELECT SCHEME_ID,'YLYINC5566',CONCAT('YLYINC5566',SCHEME_SEASON_ID),210027,A.PARTY_CODE,INVOICE_NO,INVOICE_DATE,AGENT_SR_NO,WAREHOUSE_CODE,QUALITY_INDICATOR,TOTAL_GROSS_QTY, TOTAL_NET_AMOUNT,NET_AMOUNT,1415,0,'C',CONCAT('FROM 01/01/',SCHEME_SEASON_ID, '  TO 31/12/',SCHEME_SEASON_ID), CONCAT(A.PARTY_CODE,CONCAT('YLYINC5566',SCHEME_SEASON_ID)),A.PARTY_CODE,PAYMENT_TERM_CODE FROM DINESHMILLS.D_SAL_INVOICE_HEADER A,SALES.D_SAL_SCHEME_MASTER E,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE A.INVOICE_TYPE =1  AND SUBSTRING(A.PARTY_CODE,3,2) IN (55,66) AND A.WAREHOUSE_CODE = 1 AND A.PARTY_CODE =P.PARTY_CODE AND A.INVOICE_DATE >= SCHEME_START  AND A.INVOICE_DATE <= SCHEME_END AND SCHEME_ID=36 AND SCHEME_SEASON_ID='2014' ");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL1 (CND_ID,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_GROSS_AMT,CND_YEAR_MON_ID,CND_INVOICE_AMOUNT,CND_LINK_YEAR,CND_PERCENT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_INVOICE_NO ,CND_INVOICE_DATE,CND_EFFECT,CND_INTERVAL_CAPTION,CND_LC_OPENER) SELECT 36,'YLYINC5566',210027,MAX(SUB_ACCOUNT_CODE),SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0))  ,'YLYINC55662014',SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) ,1415,0,A.VOUCHER_NO, B.VOUCHER_DATE,A.VOUCHER_NO, B.VOUCHER_DATE,'D','FROM 01/01/2014  TO 31/12/2014',MAX(SUB_ACCOUNT_CODE) FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO  AND BOOK_CODE = 13  AND B.CANCELLED =0 AND B.APPROVED =1  AND VOUCHER_DATE >= '2014-01-01'  AND VOUCHER_DATE <= '2014-12-31' GROUP BY A.VOUCHER_NO,B.VOUCHER_DATE");
            
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_NO = CONCAT(CND_SUB_ACCOUNT_CODE,CND_YEAR_MON_ID)  WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014' ");
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'  AND SUBSTRING(CND_SUB_ACCOUNT_CODE,3,2) NOT IN  (55,66)");
            
            stmt.execute("SELECT *   FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'  AND SUBSTRING(CND_SUB_ACCOUNT_CODE,3,2) NOT IN  (55,66)");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 ,SALES.D_GROUP_PARTY  SET CND_LC_OPENER = GRP_PARTY_CODE, CND_EXT1 =GRP_PARTY_PAY_IND WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'  AND GRP_SUB_PARTY_CODE = CND_SUB_ACCOUNT_CODE AND CND_TYPE = GRP_CN_TYPE  AND GRP_PARTY_PAY_IND ='' AND CND_YEAR_MON_ID  = GRP_CN_YEAR_MON_ID");
            
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM81");
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM81 SELECT CND_ID,CND_LC_OPENER,SUM(CND_NET_AMOUNT),0,0,SUM(CND_GROSS_AMT),0 FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   GROUP BY CND_LC_OPENER");
            
            stmt.execute("SELECT * FROM TEMP_DATABASE.TM81 LIMIT 10000000000");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81,SALES.D_SAL_SCHEME_SLAB  SET COL04 = SLAB_OUTPUT WHERE COL01+0 = SLAB_SCHEME_ID+0 AND SLAB_TO >= COL03+0   AND SLAB_FROM <=COL03+0");
            
            
            stmt.execute("UPDATE DINESHMILLS.D_SAL_POLICY_LC_MASTER,TEMP_DATABASE.TM81 SET COL05 = LC_OPENER_CODE WHERE COL02 = PARTY_CODE");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81  SET COL05 = 412609 WHERE  SUBSTRING(COL02,1,2) = 41");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81  SET COL05 = 710000 WHERE  SUBSTRING(COL02,1,2) = 71");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1,TEMP_DATABASE.TM81 SET CND_PERCENT = COL04  WHERE COL02 = CND_LC_OPENER  AND  CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND COL04 !=0");
            
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1,TEMP_DATABASE.TM81 SET CND_PERCENT = COL04,CND_LC_OPENER = COL05  WHERE COL02 = CND_LC_OPENER AND  CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND COL04 =0");
            
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CREDIT_AMOUNT = CND_NET_AMOUNT * CND_PERCENT/100  WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND CND_EFFECT ='C' ");
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_DEBIT_AMOUNT = CND_GROSS_AMT * CND_PERCENT/100  WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND CND_EFFECT ='D' ");
            
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM81");
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM81 SELECT CND_ID,CND_LC_OPENER,SUM(CND_NET_AMOUNT),0,0,SUM(CND_GROSS_AMT),0 FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC5566'  AND CND_PERCENT =0 AND CND_YEAR_MON_ID  ='YLYINC55662014'   GROUP BY CND_LC_OPENER");
            
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM80");
            
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM80 SELECT CND_LC_OPENER,CND_SUB_ACCOUNT_CODE,SUM(CND_NET_AMOUNT),SUM(CND_GROSS_AMT) FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC5566'   AND CND_PERCENT =0 AND CND_YEAR_MON_ID  ='YLYINC55662014'   GROUP BY CND_LC_OPENER,CND_SUB_ACCOUNT_CODE");
            
            stmt.execute("DELETE FROM TEMP_DATABASE.TM80 WHERE COL04 != 0");
            
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM81");
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM81 SELECT 36,COL01,SUM(COL03),0,0,0,0 FROM TEMP_DATABASE.TM80 GROUP BY COL01");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81,SALES.D_SAL_SCHEME_SLAB  SET COL04 = SLAB_OUTPUT WHERE COL01+0 = SLAB_SCHEME_ID+0 AND SLAB_TO >= COL03+0   AND SLAB_FROM <=COL03+0");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81 A , TEMP_DATABASE.TM80 B SET B.COL04 = A.COL04 WHERE A.COL02 = B.COL01");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1,TEMP_DATABASE.TM80 SET CND_PERCENT = COL04  ,CND_FLAG = 'LC' WHERE COL02 = CND_SUB_ACCOUNT_CODE AND CND_LC_OPENER = COL01  AND  CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND COL04 !=0");
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CREDIT_AMOUNT = CND_NET_AMOUNT * CND_PERCENT/100  WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND CND_EFFECT ='C'  AND CND_FLAG ='LC'");
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_DEBIT_AMOUNT = CND_GROSS_AMT * CND_PERCENT/100  WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND CND_EFFECT ='D'  AND CND_FLAG ='LC'");
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_NO = CONCAT(CND_LC_OPENER,CND_YEAR_MON_ID)  WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'    AND CND_FLAG ='LC'  AND CND_PERCENT !=0");
            
            stmt.execute("DELETE  FROM SALES.D_CREDIT_NOTE_HEADER1 WHERE CNH_TYPE ='YLYINC5566'  AND CNH_YEAR_MON_ID  ='YLYINC55662014' ");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER1 (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PERCENT,CNH_CN_AMT_GIVEN,CNH_DEBIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_GROSS_QTY,CNH_NET_AMT,CNH_GROSS_AMT,CNH_MAIN_CODE,CNH_REASON_CODE,CNH_MAIN_ACCOUNT_NAME) SELECT CND_ID,CND_NO,CND_TYPE,435022,CND_LC_OPENER,CND_PERCENT,SUM(CND_CREDIT_AMOUNT),SUM(CND_DEBIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,15,SUM(CND_GROSS_QTY),SUM(CND_NET_AMOUNT),SUM(CND_GROSS_AMT),'210027',11,'RETAILER DISCOUNT' FROM SALES.D_CREDIT_NOTE_DETAIL1  WHERE  CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND CND_FLAG ='LC'  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_PERCENT,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION HAVING SUM(CND_CREDIT_AMOUNT) >0");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER1 (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PERCENT,CNH_CN_AMT_GIVEN,CNH_DEBIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_GROSS_QTY,CNH_NET_AMT,CNH_GROSS_AMT,CNH_MAIN_CODE,CNH_REASON_CODE,CNH_MAIN_ACCOUNT_NAME) SELECT CND_ID,CND_NO,CND_TYPE,435022,CND_LC_OPENER,CND_PERCENT,SUM(CND_CREDIT_AMOUNT),SUM(CND_DEBIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,15,SUM(CND_GROSS_QTY),SUM(CND_NET_AMOUNT),SUM(CND_GROSS_AMT),'210027',11,'RETAILER DISCOUNT' FROM SALES.D_CREDIT_NOTE_DETAIL1  WHERE  CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014'   AND CND_FLAG ='' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_PERCENT,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION HAVING SUM(CND_CREDIT_AMOUNT) >0");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_INVOICE_AMOUNT = CNH_NET_AMT - CNH_GROSS_AMT,CNH_CREDIT_AMOUNT = ROUND(CNH_CN_AMT_GIVEN- CNH_DEBIT_AMOUNT ,0) WHERE CNH_TYPE ='YLYINC5566'  AND CNH_YEAR_MON_ID  ='YLYINC55662014' ");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1,DINESHMILLS.D_SAL_PARTY_MASTER  SET CNH_CITY= CITY_ID,CNH_PARTY_NAME = PARTY_NAME   WHERE CNH_TYPE ='YLYINC5566'  AND CNH_YEAR_MON_ID  ='YLYINC55662014'   AND PARTY_CODE = CNH_SUB_ACCOUNT_CODE");
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014' ");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL1 (CND_ID,CND_TYPE,CND_YEAR_MON_ID,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_INVOICE_NO,CND_INVOICE_DATE,CND_EXT1,CND_WH_CD,CND_QLTY_IND,CND_GROSS_QTY,CND_NET_AMOUNT,CND_INVOICE_AMOUNT,CND_LINK_YEAR,CND_PERCENT,CND_EFFECT,CND_INTERVAL_CAPTION,CND_NO,CND_LC_OPENER,CND_CHARGE_CODE) SELECT SCHEME_ID,'YLYINC',CONCAT('YLYINC',SCHEME_SEASON_ID),210027,A.PARTY_CODE,INVOICE_NO,INVOICE_DATE,AGENT_SR_NO,WAREHOUSE_CODE,QUALITY_INDICATOR,TOTAL_GROSS_QTY, TOTAL_NET_AMOUNT,NET_AMOUNT,1415,0,'C',CONCAT('FROM 01/01/',SCHEME_SEASON_ID, '  TO 31/12/',SCHEME_SEASON_ID), CONCAT(A.PARTY_CODE,CONCAT('YLYINC',SCHEME_SEASON_ID)),A.PARTY_CODE,PAYMENT_TERM_CODE  FROM DINESHMILLS.D_SAL_INVOICE_HEADER A,SALES.D_SAL_SCHEME_MASTER E,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE A.INVOICE_TYPE =1  AND SUBSTRING(A.PARTY_CODE,3,2) NOT IN (55,66) AND A.WAREHOUSE_CODE = 1 AND A.PARTY_CODE =P.PARTY_CODE  AND A.INVOICE_DATE >= SCHEME_START  AND A.INVOICE_DATE <= SCHEME_END AND SCHEME_ID=35 AND SCHEME_SEASON_ID='2014' ");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL1 (CND_ID,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_GROSS_AMT,CND_YEAR_MON_ID,CND_NET_AMOUNT,CND_CN_AMT_GIVEN,CND_LINK_YEAR,CND_PERCENT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_INVOICE_NO ,CND_INVOICE_DATE,CND_EFFECT,CND_INTERVAL_CAPTION,CND_LC_OPENER) SELECT 35,'YLYINC',210027,MAX(SUB_ACCOUNT_CODE),SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0))  ,'YLYINC2014',SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)) ,SUM(COALESCE(CASE WHEN EFFECT ='D'   AND MAIN_ACCOUNT_CODE IN (303019,435046,435053) THEN AMOUNT END,0)),1415,0,A.VOUCHER_NO, B.VOUCHER_DATE,A.VOUCHER_NO, B.VOUCHER_DATE,'D','FROM 01/01/2014  TO 31/12/2014',MAX(SUB_ACCOUNT_CODE) FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND BOOK_CODE = 13  AND B.CANCELLED =0 AND B.APPROVED =1 AND VOUCHER_DATE >= '2014-01-01' AND VOUCHER_DATE <= '2014-12-31' GROUP BY A.VOUCHER_NO,B.VOUCHER_DATE");
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_NO = CONCAT(CND_SUB_ACCOUNT_CODE,CND_YEAR_MON_ID)  WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014' ");
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'  AND SUBSTRING(CND_SUB_ACCOUNT_CODE,3,2) IN  (55,66)");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 ,SALES.D_GROUP_PARTY  SET CND_LC_OPENER = GRP_PARTY_CODE, CND_EXT1 =GRP_PARTY_PAY_IND WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'  AND GRP_SUB_PARTY_CODE = CND_SUB_ACCOUNT_CODE AND CND_TYPE = GRP_CN_TYPE AND GRP_PARTY_PAY_IND ='' AND CND_YEAR_MON_ID  = GRP_CN_YEAR_MON_ID");
            
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM81");
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM81 SELECT CND_ID,CND_LC_OPENER,SUM(CND_NET_AMOUNT),0,0,SUM(CND_GROSS_AMT),0 FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'   GROUP BY CND_LC_OPENER");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81,SALES.D_SAL_SCHEME_SLAB  SET COL04 = SLAB_OUTPUT WHERE COL01+0 = SLAB_SCHEME_ID+0 AND SLAB_TO >= COL03+0   AND SLAB_FROM <=COL03+0");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1,TEMP_DATABASE.TM81 SET CND_PERCENT = COL04  WHERE COL02 = CND_LC_OPENER  AND  CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'   AND COL04 !=0");
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CREDIT_AMOUNT = CND_NET_AMOUNT * CND_PERCENT/100  WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'   AND CND_EFFECT ='C' ");
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_DEBIT_AMOUNT = CND_GROSS_AMT * CND_PERCENT/100  WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'   AND CND_EFFECT ='D' ");
            
            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CREDIT_AMOUNT = CND_GROSS_AMT * CND_PERCENT/100  WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'   AND CND_EFFECT ='D' ");
            
            stmt.execute("DELETE  FROM SALES.D_CREDIT_NOTE_HEADER1 WHERE CNH_TYPE ='YLYINC'  AND CNH_YEAR_MON_ID  ='YLYINC2014' ");
            
            //   stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER1 (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PERCENT,CNH_CN_AMT_GIVEN,CNH_DEBIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_GROSS_QTY,CNH_NET_AMT,CNH_GROSS_AMT,CNH_MAIN_CODE,CNH_REASON_CODE,CNH_MAIN_ACCOUNT_NAME) SELECT CND_ID,CND_NO,CND_TYPE,435022,CND_SUB_ACCOUNT_CODE,CND_PERCENT,SUM(CND_CREDIT_AMOUNT-CND_DEBIT_AMOUNT),SUM(CND_DEBIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,15,SUM(CND_GROSS_QTY),SUM(CND_NET_AMOUNT-CND_CN_AMT_GIVEN),SUM(CND_GROSS_AMT),'210027',11,'RETAILER DISCOUNT'  FROM SALES.D_CREDIT_NOTE_DETAIL1  WHERE  CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'   GROUP BY CND_ID,CND_NO,CND_TYPE,CND_SUB_ACCOUNT_CODE,CND_PERCENT,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION HAVING SUM(CND_CREDIT_AMOUNT) >0");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER1 (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PERCENT,CNH_CN_AMT_GIVEN,CNH_DEBIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_GROSS_QTY,CNH_NET_AMT,CNH_GROSS_AMT,CNH_MAIN_CODE,CNH_REASON_CODE,CNH_MAIN_ACCOUNT_NAME) SELECT CND_ID,CND_NO,CND_TYPE,435022,CND_SUB_ACCOUNT_CODE,CND_PERCENT,SUM(CND_CREDIT_AMOUNT-CND_DEBIT_AMOUNT),SUM(CND_DEBIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,15,SUM(CND_GROSS_QTY),SUM(CND_NET_AMOUNT-CND_CN_AMT_GIVEN),SUM(CND_GROSS_AMT),'210027',11,'RETAILER DISCOUNT'  FROM SALES.D_CREDIT_NOTE_DETAIL1  WHERE  CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'   GROUP BY CND_ID,CND_NO,CND_TYPE,CND_SUB_ACCOUNT_CODE,CND_PERCENT,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_INVOICE_AMOUNT = CNH_NET_AMT - CNH_GROSS_AMT,CNH_CREDIT_AMOUNT = ROUND(CNH_CN_AMT_GIVEN- CNH_DEBIT_AMOUNT ,0) WHERE CNH_TYPE ='YLYINC'  AND CNH_YEAR_MON_ID  ='YLYINC2014'");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1,DINESHMILLS.D_SAL_PARTY_MASTER  SET CNH_CITY= CITY_ID,CNH_PARTY_NAME = PARTY_NAME   WHERE CNH_TYPE ='YLYINC'  AND CNH_YEAR_MON_ID  ='YLYINC2014'   AND PARTY_CODE = CNH_SUB_ACCOUNT_CODE");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET  CND_TYPE ='YLYINC' , CND_YEAR_MON_ID  ='YLYINC2014'  WHERE CND_TYPE ='YLYINC5566'  AND CND_YEAR_MON_ID  ='YLYINC55662014' ") ;
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_PERCENT = 0 , CND_CREDIT_AMOUNT =0, CND_DEBIT_AMOUNT =0 WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'   AND SUBSTRING(CND_SUB_ACCOUNT_CODE,1,2) =15 AND  CND_SUB_ACCOUNT_CODE NOT IN (150002,158801)");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_PERCENT = 0 , CNH_CREDIT_AMOUNT =0, CNH_DEBIT_AMOUNT =0 WHERE CNH_TYPE ='YLYINC'  AND CNH_YEAR_MON_ID  ='YLYINC2014'   AND SUBSTRING(CNH_SUB_ACCOUNT_CODE,1,2) =15 AND  CNH_SUB_ACCOUNT_CODE NOT IN (150002,158801)");
            
            //stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL SELECT DISTINCT 2,LCN_NO,'LC',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,'',LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_INVOICE_AMOUNT,'',LCN_PER,LCN_BANK_TR_CODE,'',LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,'',LCN_DEBIT_AMOUNT,LCN_CREDIT_AMOUNT,LCN_VOUCHER_NO,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,'' FROM SALES.TMP_LC_CREDITNOTE   ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_LINK_NO LIMIT 10000000");
            
            
            generateIntervalCombo();
            
        }catch(SQLException e){e.printStackTrace();}
        
    }
    
    private void formatGrid(){
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
        
        DataModel.addColumn("Party Code");
        DataModel.addColumn("Party Name");
        DataModel.addColumn("Invoice Amount");
        DataModel.addColumn("Credit Amount");
        DataModel.addColumn("Interval Caption");
        
    }
    
    
    private void PartyWiseCreditDetail() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_INVOICE_NO");
            objReportData.AddColumn("CND_GROSS_QTY");
            objReportData.AddColumn("CND_NET_AMOUNT");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_GROSS_AMT");
            objReportData.AddColumn("CNH_GROSS_QTY");
            objReportData.AddColumn("CNH_NET_AMT");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_CN_AMT_GIVEN");
            objReportData.AddColumn("CNH_DEBIT_AMOUNT");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CND_CHARGE_CODE");
            
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_INVOICE_NO","");
            objOpeningRow.setValue("CND_GROSS_QTY","");
            objOpeningRow.setValue("CND_NET_AMOUNT","");
            objOpeningRow.setValue("CND_PERCENT","");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_GROSS_AMT","");
            objOpeningRow.setValue("CNH_GROSS_QTY","");
            objOpeningRow.setValue("CNH_NET_AMT","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CNH_CN_AMT_GIVEN","");
            objOpeningRow.setValue("CNH_DEBIT_AMOUNT","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CND_CHARGE_CODE","");
            
            
            // String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE='YLYINC' AND CND_INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
            String strSQL = "SELECT *,CNH_GROSS_AMT FROM SALES.D_CREDIT_NOTE_DETAIL,SALES.D_CREDIT_NOTE_HEADER1 WHERE CND_NO = CNH_NO AND CND_YEAR_MON_ID = CNH_YEAR_MON_ID AND CNH_SUB_ACCOUNT_CODE=CND_SUB_ACCOUNT_CODE AND CND_TYPE='NORTH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,11) ORDER BY CND_SUB_ACCOUNT_CODE";
            System.out.println(strSQL);
            
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CND_INVOICE_NO",UtilFunctions.getString(rsTmp,"CND_INVOICE_NO",""));
                    objRow.setValue("CND_GROSS_QTY",UtilFunctions.getString(rsTmp,"CND_GROSS_QTY",""));
                    objRow.setValue("CND_NET_AMOUNT",UtilFunctions.getString(rsTmp,"CND_NET_AMOUNT",""));
                    objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                    objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_GROSS_AMT",UtilFunctions.getString(rsTmp,"CNH_GROSS_AMT",""));
                    objRow.setValue("CNH_GROSS_QTY",UtilFunctions.getString(rsTmp,"CNH_GROSS_QTY",""));
                    objRow.setValue("CNH_NET_AMT",UtilFunctions.getString(rsTmp,"CNH_NET_AMT",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objRow.setValue("CNH_CN_AMT_GIVEN",UtilFunctions.getString(rsTmp,"CNH_CN_AMT_GIVEN",""));
                    objRow.setValue("CNH_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_DEBIT_AMOUNT",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                    objRow.setValue("CND_CHARGE_CODE",UtilFunctions.getString(rsTmp,"CND_CHARGE_CODE",""));
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            // Parameters.put("CND_SUB_ACCOUNT_CODE",txtPartyCode.getText().toString());
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptYealyDiscount.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void YearlyDraft() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CNH_MAIN_CODE");
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CNH_CITY");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_LINK_NO");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_INTERVAL_CAPTION");
            objReportData.AddColumn("CNH_DRAFT_CR_NOTE_NO");
            objReportData.AddColumn("CNH_BOOK_CODE");
            objReportData.AddColumn("CNH_EXT11");
            objReportData.AddColumn("CNH_REASON_CODE");
            objReportData.AddColumn("CNH_PERCENT");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_MAIN_CODE","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_CITY","");
            objOpeningRow.setValue("CNH_LINK_NO","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CNH_DRAFT_CR_NOTE_NO","");
            objOpeningRow.setValue("CNH_BOOK_CODE","");
            objOpeningRow.setValue("CNH_EXT11","");
            objOpeningRow.setValue("CNH_REASON_CODE","");
            objOpeningRow.setValue("CNH_PERCENT","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_HEADER1  WHERE CNH_TYPE ='NORTH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,11) GROUP BY CNH_SUB_ACCOUNT_CODE";
            System.out.println(strSQL);
            
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_MAIN_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_CODE",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_NAME",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_CITY",UtilFunctions.getString(rsTmp,"CNH_CITY",""));
                    objRow.setValue("CNH_LINK_NO",UtilFunctions.getString(rsTmp,"CNH_LINK_NO",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CNH_INTERVAL_CAPTION",""));
                    objRow.setValue("CNH_DRAFT_CR_NOTE_NO",UtilFunctions.getString(rsTmp,"CNH_DRAFT_CR_NOTE_NO",""));
                    objRow.setValue("CNH_BOOK_CODE",UtilFunctions.getString(rsTmp,"CNH_BOOK_CODE",""));
                    objRow.setValue("CNH_REASON_CODE",UtilFunctions.getString(rsTmp,"CNH_REASON_CODE",""));
                    objRow.setValue("CNH_EXT11",UtilFunctions.getString(rsTmp,"CNH_EXT11",""));
                    objRow.setValue("CNH_PERCENT",UtilFunctions.getString(rsTmp,"CNH_PERCENT",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptYearlyDiscountDraft.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    private void YealyDiscountSummary() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_NET_AMT");
            objReportData.AddColumn("CNH_GROSS_AMT");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_PERCENT");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_NET_AMT","");
            objOpeningRow.setValue("CNH_GROSS_AMT","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CNH_PERCENT","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            
            //   String strSQL = "SELECT CND_SUB_ACCOUNT_CODE,PARTY_NAME,SUM(CND_NET_AMOUNT) AS INVOICE_AMOUNT, SUM(CND_GROSS_AMT) AS CRN_AMOUNT, SUM(CND_NET_AMOUNT) - SUM(CND_GROSS_AMT) AS TOTAL_AMOUNT,CND_PERCENT,(SUM(CND_CREDIT_AMOUNT)  -SUM(CND_DEBIT_AMOUNT) ) AS DISC_AMOUNT FROM SALES.D_CREDIT_NOTE_DETAIL1 LEFT JOIN DINESHMILLS.D_SAL_PARTY_MASTER ON CND_SUB_ACCOUNT_CODE=PARTY_CODE  WHERE CND_TYPE ='YLYINC'  AND CND_YEAR_MON_ID  ='YLYINC2014'  GROUP BY CND_SUB_ACCOUNT_CODE";
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_HEADER1 WHERE CNH_TYPE ='NORTH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,11) ORDER BY CNH_SUB_ACCOUNT_CODE";
            System.out.println(strSQL);
            
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_NET_AMT",UtilFunctions.getString(rsTmp,"CNH_NET_AMT",""));
                    objRow.setValue("CNH_GROSS_AMT",UtilFunctions.getString(rsTmp,"CNH_GROSS_AMT",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objRow.setValue("CNH_PERCENT",UtilFunctions.getString(rsTmp,"CNH_PERCENT",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            // Parameters.put("CND_SUB_ACCOUNT_CODE",txtPartyCode.getText().toString());
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptYrlSummary.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    private void ChargeWiseReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("C");
            objReportData.AddColumn("PARTY_CODE");
            objReportData.AddColumn("COALESCE(CH_AMOUNT,0)");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("C","");
            objOpeningRow.setValue("PARTY_CODE","");
            objOpeningRow.setValue("COALESCE(CH_AMOUNT,0)","");
            
            String strSQL1 = "SELECT DISTINCT CND_SUB_ACCOUNT_CODE FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='YLYINC' AND CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,10)   ";
            System.out.println(strSQL1);
            
            
            
            ResultSet rsTmp1=data.getResult(strSQL1);
            rsTmp1.first();
            
            int Counter1= 0;
            
            if(rsTmp1.getRow()>0) {
                while(!rsTmp1.isAfterLast()) {
                    Counter1 ++;
                    String partyCode= UtilFunctions.getString(rsTmp1,"CND_SUB_ACCOUNT_CODE","");
                    
                    rsTmp1.next();
                    
                    String strSQL = "SELECT C,COALESCE(CH_AMOUNT,0) FROM(SELECT DISTINCT SUBSTRING(CND_CHARGE_CODE,1,1) AS C FROM SALES.D_CREDIT_NOTE_DETAIL ORDER BY SUBSTRING(CND_CHARGE_CODE,1,1)) AS B LEFT JOIN (SELECT CND_SUB_ACCOUNT_CODE,SUBSTRING(CND_CHARGE_CODE,1,1) AS CH_CODE, SUM(CND_NET_AMOUNT) - SUM(CND_GROSS_AMT) AS CH_AMOUNT  FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='YLYINC' AND CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,10) AND CND_SUB_ACCOUNT_CODE="+partyCode+" AND SUBSTRING(CND_CHARGE_CODE,1,1) IN (SELECT DISTINCT SUBSTRING(CND_CHARGE_CODE,1,1) FROM SALES.D_CREDIT_NOTE_DETAIL ORDER BY SUBSTRING(CND_CHARGE_CODE,1,1)) GROUP BY CND_SUB_ACCOUNT_CODE) AS A ON  A.CH_CODE=B.C";
                    System.out.println(strSQL);
                    
                    
                    
                    ResultSet rsTmp=data.getResult(strSQL);
                    rsTmp.first();
                    
                    int Counter = 0;
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {
                            Counter ++;
                            objRow=objReportData.newRow();
                            
                            objRow.setValue("C",UtilFunctions.getString(rsTmp,"C",""));
                            objRow.setValue("PARTY_CODE",partyCode);
                            objRow.setValue("COALESCE(CH_AMOUNT,0)",UtilFunctions.getString(rsTmp,"COALESCE(CH_AMOUNT,0)",""));
                            
                            objReportData.AddRow(objRow);
                            
                            rsTmp.next();
                        }
                    }
                }
            }
            
            
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptYRLCH.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void DealerWiseReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CND_LC_OPENER");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("SUM(CND_GROSS_QTY)");
            objReportData.AddColumn("SUM(CND_NET_AMOUNT)");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("SUM(CND_CREDIT_AMOUNT)");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CNH_CITY");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_LC_OPENER","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("SUM(CND_GROSS_QTY)","");
            objOpeningRow.setValue("SUM(CND_NET_AMOUNT)","");
            objOpeningRow.setValue("SUM(CND_CREDIT_AMOUNT)","");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CND_PERCENT","");
            objOpeningRow.setValue("CNH_CITY","");
            
            String strSQL = "SELECT CND_LC_OPENER,CND_SUB_ACCOUNT_CODE,SUM(CND_GROSS_QTY),SUM(CND_NET_AMOUNT),CND_PERCENT,SUM(CND_CREDIT_AMOUNT),CND_INTERVAL_CAPTION,CNH_PARTY_NAME,CNH_CITY FROM SALES.D_CREDIT_NOTE_DETAIL1,SALES.D_CREDIT_NOTE_HEADER1 WHERE AND CND_YEAR_MON_ID = CNH_YEAR_MON_ID AND CNH_NO = CND_NO AND CND_TYPE='NORTH' AND CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,11) AND CNH_SUB_ACCOUNT_CODE=CND_LC_OPENER AND CNH_TYPE='YLYINC5566' GROUP BY CND_SUB_ACCOUNT_CODE,CND_LC_OPENER";
            System.out.println(strSQL);
            
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CND_LC_OPENER",UtilFunctions.getString(rsTmp,"CND_LC_OPENER",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("SUM(CND_GROSS_QTY)",UtilFunctions.getString(rsTmp,"SUM(CND_GROSS_QTY)",""));
                    objRow.setValue("SUM(CND_NET_AMOUNT)",UtilFunctions.getString(rsTmp,"SUM(CND_NET_AMOUNT)",""));
                    objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("SUM(CND_CREDIT_AMOUNT)",UtilFunctions.getString(rsTmp,"SUM(CND_CREDIT_AMOUNT)",""));
                    objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                    objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                    objRow.setValue("CNH_CITY",UtilFunctions.getString(rsTmp,"CNH_CITY",""));
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptDealer.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
}
