/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */

package EITLERP.Suitings;

/**
 *
 * @author  root
 */


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;

import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import javax.swing.JTable;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;
import java.io.File;
//import javax.swing.table.*;


public class frmShahcoQReport extends javax.swing.JApplet {
    
    //private EITLTableModel DataModel=new EITLTableModel();
    
    EITLComboModel IntervalComboModel;
    EITLTableModel DataModel;
    
    private ResultSet rsResultSet,rsResultSet1;
    private Connection Conn;
    private Statement Stmt;
    private clsVoucher objVoucher;
    //  private EITLComboModel cmbReceiptTypeModel;
    //  private EITLComboModel cmbReportTypeModel;
    
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    private clsExcelExporter exp = new clsExcelExporter();
    
    
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(850,700);
        initComponents();
        getDept();
        txtFromDate.setText("01/01/1901");
        generateIntervalCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        bgVoucher = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jProgressBar1 = new javax.swing.JProgressBar();
        cmbIntervalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Processcash = new javax.swing.JButton();
        txtInterval = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Processcash1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtVoucherNo = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("SHAHCO TRADERS QUATERLY REPORT PROCESS");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 810, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(5, 67, 85, 15);

        jLabel2.setText("Shahco Traders Quaterly Process");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 220, 15);

        txtFromDate.setNextFocusableComponent(txtToDate);
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });

        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 66, 100, 19);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(263, 67, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 68, 60, 15);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDBLClicked(evt);
            }
        });

        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 190, 800, 170);

        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(390, 70, 148, 14);

        cmbIntervalCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIntervalComboItemStateChanged(evt);
            }
        });
        cmbIntervalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntervalComboActionPerformed(evt);
            }
        });

        getContentPane().add(cmbIntervalCombo);
        cmbIntervalCombo.setBounds(110, 130, 390, 24);

        jLabel4.setText("Select Period : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 130, 130, 15);

        Processcash.setText("1. Process Shahco Report");
        Processcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesscashActionPerformed(evt);
            }
        });

        getContentPane().add(Processcash);
        Processcash.setBounds(10, 90, 250, 25);

        getContentPane().add(txtInterval);
        txtInterval.setBounds(510, 130, 250, 19);

        jButton1.setText("Shahco Traders Detail Credit Note");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(20, 380, 340, 25);

        Processcash1.setText("Shahco Trader Summary ");
        Processcash1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Processcash1ActionPerformed(evt);
            }
        });

        getContentPane().add(Processcash1);
        Processcash1.setBounds(20, 410, 340, 25);

        jButton2.setText("Shahco CreditNote Draft ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(20, 440, 340, 25);

        jButton3.setText("Export to Excel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(400, 380, 270, 25);

        jButton4.setText("Voucher Creation");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(20, 480, 340, 25);

        getContentPane().add(txtVoucherNo);
        txtVoucherNo.setBounds(30, 510, 320, 19);

    }//GEN-END:initComponents

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter From Date");
            txtFromDate.requestFocus();
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if(!txtFromDate.getText().substring(0,2).equals("01")) {
            JOptionPane.showMessageDialog(null,"Please Enter Valid From Date.(i.e DATE is 'O1')");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if(!txtFromDate.getText().substring(3,5).equals("01") && !txtFromDate.getText().substring(3,5).equals("04") && !txtFromDate.getText().substring(3,5).equals("07") && !txtFromDate.getText().substring(3,5).equals("10")) {
            JOptionPane.showMessageDialog(null,"Please Enter Valid From Month.(i.e MONTH in (01,04,07,10)");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else {
            txtToDate.setText("");
            if(txtFromDate.getText().substring(3,5).equals("01")){
                txtToDate.setText("31/03/"+txtFromDate.getText().substring(6,10));
                txtToDate.requestFocus();
            }
            if(txtFromDate.getText().substring(3,5).equals("04")){
                txtToDate.setText("30/06/"+txtFromDate.getText().substring(6,10));
                txtToDate.requestFocus();
            }
            if(txtFromDate.getText().substring(3,5).equals("07")){
                txtToDate.setText("30/09/"+txtFromDate.getText().substring(6,10));
                txtToDate.requestFocus();
            }
            if(txtFromDate.getText().substring(3,5).equals("10")){
                txtToDate.setText("31/12/"+txtFromDate.getText().substring(6,10));
                txtToDate.requestFocus();
            }
            
        }
    }//GEN-LAST:event_txtFromDateFocusLost

    private void Processcash1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Processcash1ActionPerformed
        // TODO add your handling code here:
         PartyWiseSummary();
    }//GEN-LAST:event_Processcash1ActionPerformed
                        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PartyWiseCreditDetail();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmbIntervalComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIntervalComboItemStateChanged
        txtInterval.setText((String)cmbIntervalCombo.getSelectedItem());
        
    }//GEN-LAST:event_cmbIntervalComboItemStateChanged
    
    private void cmbIntervalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntervalComboActionPerformed
        //if(EITLERPGLOBAL.getComboCode(cmbIntervalCombo)!=0){
        
        formatGrid();
        try{
            ResultSet rs=data.getResult("SELECT * FROM SALES.D_CREDIT_NOTE_HEADER  WHERE  CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,12) ORDER BY CNH_SUB_ACCOUNT_CODE");
            while(!rs.isAfterLast()){
                Object[] rowData=new Object[7];
                // rowData[0]=rs.getString("");
                rowData[0]=rs.getString("CNH_SUB_ACCOUNT_CODE");
                rowData[1]=rs.getString("CNH_PARTY_NAME");
                rowData[2]=rs.getString("CNH_INVOICE_AMOUNT");
                rowData[3]=rs.getString("CNH_CREDIT_AMOUNT");
                rowData[4]=rs.getString("CNH_INTERVAL_CAPTION");
                
                
                DataModel.addRow(rowData);
                rs.next();
            }
            rs.close();
            
            
        }catch(SQLException sqe){sqe.printStackTrace();}
        //}
    }//GEN-LAST:event_cmbIntervalComboActionPerformed
    
    private void ProcesscashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesscashActionPerformed
        //   if ( ! Validate()) {
        //       return;
        // }
        processYealyDiscount();
        
    }//GEN-LAST:event_ProcesscashActionPerformed
    
    private void mouseDBLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDBLClicked
        
    }//GEN-LAST:event_mouseDBLClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     ShahcoDraft();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
               try{
             
                    exp.fillData(Table,new File("/root/Desktop/ShahcoCN.xls"));
                    exp.fillData(Table,new File("D://ShahcoCN.xls")); 
                    JOptionPane.showMessageDialog(null, "Data saved at " +
                            "'/root/Desktop/ShahacoCN.xls' successfully in Linux PC or 'D://ShahcoCN.xls' successfully in Windows PC    ", "Message",
                            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }  
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            

            if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+"  AND LEFT(VOUCHER_NO,4) = 'CN17'",FinanceGlobal.FinURL)) {
                Conn=data.getConn();
                Stmt=Conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

                rsResultSet=Stmt.executeQuery("SELECT VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,6) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM (SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,4) = 'CN17' AND SUBSTRING(VOUCHER_NO,5,2)=14 ) AS A");
                String LastDocNo="";
                String LastcnvNo="";
                int draftSrNo=0;
                rsResultSet.first();
                while(!rsResultSet.isAfterLast() && rsResultSet.getRow()>0) {
                    LastDocNo=rsResultSet.getString("VOUCHER_NO");
                    LastcnvNo=rsResultSet.getString("CNV");
                    draftSrNo=rsResultSet.getInt("CNSRNO");
                    
                    rsResultSet.next();
                }
                
               txtVoucherNo.setText(LastDocNo);
               txtVoucherNo.requestFocus();
             
               String draftNo="";
                String draftDate="2017-07-31";
                String linkNo=" /"+Integer.toString(EITLERPGLOBAL.FinYearTo)+"-"+Integer.toString(EITLERPGLOBAL.FinYearFrom);
                
                String linkSrNo="";
                
                int counter=1;
                
                ResultSet rsSchemeHeader =Stmt.executeQuery("SELECT CNH_NO,CNH_SUB_ACCOUNT_CODE FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,12) AND CNH_TYPE ='SHCQTR' ORDER BY CNH_SUB_ACCOUNT_CODE,CNH_NO");
                //  ResultSet rsSchemeHeader=stmt.executeQuery("SELECT SCH_PARTY_CODE FROM SALES.D_SAL_SCHEME_HEADER WHERE SCH_SCHEME_ID="+schemeId+" AND SCH_SEASON_ID='"+seasonId+"' ORDER BY SCH_PARTY_CODE");
                rsSchemeHeader.first();
                if(rsSchemeHeader.getRow()>0){
                    while(!rsSchemeHeader.isAfterLast()){
                        Stmt.executeUpdate("UPDATE SALES.D_CREDIT_NOTE_HEADER SET CNH_DRAFT_CR_NOTE_NO='"+draftNo+(draftSrNo+counter)+"',CNH_LINK_NO='"+linkNo+"' WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,12) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
                        Stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER  SET CNH_FIN_VOUCHER_NO = CONCAT('CN',171400000 +ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))),CNH_LEGACY_NO = ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))  WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,12) AND  CNH_NO='"+rsSchemeHeader.getString("CNH_NO")+"'");
//                        rsSchemeHeader.next();
//                        counter++;
                        
                        int counter1=1;
                        ResultSet rsSchemedetail =Stmt.executeQuery("SELECT CONCAT(CND_NO,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_INVOICE_NO,CND_INVOICE_DATE) AS CND_PO FROM SALES.D_CREDIT_NOTE_DETAIL WHERE  CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,12) AND CND_TYPE ='SHCQTR' AND  CND_NO='"+rsSchemeHeader.getString("CNH_NO")+"' ORDER BY CND_NO,CND_EFFECT");
                        rsSchemedetail.first();      
                             if(rsSchemedetail.getRow()>0){
                                       while(!rsSchemedetail.isAfterLast()){
                                           Stmt.executeUpdate("UPDATE SALES.D_CREDIT_NOTE_DETAIL SET CND_EXT3='"+counter1+"' WHERE CND_TYPE ='SHCQTR' AND CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,12) AND  CONCAT(CND_NO,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_INVOICE_NO,CND_INVOICE_DATE)='"+rsSchemedetail.getString("CND_PO")+"'");
                        
                        rsSchemedetail.next();
                        counter1++;
                    }
                }
                         rsSchemeHeader.next();
                        counter++;                  
                    }
                }
            
            }
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_HEADER");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_HEADER (COMPANY_ID,VOUCHER_NO,BOOK_CODE,BANK_NAME,HIERARCHY_ID,REMARKS,VOUCHER_DATE,VOUCHER_TYPE,EXCLUDE_IN_ADJ) SELECT 2,CNH_FIN_VOUCHER_NO,14,'DISCOUNT JOURNAL',1502,CNH_REMARKS,CNH_DRAFT_CR_NOTE_DATE,9,1 FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('"+txtInterval.getText()+"',1,12)");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL (COMPANY_ID,VOUCHER_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,SR_NO) SELECT 2,CNH_FIN_VOUCHER_NO,CND_EFFECT,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CONCAT(CND_LINK_NO,'/',CND_LINK_YEAR),CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_EXT3  FROM SALES.D_CREDIT_NOTE_HEADER H,SALES.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,12) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CND_EFFECT = 'C' UNION SELECT DISTINCT 2,CNH_FIN_VOUCHER_NO,CNH_EFFECT,CNH_MAIN_ACCOUNT_CODE,'',CNH_CREDIT_AMOUNT+CNH_DEBIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,'','','0000-00-00',0,CNH_EXT3  FROM SALES.D_CREDIT_NOTE_HEADER H,SALES.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,12) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CNH_EFFECT = 'D' ORDER BY CNH_FIN_VOUCHER_NO,CND_EFFECT,CND_EXT3");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX (COMPANY_ID,VOUCHER_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,SR_NO) SELECT 2,CNH_FIN_VOUCHER_NO,CND_EFFECT,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CND_CREDIT_AMOUNT+CND_DEBIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CONCAT(CND_LINK_NO,'/',CND_LINK_YEAR),CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_EXT3  FROM SALES.D_CREDIT_NOTE_HEADER H,SALES.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,12) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CND_EFFECT = 'C' UNION SELECT  DISTINCT 2,CNH_FIN_VOUCHER_NO,CNH_EFFECT,CNH_MAIN_ACCOUNT_CODE,'',CNH_CREDIT_AMOUNT+CNH_DEBIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,'','','0000-00-00',0,CNH_EXT3  FROM SALES.D_CREDIT_NOTE_HEADER H,SALES.D_CREDIT_NOTE_DETAIL WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,12) AND CNH_TYPE = CND_TYPE AND CND_NO = CNH_NO AND CNH_YEAR_MON_ID = CND_YEAR_MON_ID AND CNH_EFFECT = 'D' ORDER BY CNH_FIN_VOUCHER_NO,CND_EFFECT,CND_EXT3");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_COM_DOC_DATA");
            
            Stmt.execute("INSERT INTO  TEMP_DATABASE.L_COM_DOC_DATA SELECT 2,89,VOUCHER_NO,NOW(),USER_ID,CASE WHEN CREATOR =1 THEN 'W' ELSE 'P'  END, CASE WHEN CREATOR =0 THEN 'A' ELSE 'C'  END,'',SR_NO,0,'','0000-00-00','0000-00-00',0,'0000-00-00'  FROM DINESHMILLS.D_COM_HIERARCHY_RIGHTS A,TEMP_DATABASE.L_FIN_VOUCHER_HEADER B WHERE B.HIERARCHY_ID =1502 AND A.HIERARCHY_ID = B.HIERARCHY_ID");            
        
            Stmt.execute("UPDATE  TEMP_DATABASE.L_FIN_VOUCHER_HEADER SET  VOUCHER_DATE = NOW()");
            
            Stmt.execute("UPDATE  TEMP_DATABASE.L_FIN_VOUCHER_DETAIL SET  VALUE_DATE = NOW()");
            
            Stmt.execute("UPDATE  TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX SET  VALUE_DATE = NOW()");
           
        
        
        }
        catch(SQLException sqe){
            sqe.printStackTrace();
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Processcash;
    private javax.swing.JButton Processcash1;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup bgVoucher;
    private javax.swing.JComboBox cmbIntervalCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInterval;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtVoucherNo;
    // End of variables declaration//GEN-END:variables
    
    public String getStrQuery1(String SubAccountCode,String CndNo) {
        
        String strQuery;
        if(!CndNo.trim().equals("")) {
            strQuery=" AND CND_NO ="+CndNo;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        }
        // }
        else {
            strQuery = " AND CND_NO ="+CndNo;
        }
        
        return strQuery;
    }
    
    private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        
        return true;
    }
    
    
    private void generateIntervalCombo(){
        IntervalComboModel=new EITLComboModel();
        IntervalComboModel.removeAllElements();
        cmbIntervalCombo.setModel(IntervalComboModel);
        try{
            ComboData combodata=new ComboData();
            combodata.Code=0;
            combodata.Text="Select Date";
            
            IntervalComboModel.addElement(combodata);
            ResultSet rs=data.getResult("SELECT DISTINCT CND_YEAR_MON_ID,CND_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE LIKE 'SH%' ORDER BY CND_YEAR_MON_ID DESC ");
            while(!rs.isAfterLast()){
                combodata=new ComboData();
                combodata.Text=rs.getString("CND_YEAR_MON_ID");
                combodata.Text=rs.getString("CND_YEAR_MON_ID")+" : "+ rs.getString("CND_INTERVAL_CAPTION");
                
                IntervalComboModel.addElement(combodata);
                rs.next();
            }
        }catch(SQLException e){e.printStackTrace();}
    }
    
    private void processYealyDiscount(){
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            
            stmt.execute(" USE SALES");
            
            stmt.execute("TRUNCATE TABLE SALES.TMP_LC_CREDITNOTETEST");
            
            stmt.execute("INSERT INTO SALES.TMP_LC_CREDITNOTETEST (LCN_VOUCHER_NO,LCN_VOUCHER_DATE,LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_INVOICE_AMOUNT,LCN_AMOUNT,LCN_RC_VOUCHER,LCN_RC_VOU_DATE,LCN_LINK_NO,LCN_MATCHED_DATE,LCN_MATCHED,LCN_BOOK_CODE) SELECT A.VOUCHER_NO,VOUCHER_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,EFFECT,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,AMOUNT,GRN_NO,GRN_DATE,A.LINK_NO,MATCHED_DATE,MATCHED,BOOK_CODE FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.CANCELLED =0 AND B.APPROVED =1   AND VOUCHER_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  AND SUBSTRING(A.VOUCHER_NO,1,2) = 'SJ' AND MAIN_ACCOUNT_CODE =210027 AND SUB_ACCOUNT_CODE IN  ('157715','158801','158815')");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST SET LCN_EFFECT ='C'");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST ,DINESHMILLS.D_SAL_INVOICE_HEADER SET LCN_CHARGE_CODE = PAYMENT_TERM_CODE,EXT3 =WAREHOUSE_CODE WHERE LCN_INVOICE_NO  = INVOICE_NO AND  LCN_INVOICE_DATE  = INVOICE_DATE");
            
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM81");
            
            stmt.execute("INSERT INTO  TEMP_DATABASE.TM81 SELECT A.LINK_NO,SUB_ACCOUNT_CODE,VOUCHER_DATE,VALUE_DATE,A.VOUCHER_NO,LEGACY_NO,'' FROM FINANCE.D_FIN_VOUCHER_DETAIL A, FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.CANCELLED =0 AND B.APPROVED =1  AND SUB_ACCOUNT_CODE IN (157715,158801,158815) AND VOUCHER_DATE >='2015-01-01' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'RC' AND MAIN_ACCOUNT_CODE =210027  AND A.LINK_NO !=''  UNION ALL SELECT AGENT_SR,SUB_ACCOUNT_CODE,DOC_DATE,VOUCHER_DATE,VOUCHER_NO,A.DOC_NO,''  FROM FINANCE.D_FIN_DR_ADJ_DETAIL A,FINANCE.D_FIN_DR_ADJ_HEADER B   WHERE A.DOC_NO = B.DOC_NO  AND B.CANCELLED =0 AND B.APPROVED =1 AND DOC_DATE >='2015-01-01'   AND MAIN_ACCOUNT_CODE =210027 AND SUBSTRING(A.VOUCHER_NO,1,2) IN ('RC','CN','JV','CR') AND AGENT_SR !='' AND SUB_ACCOUNT_CODE IN (157715,158801,158815) AND HIERARCHY_ID  !=1277  ");
            
            
            
            
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");
            
            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT COL01,COUNT(*),MAX(COL04),'' FROM  TEMP_DATABASE.TM81  GROUP BY COL01 ");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80 A ,TEMP_DATABASE.TM81 B  SET B.COL07 =1  WHERE A.COL01 = B.COL01 AND A.COL03 = B.COL04");
            
            stmt.execute("DELETE FROM  TEMP_DATABASE.TM81 WHERE COL07 =''");
            
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");
            
            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT COL01,COUNT(*),MAX(COL05),'' FROM  TEMP_DATABASE.TM81  GROUP BY COL01");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80 A ,TEMP_DATABASE.TM81 B  SET B.COL07 =2 WHERE A.COL01 = B.COL01 AND A.COL03 = B.COL05");
            
            stmt.execute("DELETE FROM  TEMP_DATABASE.TM81 WHERE COL07 =1");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81,TMP_LC_CREDITNOTETEST  SET LCN_RC_VOUCHER = COL05, LCN_RC_VALUE_DATE = COL04,EXT1=COL06,LCN_RC_VOU_DATE= COL03 WHERE COL01 = LCN_LINK_NO");
            
            
            
            
            
            
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST  SET LCN_DAY = EXTRACT(DAY FROM LCN_VOUCHER_DATE), LCN_MONTH =EXTRACT(MONTH FROM LCN_VOUCHER_DATE), LCN_YEAR = EXTRACT(YEAR FROM LCN_VOUCHER_DATE)");
 
            
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET LCN_INTERVAL = CASE WHEN  LCN_MONTH IN (1,2,3)   THEN 'SHCQTR01'   WHEN LCN_MONTH IN (4,5,6)   THEN 'SHCQTR02'  WHEN LCN_MONTH IN (7,8,9)   THEN 'SHCQTR03'   WHEN LCN_MONTH IN (10,11,12)   THEN 'SHCQTR04'  END");
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET EXT2 = CASE WHEN  LCN_MONTH IN (4,5,6,7,8,9,10,11,12)   THEN LCN_YEAR+1  WHEN LCN_MONTH IN (1,2,3)   THEN LCN_YEAR -1 END");
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET LCN_YEAR_MON_ID = CONCAT(LCN_YEAR,LCN_INTERVAL) ");
            
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET LCN_AGENT = SUBSTRING(LCN_LINK_NO,1,2)");
            
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET LCN_NO = CONCAT(LCN_SUB_ACCOUNT_CODE,LCN_YEAR_MON_ID)");
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET LCN_INTERVAL_CAPTION = CASE WHEN  LCN_MONTH IN (1,2,3)   THEN CONCAT( 'FROM  01/01/',LCN_YEAR, '   TO 31/03/',LCN_YEAR)   WHEN LCN_MONTH IN (4,5,6)   THEN CONCAT( 'FROM  01/04/',LCN_YEAR, '   TO 30/06/',LCN_YEAR)  WHEN LCN_MONTH IN (7,8,9)   THEN CONCAT( 'FROM  01/07/',LCN_YEAR, '   TO 30/09/',LCN_YEAR)   WHEN LCN_MONTH IN (10,11,12)   THEN CONCAT( 'FROM  01/10/',LCN_YEAR, '   TO 31/12/',LCN_YEAR)     END");
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET  LCN_DAY_DIFF  = DATEDIFF(LCN_RC_VALUE_DATE,LCN_INVOICE_DATE) WHERE LCN_RC_VALUE_DATE !='0000-00-00'");
 
            
            
            
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET  LCN_PER  = CASE WHEN LCN_DAY_DIFF <=6 THEN 6  WHEN LCN_DAY_DIFF >=7   THEN 0 END WHERE LCN_SUB_ACCOUNT_CODE = 158801   AND LCN_RC_VALUE_DATE !='0000-00-00'");
            
            stmt.execute(" UPDATE TMP_LC_CREDITNOTETEST SET  LCN_PER  = CASE WHEN LCN_DAY_DIFF <=6 THEN 2 WHEN LCN_DAY_DIFF >=7   THEN 0 END WHERE LCN_SUB_ACCOUNT_CODE IN (157715,158815)  AND LCN_RC_VALUE_DATE !='0000-00-00'");
            
            
            
            
            
            
            stmt.execute("UPDATE TMP_LC_CREDITNOTETEST SET LCN_CREDIT_AMOUNT = ROUND((LCN_PER*LCN_AMOUNT)/100,0)");
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_DETAIL  WHERE CND_TYPE ='SHCQTR' AND CND_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM TMP_LC_CREDITNOTETEST )");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT,CND_BOOK_CODE,CND_RC_VOUCHER_DATE,CND_DAYS,CND_CREDIT_AMOUNT,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_RC_VOUCHER_NO)  SELECT  ' ',LCN_NO,'SHCQTR',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_AMOUNT,LCN_CHARGE_CODE,LCN_PER,'31',LCN_RC_VOU_DATE,LCN_DAY_DIFF,LCN_CREDIT_AMOUNT,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,LCN_RC_VOUCHER FROM TMP_LC_CREDITNOTETEST ");
            
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL (CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION) SELECT  LCN_NO,'SHCQTR','435091',LCN_SUB_ACCOUNT_CODE,'D','14',SUM(LCN_CREDIT_AMOUNT),LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION FROM TMP_LC_CREDITNOTETEST GROUP BY LCN_SUB_ACCOUNT_CODE,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION");
            
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_HEADER  WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM TMP_LC_CREDITNOTETEST )");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER (CNH_NO,CNH_TYPE,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CHARGE_CODE,CNH_INVOICE_AMOUNT,CNH_CREDIT_AMOUNT,CNH_GROSS_QTY,CNH_GROSS_AMT,CNH_NET_QTY,CNH_NET_AMT)  SELECT CND_NO,CND_TYPE,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_CHARGE_CODE,SUM(CND_INVOICE_AMOUNT),ROUND(SUM(CND_CREDIT_AMOUNT),0),SUM(CND_GROSS_QTY),SUM(CND_GROSS_AMT),SUM(CND_NET_QTY),SUM(CND_NET_AMOUNT)   FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='SHCQTR'  AND CND_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM TMP_LC_CREDITNOTETEST ) AND CND_EFFECT ='C'   GROUP BY CND_NO,CND_TYPE,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_CHARGE_CODE");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER,DINESHMILLS.D_SAL_PARTY_MASTER SET CNH_PARTY_NAME= PARTY_NAME,CNH_CITY= DISPATCH_STATION,CNH_MAIN_ACCOUNT_CODE = 435091,CNH_BOOK_CODE =14,CNH_EFFECT = 'D' WHERE PARTY_CODE = CNH_SUB_ACCOUNT_CODE  AND MAIN_ACCOUNT_CODE = CNH_MAIN_CODE AND CNH_TYPE ='SHCQTR'  AND CNH_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM TMP_LC_CREDITNOTETEST )");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL,DINESHMILLS.D_SAL_PARTY_MASTER SET CND_MAIN_ACCOUNT_NAME= CONCAT(PARTY_NAME,',',DISPATCH_STATION) WHERE PARTY_CODE = CND_SUB_ACCOUNT_CODE  AND MAIN_ACCOUNT_CODE = CND_MAIN_ACCOUNT_CODE AND CND_TYPE ='SHCQTR'  AND CND_YEAR_MON_ID IN (SELECT DISTINCT LCN_YEAR_MON_ID FROM TMP_LC_CREDITNOTETEST )");
            
            
            
            
            generateIntervalCombo();
            
        }catch(SQLException e){e.printStackTrace();}
        
    }
    
    private void formatGrid(){
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
        
        DataModel.addColumn("Party Code");
        DataModel.addColumn("Party Name");
        DataModel.addColumn("Invoice Amount");
        DataModel.addColumn("Credit Amount");
        DataModel.addColumn("Interval Caption");
        
    }
    
    
    private void PartyWiseCreditDetail() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("CND_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_CHARGE_CODE");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_BOOK_CODE");
            objReportData.AddColumn("CND_RC_VOUCHER_NO");
            objReportData.AddColumn("CND_RC_VOUCHER_DATE");
            objReportData.AddColumn("CND_DAYS");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_DEBIT_AMOUNT");
                      
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_LINK_NO","");
            objOpeningRow.setValue("CND_INVOICE_DATE","0000-00-00");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CND_CHARGE_CODE","");
            objOpeningRow.setValue("CND_PERCENT","");
            objOpeningRow.setValue("CND_BOOK_CODE","");
            objOpeningRow.setValue("CND_RC_VOUCHER_NO","");
            objOpeningRow.setValue("CND_RC_VOUCHER_DATE","0000-00-00");
            objOpeningRow.setValue("CND_DAYS","");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CND_DEBIT_AMOUNT","");
           
            
            // String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE='YLYINC' AND CND_INVOICE_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'";
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,12) ORDER BY CND_SUB_ACCOUNT_CODE,CND_MAIN_ACCOUNT_CODE";
            System.out.println(strSQL);
            
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CND_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CND_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_NAME",""));
                    objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                    objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","0000-00-00"));
                    objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                    objRow.setValue("CND_CHARGE_CODE",UtilFunctions.getString(rsTmp,"CND_CHARGE_CODE",""));
                    objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                    objRow.setValue("CND_BOOK_CODE",UtilFunctions.getString(rsTmp,"CND_BOOK_CODE",""));
                    objRow.setValue("CND_RC_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_NO",""));
                    objRow.setValue("CND_RC_VOUCHER_DATE",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_DATE","0000-00-00"));
                    objRow.setValue("CND_DAYS",UtilFunctions.getString(rsTmp,"CND_DAYS",""));
                    objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                    objRow.setValue("CND_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_DEBIT_AMOUNT",""));
                   
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            // Parameters.put("CND_SUB_ACCOUNT_CODE",txtPartyCode.getText().toString());
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptShahcoReport.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
          private void PartyWiseSummary() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_INTERVAL_CAPTION");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_INTERVAL_CAPTION","");
            
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_HEADER WHERE  CNH_TYPE='SHCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,12)  ORDER BY CNH_SUB_ACCOUNT_CODE";
            System.out.println(strSQL);
            
           
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CNH_INTERVAL_CAPTION",""));
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptshahcosummry.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
   private void ShahcoDraft() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CNH_MAIN_CODE");
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CNH_CITY");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_LINK_NO");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_INTERVAL_CAPTION");
            objReportData.AddColumn("CNH_DRAFT_CR_NOTE_NO");
            objReportData.AddColumn("CNH_BOOK_CODE");
            objReportData.AddColumn("CNH_EXT11");
            objReportData.AddColumn("CNH_REASON_CODE");
            objReportData.AddColumn("CNH_PERCENT");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_MAIN_CODE","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_CITY","");
            objOpeningRow.setValue("CNH_LINK_NO","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CNH_DRAFT_CR_NOTE_NO","");
            objOpeningRow.setValue("CNH_BOOK_CODE","");
            objOpeningRow.setValue("CNH_EXT11","");
            objOpeningRow.setValue("CNH_REASON_CODE","");
            objOpeningRow.setValue("CNH_PERCENT","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_HEADER  WHERE CNH_TYPE ='SHCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('"+(String)cmbIntervalCombo.getSelectedItem()+"',1,12)  ORDER BY CNH_SUB_ACCOUNT_CODE";
            System.out.println(strSQL);
            
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_MAIN_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_CODE",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_NAME",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_CITY",UtilFunctions.getString(rsTmp,"CNH_CITY",""));
                    objRow.setValue("CNH_LINK_NO",UtilFunctions.getString(rsTmp,"CNH_LINK_NO",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CNH_INTERVAL_CAPTION",""));
                    objRow.setValue("CNH_DRAFT_CR_NOTE_NO",UtilFunctions.getString(rsTmp,"CNH_DRAFT_CR_NOTE_NO",""));
                    objRow.setValue("CNH_BOOK_CODE",UtilFunctions.getString(rsTmp,"CNH_BOOK_CODE",""));
                    objRow.setValue("CNH_REASON_CODE",UtilFunctions.getString(rsTmp,"CNH_REASON_CODE",""));
                    objRow.setValue("CNH_EXT11",UtilFunctions.getString(rsTmp,"CNH_EXT11",""));
                    objRow.setValue("CNH_PERCENT",UtilFunctions.getString(rsTmp,"CNH_PERCENT",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptShahcoDraft.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
   
   
   
   private void getDept(){
       
       if(EITLERPGLOBAL.gUserDeptID==76 || EITLERPGLOBAL.gUserDeptID==0)
 {
     txtFromDate.setEnabled(true);
     txtToDate.setEnabled(false);
     txtToDate.setVisible(true);
     Processcash.setEnabled(true);
     jButton4.setEnabled(true);
       }
       else
 {
     txtFromDate.setEnabled(false);
     txtToDate.setEnabled(false);
     txtToDate.setVisible(true);
     Processcash.setEnabled(false);
     jButton4.setEnabled(false);
       }
   }
   
   public String getLastDay() {
       String Date=data.getStringValueFromDB("SELECT LAST_DAY('"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"') FROM DUAL");
       return Date;
    }
    
}
