/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */

package EITLERP.Suitings;

/**
 *
 * @author  root
 */


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;



import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;


public class frmLcAddDiscount extends javax.swing.JApplet {
    
    //private EITLTableModel DataModel=new EITLTableModel();
    
    EITLComboModel IntervalComboModel;
    EITLTableModel DataModel;
    
    private ResultSet rsResultSet,rsResultSet1;
    private Connection Conn;
    private Statement Stmt;
    private clsVoucher objVoucher;
    //  private EITLComboModel cmbReceiptTypeModel;
    //  private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(675,500);
        initComponents();
        generateIntervalCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        bgVoucher = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblBookName = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton3 = new javax.swing.JButton();
        cmbIntervalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Processcash = new javax.swing.JButton();
        txtInterval = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("LC ADDITIONAL DISCOUNT CREDIT NOTE PROCESS & PRINTING FORM");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 666, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(5, 67, 85, 15);

        jLabel2.setText("LC Additional Discount Credit Note Process");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 350, 15);

        txtFromDate.setNextFocusableComponent(txtToDate);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 66, 100, 19);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(263, 67, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 68, 60, 15);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDBLClicked(evt);
            }
        });

        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 190, 648, 200);

        lblBookName.setText(".");
        getContentPane().add(lblBookName);
        lblBookName.setBounds(204, 119, 280, 15);

        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(390, 70, 148, 14);

        jButton3.setText("2. LC Additional Detail  Draft");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(10, 150, 240, 25);

        cmbIntervalCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIntervalComboItemStateChanged(evt);
            }
        });
        cmbIntervalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntervalComboActionPerformed(evt);
            }
        });

        getContentPane().add(cmbIntervalCombo);
        cmbIntervalCombo.setBounds(120, 120, 390, 24);

        jLabel4.setText("Select Period : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 130, 130, 15);

        Processcash.setText("1. Process LC Add Discount ");
        Processcash.setEnabled(false);
        Processcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesscashActionPerformed(evt);
            }
        });

        getContentPane().add(Processcash);
        Processcash.setBounds(10, 90, 290, 25);

        getContentPane().add(txtInterval);
        txtInterval.setBounds(550, 120, 90, 19);

    }//GEN-END:initComponents
                        
    private void cmbIntervalComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIntervalComboItemStateChanged
        txtInterval.setText((String)cmbIntervalCombo.getSelectedItem());
        
    }//GEN-LAST:event_cmbIntervalComboItemStateChanged
    
    private void cmbIntervalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntervalComboActionPerformed
           // if(EITLERPGLOBAL.getComboCode(cmbIntervalCombo)!=0){
            formatGrid();
            try{
                ResultSet rs=data.getResult("SELECT A.CND_LINK_NO,A.CND_INVOICE_DATE,A.CND_CN_AMT_GIVEN,A.CND_INVOICE_AMOUNT,A.CND_CREDIT_AMOUNT,A.CND_DISC_ENTITLED,A.CND_DISC_GIVEN,A.CND_DISC_ADDN,A.CND_INTERVAL_CAPTION,B.CNH_MAIN_CODE,B.CNH_SUB_ACCOUNT_CODE,B.CNH_MAIN_ACCOUNT_CODE,B.CNH_BOOK_CODE,B.CNH_CREDIT_AMOUNT,B.CNH_PARTY_NAME,B.CNH_PERCENT,B.CNH_CITY,B.CNH_LINK_NO FROM SALES.D_CREDIT_NOTE_DETAIL A,SALES.D_CREDIT_NOTE_HEADER B WHERE A.CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND A.CND_TYPE= B.CNH_TYPE AND A.CND_TYPE='ADDISC' AND A.CND_SUB_ACCOUNT_CODE=B.CNH_SUB_ACCOUNT_CODE ORDER BY CND_SUB_ACCOUNT_CODE,CND_INVOICE_DATE");
                while(!rs.isAfterLast()){
                    Object[] rowData=new Object[17];
                    // rowData[0]=rs.getString("");
                    rowData[0]=rs.getString("CNH_MAIN_CODE");
                    rowData[1]=rs.getString("CNH_SUB_ACCOUNT_CODE");
                    rowData[2]=rs.getString("CNH_MAIN_ACCOUNT_CODE");
                    rowData[3]=rs.getString("CNH_PARTY_NAME");
                    rowData[4]=rs.getString("CNH_BOOK_CODE");
                    rowData[5]=rs.getString("CNH_CREDIT_AMOUNT");
                    rowData[6]=rs.getString("CNH_PERCENT");
                    rowData[7]=rs.getString("CNH_CITY");
                    rowData[8]=rs.getString("CNH_LINK_NO");
                    rowData[9]=rs.getString("CND_LINK_NO");
                    rowData[10]=rs.getString("CND_INVOICE_DATE");
                    rowData[11]=rs.getString("CND_CREDIT_AMOUNT");
                    rowData[12]=rs.getString("CND_CN_AMT_GIVEN");
                    rowData[13]=rs.getString("CND_DISC_ENTITLED");
                    rowData[14]=rs.getString("CND_DISC_GIVEN");
                    rowData[15]=rs.getString("CND_DISC_ADDN");
                    rowData[16]=rs.getString("CND_INVOICE_AMOUNT");
                    
                    DataModel.addRow(rowData);
                    rs.next();
                }
                rs.close();
   
                
            }catch(SQLException sqe){sqe.printStackTrace();}
        //}
        
    }//GEN-LAST:event_cmbIntervalComboActionPerformed
    
    private void ProcesscashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesscashActionPerformed
             if ( ! Validate()) {
            return;
        }
        processLCAddDiscount();
    }//GEN-LAST:event_ProcesscashActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DraftReport();     // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void mouseDBLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDBLClicked
        
    }//GEN-LAST:event_mouseDBLClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Processcash;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup bgVoucher;
    private javax.swing.JComboBox cmbIntervalCombo;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInterval;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables

    private void DraftReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CNH_MAIN_CODE");
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_BOOK_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_PERCENT");
            objReportData.AddColumn("CNH_CITY");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CNH_LINK_NO");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_CN_AMT_GIVEN");
            objReportData.AddColumn("CND_DISC_ENTITLED"); 
            objReportData.AddColumn("CND_DISC_GIVEN");
            objReportData.AddColumn("CND_DISC_ADDN");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            
            
            
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_MAIN_CODE","");
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_BOOK_CODE","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_PERCENT","");
            objOpeningRow.setValue("CNH_CITY","");
            objOpeningRow.setValue("CNH_LINK_NO","");
            objOpeningRow.setValue("CND_LINK_NO","");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            objOpeningRow.setValue("CND_INVOICE_DATE","");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CND_CN_AMT_GIVEN","");
            objOpeningRow.setValue("CND_DISC_ENTITLED","");
            objOpeningRow.setValue("CND_DISC_GIVEN","");
            objOpeningRow.setValue("CND_DISC_ADDN","");;
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");
            
            
            
            // String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE, CND_INVOICE_AMOUNT , CND_CHARGE_CODE , CND_PERCENT,CND_BOOK_CODE, CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_FIN_VOUCHER_NO,RIGHT(CND_INTERVAL_CAPTION,10)AS VL,LEFT(CND_LINK_NO,2)AS LL    FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='LCQTR' AND CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9)  AND CND_CREDIT_AMOUNT !=0 UNION ALL SELECT CNH_NO,'LC DISCOUNT STG',CNH_MAIN_ACCOUNT_CODE,'',CNH_LINK_NO, '','', '' , '' , 0.00,'', CNH_DEBIT_AMOUNT,CNH_CREDIT_AMOUNT,CNH_VALUE_DATE,CNH_INTERVAL_CAPTION,'','','','',RIGHT(CNH_INTERVAL_CAPTION,10),''   FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='LCQTR' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9)  ORDER BY  CND_NO,CND_LINK_NO";
            String strSQL = "SELECT A.CND_LINK_NO,A.CND_INVOICE_DATE,A.CND_INVOICE_AMOUNT,A.CND_CREDIT_AMOUNT,A.CND_CN_AMT_GIVEN,A.CND_DISC_ENTITLED,A.CND_DISC_GIVEN,A.CND_DISC_ADDN,A.CND_INTERVAL_CAPTION,B.CNH_MAIN_CODE,B.CNH_SUB_ACCOUNT_CODE,B.CNH_MAIN_ACCOUNT_CODE,B.CNH_BOOK_CODE,B.CNH_CREDIT_AMOUNT,B.CNH_PARTY_NAME,B.CNH_PERCENT,B.CNH_CITY,B.CNH_LINK_NO FROM SALES.D_CREDIT_NOTE_DETAIL A,SALES.D_CREDIT_NOTE_HEADER B WHERE A.CND_TYPE= B.CNH_TYPE AND A.CND_TYPE='ADDISC'AND CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,9)  AND A.CND_SUB_ACCOUNT_CODE=B.CNH_SUB_ACCOUNT_CODE AND A.CND_YEAR_MON_ID = B.CNH_YEAR_MON_ID ORDER BY CND_SUB_ACCOUNT_CODE,CND_INVOICE_DATE";
            
            System.out.println(strSQL);
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_MAIN_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_CODE",""));
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_BOOK_CODE",UtilFunctions.getString(rsTmp,"CNH_BOOK_CODE",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_PERCENT",UtilFunctions.getString(rsTmp,"CNH_PERCENT",""));
                    objRow.setValue("CNH_CITY",UtilFunctions.getString(rsTmp,"CNH_CITY",""));
                    objRow.setValue("CNH_LINK_NO",UtilFunctions.getString(rsTmp,"CNH_LINK_NO",""));
                    objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                    objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                    objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE",""));
                    objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                    objRow.setValue("CND_CN_AMT_GIVEN",UtilFunctions.getString(rsTmp,"CND_CN_AMT_GIVEN",""));
                    objRow.setValue("CND_DISC_ENTITLED",UtilFunctions.getString(rsTmp,"CND_DISC_ENTITLED",""));
                    objRow.setValue("CND_DISC_GIVEN",UtilFunctions.getString(rsTmp,"CND_DISC_GIVEN",""));
                    objRow.setValue("CND_DISC_ADDN",UtilFunctions.getString(rsTmp,"CND_DISC_ADDN",""));
                    objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //Parameters.put("CNH_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
             //Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptLcCredit12.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
     private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        
        return true;
    }
    
    private void generateIntervalCombo(){
        IntervalComboModel=new EITLComboModel();
        IntervalComboModel.removeAllElements();
        cmbIntervalCombo.setModel(IntervalComboModel);
        try{
            ComboData combodata=new ComboData();
            combodata.Code=0;
            combodata.Text="Select Date";
            
            IntervalComboModel.addElement(combodata);
            ResultSet rs=data.getResult("SELECT DISTINCT A.CND_YEAR_MON_ID,A.CND_INTERVAL_CAPTION FROM SALES.D_CREDIT_NOTE_DETAIL A WHERE A.CND_TYPE ='ADDISC' ORDER BY A.CND_YEAR_MON_ID DESC ");
            while(!rs.isAfterLast()){
                combodata=new ComboData();
                combodata.Text=rs.getString("A.CND_YEAR_MON_ID");
                combodata.Text=rs.getString("A.CND_YEAR_MON_ID")+" : "+ rs.getString("A.CND_INTERVAL_CAPTION");
                
                IntervalComboModel.addElement(combodata);
                rs.next();
            }
        }catch(SQLException e){e.printStackTrace();}
    }
    
       private void processLCAddDiscount(){
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM80");
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM80 SELECT CND_MAIN_ACCOUNT_CODE,CASE WHEN CND_SUB_ACCOUNT_CODE=317707 THEN 319907 ELSE CND_SUB_ACCOUNT_CODE END,SUM(CND_INVOICE_AMOUNT) AS INVAMT,0 AS B FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='LCQTR'  AND CND_INVOICE_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND CND_INVOICE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  GROUP BY CND_MAIN_ACCOUNT_CODE,CASE WHEN CND_SUB_ACCOUNT_CODE=317707 THEN 319907 ELSE CND_SUB_ACCOUNT_CODE END UNION ALL SELECT 210027 AS A,PARTY_CODE,SUM(NET_AMOUNT) AS INVAMT,0 AS B FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE =1  AND INVOICE_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND INVOICE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  AND PARTY_CODE IN (670201,279965,319907,619913,317707,549901,279965,739901,739990) AND SUBSTRING(PAYMENT_TERM_CODE,1,1)  IN (9) GROUP BY  PARTY_CODE");
 
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80 SET COL04 = COL03/100000");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80 SET COL03= CASE WHEN COL04 <=25  THEN 0 WHEN COL04 > 25 AND COL04 <=40  THEN 3.5 WHEN COL04 > 40 AND COL04 <=75  THEN 4.5 WHEN COL04 > 75 AND COL04 <=125  THEN 5 WHEN COL04 > 125 AND COL04 <=200  THEN 5.5 WHEN COL04 > 200  THEN 6 END");
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM82 SELECT CND_YEAR_MON_ID,CND_SUB_ACCOUNT_CODE,CND_INVOICE_AMOUNT,CND_PERCENT,CND_CREDIT_AMOUNT,0,0,0,0,0,0,0 FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='LCQTR'  AND CND_INVOICE_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND CND_INVOICE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  UNION ALL SELECT CONCAT(EXTRACT(YEAR FROM INVOICE_DATE),'MTH',0,EXTRACT(MONTH FROM INVOICE_DATE)),PARTY_CODE,SUM(NET_AMOUNT) AS INVAMT,3,SUM(ROUND(NET_AMOUNT*3/100,0)),0,0,0,0,0,0,0 FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE =1  AND INVOICE_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND INVOICE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  AND PARTY_CODE IN (670201,279965,319907,619913,317707,549901,279965,739901,739990) AND SUBSTRING(PAYMENT_TERM_CODE,1,1)  IN (9)   AND EXTRACT(MONTH FROM INVOICE_DATE) IN (1,2,3,4,5,6,7,8,9) GROUP BY  PARTY_CODE,CONCAT(EXTRACT(YEAR FROM INVOICE_DATE),EXTRACT(MONTH FROM INVOICE_DATE)) UNION ALL  SELECT CONCAT(EXTRACT(YEAR FROM INVOICE_DATE),'MTH',EXTRACT(MONTH FROM INVOICE_DATE)),PARTY_CODE,SUM(NET_AMOUNT) AS INVAMT,3,SUM(ROUND(NET_AMOUNT*3/100,0)),0,0,0,0,0,0,0 FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE =1  AND INVOICE_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"'  AND INVOICE_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  AND PARTY_CODE IN (670201,279965,319907,619913,317707,549901,279965,739901,739990) AND SUBSTRING(PAYMENT_TERM_CODE,1,1)  IN (9)   AND EXTRACT(MONTH FROM INVOICE_DATE) IN (10,11,12) GROUP BY  PARTY_CODE,CONCAT(EXTRACT(YEAR FROM INVOICE_DATE),EXTRACT(MONTH FROM INVOICE_DATE))");
           
            stmt.execute("UPDATE TEMP_DATABASE.TM80 A,TEMP_DATABASE.TM82 B SET B.COL06  = A.COL03  WHERE B.COL02  = A.COL02");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80 A,TEMP_DATABASE.TM82 B SET B.COL06  = A.COL03 WHERE B.COL02  = 317707 AND A.COL02 = 319907");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM82  SET COL07  = COL06 - COL04 WHERE COL04 =3");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM82  SET COL07  = COL06/2 - COL04 WHERE COL04 =1.5");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM82  SET COL08  = ROUND((COL05/COL04)* COL07,0) WHERE COL07 >0");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM82  SET COL09  = (COL05/COL04) WHERE COL07 >0");
           
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM83");
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM83 SELECT COL01,COL02,SUM(COL03),COL04,SUM(COL05),COL06,COL07,SUM(COL08),0,0,0,0,0,0,0,0,0,0 FROM TEMP_DATABASE.TM82  GROUP BY COL01,COL02,COL04,COL06,COL07 ORDER BY COL02,COL01,COL04 DESC");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL09 = 'ADDISC15'");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL10 = CONCAT(COL02,'ADDISC15')");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83,DINESHMILLS.D_SAL_AREA_MASTER  SET COL11 = AREA_ID WHERE SUBSTRING(COL02,1,2) = AGENT_PREFIX");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL12 =  CONCAT_WS('-',SUBSTRING(COL01,1,4), SUBSTRING(COL01,8,2),'01')");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL12 = CONCAT_WS('-',SUBSTRING(COL01,1,4), SUBSTRING(COL01,8,2)*3,'01')  WHERE SUBSTRING(COL01,5,3) ='QTR'");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL13=  LAST_DAY(COL12)");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL15 = CONCAT_WS('-',SUBSTRING(COL01,1,4), '01','01')  WHERE SUBSTRING(COL01,5,3) ='QTR'   AND SUBSTRING(COL01,8,4)= '01'");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL15 = CONCAT_WS('-',SUBSTRING(COL01,1,4), '04','01')  WHERE SUBSTRING(COL01,5,3) ='QTR'   AND SUBSTRING(COL01,8,4)= '02'");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL15 = CONCAT_WS('-',SUBSTRING(COL01,1,4), '07','01')  WHERE SUBSTRING(COL01,5,3) ='QTR'   AND SUBSTRING(COL01,8,4)= '03'");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL15 = CONCAT_WS('-',SUBSTRING(COL01,1,4), '09','01')  WHERE SUBSTRING(COL01,5,3) ='QTR'   AND SUBSTRING(COL01,8,4)= '04'");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM83 SET  COL12 =  COL15  WHERE SUBSTRING(COL01,5,3) ='QTR' ");
          
            stmt.execute("UPDATE TEMP_DATABASE.TM83 ,DINESHMILLS.D_SAL_PARTY_MASTER SET COL16 = PARTY_NAME,COL17 = CITY_ID  WHERE PARTY_CODE = COL02");
           
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='ADDISC'");
           
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL SELECT 4,COL10,'ADDISC',210027,COL02,'D',COL01,'2016-2015','',COL13,COL03,0,COL07,0,0,'','0000-00-00',0,'',0,COL08,'','','Y',COL02,'0000-00-00',COL16,COL09,'FROM 01/01/2014 TO 31/12/2014',COL04,COL07,COL06,0,0,COL17,0,0,0,0,0,0,0,COL05 FROM TEMP_DATABASE.TM83");
           
            stmt.execute("DELETE  FROM SALES.D_CREDIT_NOTE_HEADER  WHERE CNH_TYPE = 'ADDISC'");
           
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER SELECT CND_ID,CND_NO,CND_TYPE,435091,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EXT3,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),CND_DISC_ENTITLED,'','0000-00-00','','',SUM(CND_DEBIT_AMOUNT),SUM(CND_CREDIT_AMOUNT),'','0000-00-00','','','0000-00-00',CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14','','CASH & L/C DISCOUNT - SUITINGS','','','','','','','','','',SUM(CND_CN_AMT_GIVEN) FROM D_CREDIT_NOTE_DETAIL WHERE CND_TYPE = 'ADDISC' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EXT3,CND_MAIN_ACCOUNT_NAME,CND_DISC_ENTITLED,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION");
          
            
           
            
            
            generateIntervalCombo();
            
        }catch(SQLException e){e.printStackTrace();}
        
    }
    
    private void formatGrid(){
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
       // TableColumnModel ColModel=Table.getColumnModel();
        
       
        DataModel.addColumn("Main Code"); //0
        DataModel.addColumn("Sub Code"); //1
        DataModel.addColumn("Main Account Code"); //2
        DataModel.addColumn("Party Name"); //3
        DataModel.addColumn("Book Code"); //4
        DataModel.addColumn("Credit Amount"); //5
        DataModel.addColumn("Percentage"); //6
        DataModel.addColumn("City"); //7
        DataModel.addColumn("Link No"); //8 
        DataModel.addColumn("DRC No"); //9 
        DataModel.addColumn("Invoice Date"); //10
        DataModel.addColumn("Total Turnover");
        DataModel.addColumn("Detail Credit Amount");
        DataModel.addColumn("Discount Entitled");
        DataModel.addColumn("Discount Given");
        DataModel.addColumn("Discount Addn");
        DataModel.addColumn("Invoice Amount");
    
    }
    
}

 
                   
                   
                    
                    
                   
