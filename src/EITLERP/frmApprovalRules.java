/*
 * frmApprovalRules.java
 *
 * Created on September 26, 2007, 2:36 PM
 */

package EITLERP;

/**
 *
 * @author  root
 */
import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import javax.swing.text.*;
import EITLERP.Utils.*;
import java.sql.*;
import java.net.*;
import EITLERP.*;
import EITLERP.Finance.*;


public class frmApprovalRules extends javax.swing.JApplet {
    
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLComboModel cmbModuleModel=new EITLComboModel();
    private int EditMode=0;
    private long SrNo=0;
    
    
    /** Initializes the applet frmApprovalRules */
    public void init() {
        setSize(650,450);
        initComponents();
        GenerateCombo();
        FormatGrid();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmbModule = new javax.swing.JComboBox();
        cmdDisplay = new javax.swing.JButton();
        Tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRule = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtParameter = new javax.swing.JTextField();
        txtResult = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtRemarks = new javax.swing.JTextField();
        cmdAdd = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdRemove = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdBigEdit = new javax.swing.JButton();
        cmbRuleType = new javax.swing.JComboBox();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" APPROVAL RULES (GENERAL)");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 666, 25);

        jLabel1.setText("Select Module:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(9, 38, 100, 15);

        cmbModule.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbModuleItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbModule);
        cmbModule.setBounds(109, 35, 310, 24);

        cmdDisplay.setText("Display");
        cmdDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDisplayActionPerformed(evt);
            }
        });

        getContentPane().add(cmdDisplay);
        cmdDisplay.setBounds(426, 35, 88, 25);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(8, 10, 590, 250);

        cmdNext.setText("Next >>");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        jPanel1.add(cmdNext);
        cmdNext.setBounds(458, 264, 140, 25);

        Tab.addTab("Current Rules", jPanel1);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Rule Type :");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(12, 17, 80, 15);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Rule :");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(12, 48, 80, 15);

        txtRule.setEnabled(false);
        jScrollPane2.setViewportView(txtRule);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(96, 49, 490, 70);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Parameters :");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(11, 133, 80, 15);

        txtParameter.setEnabled(false);
        jPanel2.add(txtParameter);
        txtParameter.setBounds(96, 132, 220, 19);

        txtResult.setEnabled(false);
        jPanel2.add(txtResult);
        txtResult.setBounds(96, 168, 220, 19);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Result :");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(11, 169, 80, 15);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Remarks :");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(11, 201, 80, 15);

        txtRemarks.setEnabled(false);
        jPanel2.add(txtRemarks);
        txtRemarks.setBounds(96, 200, 460, 19);

        cmdAdd.setText("Add Rule");
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        jPanel2.add(cmdAdd);
        cmdAdd.setBounds(7, 257, 110, 25);

        cmdEdit.setText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        jPanel2.add(cmdEdit);
        cmdEdit.setBounds(119, 257, 110, 25);

        cmdRemove.setText("Remove Rule");
        cmdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveActionPerformed(evt);
            }
        });

        jPanel2.add(cmdRemove);
        cmdRemove.setBounds(231, 257, 130, 25);

        cmdSave.setText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        jPanel2.add(cmdSave);
        cmdSave.setBounds(374, 257, 110, 25);

        cmdCancel.setText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        jPanel2.add(cmdCancel);
        cmdCancel.setBounds(486, 257, 110, 25);

        cmdBigEdit.setText("...");
        cmdBigEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBigEditActionPerformed(evt);
            }
        });

        jPanel2.add(cmdBigEdit);
        cmdBigEdit.setBounds(559, 200, 30, 20);

        cmbRuleType.setEditable(true);
        cmbRuleType.setEnabled(false);
        jPanel2.add(cmbRuleType);
        cmbRuleType.setBounds(97, 13, 340, 24);

        Tab.addTab("Add New Rule", jPanel2);

        getContentPane().add(Tab);
        Tab.setBounds(9, 83, 610, 320);

    }//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null," W "+getWidth()+" H "+getHeight());
    }//GEN-LAST:event_formMouseClicked

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        EditMode=0;
        SetState(false);
        ResetEnvironment();
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void cmdBigEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBigEditActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtRemarks;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_cmdBigEditActionPerformed

    private void cmdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveActionPerformed
        // TODO add your handling code here:
        if(Table.getSelectedRow()>=0)
        {
          if(JOptionPane.showConfirmDialog(null,"Delete current rule ?","Confirmation",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION)  
          {
            clsApprovalRules objRule=new clsApprovalRules();
            
            if(objRule.Delete(SrNo))  
            {
              GenerateGrid();  
            }
            else
            {
              JOptionPane.showMessageDialog(null,objRule.LastError);  
            }
          }
        }
    }//GEN-LAST:event_cmdRemoveActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        try {
            if(Table.getSelectedRow()>=0) {
                SrNo=UtilFunctions.CInt(DataModel.getValueByVariable("SR_NO",Table.getSelectedRow()));
                
                DisplayData();
                Tab.setSelectedIndex(1);
            }
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        try {
            clsApprovalRules objRule=new clsApprovalRules();
            objRule.LoadData(EITLERPGLOBAL.gCompanyID);
            
            if(EditMode==EITLERPGLOBAL.EDIT) {
                objRule.Filter(" WHERE SR_NO="+SrNo,EITLERPGLOBAL.gCompanyID);
            }
            
            objRule.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
            objRule.setAttribute("SR_NO",0);
            objRule.setAttribute("MODULE_ID",EITLERPGLOBAL.getComboCode(cmbModule));
            objRule.setAttribute("RULE_TYPE",cmbRuleType.getSelectedItem().toString());
            objRule.setAttribute("RULE",txtRule.getText());
            objRule.setAttribute("RULE_PARAMETER",txtParameter.getText());
            objRule.setAttribute("RULE_OUTCOME",txtResult.getText());
            objRule.setAttribute("CREATED_BY",EITLERPGLOBAL.gLoginID);
            objRule.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
            objRule.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gLoginID);
            objRule.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
            objRule.setAttribute("CHANGED",1);
            objRule.setAttribute("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
            objRule.setAttribute("REMAKRS",txtRemarks.getText());
            
            
            if(EditMode==EITLERPGLOBAL.ADD) {
                if(objRule.Insert()) {
                    GenerateGrid();
                    SetState(false);
                    ResetEnvironment();
                }
                else {
                    JOptionPane.showMessageDialog(null,objRule.LastError);
                }
            }
            
            
            if(EditMode==EITLERPGLOBAL.EDIT) {
                if(objRule.Update()) {
                    GenerateGrid();
                    SetState(false);
                    ResetEnvironment();
                }
                else {
                    JOptionPane.showMessageDialog(null,objRule.LastError);
                }
            }
            
            
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        if(Table.getSelectedRow()>=0)
        {
        SetState(true);
        EditMode=EITLERPGLOBAL.EDIT;
        SetEnvironment();
        }
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        // TODO add your handling code here:
        SetState(true);
        Clear();
        EditMode=EITLERPGLOBAL.ADD;
        SetEnvironment();
        
    }//GEN-LAST:event_cmdAddActionPerformed
    
    private void cmdDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDisplayActionPerformed
        // TODO add your handling code here:
        GenerateGrid();
    }//GEN-LAST:event_cmdDisplayActionPerformed
    
    private void cmbModuleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbModuleItemStateChanged
        // TODO add your handling code here:
        GenerateGrid();
    }//GEN-LAST:event_cmbModuleItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JTable Table;
    private javax.swing.JComboBox cmbModule;
    private javax.swing.JComboBox cmbRuleType;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdBigEdit;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDisplay;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JButton cmdSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtParameter;
    private javax.swing.JTextField txtRemarks;
    private javax.swing.JTextField txtResult;
    private javax.swing.JTextArea txtRule;
    // End of variables declaration//GEN-END:variables
    
    
    private void GenerateCombo() {
        try {
            HashMap List=clsModules.getList("");
            
            cmbModule.removeAllItems();
            cmbModuleModel=new EITLComboModel();
            cmbModule.setModel(cmbModuleModel);
            
            for(int i=1;i<=List.size();i++) {
                clsModules objItem=(clsModules)List.get(Integer.toString(i));
                
                ComboData objData=new ComboData();
                objData.Code=objItem.getAttribute("MODULE_ID").getInt();
                objData.Text=objItem.getAttribute("MODULE_DESC").getString();
                
                cmbModuleModel.addElement(objData);
            }
            
            cmbRuleType.removeAllItems();
            
            ResultSet rsTmp=data.getResult("SELECT DISTINCT(RULE_TYPE) AS RULE_TYPE FROM D_COM_APPROVAL_RULES");
            rsTmp.first();
            
            if(rsTmp.getRow()>0)
            {
              while(!rsTmp.isAfterLast())
              {
                  cmbRuleType.addItem(UtilFunctions.getString(rsTmp,"RULE_TYPE",""));
                  
                  rsTmp.next();
              }
            }
            
            
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void FormatGrid() {
        try {
            
            DataModel=new EITLTableModel();
            Table.removeAll();
            
            
            Table.setModel(DataModel);
            Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Sr."); //0 - Read Only
            DataModel.addColumn("Rule Type"); //1
            DataModel.addColumn("Rule"); //2
            DataModel.addColumn("Remarks"); //3
            
            DataModel.SetVariable(0, "SR_NO");
            DataModel.SetVariable(1,"RULE_TYPE");
            DataModel.SetVariable(2,"RULE");
            DataModel.SetVariable(3,"REMARKS");
            
            DataModel.TableReadOnly(true);
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void GenerateGrid() {
        try {
            
            int ModuleID=EITLERPGLOBAL.getComboCode(cmbModule);
            
            FormatGrid();
            
            ResultSet rsTmp=data.getResult("SELECT * FROM D_COM_APPROVAL_RULES WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+ModuleID);
            rsTmp.first();
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Object[] rowData=new Object[4];
                    rowData[0]=Integer.toString(UtilFunctions.getInt(rsTmp,"SR_NO", 0));
                    rowData[1]=UtilFunctions.getString(rsTmp,"RULE_TYPE","");
                    rowData[2]=UtilFunctions.getString(rsTmp,"RULE","");
                    rowData[3]=UtilFunctions.getString(rsTmp,"REMARKS","");
                    
                    DataModel.addRow(rowData);
                    
                    rsTmp.next();
                }
            }
            
            
        }
        catch(Exception e) {
            
        }
    }
    
    private void SetState(boolean Stat) {
        cmbRuleType.setEnabled(Stat);
        txtRule.setEnabled(Stat);
        txtParameter.setEnabled(Stat);
        txtResult.setEnabled(Stat);
        txtRemarks.setEnabled(Stat);
    }
    
    private void Clear() {
        cmbRuleType.setSelectedItem("");
        txtRule.setText("");
        txtParameter.setText("");
        txtResult.setText("");
        txtRemarks.setText("");
    }
    
    private void SetEnvironment() {
        cmdAdd.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdRemove.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        
        cmbModule.setEnabled(false);
        cmdDisplay.setEnabled(false);
        cmdNext.setEnabled(false);
    }
    
    private void ResetEnvironment() {
        cmdAdd.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdRemove.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        
        cmbModule.setEnabled(true);
        cmdDisplay.setEnabled(true);
        cmdNext.setEnabled(true);
    }
    
    private void DisplayData() {
        try {
            clsApprovalRules objRule=new clsApprovalRules();
            
            objRule.Filter(" WHERE SR_NO="+SrNo,EITLERPGLOBAL.gCompanyID);
            
            cmbRuleType.setSelectedItem(objRule.getAttribute("RULE_TYPE").getString());
            txtRule.setText(objRule.getAttribute("RULE").getString());
            txtParameter.setText(objRule.getAttribute("RULE_PARAMETER").getString());
            txtResult.setText(objRule.getAttribute("RULE_OUTCOME").getString());
            txtRemarks.setText(objRule.getAttribute("REMARKS").getString());
            
            
        }
        catch(Exception e) {
            
        }
        
    }
}

