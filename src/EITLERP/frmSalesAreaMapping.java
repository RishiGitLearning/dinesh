 /*
  * frmTemplate.java
  *
  * Created on April 7, 2004, 3:10 PM
  */

package EITLERP;

/**
 *
 * @author  nitin
 */
/*<APPLET CODE=frmInward.class HEIGHT=500 WIDTH=665></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import javax.swing.text.*;
import EITLERP.Utils.*;
import java.sql.*;
import java.net.*;

public class frmSalesAreaMapping extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsSalesPrefix ObjSalesPrefix;
    private EITLTableModel DataModelS;
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLComboModel cmbUserTypeModel;
    private boolean Updating=false;
    
    private String theDocNo="";
    
    private EITLComboModel cmbModelModel;
    private EITLComboModel cmbMenuTypeModel;
    
    Connection tmpConn;
    Statement tmpStmt;
    ResultSet rsTmp;
    String strSQL="";
    String strNewNo="";
    int lnNewNo=0;
    String Prefix="";
    String Suffix="";
    String cUserType = "";
    /** Creates new form frmTemplate */
    public frmSalesAreaMapping() {
        System.gc();
        setSize(600,450);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        //((JFrame) getParent().getParent().getParent().getParent()).setTitle("Jay");
        
        FormatGridS();
        GenerateCombo();
        ObjSalesPrefix=new clsSalesPrefix();
        
        SetMenuForRights();
        
        if(ObjSalesPrefix.LoadData(EITLERPGLOBAL.gCompanyID))  {
            ObjSalesPrefix.MoveLast();
            DisplayData();
            txtFirstFreeID.setEnabled(false);
            
        }
        else {
            JOptionPane.showMessageDialog(null,"Error occured while loading data. Error is "+ObjSalesPrefix.LastError);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        Tab = new javax.swing.JTabbedPane();
        Tab1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtModuleName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtFirstFreeID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbUserType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        txtModuleID = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        txtFirstFreeName = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtAreaCode = new javax.swing.JTextField();
        lblAreaName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableS = new javax.swing.JTable();
        cmdSAdd = new javax.swing.JButton();
        cmdSRemove = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.setNextFocusableComponent(cmbUserType);
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" ");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 666, 25);

        Tab1.setLayout(null);

        Tab1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Tab1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Tab1FocusGained(evt);
            }
        });
        Tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tab1MouseClicked(evt);
            }
        });

        jLabel1.setText("               User Type  :");
        Tab1.add(jLabel1);
        jLabel1.setBounds(20, 15, 140, 20);

        txtModuleName.setEnabled(false);
        Tab1.add(txtModuleName);
        txtModuleName.setBounds(260, 45, 300, 20);

        jLabel12.setText("             First Free ID : ");
        Tab1.add(jLabel12);
        jLabel12.setBounds(20, 100, 140, 20);

        txtFirstFreeID.setNextFocusableComponent(txtAreaCode);
        txtFirstFreeID.setEnabled(false);
        txtFirstFreeID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFirstFreeIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFirstFreeIDFocusLost(evt);
            }
        });
        txtFirstFreeID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFirstFreeIDKeyPressed(evt);
            }
        });

        Tab1.add(txtFirstFreeID);
        txtFirstFreeID.setBounds(170, 100, 80, 20);

        jLabel2.setText("               Module ID :");
        Tab1.add(jLabel2);
        jLabel2.setBounds(20, 45, 140, 20);

        cmbUserType.setEnabled(false);
        cmbUserType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUserTypeActionPerformed(evt);
            }
        });
        cmbUserType.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbUserTypeFocusGained(evt);
            }
        });

        Tab1.add(cmbUserType);
        cmbUserType.setBounds(170, 15, 220, 20);

        jLabel5.setText("                    User ID : ");
        Tab1.add(jLabel5);
        jLabel5.setBounds(20, 70, 140, 20);

        txtUserID.setNextFocusableComponent(txtFirstFreeID);
        txtUserID.setEnabled(false);
        txtUserID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUserIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserIDFocusLost(evt);
            }
        });
        txtUserID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserIDKeyPressed(evt);
            }
        });

        Tab1.add(txtUserID);
        txtUserID.setBounds(170, 70, 80, 21);

        txtModuleID.setEnabled(false);
        Tab1.add(txtModuleID);
        txtModuleID.setBounds(170, 45, 80, 20);

        txtUserName.setEnabled(false);
        Tab1.add(txtUserName);
        txtUserName.setBounds(260, 70, 300, 20);

        txtFirstFreeName.setEnabled(false);
        Tab1.add(txtFirstFreeName);
        txtFirstFreeName.setBounds(260, 100, 80, 20);

        jPanel8.setLayout(null);

        jPanel8.setBorder(new javax.swing.border.EtchedBorder());
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel4.setText("Area Code : ");
        jPanel8.add(jLabel4);
        jLabel4.setBounds(6, 8, 64, 13);

        txtAreaCode.setName("SUPPLIERS");
        txtAreaCode.setNextFocusableComponent(cmdSAdd);
        txtAreaCode.setEnabled(false);
        txtAreaCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAreaCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAreaCodeFocusLost(evt);
            }
        });
        txtAreaCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAreaCodeKeyPressed(evt);
            }
        });

        jPanel8.add(txtAreaCode);
        txtAreaCode.setBounds(71, 5, 70, 19);

        lblAreaName.setText(".......");
        jPanel8.add(lblAreaName);
        lblAreaName.setBounds(149, 7, 271, 15);

        TableS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TableS);

        jPanel8.add(jScrollPane3);
        jScrollPane3.setBounds(8, 33, 430, 92);

        cmdSAdd.setFont(new java.awt.Font("Dialog", 1, 10));
        cmdSAdd.setText("Add");
        cmdSAdd.setName("SUPPLIERS");
        cmdSAdd.setEnabled(false);
        cmdSAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSAddActionPerformed(evt);
            }
        });

        jPanel8.add(cmdSAdd);
        cmdSAdd.setBounds(450, 30, 79, 23);

        cmdSRemove.setFont(new java.awt.Font("Dialog", 1, 10));
        cmdSRemove.setText("Remove");
        cmdSRemove.setName("SUPPLIERS");
        cmdSRemove.setEnabled(false);
        cmdSRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSRemoveActionPerformed(evt);
            }
        });

        jPanel8.add(cmdSRemove);
        cmdSRemove.setBounds(450, 60, 78, 23);

        Tab1.add(jPanel8);
        jPanel8.setBounds(20, 130, 540, 140);

        Tab.addTab("Sales Area Mapping", Tab1);

        getContentPane().add(Tab);
        Tab.setBounds(2, 66, 580, 310);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(10, 380, 570, 22);

    }//GEN-END:initComponents
    
    private void txtAreaCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAreaCodeFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Area ID. Press F1 for the list of Area Name ");
    }//GEN-LAST:event_txtAreaCodeFocusGained
    
    private void cmbUserTypeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbUserTypeFocusGained
        // TODO add your handling code here:
        ShowMessage("Select Company Salesman or Agent.... ");
    }//GEN-LAST:event_cmbUserTypeFocusGained
    
    private void txtFirstFreeIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFirstFreeIDFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter First Free ID. Press F1 for the list of Prefix ");
    }//GEN-LAST:event_txtFirstFreeIDFocusGained
    
    private void txtUserIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserIDFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter User id. Press F1 for the list of users");
    }//GEN-LAST:event_txtUserIDFocusGained
    
    private void txtUserIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserIDFocusLost
        // TODO add your handling code here:
        
        String username = data.getStringValueFromDB("SELECT USER_NAME FROM D_COM_USER_MASTER WHERE USER_ID = '"+txtUserID.getText()+"' ORDER BY USER_ID");
        txtUserName.setText(username);
        //txtUserID.requestFocus();
    }//GEN-LAST:event_txtUserIDFocusLost
    
    private void txtFirstFreeIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFirstFreeIDFocusLost
        // TODO add your handling code here:
        // int str = data.getIntValueFromDB("SELECT FIRSTFREE_NO FROM D_COM_FIRSTFREE WHERE MODULE_ID = 82  AND FIRSTFREE_NO <> 86 ORDER BY FIRSTFREE_NO");
        String FFname = data.getStringValueFromDB("SELECT PREFIX_CHARS FROM D_COM_FIRSTFREE WHERE MODULE_ID = 82  AND FIRSTFREE_NO <> 86 AND FIRSTFREE_NO = '"+txtFirstFreeID.getText()+"' ORDER BY FIRSTFREE_NO");
        txtFirstFreeName.setText(FFname);
        //txtFirstFreeID.requestFocus();
    }//GEN-LAST:event_txtFirstFreeIDFocusLost
    
    private void cmbUserTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUserTypeActionPerformed
       //txtFirstFreeID.setEnabled(false);  
     
        int   cUserType  = EITLERPGLOBAL.getComboCode(cmbUserType);
        // TODO add your handling code here:
        if(cUserType==0) {
            ////cmbUserType.setSelectedIndex(0);
            txtFirstFreeID.setEnabled(true);
            txtFirstFreeID.setText("");
            txtFirstFreeName.setText("");
            
            
        }
        else
        
        {
            
            String FFID = data.getStringValueFromDB("SELECT FIRSTFREE_NO  FROM D_COM_FIRSTFREE WHERE MODULE_ID = 82  ORDER BY FIRSTFREE_NO");
            txtFirstFreeID.setText("86");
            txtFirstFreeName.setText("S");
            txtFirstFreeID.setEnabled(false);
            
        }
     
    }//GEN-LAST:event_cmbUserTypeActionPerformed
    
    private void txtAreaCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAreaCodeFocusLost
        // TODO add your handling code here:
        
        if(!txtAreaCode.getText().trim().equals("")) {
            
            if(txtAreaCode.getText().equals("-")) {
                lblAreaName.setText("");
            }
            else {
                String AreaID = txtAreaCode.getText().toUpperCase();
                String Area = data.getStringValueFromDB("SELECT AREA_NAME FROM D_SAL_AREA_MASTER WHERE AREA_ID = '"+AreaID+"' ");
                lblAreaName.setText(Area);
            }
            
        }
    }//GEN-LAST:event_txtAreaCodeFocusLost
    
    private void cmdSRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSRemoveActionPerformed
        // TODO add your handling code here:
        if(TableS.getRowCount()>0) {
            DataModelS.removeRow(TableS.getSelectedRow());
        }
    }//GEN-LAST:event_cmdSRemoveActionPerformed
    
    private void cmdSAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSAddActionPerformed
        // TODO add your handling code here:
        if(txtAreaCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Area code");
            txtAreaCode.requestFocus();
            return;
        }
        
        String AreaID = txtAreaCode.getText().toUpperCase();
        String Area = data.getStringValueFromDB("SELECT AREA_ID FROM D_SAL_AREA_MASTER WHERE AREA_ID = '"+AreaID+"' ");
        
        if((!AreaID.equals(Area)) && (!AreaID.equals("-"))) {
            JOptionPane.showMessageDialog(null,"Please enter Correct Area code");
            txtAreaCode.requestFocus();
            return;
        }
        
        
        
        
        for(int i=0;i<TableS.getRowCount();i++) {
            String tAreaCode=(String)TableS.getValueAt(i, 1);
            if(tAreaCode.trim().equals(txtAreaCode.getText().toUpperCase().trim())) {
                JOptionPane.showMessageDialog(null,"Area code already exist");
                txtAreaCode.requestFocus();
                return;
            }
        }
        
        //String tmp = txtAreaCode.getText().trim();
        if(txtAreaCode.getText().trim().equals("-")) {
            if(TableS.getRowCount()>0) {
                JOptionPane.showMessageDialog(null,"user can't add ' - ' area code");
                txtAreaCode.requestFocus();
                return ;
            }
        }
        
        for(int i=0;i<TableS.getRowCount();i++) {
            String tAreaCode=(String)TableS.getValueAt(i, 1);
            if(tAreaCode.trim().equals("-")) {
                JOptionPane.showMessageDialog(null,"user can't add any other area code");
                txtAreaCode.requestFocus();
                return;
            }
        }
        
        Object[] rowData=new Object[3];
        
        rowData[0]=Integer.toString(TableS.getRowCount()+1);
        rowData[1]=txtAreaCode.getText().toUpperCase();
        rowData[2]=lblAreaName.getText();
        DataModelS.addRow(rowData);
        
        txtAreaCode.setText("");
        lblAreaName.setText("");
        txtAreaCode.requestFocus();
    }//GEN-LAST:event_cmdSAddActionPerformed
    
    private void txtAreaCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAreaCodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT AREA_ID,AREA_NAME FROM D_SAL_AREA_MASTER ORDER BY AREA_ID";
            aList.ReturnCol=1;
            aList.SecondCol=2;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=3;
            
            if(aList.ShowLOV()) {
                
                txtAreaCode.setText(aList.ReturnVal);
                lblAreaName.setText(aList.SecondVal);
                
            }
        }
        
    }//GEN-LAST:event_txtAreaCodeKeyPressed
    
    private void txtUserIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserIDKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT USER_ID,USER_NAME FROM D_COM_USER_MASTER WHERE DEPT_ID = 33 ORDER BY USER_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            if(aList.ShowLOV()) {
                String UserID = (String) aList.ReturnVal;
                long User = (long) Long.parseLong(UserID);
                txtUserID.setText(UserID);
                txtUserName.setText((String) clsUser.getUserName(EITLERPGLOBAL.gCompanyID,User));
            }
        }
        
        
        
    }//GEN-LAST:event_txtUserIDKeyPressed
    
    private void txtFirstFreeIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstFreeIDKeyPressed
        
        
        // TODO add your handling code here:
        
        
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            
            aList.SQL= "SELECT FIRSTFREE_NO,PREFIX_CHARS  FROM D_COM_FIRSTFREE WHERE MODULE_ID = 82  AND FIRSTFREE_NO <> 86 ORDER BY FIRSTFREE_NO";
            
            aList.ReturnCol=1;
            aList.SecondCol=2;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                
                txtFirstFreeID.setText(aList.ReturnVal);
                txtFirstFreeName.setText(aList.SecondVal);
                
            }
        }
    }//GEN-LAST:event_txtFirstFreeIDKeyPressed
    
    private void Tab1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_Tab1FocusGained
    
    private void Tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tab1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Tab1MouseClicked
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ObjSalesPrefix.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        //Find();
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        // if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
        //   Delete();
        // }
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JPanel Tab1;
    private javax.swing.JTable TableS;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbUserType;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSAdd;
    private javax.swing.JButton cmdSRemove;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdTop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAreaName;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAreaCode;
    private javax.swing.JTextField txtFirstFreeID;
    private javax.swing.JTextField txtFirstFreeName;
    private javax.swing.JTextField txtModuleID;
    private javax.swing.JTextField txtModuleName;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    
    private void SetFields(boolean pStat) {
        
        //txtModuleID.setEnabled(pStat);
        //txtModuleName.setEnabled(pStat);
        txtUserID.setEnabled(pStat);
        //txtUserName.setEnabled(pStat);
        txtAreaCode.setEnabled(pStat);
        txtFirstFreeID.setEnabled(pStat);
        //txtFirstFreeName.setEnabled(pStat);
        
        cmbUserType.setEnabled(pStat);
        cmdSAdd.setEnabled(pStat);
        cmdSRemove.setEnabled(pStat);
        
    }
    
    private void ClearFields() {
        txtModuleID.setText("");
        txtModuleName.setText("");
        txtUserID.setText("");
        txtUserName.setText("");
        txtFirstFreeID.setText("");
        txtFirstFreeName.setText("");
        txtAreaCode.setText("");
        
        FormatGridS();
        
        
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        
        
        EITLERPGLOBAL.setComboIndex(cmbUserType,ObjSalesPrefix.getAttribute("USER_TYPE").getInt());
        
        txtModuleID.setText(ObjSalesPrefix.getAttribute("MODULE_ID").getString());
        //String ModuleName = data.getStringValueFromDB("SELECT MODULE_DESC FROM D_COM_MODULES WHERE MODULE_ID = '" + ObjSalesPrefix.getAttribute("MODULE_ID").getString() + "' ");
        txtModuleName.setText(data.getStringValueFromDB("SELECT MODULE_DESC FROM D_COM_MODULES WHERE MODULE_ID = '" + ObjSalesPrefix.getAttribute("MODULE_ID").getString() + "' "));
        txtUserID.setText(Integer.toString((int)ObjSalesPrefix.getAttribute("USER_ID").getVal()));
        String UserName = data.getStringValueFromDB("SELECT USER_NAME FROM D_COM_USER_MASTER WHERE USER_ID = '"+Integer.toString((int)ObjSalesPrefix.getAttribute("USER_ID").getVal())+"' AND COMPANY_ID = '"+EITLERPGLOBAL.gCompanyID+"' ORDER BY USER_NAME ");
        txtUserName.setText(UserName);
        
        //String test = ObjSalesPrefix.getAttribute("FF_ID").getString();
        txtFirstFreeID.setText(ObjSalesPrefix.getAttribute("FF_ID").getString());
        
        //String FFPrefix = data.getStringValueFromDB("SELECT PREFIX_CHARS  FROM D_COM_FIRSTFREE WHERE MODULE_ID = 82 ORDER BY FIRSTFREE_NO = '"+test+"' ");
        String FFPrefix = data.getStringValueFromDB("SELECT PREFIX_CHARS  FROM D_COM_FIRSTFREE WHERE FIRSTFREE_NO = '"+ObjSalesPrefix.getAttribute("FF_ID").getString()+"' ");
        txtFirstFreeName.setText(FFPrefix);
        //String AreaID=data.getStringValueFromDB("SELECT AREA_ID  FROM D_SAL_USER_AREA_MAPPING WHERE USER_ID = '"+Integer.toString((int)ObjSalesPrefix.getAttribute("USER_ID").getVal())+"' ");;
        FormatGridS();
        for(int i=1;i<=ObjSalesPrefix.colArea.size();i++) {
            clsSalesAreaMapping ObjArea=(clsSalesAreaMapping)ObjSalesPrefix.colArea.get(Integer.toString(i));
            Object[] rowData=new Object[3];
            //ObjArea.getAttribute("AREA_ID");
            
            
            rowData[0]=Integer.toString(i);
            rowData[1]=ObjArea.getAttribute("AREA_ID").getString();
            rowData[2]=data.getStringValueFromDB("SELECT AREA_NAME FROM D_SAL_AREA_MASTER WHERE AREA_ID = '"+ObjArea.getAttribute("AREA_ID").getString()+"' AND COMPANY_ID = '"+EITLERPGLOBAL.gCompanyID+"' ");
            
            DataModelS.addRow(rowData);
        }
        
    }
    
    //Sets data to the Class Object
    private void SetData() {
        
        // String ParentID = txtParentID.getText();
        ObjSalesPrefix.setAttribute("USER_ID",txtUserID.getText().trim());
        ObjSalesPrefix.setAttribute("MODULE_ID",txtModuleID.getText().trim());
        ObjSalesPrefix.setAttribute("FF_ID",txtFirstFreeID.getText().trim());
        ObjSalesPrefix.setAttribute("USER_TYPE",EITLERPGLOBAL.getComboCode(cmbUserType));
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            ObjSalesPrefix.setAttribute("CREATED_BY",Integer.toString(EITLERPGLOBAL.gNewUserID));
            ObjSalesPrefix.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        else {
            ObjSalesPrefix.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gNewUserID);
            ObjSalesPrefix.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        
        ObjSalesPrefix.colArea.clear();
        
        for(int i=0;i<TableS.getRowCount();i++) {
            clsSalesAreaMapping ObjArea=new  clsSalesAreaMapping();
            
            ObjArea.setAttribute("SR_NO",i+1);
            ObjArea.setAttribute("AREA_ID",TableS.getValueAt(i,1).toString());
            ObjArea.setAttribute("USER_ID",txtUserID.getText().trim());
            
            ObjSalesPrefix.colArea.put(Integer.toString(i+1),ObjArea);
        }
        clsSalesAreaMapping ObjArea=new  clsSalesAreaMapping();
        if(EditMode==EITLERPGLOBAL.ADD) {
            ObjArea.setAttribute("CREATED_BY",EITLERPGLOBAL.gNewUserID);
            ObjArea.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        else {
            ObjArea.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gNewUserID);
            ObjArea.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            ObjArea.setAttribute("CREATED_BY",EITLERPGLOBAL.gNewUserID);
            ObjArea.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        else {
            ObjArea.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gNewUserID);
            ObjArea.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
    }
    
    
    private void SetMenuForRights() {
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,10331)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,10332)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }
        
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,10333)) {
            cmdDelete.setEnabled(true);
        }
        else {
            cmdDelete.setEnabled(false);
        }
    }
    
    private void Add() {
        
        EITLERPGLOBAL.ChangeCursorToWait(this);
        EditMode=EITLERPGLOBAL.ADD;
        SetFields(true);
        DisableToolbar();
        ClearFields();
        cUserType  = EITLERPGLOBAL.getCombostrCode(cmbUserType);
        String MID = data.getStringValueFromDB("SELECT MODULE_ID AS MODULE_ID FROM D_COM_MODULES WHERE MODULE_ID = 82 ");
        int ModuleID = Integer.parseInt(MID);
        txtModuleID.setText(Integer.toString(ModuleID));
        String name = data.getStringValueFromDB("SELECT MODULE_DESC AS MODULE_NAME FROM D_COM_MODULES WHERE MODULE_ID = 82 ");
        txtModuleName.setText(name);
        
        
        
        //lblTitle.setText("Module ID  - "+txtModuleID.getText());
        EITLERPGLOBAL.ChangeCursorToDefault(this);
        
        
    }
    
    private void Edit() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        EditMode=EITLERPGLOBAL.EDIT;
        //---New Change ---//
        DisplayData();
        //----------------//
        
        SetFields(true);
        DisableToolbar();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
   /* private void Delete() {
        if(ObjMenuMaster.Delete()) {
            MoveLast();
        }
    }*/
    
    private void Save() {
        //Form level validations
        
        if(Validate()==false) {
            return; //Validation failed
        }
        SetData();
        EITLERPGLOBAL.ChangeCursorToWait(this);
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(ObjSalesPrefix.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+ObjSalesPrefix.LastError);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(ObjSalesPrefix.Update()) {
                //Nothing to do
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+ObjSalesPrefix.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Cancel() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
   /* private void Find() {
        Loader ObjLoader=new Loader(this,"EITLERP.frmEmpFind",true);
        frmEmpFind ObjReturn= (frmEmpFind) ObjLoader.getObj();
    
        if(ObjReturn.Cancelled==false) {
            if(!ObjSalesPrefix.Filter(ObjReturn.strQuery)) {
                JOptionPane.showMessageDialog(null,"No records found.");
            }
            MoveFirst();
        }
    }*/
    
    private void MoveFirst() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjSalesPrefix.MoveFirst();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MovePrevious() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjSalesPrefix.MovePrevious();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveNext() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjSalesPrefix.MoveNext();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveLast() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjSalesPrefix.MoveLast();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
  /*  public void FindEx(int pCompanyID,int pDocNo) {
        ObjSalesPrefix.Filter(" WHERE COMPANY_ID="+Integer.toString(pCompanyID)+" AND EMPLOYEE_ID="+pDocNo);
        ObjSalesPrefix.MoveFirst();
        DisplayData();
    }*/
    
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    private void GenerateCombo() {
        
        //--- Generate Type Combo ------//
        ComboData aData=new ComboData();
        
        
        cmbUserTypeModel=new EITLComboModel();
        cmbUserType.removeAllItems();
        cmbUserType.setModel(cmbUserTypeModel);
        
        aData=new ComboData();
        aData.Code=0;
        aData.Text="Company Salesman";
        cmbUserTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="Agent";
        cmbUserTypeModel.addElement(aData);
        
        
        
    }
    
    private boolean Validate() {
        
        if(txtUserID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter User ID");
            return false;
        }
        
        
        if(txtFirstFreeID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter First Free ID");
            return false;
        }
        
        int FFID = data.getIntValueFromDB("SELECT FIRSTFREE_NO FROM D_COM_FIRSTFREE WHERE MODULE_ID = 82  AND FIRSTFREE_NO <> 86 AND FIRSTFREE_NO = '"+txtFirstFreeID.getText()+"' ORDER BY FIRSTFREE_NO");
        String FID = Integer.toString(FFID);
        if(EITLERPGLOBAL.getComboCode(cmbUserType)== 0) {
            if(!txtFirstFreeID.getText().trim().equals(FID)) {
                JOptionPane.showMessageDialog(null,"Please enter Correct First Free ID");
                //txtFirstFreeID.requestFocus();
                return false;
            }
        }
        String SQLQuery = "SELECT * FROM D_SAL_DOC_PREFIX WHERE USER_ID = '"+txtUserID.getText() +"'";
        if(EditMode==EITLERPGLOBAL.ADD){
        if(data.IsRecordExist(SQLQuery)) {
            JOptionPane.showMessageDialog(null,"User Already exists. You cannot create this document");
            //txtFirstFreeID.requestFocus();
            return false;
        }
        } 
        
        int UID1= data.getIntValueFromDB("SELECT USER_ID FROM D_COM_USER_MASTER WHERE USER_ID = '"+txtUserID.getText()+"' ORDER BY USER_ID");
        String UID = Integer.toString(UID1);
        
            if(!txtUserID.getText().trim().equals(UID)) {
                JOptionPane.showMessageDialog(null,"Please enter Correct User ID");
                //txtFirstFreeID.requestFocus();
                return false;
            }
        
        
        return true ;
    }
    
    private void FormatGridS() {
        DataModelS=new EITLTableModel();
        
        TableS.removeAll();
        TableS.setModel(DataModelS);
        
        DataModelS.TableReadOnly(true);
        //Add the columns
        DataModelS.addColumn("Sr.No."); //0
        DataModelS.addColumn("Area Code"); //1
        DataModelS.addColumn("Area Name"); //2
        
        //TableS.setAutoResizeMode(TableS.AUTO_RESIZE_OFF);
        
        
    }
}
