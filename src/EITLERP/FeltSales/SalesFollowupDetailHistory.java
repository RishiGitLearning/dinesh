/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales;

import EITLERP.EITLERPGLOBAL;
import EITLERP.data;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author root
 */
public class SalesFollowupDetailHistory {

    public static void main(String[] args) {
        int lDay = data.getIntValueFromDB("SELECT DAY(LAST_DAY(CURDATE())) FROM DUAL");
        if (EITLERPGLOBAL.getCurrentDay() == lDay) { 
            data.Execute("INSERT INTO PRODUCTION.FELT_SALES_FOLLOWUP_DETAIL_PREVIOUSMONTH "
                + "(DOC_NO, SR_NO, DOC_MONTH, DOC_YEAR, PIECE_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, POSITION, UPN, "
                + "REQUESTED_MONTH, OC_MONTH, CURR_SCH_MONTH, RE_SCH_MONTH, PRODUCT_CODE, BILL_PRODUCT_CODE, PR_GROUP, STYLE, "
                + "BILL_STYLE, LENGTH, ACTUAL_LENGTH, BILL_LENGTH, WIDTH, ACTUAL_WIDTH, SQMTR, BILL_SQMTR, GSM, BILL_GSM, TENDER_GSM, "
                + "TH_WEIGHT, TENDER_WEIGHT, ACTUAL_WEIGHT, BILL_WEIGHT, WEAVING_WEIGHT, NEEDLING_WEIGHT, SEAM_WEIGHT, SPLICE_WEIGHT, "
                + "WEAVING_DATE, MENDING_DATE, NEEDLING_DATE, FINISHING_DATE, INCHARGE, PIECE_STAGE, PIECE_OBSOLETE, OBSOLETE_DATE, "
                + "REQUESTED_MONTH_DATE, OC_MONTH_DATE, CURR_SCH_MONTH_DATE, RE_SCH_MONTH_DATE, CUR_PIECE_STAGE, OC_FALL_MONTH, "
                + "OC_FALL_MONTH_DATE, INVOICE_NO, INVOICE_DATE, UNABLE_TO_CONTACT, DATE_OF_COMMUNICATION, MODE_OF_COMMUNICATION, "
                + "CONTACT_PERSON, CONTACTED_NO, PARTY_JUSTIFICATION, AREA_MANAGER_COMMENT, RESCHEDULED, EXPECTED_DISPATCH_DATE, "
                + "PREVIOUS_DISPATCH_DATE, EXP_DISPATCH_HISTORY, DATE_COUNTER_MONTH, RESCHEDULED_MONTH_HISTORY, RESCHEDULED_MONTH_COUNT, "
                + "DELAY_REASON, INVOICE_VALUE, ADDITIONAL_REMARK, FOLLOWUP_DATE, EXPECTED_MONTH_OF_DISPATCH) "
                + "SELECT "
                + "DOC_NO, SR_NO, DOC_MONTH, DOC_YEAR, PIECE_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, POSITION, UPN, "
                + "REQUESTED_MONTH, OC_MONTH, CURR_SCH_MONTH, RE_SCH_MONTH, PRODUCT_CODE, BILL_PRODUCT_CODE, PR_GROUP, STYLE, "
                + "BILL_STYLE, LENGTH, ACTUAL_LENGTH, BILL_LENGTH, WIDTH, ACTUAL_WIDTH, SQMTR, BILL_SQMTR, GSM, BILL_GSM, TENDER_GSM, "
                + "TH_WEIGHT, TENDER_WEIGHT, ACTUAL_WEIGHT, BILL_WEIGHT, WEAVING_WEIGHT, NEEDLING_WEIGHT, SEAM_WEIGHT, SPLICE_WEIGHT, "
                + "WEAVING_DATE, MENDING_DATE, NEEDLING_DATE, FINISHING_DATE, INCHARGE, PIECE_STAGE, PIECE_OBSOLETE, OBSOLETE_DATE, "
                + "REQUESTED_MONTH_DATE, OC_MONTH_DATE, CURR_SCH_MONTH_DATE, RE_SCH_MONTH_DATE, CUR_PIECE_STAGE, OC_FALL_MONTH, "
                + "OC_FALL_MONTH_DATE, INVOICE_NO, INVOICE_DATE, UNABLE_TO_CONTACT, DATE_OF_COMMUNICATION, MODE_OF_COMMUNICATION, "
                + "CONTACT_PERSON, CONTACTED_NO, PARTY_JUSTIFICATION, AREA_MANAGER_COMMENT, RESCHEDULED, EXPECTED_DISPATCH_DATE, "
                + "PREVIOUS_DISPATCH_DATE, EXP_DISPATCH_HISTORY, DATE_COUNTER_MONTH, RESCHEDULED_MONTH_HISTORY, RESCHEDULED_MONTH_COUNT, "
                + "DELAY_REASON, INVOICE_VALUE, ADDITIONAL_REMARK, FOLLOWUP_DATE, EXPECTED_MONTH_OF_DISPATCH "
                + "FROM PRODUCTION.FELT_SALES_FOLLOWUP_DETAIL");
        }
        runQuery();
    }

    private static void runQuery() {

        data.Execute("INSERT INTO PRODUCTION.FELT_SALES_FOLLOWUP_DETAIL_HISTORY (ENTRY_DATETIME, DOC_NO, SR_NO, DOC_MONTH, DOC_YEAR, "
                + "PIECE_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, POSITION, UPN, REQUESTED_MONTH, OC_MONTH, CURR_SCH_MONTH, RE_SCH_MONTH, "
                + "PRODUCT_CODE, BILL_PRODUCT_CODE, PR_GROUP, STYLE, BILL_STYLE, LENGTH, ACTUAL_LENGTH, BILL_LENGTH, WIDTH, ACTUAL_WIDTH, "
                + "SQMTR, BILL_SQMTR, GSM, BILL_GSM, TENDER_GSM, TH_WEIGHT, TENDER_WEIGHT, ACTUAL_WEIGHT, BILL_WEIGHT, WEAVING_WEIGHT, "
                + "NEEDLING_WEIGHT, SEAM_WEIGHT, SPLICE_WEIGHT, WEAVING_DATE, MENDING_DATE, NEEDLING_DATE, FINISHING_DATE, INCHARGE, "
                + "PIECE_STAGE, PIECE_OBSOLETE, OBSOLETE_DATE, REQUESTED_MONTH_DATE, OC_MONTH_DATE, CURR_SCH_MONTH_DATE, RE_SCH_MONTH_DATE, "
                + "CUR_PIECE_STAGE, OC_FALL_MONTH, OC_FALL_MONTH_DATE, INVOICE_NO, INVOICE_DATE, UNABLE_TO_CONTACT, DATE_OF_COMMUNICATION, "
                + "MODE_OF_COMMUNICATION, CONTACT_PERSON, CONTACTED_NO, PARTY_JUSTIFICATION, AREA_MANAGER_COMMENT, RESCHEDULED, EXPECTED_DISPATCH_DATE, "
                + "PREVIOUS_DISPATCH_DATE, EXP_DISPATCH_HISTORY, DATE_COUNTER_MONTH, RESCHEDULED_MONTH_HISTORY, RESCHEDULED_MONTH_COUNT, DELAY_REASON, "
                + "INVOICE_VALUE, ADDITIONAL_REMARK, FOLLOWUP_DATE, EXPECTED_MONTH_OF_DISPATCH,PARTY_LIFTING_COMMITMENT_STATUS,PARTY_LIFTING_COMMITMENT_DATE) "
                + "SELECT NOW(), DOC_NO, SR_NO, DOC_MONTH, DOC_YEAR, "
                + "PIECE_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, POSITION, UPN, REQUESTED_MONTH, OC_MONTH, CURR_SCH_MONTH, RE_SCH_MONTH, "
                + "PRODUCT_CODE, BILL_PRODUCT_CODE, PR_GROUP, STYLE, BILL_STYLE, LENGTH, ACTUAL_LENGTH, BILL_LENGTH, WIDTH, ACTUAL_WIDTH, "
                + "SQMTR, BILL_SQMTR, GSM, BILL_GSM, TENDER_GSM, TH_WEIGHT, TENDER_WEIGHT, ACTUAL_WEIGHT, BILL_WEIGHT, WEAVING_WEIGHT, "
                + "NEEDLING_WEIGHT, SEAM_WEIGHT, SPLICE_WEIGHT, WEAVING_DATE, MENDING_DATE, NEEDLING_DATE, FINISHING_DATE, INCHARGE, "
                + "PIECE_STAGE, PIECE_OBSOLETE, OBSOLETE_DATE, REQUESTED_MONTH_DATE, OC_MONTH_DATE, CURR_SCH_MONTH_DATE, RE_SCH_MONTH_DATE, "
                + "CUR_PIECE_STAGE, OC_FALL_MONTH, OC_FALL_MONTH_DATE, INVOICE_NO, INVOICE_DATE, UNABLE_TO_CONTACT, DATE_OF_COMMUNICATION, "
                + "MODE_OF_COMMUNICATION, CONTACT_PERSON, CONTACTED_NO, PARTY_JUSTIFICATION, AREA_MANAGER_COMMENT, RESCHEDULED, EXPECTED_DISPATCH_DATE, "
                + "PREVIOUS_DISPATCH_DATE, EXP_DISPATCH_HISTORY, DATE_COUNTER_MONTH, RESCHEDULED_MONTH_HISTORY, RESCHEDULED_MONTH_COUNT, DELAY_REASON, "
                + "INVOICE_VALUE, ADDITIONAL_REMARK, FOLLOWUP_DATE, EXPECTED_MONTH_OF_DISPATCH,PARTY_LIFTING_COMMITMENT_STATUS,PARTY_LIFTING_COMMITMENT_DATE  "
                + "FROM PRODUCTION.FELT_SALES_FOLLOWUP_DETAIL "
                + "WHERE EXPECTED_DISPATCH_DATE<=CURDATE() AND CUR_PIECE_STAGE IN ('IN STOCK','BSR') ");

        
        data.Execute("UPDATE PRODUCTION.FELT_SALES_FOLLOWUP_DETAIL "
                + "SET  EXPECTED_DISPATCH_DATE = FOLLOWUP_DATE "
                + "WHERE COALESCE(FOLLOWUP_DATE,'0000-00-00') != '0000-00-00' "
                + "AND FOLLOWUP_DATE>CURDATE() AND CUR_PIECE_STAGE IN ('IN STOCK','BSR') ");

        data.Execute("INSERT INTO PRODUCTION.FELT_SALES_EXPECTED_DISPATCH_DATE_HISTORY (PIECE_NO, PR_WH_EXP_DISPATCH_DATE, ENTRY_DATE, "
                + "USER_ID, REMARK, UNABLE_TO_CONTACT, CONTACTED_PERSON, CONTACTED_NO, ADDITIONAL_REMARK, DATE_OF_COMMUNICATION, "
                + "MODE_OF_COMMUNICATION, PARTY_JUSTIFICATION, AREA_MANAGER_COMMENT) "
                + "SELECT PIECE_NO, DATE_ADD(CURDATE(), INTERVAL 1 DAY) AS EXPECTED_DATE, NOW(), 227, 'AUTO SPILLOVER', "
                + "COALESCE(UNABLE_TO_CONTACT,0), CONTACT_PERSON, CONTACTED_NO, ADDITIONAL_REMARK, DATE_OF_COMMUNICATION, "
                + "MODE_OF_COMMUNICATION, PARTY_JUSTIFICATION, AREA_MANAGER_COMMENT "
                + "FROM PRODUCTION.FELT_SALES_FOLLOWUP_DETAIL "
                + "WHERE EXPECTED_DISPATCH_DATE<=CURDATE() AND CUR_PIECE_STAGE IN ('IN STOCK','BSR') ");

        data.Execute("UPDATE PRODUCTION.FELT_SALES_FOLLOWUP_DETAIL "
                + " SET AREA_MANAGER_COMMENT='',PARTY_JUSTIFICATION='',CONTACTED_NO='',CONTACT_PERSON='',MODE_OF_COMMUNICATION=''"
                + ",DATE_OF_COMMUNICATION='0000-00-00',UNABLE_TO_CONTACT='',DELAY_REASON='',FOLLOWUP_DATE='0000-00-00' "
                + " WHERE MONTH(EXPECTED_DISPATCH_DATE)=MONTH(CURDATE()) AND YEAR(EXPECTED_DISPATCH_DATE)=YEAR(CURDATE()) ");//AND CUR_PIECE_STAGE IN ('IN STOCK','BSR') 

        data.Execute("UPDATE PRODUCTION.FELT_SALES_FOLLOWUP_DETAIL "
                + " SET  EXPECTED_DISPATCH_DATE = DATE_ADD(CURDATE(), INTERVAL 1 DAY) "
                + " WHERE EXPECTED_DISPATCH_DATE<=CURDATE() AND CUR_PIECE_STAGE IN ('IN STOCK','BSR') ");
        
        
        //
        data.Execute("INSERT INTO PRODUCTION.FELT_SALES_FOLLOWUP_CLUBBING_DETAIL_HISTORY (ENTRY_DATETIME, DOC_NO, SR_NO, DOC_MONTH, "
                + "DOC_YEAR, PIECE_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, POSITION, UPN, REQUESTED_MONTH, OC_MONTH, CURR_SCH_MONTH, "
                + "RE_SCH_MONTH, PRODUCT_CODE, BILL_PRODUCT_CODE, PR_GROUP, STYLE, BILL_STYLE, LENGTH, ACTUAL_LENGTH, BILL_LENGTH, "
                + "WIDTH, ACTUAL_WIDTH, SQMTR, BILL_SQMTR, GSM, BILL_GSM, TENDER_GSM, TH_WEIGHT, TENDER_WEIGHT, ACTUAL_WEIGHT, "
                + "BILL_WEIGHT, WEAVING_WEIGHT, NEEDLING_WEIGHT, SEAM_WEIGHT, SPLICE_WEIGHT, WEAVING_DATE, MENDING_DATE, NEEDLING_DATE, "
                + "FINISHING_DATE, INCHARGE, PIECE_STAGE, PIECE_OBSOLETE, OBSOLETE_DATE, REQUESTED_MONTH_DATE, OC_MONTH_DATE, "
                + "CURR_SCH_MONTH_DATE, RE_SCH_MONTH_DATE, CUR_PIECE_STAGE, OC_FALL_MONTH, OC_FALL_MONTH_DATE, INVOICE_NO, INVOICE_DATE, UNABLE_TO_CONTACT, DATE_OF_COMMUNICATION, MODE_OF_COMMUNICATION, CONTACT_PERSON, CONTACTED_NO, PARTY_JUSTIFICATION, AREA_MANAGER_COMMENT, RESCHEDULED, EXPECTED_DISPATCH_DATE, PREVIOUS_DISPATCH_DATE, EXP_DISPATCH_HISTORY, DATE_COUNTER_MONTH, RESCHEDULED_MONTH_HISTORY, "
                + "RESCHEDULED_MONTH_COUNT, DELAY_REASON, INVOICE_VALUE, ADDITIONAL_REMARK, FOLLOWUP_DATE, "
                + "EXPECTED_MONTH_OF_DISPATCH, CURRENT_STATUS, PARTY_LIFTING_COMMITMENT_STATUS, PARTY_LIFTING_COMMITMENT_DATE) "
                + " SELECT NOW(),DOC_NO, SR_NO, DOC_MONTH, DOC_YEAR, PIECE_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, "
                + "POSITION, UPN, REQUESTED_MONTH, OC_MONTH, CURR_SCH_MONTH, RE_SCH_MONTH, PRODUCT_CODE, "
                + "BILL_PRODUCT_CODE, PR_GROUP, STYLE, BILL_STYLE, LENGTH, ACTUAL_LENGTH, BILL_LENGTH, WIDTH, "
                + "ACTUAL_WIDTH, SQMTR, BILL_SQMTR, GSM, BILL_GSM, TENDER_GSM, TH_WEIGHT, TENDER_WEIGHT, ACTUAL_WEIGHT,"
                + " BILL_WEIGHT, WEAVING_WEIGHT, NEEDLING_WEIGHT, SEAM_WEIGHT, SPLICE_WEIGHT, WEAVING_DATE,"
                + " MENDING_DATE, NEEDLING_DATE, FINISHING_DATE, INCHARGE, PIECE_STAGE, PIECE_OBSOLETE, OBSOLETE_DATE,"
                + " REQUESTED_MONTH_DATE, OC_MONTH_DATE, CURR_SCH_MONTH_DATE, RE_SCH_MONTH_DATE, CUR_PIECE_STAGE, "
                + "OC_FALL_MONTH, OC_FALL_MONTH_DATE, INVOICE_NO, INVOICE_DATE, UNABLE_TO_CONTACT, "
                + "DATE_OF_COMMUNICATION, MODE_OF_COMMUNICATION, CONTACT_PERSON, CONTACTED_NO, PARTY_JUSTIFICATION, "
                + "AREA_MANAGER_COMMENT, RESCHEDULED, EXPECTED_DISPATCH_DATE, PREVIOUS_DISPATCH_DATE, "
                + "EXP_DISPATCH_HISTORY, DATE_COUNTER_MONTH, RESCHEDULED_MONTH_HISTORY, RESCHEDULED_MONTH_COUNT, "
                + "DELAY_REASON, INVOICE_VALUE, ADDITIONAL_REMARK, FOLLOWUP_DATE, EXPECTED_MONTH_OF_DISPATCH, "
                + "CURRENT_STATUS, PARTY_LIFTING_COMMITMENT_STATUS, PARTY_LIFTING_COMMITMENT_DATE FROM PRODUCTION.FELT_SALES_FOLLOWUP_CLUBBING_DETAIL "
                + " WHERE EXPECTED_DISPATCH_DATE<=CURDATE() AND EXPECTED_MONTH_OF_DISPATCH='Aug - 2022'  AND CURRENT_STATUS='Active'");
        
        data.Execute("UPDATE PRODUCTION.FELT_SALES_FOLLOWUP_CLUBBING_DETAIL "
                + "SET  EXPECTED_DISPATCH_DATE = FOLLOWUP_DATE "
                + "WHERE COALESCE(FOLLOWUP_DATE,'0000-00-00') != '0000-00-00' "
                + "AND FOLLOWUP_DATE>CURDATE()");
        
        data.Execute("UPDATE PRODUCTION.FELT_SALES_FOLLOWUP_CLUBBING_DETAIL "
                + " SET AREA_MANAGER_COMMENT='',PARTY_JUSTIFICATION='',CONTACTED_NO='',CONTACT_PERSON='',MODE_OF_COMMUNICATION=''"
                + ",DATE_OF_COMMUNICATION='0000-00-00',UNABLE_TO_CONTACT='',DELAY_REASON='',FOLLOWUP_DATE='0000-00-00' "
                + " WHERE EXPECTED_MONTH_OF_DISPATCH='Aug - 2022' AND CURRENT_STATUS='Active'");

        data.Execute("UPDATE PRODUCTION.FELT_SALES_FOLLOWUP_CLUBBING_DETAIL "
                + " SET  EXPECTED_DISPATCH_DATE = DATE_ADD(CURDATE(), INTERVAL 1 DAY) "
                + " WHERE EXPECTED_DISPATCH_DATE<=CURDATE() AND EXPECTED_MONTH_OF_DISPATCH='Aug - 2022' AND CURRENT_STATUS='Active' ");
        
        
            try{
                    data.Execute("UPDATE PRODUCTION.FELT_SALES_PIECE_CLUBBING_HEADER H,\n" +
                        "(SELECT * FROM (SELECT PC_DOC_NO,PR_CURRENT_SCH_MONTH,PR_OC_MONTHYEAR,PR_CURRENT_SCH_LAST_DDMMYY\n" +
                        "FROM PRODUCTION.FELT_SALES_PIECE_CLUBBING_DETAIL D,PRODUCTION.FELT_SALES_PIECE_REGISTER R\n" +
                        "WHERE D.PIECE_NO=R.PR_PIECE_NO\n" +
                        "ORDER BY PR_CURRENT_SCH_LAST_DDMMYY DESC) AS D\n" +
                        "GROUP BY PC_DOC_NO) AS D\n" +
                        "SET H.LAST_OC_MONTH=PR_OC_MONTHYEAR,H.LAST_CURR_SCH_MONTH=D.PR_CURRENT_SCH_MONTH\n" +
                        "WHERE H.PC_DOC_NO=D.PC_DOC_NO");
                    
                    data.Execute("UPDATE PRODUCTION.FELT_SALES_FOLLOWUP_CLUBBING_DETAIL D,\n" +
                    "PRODUCTION.FELT_SALES_PIECE_CLUBBING_HEADER H \n" +
                    "SET D.EXPECTED_MONTH_OF_DISPATCH=H.LAST_CURR_SCH_MONTH WHERE D.DOC_NO=H.PC_DOC_NO");
            }catch(Exception e)
            {
                e.printStackTrace();
            }
    }
}
