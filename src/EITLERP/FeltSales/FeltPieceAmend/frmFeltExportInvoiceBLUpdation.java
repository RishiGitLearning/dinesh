/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.FeltPieceAmend;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableModel;
import EITLERP.LOV;
import EITLERP.data;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableColumnModel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author root
 */
public class frmFeltExportInvoiceBLUpdation extends javax.swing.JApplet {

    private EITLTableModel DataModel;

    private clsFeltPieceAmendmentEXPORT ObjFeltOrderUpd;

    public boolean Update = false;

    /**
     * Initializes the applet frmFeltExportInvoiceBLUpdation
     */
    @Override
    public void init() {
        /* Create and display the applet */
        
        //try {
        //    java.awt.EventQueue.invokeAndWait(new Runnable() {
        //        public void run() {
        //            initComponents();
        //        }
        //    });
        //} catch (Exception ex) {
        //    ex.printStackTrace();
        //}
        
        initComponents();
        System.gc();
        setSize(700, 500);
        lblTitle.setForeground(Color.WHITE);
        FormatGrid();
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdAdd = new javax.swing.JButton();
        cmdRemove = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("Felt Export Invoice BL Updation");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 0, 700, 25);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 680, 280);

        cmdAdd.setMnemonic('A');
        cmdAdd.setText("Add");
        cmdAdd.setToolTipText("Add Row");
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });
        getContentPane().add(cmdAdd);
        cmdAdd.setBounds(30, 330, 90, 28);

        cmdRemove.setMnemonic('R');
        cmdRemove.setText("Remove");
        cmdRemove.setToolTipText("Remove Selected Row");
        cmdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveActionPerformed(evt);
            }
        });
        getContentPane().add(cmdRemove);
        cmdRemove.setBounds(140, 330, 90, 28);

        btnUpdate.setText("Update in Piece Master");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate);
        btnUpdate.setBounds(382, 330, 250, 28);
    }// </editor-fold>//GEN-END:initComponents

    private void TableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyPressed
        if (evt.getKeyCode() == 112) //F1 Key pressed
        {
            if (Table.getSelectedColumn() == 1) {
                LOV aList = new LOV();

                String strSQL = "SELECT PR_PIECE_NO,PR_PARTY_CODE,PARTY_NAME,PR_INVOICE_NO,PR_INVOICE_DATE,PR_INVOICE_AMOUNT FROM PRODUCTION.FELT_SALES_PIECE_REGISTER A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE A.PR_PARTY_CODE=B.PARTY_CODE AND PR_PIECE_STAGE='EXP-INVOICE' AND PR_INVOICE_NO IS NOT NULL AND PR_INVOICE_NO NOT IN ('0','') AND PR_INVOICE_DATE NOT IN ('0000-00-00') AND (PR_EXPORT_BL_NO IS NULL OR PR_EXPORT_BL_NO = '') AND (PR_EXPORT_BL_DATE IS NULL OR PR_EXPORT_BL_DATE IN ('0000-00-00')) ORDER BY PR_PIECE_NO";
                aList.SQL = strSQL;
                aList.ReturnCol = 1;
                aList.ShowReturnCol = true;
                //aList.DefaultSearchOn=2;
                aList.DefaultSearchOn = 1;

                if (aList.ShowLOV()) {
                    Table.setValueAt(aList.ReturnVal, Table.getSelectedRow(), 1);
                }
                Table.requestFocus();
            }

        }// TODO add your handling code here:
    }//GEN-LAST:event_TableKeyPressed

    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        Object[] rowData = new Object[34];
        rowData[0] = Integer.toString(Table.getRowCount() + 1);
        rowData[1] = "";
        rowData[2] = "";
        rowData[3] = "";
        rowData[4] = "";
        rowData[5] = "";
        rowData[6] = "";
        rowData[7] = "";
        rowData[8] = "";
        rowData[9] = "";
        rowData[10] = "";
        rowData[11] = "";
        rowData[12] = "";
        rowData[13] = "";
        rowData[14] = "";
        rowData[15] = "";
        rowData[16] = "";
        rowData[17] = "";
        rowData[18] = "";
        rowData[19] = "";
        rowData[20] = "";
        rowData[21] = "";
        rowData[22] = "";
        rowData[23] = "";
        rowData[24] = "";
        rowData[25] = "";
        rowData[26] = "";
        rowData[27] = "";
        rowData[28] = "";
        rowData[29] = "";
        rowData[30] = "";
        rowData[31] = "";
        rowData[32] = "";
        rowData[33] = "";

        DataModel.addRow(rowData);
        Table.changeSelection(Table.getRowCount() - 1, 1, false, false);
        Table.requestFocus();

        for (int k = 0; k <= Table.getRowCount() - 1; k++) {
            for (int l = k; l <= Table.getRowCount() - 1; l++) {
                if (l != k && ((String) Table.getValueAt(k, 1)).trim().equals(((String) Table.getValueAt(l, 1)).trim())) {
                    JOptionPane.showMessageDialog(this, "Same Piece No at Row " + (k + 1) + " and " + (l + 1), "ERROR", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }
    }//GEN-LAST:event_cmdAddActionPerformed

    private void cmdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveActionPerformed
        if (Table.getRowCount() > 0) {
            DataModel.removeRow(Table.getSelectedRow());
        }
    }//GEN-LAST:event_cmdRemoveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < Table.getRowCount(); i++) {
            String BLNo = Table.getValueAt(i, 7).toString().trim();
            String BLDate = Table.getValueAt(i, 8).toString().trim();
            if (BLNo.equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter BL No at row "+(i+1));
                return;
            }
            if (!EITLERPGLOBAL.isDate(BLDate) || BLDate.equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter/correct BL Date i.e DD/MM/YYYY at row "+(i+1));
                return;
            }
        }

        try {
            for (int i = 0; i < Table.getRowCount(); i++) {

                String pieceNo = Table.getValueAt(i, 1).toString().trim();
                String BLNo = Table.getValueAt(i, 7).toString().trim();
                String BLDate = EITLERPGLOBAL.formatDateDB(Table.getValueAt(i, 8).toString().trim());

                data.Execute("UPDATE PRODUCTION.FELT_SALES_PIECE_REGISTER SET PR_EXPORT_BL_NO='" + BLNo + "',PR_EXPORT_BL_DATE='" + BLDate + "' WHERE PR_PIECE_NO='" + pieceNo + "'");

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        btnUpdate.setVisible(false);
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private void FormatGrid() {
        try {
            cmdAdd.requestFocus();

            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            TableColumnModel ColModel = Table.getColumnModel();
            Table.setAutoResizeMode(Table.AUTO_RESIZE_OFF);

            //Add Columns to it
            DataModel.addColumn("Sr No.");//0
            DataModel.addColumn("Piece No");//1
            DataModel.addColumn("Party Code");//2
            DataModel.addColumn("Party Name");//3
            DataModel.addColumn("Exp InvNo");//4
            DataModel.addColumn("Exp InvDate");//5
            DataModel.addColumn("Exp InvAmt");//6
            DataModel.addColumn("Exp BL No");//7
            DataModel.addColumn("Exp BL Date");//8

            DataModel.SetReadOnly(0);
            DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);

            int EditMode = 1;

            if (EditMode != 0) {
                //------- Install Table List Selection Listener ------//
                Table.getColumnModel().getSelectionModel().addListSelectionListener(
                        new ListSelectionListener() {
                            public void valueChanged(ListSelectionEvent e) {
                                int column = Table.getSelectedColumn();
                                String strVar = DataModel.getVariable(column);
                                //=============== Cell Editing Routine =======================//
                                Table.editCellAt(Table.getSelectedRow(), column);
                                if (Table.getEditorComponent() instanceof JTextComponent) {
                                    ((JTextComponent) Table.getEditorComponent()).selectAll();
                                }
                                if (column == 1) {
//                                    ShowMessage("Press F1 for Piece No List...");
                                }
                                //============= Cell Editing Routine Ended =================//
                            }
                        });

                //----- Install Table Model Event Listener For Displaying Party code and Group -------//
                Table.getModel().addTableModelListener(new TableModelListener() {
                    public void tableChanged(TableModelEvent e) {
                        if (e.getType() == TableModelEvent.UPDATE) {
                            int row = Table.getSelectedRow();
                            int column = e.getColumn();

                            //=========== Cell Update Prevention Check ===========//
                            String curValue = ((String) Table.getValueAt(row, column)).trim();
                            if (curValue.equals("")) {
                                return;
                            }
                            //====================================================//
//                            if (DoNotEvaluate) {
//                                return;
//                            }

                            //EITLERPGLOBAL.formatDate(ObjFlow.getAttribute("ACTION_DATE").getString())
                            if (column == 1) {
                                String pieceNo = ((String) Table.getValueAt(row, 1)).trim();

                                Table.setValueAt(data.getStringValueFromDB("SELECT PR_PARTY_CODE FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='" + pieceNo + "'"), row, 2);
                                Table.setValueAt(data.getStringValueFromDB("SELECT B.PARTY_NAME FROM PRODUCTION.FELT_SALES_PIECE_REGISTER A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE A.PR_PARTY_CODE=B.PARTY_CODE AND A.PR_PIECE_NO='" + pieceNo + "'"), row, 3);
                                Table.setValueAt(data.getStringValueFromDB("SELECT PR_INVOICE_NO FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='" + pieceNo + "'"), row, 4);
                                Table.setValueAt(EITLERPGLOBAL.formatDate(data.getStringValueFromDB("SELECT PR_INVOICE_DATE FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='" + pieceNo + "'")), row, 5);
                                Table.setValueAt(data.getStringValueFromDB("SELECT PR_INVOICE_AMOUNT FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='" + pieceNo + "'"), row, 6);
                                Table.setValueAt("", row, 7);
                                Table.setValueAt("", row, 8);
                            }
                        }
                    }
                });

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

}
