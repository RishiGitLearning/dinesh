/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.Order;

import EITLERP.FeltSales.common.clsOrderValueCalc;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import EITLERP.*;

/**
 *
 * @author root
 */
public class FrmOrderValueUpdation extends javax.swing.JApplet {

    private static Connection connection;
    private Statement statement;
    private ResultSet resultSet,rsHeader;
    /**
     * Initializes the applet FrmOrderValueUpdation
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdateMachineMaster = new javax.swing.JButton();
        btnUpdatePieceRegister = new javax.swing.JButton();

        getContentPane().setLayout(null);

        btnUpdateMachineMaster.setText("UPDATE ORDER VALUE - Machine Master");
        btnUpdateMachineMaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMachineMasterActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdateMachineMaster);
        btnUpdateMachineMaster.setBounds(20, 140, 360, 28);

        btnUpdatePieceRegister.setText("UPDATE ORDER VALUE - Piece Register");
        btnUpdatePieceRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePieceRegisterActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdatePieceRegister);
        btnUpdatePieceRegister.setBounds(20, 80, 360, 28);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateMachineMasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMachineMasterActionPerformed
        // TODO add your handling code here:
              
        
        clsOrderValueCalc calc = new clsOrderValueCalc();
        EITLERP.FeltSales.common.FeltInvCalc InvObj ;
        String SQL = "SELECT D.MM_PARTY_CODE AS PARTY_CODE,D.MM_MACHINE_NO AS MACHINE_NO,D.MM_MACHINE_POSITION AS POSITION, " +
                        "D.MM_ITEM_CODE AS PRODUCT_CODE,D.MM_GRUP AS GRUP, " +
                        "(D.MM_FELT_LENGTH+D.MM_FABRIC_LENGTH) AS LENGTH, " +
                        "(D.MM_FELT_WIDTH+D.MM_FABRIC_WIDTH) AS WIDTH,D.MM_FELT_GSM AS GSM, " +
                        "concat(D.MM_FELT_STYLE,D.MM_STYLE_DRY) as STYLE , " +
                        "D.MM_FELT_WEIGHT AS WEIGHT,MM_DOC_NO " +
                        "FROM " +
                        "PRODUCTION.FELT_MACHINE_MASTER_DETAIL D " +
                        " " +
                        " where D.MM_ITEM_CODE!='' AND D.MM_PARTY_CODE!='' AND (D.MM_FELT_BASE_VALUE='' or D.MM_FELT_BASE_VALUE is null) AND D.MM_MACHINE_NO!='' AND  D.MM_MACHINE_POSITION!=''    AND (D.MM_MACHINE_NO!='' AND D.MM_MACHINE_POSITION!='' " +
                        "AND (D.MM_FELT_LENGTH != '' OR D.MM_FABRIC_LENGTH != '') " +
                        "AND (D.MM_FELT_WIDTH != '' OR D.MM_FABRIC_WIDTH != '') )";
        System.out.println("SQL = " + SQL);
        try {
            connection = data.getConn();
            statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            resultSet = statement.executeQuery(SQL);
            
            while (resultSet.next()) {
                 
                 try{ 
                     String PieceNo = "";
                     String Product_Code = resultSet.getString("PRODUCT_CODE");
                     String Party_Code = resultSet.getString("PARTY_CODE");
                     Float Length = resultSet.getFloat("LENGTH");
                     Float Width = resultSet.getFloat("WIDTH");
                     Float Weight = resultSet.getFloat("WEIGHT");
                     
                     float SQMT = (float) EITLERPGLOBAL.round((Length * Width), 2);
                     String CurDate = EITLERPGLOBAL.getCurrentDateDB();
                     
                     InvObj = clsOrderValueCalc.calculateWithOutGST(PieceNo, Product_Code, Party_Code, Length, Width, Weight, SQMT, CurDate);
                     
                     
                     float GST = InvObj.getFicGST();
                     float Inv_Amt = InvObj.getFicInvAmt();
                     float INVAMT_WITHOUT_GST = Inv_Amt - GST;
                     float BaseAmt = InvObj.getFicBasAmount();
                     System.out.println("PARTY CODE : "+resultSet.getString("PARTY_CODE")+"  BASE AMT : "+BaseAmt+", Inv Amt without GST "+INVAMT_WITHOUT_GST+", GST : "+GST+", Invoice Amt : "+Inv_Amt);
                     //data.Execute("UPDATE PRODUCTION.FELT_SALES_PIECE_REGISTER SET PR_FELT_VALUE_WITH_GST='"+Inv_Amt+"',PR_FELT_VALUE_WITHOUT_GST='"+INVAMT_WITHOUT_GST+"',PR_FELT_BASE_VALUE='"+BaseAmt+"' WHERE PR_PIECE_NO='"+PieceNo+"'");
                     /*System.out.println("UPDATE PRODUCTION.FELT_MACHINE_MASTER_DETAIL D SET MM_FELT_VALUE_WITH_GST='"+Inv_Amt+"',MM_FELT_VALUE_WITHOUT_GST='"+INVAMT_WITHOUT_GST+"',MM_FELT_BASE_VALUE='"+BaseAmt+"' "
                             + "WHERE (D.MM_MACHINE_NO!='' AND D.MM_MACHINE_POSITION!='' " 
                             + " AND (D.MM_FELT_LENGTH != '' OR D.MM_FABRIC_LENGTH != '') AND "
                             + "(D.MM_FELT_WIDTH != '' OR D.MM_FABRIC_WIDTH != '') "
                             + "AND D.MM_FELT_GSM!='') AND MM_DOC_NO='"+resultSet.getString("MM_DOC_NO")+"' AND MM_PARTY_CODE='"+resultSet.getString("PARTY_CODE")+"' AND MM_MACHINE_NO='"+resultSet.getString("MACHINE_NO")+"' AND MM_MACHINE_POSITION='"+resultSet.getString("POSITION")+"'");
                     */
                     data.Execute("UPDATE PRODUCTION.FELT_MACHINE_MASTER_DETAIL D SET MM_FELT_VALUE_WITH_GST='"+Inv_Amt+"',MM_FELT_VALUE_WITHOUT_GST='"+INVAMT_WITHOUT_GST+"',MM_FELT_BASE_VALUE='"+BaseAmt+"' WHERE (D.MM_MACHINE_NO!='' AND D.MM_MACHINE_POSITION!='' " 
                             + " AND (D.MM_FELT_LENGTH != '' OR D.MM_FABRIC_LENGTH != '') AND "
                             + "(D.MM_FELT_WIDTH != '' OR D.MM_FABRIC_WIDTH != '') "
                             + ") AND MM_DOC_NO='"+resultSet.getString("MM_DOC_NO")+"' AND MM_PARTY_CODE='"+resultSet.getString("PARTY_CODE")+"' AND MM_MACHINE_NO='"+resultSet.getString("MACHINE_NO")+"' AND MM_MACHINE_POSITION='"+resultSet.getString("POSITION")+"'");
                   
                     
                 }catch(Exception e)
                 {
                     e.printStackTrace();
                 }
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateMachineMasterActionPerformed

    private void btnUpdatePieceRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePieceRegisterActionPerformed
        // TODO add your handling code here:
        clsOrderValueCalc calc = new clsOrderValueCalc();
        EITLERP.FeltSales.common.FeltInvCalc InvObj ;
        String SQL = "SELECT * FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_STAGE NOT IN ('INVOICED','DIVERTED','EXP-INVOICED','DIVIDED','EXP-INVOICE','CANCELED') ";
        System.out.println("SQL = " + SQL);
        try {
            connection = data.getConn();
            statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            resultSet = statement.executeQuery(SQL);
            
            while (resultSet.next()) {
                 
                 try{ 
                     String PieceNo = resultSet.getString("PR_PIECE_NO");
                     String Product_Code = resultSet.getString("PR_BILL_PRODUCT_CODE");
                     String Piece_Stage = resultSet.getString("PR_PIECE_STAGE"); 
                     String Party_Code = resultSet.getString("PR_PARTY_CODE");
                     Float Length = resultSet.getFloat("PR_BILL_LENGTH");
                     Float Width = resultSet.getFloat("PR_BILL_WIDTH");
                     Float Weight = resultSet.getFloat("PR_BILL_WEIGHT");
                     Float SQMT = resultSet.getFloat("PR_BILL_SQMTR");
                     String CurDate = EITLERPGLOBAL.getCurrentDateDB();
                     String baleNo = resultSet.getString("PR_BALE_NO");
                     String baleDate = resultSet.getString("PR_PACKED_DATE");
                     
                     
                     if(Piece_Stage.equals("BSR"))
                     {
                        InvObj = clsOrderValueCalc.calculate(PieceNo, Product_Code, Party_Code, Length, Width, Weight, SQMT, CurDate, baleNo, baleDate);
                         System.out.println("PIECE NO : "+PieceNo+", STAGE : "+Piece_Stage+", BSR");
                     }
                     else
                     {
                         InvObj = clsOrderValueCalc.calculateWithoutGSTINNO(PieceNo, Product_Code, Party_Code, Length, Width, Weight, SQMT, CurDate);
                         System.out.println("PIECE NO : "+PieceNo+", STAGE : "+Piece_Stage+", Non BSR");
                     }
                     
                     
                     float GST = InvObj.getFicGST();
                     float Inv_Amt = InvObj.getFicInvAmt();
                     float INVAMT_WITHOUT_GST = Inv_Amt - GST;
                     float BaseAmt = InvObj.getFicBasAmount();
                     System.out.println("Piece No : "+PieceNo+" BASE AMT : "+BaseAmt+", Inv Amt without GST "+INVAMT_WITHOUT_GST+", GST : "+GST+", Invoice Amt : "+Inv_Amt);
                     data.Execute("UPDATE PRODUCTION.FELT_SALES_PIECE_REGISTER SET PR_FELT_VALUE_WITH_GST='"+Inv_Amt+"',PR_FELT_VALUE_WITHOUT_GST='"+INVAMT_WITHOUT_GST+"',PR_FELT_BASE_VALUE='"+BaseAmt+"' WHERE PR_PIECE_NO='"+PieceNo+"'");
                        
                        
                 }catch(Exception e)
                 {
                     e.printStackTrace();
                 }
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnUpdatePieceRegisterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateMachineMaster;
    private javax.swing.JButton btnUpdatePieceRegister;
    // End of variables declaration//GEN-END:variables
}
