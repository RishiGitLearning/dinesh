/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.PieceSpilover.ExpDispatchMonth;

import EITLERP.AppletFrame;
import EITLERP.ComboData;
import EITLERP.EITLComboModel;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableCellRenderer;
import EITLERP.EITLTableModel;
import EITLERP.FeltSales.PieceRegister.clsIncharge;
import EITLERP.FeltSales.common.FeltInvCalc;
import EITLERP.Loader;
import EITLERP.Production.clsFeltProductionApprovalFlow;
import EITLERP.SelectFirstFree;
import EITLERP.clsAuthority;
import EITLERP.clsDepartment;
import EITLERP.clsDocFlow;
import EITLERP.clsFirstFree;
import EITLERP.clsHierarchy;
import EITLERP.clsUser;
import EITLERP.data;
import EITLERP.frmPendingApprovals;
import TReportWriter.TReportEngine;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
//import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author DAXESH PRAJAPATI
 *
 */
public class FrmFeltExpDispatchMonth extends javax.swing.JApplet {

    
    private EITLComboModel cmbHierarchyModel;
    private EITLComboModel cmbToModel;
    private EITLComboModel cmbModuleModel;
    private EITLTableModel DataModel;
    private EITLTableCellRenderer Renderer1 = new EITLTableCellRenderer();
    private EITLTableCellRenderer Renderer_realese = new EITLTableCellRenderer();
    public boolean PENDING_DOCUMENT = false; //for refresh pending document module
    public frmPendingApprovals frmPA;
    
    int USER_ID = EITLERPGLOBAL.gUserID;
    /**
     * Initializes the applet FrmFeltOrder
     */
    @Override
    public void init() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(dim.width, dim.height);
        initComponents();
        FormatGrid();
        //FormatGrid_OldTransaction();
        DefaultSettings();
       
       
        SetFields(false);
        DisplayData();
        
        
        if(USER_ID==28)//V. D. Shanbhag
        {
            btnSave.setEnabled(true);
        }
        else
        {
            btnSave.setEnabled(false);
        }
             
        
    }
    
    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    public void DefaultSettings() {

        //String data = toString();
        Object[] rowData = new Object[15];
        rowData[0] = "1";
        DataModel.addRow(rowData);

        clearFields();
    }
    
   

    private void clearFields() {
        
        for (int i = 0; i < DataModel.getRowCount(); i++) {
            DataModel.removeRow(i);
        }
        if (DataModel.getRowCount() > 0) {
            DataModel.removeRow(0);
        }
        Object[] rowData = new Object[15];
        rowData[0] = 1;
        DataModel.addRow(rowData);
    }

    private void DisplayData() {
        try{
            clearFields();
            FormatGrid();
            
            
            lblTitle.setText("Felt Sales Spilover Piece allocate Exp Dispatch Month ");

            String str_query = "SELECT * FROM PRODUCTION.FELT_SALES_SPILOVER_UPN_EXP_DISPATCH_DETAIL WHERE ENTRY_STATUS='ACTIVE'";
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            ResultSet resultSet = statement.executeQuery(str_query);
            int srNo = 0;
            
            while (resultSet.next()) {
                srNo++;
                int NewRow = srNo - 1;

                Object[] rowData = new Object[1];
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SrNo", srNo + "", NewRow);
                
                DataModel.setValueByVariable("PIECE_NO", resultSet.getString("PIECE_NO"), NewRow);
                DataModel.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_NAME", resultSet.getString("PARTY_NAME"), NewRow);
                DataModel.setValueByVariable("UPN", resultSet.getString("UPN"), NewRow);
                
                if(resultSet.getString("DIVISION_POSSIBILITY").equals("1"))
                {
                    DataModel.setValueByVariable("DIVISION_POSSIBILITY", true, NewRow);
                }
                else
                {
                    DataModel.setValueByVariable("DIVISION_POSSIBILITY", false, NewRow);
                }
                System.out.println("SELECT * FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='"+resultSet.getString("PIECE_NO")+"'");
                ResultSet result = data.getResult("SELECT * FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='"+resultSet.getString("PIECE_NO")+"'");
                result.first();
                
                DataModel.setValueByVariable("PRODUCT_CODE", result.getString("PR_BILL_PRODUCT_CODE"), NewRow);
                DataModel.setValueByVariable("STYLE", result.getString("PR_BILL_STYLE"), NewRow);
                DataModel.setValueByVariable("LENGTH", result.getString("PR_BILL_LENGTH"), NewRow);
                DataModel.setValueByVariable("WIDTH", result.getString("PR_BILL_WIDTH"), NewRow);
                DataModel.setValueByVariable("GSM", result.getString("PR_BILL_GSM"), NewRow);
                DataModel.setValueByVariable("SQMTR", result.getString("PR_BILL_SQMTR"), NewRow);
                DataModel.setValueByVariable("WEIGHT", result.getString("PR_BILL_WEIGHT"), NewRow);
        }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    

    private void FormatGrid() {
        try {
            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("Exp Dispatch Month"); //1
            DataModel.addColumn("Piece No"); //1
            DataModel.addColumn("Party Code"); //2
            DataModel.addColumn("Party Name"); //2
            DataModel.addColumn("UPN"); //3
            DataModel.addColumn("Division Possibility"); //3
            DataModel.addColumn("Product Code"); //3
            DataModel.addColumn("Style"); //3
            DataModel.addColumn("Length"); //3
            DataModel.addColumn("Width"); //3
            DataModel.addColumn("GSM"); //3
            DataModel.addColumn("SQMTR"); //3
            DataModel.addColumn("Weight"); //3
            
            
            DataModel.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel.SetVariable(1, "EXP_DISPATCH_MONTH"); //1
            DataModel.SetVariable(2, "PIECE_NO"); //1
            DataModel.SetVariable(3, "PARTY_CODE"); //2
            DataModel.SetVariable(4, "PARTY_NAME"); //3
            DataModel.SetVariable(5, "UPN"); //3
            DataModel.SetVariable(6, "DIVISION_POSSIBILITY"); //4
            DataModel.SetVariable(7, "PRODUCT_CODE"); //4
            DataModel.SetVariable(8, "STYLE"); //4
            DataModel.SetVariable(9, "LENGTH"); //4
            DataModel.SetVariable(10, "WIDTH"); //4
            DataModel.SetVariable(11, "GSM"); //4
            DataModel.SetVariable(12, "SQMTR"); //4
            DataModel.SetVariable(13, "WEIGHT"); //4
            
            Table.getColumnModel().getColumn(0).setMaxWidth(40);
            Table.getColumnModel().getColumn(1).setMinWidth(140);
            Table.getColumnModel().getColumn(2).setMinWidth(140);
            Table.getColumnModel().getColumn(3).setMinWidth(120);
            Table.getColumnModel().getColumn(4).setMinWidth(120);
            Table.getColumnModel().getColumn(5).setMinWidth(120);
            Table.getColumnModel().getColumn(6).setMinWidth(0);
            Table.getColumnModel().getColumn(6).setMaxWidth(0);
            Table.getColumnModel().getColumn(7).setMinWidth(120);
            Table.getColumnModel().getColumn(8).setMinWidth(120);
            Table.getColumnModel().getColumn(9).setMinWidth(120);
            Table.getColumnModel().getColumn(10).setMinWidth(120);
            Table.getColumnModel().getColumn(11).setMinWidth(120);
            Table.getColumnModel().getColumn(12).setMinWidth(120);
            Table.getColumnModel().getColumn(13).setMinWidth(120);
            
            
            TableColumn dateColumn = Table.getColumnModel().getColumn(DataModel.getColFromVariable("EXP_DISPATCH_MONTH"));

            JComboBox monthbox = new JComboBox();
            String month_name = "";
            Date date = new Date();
            int month = date.getMonth();
            int year = date.getYear() + 1900;
            monthbox.addItem("");
            for (int i = 0; i < 40; i++) {
                month = month + 1;

                if (month >= 13) {
                    month = 1;
                    year = year + 1;
                }

                if (month == 1) {
                    month_name = "Jan";
                } else if (month == 2) {
                    month_name = "Feb";
                } else if (month == 3) {
                    month_name = "Mar";
                } else if (month == 4) {
                    month_name = "Apr";
                } else if (month == 5) {
                    month_name = "May";
                } else if (month == 6) {
                    month_name = "Jun";
                } else if (month == 7) {
                    month_name = "Jul";
                } else if (month == 8) {
                    month_name = "Aug";
                } else if (month == 9) {
                    month_name = "Sep";
                } else if (month == 10) {
                    month_name = "Oct";
                } else if (month == 11) {
                    month_name = "Nov";
                } else if (month == 12) {
                    month_name = "Dec";
                }
                monthbox.addItem(month_name + " - " + year);
            }

            dateColumn.setCellEditor(new DefaultCellEditor(monthbox));
            
            
            int ImportCol2 = DataModel.getColFromVariable("DIVISION_POSSIBILITY");
            Renderer1.setCustomComponent(ImportCol2, "CheckBox");
            JCheckBox aCheckBox2 = new JCheckBox();
            aCheckBox2.setBackground(Color.WHITE);
            aCheckBox2.setVisible(true);
            aCheckBox2.setSelected(false);
            Table.getColumnModel().getColumn(ImportCol2).setCellEditor(new DefaultCellEditor(aCheckBox2));
            Table.getColumnModel().getColumn(ImportCol2).setCellRenderer(Renderer1);
            
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblStatus1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        ltbPink = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        Tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                TableAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Table.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TableFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TableFocusLost(evt);
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        Table.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                TableCaretPositionChanged(evt);
            }
        });
        Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 10, 910, 450);

        btnSave.setText("SAVE");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave);
        btnSave.setBounds(780, 480, 120, 30);

        Tab.addTab("Felt Sales Spilover Piece allocate Exp Dispatch Month", jPanel1);

        getContentPane().add(Tab);
        Tab.setBounds(0, 40, 930, 560);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("Felt Sales Spilover Piece allocate Exp Dispatch Month");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 10, 930, 25);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 580, 930, 22);

        lblStatus1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus1.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus1);
        lblStatus1.setBounds(20, 590, 740, 30);
        getContentPane().add(jPanel5);
        jPanel5.setBounds(210, 50, 10, 10);
        getContentPane().add(ltbPink);
        ltbPink.setBounds(10, 70, 0, 0);
    }// </editor-fold>//GEN-END:initComponents

    private void TableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyPressed
       // if (evt.getKeyCode() == 112 || evt.getKeyCode() == 10) {

        
    }//GEN-LAST:event_TableKeyPressed
    

       
    private void TabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabMouseClicked

    }//GEN-LAST:event_TabMouseClicked

    private void TableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableFocusGained
        // TODO add your handling code here:
        if (Table.getSelectedColumn() == 1) {
            lblStatus1.setText("Press F1 for selection Machine No and Position No");
        } else {
            lblStatus1.setText("");
        }
    }//GEN-LAST:event_TableFocusGained

    private void TableAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TableAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TableAncestorMoved

    private void TableCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_TableCaretPositionChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TableCaretPositionChanged

    private void TableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableFocusLost
        // TODO add your handling code here:if(Table.getSelectedColumn() == 1)
        lblStatus1.setText("");
    }//GEN-LAST:event_TableFocusLost

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        //jdbc:mysql://200.0.0.230:3306/PRODUCTION
        
    }//GEN-LAST:event_TableMouseClicked
    

    private void TableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyReleased
        // TODO add your handling code here:
        
      
    }//GEN-LAST:event_TableKeyReleased

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(USER_ID==28)//V. D. Shanbhag
        {
            Save();
            DisplayData();
        }
        else
        {
            
        }
    }//GEN-LAST:event_btnSaveActionPerformed
    

    private void Save() {
       for (int i = 0; i <= Table.getRowCount() - 1; i++) {
                            if (!DataModel.getValueByVariable("PIECE_NO", i).equals("")) {
                               try{ 
                                    if(!DataModel.getValueByVariable("EXP_DISPATCH_MONTH", i).equals(""))
                                    {
                                        String PieceNo = DataModel.getValueByVariable("PIECE_NO", i); 
                                        String EXP_DISPATCH_MONTH = DataModel.getValueByVariable("EXP_DISPATCH_MONTH", i); 
                                        try{
                                            System.out.println("UPDATE PRODUCTION.FELT_SALES_PIECE_REGISTER SET PR_EXPECTED_DISPATCH='"+EXP_DISPATCH_MONTH+"',PR_EXP_DISPATCH_FROM='SPILOVER-AI',PR_EXP_DISPATCH_DOCNO='-' where PR_PIECE_NO='"+PieceNo+"'");
                                            data.Execute("UPDATE PRODUCTION.FELT_SALES_PIECE_REGISTER SET PR_EXPECTED_DISPATCH='"+EXP_DISPATCH_MONTH+"',PR_EXP_DISPATCH_FROM='SPILOVER-AI',PR_EXP_DISPATCH_DOCNO='-' where PR_PIECE_NO='"+PieceNo+"'");
                                            data.Execute("UPDATE PRODUCTION.FELT_SALES_SPILOVER_UPN_EXP_DISPATCH_DETAIL SET ENTRY_STATUS='UPDATED',EXP_DISPATCH_MONTH='"+EXP_DISPATCH_MONTH+"' WHERE PIECE_NO='"+PieceNo+"' AND ENTRY_STATUS='ACTIVE'");
                                        }catch(Exception e)
                                        {
                                            e.printStackTrace();
                                        }
                                    }
                               }catch(Exception e)
                               {
                                   e.printStackTrace();
                               }
                            }
       }
                               
        
    }

    private void SetFields(boolean pStat) {

        
        Table.setEnabled(pStat);
        
        DataModel.SetReadOnly(0);
        
        if(USER_ID==28)//V. D. Shanbhag
        {
            //DataModel.SetReadOnly(1);
            btnSave.setEnabled(true);
            Table.setEnabled(true);
        }
        else
        {
            DataModel.SetReadOnly(1);
            btnSave.setEnabled(false);
        }
        
        DataModel.SetReadOnly(2);
        DataModel.SetReadOnly(3);
        DataModel.SetReadOnly(4);
        DataModel.SetReadOnly(5);
        DataModel.SetReadOnly(6);
        DataModel.SetReadOnly(7);
        DataModel.SetReadOnly(8);
        DataModel.SetReadOnly(9);
        DataModel.SetReadOnly(10);
        DataModel.SetReadOnly(11);
        DataModel.SetReadOnly(12);
        DataModel.SetReadOnly(13);
        DataModel.SetReadOnly(14);
        DataModel.SetReadOnly(15);
        DataModel.SetReadOnly(16);
        DataModel.SetReadOnly(17);
        DataModel.SetReadOnly(18);
        DataModel.SetReadOnly(19);
        DataModel.SetReadOnly(20);
        DataModel.SetReadOnly(21);
        DataModel.SetReadOnly(22);
        DataModel.SetReadOnly(23);
        DataModel.SetReadOnly(24);
        DataModel.SetReadOnly(25);
        DataModel.SetReadOnly(26);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JTable Table;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStatus1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel ltbPink;
    // End of variables declaration//GEN-END:variables

    
}
