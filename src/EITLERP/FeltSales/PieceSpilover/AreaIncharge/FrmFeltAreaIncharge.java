/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.PieceSpilover.AreaIncharge;

import EITLERP.AppletFrame;
import EITLERP.ComboData;
import EITLERP.EITLComboModel;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableCellRenderer;
import EITLERP.EITLTableModel;
import EITLERP.FeltSales.PieceRegister.clsIncharge;
import EITLERP.FeltSales.common.FeltInvCalc;
import EITLERP.Loader;
import EITLERP.Production.clsFeltProductionApprovalFlow;
import EITLERP.SelectFirstFree;
import EITLERP.clsAuthority;
import EITLERP.clsDepartment;
import EITLERP.clsDocFlow;
import EITLERP.clsFirstFree;
import EITLERP.clsHierarchy;
import EITLERP.clsUser;
import EITLERP.data;
import EITLERP.frmPendingApprovals;
import TReportWriter.TReportEngine;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
//import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author DAXESH PRAJAPATI
 *
 */
public class FrmFeltAreaIncharge extends javax.swing.JApplet {

    
    private EITLComboModel cmbHierarchyModel;
    private EITLComboModel cmbToModel;
    private EITLComboModel cmbModuleModel;
    private EITLTableModel DataModel;
    private EITLTableCellRenderer Renderer1 = new EITLTableCellRenderer();
    private EITLTableCellRenderer Renderer_realese = new EITLTableCellRenderer();
    public boolean PENDING_DOCUMENT = false; //for refresh pending document module
    public frmPendingApprovals frmPA;
    private EITLComboModel cmbIncharge;
    int USER_ID = EITLERPGLOBAL.gUserID;
    /**
     * Initializes the applet FrmFeltOrder
     */
    @Override
    public void init() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(dim.width, dim.height);
        initComponents();
        FormatGrid();
        //FormatGrid_OldTransaction();
        DefaultSettings();
        cmbIncharge = new EITLComboModel();
        GenerateCombo();
        SetFields(false);
        DisplayData();
        
        
        if(USER_ID==352)//North: Mr. Mitang Lad
        {
            cmbIncharge.setSelectedItem("NORTH");
            cmbZone.setEnabled(false);
            btnSave.setEnabled(true);
        }
        else if(USER_ID==136)//East/West: Mr. Jaydeep Pandya
        {
//            cmbIncharge.setSelectedItem("EAST/WEST");//CLOSED ON 17-05-2022
            cmbIncharge.setSelectedItem("NORTH");
            cmbZone.setEnabled(false);
            btnSave.setEnabled(true);
        }
        else if(USER_ID==318)//East/West: Mr. Jaydeep Pandya
        {
            cmbIncharge.setSelectedItem("EAST/WEST");
            cmbZone.setEnabled(false);
            btnSave.setEnabled(true);
        }
        else if(USER_ID==329)//ACNE: Mr. Anup Singh
        {
            cmbIncharge.setSelectedItem("ACNE");
            cmbZone.setEnabled(false);
            btnSave.setEnabled(true);
        }
        else if(USER_ID==331)//South: Mr. Siddharth NeogiC
        {
            cmbIncharge.setSelectedItem("SOUTH");
            cmbZone.setEnabled(false);
            btnSave.setEnabled(true);
        }
        
    }
    
    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    public void DefaultSettings() {

        //String data = toString();
        Object[] rowData = new Object[15];
        rowData[0] = "1";
        DataModel.addRow(rowData);

        clearFields();
    }
    
    private void GenerateCombo() {

        HashMap List = new HashMap();
        clsIncharge ObjIncharge;

        cmbZone.setModel(cmbIncharge);
        cmbIncharge.removeAllElements();  //Clearing previous contents

        List = clsIncharge.getIncgargeList("");

        for (int i = 1; i <= List.size(); i++) {
            ObjIncharge = (clsIncharge) List.get(Integer.toString(i));
            ComboData aData = new ComboData();
            aData.Text = (String) ObjIncharge.getAttribute("INCHARGE_NAME").getObj();
            aData.Code = (long) ObjIncharge.getAttribute("INCHARGE_CD").getVal();
            if(!ObjIncharge.getAttribute("INCHARGE_NAME").getObj().equals("ALL"))
            {
                cmbIncharge.addElement(aData);
            }
        }
    }

    private void clearFields() {
        txtDocNo.setText("0");


        for (int i = 0; i < DataModel.getRowCount(); i++) {
            DataModel.removeRow(i);
        }
        if (DataModel.getRowCount() > 0) {
            DataModel.removeRow(0);
        }
        Object[] rowData = new Object[15];
        rowData[0] = 1;
        DataModel.addRow(rowData);
    }

    private void DisplayData() {
        try{
            clearFields();
            FormatGrid();
            
            String InchargeCode = data.getStringValueFromDB("SELECT INCHARGE_CD FROM PRODUCTION.FELT_INCHARGE where INCHARGE_NAME='"+cmbZone.getSelectedItem()+"'");
            System.out.println("Incharge Code : "+InchargeCode);
            
            String Doc_No = data.getStringValueFromDB("SELECT * FROM PRODUCTION.FELT_SALES_SPILOVER_UPN_AREAINCHARGE_HEADER WHERE INCHARGE='"+InchargeCode+"'");
            txtDocNo.setText(Doc_No);
            lblTitle.setText("Felt Sales Spilover Piece UPN wise divert (Area Incharge) - " + Doc_No);

            String str_query = "SELECT * FROM PRODUCTION.FELT_SALES_SPILOVER_UPN_AREAINCHARGE_DETAIL WHERE DOC_NO='"+Doc_No+"' AND ENTRY_STATUS='ACTIVE'";
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            ResultSet resultSet = statement.executeQuery(str_query);
            int srNo = 0;
            
            while (resultSet.next()) {
                srNo++;
                int NewRow = srNo - 1;

                Object[] rowData = new Object[1];
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SrNo", srNo + "", NewRow);
                
                DataModel.setValueByVariable("PIECE_NO", resultSet.getString("PIECE_NO"), NewRow);
                DataModel.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_NAME", resultSet.getString("PARTY_NAME"), NewRow);
                DataModel.setValueByVariable("UPN", resultSet.getString("UPN"), NewRow);
                
                if(resultSet.getString("DIVISION_POSSIBILITY").equals("1"))
                {
                    DataModel.setValueByVariable("DIVISION_POSSIBILITY", true, NewRow);
                }
                else
                {
                    DataModel.setValueByVariable("DIVISION_POSSIBILITY", false, NewRow);
                }
                
                if(resultSet.getString("RELEASE_FOR_DIVERSION").equals("1"))
                {
                    DataModel.setValueByVariable("RELEASE_FOR_DIVERSION", true, NewRow);
                }
                else
                {
                    DataModel.setValueByVariable("RELEASE_FOR_DIVERSION", false, NewRow);
                }
                
                DataModel.setValueByVariable("AUTO_RELEASE_FOR_DIVERSION_DATE",EITLERPGLOBAL.formatDate(resultSet.getString("AUTO_RELEASE_FOR_DIVERSION_DATE")), NewRow);
                
                DataModel.setValueByVariable("UPN1", resultSet.getString("UPN1"), NewRow);
                DataModel.setValueByVariable("UPN2", resultSet.getString("UPN2"), NewRow);
                DataModel.setValueByVariable("UPN3", resultSet.getString("UPN3"), NewRow);
                DataModel.setValueByVariable("UPN4", resultSet.getString("UPN4"), NewRow);
                DataModel.setValueByVariable("UPN5", resultSet.getString("UPN5"), NewRow);
                DataModel.setValueByVariable("UPN6", resultSet.getString("UPN6"), NewRow);
                DataModel.setValueByVariable("UPN7", resultSet.getString("UPN7"), NewRow);
                DataModel.setValueByVariable("UPN8", resultSet.getString("UPN8"), NewRow);
                DataModel.setValueByVariable("UPN9", resultSet.getString("UPN9"), NewRow);
                DataModel.setValueByVariable("UPN10", resultSet.getString("UPN10"), NewRow);
                DataModel.setValueByVariable("UPN11", resultSet.getString("UPN11"), NewRow);
                DataModel.setValueByVariable("UPN12", resultSet.getString("UPN12"), NewRow);
                DataModel.setValueByVariable("UPN13", resultSet.getString("UPN13"), NewRow);
                DataModel.setValueByVariable("UPN14", resultSet.getString("UPN14"), NewRow);
                DataModel.setValueByVariable("UPN15", resultSet.getString("UPN15"), NewRow);
                DataModel.setValueByVariable("UPN16", resultSet.getString("UPN16"), NewRow);
                DataModel.setValueByVariable("UPN17", resultSet.getString("UPN17"), NewRow);
                DataModel.setValueByVariable("UPN18", resultSet.getString("UPN18"), NewRow);
                DataModel.setValueByVariable("UPN19", resultSet.getString("UPN19"), NewRow);
                DataModel.setValueByVariable("UPN20", resultSet.getString("UPN20"), NewRow);
                
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    

    private void FormatGrid() {
        try {
            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("Release for Diversion"); //1
            DataModel.addColumn("Auto Release On Date"); //1
            DataModel.addColumn("Piece No"); //1
            DataModel.addColumn("Party Code"); //2
            DataModel.addColumn("Party Name"); //2
            DataModel.addColumn("UPN"); //3
            DataModel.addColumn("Division Possibility"); //3
            DataModel.addColumn("UPN1"); //4
            DataModel.addColumn("UPN2");
            DataModel.addColumn("UPN3"); //5
            DataModel.addColumn("UPN4"); //6
            DataModel.addColumn("UPN5"); //7
            DataModel.addColumn("UPN6"); //8
            DataModel.addColumn("UPN7"); //9
            DataModel.addColumn("UPN8"); //10
            DataModel.addColumn("UPN9"); //11
            DataModel.addColumn("UPN10"); //12
            DataModel.addColumn("UPN11"); //13
            DataModel.addColumn("UPN12"); //14
            DataModel.addColumn("UPN13"); //15
            DataModel.addColumn("UPN14"); //16
            DataModel.addColumn("UPN15"); //17
            DataModel.addColumn("UPN16"); //18
            DataModel.addColumn("UPN17"); //19
            DataModel.addColumn("UPN18"); //20
            DataModel.addColumn("UPN19"); //21
            DataModel.addColumn("UPN20"); //22
            
            DataModel.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel.SetVariable(1, "RELEASE_FOR_DIVERSION"); //1
            DataModel.SetVariable(2, "AUTO_RELEASE_FOR_DIVERSION_DATE"); //1
            DataModel.SetVariable(3, "PIECE_NO"); //1
            DataModel.SetVariable(4, "PARTY_CODE"); //2
            DataModel.SetVariable(5, "PARTY_NAME"); //3
            DataModel.SetVariable(6, "UPN"); //3
            DataModel.SetVariable(7, "DIVISION_POSSIBILITY"); //4
            DataModel.SetVariable(8, "UPN1"); //4
            DataModel.SetVariable(9, "UPN2"); //5
            DataModel.SetVariable(10, "UPN3"); //6
            DataModel.SetVariable(11, "UPN4"); //7
            DataModel.SetVariable(12, "UPN5"); //8
            DataModel.SetVariable(13, "UPN6"); //9
            DataModel.SetVariable(14, "UPN7"); //10
            DataModel.SetVariable(15, "UPN8"); //11
            DataModel.SetVariable(16, "UPN9"); //12
            DataModel.SetVariable(17, "UPN10"); //13
            DataModel.SetVariable(18, "UPN11"); //14
            DataModel.SetVariable(19, "UPN12"); //15
            DataModel.SetVariable(20, "UPN13"); //16
            DataModel.SetVariable(21, "UPN14"); //17
            DataModel.SetVariable(22, "UPN15"); //18
            DataModel.SetVariable(23, "UPN16"); //19
            DataModel.SetVariable(24, "UPN17"); //20
            DataModel.SetVariable(25, "UPN18"); //21
            DataModel.SetVariable(26, "UPN19"); //22
            DataModel.SetVariable(27, "UPN20"); //22
            
            Table.getColumnModel().getColumn(0).setMaxWidth(40);
            Table.getColumnModel().getColumn(1).setMinWidth(140);
            Table.getColumnModel().getColumn(2).setMinWidth(140);
            Table.getColumnModel().getColumn(3).setMinWidth(120);
            Table.getColumnModel().getColumn(4).setMinWidth(120);
            Table.getColumnModel().getColumn(5).setMinWidth(120);
            Table.getColumnModel().getColumn(6).setMinWidth(120);
            Table.getColumnModel().getColumn(7).setMinWidth(120);
            Table.getColumnModel().getColumn(8).setMinWidth(120);
            Table.getColumnModel().getColumn(9).setMinWidth(120);
            Table.getColumnModel().getColumn(10).setMinWidth(120);
            Table.getColumnModel().getColumn(11).setMinWidth(120);
            Table.getColumnModel().getColumn(12).setMinWidth(120);
            Table.getColumnModel().getColumn(13).setMinWidth(120);
            Table.getColumnModel().getColumn(14).setMinWidth(120);
            Table.getColumnModel().getColumn(15).setMinWidth(120);
            Table.getColumnModel().getColumn(16).setMinWidth(120);
            Table.getColumnModel().getColumn(17).setMinWidth(100);
            Table.getColumnModel().getColumn(18).setMinWidth(100);
            Table.getColumnModel().getColumn(19).setMinWidth(100);
            Table.getColumnModel().getColumn(20).setMinWidth(100);
            Table.getColumnModel().getColumn(21).setMinWidth(100);
            Table.getColumnModel().getColumn(22).setMinWidth(100);
            Table.getColumnModel().getColumn(23).setMinWidth(100);
            Table.getColumnModel().getColumn(24).setMinWidth(100);
            Table.getColumnModel().getColumn(25).setMinWidth(100);
            Table.getColumnModel().getColumn(26).setMinWidth(100);
            
            
            int ImportCol2 = DataModel.getColFromVariable("DIVISION_POSSIBILITY");
            Renderer1.setCustomComponent(ImportCol2, "CheckBox");
            JCheckBox aCheckBox2 = new JCheckBox();
            aCheckBox2.setBackground(Color.WHITE);
            aCheckBox2.setVisible(true);
            aCheckBox2.setSelected(false);
            Table.getColumnModel().getColumn(ImportCol2).setCellEditor(new DefaultCellEditor(aCheckBox2));
            Table.getColumnModel().getColumn(ImportCol2).setCellRenderer(Renderer1);
            
            
            int ImportCol = DataModel.getColFromVariable("RELEASE_FOR_DIVERSION");
            Renderer_realese.setCustomComponent(ImportCol, "CheckBox");
            JCheckBox aCheckBox = new JCheckBox();
            aCheckBox.setBackground(Color.WHITE);
            aCheckBox.setVisible(true);
            aCheckBox.setSelected(false);
            Table.getColumnModel().getColumn(ImportCol).setCellEditor(new DefaultCellEditor(aCheckBox));
            Table.getColumnModel().getColumn(ImportCol).setCellRenderer(Renderer_realese);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        cmbZone = new javax.swing.JComboBox();
        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblStatus1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        ltbPink = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        Tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel3.setText("Doc No");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 10, 80, 30);

        txtDocNo.setEditable(false);
        txtDocNo.setBackground(new java.awt.Color(254, 242, 230));
        txtDocNo.setText("S00000001");
        txtDocNo.setEnabled(false);
        jPanel1.add(txtDocNo);
        txtDocNo.setBounds(100, 10, 200, 30);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                TableAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Table.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TableFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TableFocusLost(evt);
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        Table.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                TableCaretPositionChanged(evt);
            }
        });
        Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 910, 450);

        jLabel4.setText("Area");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(320, 10, 50, 30);

        btnSave.setText("SAVE");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave);
        btnSave.setBounds(780, 10, 120, 30);

        cmbZone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbZone.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbZoneItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbZone);
        cmbZone.setBounds(360, 10, 130, 30);

        Tab.addTab("Felt Sales Spilover Piece UPN wise divert (Area Incharge)", jPanel1);

        getContentPane().add(Tab);
        Tab.setBounds(0, 40, 930, 590);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("Felt Sales Spilover Piece UPN wise divert (Area Incharge)");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 10, 930, 25);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 580, 930, 22);

        lblStatus1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus1.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus1);
        lblStatus1.setBounds(20, 590, 740, 30);
        getContentPane().add(jPanel5);
        jPanel5.setBounds(210, 50, 10, 10);
        getContentPane().add(ltbPink);
        ltbPink.setBounds(10, 70, 0, 0);
    }// </editor-fold>//GEN-END:initComponents

    private void TableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyPressed
       // if (evt.getKeyCode() == 112 || evt.getKeyCode() == 10) {

        
    }//GEN-LAST:event_TableKeyPressed
    

       
    private void TabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabMouseClicked

    }//GEN-LAST:event_TabMouseClicked

    private void TableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableFocusGained
        // TODO add your handling code here:
        if (Table.getSelectedColumn() == 1) {
            lblStatus1.setText("Press F1 for selection Machine No and Position No");
        } else {
            lblStatus1.setText("");
        }
    }//GEN-LAST:event_TableFocusGained

    private void TableAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TableAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TableAncestorMoved

    private void TableCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_TableCaretPositionChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TableCaretPositionChanged

    private void TableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableFocusLost
        // TODO add your handling code here:if(Table.getSelectedColumn() == 1)
        lblStatus1.setText("");
    }//GEN-LAST:event_TableFocusLost

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        //jdbc:mysql://200.0.0.230:3306/PRODUCTION
        
    }//GEN-LAST:event_TableMouseClicked
    

    private void TableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyReleased
        // TODO add your handling code here:
        
        for(int i=1;i<=20;i++)
        {
            String UPN = "UPN"+i;
            if(Table.getValueAt(Table.getSelectedRow(), DataModel.getColFromVariable("DIVISION_POSSIBILITY")).equals(false) && !DataModel.getValueByVariable(UPN, Table.getSelectedRow()).equals(""))
            {
                DataModel.setValueByVariable(UPN, "", Table.getSelectedRow());
            }
        }
    }//GEN-LAST:event_TableKeyReleased

    private void cmbZoneItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbZoneItemStateChanged
        // TODO add your handling code here:
        DisplayData();
    }//GEN-LAST:event_cmbZoneItemStateChanged

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i <= Table.getRowCount() - 1; i++) {
            if (Table.getValueAt(i, DataModel.getColFromVariable("RELEASE_FOR_DIVERSION")).equals(true)) {
                //RELEASE_FOR_DIVERSION
               try{ 
                    
                        String PieceNo = DataModel.getValueByVariable("PIECE_NO", i); 
                        String UPN1 = DataModel.getValueByVariable("UPN1", i); 
                        String UPN2 = DataModel.getValueByVariable("UPN2", i); 
                        String UPN3 = DataModel.getValueByVariable("UPN3", i); 
                        String UPN4 = DataModel.getValueByVariable("UPN4", i); 
                        String UPN5 = DataModel.getValueByVariable("UPN5", i); 
                        String UPN6 = DataModel.getValueByVariable("UPN6", i); 
                        String UPN7 = DataModel.getValueByVariable("UPN7", i); 
                        String UPN8 = DataModel.getValueByVariable("UPN8", i); 
                        String UPN9 = DataModel.getValueByVariable("UPN9", i); 
                        String UPN10 = DataModel.getValueByVariable("UPN10", i); 
                        String UPN11 = DataModel.getValueByVariable("UPN11", i); 
                        String UPN12 = DataModel.getValueByVariable("UPN12", i); 
                        String UPN13 = DataModel.getValueByVariable("UPN13", i); 
                        String UPN14 = DataModel.getValueByVariable("UPN14", i); 
                        String UPN15 = DataModel.getValueByVariable("UPN15", i); 
                        String UPN16 = DataModel.getValueByVariable("UPN16", i); 
                        String UPN17 = DataModel.getValueByVariable("UPN17", i); 
                        String UPN18 = DataModel.getValueByVariable("UPN18", i); 
                        String UPN19 = DataModel.getValueByVariable("UPN19", i); 
                        String UPN20 = DataModel.getValueByVariable("UPN20", i); 
                        try{
                   
                            if(!UPN1.equals(""))
                            {
                                System.out.println("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN1+"','','','','')");
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN1+"','','','','')");
                            }
                            if(!UPN2.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN2+"','','','','')");
                            }
                            if(!UPN3.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN3+"','','','','')");
                            }
                            if(!UPN4.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN4+"','','','','')");
                            }
                            if(!UPN5.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN5+"','','','','')");
                            }
                            if(!UPN6.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN6+"','','','','')");
                            }
                            if(!UPN7.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN7+"','','','','')");
                            }
                            if(!UPN8.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN8+"','','','','')");
                            }
                            if(!UPN9.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN9+"','','','','')");
                            }
                            if(!UPN10.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN10+"','','','','')");
                            }
                            if(!UPN11.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN11+"','','','','')");
                            }
                            if(!UPN12.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN12+"','','','','')");
                            }
                            if(!UPN13.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN13+"','','','','')");
                            }
                            if(!UPN14.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN14+"','','','','')");
                            }
                            if(!UPN15.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN15+"','','','','')");
                            }
                            if(!UPN16.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN16+"','','','','')");
                            }
                            if(!UPN17.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN17+"','','','','')");
                            }
                            if(!UPN18.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN18+"','','','','')");
                            }
                            if(!UPN19.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN19+"','','','','')");
                            }
                            if(!UPN20.equals(""))
                            {
                                data.Execute("INSERT INTO PRODUCTION.FELT_SALES_UPNWISE_OBSOLETE_LIST (PIECE_NO,UPN,DIVERSION_NO,REMARK,OLD_PARTYCODE,NEW_PARTYCODE) VALUES " +
                                             "('"+PieceNo+"','"+UPN20+"','','','','')");
                            }
                            
                            data.Execute("UPDATE PRODUCTION.FELT_SALES_SPILOVER_UPN_AREAINCHARGE_DETAIL SET ENTRY_STATUS='UPDATED' WHERE PIECE_NO='"+PieceNo+"' AND ENTRY_STATUS='ACTIVE'");
                        }catch(Exception e)
                        {
                            e.printStackTrace();
                        }
                    
               }catch(Exception e)
               {
                   e.printStackTrace();
               }
            }
       }
       DisplayData();
    }//GEN-LAST:event_btnSaveActionPerformed
    

    

    private void Save() {

        
    }

    private void SetFields(boolean pStat) {

        txtDocNo.setEnabled(pStat);
        
        
        Table.setEnabled(pStat);
        
        DataModel.SetReadOnly(0);
        
        if(USER_ID==352 || USER_ID==136 || USER_ID==318 || USER_ID==329 || USER_ID==331)//North: Mr. Mitang Lad
        {
            //DataModel.SetReadOnly(1);
            btnSave.setEnabled(true);
            Table.setEnabled(true);
        
        }
        else
        {
            DataModel.SetReadOnly(1);
            btnSave.setEnabled(false);
        }
        
        DataModel.SetReadOnly(2);
        DataModel.SetReadOnly(3);
        DataModel.SetReadOnly(4);
        DataModel.SetReadOnly(5);
        DataModel.SetReadOnly(6);
        DataModel.SetReadOnly(7);
        DataModel.SetReadOnly(8);
        DataModel.SetReadOnly(9);
        DataModel.SetReadOnly(10);
        DataModel.SetReadOnly(11);
        DataModel.SetReadOnly(12);
        DataModel.SetReadOnly(13);
        DataModel.SetReadOnly(14);
        DataModel.SetReadOnly(15);
        DataModel.SetReadOnly(16);
        DataModel.SetReadOnly(17);
        DataModel.SetReadOnly(18);
        DataModel.SetReadOnly(19);
        DataModel.SetReadOnly(20);
        DataModel.SetReadOnly(21);
        DataModel.SetReadOnly(22);
        DataModel.SetReadOnly(23);
        DataModel.SetReadOnly(24);
        DataModel.SetReadOnly(25);
        DataModel.SetReadOnly(26);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JTable Table;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbZone;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStatus1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel ltbPink;
    private javax.swing.JTextField txtDocNo;
    // End of variables declaration//GEN-END:variables

    
}
