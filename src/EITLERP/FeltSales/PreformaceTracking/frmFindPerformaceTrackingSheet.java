/*
 * frmFindFeltRate.java
 * This form is used for searching  the details of Felt Rate Master and
 * Felt Rate Updation Modules 
 * Created on July 19, 2013, 5:17 PM
 */

package EITLERP.FeltSales.PreformaceTracking;
/**
 *
 * @author  Vivek Kumar
 */


import EITLERP.EITLERPGLOBAL;
import EITLERP.FeltSales.common.LOV;
import EITLERP.clsSales_Party;
import EITLERP.data;
import java.sql.ResultSet;
import java.text.ParseException;
import java.util.Date;
import javax.swing.text.MaskFormatter;


public class frmFindPerformaceTrackingSheet extends javax.swing.JApplet {
    
    public boolean Cancelled=true;
    public String stringFindQuery="";   
   
    public void init() {
        System.gc();
        setSize(390,210);
        initComponents();
         
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmdFind = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        PARTY_CODE = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtMountDate = new javax.swing.JTextField();
        txtOtherparty = new javax.swing.JTextField();
        txtPieceNo = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Find :: Felt Performace Tracking Sheet");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 7, 310, 15);

        cmdFind.setMnemonic('F');
        cmdFind.setText("Find");
        cmdFind.setToolTipText("");
        cmdFind.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmdFind.setMargin(new java.awt.Insets(0, 14, 0, 14));
        cmdFind.setNextFocusableComponent(cmdCancel);
        cmdFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFindActionPerformed(evt);
            }
        });
        getContentPane().add(cmdFind);
        cmdFind.setBounds(310, 140, 70, 25);

        cmdCancel.setText("Cancel");
        cmdCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });
        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(310, 170, 70, 25);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.setLayout(null);

        PARTY_CODE.setToolTipText("Press F1 key for search Party Code");
        PARTY_CODE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PARTY_CODEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PARTY_CODEFocusLost(evt);
            }
        });
        PARTY_CODE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PARTY_CODEKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PARTY_CODEKeyPressed(evt);
            }
        });
        jPanel1.add(PARTY_CODE);
        PARTY_CODE.setBounds(120, 10, 160, 30);

        jLabel9.setText("Mount Date");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(20, 130, 100, 30);

        jLabel10.setText("Party Code");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(20, 10, 100, 30);

        jLabel11.setText("Other Party");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(20, 50, 100, 30);

        jLabel12.setText("Piece No");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(20, 90, 100, 30);
        jPanel1.add(txtMountDate);
        txtMountDate.setBounds(120, 130, 160, 30);
        jPanel1.add(txtOtherparty);
        txtOtherparty.setBounds(120, 50, 160, 30);
        jPanel1.add(txtPieceNo);
        txtPieceNo.setBounds(120, 90, 160, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 30, 290, 170);
    }// </editor-fold>//GEN-END:initComponents
        
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        stringFindQuery="";
        Cancelled=true;
        getParent().getParent().getParent().getParent().show(false);
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFindActionPerformed
        Cancelled=false;
        
        stringFindQuery=" DOC_NO !='' ";
        
        if(!PARTY_CODE.getText().trim().equals(""))
        {
            String DOC_NO_LIST = "''";
            ResultSet rsData = data.getResult("SELECT distinct H.DOC_NO FROM PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_HEADER H, " +
                        " PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_DETAIL D WHERE H.DOC_NO=D.DOC_NO AND H.PARTY_CODE='"+PARTY_CODE.getText()+"' ORDER BY DOC_NO DESC");    
            try{
                rsData.first();
                while(!rsData.isAfterLast())
                {
                   DOC_NO_LIST = DOC_NO_LIST + ",'"+rsData.getString("DOC_NO")+"'";                   
                   rsData.next();
                }
            }catch(Exception e)
            {
                e.printStackTrace();
            }
            stringFindQuery = stringFindQuery + " AND DOC_NO IN ("+DOC_NO_LIST+")";
        }
        
        if(!txtOtherparty.getText().trim().equals(""))
        {
            String DOC_NO_LIST = "''";
            ResultSet rsData = data.getResult("SELECT distinct H.DOC_NO FROM PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_HEADER H, " +
                        " PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_DETAIL D WHERE H.DOC_NO=D.DOC_NO AND D.SUPPLIER_NAME='"+txtOtherparty.getText().trim()+"' ORDER BY DOC_NO DESC");    
            System.out.println("SELECT distinct H.DOC_NO FROM PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_HEADER H, " +
                        " PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_DETAIL D WHERE H.DOC_NO=D.DOC_NO AND D.SUPPLIER_NAME='"+txtOtherparty.getText().trim()+"' ORDER BY DOC_NO DESC");
            try{
                rsData.first();
                while(!rsData.isAfterLast())
                {
                   DOC_NO_LIST = DOC_NO_LIST + ",'"+rsData.getString("DOC_NO")+"'";                   
                   rsData.next();
                }
            }catch(Exception e)
            {
                e.printStackTrace();
            }
            stringFindQuery = stringFindQuery + " AND DOC_NO IN ("+DOC_NO_LIST+")";
        }
        
        if(!txtPieceNo.getText().trim().equals(""))
        {
            String DOC_NO_LIST = "''";
            ResultSet rsData = data.getResult("SELECT distinct H.DOC_NO FROM PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_HEADER H, " +
                        " PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_DETAIL D WHERE H.DOC_NO=D.DOC_NO AND D.PIECE_NO='"+txtPieceNo.getText()+"' ORDER BY DOC_NO DESC");    
            try{
                rsData.first();
                while(!rsData.isAfterLast())
                {
                   DOC_NO_LIST = DOC_NO_LIST + ",'"+rsData.getString("DOC_NO")+"'";                   
                   rsData.next();
                }
            }catch(Exception e)
            {
                e.printStackTrace();
            }
            stringFindQuery = stringFindQuery + " AND DOC_NO IN ("+DOC_NO_LIST+")";
        }
        
        if(!txtMountDate.getText().trim().equals(""))
        {
            String DOC_NO_LIST = "''";
            ResultSet rsData = data.getResult("SELECT distinct H.DOC_NO FROM PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_HEADER H, " +
                        " PRODUCTION.FELT_SALES_PERFORMANCE_TRACKING_SHEET_DETAIL D WHERE H.DOC_NO=D.DOC_NO AND D.MOUNT_DATE='"+EITLERPGLOBAL.formatDateDB(txtMountDate.getText())+"' ORDER BY DOC_NO DESC");    
            try{
                rsData.first();
                while(!rsData.isAfterLast())
                {
                   DOC_NO_LIST = DOC_NO_LIST + ",'"+rsData.getString("DOC_NO")+"'";                   
                   rsData.next();
                }
            }catch(Exception e)
            {
                e.printStackTrace();
            }
            stringFindQuery = stringFindQuery + " AND DOC_NO IN ("+DOC_NO_LIST+")";
        }
        getParent().getParent().getParent().getParent().show(false);
    }//GEN-LAST:event_cmdFindActionPerformed

    private void PARTY_CODEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PARTY_CODEFocusGained
        // TODO add your handling code here:
      
    }//GEN-LAST:event_PARTY_CODEFocusGained

    private void PARTY_CODEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PARTY_CODEFocusLost
        
    }//GEN-LAST:event_PARTY_CODEFocusLost

    private void PARTY_CODEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PARTY_CODEKeyPressed


        
        if (evt.getKeyCode() == 112) {
            try {
                LOV aList = new LOV();

                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
                aList.ReturnCol = 1;
                aList.ShowReturnCol = true;
                aList.DefaultSearchOn = 2;
                aList.UseSpecifiedConn = true;
                aList.dbURL = EITLERPGLOBAL.DatabaseURL;

                if (aList.ShowLOV()) {
                    PARTY_CODE.setText(aList.ReturnVal);
                }
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("Error = " + e.getMessage());
            }
        }
    }//GEN-LAST:event_PARTY_CODEKeyPressed

    private void PARTY_CODEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PARTY_CODEKeyTyped

    }//GEN-LAST:event_PARTY_CODEKeyTyped
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PARTY_CODE;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdFind;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtMountDate;
    private javax.swing.JTextField txtOtherparty;
    private javax.swing.JTextField txtPieceNo;
    // End of variables declaration//GEN-END:variables
    
}
