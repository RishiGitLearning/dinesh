/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.FeltInvReport;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableCellRenderer;
import EITLERP.EITLTableModel;
import EITLERP.Finance.FinanceGlobal;
import EITLERP.Finance.UtilFunctions;
import EITLERP.Finance.clsPartyMaster;
import EITLERP.Finance.clsVoucher;
import EITLERP.Sales.clsSalesInvoice;
import EITLERP.data;
import EITLERP.*;
//import TReportWriter.TReportEngine;
import TReportWriter.*;
import TReportWriter.SimpleDataProvider.*;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;

/**
 *
 * @author root
 */
public class frmFeltInvPrinting extends javax.swing.JApplet {

    private TReportEngine objEngine = new TReportEngine();
    public String S = "";
    public int Flag = 0;
    private EITLTableModel DataModel;
    private EITLERP.FeltSales.common.FeltInvCalc inv_calculation;
    private EITLComboModel cmbCntrModel;
    private boolean InvFlag = false;
    private boolean cntrFlag = false;

    /**
     * Initializes the applet frmFeltInvPro
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frmFeltInvPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frmFeltInvPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frmFeltInvPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frmFeltInvPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the applet */
//        try {
//            java.awt.EventQueue.invokeAndWait(new Runnable() {
//                public void run() {
//                    initComponents();
//                }
//            });
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
        setSize(760, 540);
        initComponents();
        lblTitle.setForeground(Color.WHITE);
        jPanel2.setVisible(true);
        txtInvDate.setText(EITLERPGLOBAL.getCurrentDate());
        getDept();
        GenerateCounterCombo();
        FormatGrid();
        btnPanel.setVisible(false);
        btnInvoice2.setVisible(false);
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtInvDate = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        cmbStatus = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cmbInvCounter = new javax.swing.JComboBox();
        btnPanel = new javax.swing.JPanel();
        btnInvSum = new javax.swing.JButton();
        btnInvoice = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        btnInvoice1 = new javax.swing.JButton();
        btnInvoice2 = new javax.swing.JButton();
        chkSelectAll = new javax.swing.JCheckBox();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("FELT INVOICE PRINTING FORM");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 650, 25);

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Invoice Date (e.g. : DD/MM/YYYY)");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 30, 230, 20);

        jPanel2.setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 640, 200);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 120, 640, 200);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Approval Status");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(340, 30, 150, 20);

        txtInvDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtInvDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInvDateFocusLost(evt);
            }
        });
        getContentPane().add(txtInvDate);
        txtInvDate.setBounds(10, 50, 110, 33);

        jButton1.setText("Show List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(130, 50, 110, 33);

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "APPROVED", "CANCELLED" }));
        cmbStatus.setSelectedIndex(1);
        cmbStatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbStatusItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbStatus);
        cmbStatus.setBounds(340, 50, 150, 33);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Print Count");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(540, 30, 110, 21);

        cmbInvCounter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "0" }));
        cmbInvCounter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbInvCounterItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbInvCounter);
        cmbInvCounter.setBounds(540, 50, 110, 33);

        btnPanel.setLayout(null);

        btnInvSum.setText("Invoice Summary");
        btnInvSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvSumActionPerformed(evt);
            }
        });
        btnPanel.add(btnInvSum);
        btnInvSum.setBounds(240, 10, 170, 33);

        btnInvoice.setText("Invoice Copy");
        btnInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceActionPerformed(evt);
            }
        });
        btnPanel.add(btnInvoice);
        btnInvoice.setBounds(20, 10, 170, 33);

        jButton4.setText("LC Bank Cover Letter");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        btnPanel.add(jButton4);
        jButton4.setBounds(450, 90, 170, 33);

        jButton2.setText("Transport Letter");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        btnPanel.add(jButton2);
        jButton2.setBounds(240, 50, 170, 33);

        jButton5.setText("LC Bank Draft");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        btnPanel.add(jButton5);
        jButton5.setBounds(240, 90, 170, 33);

        jButton9.setText("VAT/GST 402");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        btnPanel.add(jButton9);
        jButton9.setBounds(450, 50, 170, 33);

        jButton10.setText("Excise/GST Summary");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        btnPanel.add(jButton10);
        jButton10.setBounds(450, 10, 170, 33);

        jButton6.setText("Hundi");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        btnPanel.add(jButton6);
        jButton6.setBounds(240, 130, 170, 33);

        jButton7.setText("Bank Nego Summary");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        btnPanel.add(jButton7);
        jButton7.setBounds(450, 130, 170, 33);

        btnInvoice1.setText("Bank Invoice Copy");
        btnInvoice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoice1ActionPerformed(evt);
            }
        });
        btnPanel.add(btnInvoice1);
        btnInvoice1.setBounds(20, 50, 170, 33);

        btnInvoice2.setText("Sales InvoiceCopy");
        btnInvoice2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoice2ActionPerformed(evt);
            }
        });
        btnPanel.add(btnInvoice2);
        btnInvoice2.setBounds(20, 90, 170, 33);

        getContentPane().add(btnPanel);
        btnPanel.setBounds(10, 330, 640, 180);

        chkSelectAll.setText("Select All");
        chkSelectAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkSelectAllMouseClicked(evt);
            }
        });
        getContentPane().add(chkSelectAll);
        chkSelectAll.setBounds(20, 90, 170, 25);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (txtInvDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter Invoice Date.");
            txtInvDate.requestFocus();
            return;
        }
        if (!EITLERPGLOBAL.isDate(txtInvDate.getText())) {
            JOptionPane.showMessageDialog(null, "Please Enter Currect Invoice Date Format (e.g. DD/MM/YYYY).");
            txtInvDate.requestFocus();
            return;
        }
        if (EITLERPGLOBAL.isDate(txtInvDate.getText())) {
            FormatGrid();
            GenerateData();
            InvFlag = true;
            cntrFlag = true;
            btnPanel.setVisible(true);
            if (EITLERPGLOBAL.gUserID == 28) {
                btnInvoice2.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtInvDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvDateFocusLost
        // TODO add your handling code here:
        if (txtInvDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter Invoice Date.");
            txtInvDate.requestFocus();
            return;
        } else if (!EITLERPGLOBAL.isDate(txtInvDate.getText())) {
            JOptionPane.showMessageDialog(null, "Please Enter Currect Invoice Date Format (e.g. DD/MM/YYYY).");
            txtInvDate.requestFocus();
            return;
        } else {
            GenerateCounterCombo();
        }
    }//GEN-LAST:event_txtInvDateFocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String invNo = "";
        int cnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT * FROM(SELECT I.INVOICE_NO,I.INVOICE_DATE,I.INVOICE_AMT,I.PARTY_CODE,I.FINYR, ";
                strSQL += "L.LC_NO,L.EXP_DATE,L.PARTY_NAME AS OPENER_NAME,L.ADDRESS,L.BANK_CITY,L.LOCALBANK,L.LOCADD1,L.LOCADD2,L.INST1,L.INST2 ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER I,PRODUCTION.FELT_SALES_LC_PARTY_MASTER L ";
                strSQL += "WHERE I.PARTY_CODE=L.PARTY_CODE AND I.CHARGE_CODE IN ('07') ";
                strSQL += "AND I.APPROVED=1 AND I.CANCELLED=0 ";
                strSQL += "AND L.EXP_DATE>=I.INVOICE_DATE AND L.MODIFIED_DATE<=I.INVOICE_DATE ";
                strSQL += "AND L.APPROVED=1 AND L.CANCELLED=0 ";
                strSQL += "AND I.INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND I.INVOICE_NO IN (" + invNo + ") ";
                strSQL += "ORDER BY L.EXP_DATE DESC) AS A GROUP BY INVOICE_NO,INVOICE_DATE ORDER BY INVOICE_NO ";
        
        
                System.out.println("SQL QUERY : " + strSQL);
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltBankCoverLetter.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String invNo = "";
        int cnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT INVOICE_NO,INVOICE_DATE,TRANSPORTER_NAME,TRANSPORTER_CODE,PARTY_CODE,"
//                        + "PARTY_NAME,"
//                        + "CASE WHEN COALESCE(BANK_NAME,'')='' THEN PARTY_NAME ELSE BANK_NAME END AS PARTY_NAME,"
                        + "CASE WHEN CHARGE_CODE='04' THEN BANK_NAME ELSE PARTY_NAME END AS PARTY_NAME,"
                        + "STATION_CODE,TR_LET_NO, ";
                strSQL += "NET_AMOUNT,INV.BALE_NO,PACKING_DATE,COALESCE(BOX_SIZE,'') AS BOX_SIZE,COALESCE(GROSS_WEIGHT,0) AS GROSS_WEIGHT,COALESCE(CART_RATE,0) AS CART_RATE ";
                strSQL += "FROM ((SELECT RIGHT(INVOICE_NO,4) AS INVOICE_NO,DATE_FORMAT(INVOICE_DATE,'%d/%m/%Y') AS INVOICE_DATE, ";
                strSQL += "TRANSPORTER_NAME,TRANSPORTER_CODE,PARTY_CODE, ";
//                strSQL += "CASE WHEN CHARGE_CODE='04' THEN PARTY_BANK_NAME ELSE PARTY_NAME END AS PARTY_NAME, ";
                strSQL += "CASE WHEN CHARGE_CODE='04' THEN CASE WHEN PARTY_BANK_NAME IN ('CENTRAL BANK OF INDIA','BANK OF BARODA','INDIAN OVERSEAS BANK','HDFC BANK') THEN PARTY_BANK_NAME ELSE 'CENTRAL BANK OF INDIA' END ELSE PARTY_NAME END AS PARTY_NAME, ";
                strSQL += "CHARGE_CODE, ";
                strSQL += "DISPATCH_STATION AS STATION_CODE,INVOICE_AMT AS NET_AMOUNT,BALE_NO,PACKING_DATE,TR_LET_NO ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER WHERE APPROVED=1 AND CANCELLED=0 ";
                strSQL += "AND INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";
                //strSQL += "AND INVOICE_DATE>='2017-12-17' ";
                strSQL += ") AS INV ";
                strSQL += "LEFT JOIN ";
                strSQL += "(SELECT BALE_NO,BALE_DATE,BOX_SIZE,GROSS_WEIGHT,CART_RATE ";
                strSQL += "FROM PRODUCTION.FELT_TRANSPORTER_WEIGHT ";
                strSQL += "WHERE APPROVED=1 AND CANCELED=0 ) AS TRNS ";
                strSQL += "ON INV.BALE_NO = TRNS.BALE_NO AND INV.PACKING_DATE = TRNS.BALE_DATE "
                        + "LEFT JOIN (SELECT PARTY_CODE AS D_PARTY_CODE,COALESCE(OTHER_BANK_NAME,'') AS BANK_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER) AS BPM ON INV.PARTY_CODE=BPM.D_PARTY_CODE "
                        + ")";
                
                
                System.out.println("SQL QUERY : " + strSQL);
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltTransportLetter.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnInvSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvSumActionPerformed
        // TODO add your handling code here:
        String invNo = "";
        int cnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("FROM_DATE", fdt);
                parameterMap.put("TO_DATE", fdt);

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT RIGHT(INVOICE_NO,4) AS INVOICE_NO,INVOICE_DATE,BALE_NO,PARTY_CODE,";
                strSQL += "SUBSTRING(PARTY_NAME,1,22) AS PARTY_NAME,PIECE_NO,CHARGE_CODE,";
                strSQL += "ACTUAL_WEIGHT AS GROSS_QTY,BAS_AMT,CGST_AMT ,SGST_AMT ,IGST_AMT, DISC_AMT,INSURANCE_AMT,NET_AMT,INVOICE_AMT,(CST2+CST5+VAT1+VAT4) AS CST_VAT,TCS_AMT,SEAM_CHG,CHEM_TRT_CHG ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER ";
                strSQL += "WHERE APPROVED=1 AND CANCELLED=0 ";
                strSQL += "AND INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                //strSQL += "AND LOT_NO='" + EITLERPGLOBAL.getComboCode(cmbLot) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";
                strSQL += "ORDER BY INVOICE_NO";

                System.out.println("SQL QUERY : " + strSQL);
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltInvoiceSummary.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnInvSumActionPerformed

    private void cmbStatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbStatusItemStateChanged
        // TODO add your handling code here:
        if (InvFlag) {
            FormatGrid();
            GenerateData();
        }
    }//GEN-LAST:event_cmbStatusItemStateChanged

    private void txtInvDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvDateFocusGained
        // TODO add your handling code here:
        FormatGrid();
        InvFlag = false;
        cntrFlag = false;
    }//GEN-LAST:event_txtInvDateFocusGained

    private void cmbInvCounterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbInvCounterItemStateChanged
        // TODO add your handling code here:
        if (cntrFlag) {
            FormatGrid();
            GenerateData();
        }
    }//GEN-LAST:event_cmbInvCounterItemStateChanged

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String invNo = "";
        int cnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);
                
                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT 1 AS INV,INVOICE_NO,INVOICE_DATE,GATEPASS_NO,BALE_NO,SQMTR, ";
                strSQL += "ROUND((LENGTH*NO_OF_PIECES),2) AS LENGTH,ACTUAL_WEIGHT AS WEIGHT, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT) AS DISC_BAS_AMT, ";
                strSQL += "CGST_AMT,SGST_AMT,IGST_AMT,TCS_AMT, ";
                strSQL += "CASE WHEN CANCELLED=1 THEN 'C' ELSE '' END AS CFLAG ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER ";
                strSQL += "WHERE (APPROVED!=0 OR CANCELLED!=0) ";
                strSQL += "AND INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";                
//            strSQL += "AND LOT_NO='" + EITLERPGLOBAL.getComboCode(cmbLot) + "' ";
                strSQL += "UNION ALL ";
                strSQL += "SELECT '','T O T A L','',COUNT(DISTINCT INVOICE_NO),'',SUM(SQMTR) AS TSQMTR, ";
                strSQL += "ROUND(SUM(LENGTH*NO_OF_PIECES),2) AS TLENGTH,SUM(ACTUAL_WEIGHT) AS TWEIGHT,SUM(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT) AS TDISCAMT, ";
                strSQL += "SUM(CGST_AMT) AS TCGST,SUM(SGST_AMT) AS TSGST,SUM(IGST_AMT) AS TIGST,SUM(TCS_AMT) AS TTCS,'' ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER ";
                strSQL += "WHERE CANCELLED=0 AND APPROVED=1 ";
                strSQL += "AND INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";
                strSQL += "ORDER BY INVOICE_NO ";
//            strSQL += "AND LOT_NO='" + EITLERPGLOBAL.getComboCode(cmbLot) + "' ";

                System.out.println("SQL QUERY : " + strSQL);
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltExciseGSTSummary.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String invNo = "";
        int cnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);
                
                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT ' ' AS CHECK_POST,H.DISPATCH_STATION AS STATION_CODE,H.PARTY_NAME,P.DISTRICT, ";
                strSQL += "CONCAT(P.ADDRESS1,'  ',P.ADDRESS2,'  ',P.CITY_ID) AS ADDRESS,H.GSTIN_NO, ";
                strSQL += "RIGHT(H.INVOICE_NO,4) AS INVOICE_NO,SUBSTRING(H.INVOICE_DATE,1,10) AS INVOICE_DATE, ";
                strSQL += "H.ACTUAL_WEIGHT AS TOTAL_GROSS_QTY, 12 AS PER,H.INVOICE_AMT AS NET_AMOUNT, ";
                strSQL += "CASE WHEN LENGTH(P.TIN_NO)>5 THEN P.TIN_NO ELSE '99999999999' END AS TIN,H.PARTY_CODE,H.TRANSPORTER_NAME ";
                strSQL += "FROM DINESHMILLS.D_SAL_PARTY_MASTER P, PRODUCTION.FELT_SAL_INVOICE_HEADER H ";
                strSQL += "WHERE H.PARTY_CODE=P.PARTY_CODE AND H.APPROVED=1 AND H.CANCELLED=0 AND P.MAIN_ACCOUNT_CODE=210010 ";
                strSQL += "AND H.INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";
//                strSQL += "AND H.LOT_NO='" + EITLERPGLOBAL.getComboCode(cmbLot) + "' ";
                strSQL += "ORDER BY H.PARTY_CODE,H.INVOICE_NO ";

                System.out.println("SQL QUERY : " + strSQL);
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltGSTInvSummary.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceActionPerformed
        // TODO add your handling code here:
        String invNo = "", invPrntNo = "", invPrntDt = "";
        String prntDt = data.getStringValueFromDB("SELECT CURRENT_TIMESTAMP() FROM DUAL");
        int cnt = 0, prntCnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);
                parameterMap.put("CONTEXT","http://200.0.0.227:8080/SDMLERP/");
                
                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT PARA_DESC,PARA_CODE, ";
                strSQL += "COALESCE(TRANSPORTER_NAME,'') AS TRANSPORTER_NAME,INVOICE_NO,RIGHT(INVOICE_NO,4) AS DRAFT_NO,GATEPASS_NO, ";
                strSQL += "CASE WHEN CANCELLED=1 THEN 'CANCELLED INVOICE' ELSE (CASE WHEN APPROVED=0 THEN 'UNDER APPROVAL' ELSE '' END) END AS CINV, ";
//                strSQL += "CASE WHEN PARA_DESC!='ORIGINAL FOR RECIPIENT' THEN '[NOT FOR ITC PURPOSE]' ELSE '' END AS ITC, ";
                strSQL += "CASE WHEN PARA_DESC='ACCOUNT COPY' THEN '[NOT FOR ITC PURPOSE]' ELSE '' END AS ITC, ";
                strSQL += "INVOICE_TYPE,INVOICE_DATE,PARTY_CODE,BALE_NO,PACKING_DATE,CHARGE_CODE,HSN_CODE, ";
                strSQL += "PARTY_NAME,ADDRESS1,ADDRESS2,PINCODE,CITY_ID,DISPATCH_STATION,CITY_NAME,PLACE_OF_SUPPLY, ";
                strSQL += "COALESCE(DOCUMENT_THROUGH,'') AS DOCUMENT_THROUGH,SUBSTRING(GSTIN_NO,1,2) AS STATE_GST_CODE, ";
                strSQL += "CASE WHEN GSTIN_NO IS NULL THEN 'XXXXXXXXXXXXXXX' ELSE CASE WHEN LENGTH(GSTIN_NO)!=15 THEN 'XXXXXXXXXXXXXXX' ELSE GSTIN_NO END END AS GSTIN_NO, ";
                strSQL += "PRODUCT_CODE,TRANSPORTER_CODE,NO_OF_PIECES,PIECE_NO,MACHINE_NO,POSITION_NO, ";
                strSQL += "CONCAT('PM ',MACHINE_NO,' ',POSITION_DESC) AS MACHINE_NO_DESC, ";
                strSQL += "PRODUCT_DESC,SYN_PER,LENGTH,WIDTH,GSM,STYLE,RATE_UNIT, ";
                strSQL += "RATE,SQMTR,ACTUAL_WEIGHT,INVOICE_AMT_IN_WORD, ";
                strSQL += "SURCHARGE_PER,SURCHARGE_RATE,GROSS_RATE, ";
                strSQL += "BAS_AMT,DISC_PER,DISC_AMT,CHEM_TRT_CHG,SPIRAL_CHG,PIN_CHG, ";
                strSQL += "AOSD_AMT,AOSD_PER, ";
            
                strSQL += "COALESCE(MOBILE_NO,'') AS MOBILE_NO, ";
                strSQL += "COALESCE(DELIVERY_MODE,'') AS DELIVERY_MODE, ";
                strSQL += "COALESCE(MATERIAL_CODE,'') AS MATERIAL_CODE, ";
                strSQL += "TCS_PER,TCS_AMT, ";
            
//                strSQL += "COALESCE(PO_NO,'') AS PO_NO,PO_DATE, ";
                strSQL += "CASE WHEN LENGTH(COALESCE(PO_NO,''))>15 THEN RIGHT(PO_NO,15) ELSE COALESCE(PO_NO,'') END AS PO_NO,PO_DATE, ";
                strSQL += "COALESCE(LC_NO,'') AS LC_NO, ";
                strSQL += "COALESCE(DESP_MODE,'') AS DESP_MODE, ";
                strSQL += "COALESCE(PAYMENT_TERMS,'') AS PAYMENT_TERMS, ";
                strSQL += "COALESCE(PARTY_BANK_NAME,'') AS PARTY_BANK_NAME, ";
                strSQL += "COALESCE(PARTY_BANK_ADDRESS1,'') AS PARTY_BANK_ADDRESS1, ";
                strSQL += "COALESCE(PARTY_BANK_ADDRESS2,'') AS PARTY_BANK_ADDRESS2, ";
                strSQL += "COALESCE(SHIPPED_TO_PARTY_NAME,'') AS SHIPPED_TO_PARTY_NAME, ";
                strSQL += "COALESCE(SHIPPED_TO_PARTY_ADDRESS,'') AS SHIPPED_TO_PARTY_ADDRESS, ";
//                strSQL += "(SPIRAL_CHG+PIN_CHG) AS CAMT, ";
//                strSQL += "(BAS_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG) AS TOTAMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG) AS NETAMT,INSURANCE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT) AS TAXABLE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT) AS TOTAL_AMT, ";
                strSQL += "(SEAM_CHG) AS CAMT, ";
                strSQL += "(BAS_AMT+CHEM_TRT_CHG+SEAM_CHG) AS TOTAMT, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG) AS NETAMT,INSURANCE_AMT, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT) AS TAXABLE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT) AS TOTAL_AMT, ";
                
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT+TCS_AMT) AS TOTAL_AMT, ";
                
                strSQL += "NET_AMT,INVOICE_AMT,IGST_PER,IGST_AMT,CGST_PER,CGST_AMT,SGST_PER,SGST_AMT, ";
                strSQL += "GST_COMP_CESS_PER,GST_COMP_CESS_AMT,ADV_RECEIVED_AMT,ADV_AGN_INV_AMT,ADV_AGN_IGST_AMT,ADV_AGN_SGST_AMT,ADV_AGN_CGST_AMT,ADV_AGN_GST_COMP_CESS_AMT, ";
                strSQL += "COALESCE(ADV_DOC_NO,'') AS ADV_DOC_NO,COALESCE(VEHICLE_NO,'') AS VEHICLE_NO, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT-ADV_RECEIVED_AMT) AS BALANCE, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT-ADV_RECEIVED_AMT) AS BALANCE, ";
                strSQL += "(INVOICE_AMT-ADV_AGN_INV_AMT) AS BALANCE_AGN_INV, ";
                strSQL += "(IGST_AMT-ADV_AGN_IGST_AMT) AS BALANCE_AGN_IGST, ";
                strSQL += "(SGST_AMT-ADV_AGN_SGST_AMT) AS BALANCE_AGN_SGST, ";
                strSQL += "(CGST_AMT-ADV_AGN_CGST_AMT) AS BALANCE_AGN_CGST, ";
                strSQL += "(GST_COMP_CESS_AMT-ADV_AGN_GST_COMP_CESS_AMT) AS BALANCE_AGN_GST_COMP_CESS ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER , PRODUCTION.FELT_PARAMETER_MASTER ";
                strSQL += "WHERE INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";
//                strSQL += "WHERE INVOICE_NO='FE/001345' ";
                strSQL += "AND PARA_ID='FELT_INVOICE' ";
                strSQL += "ORDER BY INVOICE_NO,PARA_CODE ";
            
                System.out.println("SQL QUERY : " + strSQL);
//                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltInvGST_PARA_NEW.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltInvGST_PARA_NEW_LOGO.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            
            for (int j = 0; j < Table.getRowCount(); j++) {
                if (Table.getValueAt(j, 0).equals(true)) {
                    invPrntNo = Table.getValueAt(j, 1).toString().trim();
                    invPrntDt = EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim());
                    
                    prntCnt = data.getIntValueFromDB("SELECT INV_PRINT_COUNT FROM PRODUCTION.FELT_SAL_INVOICE_HEADER WHERE INVOICE_DATE='"+invPrntDt+"' AND INVOICE_NO='"+invPrntNo+"' ");
                    prntCnt = prntCnt+1;
                    data.Execute("UPDATE PRODUCTION.FELT_SAL_INVOICE_HEADER SET INV_PRINT_COUNT='"+prntCnt+"', INV_LAST_PRINT_DATE='"+prntDt+"' WHERE INVOICE_DATE='"+invPrntDt+"' AND INVOICE_NO='"+invPrntNo+"'");
                }
            }
            
            btnInvoice.setVisible(false);
        }
    }//GEN-LAST:event_btnInvoiceActionPerformed

    private void chkSelectAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkSelectAllMouseClicked
        // TODO add your handling code here:
        if (chkSelectAll.isSelected()) {
            for (int c=0; c<Table.getRowCount(); c++) {
                Table.getModel().setValueAt(true, c, 0);
            }
        } else {
            for (int c=0; c<Table.getRowCount(); c++) {
                Table.getModel().setValueAt(false, c, 0);
            }  
        }
    }//GEN-LAST:event_chkSelectAllMouseClicked

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        int chkCount = 0;
        for (int a=0; a<Table.getRowCount(); a++) {
            if (Table.getValueAt(a, 0).equals(true))
                chkCount++;
            }
        if (chkCount==Table.getRowCount()) {
            chkSelectAll.setSelected(true);
        } else {
            chkSelectAll.setSelected(false);
        }
    }//GEN-LAST:event_TableMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String invNo = "";
        int cnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT * FROM(SELECT I.INVOICE_NO,I.INVOICE_DATE,I.INVOICE_AMT,CONCAT(I.INVOICE_NO,'/',I.FINYR) AS BILL_NO,INVOICE_AMT_IN_WORD, ";
                strSQL += "L.PARTY_NAME AS OPENER_NAME,L.ADDRESS,L.BANK_CITY,L.LOCALBANK,L.INST1,L.INST2 ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER I,PRODUCTION.FELT_SALES_LC_PARTY_MASTER L ";
                strSQL += "WHERE I.PARTY_CODE=L.PARTY_CODE AND I.CHARGE_CODE IN ('07') ";
                strSQL += "AND I.APPROVED=1 AND I.CANCELLED=0 ";
                strSQL += "AND L.EXP_DATE>=I.INVOICE_DATE AND L.MODIFIED_DATE<=I.INVOICE_DATE ";
                strSQL += "AND L.APPROVED=1 AND L.CANCELLED=0 ";
                strSQL += "AND I.INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND I.INVOICE_NO IN (" + invNo + ") ";
                strSQL += "ORDER BY L.EXP_DATE DESC) AS A GROUP BY INVOICE_NO,INVOICE_DATE ORDER BY INVOICE_NO ";
        
                System.out.println("SQL QUERY : " + strSQL);
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltBankDraft.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String invNo = "";
        int cnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT * FROM PRODUCTION.FELT_SAL_INVOICE_HEADER ";
                strSQL += "WHERE CHARGE_CODE=04 ";
                strSQL += "AND APPROVED=1 AND CANCELLED=0 ";
                strSQL += "AND INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";
                strSQL += "ORDER BY INVOICE_NO ";
                
                
                System.out.println("SQL QUERY : " + strSQL);
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltHundi.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String invNo = "";
        int cnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                
                String strSQL = "SELECT FORMAT(Y.PARA_CODE,'') AS PARA_CODE,Y.PARA_DESC,X.* FROM ( ";
                strSQL += "SELECT A1.INVOICE_NO,A1.INVOICE_DATE,A1.PARTY_CODE,A1.FINYR, ";
//                strSQL += "CASE WHEN P1.BANK_ID IN ('1','2','3','50') THEN P1.BANK_NAME ELSE 'CENTRAL BANK OF INDIA' END AS COMP_BANK_NAME, ";
                strSQL += "COALESCE(P1.OTHER_BANK_NAME,'') AS COMP_BANK_NAME, ";
                strSQL += "A1.PARTY_BANK_NAME,A1.PARTY_BANK_ADDRESS1,A1.PARTY_BANK_ADDRESS2, ";
                strSQL += "A1.PARTY_NAME,A1.ADDRESS1,A1.ADDRESS2,A1.INVOICE_AMT,P1.CREDIT_DAYS, ";
                strSQL += "DATE_ADD(A1.INVOICE_DATE,INTERVAL P1.CREDIT_DAYS DAY) AS DUE_DATE ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER A1 ";
                strSQL += "LEFT JOIN DINESHMILLS.D_SAL_PARTY_MASTER P1 ON P1.PARTY_CODE=A1.PARTY_CODE ";
                strSQL += "WHERE A1.CHARGE_CODE=04 ";
                strSQL += "AND A1.APPROVED=1 AND A1.CANCELLED=0 ";
                strSQL += "AND A1.INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND A1.INVOICE_NO IN (" + invNo + ") ";
                strSQL += ") AS X LEFT JOIN PRODUCTION.FELT_PARAMETER_MASTER Y ON 1=1 WHERE Y.PARA_ID='FELT_HUNDI' ";
        
                System.out.println("SQL QUERY : " + strSQL);
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltBankNegoRpt.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btnInvoice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoice1ActionPerformed
        // TODO add your handling code here:
        String invNo = "", invPrntNo = "", invPrntDt = "";
        String prntDt = data.getStringValueFromDB("SELECT CURRENT_TIMESTAMP() FROM DUAL");
        int cnt = 0, prntCnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);
                parameterMap.put("CONTEXT","http://200.0.0.227:8080/SDMLERP/");
                
                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT 'BANK COPY' AS PARA_DESC, ";
                strSQL += "COALESCE(TRANSPORTER_NAME,'') AS TRANSPORTER_NAME,INVOICE_NO,RIGHT(INVOICE_NO,4) AS DRAFT_NO,GATEPASS_NO, ";
                strSQL += "CASE WHEN CANCELLED=1 THEN 'CANCELLED INVOICE' ELSE (CASE WHEN APPROVED=0 THEN 'UNDER APPROVAL' ELSE '' END) END AS CINV, ";
                strSQL += "'[NOT FOR ITC PURPOSE]' AS ITC, ";
                strSQL += "INVOICE_TYPE,INVOICE_DATE,PARTY_CODE,BALE_NO,PACKING_DATE,CHARGE_CODE,HSN_CODE, ";
                strSQL += "PARTY_NAME,ADDRESS1,ADDRESS2,PINCODE,CITY_ID,DISPATCH_STATION,CITY_NAME,PLACE_OF_SUPPLY, ";
                strSQL += "COALESCE(DOCUMENT_THROUGH,'') AS DOCUMENT_THROUGH,SUBSTRING(GSTIN_NO,1,2) AS STATE_GST_CODE, ";
                strSQL += "CASE WHEN GSTIN_NO IS NULL THEN 'XXXXXXXXXXXXXXX' ELSE CASE WHEN LENGTH(GSTIN_NO)!=15 THEN 'XXXXXXXXXXXXXXX' ELSE GSTIN_NO END END AS GSTIN_NO, ";
                strSQL += "PRODUCT_CODE,TRANSPORTER_CODE,NO_OF_PIECES,PIECE_NO,MACHINE_NO,POSITION_NO, ";
                strSQL += "CONCAT('PM ',MACHINE_NO,' ',POSITION_DESC) AS MACHINE_NO_DESC, ";
                strSQL += "PRODUCT_DESC,SYN_PER,LENGTH,WIDTH,GSM,STYLE,RATE_UNIT, ";
                strSQL += "RATE,SQMTR,ACTUAL_WEIGHT,INVOICE_AMT_IN_WORD, ";
                strSQL += "SURCHARGE_PER,SURCHARGE_RATE,GROSS_RATE, ";
                strSQL += "BAS_AMT,DISC_PER,DISC_AMT,CHEM_TRT_CHG,SPIRAL_CHG,PIN_CHG, ";
                strSQL += "AOSD_AMT,AOSD_PER, ";
            
                strSQL += "COALESCE(MOBILE_NO,'') AS MOBILE_NO, ";
                strSQL += "COALESCE(DELIVERY_MODE,'') AS DELIVERY_MODE, ";
                strSQL += "COALESCE(MATERIAL_CODE,'') AS MATERIAL_CODE, ";
                strSQL += "TCS_PER,TCS_AMT, ";
            
                strSQL += "COALESCE(DESP_MODE,'') AS DESP_MODE, ";
//                strSQL += "COALESCE(PO_NO,'') AS PO_NO,PO_DATE, ";
                strSQL += "CASE WHEN LENGTH(COALESCE(PO_NO,''))>15 THEN RIGHT(PO_NO,15) ELSE COALESCE(PO_NO,'') END AS PO_NO,PO_DATE, ";
                strSQL += "COALESCE(LC_NO,'') AS LC_NO, ";
                strSQL += "COALESCE(PAYMENT_TERMS,'') AS PAYMENT_TERMS, ";
                strSQL += "COALESCE(PARTY_BANK_NAME,'') AS PARTY_BANK_NAME, ";
                strSQL += "COALESCE(PARTY_BANK_ADDRESS1,'') AS PARTY_BANK_ADDRESS1, ";
                strSQL += "COALESCE(PARTY_BANK_ADDRESS2,'') AS PARTY_BANK_ADDRESS2, ";
                strSQL += "COALESCE(SHIPPED_TO_PARTY_NAME,'') AS SHIPPED_TO_PARTY_NAME, ";
                strSQL += "COALESCE(SHIPPED_TO_PARTY_ADDRESS,'') AS SHIPPED_TO_PARTY_ADDRESS, ";
//                strSQL += "(SPIRAL_CHG+PIN_CHG) AS CAMT, ";
//                strSQL += "(BAS_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG) AS TOTAMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG) AS NETAMT,INSURANCE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT) AS TAXABLE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT) AS TOTAL_AMT, ";
                strSQL += "(SEAM_CHG) AS CAMT, ";
                strSQL += "(BAS_AMT+CHEM_TRT_CHG+SEAM_CHG) AS TOTAMT, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG) AS NETAMT,INSURANCE_AMT, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT) AS TAXABLE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT) AS TOTAL_AMT, ";
                
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT+TCS_AMT) AS TOTAL_AMT, ";
                
                strSQL += "NET_AMT,INVOICE_AMT,IGST_PER,IGST_AMT,CGST_PER,CGST_AMT,SGST_PER,SGST_AMT, ";
                strSQL += "GST_COMP_CESS_PER,GST_COMP_CESS_AMT,ADV_RECEIVED_AMT,ADV_AGN_INV_AMT,ADV_AGN_IGST_AMT,ADV_AGN_SGST_AMT,ADV_AGN_CGST_AMT,ADV_AGN_GST_COMP_CESS_AMT, ";
                strSQL += "COALESCE(ADV_DOC_NO,'') AS ADV_DOC_NO,COALESCE(VEHICLE_NO,'') AS VEHICLE_NO, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT-ADV_RECEIVED_AMT) AS BALANCE, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT-ADV_RECEIVED_AMT) AS BALANCE, ";
                strSQL += "(INVOICE_AMT-ADV_AGN_INV_AMT) AS BALANCE_AGN_INV, ";
                strSQL += "(IGST_AMT-ADV_AGN_IGST_AMT) AS BALANCE_AGN_IGST, ";
                strSQL += "(SGST_AMT-ADV_AGN_SGST_AMT) AS BALANCE_AGN_SGST, ";
                strSQL += "(CGST_AMT-ADV_AGN_CGST_AMT) AS BALANCE_AGN_CGST, ";
                strSQL += "(GST_COMP_CESS_AMT-ADV_AGN_GST_COMP_CESS_AMT) AS BALANCE_AGN_GST_COMP_CESS ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER ";
                strSQL += "WHERE INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";
//                strSQL += "WHERE INVOICE_NO='FE/001345' ";
                strSQL += "ORDER BY INVOICE_NO ";

                System.out.println("SQL QUERY : " + strSQL);
//                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltInvGST_PARA_NEW.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltInvGST_PARA_NEW_LOGO.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnInvoice1ActionPerformed

    private void btnInvoice2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoice2ActionPerformed
        // TODO add your handling code here:
        String invNo = "", invPrntNo = "", invPrntDt = "";
        String prntDt = data.getStringValueFromDB("SELECT CURRENT_TIMESTAMP() FROM DUAL");
        int cnt = 0, prntCnt = 0;
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;

        for (int j = 0; j < Table.getRowCount(); j++) {
            if (Table.getValueAt(j, 0).equals(true)) {
                cnt++;
            }
        }

        if (cnt == 0) {
            JOptionPane.showMessageDialog(null, "Please Select any INVOICE.");
        } else {

            try {

                for (int j = 0; j < Table.getRowCount(); j++) {
                    if (Table.getValueAt(j, 0).equals(true)) {
                        invNo += "'" + Table.getValueAt(j, 1) + "',";
                    }
                }

                invNo = invNo.substring(0, invNo.length() - 1);
                System.out.println("Invoice No in : " + invNo);

                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();

                String fdt = txtInvDate.getText();

                System.out.println("TIME : " + EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());

                parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
                parameterMap.put("INV_DATE", fdt);
                parameterMap.put("CONTEXT","http://200.0.0.227:8080/SDMLERP/");
                
                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT 'SALES COPY' AS PARA_DESC, ";
                strSQL += "COALESCE(TRANSPORTER_NAME,'') AS TRANSPORTER_NAME,INVOICE_NO,RIGHT(INVOICE_NO,4) AS DRAFT_NO,GATEPASS_NO, ";
                strSQL += "CASE WHEN CANCELLED=1 THEN 'CANCELLED INVOICE' ELSE (CASE WHEN APPROVED=0 THEN 'UNDER APPROVAL' ELSE '' END) END AS CINV, ";
                strSQL += "'[NOT FOR ITC PURPOSE]' AS ITC, ";
                strSQL += "INVOICE_TYPE,INVOICE_DATE,PARTY_CODE,BALE_NO,PACKING_DATE,CHARGE_CODE,HSN_CODE, ";
                strSQL += "PARTY_NAME,ADDRESS1,ADDRESS2,PINCODE,CITY_ID,DISPATCH_STATION,CITY_NAME,PLACE_OF_SUPPLY, ";
                strSQL += "COALESCE(DOCUMENT_THROUGH,'') AS DOCUMENT_THROUGH,SUBSTRING(GSTIN_NO,1,2) AS STATE_GST_CODE, ";
                strSQL += "CASE WHEN GSTIN_NO IS NULL THEN 'XXXXXXXXXXXXXXX' ELSE CASE WHEN LENGTH(GSTIN_NO)!=15 THEN 'XXXXXXXXXXXXXXX' ELSE GSTIN_NO END END AS GSTIN_NO, ";
                strSQL += "PRODUCT_CODE,TRANSPORTER_CODE,NO_OF_PIECES,PIECE_NO,MACHINE_NO,POSITION_NO, ";
                strSQL += "CONCAT('PM ',MACHINE_NO,' ',POSITION_DESC) AS MACHINE_NO_DESC, ";
                strSQL += "PRODUCT_DESC,SYN_PER,LENGTH,WIDTH,GSM,STYLE,RATE_UNIT, ";
                strSQL += "RATE,SQMTR,ACTUAL_WEIGHT,INVOICE_AMT_IN_WORD, ";
                strSQL += "SURCHARGE_PER,SURCHARGE_RATE,GROSS_RATE, ";
                strSQL += "BAS_AMT,DISC_PER,DISC_AMT,CHEM_TRT_CHG,SPIRAL_CHG,PIN_CHG, ";
                strSQL += "AOSD_AMT,AOSD_PER, ";
            
                strSQL += "COALESCE(MOBILE_NO,'') AS MOBILE_NO, ";
                strSQL += "COALESCE(DELIVERY_MODE,'') AS DELIVERY_MODE, ";
                strSQL += "COALESCE(MATERIAL_CODE,'') AS MATERIAL_CODE, ";
                strSQL += "TCS_PER,TCS_AMT, ";
            
                strSQL += "COALESCE(DESP_MODE,'') AS DESP_MODE, ";
//                strSQL += "COALESCE(PO_NO,'') AS PO_NO,PO_DATE, ";
                strSQL += "CASE WHEN LENGTH(COALESCE(PO_NO,''))>15 THEN RIGHT(PO_NO,15) ELSE COALESCE(PO_NO,'') END AS PO_NO,PO_DATE, ";
                strSQL += "COALESCE(LC_NO,'') AS LC_NO, ";
                strSQL += "COALESCE(PAYMENT_TERMS,'') AS PAYMENT_TERMS, ";
                strSQL += "COALESCE(PARTY_BANK_NAME,'') AS PARTY_BANK_NAME, ";
                strSQL += "COALESCE(PARTY_BANK_ADDRESS1,'') AS PARTY_BANK_ADDRESS1, ";
                strSQL += "COALESCE(PARTY_BANK_ADDRESS2,'') AS PARTY_BANK_ADDRESS2, ";
                strSQL += "COALESCE(SHIPPED_TO_PARTY_NAME,'') AS SHIPPED_TO_PARTY_NAME, ";
                strSQL += "COALESCE(SHIPPED_TO_PARTY_ADDRESS,'') AS SHIPPED_TO_PARTY_ADDRESS, ";
//                strSQL += "(SPIRAL_CHG+PIN_CHG) AS CAMT, ";
//                strSQL += "(BAS_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG) AS TOTAMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG) AS NETAMT,INSURANCE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT) AS TAXABLE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT) AS TOTAL_AMT, ";
                strSQL += "(SEAM_CHG) AS CAMT, ";
                strSQL += "(BAS_AMT+CHEM_TRT_CHG+SEAM_CHG) AS TOTAMT, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG) AS NETAMT,INSURANCE_AMT, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT) AS TAXABLE_AMT, ";
//                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT) AS TOTAL_AMT, ";
                
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT+IGST_AMT+CGST_AMT+SGST_AMT+GST_COMP_CESS_AMT+TCS_AMT) AS TOTAL_AMT, ";
                
                strSQL += "NET_AMT,INVOICE_AMT,IGST_PER,IGST_AMT,CGST_PER,CGST_AMT,SGST_PER,SGST_AMT, ";
                strSQL += "GST_COMP_CESS_PER,GST_COMP_CESS_AMT,ADV_RECEIVED_AMT,ADV_AGN_INV_AMT,ADV_AGN_IGST_AMT,ADV_AGN_SGST_AMT,ADV_AGN_CGST_AMT,ADV_AGN_GST_COMP_CESS_AMT, ";
                strSQL += "COALESCE(ADV_DOC_NO,'') AS ADV_DOC_NO,COALESCE(VEHICLE_NO,'') AS VEHICLE_NO, ";
//                strSQL += "(BAS_AMT-DISC_AMT+CHEM_TRT_CHG+SPIRAL_CHG+PIN_CHG+INSURANCE_AMT-ADV_RECEIVED_AMT) AS BALANCE, ";
                strSQL += "(BAS_AMT-DISC_AMT-AOSD_AMT+CHEM_TRT_CHG+SEAM_CHG+INSURANCE_AMT-ADV_RECEIVED_AMT) AS BALANCE, ";
                
                strSQL += "(INVOICE_AMT-ADV_AGN_INV_AMT) AS BALANCE_AGN_INV, ";
                strSQL += "(IGST_AMT-ADV_AGN_IGST_AMT) AS BALANCE_AGN_IGST, ";
                strSQL += "(SGST_AMT-ADV_AGN_SGST_AMT) AS BALANCE_AGN_SGST, ";
                strSQL += "(CGST_AMT-ADV_AGN_CGST_AMT) AS BALANCE_AGN_CGST, ";
                strSQL += "(GST_COMP_CESS_AMT-ADV_AGN_GST_COMP_CESS_AMT) AS BALANCE_AGN_GST_COMP_CESS ";
                strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER ";
                strSQL += "WHERE INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText().trim()) + "' ";
                strSQL += "AND INVOICE_NO IN (" + invNo + ") ";
//                strSQL += "WHERE INVOICE_NO='FE/001345' ";
                strSQL += "ORDER BY INVOICE_NO ";

                System.out.println("SQL QUERY : " + strSQL);
//                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltInvGST_PARA_NEW.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/FeltInvGST_PARA_NEW_LOGO.jrxml", 1, strSQL); //productlist is the name of my jasper file.
                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    st.close();
                    Conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnInvoice2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btnInvSum;
    private javax.swing.JButton btnInvoice;
    private javax.swing.JButton btnInvoice1;
    private javax.swing.JButton btnInvoice2;
    private javax.swing.JPanel btnPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkSelectAll;
    private javax.swing.JComboBox cmbInvCounter;
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtInvDate;
    // End of variables declaration//GEN-END:variables

    private void FormatGrid() {
        try {

            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);

            EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
            //Renderer.setColor(0, 0, Color.LIGHT_GRAY);

            DataModel.addColumn("Select"); //0 - Read Only
            DataModel.addColumn("Invoice No"); //1
            DataModel.addColumn("Invoice Date"); //2
            DataModel.addColumn("Party Code"); //3
            DataModel.addColumn("Party Name"); //4
            DataModel.addColumn("Charge Code"); //5
            DataModel.addColumn("Amount"); //6
            DataModel.addColumn("Status"); //7
            DataModel.addColumn("Inv Print Count"); //8
            DataModel.addColumn("Last Inv Print Date"); //9

            int ImportCol = 0;
            Renderer.setCustomComponent(ImportCol, "CheckBox");
            JCheckBox aCheckBox = new JCheckBox();
            aCheckBox.setBackground(Color.WHITE);
            aCheckBox.setVisible(true);
            aCheckBox.setEnabled(true);
            aCheckBox.setSelected(false);
            Table.getColumnModel().getColumn(ImportCol).setCellEditor(new DefaultCellEditor(aCheckBox));
            Table.getColumnModel().getColumn(ImportCol).setCellRenderer(Renderer);

            DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);
            DataModel.SetReadOnly(7);
            DataModel.SetReadOnly(8);
            DataModel.SetReadOnly(9);

            Table.getColumnModel().getColumn(0).setMinWidth(70);
            Table.getColumnModel().getColumn(0).setMaxWidth(70);
            Table.getColumnModel().getColumn(1).setMinWidth(80);
            Table.getColumnModel().getColumn(1).setMaxWidth(80);
            Table.getColumnModel().getColumn(2).setMinWidth(100);
            Table.getColumnModel().getColumn(2).setMaxWidth(100);
            Table.getColumnModel().getColumn(3).setMinWidth(80);
            Table.getColumnModel().getColumn(3).setMaxWidth(80);
            Table.getColumnModel().getColumn(4).setMinWidth(120);
            //Table.getColumnModel().getColumn(4).setMaxWidth(120);
            Table.getColumnModel().getColumn(5).setMinWidth(50);
            Table.getColumnModel().getColumn(6).setMinWidth(80);
            Table.getColumnModel().getColumn(7).setMinWidth(100);
            Table.getColumnModel().getColumn(8).setMinWidth(80);
            Table.getColumnModel().getColumn(9).setMinWidth(150);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void GenerateData() {
        String cndtn = "", dt = "", tm = "";
        String strSQL = "", printDt = "";
        try {

            int status = cmbStatus.getSelectedIndex();
            if (status == 0) {
                cndtn += "";
            }
            if (status == 1) {
                cndtn += " AND APPROVAL_STATUS='APPROVED' ";
            }
//            if (status == 2) {
//                cndtn += " AND APPROVAL_STATUS='UNAPPROVED' ";
//            }
            if (status == 2) {
                cndtn += " AND APPROVAL_STATUS='CANCELLED' ";
            }

            String cntr = cmbInvCounter.getSelectedItem().toString();
            if (cntr.equals("ALL")) {
                cndtn += "";
            } else {
                if (cntr.equals("0")) {
                    cndtn += " AND (INV_PRINT_COUNT IS NULL OR INV_PRINT_COUNT='" + cntr + "' ) ";
                } else {
                    cndtn += " AND INV_PRINT_COUNT='" + cntr + "' ";
                }
            }

            strSQL += " SELECT APPROVAL_STATUS,INVOICE_NO,INVOICE_DATE,PARTY_CODE,PARTY_NAME,CHARGE_CODE,INVOICE_AMT,COALESCE(INV_PRINT_COUNT,0) AS INV_PRINT_COUNT,COALESCE(INV_LAST_PRINT_DATE,'') AS INV_LAST_PRINT_DATE FROM ";
            strSQL += "(SELECT INVOICE_NO AS INV_NO,INVOICE_DATE AS INV_DATE,CASE WHEN APPROVED = 0 AND CANCELLED = 0 THEN 'UNAPPROVED' WHEN APPROVED = 1 AND CANCELLED = 0 THEN 'APPROVED' WHEN APPROVED = 0 AND CANCELLED = 1 THEN 'CANCELLED' END AS APPROVAL_STATUS FROM PRODUCTION.FELT_SAL_INVOICE_HEADER) AS HS ";
            strSQL += "LEFT JOIN ";
            strSQL += "(SELECT INVOICE_NO,INVOICE_DATE,PARTY_CODE,PARTY_NAME,CHARGE_CODE,INVOICE_AMT,INV_PRINT_COUNT,INV_LAST_PRINT_DATE FROM PRODUCTION.FELT_SAL_INVOICE_HEADER) AS HD ";
            strSQL += "ON INVOICE_DATE = INV_DATE AND INVOICE_NO=INV_NO ";
            strSQL += "WHERE INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText()) + "' ";
            strSQL += "" + cndtn + " ";
            strSQL += "ORDER BY INVOICE_NO ";

            System.out.println(strSQL);

            ResultSet rsTmp = data.getResult(strSQL);
            rsTmp.first();

            int Counter = 0;

            if (rsTmp.getRow() > 0) {

                while (!rsTmp.isAfterLast()) {
                    Counter++;
                    // objRow=objReportData.newRow();
                    Object[] rowData = new Object[20];

                    rowData[1] = UtilFunctions.getString(rsTmp, "INVOICE_NO", "");
                    rowData[2] = EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp, "INVOICE_DATE", ""));
                    rowData[3] = UtilFunctions.getString(rsTmp, "PARTY_CODE", "");
                    rowData[4] = UtilFunctions.getString(rsTmp, "PARTY_NAME", "");
                    rowData[5] = UtilFunctions.getString(rsTmp, "CHARGE_CODE", "");
                    rowData[6] = UtilFunctions.getString(rsTmp, "INVOICE_AMT", "");
                    rowData[7] = UtilFunctions.getString(rsTmp, "APPROVAL_STATUS", "");
                    rowData[8] = UtilFunctions.getInt(rsTmp, "INV_PRINT_COUNT", 0);
                    
                    if (rsTmp.getString("INV_LAST_PRINT_DATE").startsWith("0000-00-00") || rsTmp.getString("INV_LAST_PRINT_DATE").equals("")) {
                        rowData[9] = "";
                    } else {
                        dt = rsTmp.getString("INV_LAST_PRINT_DATE").substring(0, 10);
                        dt = EITLERPGLOBAL.formatDate(dt);
                        tm = rsTmp.getString("INV_LAST_PRINT_DATE").substring(10);
                        rowData[9] = dt + tm;
                    }

                    DataModel.addRow(rowData);
                    rsTmp.next();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void getDept() {
        if (EITLERPGLOBAL.gUserDeptID == 76 || EITLERPGLOBAL.gUserDeptID == 0) {
            //btnProcess.setEnabled(true);
        } else {
            //btnProcess.setEnabled(false);
            //btnProcess.setVisible(false);
        }
    }

    private void GenerateCounterCombo() {
        cmbCntrModel = new EITLComboModel();
        cmbInvCounter.removeAllItems();
        cmbInvCounter.setModel(cmbCntrModel);
        ComboData aData = new ComboData();

        aData.Code = 0;
        aData.Text = "ALL";
        cmbCntrModel.addElement(aData);

        try {
            Connection Conn = data.getConn();
            Statement stTmp = Conn.createStatement();
            int counter = 1;
            ResultSet rsTmp = stTmp.executeQuery("SELECT DISTINCT COALESCE(INV_PRINT_COUNT,0) AS INV_PRINT_COUNT FROM PRODUCTION.FELT_SAL_INVOICE_HEADER WHERE INVOICE_DATE='" + EITLERPGLOBAL.formatDateDB(txtInvDate.getText()) + "'  ORDER BY INV_PRINT_COUNT ");
            while (rsTmp.next()) {
                aData.Code = counter;
                aData.Text = rsTmp.getString("INV_PRINT_COUNT");
                cmbCntrModel.addElement(aData);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
