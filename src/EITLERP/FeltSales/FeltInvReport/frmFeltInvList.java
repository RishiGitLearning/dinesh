/*
 * frmRptInvoiceList.java
 *
 * Created on June 15, 2010, 5:26 PM
 */

package EITLERP.FeltSales.FeltInvReport;

//import EITLERP.Sales.ReportsUI.*;
import EITLERP.*;
import javax.swing.*;
import EITLERP.Utils.*;
import java.awt.*;
import java.util.*;
import java.net.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
/**
 *
 * @author  user
 */

public class frmFeltInvList extends javax.swing.JApplet {
    
    private EITLComboModel cmbInvoiceTypeModel;
    
    
    /** Initializes the applet frmRptInvoiceList */
    public void init() {
        setSize(400,300);
        initComponents();
        cmdOk1.setVisible(false);
        cmdOk2.setVisible(false);
    }
    
    
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        cmdOk = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdOk1 = new javax.swing.JButton();
        cmdOk2 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 52, 100, 17);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("To Date :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 80, 100, 17);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(115, 50, 100, 27);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(115, 80, 100, 27);

        cmdOk.setText("OK");
        cmdOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOkActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOk);
        cmdOk.setBounds(110, 130, 60, 29);

        cmdCancel.setText("CANCEL");
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });
        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(180, 130, 100, 29);

        cmdOk1.setText("132803-SD RECIEVABLE");
        cmdOk1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOk1ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOk1);
        cmdOk1.setBounds(80, 170, 250, 29);

        cmdOk2.setText("132802 - SD PAYABLE");
        cmdOk2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOk2ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdOk2);
        cmdOk2.setBounds(80, 200, 250, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdOk2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOk2ActionPerformed
             if ( !Validate()) {
            return;
        } else {
            PreviewReport132802();
        }
    
    
    
    }//GEN-LAST:event_cmdOk2ActionPerformed

    private void cmdOk1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOk1ActionPerformed
        if ( !Validate()) {
            return;
        } else {
            PreviewReport132803();
        }
    
    }//GEN-LAST:event_cmdOk1ActionPerformed
    
    private void cmdOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOkActionPerformed
        // TODO add your handling code here:
        if ( !Validate()) {
            return;
        } else {
            PreviewReport();
        }
    }//GEN-LAST:event_cmdOkActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        txtFromDate.setText("");
        txtToDate.setText("");
        txtFromDate.requestFocus();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdOk;
    private javax.swing.JButton cmdOk1;
    private javax.swing.JButton cmdOk2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private boolean Validate() {
        //Form level validations
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        return true;
    }
    
    private void PreviewReport() {
        
        String InvoiceType=2+"";
        String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
        
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            Conn = data.getConn();
            st = Conn.createStatement();

            HashMap parameterMap = new HashMap();

            parameterMap.put("INVOICE_TYPE", InvoiceType);
            parameterMap.put("INVOICE_DATE_FROM", FromDate);
            parameterMap.put("INVOICE_DATE_TO", ToDate);
            
            ReportRegister rpt = new ReportRegister(parameterMap, Conn);
            
            String strSQL = "SELECT  A1.INVOICE_NO,A1.INVOICE_DATE,A1.PARTY_CODE,A1.PARTY_NAME,A1.INVOICE_AMT, ";
            strSQL += "A1.CHARGE_CODE,A1.DUE_DAYS,VOUCHER,B1.INVOICE_AMOUNT FROM  ";
            strSQL += "(SELECT  A.INVOICE_NO,SUBSTRING(A.INVOICE_DATE,1,10) AS INVOICE_DATE,A.PARTY_CODE,B.PARTY_NAME,A.INVOICE_AMT,A.CHARGE_CODE ";
            strSQL += ", COALESCE(DATEDIFF(A.DUE_DATE,SUBSTRING(A.INVOICE_DATE,1,10)),0) AS DUE_DAYS ";
            strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE SUBSTRING(A.INVOICE_DATE,1,10)>='"+FromDate+"'  ";
            strSQL += "AND SUBSTRING(A.INVOICE_DATE,1,10)<='"+ToDate+"' AND A.INVOICE_TYPE=2  ";
            strSQL += "AND A.PARTY_CODE= B.PARTY_CODE AND A.APPROVED=1 AND A.CANCELLED=0) AS A1 ";
            strSQL += "LEFT JOIN ";
            strSQL += "(SELECT INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT, ";
            strSQL += "GROUP_CONCAT(DISTINCT D.VOUCHER_NO ORDER BY D.VOUCHER_NO SEPARATOR ', ') AS VOUCHER  ";
            strSQL += "FROM FINANCE.D_FIN_VOUCHER_DETAIL_EX C,FINANCE.D_FIN_VOUCHER_HEADER D ";
            strSQL += " WHERE INVOICE_DATE>='"+FromDate+"'  ";
            strSQL += "AND INVOICE_DATE<='"+ToDate+"'   ";
            strSQL += "AND C.VOUCHER_NO= D.VOUCHER_NO AND D.APPROVED =1 AND D.CANCELLED =0 ";
            strSQL += "GROUP BY INVOICE_NO,INVOICE_DATE) AS B1 ";
            strSQL += "ON A1.INVOICE_NO = B1.INVOICE_NO  ";
            strSQL += "AND B1.INVOICE_DATE = A1.INVOICE_DATE   ";
            strSQL += "ORDER BY A1.INVOICE_NO";
            
            rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/rptFeltSalesInvoiceDetail.jrxml", 1, strSQL); //productlist is the name of my jasper file.
            rpt.callReport();

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                st.close();
                Conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
    private void PreviewReportOLD() {
        try {
            int InvoiceType = 2;
            String MainCode="210010";
            
            URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptSalesInvoiceDetail.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&InvoiceType="+2+"&FromDate="+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"&ToDate="+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"&MainCode="+MainCode);
            System.out.println("Report Path : " +ReportFile);
            EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,"File error "+e.getMessage());
        }
    }
    
    
    private void PreviewReport132802() {
        
        String InvoiceType=2+"";
        String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
        
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            Conn = data.getConn();
            st = Conn.createStatement();

            HashMap parameterMap = new HashMap();

            parameterMap.put("INVOICE_TYPE", InvoiceType);
            parameterMap.put("INVOICE_DATE_FROM", FromDate);
            parameterMap.put("INVOICE_DATE_TO", ToDate);
            
            ReportRegister rpt = new ReportRegister(parameterMap, Conn);
            
            String strSQL = "SELECT  A1.INVOICE_NO,A1.INVOICE_DATE,A1.PARTY_CODE,A1.PARTY_NAME,A1.INVOICE_AMT, ";
            strSQL += "A1.CHARGE_CODE,A1.DUE_DAYS,VOUCHER,B1.INVOICE_AMOUNT,SD_AMT FROM  ";
            strSQL += "(SELECT  A.INVOICE_NO,SUBSTRING(A.INVOICE_DATE,1,10) AS INVOICE_DATE,A.PARTY_CODE,B.PARTY_NAME,A.INVOICE_AMT,A.CHARGE_CODE ";
            strSQL += ", COALESCE(DATEDIFF(A.DUE_DATE,SUBSTRING(A.INVOICE_DATE,1,10)),0) AS DUE_DAYS,SD_AMT ";
            strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE SUBSTRING(A.INVOICE_DATE,1,10)>='"+FromDate+"'  ";
            strSQL += "AND SUBSTRING(A.INVOICE_DATE,1,10)<='"+ToDate+"' AND A.INVOICE_TYPE=2  ";
            strSQL += "AND A.PARTY_CODE= B.PARTY_CODE AND A.APPROVED=1 AND A.CANCELLED=0 AND SD_AMT > 0) AS A1 ";
            strSQL += "LEFT JOIN ";
            strSQL += "(SELECT INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT, ";
            strSQL += "GROUP_CONCAT(DISTINCT D.VOUCHER_NO ORDER BY D.VOUCHER_NO SEPARATOR ', ') AS VOUCHER  ";
            strSQL += "FROM FINANCE.D_FIN_VOUCHER_DETAIL_EX C,FINANCE.D_FIN_VOUCHER_HEADER D ";
            strSQL += " WHERE INVOICE_DATE>='"+FromDate+"'  ";
            strSQL += "AND INVOICE_DATE<='"+ToDate+"'   ";
            strSQL += "AND MAIN_ACCOUNT_CODE = 132802  ";
            strSQL += "AND C.VOUCHER_NO= D.VOUCHER_NO AND D.APPROVED =1 AND D.CANCELLED =0 ";
            strSQL += "GROUP BY INVOICE_NO,INVOICE_DATE) AS B1 ";
            strSQL += "ON A1.INVOICE_NO = B1.INVOICE_NO  ";
            strSQL += "AND B1.INVOICE_DATE = A1.INVOICE_DATE   ";
            strSQL += "ORDER BY A1.INVOICE_NO";
            
            rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/rptFeltSalesInvoiceDetail132802.jrxml", 1, strSQL); //productlist is the name of my jasper file.
            rpt.callReport();

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                st.close();
                Conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
        private void PreviewReport132802OLD() {
        try {
            int InvoiceType = 2;
            String MainCode="210010";
            
            URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptSalesInvoiceDetail132802.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&InvoiceType="+2+"&FromDate="+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"&ToDate="+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"&MainCode="+MainCode);
            System.out.println("Report Path : " +ReportFile);
            EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,"File error "+e.getMessage());
        }
    }
    
        
    private void PreviewReport132803() {
        
        String InvoiceType=2+"";
        String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
        
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            Conn = data.getConn();
            st = Conn.createStatement();

            HashMap parameterMap = new HashMap();

            parameterMap.put("INVOICE_TYPE", InvoiceType);
            parameterMap.put("INVOICE_DATE_FROM", FromDate);
            parameterMap.put("INVOICE_DATE_TO", ToDate);
            
            ReportRegister rpt = new ReportRegister(parameterMap, Conn);
            
            String strSQL = "SELECT  A1.INVOICE_NO,A1.INVOICE_DATE,A1.PARTY_CODE,A1.PARTY_NAME,A1.INVOICE_AMT, ";
            strSQL += "A1.CHARGE_CODE,A1.DUE_DAYS,VOUCHER,B1.INVOICE_AMOUNT,SD_AMT FROM  ";
            strSQL += "(SELECT  A.INVOICE_NO,SUBSTRING(A.INVOICE_DATE,1,10) AS INVOICE_DATE,A.PARTY_CODE,B.PARTY_NAME,A.INVOICE_AMT,A.CHARGE_CODE ";
            strSQL += ", COALESCE(DATEDIFF(A.DUE_DATE,SUBSTRING(A.INVOICE_DATE,1,10)),0) AS DUE_DAYS,SD_AMT ";
            strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE SUBSTRING(A.INVOICE_DATE,1,10)>='"+FromDate+"'  ";
            strSQL += "AND SUBSTRING(A.INVOICE_DATE,1,10)<='"+ToDate+"' AND A.INVOICE_TYPE=2  ";
            strSQL += "AND A.PARTY_CODE= B.PARTY_CODE AND A.APPROVED=1 AND A.CANCELLED=0 AND SD_AMT > 0) AS A1 ";
            strSQL += "LEFT JOIN ";
            strSQL += "(SELECT INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT, ";
            strSQL += "GROUP_CONCAT(DISTINCT D.VOUCHER_NO ORDER BY D.VOUCHER_NO SEPARATOR ', ') AS VOUCHER  ";
            strSQL += "FROM FINANCE.D_FIN_VOUCHER_DETAIL_EX C,FINANCE.D_FIN_VOUCHER_HEADER D ";
            strSQL += " WHERE INVOICE_DATE>='"+FromDate+"'  ";
            strSQL += "AND INVOICE_DATE<='"+ToDate+"'   ";
            strSQL += "AND MAIN_ACCOUNT_CODE = 132803  ";
            strSQL += "AND C.VOUCHER_NO= D.VOUCHER_NO AND D.APPROVED =1 AND D.CANCELLED =0 ";
            strSQL += "GROUP BY INVOICE_NO,INVOICE_DATE) AS B1 ";
            strSQL += "ON A1.INVOICE_NO = B1.INVOICE_NO  ";
            strSQL += "AND B1.INVOICE_DATE = A1.INVOICE_DATE   ";
            strSQL += "ORDER BY A1.INVOICE_NO";
            
            rpt.setReportName("/EITLERP/FeltSales/FeltInvReport/rptFeltSalesInvoiceDetail132803.jrxml", 1, strSQL); //productlist is the name of my jasper file.
            rpt.callReport();

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                st.close();
                Conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }    
        
    private void PreviewReport132803OLD() {
        try {
            int InvoiceType = 2;
            String MainCode="210010";
            
            URL ReportFile=new URL("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptSalesInvoiceDetail132803.jsp?dbURL="+EITLERPGLOBAL.DatabaseURL+"&CompanyID="+EITLERPGLOBAL.gCompanyID+"&InvoiceType="+2+"&FromDate="+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"&ToDate="+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"&MainCode="+MainCode);
            System.out.println("Report Path : " +ReportFile);
            EITLERPGLOBAL.loginContext.showDocument(ReportFile,"_blank");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,"File error "+e.getMessage());
        }
    }   
    
    
    
}
