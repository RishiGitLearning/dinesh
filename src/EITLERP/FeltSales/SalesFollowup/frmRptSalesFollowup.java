/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.SalesFollowup;

import EITLERP.Finance.ReportsUI.*;
import EITLERP.FeltSales.Reports.*;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableModel;
import EITLERP.JTextFieldHint;
import EITLERP.LOV;
import EITLERP.ReportRegister;
import EITLERP.clsSales_Party;
import EITLERP.data;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Dharmendra
 */
public class frmRptSalesFollowup extends javax.swing.JApplet {

    /**
     * Initializes the applet FrmWhStk
     */
    private EITLTableModel DataModel = new EITLTableModel();
    public EITLERP.FeltSales.Reports.clsExcelExporter exprt = new EITLERP.FeltSales.Reports.clsExcelExporter();

    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>

        /* Create and display the applet */
        initComponents();
        
        GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
        int scrwidth = gd.getDisplayMode().getWidth();
        int scrheight = gd.getDisplayMode().getHeight();
        //setSize(855, 380);
        setSize(scrwidth, scrheight);
        
        FormatGrid();
        txtPartyCode.requestFocus();
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        file1 = new javax.swing.JFileChooser();
        file2 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblPartyName = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablePiecewiseDetail = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableMonthwisePiecewiseDetail = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txtPieceNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        jLabel1.setText("Piece No");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 50, 70, 30);

        txtPartyCode.setToolTipText("Press F1 key for search Party Code");
        txtPartyCode = new JTextFieldHint(new JTextField(),"Search by F1");
        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });
        getContentPane().add(txtPartyCode);
        txtPartyCode.setBounds(100, 50, 130, 30);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 29));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Sales Follow up");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(2, 4, 410, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 1, 1090, 30);
        getContentPane().add(lblPartyName);
        lblPartyName.setBounds(240, 50, 280, 30);

        jPanel2.setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 1020, 330);

        jButton2.setText("SHOW DATA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(320, 10, 130, 28);

        jButton1.setText("Export to excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(460, 10, 140, 28);

        jTabbedPane1.addTab("Piece Clubbing", jPanel2);

        jPanel3.setLayout(null);

        TablePiecewiseDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TablePiecewiseDetail);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(10, 40, 1010, 330);

        jButton3.setText("SHOW DATA");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);
        jButton3.setBounds(320, 10, 130, 28);

        jButton4.setText("Export to excel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4);
        jButton4.setBounds(460, 10, 140, 28);

        jTabbedPane1.addTab("Piecewise Detail", jPanel3);

        jPanel4.setLayout(null);

        TableMonthwisePiecewiseDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TableMonthwisePiecewiseDetail);

        jPanel4.add(jScrollPane3);
        jScrollPane3.setBounds(10, 40, 1010, 330);

        jButton5.setText("SHOW DATA");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5);
        jButton5.setBounds(320, 10, 130, 28);

        jButton6.setText("Export to excel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6);
        jButton6.setBounds(460, 10, 140, 28);

        jTabbedPane1.addTab("MonthwisePiecewise Detail", jPanel4);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 90, 1060, 420);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Tab1");

        txtPieceNo.setToolTipText("Press F1 key for search Party Code");
        txtPartyCode = new JTextFieldHint(new JTextField(),"Search by F1");
        txtPieceNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPieceNoKeyPressed(evt);
            }
        });
        getContentPane().add(txtPieceNo);
        txtPieceNo.setBounds(840, 50, 130, 30);

        jLabel3.setText("Party Code");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 50, 80, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        FormatGrid();
        try{
            String str="";
            String strCond="";
            if(!txtPartyCode.getText().equals("")){
                strCond+=" AND PR_PARTY_CODE='"+txtPartyCode.getText().trim()+"' ";
            }
            if(!txtPieceNo.getText().equals("")){
                strCond+=" AND PIECE_NO='"+txtPieceNo.getText().trim()+"' ";
            }
            
            str += "SELECT PR_PARTY_CODE,PARTY_NAME,PIECE_NO,EXPECTED_DISPATCH_DATE,CURRENT_STATUS,USER_NAME,PC_DOC_NO AS CLUBBING_NO, PC_DOC_DATE AS CLUBBING_DATE FROM (\n"
                    + "SELECT D.*, PR_PARTY_CODE,PARTY_NAME,USER_NAME FROM PRODUCTION.FELT_SALES_PIECE_CLUBBING_DETAIL D,PRODUCTION.FELT_SALES_PIECE_REGISTER,DINESHMILLS.D_COM_USER_MASTER U,\n"
                    + "(SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010' AND APPROVED=1 AND CANCELLED=0) AS P\n"
                    + "WHERE PIECE_NO = PR_PIECE_NO\n"
                    + "AND PR_PARTY_CODE=PARTY_CODE\n"+strCond
                    + "AND D.USER_ID = U.USER_ID ) AS M\n"
                    + "ORDER BY PC_DOC_DATE,PC_DOC_NO";
            System.out.println(str);
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            System.out.println("Query : " + str);
            ResultSet resultSet = statement.executeQuery(str);
            int srNo = 0;
            double TotalInvoiceAmt = 0;
            while (resultSet.next()) {

                srNo++;
                int NewRow = srNo - 1;

                Object[] rowData = new Object[1];
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SrNo", srNo + "", NewRow);
                DataModel.setValueByVariable("PR_PARTY_CODE", resultSet.getString("PR_PARTY_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_NAME", resultSet.getString("PARTY_NAME"), NewRow);
                DataModel.setValueByVariable("PIECE_NO", resultSet.getString("PIECE_NO"), NewRow);
                DataModel.setValueByVariable("EXPECTED_DISPATCH_DATE",EITLERPGLOBAL.formatDate(resultSet.getString("EXPECTED_DISPATCH_DATE")) , NewRow);
                DataModel.setValueByVariable("CURRENT_STATUS",resultSet.getString("CURRENT_STATUS") , NewRow);
                DataModel.setValueByVariable("USER_NAME", resultSet.getString("USER_NAME"), NewRow);
                DataModel.setValueByVariable("CLUBBING_NO", resultSet.getString("CLUBBING_NO"), NewRow);
                DataModel.setValueByVariable("CLUBBING_DATE", EITLERPGLOBAL.formatDate(resultSet.getString("CLUBBING_DATE")), NewRow);
                
                
                
            }
            
            
        }catch(Exception e)
        {            
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exprt.fillData(Table, new File(file1.getSelectedFile().toString() + ".xls"), "WAREHOUSE-REPORT");

            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        if (evt.getKeyCode() == 112) //F1 Key pressed
        {
            LOV aList = new LOV();

            aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE=210010";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;

            if (aList.ShowLOV()) {
                txtPartyCode.setText(aList.ReturnVal);
                lblPartyName.setText(clsSales_Party.getPartyName(EITLERPGLOBAL.gCompanyID, aList.ReturnVal));

            }
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        FormatGridPiecewiseDetail();
        try{
            String str="";
            String strCond="";
            if(!txtPartyCode.getText().equals("")){
                strCond+=" AND PARTY_CODE='"+txtPartyCode.getText().trim()+"' ";
            }
            if(!txtPieceNo.getText().equals("")){
                strCond+=" AND PIECE_NO='"+txtPieceNo.getText().trim()+"' ";
            }
            
            str += "SELECT PIECE_NO,PARTY_CODE,PARTY_NAME,COUNT(*) AS RESCHEDULE,GROUP_CONCAT(SUBSTRING(DATE_FORMAT(D.PR_WH_EXP_DISPATCH_DATE,'%d/%m/%Y'),1,10)) AS EXP_DATE FROM PRODUCTION.FELT_SALES_EXPECTED_DISPATCH_DATE_HISTORY D ,PRODUCTION.FELT_SALES_PIECE_REGISTER,DINESHMILLS.D_COM_USER_MASTER U,\n"
                    + "(SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010' AND APPROVED=1 AND CANCELLED=0) AS P\n"
                    + "WHERE PIECE_NO = PR_PIECE_NO\n"
                    + "AND PR_PARTY_CODE=PARTY_CODE\n"+strCond
                    + "AND D.USER_ID = U.USER_ID\n"
                    + "GROUP BY PIECE_NO";
            System.out.println(str);
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            System.out.println("Query : " + str);
            ResultSet resultSet = statement.executeQuery(str);
            int srNo = 0;
            double TotalInvoiceAmt = 0;
            while (resultSet.next()) {

                srNo++;
                int NewRow = srNo - 1;

                Object[] rowData = new Object[1];
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SrNo", srNo + "", NewRow);
                DataModel.setValueByVariable("PIECE_NO", resultSet.getString("PIECE_NO"), NewRow);
                DataModel.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_NAME", resultSet.getString("PARTY_NAME"), NewRow);
                DataModel.setValueByVariable("RESCHEDULE",resultSet.getString("RESCHEDULE") , NewRow);
                DataModel.setValueByVariable("EXP_DATE", resultSet.getString("EXP_DATE"), NewRow);               
                
                
            }
            
            
        }catch(Exception e)
        {            
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exprt.fillData(TablePiecewiseDetail, new File(file1.getSelectedFile().toString() + ".xls"), "WAREHOUSE-REPORT");

            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        FormatGridMonthwisePiecewiseDetail();
        try{
            String str="";
            String strCond="";
            if(!txtPartyCode.getText().equals("")){
                strCond+=" AND PARTY_CODE='"+txtPartyCode.getText().trim()+"' ";
            }
            if(!txtPieceNo.getText().equals("")){
                strCond+=" AND PIECE_NO='"+txtPieceNo.getText().trim()+"' ";
            }
            
            str += "SELECT YEAR(ENTRY_DATE) YEAR, MONTH(ENTRY_DATE) MONTH ,PIECE_NO,PARTY_CODE,PARTY_NAME,COUNT(*) AS RESCHEDULE,GROUP_CONCAT(SUBSTRING(DATE_FORMAT(D.PR_WH_EXP_DISPATCH_DATE,'%d/%m/%Y'),1,10)) AS EXP_DATE FROM PRODUCTION.FELT_SALES_EXPECTED_DISPATCH_DATE_HISTORY D ,PRODUCTION.FELT_SALES_PIECE_REGISTER,DINESHMILLS.D_COM_USER_MASTER U,\n"
                    + "(SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010' AND APPROVED=1 AND CANCELLED=0) AS P\n"
                    + "WHERE PIECE_NO = PR_PIECE_NO\n"
                    + "AND PR_PARTY_CODE=PARTY_CODE\n"+strCond
                    + "AND D.USER_ID = U.USER_ID\n"
                    + "GROUP BY YEAR(ENTRY_DATE), MONTH(ENTRY_DATE),PIECE_NO";
            System.out.println(str);
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            System.out.println("Query : " + str);
            ResultSet resultSet = statement.executeQuery(str);
            int srNo = 0;
            double TotalInvoiceAmt = 0;
            while (resultSet.next()) {

                srNo++;
                int NewRow = srNo - 1;

                Object[] rowData = new Object[1];
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SrNo", srNo + "", NewRow);
                DataModel.setValueByVariable("YEAR", resultSet.getString("YEAR"), NewRow);
                DataModel.setValueByVariable("MONTH", resultSet.getString("MONTH"), NewRow);
                DataModel.setValueByVariable("PIECE_NO", resultSet.getString("PIECE_NO"), NewRow);
                DataModel.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_NAME", resultSet.getString("PARTY_NAME"), NewRow);
                DataModel.setValueByVariable("RESCHEDULE",resultSet.getString("RESCHEDULE") , NewRow);
                DataModel.setValueByVariable("EXP_DATE", resultSet.getString("EXP_DATE"), NewRow);               
                
                
            }
            
            
        }catch(Exception e)
        {            
            e.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exprt.fillData(TableMonthwisePiecewiseDetail, new File(file1.getSelectedFile().toString() + ".xls"), "WAREHOUSE-REPORT");

            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtPieceNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPieceNoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPieceNoKeyPressed

    private void FormatGrid() {
        try {
            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("Party Code"); //0 - Read Only
            DataModel.addColumn("Party Name"); //1
            DataModel.addColumn("Piece No"); //5
            DataModel.addColumn("Exp Dispatch Date"); //6
            DataModel.addColumn("Curr Status"); //2
            DataModel.addColumn("User Name"); //1
            DataModel.addColumn("Clubbing No"); //5
            DataModel.addColumn("Clubbing Date"); //6            
            
            
            DataModel.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel.SetVariable(1, "PR_PARTY_CODE"); //0 - Read Only
            DataModel.SetVariable(2, "PARTY_NAME"); //1
            DataModel.SetVariable(3, "PIECE_NO"); //1
            DataModel.SetVariable(4, "EXPECTED_DISPATCH_DATE"); //1
            DataModel.SetVariable(5, "CURRENT_STATUS"); //1
            DataModel.SetVariable(6, "USER_NAME"); //1
            DataModel.SetVariable(7, "CLUBBING_NO"); //1
            DataModel.SetVariable(8, "CLUBBING_DATE"); //1            
            
            
            for(int i=0;i<DataModel.getColumnCount();i++)
            {
                    DataModel.SetReadOnly(i);
            }
            
            Table.getColumnModel().getColumn(0).setMaxWidth(40);
            Table.getColumnModel().getColumn(1).setMinWidth(50);
            Table.getColumnModel().getColumn(2).setMinWidth(50);
            Table.getColumnModel().getColumn(3).setMinWidth(100);
            Table.getColumnModel().getColumn(4).setMinWidth(100);
            Table.getColumnModel().getColumn(5).setMinWidth(100);
            Table.getColumnModel().getColumn(6).setMinWidth(100);
            Table.getColumnModel().getColumn(6).setMaxWidth(100);
            Table.getColumnModel().getColumn(7).setMinWidth(100);
            Table.getColumnModel().getColumn(8).setMinWidth(100);
            
            
            
        } catch (Exception e) {
            //e.printStackTrace();
        }
    }

    private void FormatGridPiecewiseDetail() {
        try {
            DataModel = new EITLTableModel();
            TablePiecewiseDetail.removeAll();

            TablePiecewiseDetail.setModel(DataModel);
            TablePiecewiseDetail.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("Piece No"); //5
            DataModel.addColumn("Party Code"); //0 - Read Only
            DataModel.addColumn("Party Name"); //1            
            DataModel.addColumn("Reschedule"); //6
            DataModel.addColumn("Exp Date"); //2            
            
            
            DataModel.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel.SetVariable(1, "PIECE_NO"); //1
            DataModel.SetVariable(2, "PARTY_CODE"); //0 - Read Only
            DataModel.SetVariable(3, "PARTY_NAME"); //1            
            DataModel.SetVariable(4, "RESCHEDULE"); //1
            DataModel.SetVariable(5, "EXP_DATE"); //1
            
            
            
            for(int i=0;i<DataModel.getColumnCount();i++)
            {
                    DataModel.SetReadOnly(i);
            }
            
            TablePiecewiseDetail.getColumnModel().getColumn(0).setMaxWidth(40);
            TablePiecewiseDetail.getColumnModel().getColumn(1).setMinWidth(50);
            TablePiecewiseDetail.getColumnModel().getColumn(2).setMinWidth(50);
            TablePiecewiseDetail.getColumnModel().getColumn(3).setMinWidth(100);
            TablePiecewiseDetail.getColumnModel().getColumn(4).setMinWidth(100);
            TablePiecewiseDetail.getColumnModel().getColumn(5).setMinWidth(100);            
            
            
            
        } catch (Exception e) {
            //e.printStackTrace();
        }
    }

    private void FormatGridMonthwisePiecewiseDetail() {
        try {
            DataModel = new EITLTableModel();
            TableMonthwisePiecewiseDetail.removeAll();

            TableMonthwisePiecewiseDetail.setModel(DataModel);
            TableMonthwisePiecewiseDetail.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("Year"); //5
            DataModel.addColumn("Month"); //0 - Read Only
            DataModel.addColumn("Piece No"); //5
            DataModel.addColumn("Party Code"); //0 - Read Only
            DataModel.addColumn("Party Name"); //1            
            DataModel.addColumn("Reschedule"); //6
            DataModel.addColumn("Exp Date"); //2            
            
            
            DataModel.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel.SetVariable(1, "YEAR"); //1
            DataModel.SetVariable(2, "MONTH"); //0 - Read Only
            DataModel.SetVariable(3, "PIECE_NO"); //1
            DataModel.SetVariable(4, "PARTY_CODE"); //0 - Read Only
            DataModel.SetVariable(5, "PARTY_NAME"); //1            
            DataModel.SetVariable(6, "RESCHEDULE"); //1
            DataModel.SetVariable(7, "EXP_DATE"); //1
            
            
            
            for(int i=0;i<DataModel.getColumnCount();i++)
            {
                    DataModel.SetReadOnly(i);
            }
            
            TableMonthwisePiecewiseDetail.getColumnModel().getColumn(0).setMaxWidth(40);
            TableMonthwisePiecewiseDetail.getColumnModel().getColumn(1).setMinWidth(50);
            TableMonthwisePiecewiseDetail.getColumnModel().getColumn(2).setMinWidth(50);
            TableMonthwisePiecewiseDetail.getColumnModel().getColumn(3).setMinWidth(100);
            TableMonthwisePiecewiseDetail.getColumnModel().getColumn(4).setMinWidth(100);
            TableMonthwisePiecewiseDetail.getColumnModel().getColumn(5).setMinWidth(100);            
            TableMonthwisePiecewiseDetail.getColumnModel().getColumn(6).setMinWidth(100);
            TableMonthwisePiecewiseDetail.getColumnModel().getColumn(7).setMinWidth(150);            
            
            
        } catch (Exception e) {
            //e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JTable TableMonthwisePiecewiseDetail;
    private javax.swing.JTable TablePiecewiseDetail;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFileChooser file1;
    private javax.swing.JFileChooser file2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblPartyName;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtPieceNo;
    // End of variables declaration//GEN-END:variables
}
