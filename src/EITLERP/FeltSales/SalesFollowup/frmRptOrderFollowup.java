/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.SalesFollowup;

import EITLERP.ComboData;
import EITLERP.EITLComboModel;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableCellRenderer;
import EITLERP.EITLTableModel;
import EITLERP.FeltSales.PieceRegister.clsIncharge;
import EITLERP.FeltSales.ProductionReport.clsExcelExporter;
import EITLERP.JTextFieldHint;
import EITLERP.LOV;
import EITLERP.clsSales_Party;
import EITLERP.data;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Date;
import java.util.HashMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.TableColumn;

/**
 *
 * @author root
 */
public class frmRptOrderFollowup extends javax.swing.JApplet {

    /**
     * Initializes the applet frmRptOrderFollowup
     */
    private EITLTableModel DataModel_OFUP_Detail;
    private EITLTableModel DataModel_OFUP_Header;
    private clsExcelExporter exp_OFUP_Detail = new clsExcelExporter();
    private clsExcelExporter exp_OFUP_Header = new clsExcelExporter();

    @Override
    public void init() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(dim.width, dim.height);
        initComponents();

        lblTitle.setForeground(Color.WHITE);
        FormatGrid_OFUP_Detail();
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        file1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Table_OFUP_Detail = new javax.swing.JTable();
        Exp_OFUP_Detail = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        Table_OFUP_Header = new javax.swing.JTable();
        Exp_OFUP_Header = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 29));
        jPanel1.setLayout(null);

        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Order Followup Report");
        jPanel1.add(lblTitle);
        lblTitle.setBounds(2, 4, 410, 20);

        Table_OFUP_Detail.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        Table_OFUP_Detail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(Table_OFUP_Detail);

        Exp_OFUP_Detail.setText("Export to Excel");
        Exp_OFUP_Detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exp_OFUP_DetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(823, Short.MAX_VALUE)
                .addComponent(Exp_OFUP_Detail, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane7))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Exp_OFUP_Detail)
                .addGap(0, 419, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addGap(0, 30, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Detail", jPanel2);

        Table_OFUP_Header.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        Table_OFUP_Header.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(Table_OFUP_Header);

        Exp_OFUP_Header.setText("Export to Excel");
        Exp_OFUP_Header.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exp_OFUP_HeaderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Exp_OFUP_Header, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane8))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(Exp_OFUP_Header)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Summary", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Exp_OFUP_DetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exp_OFUP_DetailActionPerformed
        // TODO add your handling code here:
        File file = null;
        file1.setVisible(true);
        try {
            file1.setSelectedFile(new File("OrderFollowupDetail.xls"));
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }

            exp_OFUP_Detail.fillData(Table_OFUP_Detail, file, "OrderFollowupDetail");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file1.getSelectedFile().toString() + " successfully... ", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_Exp_OFUP_DetailActionPerformed

    private void Exp_OFUP_HeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exp_OFUP_HeaderActionPerformed
        // TODO add your handling code here:
        File file = null;
        file1.setVisible(true);
        try {
            file1.setSelectedFile(new File("OrderFollowupSummary.xls"));
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }

            exp_OFUP_Header.fillData(Table_OFUP_Header, file, "OrderFollowupSummary");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file1.getSelectedFile().toString() + " successfully... ", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_Exp_OFUP_HeaderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exp_OFUP_Detail;
    private javax.swing.JButton Exp_OFUP_Header;
    private javax.swing.JTable Table_OFUP_Detail;
    private javax.swing.JTable Table_OFUP_Header;
    private javax.swing.JFileChooser file1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private void FormatGrid_OFUP_Detail() {
        try {
            DataModel_OFUP_Detail = new EITLTableModel();
            Table_OFUP_Detail.removeAll();

            Table_OFUP_Detail.setModel(DataModel_OFUP_Detail);
            Table_OFUP_Detail.setAutoResizeMode(0);

            DataModel_OFUP_Detail.addColumn("SrNo"); //0
            DataModel_OFUP_Detail.addColumn("Status"); //1
            DataModel_OFUP_Detail.addColumn("UPN"); //2
            DataModel_OFUP_Detail.addColumn("Assign PieceNo"); //4
            DataModel_OFUP_Detail.addColumn("Ass.PieceOC"); //4
            DataModel_OFUP_Detail.addColumn("Ass.Category"); //4
            DataModel_OFUP_Detail.addColumn("Party Code"); //5
            DataModel_OFUP_Detail.addColumn("Party Name"); //6
            DataModel_OFUP_Detail.addColumn("CPRS Month");// 7
            DataModel_OFUP_Detail.addColumn("OPRS Month");//8
            DataModel_OFUP_Detail.addColumn("Follow Up Date");//14
            DataModel_OFUP_Detail.addColumn("Quarter");// 7
            DataModel_OFUP_Detail.addColumn("Prod.Category");// 7

            DataModel_OFUP_Detail.SetVariable(0, "SRNO");
            DataModel_OFUP_Detail.SetVariable(1, "ORDER_STATUS");
            DataModel_OFUP_Detail.SetVariable(2, "UPN");
            DataModel_OFUP_Detail.SetVariable(3, "ASSIGNED_PIECE_NO");
            DataModel_OFUP_Detail.SetVariable(4, "ASSIGNED_PIECE_OC");
            DataModel_OFUP_Detail.SetVariable(5, "ASSIGNED_CATEGORY");
            DataModel_OFUP_Detail.SetVariable(6, "PARTY_CODE");
            DataModel_OFUP_Detail.SetVariable(7, "PARTY_NAME");
            DataModel_OFUP_Detail.SetVariable(8, "CPRS_MONTH");
            DataModel_OFUP_Detail.SetVariable(9, "OPRS_MONTH");
            DataModel_OFUP_Detail.SetVariable(10, "FOLLOW_UP_DATE");//14
            DataModel_OFUP_Detail.SetVariable(11, "CPRS_QUARTER");//26
            DataModel_OFUP_Detail.SetVariable(12, "PRODUCT_CATEGORY");//26

            Table_OFUP_Detail.getColumnModel().getColumn(0).setMaxWidth(40);
            Table_OFUP_Detail.getColumnModel().getColumn(1).setMinWidth(80);
            Table_OFUP_Detail.getColumnModel().getColumn(2).setMinWidth(100);
            Table_OFUP_Detail.getColumnModel().getColumn(3).setMinWidth(100);
            Table_OFUP_Detail.getColumnModel().getColumn(4).setMinWidth(80);
            Table_OFUP_Detail.getColumnModel().getColumn(5).setMinWidth(80);
            Table_OFUP_Detail.getColumnModel().getColumn(6).setMinWidth(60);
            Table_OFUP_Detail.getColumnModel().getColumn(7).setMinWidth(120);
            Table_OFUP_Detail.getColumnModel().getColumn(8).setMinWidth(80);
            Table_OFUP_Detail.getColumnModel().getColumn(9).setMinWidth(80);
            Table_OFUP_Detail.getColumnModel().getColumn(10).setMinWidth(100);
            Table_OFUP_Detail.getColumnModel().getColumn(11).setMinWidth(60);
            Table_OFUP_Detail.getColumnModel().getColumn(12).setMinWidth(80);

            Table_OFUP_Detail.getTableHeader().setReorderingAllowed(false);

            DataModel_OFUP_Detail.SetReadOnly(0);
            DataModel_OFUP_Detail.SetReadOnly(1);
            DataModel_OFUP_Detail.SetReadOnly(2);
            DataModel_OFUP_Detail.SetReadOnly(3);
            DataModel_OFUP_Detail.SetReadOnly(4);
            DataModel_OFUP_Detail.SetReadOnly(5);
            DataModel_OFUP_Detail.SetReadOnly(6);
            DataModel_OFUP_Detail.SetReadOnly(7);
            DataModel_OFUP_Detail.SetReadOnly(8);
            DataModel_OFUP_Detail.SetReadOnly(9);
            DataModel_OFUP_Detail.SetReadOnly(10);
            DataModel_OFUP_Detail.SetReadOnly(11);
            DataModel_OFUP_Detail.SetReadOnly(12);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void DisplayData_OFUP_Detail(String dQry) {
        try {
            FormatGrid_OFUP_Detail();

            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            System.out.println("qry *** " + dQry);
            ResultSet resultSet = statement.executeQuery(dQry);
            int srNo = 0;

            while (resultSet.next()) {
                srNo++;
                int NewRow = srNo - 1;

                Object[] rowData = new Object[1];
                DataModel_OFUP_Detail.addRow(rowData);

                DataModel_OFUP_Detail.setValueByVariable("SRNO", srNo + "", NewRow);
                DataModel_OFUP_Detail.setValueByVariable("ORDER_STATUS", resultSet.getString("ORDER_STATUS"), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("UPN", resultSet.getString("UPN"), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("ASSIGNED_PIECE_NO", resultSet.getString("ASSIGNED_PIECE_NO"), NewRow);
                String pieceOC = data.getStringValueFromDB("SELECT COALESCE(PR_OC_MONTHYEAR,'') AS OC_MONTH FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='" + resultSet.getString("ASSIGNED_PIECE_NO") + "' AND COALESCE(PR_PIECE_NO,'')!='' ");
                DataModel_OFUP_Detail.setValueByVariable("ASSIGNED_PIECE_OC", pieceOC, NewRow);
                DataModel_OFUP_Detail.setValueByVariable("ASSIGNED_CATEGORY", resultSet.getString("ASSIGNED_CATEGORY"), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("PARTY_NAME", resultSet.getString("PARTY_NAME"), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("CPRS_MONTH", resultSet.getString("CPRS_MONTH"), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("OPRS_MONTH", resultSet.getString("OPRS_MONTH"), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("FOLLOW_UP_DATE", EITLERPGLOBAL.formatDate(resultSet.getString("FOLLOW_UP_DATE")), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("CPRS_QUARTER", resultSet.getString("CPRS_QUARTER"), NewRow);
                DataModel_OFUP_Detail.setValueByVariable("PRODUCT_CATEGORY", resultSet.getString("PRODUCT_CATEGORY"), NewRow);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void DisplayData_OFUP_Summary(String sQry) {
        ResultSet rs;
        DataModel_OFUP_Header = new EITLTableModel();
        Table_OFUP_Header.removeAll();
        Table_OFUP_Header.setModel(DataModel_OFUP_Header);
        Table_OFUP_Header.setAutoResizeMode(Table_OFUP_Header.AUTO_RESIZE_OFF);

        try {
            
//            System.out.println(sQry);
            rs = data.getResult(sQry);
            ResultSetMetaData rsInfo = rs.getMetaData();

            //Format the table from the resultset meta data
            int i = 1;
            for (i = 1; i <= rsInfo.getColumnCount(); i++) {
                DataModel_OFUP_Header.addColumn(rsInfo.getColumnName(i));
            }
            rs.first();
//            System.out.println("Row no." + rs.getRow());
            if (rs.getRow() > 0) {
                while (!rs.isAfterLast()) {
                    Object[] rowData = new Object[100];
                    for (int m = 1; m < i; m++) {
                        rowData[m - 1] = rs.getString(m);
                    }
                    DataModel_OFUP_Header.addRow(rowData);
                    rs.next();
                }
            }
            DataModel_OFUP_Header.TableReadOnly(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
