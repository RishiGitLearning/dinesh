/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */
package EITLERP.FeltSales.FeltCash09;

/**
 *
 * @author root
 */
import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;

import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;

public class frmFeltCash09Provision extends javax.swing.JApplet {

    //private EITLTableModel DataModel=new EITLTableModel();
    EITLComboModel IntervalComboModel;
    EITLTableModel DataModel;

    private ResultSet rsResultSet, rsResultSet1;
    private Connection Conn;
    private Statement Stmt;
    private clsVoucher objVoucher;
    //  private EITLComboModel cmbReceiptTypeModel;
    //  private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine = new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData = new TReportWriter.SimpleDataProvider.TTable();

    /**
     * Initializes the applet frmLegacyVouchers
     */
    public void init() {
        setSize(675, 500);
        initComponents();
        jButton6.setVisible(false);
        jButton5.setVisible(false);
        txtVoucherNo.setVisible(false);
        jTextField1.setVisible(false);
        txtDraftDate.setVisible(false);
        jLabel5.setVisible(false);
        lblTitle.setForeground(Color.WHITE);
        getDept();
        txtFromDate.setText("01/04/2019");
        generateIntervalCombo();
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgVoucher = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblBookName = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        cmbIntervalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Processcash = new javax.swing.JButton();
        txtInterval = new javax.swing.JTextField();
        txtVoucherNo = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDraftDate = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("FELT CASH 09 PROVISION CREDIT NOTE PROCESS & PRINTING FORM");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 666, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(5, 67, 85, 15);

        jLabel2.setText("Felt Cash 09 Provision Credit Note Process");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 350, 15);

        txtFromDate.setNextFocusableComponent(txtToDate);
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 66, 100, 19);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(263, 67, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 68, 60, 15);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDBLClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 190, 648, 200);

        lblBookName.setText(".");
        getContentPane().add(lblBookName);
        lblBookName.setBounds(360, 90, 260, 20);
        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(390, 70, 148, 14);

        jButton3.setText("3. Felt Cash 09 Detail  Draft");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(230, 150, 210, 25);

        jButton4.setText("2. Felt Cash 09 Summary");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(20, 150, 200, 25);

        cmbIntervalCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIntervalComboItemStateChanged(evt);
            }
        });
        cmbIntervalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntervalComboActionPerformed(evt);
            }
        });
        getContentPane().add(cmbIntervalCombo);
        cmbIntervalCombo.setBounds(120, 120, 390, 24);

        jLabel4.setText("Select Period : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 130, 130, 15);

        Processcash.setText("1. Process Felt Cash 09 Discount Provision");
        Processcash.setEnabled(false);
        Processcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesscashActionPerformed(evt);
            }
        });
        getContentPane().add(Processcash);
        Processcash.setBounds(10, 90, 340, 25);
        getContentPane().add(txtInterval);
        txtInterval.setBounds(550, 120, 90, 19);

        txtVoucherNo.setEnabled(false);
        txtVoucherNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVoucherNoActionPerformed(evt);
            }
        });
        txtVoucherNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVoucherNoFocusLost(evt);
            }
        });
        getContentPane().add(txtVoucherNo);
        txtVoucherNo.setBounds(240, 400, 140, 19);

        jButton5.setText("5. Credit Note Draft");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(20, 400, 200, 25);

        jTextField1.setText("jTextField1");
        getContentPane().add(jTextField1);
        jTextField1.setBounds(500, 400, 70, 19);

        jButton6.setText("4. Felt Cash 09 Detail");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(450, 150, 200, 25);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Draft Date :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 440, 85, 15);

        txtDraftDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDraftDateFocusLost(evt);
            }
        });
        getContentPane().add(txtDraftDate);
        txtDraftDate.setBounds(110, 440, 100, 19);
    }// </editor-fold>//GEN-END:initComponents

    private void txtDraftDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDraftDateFocusLost
        // TODO add your handling code here:
        if (txtDraftDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Draft Date");
            txtDraftDate.requestFocus();
        } else if (!EITLERPGLOBAL.isDate(txtDraftDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Draft Date in DD/MM/YYYY format.");
            txtDraftDate.setText("");
            txtDraftDate.requestFocus();
        }
    }//GEN-LAST:event_txtDraftDateFocusLost

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        // TODO add your handling code here:
        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter From Date");
            txtFromDate.requestFocus();
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if (!txtFromDate.getText().substring(0, 5).equals("01/04")) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid From Date.(i.e O1/04/YYYY)");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "','2019-04-01') FROM DUAL") < 0) {
            JOptionPane.showMessageDialog(null, "Please Enter From Date greater than or equal '01/04/2019'");
            txtFromDate.requestFocus();
            txtFromDate.setText("");
        } else {
            txtToDate.setText("");
            if (txtFromDate.getText().substring(0, 5).equals("01/04")) {
                String a = "31/03/";
                String b = getYear();
                String str = txtToDate.getText().concat(a).concat(b);
                txtToDate.setText(str);
                txtToDate.requestFocus();
            }
        }
    }//GEN-LAST:event_txtFromDateFocusLost

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        GenerateCreditNoteDetail();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        LCCreditDraftReport();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtVoucherNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVoucherNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVoucherNoActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        GenerateCreditNoteSummary();


    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtVoucherNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVoucherNoFocusLost

    }//GEN-LAST:event_txtVoucherNoFocusLost

    private void cmbIntervalComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIntervalComboItemStateChanged
        txtInterval.setText((String) cmbIntervalCombo.getSelectedItem());
    }//GEN-LAST:event_cmbIntervalComboItemStateChanged

    private void cmbIntervalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntervalComboActionPerformed
        //   if(EITLERPGLOBAL.getComboCode(cmbIntervalCombo)!=""){
        formatGrid();
        try {
            ResultSet rs = data.getResult("SELECT CND_SUB_ACCOUNT_CODE,CND_LC_OPENER,CND_DAYS,CND_INVOICE_NO,CND_LINK_NO,CND_INVOICE_DATE,CND_CHARGE_CODE,CND_INVOICE_AMOUNT,CND_PERCENT,CND_INTERVAL_CAPTION,CASE WHEN CND_LC_OPENER - CND_SUB_ACCOUNT_CODE = 0 THEN '' ELSE CONCAT('LC_OPENER','(',CND_LC_OPENER,')') END AS LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_EXT4,CND_EXT2,CND_EXT3 FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE  CND_YEAR_MON_ID =SUBSTRING('" + txtInterval.getText() + "',1,15) AND CND_TYPE='FELTCASHPRO' ORDER BY CND_SUB_ACCOUNT_CODE,CND_INVOICE_DATE,CND_INVOICE_NO");
            while (!rs.isAfterLast()) {
                Object[] rowData = new Object[13];

                rowData[0] = rs.getString("CND_MAIN_ACCOUNT_NAME");
                rowData[1] = rs.getString("CND_LC_OPENER");
                rowData[2] = rs.getString("CND_SUB_ACCOUNT_CODE");
                rowData[3] = rs.getString("CND_LINK_NO");
                rowData[4] = rs.getString("CND_INVOICE_DATE");
                rowData[5] = rs.getString("CND_EXT4");
                rowData[6] = rs.getString("CND_EXT2");
                rowData[7] = rs.getString("CND_EXT3");

                rowData[8] = rs.getString("CND_PERCENT");
                rowData[9] = rs.getString("CND_BOOK_CODE");
                rowData[10] = rs.getString("CND_DAYS");
                rowData[11] = rs.getString("CND_CREDIT_AMOUNT");
                rowData[12] = rs.getString("CND_LC_OPENER");

                DataModel.addRow(rowData);
                rs.next();
            }
            rs.close();

        } catch (SQLException sqe) {
            sqe.printStackTrace();

        }


    }//GEN-LAST:event_cmbIntervalComboActionPerformed

    private void ProcesscashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesscashActionPerformed
        if (!Validate()) {
            return;
        }
        //processLCQTRDiscount();
        processLCDiscount();
        // TODO add your handling code here:
    }//GEN-LAST:event_ProcesscashActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        DraftReport();     // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void mouseDBLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDBLClicked

    }//GEN-LAST:event_mouseDBLClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Processcash;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup bgVoucher;
    private javax.swing.JComboBox cmbIntervalCombo;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDraftDate;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInterval;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtVoucherNo;
    // End of variables declaration//GEN-END:variables

    public String getStrQuery(String SubAccountCode, String MainAccountCode) {

        String strQuery;
        if (!MainAccountCode.trim().equals("")) {
            strQuery = " AND CND_MAIN_ACCOUNT_CODE =" + MainAccountCode;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        } // }
        else {
            strQuery = " AND CND_MAIN_ACCOUNT_CODE =" + MainAccountCode;
        }

        return strQuery;
    }

    public String getStrQuery1(String SubAccountCode, String CndNo) {

        String strQuery;
        if (!CndNo.trim().equals("")) {
            strQuery = " AND CND_NO =" + CndNo;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        } // }
        else {
            strQuery = " AND CND_NO =" + CndNo;
        }

        return strQuery;
    }

    private boolean Validate() {
        //Form level validations

        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter from date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            return false;
        }

        if (txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter To date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid To Date in DD/MM/YYYY format.");
            return false;
        }

        return true;
    }

    private void generateIntervalCombo() {
        IntervalComboModel = new EITLComboModel();
        IntervalComboModel.removeAllElements();
        cmbIntervalCombo.setModel(IntervalComboModel);
        try {
            ComboData combodata = new ComboData();
            //combodata.Code=0;
            combodata.strCode = "";
            combodata.Text = "Select Date";

            IntervalComboModel.addElement(combodata);
            ResultSet rs = data.getResult("SELECT DISTINCT CND_YEAR_MON_ID,CND_INTERVAL_CAPTION FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='FELTCASHPRO' ORDER BY CND_YEAR_MON_ID DESC ");
            while (!rs.isAfterLast()) {
                combodata = new ComboData();
                combodata.strCode = rs.getString("CND_YEAR_MON_ID");
                // combodata.strCode=rs.getString("SCHEME_NAME");
                //  combodata.Text=rs.getString("CND_INTERVAL_CAPTION")+"-"+rs.getString("CND_YEAR_MON_ID");
                combodata.Text = rs.getString("CND_YEAR_MON_ID") + " : " + rs.getString("CND_INTERVAL_CAPTION");

                IntervalComboModel.addElement(combodata);
                rs.next();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void processLCDiscount() {

        String frmdt = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
        String frmyr = txtFromDate.getText().trim().substring(6, 10);
        String fyr = frmyr.substring(2, 4);
        System.out.println(frmdt);
        System.out.println(frmyr);
        System.out.println(fyr);
        String todt = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
        String toyr = txtToDate.getText().trim().substring(6, 10);
        String tyr = toyr.substring(2, 4);
        System.out.println(todt);
        System.out.println(toyr);
        System.out.println(tyr);

        try {
            Connection conn = data.getConn();
            Statement stmt = conn.createStatement();

            stmt.execute("USE PRODUCTION");

            stmt.execute("TRUNCATE TABLE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION");

            stmt.execute("INSERT INTO PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SELECT A.VOUCHER_NO,VOUCHER_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,EFFECT,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,AMOUNT,GRN_NO,GRN_DATE, '0000-00-00',A.LINK_NO,'0000-00-00','0000-00-00','0000-00-00',MATCHED_DATE,MATCHED,  '','','',    '','','',    '','','',    '','','',    '','','',    '','','',    '','','',  BOOK_CODE,'',0,0,0,0,0,SUB_ACCOUNT_CODE,'','','','','','','','' FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.CANCELLED =0 AND B.APPROVED =1 AND VOUCHER_DATE >='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "'  AND  VOUCHER_DATE <='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'SJ' AND MAIN_ACCOUNT_CODE =210010 LIMIT 10000000000");

            stmt.execute("UPDATE PRODUCTION.FELT_CREDIT_NOTE_PARTY_EXCEPTION, PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_VOUCHER_NO ='DELETED' WHERE  EXCP_TYPE ='FELTCASH' AND LCN_INVOICE_DATE  >= EXCP_FROM_DATE AND LCN_INVOICE_DATE <= EXCP_TO_DATE AND EXCP_PARTY_CODE = LCN_SUB_ACCOUNT_CODE");

            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE LCN_VOUCHER_NO ='DELETED'");

            //-------------------------------UNADJ----------------------------------------------;
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT INVOICE_NO,INVOICE_DATE,PARTY_CODE,SUM(TOTAL_DISC_AMT) FROM PRODUCTION.FELT_UNADJUSTED_TRN_D A,PRODUCTION.FELT_UNADJUSTED_TRN_H B WHERE A.UNADJ_ID = B.UNADJ_ID AND B.CANCELLED =0 AND B.APPROVED =1 AND INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND INVOICE_NO !='' GROUP BY INVOICE_NO,INVOICE_DATE,PARTY_CODE");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION,TEMP_DATABASE.TM80  SET LCN_UNADJ = COL04 WHERE COL01 = LCN_INVOICE_NO AND COL02 =LCN_INVOICE_DATE AND COL03 = LCN_SUB_ACCOUNT_CODE");

            //-------------------------------OEM----------------------------------------------
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT CN_INVOICE_NO,LEFT(CN_INVOICE_DATE,10),CN_PARTY_CODE,SUM(CN_OEM_VALUE) FROM PRODUCTION.FELT_CN_TEMP_DETAIL A,PRODUCTION.FELT_CN_TEMP_HEADER B WHERE A.CN_ID = B.CN_ID AND A.CN_ID LIKE ('OM%') AND B.CANCELED =0 AND B.APPROVED =1 AND CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND CN_INVOICE_NO !='' GROUP BY CN_INVOICE_NO,CN_INVOICE_DATE,CN_PARTY_CODE");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION,TEMP_DATABASE.TM80  SET LCN_OEM = COL04 WHERE COL01 = LCN_INVOICE_NO AND COL02 =LCN_INVOICE_DATE AND COL03 = LCN_SUB_ACCOUNT_CODE");

            //-------------------------------YEAR END----------------------------------------------
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT INVOICE_NO,INVOICE_DATE,PARTY_CODE,ROUND(BAS_AMT*FORM2_YEAR_PERCENT/100,2) AS DISC_AMT FROM PRODUCTION.FELT_SAL_INVOICE_HEADER A,PRODUCTION.FELT_YEAR_END_DISCOUNT_DETAIL_FORM2 B,PRODUCTION.FELT_YEAR_END_DISCOUNT_HEADER_FORM2 C WHERE A.PARTY_CODE = B.FORM2_YEAR_END_PARTY_CODE AND B.FORM2_YEAR_END_ID=C.FORM2_YEAR_END_ID AND A.PRODUCT_CODE = B.FORM2_YEAR_END_PRODUCT_CODE AND C.CANCELED =0 AND C.APPROVED =1 AND INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND B.FORM2_FROM_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND B.FORM2_TO_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND B.FORM2_EFFECTIVE_FROM>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND (B.FORM2_EFFECTIVE_TO <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' OR B.FORM2_EFFECTIVE_TO IS NULL) GROUP BY INVOICE_NO,INVOICE_DATE,PARTY_CODE");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION,TEMP_DATABASE.TM80  SET LCN_YEAR_END = COL04 WHERE COL01 = LCN_INVOICE_NO AND COL02 =LCN_INVOICE_DATE AND COL03 = LCN_SUB_ACCOUNT_CODE");

            //-------------------------------INSURANCE----------------------------------------------
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT CN_INVOICE_NO,LEFT(CN_INVOICE_DATE,10),CN_PARTY_CODE,SUM(INSURANCE_CLAIM_AMT) FROM PRODUCTION.FELT_CN_TEMP_DETAIL A,PRODUCTION.FELT_CN_TEMP_HEADER B WHERE A.CN_ID = B.CN_ID AND A.CN_ID LIKE ('IC%') AND B.CANCELED =0 AND B.APPROVED =1 AND CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND CN_INVOICE_NO !='' GROUP BY CN_INVOICE_NO,CN_INVOICE_DATE,CN_PARTY_CODE");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION,TEMP_DATABASE.TM80  SET LCN_INS_CLAIM = COL04 WHERE COL01 = LCN_INVOICE_NO AND COL02 =LCN_INVOICE_DATE AND COL03 = LCN_SUB_ACCOUNT_CODE");

            //-------------------------------COMPENSATION----------------------------------------------
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT CN_INVOICE_NO,LEFT(CN_INVOICE_DATE,10),CN_PARTY_CODE,SUM(COMPENSATION_AMT) FROM PRODUCTION.FELT_CN_TEMP_DETAIL A,PRODUCTION.FELT_CN_TEMP_HEADER B WHERE A.CN_ID = B.CN_ID AND A.CN_ID LIKE ('CM%') AND B.CANCELED =0 AND B.APPROVED =1 AND CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND CN_INVOICE_NO !='' GROUP BY CN_INVOICE_NO,CN_INVOICE_DATE,CN_PARTY_CODE");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION,TEMP_DATABASE.TM80  SET LCN_COMP = COL04 WHERE COL01 = LCN_INVOICE_NO AND COL02 =LCN_INVOICE_DATE AND COL03 = LCN_SUB_ACCOUNT_CODE");

            //-------------------------------GOODS RETURN----------------------------------------------
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT CN_INVOICE_NO,LEFT(CN_INVOICE_DATE,10),CN_PARTY_CODE,SUM(GOODS_RETURN_AMT) FROM PRODUCTION.FELT_CN_TEMP_DETAIL A,PRODUCTION.FELT_CN_TEMP_HEADER B WHERE A.CN_ID = B.CN_ID AND A.CN_ID LIKE ('GR%') AND B.CANCELED =0 AND B.APPROVED =1 AND CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND CN_INVOICE_NO !='' GROUP BY CN_INVOICE_NO,CN_INVOICE_DATE,CN_PARTY_CODE");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION,TEMP_DATABASE.TM80  SET LCN_GOODS_RETURN = COL04 WHERE COL01 = LCN_INVOICE_NO AND COL02 =LCN_INVOICE_DATE AND COL03 = LCN_SUB_ACCOUNT_CODE");

            //------------------------------------------------------------------------
            //--------------------------------EXTRA ADDITIONS----------------------------------
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET EXT12=LCN_UNADJ+LCN_OEM+LCN_INS_CLAIM+LCN_COMP+LCN_GOODS_RETURN+LCN_YEAR_END");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET EXT13=LCN_AMOUNT-EXT12");

            //---------------------------------------------------------------------------------------------------
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION ,PRODUCTION.FELT_GROUP_MASTER_DETAIL SET LCN_LC_OPENER = GROUP_CODE WHERE LCN_SUB_ACCOUNT_CODE = PARTY_CODE");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION ,DINESHMILLS.D_SAL_INVOICE_HEADER SET LCN_CHARGE_CODE = PAYMENT_TERM_CODE WHERE LCN_INVOICE_NO  = INVOICE_NO AND  LCN_INVOICE_DATE  = INVOICE_DATE");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION ,DINESHMILLS.D_SAL_PARTY_MASTER SET EXT4 = CHARGE_CODE WHERE PARTY_CODE = LCN_SUB_ACCOUNT_CODE");

            //05-06-2020
            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE EXT4 IN (7,8)");

            //------------SET F6 AND D6 CREDIT NOTE DATA---------------
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A ,(SELECT CN_INVOICE_NO FROM PRODUCTION.FELT_CN_TEMP_DETAIL D,PRODUCTION.FELT_CN_TEMP_HEADER H WHERE D.CN_ID = H.CN_ID AND H.CN_ID LIKE 'F6%' AND H.CN_FROM_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND H.CN_TO_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND D.CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND H.APPROVED =1 AND H.CANCELED =0) AS F6 SET A.EXT2 = 'F6'  WHERE CN_INVOICE_NO = LCN_INVOICE_NO");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A ,(SELECT CN_INVOICE_NO FROM PRODUCTION.FELT_CN_TEMP_DETAIL D,PRODUCTION.FELT_CN_TEMP_HEADER H WHERE D.CN_ID = H.CN_ID AND H.CN_ID LIKE 'DF%' AND H.CN_FROM_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND H.CN_TO_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND D.CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND H.APPROVED =1 AND H.CANCELED =0) AS F6 SET A.EXT2 = 'D6'  WHERE CN_INVOICE_NO = LCN_INVOICE_NO");
            
            //25-05-2020
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A ,(SELECT CN_INVOICE_NO FROM PRODUCTION.FELT_CN_TEMP_DETAIL D,PRODUCTION.FELT_CN_TEMP_HEADER H WHERE D.CN_ID = H.CN_ID AND H.CN_ID LIKE 'DH%' AND H.CN_FROM_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND H.CN_TO_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND D.CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND H.APPROVED =1 AND H.CANCELED =0) AS F6 SET A.EXT2 = 'DH'  WHERE CN_INVOICE_NO = LCN_INVOICE_NO");
//            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A , PRODUCTION.FELT_SAL_INVOICE_HEADER B SET A.EXT2 = 'F6' WHERE A.LCN_INVOICE_NO=B.INVOICE_NO AND A.LCN_INVOICE_DATE=B.INVOICE_DATE AND B.CHARGE_CODE!=B.PARTY_CHARGE_CODE AND B.CHARGE_CODE='01' AND B.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND B.INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND B.CANCELLED=0 AND B.APPROVED=1 AND COALESCE(A.EXT2,'') NOT IN ('F6','D6','DH') ");
            
            //12-04-2021
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A ,(SELECT CN_INVOICE_NO FROM PRODUCTION.FELT_CN_TEMP_DETAIL D,PRODUCTION.FELT_CN_TEMP_HEADER H WHERE D.CN_ID = H.CN_ID AND H.CN_ID LIKE 'SP%' AND H.CN_FROM_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND H.CN_TO_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND D.CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND H.APPROVED =1 AND H.CANCELED =0) AS F6 SET A.EXT2 = 'SP'  WHERE CN_INVOICE_NO = LCN_INVOICE_NO");
            ////
            
            //12-04-2021
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A ,(SELECT CN_INVOICE_NO FROM PRODUCTION.FELT_CN_TEMP_DETAIL D,PRODUCTION.FELT_CN_TEMP_HEADER H WHERE D.CN_ID = H.CN_ID AND H.CN_ID LIKE 'SDF%' AND H.CN_FROM_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND H.CN_TO_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.CN_INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND D.CN_INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND H.APPROVED =1 AND H.CANCELED =0) AS F6 SET A.EXT2 = 'SDF'  WHERE CN_INVOICE_NO = LCN_INVOICE_NO");
//            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE EXT2 IN ('SDF')");            
            ////

            //04-06-2020
//            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A , PRODUCTION.FELT_SAL_INVOICE_HEADER B SET A.EXT2 = 'DH' WHERE A.LCN_INVOICE_NO=B.INVOICE_NO AND A.LCN_INVOICE_DATE=B.INVOICE_DATE AND B.CHARGE_CODE!=B.PARTY_CHARGE_CODE AND B.CHARGE_CODE='01' AND B.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND B.INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND B.CANCELLED=0 AND B.APPROVED=1 AND COALESCE(A.EXT2,'') NOT IN ('F6','D6','DH') ");
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A , PRODUCTION.FELT_SAL_INVOICE_HEADER B SET A.EXT2 = 'DH' WHERE A.LCN_INVOICE_NO=B.INVOICE_NO AND A.LCN_INVOICE_DATE=B.INVOICE_DATE AND B.CHARGE_CODE!=B.PARTY_CHARGE_CODE AND B.CHARGE_CODE='01' AND MONTH(B.INVOICE_DATE)=2 AND YEAR(B.INVOICE_DATE)=2020 AND B.CANCELLED=0 AND B.APPROVED=1 AND COALESCE(A.EXT2,'') NOT IN ('F6','D6','DH') ");
            

////stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A , PRODUCTION.FELT_SAL_INVOICE_HEADER B SET A.EXT2 = 'F6' WHERE A.LCN_INVOICE_NO=B.INVOICE_NO AND A.LCN_INVOICE_DATE=B.INVOICE_DATE AND B.CHARGE_CODE!=B.PARTY_CHARGE_CODE AND B.CHARGE_CODE='01' AND B.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND B.INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND B.CANCELLED=0 AND B.APPROVED=1 AND COALESCE(A.EXT2,'') NOT IN ('F6','D6') ");
            //END of 25-05-2020
            
            //-------------------------------------------------------------------------------
            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE LCN_CHARGE_CODE =''");

//            //25-05-2020
//            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE SUBSTRING(LCN_CHARGE_CODE,1,1) NOT IN ('9','7') AND EXT2 NOT IN ('F6','D6','DH')");
//            ////stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE SUBSTRING(LCN_CHARGE_CODE,1,1) NOT IN ('9','7') AND EXT2 NOT IN ('F6','D6')");
            
            //29-04-2021
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A ,(SELECT INVOICE_NO FROM PRODUCTION.FELT_F6_REPORT_DETAIL A WHERE COALESCE(F6,'')='' AND SUBSTRING(PAYMENT_TERM,1,1)='1' AND INVOICE_DATE>= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND ROUND(AMOUNT,2)>=ROUND(TOTAL_NET_AMOUNT,2)) AS F6 SET A.EXT2 = 'PU'  WHERE INVOICE_NO = LCN_INVOICE_NO");
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A ,(SELECT INVOICE_NO FROM PRODUCTION.FELT_F6_REPORT_DETAIL A WHERE COALESCE(F6,'')='' AND SUBSTRING(PAYMENT_TERM,1,1)='1' AND INVOICE_DATE>= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND ROUND(AMOUNT,2)<ROUND(TOTAL_NET_AMOUNT,2)) AS F6 SET A.EXT2 = 'UP'  WHERE INVOICE_NO = LCN_INVOICE_NO");
            ////
            
            //29-04-2021
            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE SUBSTRING(LCN_CHARGE_CODE,1,1) NOT IN ('9','7') AND EXT2 NOT IN ('F6','D6','DH','SP','SDF','PU','UP')");
            ////stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE SUBSTRING(LCN_CHARGE_CODE,1,1) NOT IN ('9','7') AND EXT2 NOT IN ('F6','D6')");

            //-------------------------------F6 ----------------------------------------------
            // -------------- F6 GR ELIGIBLE LIST -----------------
//28-04-2022            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE CONCAT(LCN_INVOICE_NO,SUBSTRING(LCN_INVOICE_DATE,1,10)) IN ( SELECT CONCAT(INVOICE_NO,INVOICE_DATE) FROM PRODUCTION.FELT_SALES_RETURNS_HEADER H, PRODUCTION.FELT_SALES_RETURNS_DETAIL D WHERE H.DOC_NO=D.DOC_NO AND H.APPROVED=1 AND H.CANCELED=0 AND D.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND D.INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' )");

//28-04-2021            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE CONCAT(LCN_INVOICE_NO,SUBSTRING(LCN_INVOICE_DATE,1,10)) IN ( SELECT CONCAT(I.INVOICE_NO,I.INVOICE_DATE) FROM PRODUCTION.FELT_SALES_RETURNS_HEADER H, PRODUCTION.FELT_SALES_RETURNS_DETAIL D, PRODUCTION.FELT_SAL_INVOICE_HEADER I WHERE H.DOC_NO=D.DOC_NO AND H.APPROVED=1 AND H.CANCELED=0 AND I.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND I.INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.PARTY_CODE=I.PARTY_CODE AND D.NEW_PIECE_NO=I.PIECE_NO AND I.APPROVED=1 AND I.CANCELLED=0 AND D.RETURN_CATEGORY='F6' AND I.PIECE_NO NOT IN (SELECT INVOICE_PIECE_NO FROM PRODUCTION.FELT_F6GR_ELIGIBLE_INV_LIST WHERE CANCELED=0) )");
            
            //ADDED ON 28-04-2022 AS PER POLICY
//            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE CONCAT(LCN_INVOICE_NO,SUBSTRING(LCN_INVOICE_DATE,1,10)) IN ( SELECT CONCAT(I.INVOICE_NO,I.INVOICE_DATE) FROM PRODUCTION.FELT_SALES_RETURNS_HEADER H, PRODUCTION.FELT_SALES_RETURNS_DETAIL D, PRODUCTION.FELT_SAL_INVOICE_HEADER I WHERE H.DOC_NO=D.DOC_NO AND H.APPROVED=1 AND H.CANCELED=0 AND I.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND I.INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.PARTY_CODE=I.PARTY_CODE AND D.NEW_PIECE_NO=I.PIECE_NO AND I.APPROVED=1 AND I.CANCELLED=0 AND D.RETURN_CATEGORY IN ('F6','GR') AND I.PIECE_NO NOT IN (SELECT INVOICE_PIECE_NO FROM PRODUCTION.FELT_F6GR_ELIGIBLE_INV_LIST WHERE CANCELED=0) )");
            //29-04-2022 AS PER POLICY
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION A ,(SELECT I.INVOICE_NO FROM PRODUCTION.FELT_SALES_RETURNS_HEADER H, PRODUCTION.FELT_SALES_RETURNS_DETAIL D, PRODUCTION.FELT_SAL_INVOICE_HEADER I WHERE H.DOC_NO=D.DOC_NO AND H.APPROVED=1 AND H.CANCELED=0 AND I.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND I.INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.PARTY_CODE=I.PARTY_CODE AND D.NEW_PIECE_NO=I.PIECE_NO AND I.APPROVED=1 AND I.CANCELLED=0 AND D.RETURN_CATEGORY IN ('F6','GR') AND I.PIECE_NO NOT IN (SELECT INVOICE_PIECE_NO FROM PRODUCTION.FELT_F6GR_ELIGIBLE_INV_LIST WHERE CANCELED=0)) AS F6 SET A.EXT2 = 'GR'  WHERE INVOICE_NO = LCN_INVOICE_NO");


            //-------------------------------------------------------------------------------
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM82");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM82 SELECT INVOICE_NO,SUB_ACCOUNT_CODE,VOUCHER_DATE,VALUE_DATE,A.VOUCHER_NO,LEGACY_NO,'',INVOICE_DATE,'','','','' FROM FINANCE.D_FIN_VOUCHER_DETAIL A, FINANCE.D_FIN_VOUCHER_HEADER B WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.CANCELLED =0 AND B.APPROVED =1  AND VOUCHER_DATE >='2014-01-01'  AND INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'RC' AND MAIN_ACCOUNT_CODE =210010  AND A.INVOICE_NO !='' LIMIT 1000000000000 UNION ALL SELECT INVOICE_NO,SUB_ACCOUNT_CODE,DOC_DATE,VOUCHER_DATE,VOUCHER_NO,A.DOC_NO,'',INVOICE_DATE,'','','','' FROM FINANCE.D_FIN_DR_ADJ_DETAIL A,FINANCE.D_FIN_DR_ADJ_HEADER B WHERE A.DOC_NO = B.DOC_NO  AND B.CANCELLED =0 AND B.APPROVED =1 AND DOC_DATE >='2014-01-01'  AND MAIN_ACCOUNT_CODE =210010 AND SUBSTRING(A.VOUCHER_NO,1,2) IN ('RC','CN','JV','CR')  AND INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' LIMIT 100000000000 UNION ALL SELECT INVOICE_NO,SUB_ACCOUNT_CODE,DOC_DATE,VOUCHER_DATE,VOUCHER_NO,A.DOC_NO,'',INVOICE_DATE,'','','','' FROM FINANCE.D_FIN_DR_ADJ_DETAIL A,FINANCE.D_FIN_DR_ADJ_HEADER B  WHERE A.DOC_NO = B.DOC_NO  AND B.CANCELLED =0 AND B.APPROVED =1 AND DOC_DATE >='2014-01-01'  AND MAIN_ACCOUNT_CODE =210010 AND SUBSTRING(A.VOUCHER_NO,1,1) IN ('M')  AND INVOICE_DATE >= '" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND INVOICE_DATE <= '" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' LIMIT 100000000000");

            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT COL01,COUNT(*),MAX(COL04),COL08 FROM  TEMP_DATABASE.TM82 GROUP BY COL01,COL08 LIMIT 100000000");

            stmt.execute("UPDATE TEMP_DATABASE.TM80 A ,TEMP_DATABASE.TM82 B  SET B.COL07 =1  WHERE A.COL01 = B.COL01 AND A.COL03 = B.COL04 AND B.COL08 =A.COL04");

            stmt.execute("DELETE FROM  TEMP_DATABASE.TM82 WHERE COL07 =''");

            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80 SELECT COL01,COUNT(*),MAX(COL05), COL08 FROM  TEMP_DATABASE.TM82 GROUP BY COL01,COL08 LIMIT 100000000");

            stmt.execute("UPDATE TEMP_DATABASE.TM80 A ,TEMP_DATABASE.TM82 B  SET B.COL07 =2 WHERE A.COL01 = B.COL01 AND A.COL03 = B.COL05 AND B.COL08 = A.COL04");

            stmt.execute("DELETE FROM  TEMP_DATABASE.TM82 WHERE COL07 =1");

            stmt.execute("UPDATE TEMP_DATABASE.TM82,PRODUCTION.TMP_LC_CREDITNOTE_PROVISION  SET LCN_RC_VOUCHER = COL05, LCN_RC_VALUE_DATE = COL04,EXT1=COL06,LCN_RC_VOU_DATE= COL03 WHERE COL01 = LCN_INVOICE_NO AND COL08= LCN_INVOICE_DATE");

            //LCN DETAIL UPDATION
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_DAY = EXTRACT(DAY FROM LCN_VOUCHER_DATE), LCN_MONTH =EXTRACT(MONTH FROM LCN_VOUCHER_DATE), LCN_YEAR = EXTRACT(YEAR FROM LCN_VOUCHER_DATE)");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_DAY_DIFF  = DATEDIFF(LCN_RC_VALUE_DATE,LCN_INVOICE_DATE) WHERE LCN_RC_VALUE_DATE != '0000-00-00'");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_RC_VOUCHER_1  = LCN_AMOUNT - EXT12");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_INVOICE_AMOUNT =LCN_AMOUNT");

//            //25-05-2020
//            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_AMOUNT =0  WHERE EXT2 NOT IN ('F6','D6','DH') AND SUBSTRING(LCN_CHARGE_CODE,1,1) NOT IN (9,7)");
//            ////stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_AMOUNT =0  WHERE EXT2 NOT IN ('F6','D6') AND SUBSTRING(LCN_CHARGE_CODE,1,1) NOT IN (9,7)");
            
            //12-04-2021
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_AMOUNT =0  WHERE EXT2 NOT IN ('F6','D6','DH','SP','SDF') AND SUBSTRING(LCN_CHARGE_CODE,1,1) NOT IN (9,7)");
            ////stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_AMOUNT =0  WHERE EXT2 NOT IN ('F6','D6') AND SUBSTRING(LCN_CHARGE_CODE,1,1) NOT IN (9,7)");

            //----------------------------------------------------------------------------------------------------------------------
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM80");

            stmt.execute("INSERT INTO TEMP_DATABASE.TM80 SELECT LCN_LC_OPENER,SUM(EXT13),'','' FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION GROUP BY LCN_LC_OPENER");

            stmt.execute("UPDATE TEMP_DATABASE.TM80 SET COL03 = CASE WHEN COL02 < 300000 THEN 0 WHEN COL02 >= 300000 AND COL02 < 500000 THEN 2.5  WHEN COL02 >= 500000 AND COL02 < 1000000 THEN 3.0  WHEN COL02 >= 1000000 AND COL02 < 2500000 THEN 3.5  WHEN COL02 >= 2500000 AND COL02 < 5000000 THEN 4.5 WHEN COL02 >= 5000000 AND COL02 < 10000000 THEN 5.0 WHEN COL02 >= 10000000  THEN 5.5 END");

            stmt.execute("UPDATE TEMP_DATABASE.TM80,PRODUCTION.TMP_LC_CREDITNOTE_PROVISION  SET LCN_PER = COL03  WHERE COL01 = LCN_LC_OPENER");

            //27-04-2021
            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE EXT2 IN ('SDF')");            
            ////
            
            //29-04-2021
            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE CONCAT(LCN_INVOICE_NO,SUBSTRING(LCN_INVOICE_DATE,1,10)) IN ( SELECT CONCAT(I.INVOICE_NO,I.INVOICE_DATE) FROM PRODUCTION.FELT_SALES_RETURNS_HEADER H, PRODUCTION.FELT_SALES_RETURNS_DETAIL D, PRODUCTION.FELT_SAL_INVOICE_HEADER I WHERE H.DOC_NO=D.DOC_NO AND H.APPROVED=1 AND H.CANCELED=0 AND I.INVOICE_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "' AND I.INVOICE_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "' AND D.PARTY_CODE=I.PARTY_CODE AND D.NEW_PIECE_NO=I.PIECE_NO AND I.APPROVED=1 AND I.CANCELLED=0 AND D.RETURN_CATEGORY='F6' AND I.PIECE_NO NOT IN (SELECT INVOICE_PIECE_NO FROM PRODUCTION.FELT_F6GR_ELIGIBLE_INV_LIST WHERE CANCELED=0) )");
            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE EXT2 IN ('PU','GR')");            
            ////

            //1819 POLICY AMENDMENT
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET EXT3 = LCN_PER ");
            stmt.execute("UPDATE PRODUCTION.FELT_CREDIT_NOTE_PARTY_DISC_DEDUCTION,PRODUCTION.TMP_LC_CREDITNOTE_PROVISION  SET LCN_PER = (LCN_PER - DISC_DEDUCTION)  WHERE DISC_PARTY_CODE = LCN_SUB_ACCOUNT_CODE AND DISC_TYPE='FELTCASH' AND LCN_INVOICE_DATE  >= DISC_FROM_DATE AND LCN_INVOICE_DATE <= DISC_TO_DATE ");

            //1920 POLICY AMENDMENT 30-05-2020
            
            stmt.execute("UPDATE PRODUCTION.FELT_CREDIT_NOTE_PARTY_DISC_DEDUCTION_PERCENT,PRODUCTION.TMP_LC_CREDITNOTE_PROVISION  SET LCN_PER = ROUND((LCN_PER * DISC_DEDUCTION_PERCENT)/100,2)  WHERE DISC_PARTY_CODE = LCN_SUB_ACCOUNT_CODE AND DISC_TYPE='FELT_CASH' AND LCN_INVOICE_DATE  >= DISC_FROM_DATE AND LCN_INVOICE_DATE <= DISC_TO_DATE ");

//            //F6 8-15 DAYS AMENDMENT
//            
//            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_PER = ROUND(LCN_PER/2,2),EXT2='H6' WHERE LCN_DAY_DIFF>=8 AND LCN_DAY_DIFF<=15 AND EXT2='F6' ");
//            
//            //----------------------
            //F6 31-61 DAYS AMENDMENT AS PER NEW POLICY w.e.f 01/07/2019 till then 7-15 DAYS POLICY till 30/06/2019
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_PER = ROUND(LCN_PER/2,2),EXT2='H6' WHERE LCN_DAY_DIFF>=8 AND LCN_DAY_DIFF<=15 AND EXT2='F6' AND LCN_INVOICE_DATE<='2019-06-30' ");

//            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_PER = ROUND(LCN_PER/2,2),EXT2='H6' WHERE LCN_DAY_DIFF>=32 AND LCN_DAY_DIFF<=61 AND EXT2='F6' AND LCN_INVOICE_DATE>='2019-07-01' ");
            //AS PER POLICY REVISED FOR MONTH OF 01 AND 02 OF 2020
            
//            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_PER = ROUND(LCN_PER/2,2),EXT2='H6' WHERE LCN_DAY_DIFF>=32 AND LCN_DAY_DIFF<=61 AND EXT2='F6' AND LCN_INVOICE_DATE>='2019-07-01' AND LCN_INVOICE_DATE<='2020-03-31' AND EXTRACT(MONTH FROM LCN_INVOICE_DATE) NOT IN (1,2) AND EXTRACT(YEAR FROM LCN_INVOICE_DATE) NOT IN (2020)");
//
//            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_PER = ROUND(LCN_PER/2,2),EXT2='H6' WHERE LCN_RC_VALUE_DATE>='2020-03-03' AND LCN_RC_VALUE_DATE<='2020-05-15' AND EXT2='F6' AND EXTRACT(MONTH FROM LCN_INVOICE_DATE) IN (1) AND EXTRACT(YEAR FROM LCN_INVOICE_DATE) IN (2020)");
//
//            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_PER = ROUND(LCN_PER/2,2),EXT2='H6' WHERE LCN_RC_VALUE_DATE>='2020-05-16' AND LCN_RC_VALUE_DATE<='2020-06-15' AND EXT2='F6' AND EXTRACT(MONTH FROM LCN_INVOICE_DATE) IN (2) AND EXTRACT(YEAR FROM LCN_INVOICE_DATE) IN (2020)");

            //25-05-2020
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_PER = ROUND(LCN_PER/2,2) WHERE EXT2='DH' ");
            ////

            //12-04-2021
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_PER = ROUND(LCN_PER-1,2) WHERE EXT2='SP' ");
            ////
            
            //----------------------
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_CREDIT_AMOUNT = ROUND(((LCN_PER/100)*EXT13)+.001,0)");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_BANK_TR_CODE = SUBSTRING(LCN_RC_VOUCHER,5,2)");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_BANK_TR_CODE = 89 WHERE SUBSTRING(LCN_RC_VOUCHER,1,2) ='CN'");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_INTERVAL_CAPTION = CONCAT('FROM ','" + txtFromDate.getText().trim() + "',' TO ','" + txtToDate.getText().trim() + "')");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_INTERVAL = CONCAT('" + toyr + "','-','" + frmyr + "')");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_NO = CONCAT(LCN_SUB_ACCOUNT_CODE,LCN_YEAR_MON_ID)");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION SET LCN_LINK_NO = CONCAT(RIGHT(LCN_INVOICE_NO,4),'/',LCN_INTERVAL)");

            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTE_PROVISION,DINESHMILLS.D_SAL_PARTY_MASTER SET LCN_LC_NAME = SUBSTRING(PARTY_NAME,1,18)  WHERE PARTY_CODE = LCN_SUB_ACCOUNT_CODE");

            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE LCN_PER =0");
            
            //12-04-2021
            stmt.execute("DELETE FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION WHERE LCN_PER <0");
            ////

            //SELECT *  FROM D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = 'FELTCASH1516' LIMIT 1000000;
            //stmt.execute("DELETE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = 'FELTCASH1516'");
            stmt.execute("DELETE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')");

            //stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT,CND_BOOK_CODE,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_CREDIT_AMOUNT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_EXT2,CND_EXT3,CND_EXT4,CND_EXT5,CND_EXT6,CND_EXT7,CND_EXT8,CND_EXT9,CND_EXT10) SELECT 1,LCN_NO,'FELTCASH',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,LCN_INTERVAL,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_AMOUNT,LCN_CHARGE_CODE,LCN_PER,LCN_BANK_TR_CODE,LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,LCN_CREDIT_AMOUNT,EXT1,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,EXT12,EXT13,LCN_INVOICE_AMOUNT,LCN_UNADJ,LCN_OEM,LCN_INS_CLAIM,LCN_COMP,LCN_GOODS_RETURN,LCN_YEAR_END FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION  WHERE LCN_YEAR_MON_ID = 'FELTCASH1516' ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_INVOICE_NO LIMIT 10000000");
//            stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT,CND_BOOK_CODE,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_CREDIT_AMOUNT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_EXT2,CND_EXT3,CND_EXT4,CND_EXT5,CND_EXT6,CND_EXT7,CND_EXT8,CND_EXT9,CND_EXT10,CND_CATG) SELECT 1,LCN_NO,'FELTCASH',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,LCN_INTERVAL,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_INVOICE_AMOUNT,LCN_CHARGE_CODE,LCN_PER,LCN_BANK_TR_CODE,LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,LCN_CREDIT_AMOUNT,EXT1,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,EXT12,EXT13,LCN_INVOICE_AMOUNT,LCN_UNADJ,LCN_OEM,LCN_INS_CLAIM,LCN_COMP,LCN_GOODS_RETURN,LCN_YEAR_END,EXT2 FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION  WHERE LCN_YEAR_MON_ID = CONCAT('FELTCASH','"+fyr+"','"+tyr+"') ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_INVOICE_NO LIMIT 10000000");
            stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT,CND_BOOK_CODE,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_CREDIT_AMOUNT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_EXT2,CND_EXT3,CND_EXT4,CND_EXT5,CND_EXT6,CND_EXT7,CND_EXT8,CND_EXT9,CND_EXT10,CND_CATG,CND_EXT1) SELECT 1,LCN_NO,'FELTCASHPRO',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,LCN_INTERVAL,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_INVOICE_AMOUNT,LCN_CHARGE_CODE,LCN_PER,LCN_BANK_TR_CODE,LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,LCN_CREDIT_AMOUNT,EXT1,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,EXT12,EXT13,LCN_INVOICE_AMOUNT,LCN_UNADJ,LCN_OEM,LCN_INS_CLAIM,LCN_COMP,LCN_GOODS_RETURN,LCN_YEAR_END,EXT2,EXT3 FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION  WHERE LCN_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_INVOICE_NO LIMIT 10000000");
            //stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT,CND_BOOK_CODE,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_CREDIT_AMOUNT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_EXT2,CND_EXT3,CND_EXT4,CND_EXT5,CND_EXT6,CND_EXT7,CND_EXT8,CND_EXT9,CND_EXT10) SELECT 1,LCN_NO,'FELTCASH',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,LCN_INTERVAL,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_AMOUNT,LCN_CHARGE_CODE,LCN_PER,LCN_BANK_TR_CODE,LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,LCN_CREDIT_AMOUNT,EXT1,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,EXT12,EXT13,LCN_INVOICE_AMOUNT,LCN_UNADJ,LCN_OEM,LCN_INS_CLAIM,LCN_COMP,LCN_GOODS_RETURN,LCN_YEAR_END FROM PRODUCTION.TMP_LC_CREDITNOTE_PROVISION  WHERE LCN_YEAR_MON_ID = CONCAT('FELTCASH','"+fyr+"','"+tyr+"') ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_INVOICE_NO LIMIT 10000000");

            //SELECT *  FROM D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID = 'FELTCASH1516';
            //stmt.execute("DELETE FROM PRODUCTION.D_CREDIT_NOTE_HEADER  WHERE CNH_YEAR_MON_ID = 'FELTCASH1516'");
            stmt.execute("DELETE FROM PRODUCTION.D_CREDIT_NOTE_HEADER  WHERE CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')");

            //stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_EXT2,CNH_EXT3,CNH_EXT5,CNH_EXT6,CNH_EXT7,CNH_EXT8,CNH_EXT9,CNH_EXT10) SELECT CND_ID,CND_NO,CND_TYPE,435077,210010,CND_SUB_ACCOUNT_CODE,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),CND_PERCENT,SUM(CND_CREDIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14',SUM(CND_EXT2),SUM(CND_EXT3),SUM(CND_EXT5),SUM(CND_EXT6),SUM(CND_EXT7),SUM(CND_EXT8),SUM(CND_EXT9),SUM(CND_EXT10) FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = 'FELTCASH1516'  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT LIMIT 1000000000000");
            //stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_EXT2,CNH_EXT3,CNH_EXT5,CNH_EXT6,CNH_EXT7,CNH_EXT8,CNH_EXT9,CNH_EXT10) SELECT CND_ID,CND_NO,CND_TYPE,435077,210010,CND_SUB_ACCOUNT_CODE,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),CND_PERCENT,SUM(CND_CREDIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14',SUM(CND_EXT2),SUM(CND_EXT3),SUM(CND_EXT5),SUM(CND_EXT6),SUM(CND_EXT7),SUM(CND_EXT8),SUM(CND_EXT9),SUM(CND_EXT10) FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASH','"+fyr+"','"+tyr+"')  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT LIMIT 1000000000000");
            //F6 8-15 DAYS AMENDMENT 
            // SAME FOR NEW F6 POLICY 31-61 DAYS
            stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_EXT2,CNH_EXT3,CNH_EXT5,CNH_EXT6,CNH_EXT7,CNH_EXT8,CNH_EXT9,CNH_EXT10) SELECT CND_ID,CND_NO,CND_TYPE,435077,210010,CND_SUB_ACCOUNT_CODE,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),MAX(CND_PERCENT),SUM(CND_CREDIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14',SUM(CND_EXT2),SUM(CND_EXT3),SUM(CND_EXT5),SUM(CND_EXT6),SUM(CND_EXT7),SUM(CND_EXT8),SUM(CND_EXT9),SUM(CND_EXT10) FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION LIMIT 1000000000000");
//            stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_INVOICE_AMOUNT) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASH','"+fyr+"','"+tyr+"') AND CND_CATG!='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_1=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_1=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASH','"+fyr+"','"+tyr+"') AND CNH.CNH_NO=CND.CND_NO ");
//            stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_INVOICE_AMOUNT) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASH','"+fyr+"','"+tyr+"') AND CND_CATG='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_2=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_2=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASH','"+fyr+"','"+tyr+"') AND CNH.CNH_NO=CND.CND_NO ");
//            stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_EXT2,CNH_EXT3,CNH_EXT5,CNH_EXT6,CNH_EXT7,CNH_EXT8,CNH_EXT9,CNH_EXT10) SELECT CND_ID,CND_NO,CND_TYPE,435077,210010,CND_SUB_ACCOUNT_CODE,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_EXT3),MAX(CND_PERCENT),SUM(CND_CREDIT_AMOUNT),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14',SUM(CND_EXT2),SUM(CND_INVOICE_AMOUNT),SUM(CND_EXT5),SUM(CND_EXT6),SUM(CND_EXT7),SUM(CND_EXT8),SUM(CND_EXT9),SUM(CND_EXT10) FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASH','"+fyr+"','"+tyr+"')  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION LIMIT 1000000000000");
            
//            //25-05-2020
//            stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CND_CATG NOT IN ('H6','DH') GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_1=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_1=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_NO=CND.CND_NO ");
//            stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CND_CATG IN ('H6','DH') GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_2=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_2=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_NO=CND.CND_NO ");
//            ////stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CND_CATG!='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_1=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_1=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_NO=CND.CND_NO ");
//            ////stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CND_CATG='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_2=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_2=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_NO=CND.CND_NO ");
            
            //12-04-2021
            stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CND_CATG NOT IN ('H6','DH','SP') GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_1=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_1=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_NO=CND.CND_NO ");
            stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CND_CATG IN ('H6','DH','SP') GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_2=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_2=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_NO=CND.CND_NO ");
            ////stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CND_CATG!='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_1=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_1=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_NO=CND.CND_NO ");
            ////stmt.execute("UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CND_CATG='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_2=CND.INVOICE_AMOUNT,CNH.CNH_PERCENT_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_2=CND.CREDIT_AMOUNT WHERE CNH.CNH_YEAR_MON_ID=CND.CND_YEAR_MON_ID AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_NO=CND.CND_NO ");

            //stmt.execute("UPDATE DINESHMILLS.D_SAL_PARTY_MASTER,PRODUCTION.D_CREDIT_NOTE_HEADER SET CNH_PARTY_NAME = PARTY_NAME,CNH_CITY = CITY_ID WHERE CNH_SUB_ACCOUNT_CODE = PARTY_CODE AND CNH_YEAR_MON_ID = 'FELTCASH1516'");
            stmt.execute("UPDATE DINESHMILLS.D_SAL_PARTY_MASTER,PRODUCTION.D_CREDIT_NOTE_HEADER SET CNH_PARTY_NAME = PARTY_NAME,CNH_CITY = CITY_ID WHERE CNH_SUB_ACCOUNT_CODE = PARTY_CODE AND CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')");

            //Added on 18/05/2020 by gaurang
            stmt.execute("delete from PRODUCTION.TMP_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')");
            stmt.execute("INSERT INTO PRODUCTION.TMP_CREDIT_NOTE_DETAIL "
//                    + "SELECT D.*,0,0,0,0 FROM PRODUCTION.D_CREDIT_NOTE_DETAIL D "
                    + "SELECT CND_ID, CND_NO, CND_TYPE, CND_MAIN_ACCOUNT_CODE, CND_SUB_ACCOUNT_CODE, CND_EFFECT, CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_NO, CND_INVOICE_DATE, CND_INVOICE_AMOUNT, CND_CHARGE_CODE, CND_PERCENT, CND_BOOK_CODE, CND_TRANSPORTER_CODE, CND_RC_VOUCHER_NO, CND_RC_VOUCHER_DATE, CND_DAYS, CND_REMARKS, CND_DEBIT_AMOUNT, CND_CREDIT_AMOUNT, CND_FIN_VOUCHER_NO, CND_FIN_VOUCHER_DATE, CND_FIN_ELIGIBLE, CND_LC_OPENER, CND_VALUE_DATE, CND_MAIN_ACCOUNT_NAME, CND_YEAR_MON_ID, CND_INTERVAL_CAPTION, CND_DISC_GIVEN, CND_DISC_ADDN, CND_DISC_ENTITLED, CND_QUALITY, CND_SHADE, CND_GROSS_QTY, CND_GROSS_AMT, CND_NET_QTY, CND_NET_AMOUNT, CND_FLAG, CND_RATE, CND_CATG, CND_BALENO, CND_GATEPASS_NO, CND_GATEPASS_DATE, CND_WH_CD, CND_QLTY_IND, CND_PIECE_NO, CND_EXT1, CND_EXT2, CND_EXT3, CND_EXT4, CND_EXT5, CND_EXT6, CND_EXT7, CND_EXT8, CND_EXT9, CND_EXT10, CND_CN_AMT_GIVEN, CND_SRNO ,0,0,0,0 FROM PRODUCTION.D_CREDIT_NOTE_DETAIL D "
                    + "where cnd_year_mon_id=CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')");
            stmt.execute("delete from PRODUCTION.TMP_CREDIT_NOTE_HEADER where cnh_year_mon_id=CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')");
            stmt.execute("INSERT INTO PRODUCTION.TMP_CREDIT_NOTE_HEADER "
//                    + "SELECT D.*,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 FROM PRODUCTION.D_CREDIT_NOTE_HEADER D "
                    + "SELECT CNH_ID, CNH_NO, CNH_TYPE, CNH_MAIN_ACCOUNT_CODE, CNH_MAIN_CODE, CNH_SUB_ACCOUNT_CODE, CNH_CITY, CNH_PARTY_NAME, CNH_EFFECT, CNH_INVOICE_AMOUNT, CNH_PERCENT, CNH_DRAFT_CR_NOTE_NO, CNH_DRAFT_CR_NOTE_DATE, CNH_LINK_NO, CNH_REMARKS, CNH_DEBIT_AMOUNT, CNH_CREDIT_AMOUNT, CNH_FIN_VOUCHER_NO, CNH_FIN_VOUCHER_DATE, CNH_FIN_ELIGIBLE, CNH_LEGACY_NO, CNH_VALUE_DATE, CNH_YEAR_MON_ID, CNH_INTERVAL_CAPTION, CNH_BOOK_CODE, CNH_REASON_CODE, CNH_GROSS_QTY, CNH_GROSS_AMT, CNH_NET_QTY, CNH_NET_AMT, CNH_MAIN_ACCOUNT_NAME, CNH_TARGET_AMOUNT, CNH_CHARGE_CODE, CNH_EXT1, CNH_EXT2, CNH_EXT3, CNH_EXT4, CNH_EXT5, CNH_EXT6, CNH_EXT7, CNH_EXT8, CNH_EXT9, CNH_EXT10, CNH_EXT11, CNH_CN_AMT_GIVEN, CNH_SRNO, CNH_INVOICE_AMOUNT_1, CNH_PERCENT_1, CNH_CREDIT_AMOUNT_1, CNH_INVOICE_AMOUNT_2, CNH_PERCENT_2, CNH_CREDIT_AMOUNT_2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 FROM PRODUCTION.D_CREDIT_NOTE_HEADER D "
                    + "where cnh_year_mon_id=CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "')");

            stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_DETAIL T,PRODUCTION.D_CREDIT_NOTE_DETAIL D SET T.CND_CREDIT_AMOUNT_ADV = D.CND_CREDIT_AMOUNT,T.CND_PER_ADV = D.CND_PERCENT WHERE T.CND_SUB_ACCOUNT_CODE = D.CND_SUB_ACCOUNT_CODE AND T.CND_INVOICE_NO=D.CND_INVOICE_NO AND T.CND_INVOICE_DATE=D.CND_INVOICE_DATE AND T.CND_YEAR_MON_ID=CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND D.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "')");

//            //25-05-2020
//            stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CND_CATG NOT IN ('H6','DH') GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_ADV_1=CND.INVOICE_AMOUNT,CNH.CNH_PER_ADV_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_ADV_1=CND.CREDIT_AMOUNT WHERE CND.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_SUB_ACCOUNT_CODE=CND.CND_SUB_ACCOUNT_CODE ");
//            stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CND_CATG IN ('H6','DH') GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_ADV_2=CND.INVOICE_AMOUNT,CNH.CNH_PER_ADV_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_ADV_2=CND.CREDIT_AMOUNT WHERE CND.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_SUB_ACCOUNT_CODE=CND.CND_SUB_ACCOUNT_CODE ");
//            ////stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CND_CATG!='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_ADV_1=CND.INVOICE_AMOUNT,CNH.CNH_PER_ADV_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_ADV_1=CND.CREDIT_AMOUNT WHERE CND.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_SUB_ACCOUNT_CODE=CND.CND_SUB_ACCOUNT_CODE ");
//            ////stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CND_CATG='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_ADV_2=CND.INVOICE_AMOUNT,CNH.CNH_PER_ADV_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_ADV_2=CND.CREDIT_AMOUNT WHERE CND.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_SUB_ACCOUNT_CODE=CND.CND_SUB_ACCOUNT_CODE ");

            //12-04-2021
            stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CND_CATG NOT IN ('H6','DH','SP') GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_ADV_1=CND.INVOICE_AMOUNT,CNH.CNH_PER_ADV_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_ADV_1=CND.CREDIT_AMOUNT WHERE CND.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_SUB_ACCOUNT_CODE=CND.CND_SUB_ACCOUNT_CODE ");
            stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CND_CATG IN ('H6','DH','SP') GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_ADV_2=CND.INVOICE_AMOUNT,CNH.CNH_PER_ADV_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_ADV_2=CND.CREDIT_AMOUNT WHERE CND.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_SUB_ACCOUNT_CODE=CND.CND_SUB_ACCOUNT_CODE ");
            ////stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CND_CATG!='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_ADV_1=CND.INVOICE_AMOUNT,CNH.CNH_PER_ADV_1=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_ADV_1=CND.CREDIT_AMOUNT WHERE CND.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_SUB_ACCOUNT_CODE=CND.CND_SUB_ACCOUNT_CODE ");
            ////stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER AS CNH, (SELECT SUM(CND_EXT3) AS INVOICE_AMOUNT,MAX(CND_PERCENT) AS PERCENT,SUM(CND_CREDIT_AMOUNT) AS CREDIT_AMOUNT,CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CND_CATG='H6' GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT ) AS CND SET CNH.CNH_INVOICE_AMOUNT_ADV_2=CND.INVOICE_AMOUNT,CNH.CNH_PER_ADV_2=CND.PERCENT,CNH.CNH_CREDIT_AMOUNT_ADV_2=CND.CREDIT_AMOUNT WHERE CND.CND_YEAR_MON_ID = CONCAT('FELTCASHADV','" + fyr + "','" + tyr + "') AND CNH.CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') AND CNH.CNH_SUB_ACCOUNT_CODE=CND.CND_SUB_ACCOUNT_CODE ");
            
            stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER SET CNH_INVOICE_AMOUNT_PRO_1=CNH_INVOICE_AMOUNT_1, CNH_PER_PRO_1=CNH_PERCENT_1, CNH_CREDIT_AMOUNT_PRO_1=CNH_CREDIT_AMOUNT_1, CNH_INVOICE_AMOUNT_PRO_2=CNH_INVOICE_AMOUNT_2, CNH_PER_PRO_2=CNH_PERCENT_2, CNH_CREDIT_AMOUNT_PRO_2=CNH_CREDIT_AMOUNT_2 WHERE CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') ");
            stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER SET CNH_INVOICE_AMOUNT_1=CNH_INVOICE_AMOUNT_PRO_1-CNH_INVOICE_AMOUNT_ADV_1, CNH_CREDIT_AMOUNT_1=CNH_CREDIT_AMOUNT_PRO_1-CNH_CREDIT_AMOUNT_ADV_1, CNH_INVOICE_AMOUNT_2=CNH_INVOICE_AMOUNT_PRO_2-CNH_INVOICE_AMOUNT_ADV_2, CNH_CREDIT_AMOUNT_2=CNH_CREDIT_AMOUNT_PRO_2-CNH_CREDIT_AMOUNT_ADV_2 WHERE CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') ");
            stmt.execute("UPDATE PRODUCTION.TMP_CREDIT_NOTE_HEADER SET CNH_EXT3=CNH_INVOICE_AMOUNT_1+CNH_INVOICE_AMOUNT_2, CNH_CREDIT_AMOUNT=CNH_CREDIT_AMOUNT_1+CNH_CREDIT_AMOUNT_2 WHERE CNH_YEAR_MON_ID = CONCAT('FELTCASHPRO','" + fyr + "','" + tyr + "') ");

            //-----------------------------------
            generateIntervalCombo();

        } catch (SQLException e) {
            e.printStackTrace();
        }

        System.out.println("DONE");
    }

    private void formatGrid() {
        DataModel = new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
       // TableColumnModel ColModel=Table.getColumnModel();

        //  DataModel.addColumn("Sr.");
        DataModel.addColumn("Party Name");
        DataModel.addColumn("Main Code");
        DataModel.addColumn("Sub Code");
        DataModel.addColumn("Link No");
        DataModel.addColumn("Invoice Date");
        DataModel.addColumn("Invoice Amount");
        DataModel.addColumn("Discount Amount");
        DataModel.addColumn("Net Amount");

        DataModel.addColumn("Percent");
        DataModel.addColumn("Book Code");
        //  DataModel.addColumn("RC Voucher No");
        //  DataModel.addColumn("RC Voucher Date");
        // DataModel.addColumn("RC Fin Voucher No");
        DataModel.addColumn("Days");
        DataModel.addColumn("Credit Amount");

        //    Table.getColumnModel().getColumnModel(1).setMaxWidth(40);
        //  TableDesc.getColumnModel().getColumn(0).setMaxWidth(50);
    }

    private void LCCreditDraftReport() {
        try {

            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData = new TReportWriter.SimpleDataProvider.TTable();

            objReportData.AddColumn("CNH_NO");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_MAIN_CODE");
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_LINK_NO");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_BOOK_CODE");
            objReportData.AddColumn("CNH_EXT1");
            objReportData.AddColumn("CNH_RESON_CODE");
            objReportData.AddColumn("CNH_PERCENT");
            objReportData.AddColumn("CNH_INTERVAL_CAPTION");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT_1");
            objReportData.AddColumn("CNH_PERCENT_1");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT_1");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT_2");
            objReportData.AddColumn("CNH_PERCENT_2");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT_2");
            objReportData.AddColumn("CNH_EXT3");

            TReportWriter.SimpleDataProvider.TRow objOpeningRow = objReportData.newRow();

            objOpeningRow.setValue("CNH_NO", "");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_CODE", "");
            objOpeningRow.setValue("CNH_MAIN_CODE", "");
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE", "");
            objOpeningRow.setValue("CNH_PARTY_NAME", "");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT", "");
            objOpeningRow.setValue("CNH_LINK_NO", "");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT", "");
            objOpeningRow.setValue("CNH_BOOK_CODE", "");
            objOpeningRow.setValue("CNH_INTERVAL_CAPTION", "");
            objOpeningRow.setValue("CNH_REASON_CODEINTERVAL_CAPTION", "");
            objOpeningRow.setValue("CNH_PERCENT", "");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT_1", "");
            objOpeningRow.setValue("CNH_PERCENT_1", "");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT_1", "");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT_2", "");
            objOpeningRow.setValue("CNH_PERCENT_2", "");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT_2", "");
            objOpeningRow.setValue("CNH_EXT3", "");

            String strSQL = "SELECT CNH_NO,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_REASON_CODE,CNH_PERCENT,CNH_SUB_ACCOUNT_CODE,CONCAT(CNH_PARTY_NAME,',',CNH_CITY) AS CNH_PARTY_NAME,CNH_INVOICE_AMOUNT,CNH_LINK_NO,CNH_CREDIT_AMOUNT,CNH_BOOK_CODE,CONCAT('FELT CASH PROVISION DISCOUNT : ', CNH_INTERVAL_CAPTION) AS CNH_INTERVAL_CAPTION,CNH_PERCENT_1,CNH_CREDIT_AMOUNT_1,CNH_INVOICE_AMOUNT_1,CNH_PERCENT_2,CNH_CREDIT_AMOUNT_2,CNH_INVOICE_AMOUNT_2,CNH_EXT3 FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID = SUBSTRING('" + txtInterval.getText() + "',1,15) AND CNH_TYPE='FELTCASHPRO' ORDER BY CNH_SUB_ACCOUNT_CODE ";
            System.out.println(strSQL);

            ResultSet rsTmp = data.getResult(strSQL);
            rsTmp.first();

            int Counter = 0;

            if (rsTmp.getRow() > 0) {
                while (!rsTmp.isAfterLast()) {
                    Counter++;
                    objRow = objReportData.newRow();

                    objRow.setValue("CNH_NO", UtilFunctions.getString(rsTmp, "CNH_NO", ""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_CODE", UtilFunctions.getString(rsTmp, "CNH_MAIN_ACCOUNT_CODE", ""));
                    objRow.setValue("CNH_MAIN_CODE", UtilFunctions.getString(rsTmp, "CNH_MAIN_CODE", ""));
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE", UtilFunctions.getString(rsTmp, "CNH_SUB_ACCOUNT_CODE", ""));
                    objRow.setValue("CNH_PARTY_NAME", UtilFunctions.getString(rsTmp, "CNH_PARTY_NAME", ""));
                    objRow.setValue("CNH_INVOICE_AMOUNT", UtilFunctions.getString(rsTmp, "CNH_INVOICE_AMOUNT", ""));
                    // objRow.setValue("CND_INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","")));
                    objRow.setValue("CNH_LINK_NO", UtilFunctions.getString(rsTmp, "CNH_LINK_NO", ""));
                    objRow.setValue("CNH_CREDIT_AMOUNT", UtilFunctions.getString(rsTmp, "CNH_CREDIT_AMOUNT", ""));
                    objRow.setValue("CNH_BOOK_CODE", UtilFunctions.getString(rsTmp, "CNH_BOOK_CODE", ""));
                    objRow.setValue("CNH_INTERVAL_CAPTION", UtilFunctions.getString(rsTmp, "CNH_INTERVAL_CAPTION", ""));
                    objRow.setValue("CNH_REASON_CODE", UtilFunctions.getString(rsTmp, "CNH_REASON_CODE", ""));
                    objRow.setValue("CNH_PERCENT", UtilFunctions.getString(rsTmp, "CNH_PERCENT", ""));
                    objRow.setValue("CNH_INVOICE_AMOUNT_1", UtilFunctions.getString(rsTmp, "CNH_INVOICE_AMOUNT_1", ""));
                    objRow.setValue("CNH_PERCENT_1", UtilFunctions.getString(rsTmp, "CNH_PERCENT_1", ""));
                    objRow.setValue("CNH_CREDIT_AMOUNT_1", UtilFunctions.getString(rsTmp, "CNH_CREDIT_AMOUNT_1", ""));
                    objRow.setValue("CNH_INVOICE_AMOUNT_2", UtilFunctions.getString(rsTmp, "CNH_INVOICE_AMOUNT_2", ""));
                    objRow.setValue("CNH_PERCENT_2", UtilFunctions.getString(rsTmp, "CNH_PERCENT_2", ""));
                    objRow.setValue("CNH_CREDIT_AMOUNT_2", UtilFunctions.getString(rsTmp, "CNH_CREDIT_AMOUNT_2", ""));
                    objRow.setValue("CNH_EXT3", UtilFunctions.getString(rsTmp, "CNH_EXT3", ""));

                    objReportData.AddRow(objRow);

                    rsTmp.next();
                }
            }

            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters = new HashMap();
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());

            objEngine.PreviewReport("http://" + EITLERPGLOBAL.HostIP + "/EITLERP/Reports/Production/rpt_CN_Draft_1.rpt", Parameters, objReportData);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void DraftReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData = new TReportWriter.SimpleDataProvider.TTable();

            objReportData.AddColumn("CND_NO");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_QUALITY");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_LINK_YEAR");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_CHARGE_CODE");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_DEBIT_AMOUNT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_VALUE_DATE");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            objReportData.AddColumn("CND_RC_VOUCHER_NO");
            objReportData.AddColumn("CND_RC_VOUCHER_DATE");
            objReportData.AddColumn("CND_DAYS");
            objReportData.AddColumn("CND_CATG");
            objReportData.AddColumn("CND_FIN_VOUCHER_NO");
            objReportData.AddColumn("CND_BOOK_CODE");
            objReportData.AddColumn("VL");
            objReportData.AddColumn("LL");
            objReportData.AddColumn("CND_EXT2");
            objReportData.AddColumn("CND_EXT3");
            objReportData.AddColumn("CND_EXT4");
            objReportData.AddColumn("CNH_PERCENT_1");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT_1");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT_1");
            objReportData.AddColumn("CNH_PERCENT_2");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT_2");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT_2");
            objReportData.AddColumn("CND_PER_ADV");
            objReportData.AddColumn("CND_CREDIT_AMOUNT_ADV");

            TReportWriter.SimpleDataProvider.TRow objOpeningRow = objReportData.newRow();

            objOpeningRow.setValue("CND_NO", "");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_NAME", "");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_CODE", "");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE", "");
            objOpeningRow.setValue("CND_LINK_NO", "");
            objOpeningRow.setValue("CND_QUALITY", "");
            objOpeningRow.setValue("CND_LINK_YEAR", "");
            objOpeningRow.setValue("CND_INVOICE_DATE", "");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT", "");
            objOpeningRow.setValue("CND_CHARGE_CODE", "");
            objOpeningRow.setValue("CND_PERCENT", "");
            objOpeningRow.setValue("CND_DEBIT_AMOUNT", "");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT", "");
            objOpeningRow.setValue("CND_VALUE_DATE", "");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION", "");
            objOpeningRow.setValue("CND_RC_VOUCHER_NO", "");
            objOpeningRow.setValue("CND_RC_VOUCHER_DATE", "");
            objOpeningRow.setValue("CND_DAYS", "");
            objOpeningRow.setValue("CND_CATG", "");
            objOpeningRow.setValue("CND_FIN_VOUCHER_NO", "");
            objOpeningRow.setValue("CND_BOOK_CODE", "");
            objOpeningRow.setValue("VL", "");
            objOpeningRow.setValue("LL", "");
            objOpeningRow.setValue("CND_EXT2", "");
            objOpeningRow.setValue("CND_EXT3", "");
            objOpeningRow.setValue("CND_EXT4", "");

            objOpeningRow.setValue("CNH_PERCENT_1", "");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT_1", "");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT_1", "");
            objOpeningRow.setValue("CNH_PERCENT_2", "");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT_2", "");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT_2", "");
            objOpeningRow.setValue("CND_PER_ADV", "");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT_ADV", "");

            //         String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0"; 
            //          String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='CASH' AND CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0"; 
            //String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE, CND_INVOICE_AMOUNT , CND_CHARGE_CODE , CND_PERCENT,CND_BOOK_CODE, CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_FIN_VOUCHER_NO,RIGHT(CND_INTERVAL_CAPTION,10)AS VL,LEFT(CND_LINK_NO,2)AS LL,CND_CATG    FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='FELTCASH' AND CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,12)  AND CND_CREDIT_AMOUNT !=0 UNION ALL SELECT CNH_NO,'CASH/LC DISCOUNT',CNH_MAIN_ACCOUNT_CODE,'',CNH_LINK_NO, '','', '' , '' , 0.00,'', CNH_CREDIT_AMOUNT,CNH_DEBIT_AMOUNT,CNH_VALUE_DATE,CNH_INTERVAL_CAPTION,'','','','',RIGHT(CNH_INTERVAL_CAPTION,10),'',''   FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='FELTCASH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,12)  ORDER BY  CND_NO,CND_LINK_NO"; 
            //String strSQL = "SELECT CND_QUALITY,CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE, CND_INVOICE_AMOUNT , CND_CHARGE_CODE , CND_PERCENT,CND_BOOK_CODE, CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_FIN_VOUCHER_NO,RIGHT(CND_INTERVAL_CAPTION,10)AS VL,LEFT(CND_LINK_NO,2)AS LL,CND_CATG,CND_EXT2,CND_EXT3,CND_EXT4    FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='FELTCASH' AND CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,12)  AND CND_CREDIT_AMOUNT !=0 UNION ALL SELECT '',CNH_NO,'CASH/LC DISCOUNT',CNH_MAIN_ACCOUNT_CODE,'','', '','', '' , '' , 0.00,'', CNH_CREDIT_AMOUNT,CNH_DEBIT_AMOUNT,CNH_VALUE_DATE,CNH_INTERVAL_CAPTION,'','','','',RIGHT(CNH_INTERVAL_CAPTION,10),'','','','',''   FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='FELTCASH' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,12)  ORDER BY  CND_NO,CND_LINK_NO"; 
            String strSQL = "SELECT * FROM ( SELECT CND_PER_ADV,CND_CREDIT_AMOUNT_ADV,CND_QUALITY,CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE, CND_INVOICE_AMOUNT , CND_CHARGE_CODE , CND_PERCENT,CND_BOOK_CODE, CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_FIN_VOUCHER_NO,RIGHT(CND_INTERVAL_CAPTION,10)AS VL,LEFT(CND_LINK_NO,2)AS LL,CND_CATG,CND_EXT2,CND_EXT3,CND_EXT4    FROM PRODUCTION.TMP_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='FELTCASHPRO' AND CND_YEAR_MON_ID = SUBSTRING('" + txtInterval.getText() + "',1,15) "
//                    + " AND CND_CREDIT_AMOUNT !=0 "
                    + "UNION ALL SELECT 0,0,'',CNH_NO,'CASH/LC DISCOUNT',CNH_MAIN_ACCOUNT_CODE,'','', '','', '' , '' , 0.00,'', CNH_CREDIT_AMOUNT,CNH_DEBIT_AMOUNT,CNH_VALUE_DATE,CNH_INTERVAL_CAPTION,'','','','',RIGHT(CNH_INTERVAL_CAPTION,10),'','','','',''   FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='FELTCASHPRO' AND CNH_YEAR_MON_ID = SUBSTRING('" + txtInterval.getText() + "',1,15)  ORDER BY  CND_NO,CND_LINK_NO  ) AS A LEFT JOIN (SELECT CNH_NO,CNH_PERCENT_1,CNH_CREDIT_AMOUNT_1,CNH_INVOICE_AMOUNT_1,CNH_PERCENT_2,CNH_CREDIT_AMOUNT_2,CNH_INVOICE_AMOUNT_2 FROM PRODUCTION.TMP_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='FELTCASHPRO' AND CNH_YEAR_MON_ID = SUBSTRING('" + txtInterval.getText() + "',1,15) ) AS B ON A.CND_NO = B.CNH_NO ";
            //SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE, CND_INVOICE_AMOUNT , CND_CHARGE_CODE , CND_PERCENT,CND_BOOK_CODE, CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE,CND_INTERVAL_CAPTION,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_FIN_VOUCHER_NO,RIGHT(CND_INTERVAL_CAPTION,10)AS VL,LEFT(CND_LINK_NO,2)AS LL,CND_CATG,CND_EXT2,CND_EXT3,CND_EXT4    FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='FELTCASH' AND CND_YEAR_MON_ID = 'FELTCASH1516'                                AND CND_CREDIT_AMOUNT !=0 UNION ALL SELECT CNH_NO,'CASH/LC DISCOUNT',CNH_MAIN_ACCOUNT_CODE,'',CNH_LINK_NO, '','', '' , '' , 0.00,'', CNH_CREDIT_AMOUNT,CNH_DEBIT_AMOUNT,CNH_VALUE_DATE,CNH_INTERVAL_CAPTION,'','','','',RIGHT(CNH_INTERVAL_CAPTION,10),'','','','',''   FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='FELTCASH' AND CNH_YEAR_MON_ID = 'FELTCASH1516'  ORDER BY  CND_NO,CND_LINK_NO
            System.out.println(strSQL);

            //   String strSQL = "SELECT CND_NO,CND_MAIN_ACCOUNT_NAME,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_LINK_NO, CND_LINK_YEAR, CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT, CND_BOOK_CODE,CND_DEBIT_AMOUNT,CND_CREDIT_AMOUNT,CND_VALUE_DATE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE ORDER BY CND_VALUE_DATE,CND_NO,CND_EFFECT DESC,CND_LINK_NO+0,CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'"; 
            // "WHERE (CND_INOVICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+"" +
            // "AND CND_INOVICE_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"')"+
            // "ORDER BY CND_INOVICE_DATE";
            //"AND (A.RECEIPT_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) +"' "+
            //"AND A.RECEIPT_DATE<= '"+ EITLERPGLOBAL.formatDateDB(txtToDate.getText()) +"' ) ";
            //System.out.println("sql="+strSQL);
            ResultSet rsTmp = data.getResult(strSQL);
            rsTmp.first();

            int Counter = 0;

            if (rsTmp.getRow() > 0) {
                while (!rsTmp.isAfterLast()) {
                    Counter++;
                    objRow = objReportData.newRow();

                    objRow.setValue("CND_NO", UtilFunctions.getString(rsTmp, "CND_NO", ""));
                    objRow.setValue("CND_MAIN_ACCOUNT_NAME", UtilFunctions.getString(rsTmp, "CND_MAIN_ACCOUNT_NAME", ""));
                    objRow.setValue("CND_MAIN_ACCOUNT_CODE", UtilFunctions.getString(rsTmp, "CND_MAIN_ACCOUNT_CODE", ""));
                    objRow.setValue("CND_SUB_ACCOUNT_CODE", UtilFunctions.getString(rsTmp, "CND_SUB_ACCOUNT_CODE", ""));
                    objRow.setValue("CND_LINK_NO", UtilFunctions.getString(rsTmp, "CND_LINK_NO", ""));
                    objRow.setValue("CND_QUALITY", UtilFunctions.getString(rsTmp, "CND_QUALITY", ""));
                    // objRow.setValue("CND_INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","")));
                    objRow.setValue("CND_LINK_YEAR", UtilFunctions.getString(rsTmp, "CND_LINK_YEAR", ""));
                    objRow.setValue("CND_INVOICE_DATE", UtilFunctions.getString(rsTmp, "CND_INVOICE_DATE", ""));
                    objRow.setValue("CND_INVOICE_AMOUNT", UtilFunctions.getString(rsTmp, "CND_INVOICE_AMOUNT", ""));
                    objRow.setValue("CND_CHARGE_CODE", UtilFunctions.getString(rsTmp, "CND_CHARGE_CODE", ""));
                    objRow.setValue("CND_PERCENT", UtilFunctions.getString(rsTmp, "CND_PERCENT", ""));
                    objRow.setValue("CND_DEBIT_AMOUNT", UtilFunctions.getString(rsTmp, "CND_DEBIT_AMOUNT", ""));
                    objRow.setValue("CND_CREDIT_AMOUNT", UtilFunctions.getString(rsTmp, "CND_CREDIT_AMOUNT", ""));
                    objRow.setValue("CND_VALUE_DATE", UtilFunctions.getString(rsTmp, "CND_VALUE_DATE", ""));
                    objRow.setValue("CND_INTERVAL_CAPTION", UtilFunctions.getString(rsTmp, "CND_INTERVAL_CAPTION", ""));
                    objRow.setValue("CND_CATG", UtilFunctions.getString(rsTmp, "CND_CATG", ""));

                    objRow.setValue("CND_RC_VOUCHER_NO", UtilFunctions.getString(rsTmp, "CND_RC_VOUCHER_NO", ""));
                    objRow.setValue("CND_RC_VOUCHER_DATE", UtilFunctions.getString(rsTmp, "CND_RC_VOUCHER_DATE", ""));
                    objRow.setValue("CND_DAYS", UtilFunctions.getString(rsTmp, "CND_DAYS", ""));
                    objRow.setValue("CND_FIN_VOUCHER_NO", UtilFunctions.getString(rsTmp, "CND_FIN_VOUCHER_NO", ""));
                    objRow.setValue("CND_BOOK_CODE", UtilFunctions.getString(rsTmp, "CND_BOOK_CODE", ""));
                    objRow.setValue("VL", UtilFunctions.getString(rsTmp, "VL", ""));
                    objRow.setValue("LL", UtilFunctions.getString(rsTmp, "LL", ""));
                    objRow.setValue("CND_EXT2", UtilFunctions.getString(rsTmp, "CND_EXT2", ""));
                    objRow.setValue("CND_EXT3", UtilFunctions.getString(rsTmp, "CND_EXT3", ""));
                    objRow.setValue("CND_EXT4", UtilFunctions.getString(rsTmp, "CND_EXT4", ""));

                    objRow.setValue("CNH_PERCENT_1", UtilFunctions.getString(rsTmp, "CNH_PERCENT_1", ""));
                    objRow.setValue("CNH_CREDIT_AMOUNT_1", UtilFunctions.getString(rsTmp, "CNH_CREDIT_AMOUNT_1", ""));
                    objRow.setValue("CNH_INVOICE_AMOUNT_1", UtilFunctions.getString(rsTmp, "CNH_INVOICE_AMOUNT_1", ""));
                    objRow.setValue("CNH_PERCENT_2", UtilFunctions.getString(rsTmp, "CNH_PERCENT_2", ""));
                    objRow.setValue("CNH_CREDIT_AMOUNT_2", UtilFunctions.getString(rsTmp, "CNH_CREDIT_AMOUNT_2", ""));
                    objRow.setValue("CNH_INVOICE_AMOUNT_2", UtilFunctions.getString(rsTmp, "CNH_INVOICE_AMOUNT_2", ""));
                    objRow.setValue("CND_PER_ADV", UtilFunctions.getString(rsTmp, "CND_PER_ADV", ""));
                    objRow.setValue("CND_CREDIT_AMOUNT_ADV", UtilFunctions.getString(rsTmp, "CND_CREDIT_AMOUNT_ADV", ""));

                    objReportData.AddRow(objRow);

                    rsTmp.next();
                }
            }

            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters = new HashMap();
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());

            //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/Felt_Credit_Note/rptfeltcashdraft.rpt",Parameters,objReportData);
//            objEngine.PreviewReport("http://" + EITLERPGLOBAL.HostIP + "/EITLERP/Reports/Production/rptfeltcashdraft_1.rpt", Parameters, objReportData);
            objEngine.PreviewReport("http://" + EITLERPGLOBAL.HostIP + "/EITLERP/Reports/Production/rptfeltcashdraft_prov.rpt", Parameters, objReportData);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void GenerateCreditNoteSummary() {
        String str = IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(0, 15);
        String strfrom = IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(23, 33);
        String strto = IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(37, 47);
        System.out.println(str);
        System.out.println(strfrom);
        System.out.println(strto);

        try {
            TReportWriter.SimpleDataProvider.TTable objData = new TReportWriter.SimpleDataProvider.TTable();

            objData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objData.AddColumn("CNH_PARTY_NAME");
            objData.AddColumn("CNH_PERCENT");
            objData.AddColumn("CNH_CREDIT_AMOUNT");
            objData.AddColumn("CNH_INVOICE_AMOUNT");
            objData.AddColumn("CNH_FIN_VOUCHER_NO");
            objData.AddColumn("CNH_EXT3");
            objData.AddColumn("CNH_EXT5");
            objData.AddColumn("CNH_EXT6");
            objData.AddColumn("CNH_EXT7");
            objData.AddColumn("CNH_EXT8");
            objData.AddColumn("CNH_EXT9");
            objData.AddColumn("CNH_EXT10");
            objData.AddColumn("CNH_PERCENT_1");
            objData.AddColumn("CNH_CREDIT_AMOUNT_1");
            objData.AddColumn("CNH_INVOICE_AMOUNT_1");
            objData.AddColumn("CNH_PERCENT_2");
            objData.AddColumn("CNH_CREDIT_AMOUNT_2");
            objData.AddColumn("CNH_INVOICE_AMOUNT_2");
            objData.AddColumn("CNH_PER_ADV_1");
            objData.AddColumn("CNH_PER_ADV_2");
            objData.AddColumn("CNH_CREDIT_AMOUNT_ADV_1");
            objData.AddColumn("CNH_CREDIT_AMOUNT_ADV_2");
            
            objData.AddColumn("CNH_CREDIT_AMOUNT_PRO_1");
            objData.AddColumn("CNH_PER_PRO_1");
            objData.AddColumn("CNH_CREDIT_AMOUNT_PRO_2");
            objData.AddColumn("CNH_PER_PRO_2");
            objData.AddColumn("CNH_INVOICE_AMOUNT_PRO_1");
            objData.AddColumn("CNH_INVOICE_AMOUNT_PRO_2");
            objData.AddColumn("CNH_INVOICE_AMOUNT_ADV_1");
            objData.AddColumn("CNH_INVOICE_AMOUNT_ADV_2");
           
            
            //String strSQL="SELECT CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CITY,CONCAT(CNH_PARTY_NAME,',',CNH_CITY) AS CNH_PARTY_NAME,CNH_REASON_CODE,CNH_BOOK_CODE,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_LINK_NO,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_INVOICE_AMOUNT FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID='"+str+"' AND CNH_TYPE='FELTCASH' ORDER BY CNH_SUB_ACCOUNT_CODE";
            String strSQL = "SELECT CNH_CREDIT_AMOUNT_PRO_1, CNH_PER_PRO_1, CNH_CREDIT_AMOUNT_PRO_2, CNH_PER_PRO_2, CNH_INVOICE_AMOUNT_PRO_1, CNH_INVOICE_AMOUNT_PRO_2, CNH_INVOICE_AMOUNT_ADV_1, CNH_INVOICE_AMOUNT_ADV_2, CNH_PER_ADV_1,CNH_PER_ADV_2,CNH_CREDIT_AMOUNT_ADV_1,CNH_CREDIT_AMOUNT_ADV_2,CNH_FIN_VOUCHER_NO,CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CITY,CONCAT(CNH_PARTY_NAME,',',CNH_CITY) AS CNH_PARTY_NAME,CNH_REASON_CODE,CNH_BOOK_CODE,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_LINK_NO,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_INVOICE_AMOUNT,CNH_EXT3,CNH_EXT5,CNH_EXT6,CNH_EXT7,CNH_EXT8,CNH_EXT9,CNH_EXT10,CNH_PERCENT_1,CNH_CREDIT_AMOUNT_1,CNH_INVOICE_AMOUNT_1,CNH_PERCENT_2,CNH_CREDIT_AMOUNT_2,CNH_INVOICE_AMOUNT_2 FROM PRODUCTION.TMP_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID='" + str + "' AND CNH_TYPE='FELTCASHPRO' ORDER BY CNH_SUB_ACCOUNT_CODE";
            //SELECT CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CITY,CONCAT(CNH_PARTY_NAME,',',CNH_CITY) AS CNH_PARTY_NAME,CNH_REASON_CODE,CNH_BOOK_CODE,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_LINK_NO,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_INVOICE_AMOUNT,CNH_EXT5,CNH_EXT6,CNH_EXT7,CNH_EXT8,CNH_EXT9,CNH_EXT10 FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID='FELTCASH1516' AND CNH_TYPE='FELTCASH' ORDER BY CNH_SUB_ACCOUNT_CODE
            ResultSet rsTemp = data.getResult(strSQL);
            rsTemp.first();
            if (rsTemp.getRow() > 0) {
                while (!rsTemp.isAfterLast()) {
                    TReportWriter.SimpleDataProvider.TRow objRow = objData.newRow();

                    objRow.setValue("CNH_SUB_ACCOUNT_CODE", rsTemp.getString("CNH_SUB_ACCOUNT_CODE"));
                    objRow.setValue("CNH_PARTY_NAME", rsTemp.getString("CNH_PARTY_NAME"));
                    objRow.setValue("CNH_PERCENT", rsTemp.getString("CNH_PERCENT"));
                    objRow.setValue("CNH_CREDIT_AMOUNT", rsTemp.getString("CNH_CREDIT_AMOUNT"));
                    objRow.setValue("CNH_INVOICE_AMOUNT", rsTemp.getString("CNH_INVOICE_AMOUNT"));
                    objRow.setValue("CNH_FIN_VOUCHER_NO", rsTemp.getString("CNH_FIN_VOUCHER_NO"));
                    objRow.setValue("CNH_EXT3", rsTemp.getString("CNH_EXT3"));
                    objRow.setValue("CNH_EXT5", rsTemp.getString("CNH_EXT5"));
                    objRow.setValue("CNH_EXT6", rsTemp.getString("CNH_EXT6"));
                    objRow.setValue("CNH_EXT7", rsTemp.getString("CNH_EXT7"));
                    objRow.setValue("CNH_EXT8", rsTemp.getString("CNH_EXT8"));
                    objRow.setValue("CNH_EXT9", rsTemp.getString("CNH_EXT9"));
                    objRow.setValue("CNH_EXT10", rsTemp.getString("CNH_EXT10"));
                    objRow.setValue("CNH_PERCENT_1", rsTemp.getString("CNH_PERCENT_1"));
                    objRow.setValue("CNH_CREDIT_AMOUNT_1", rsTemp.getString("CNH_CREDIT_AMOUNT_1"));
                    objRow.setValue("CNH_INVOICE_AMOUNT_1", rsTemp.getString("CNH_INVOICE_AMOUNT_1"));
                    objRow.setValue("CNH_PERCENT_2", rsTemp.getString("CNH_PERCENT_2"));
                    objRow.setValue("CNH_CREDIT_AMOUNT_2", rsTemp.getString("CNH_CREDIT_AMOUNT_2"));
                    objRow.setValue("CNH_INVOICE_AMOUNT_2", rsTemp.getString("CNH_INVOICE_AMOUNT_2"));
                    objRow.setValue("CNH_PER_ADV_1", rsTemp.getString("CNH_PER_ADV_1"));
                    objRow.setValue("CNH_PER_ADV_2", rsTemp.getString("CNH_PER_ADV_2"));
                    objRow.setValue("CNH_CREDIT_AMOUNT_ADV_1", rsTemp.getString("CNH_CREDIT_AMOUNT_ADV_1"));
                    objRow.setValue("CNH_CREDIT_AMOUNT_ADV_2", rsTemp.getString("CNH_CREDIT_AMOUNT_ADV_2"));
                    
                    objRow.setValue("CNH_CREDIT_AMOUNT_PRO_1", rsTemp.getString("CNH_CREDIT_AMOUNT_PRO_1"));
                    objRow.setValue("CNH_PER_PRO_1", rsTemp.getString("CNH_PER_PRO_1"));
                    objRow.setValue("CNH_CREDIT_AMOUNT_PRO_2", rsTemp.getString("CNH_CREDIT_AMOUNT_PRO_2"));
                    objRow.setValue("CNH_PER_PRO_2", rsTemp.getString("CNH_PER_PRO_2"));
                    objRow.setValue("CNH_INVOICE_AMOUNT_PRO_1", rsTemp.getString("CNH_INVOICE_AMOUNT_PRO_1"));
                    objRow.setValue("CNH_INVOICE_AMOUNT_PRO_2", rsTemp.getString("CNH_INVOICE_AMOUNT_PRO_2"));
                    objRow.setValue("CNH_INVOICE_AMOUNT_ADV_1", rsTemp.getString("CNH_INVOICE_AMOUNT_ADV_1"));
                    objRow.setValue("CNH_INVOICE_AMOUNT_ADV_2", rsTemp.getString("CNH_INVOICE_AMOUNT_ADV_2"));
                    
                    objData.AddRow(objRow);
                    rsTemp.next();
                }
            }

            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters = new HashMap();
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE", strfrom);
            Parameters.put("TO_DATE", strto);
            //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/Felt_Credit_Note/rptfeltcashSummary.rpt",Parameters,objData);                       
//            objEngine.PreviewReport("http://" + EITLERPGLOBAL.HostIP + "/EITLERP/Reports/Production/rptfeltcashSummary_1.rpt", Parameters, objData);
            objEngine.PreviewReport("http://" + EITLERPGLOBAL.HostIP + "/EITLERP/Reports/Production/rptfeltcashSummary_pro.rpt", Parameters, objData);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void GenerateCreditNoteDetail() {
        String str = IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(0, 15);
        String strfrom = IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(23, 33);
        String strto = IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(37, 47);
        String fromdt = EITLERPGLOBAL.formatDateDB(strfrom);
        String todt = EITLERPGLOBAL.formatDateDB(strto);
        System.out.println(fromdt);
        System.out.println(todt);
        System.out.println(str);
        System.out.println(strfrom);
        System.out.println(strto);

        try {

            Connection conn = data.getConn();
            Statement stmt = conn.createStatement();

            stmt.execute("TRUNCATE PRODUCTION.TMP_99");

            //stmt.execute("INSERT INTO PRODUCTION.TMP_99 SELECT PARTY_CODE,INVOICE_NO,INVOICE_DATE,PAYMENT_TERM,CASE WHEN SUBSTRING(PAYMENT_TERM,1,1) IN(9) THEN TOTAL_NET_AMOUNT END AS 09_INV_AMT,CASE WHEN SUBSTRING(PAYMENT_TERM,1,1) IN(7) THEN TOTAL_NET_AMOUNT END AS 07_INV_AMT,CASE WHEN SUBSTRING(PAYMENT_TERM,1,1) IN(1) THEN TOTAL_NET_AMOUNT END AS F6_INV_AMT,TOTAL_NET_AMOUNT,'','','','' FROM PRODUCTION.FELT_INVOICE_DATA WHERE INVOICE_DATE>='2013-04-01' AND INVOICE_DATE<='2014-03-31' AND SUBSTRING(PAYMENT_TERM,1,1) IN('1','7','9') UNION ALL SELECT DISTINCT D.SUB_ACCOUNT_CODE,D.VOUCHER_NO,D.VALUE_DATE,REASON_CODE,'','','','',SUM(D.AMOUNT),'','','' FROM FINANCE.D_FIN_VOUCHER_HEADER H,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO=D.VOUCHER_NO AND D.VALUE_DATE>='2013-04-01' AND D.VALUE_DATE<='2014-03-31' AND H.BOOK_CODE=17 AND REASON_CODE IN('03','10','11') AND D.SUB_ACCOUNT_CODE!='' AND D.VOUCHER_NO LIKE 'CN%' AND H.APPROVED=1 AND H.CANCELLED=0 GROUP BY D.SUB_ACCOUNT_CODE,D.VOUCHER_NO");
//            String sql = "INSERT INTO PRODUCTION.TMP_99 SELECT PARTY_CODE,INVOICE_NO,INVOICE_DATE,PAYMENT_TERM,CASE WHEN SUBSTRING(PAYMENT_TERM,1,1) IN(9) THEN TOTAL_NET_AMOUNT END AS 09_INV_AMT,CASE WHEN SUBSTRING(PAYMENT_TERM,1,1) IN(7) THEN TOTAL_NET_AMOUNT END AS 07_INV_AMT,CASE WHEN SUBSTRING(PAYMENT_TERM,1,1) IN(1) THEN TOTAL_NET_AMOUNT END AS F6_INV_AMT,TOTAL_NET_AMOUNT,'','','','' FROM PRODUCTION.FELT_INVOICE_DATA WHERE INVOICE_DATE>='"+fromdt+"' AND INVOICE_DATE<='"+todt+"' AND SUBSTRING(PAYMENT_TERM,1,1) IN('1','7','9') UNION ALL SELECT DISTINCT D.SUB_ACCOUNT_CODE,D.VOUCHER_NO,D.VALUE_DATE,REASON_CODE,'','','','',SUM(D.AMOUNT),'','','' FROM FINANCE.D_FIN_VOUCHER_HEADER H,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO=D.VOUCHER_NO AND D.VALUE_DATE>='"+fromdt+"' AND D.VALUE_DATE<='"+todt+"' AND H.BOOK_CODE=17 AND REASON_CODE IN('03','10','11') AND D.SUB_ACCOUNT_CODE!='' AND D.VOUCHER_NO LIKE 'CN%' AND H.APPROVED=1 AND H.CANCELLED=0 GROUP BY D.SUB_ACCOUNT_CODE,D.VOUCHER_NO";
            String sql = "INSERT INTO PRODUCTION.TMP_99 SELECT PARTY_CODE,INVOICE_NO,INVOICE_DATE,CONCAT(SUBSTRING(CHARGE_CODE,2,1),SUBSTRING(DESP_MODE,2,1)) AS PAYMENT_TERM,CASE WHEN SUBSTRING(CHARGE_CODE,2,1) IN (9) THEN INVOICE_AMT END AS 09_INV_AMT,CASE WHEN SUBSTRING(CHARGE_CODE,2,1) IN (7) THEN INVOICE_AMT END AS 07_INV_AMT,CASE WHEN SUBSTRING(CHARGE_CODE,2,1) IN (1) THEN INVOICE_AMT END AS F6_INV_AMT,INVOICE_AMT,'','','','' FROM PRODUCTION.FELT_SAL_INVOICE_HEADER WHERE INVOICE_DATE>='" + fromdt + "' AND INVOICE_DATE<='" + todt + "' AND SUBSTRING(CHARGE_CODE,2,1) IN ('1','7','9') AND APPROVED=1 AND CANCELLED=0 UNION ALL SELECT DISTINCT D.SUB_ACCOUNT_CODE,D.VOUCHER_NO,D.VALUE_DATE,REASON_CODE,'','','','',SUM(D.AMOUNT),'','','' FROM FINANCE.D_FIN_VOUCHER_HEADER H,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO=D.VOUCHER_NO AND D.VALUE_DATE>='" + fromdt + "' AND D.VALUE_DATE<='" + todt + "' AND H.BOOK_CODE=17 AND REASON_CODE IN ('03','10','11') AND D.SUB_ACCOUNT_CODE!='' AND D.VOUCHER_NO LIKE 'CN%' AND H.APPROVED=1 AND H.CANCELLED=0 GROUP BY D.SUB_ACCOUNT_CODE,D.VOUCHER_NO";
            System.out.println(sql);
            stmt.execute("INSERT INTO PRODUCTION.TMP_99 SELECT PARTY_CODE,INVOICE_NO,INVOICE_DATE,CONCAT(SUBSTRING(CHARGE_CODE,2,1),SUBSTRING(DESP_MODE,2,1)) AS PAYMENT_TERM,CASE WHEN SUBSTRING(CHARGE_CODE,2,1) IN (9) THEN INVOICE_AMT END AS 09_INV_AMT,CASE WHEN SUBSTRING(CHARGE_CODE,2,1) IN (7) THEN INVOICE_AMT END AS 07_INV_AMT,CASE WHEN SUBSTRING(CHARGE_CODE,2,1) IN (1) THEN INVOICE_AMT END AS F6_INV_AMT,INVOICE_AMT,0,0,0,'' FROM PRODUCTION.FELT_SAL_INVOICE_HEADER WHERE INVOICE_DATE>='" + fromdt + "' AND INVOICE_DATE<='" + todt + "' AND SUBSTRING(CHARGE_CODE,2,1) IN ('1','7','9') AND APPROVED=1 AND CANCELLED=0 ");

            stmt.execute("INSERT INTO PRODUCTION.TMP_99 SELECT DISTINCT D.SUB_ACCOUNT_CODE,D.VOUCHER_NO,D.VALUE_DATE,REASON_CODE,0,0,0,0,SUM(D.AMOUNT),0,0,'' FROM FINANCE.D_FIN_VOUCHER_HEADER H,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO=D.VOUCHER_NO AND D.VALUE_DATE>='" + fromdt + "' AND D.VALUE_DATE<='" + todt + "' AND H.BOOK_CODE=17 AND REASON_CODE IN('03','10','11') AND D.SUB_ACCOUNT_CODE!='' AND D.VOUCHER_NO LIKE 'CN%' AND H.APPROVED=1 AND H.CANCELLED=0 GROUP BY D.SUB_ACCOUNT_CODE,D.VOUCHER_NO");

            stmt.execute("DELETE FROM PRODUCTION.TMP_99 WHERE LENGTH(COL4)>2");

            stmt.execute("UPDATE PRODUCTION.TMP_99, PRODUCTION.FELT_PARTY_GROUP SET COL11 = GRP_PARENT_PARTY WHERE COL1=GRP_PARTY_CODE");

            stmt.execute("UPDATE PRODUCTION.TMP_99 SET COL11=COL1 WHERE COL11=''");

            stmt.execute("TRUNCATE PRODUCTION.TMP_98");

            stmt.execute("INSERT INTO PRODUCTION.TMP_98 SELECT COL11,SUM(COL8)-SUM(COL9),0,0 FROM PRODUCTION.TMP_99 GROUP BY COL11");

            stmt.execute("UPDATE PRODUCTION.TMP_98 SET COL3 = CASE WHEN COL2 < 300000 THEN 0 WHEN COL2 >= 300000 AND COL2 < 500000 THEN 2.5  WHEN COL2 >= 500000 AND COL2 < 1000000 THEN 3.0  WHEN COL2 >= 1000000 AND COL2 < 2500000 THEN 3.5  WHEN COL2 >= 2500000 AND COL2 < 5000000 THEN 4.5 WHEN COL2 >= 5000000 AND COL2 < 10000000 THEN 5.0 WHEN COL2 >= 10000000  THEN 5.5 END");

            stmt.execute("UPDATE PRODUCTION.TMP_99 A, PRODUCTION.TMP_98 B SET A.COL10 = B.COL3 WHERE A.COL11=B.COL1");

            //1819 POLICY AMENDMENT
            stmt.execute("UPDATE PRODUCTION.TMP_99 , PRODUCTION.FELT_CREDIT_NOTE_PARTY_DISC_DEDUCTION SET COL10 = (COL10 - DISC_DEDUCTION) WHERE COL1=DISC_PARTY_CODE AND DISC_TYPE='FELTCASH' AND COL3 >= DISC_FROM_DATE AND COL3 <= DISC_TO_DATE ");

            stmt.execute("UPDATE DINESHMILLS.D_SAL_PARTY_MASTER,PRODUCTION.TMP_99 SET COL12 = PARTY_NAME WHERE COL1 = PARTY_CODE");

            TReportWriter.SimpleDataProvider.TTable objData = new TReportWriter.SimpleDataProvider.TTable();

            objData.AddColumn("COL1");
            objData.AddColumn("COL2");
            objData.AddColumn("COL3");
            objData.AddColumn("COL4");
            objData.AddColumn("COL5");
            objData.AddColumn("COL6");
            objData.AddColumn("COL7");
            objData.AddColumn("COL8");
            objData.AddColumn("COL9");
            objData.AddColumn("COL10");
            objData.AddColumn("COL11");
            objData.AddColumn("COL12");

            String strSQL = "SELECT * FROM PRODUCTION.TMP_99 ORDER BY COL11,COL2";
            ResultSet rsTemp = data.getResult(strSQL);
            rsTemp.first();
            if (rsTemp.getRow() > 0) {
                while (!rsTemp.isAfterLast()) {
                    TReportWriter.SimpleDataProvider.TRow objRow = objData.newRow();

                    objRow.setValue("COL1", rsTemp.getString("COL1"));
                    objRow.setValue("COL2", rsTemp.getString("COL2"));
                    objRow.setValue("COL3", rsTemp.getString("COL3"));
                    objRow.setValue("COL4", rsTemp.getString("COL4"));
                    objRow.setValue("COL5", rsTemp.getString("COL5"));
                    objRow.setValue("COL6", rsTemp.getString("COL6"));
                    objRow.setValue("COL7", rsTemp.getString("COL7"));
                    objRow.setValue("COL8", rsTemp.getString("COL8"));
                    objRow.setValue("COL9", rsTemp.getString("COL9"));
                    objRow.setValue("COL10", rsTemp.getString("COL10"));
                    objRow.setValue("COL11", rsTemp.getString("COL11"));
                    objRow.setValue("COL12", rsTemp.getString("COL12"));
                    objData.AddRow(objRow);
                    rsTemp.next();
                }
            }

            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters = new HashMap();
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE", strfrom);
            Parameters.put("TO_DATE", strto);
            objEngine.PreviewReport("http://" + EITLERPGLOBAL.HostIP + "/EITLERP/Reports/Production/rptFeltCashDetail.rpt", Parameters, objData);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void getDept() {

        if (EITLERPGLOBAL.gUserDeptID == 4 || EITLERPGLOBAL.gUserDeptID == 0) {
            txtFromDate.setEnabled(true);
            txtToDate.setEnabled(false);
            txtToDate.setVisible(true);
            Processcash.setEnabled(true);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
            jButton6.setEnabled(true);
        } else {
            txtFromDate.setEnabled(false);
            txtToDate.setEnabled(false);
            txtToDate.setVisible(true);
            Processcash.setEnabled(false);
            jButton5.setEnabled(true);
            jButton4.setEnabled(true);
            jButton6.setEnabled(true);
            jButton3.setEnabled(true);
        }
    }

    public String getYear() {
        String Date = data.getStringValueFromDB("SELECT YEAR('" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "')+1 FROM DUAL");
        return Date;
    }

}
