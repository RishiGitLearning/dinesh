/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.FeltDesignMaster.DesignActiveStatus;

import EITLERP.AppletFrame;
import EITLERP.ComboData;
import EITLERP.EITLComboModel;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableCellRenderer;
import EITLERP.EITLTableModel;
import EITLERP.FeltSales.PieceRegister.clsIncharge;
import EITLERP.FeltSales.common.FeltInvCalc;
import EITLERP.FeltSales.common.LOV;
import EITLERP.Loader;
import EITLERP.Production.clsFeltProductionApprovalFlow;
import EITLERP.SelectFirstFree;
import EITLERP.clsAuthority;
import EITLERP.clsDepartment;
import EITLERP.clsDocFlow;
import EITLERP.clsFirstFree;
import EITLERP.clsHierarchy;
import EITLERP.clsUser;
import EITLERP.data;
import EITLERP.frmPendingApprovals;
import TReportWriter.TReportEngine;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
//import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author DAXESH PRAJAPATI
 *
 */
public class FrmDesignActiveStatus extends javax.swing.JApplet {

    private EITLTableModel DataModel;
    private EITLTableCellRenderer Renderer1 = new EITLTableCellRenderer();
    private EITLTableCellRenderer Renderer_realese = new EITLTableCellRenderer();
    public boolean PENDING_DOCUMENT = false; //for refresh pending document module
    public frmPendingApprovals frmPA;
    private EITLComboModel cmbIncharge;
    int USER_ID = EITLERPGLOBAL.gUserID;
    /**
     * Initializes the applet FrmFeltOrder
     */
    @Override
    public void init() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(dim.width, dim.height);
        initComponents();
        FormatGrid();
        //FormatGrid_OldTransaction();
        DefaultSettings();
        cmbIncharge = new EITLComboModel();
       
        SetFields(false);
        DisplayData();
        
        
//        if(USER_ID==352)//North: Mr. Mitang Lad
//        {
//            cmbIncharge.setSelectedItem("NORTH");
//            cmbZone.setEnabled(false);
//            btnSave.setEnabled(true);
//        }
//        else if(USER_ID==136)//East/West: Mr. Jaydeep Pandya
//        {
//            cmbIncharge.setSelectedItem("EAST/WEST");
//            cmbZone.setEnabled(false);
//            btnSave.setEnabled(true);
//        }
//        else if(USER_ID==318)//East/West: Mr. Jaydeep Pandya
//        {
//            cmbIncharge.setSelectedItem("EAST/WEST");
//            cmbZone.setEnabled(false);
//            btnSave.setEnabled(true);
//        }
//        else if(USER_ID==329)//ACNE: Mr. Anup Singh
//        {
//            cmbIncharge.setSelectedItem("ACNE");
//            cmbZone.setEnabled(false);
//            btnSave.setEnabled(true);
//        }
//        else if(USER_ID==331)//South: Mr. Siddharth NeogiC
//        {
//            cmbIncharge.setSelectedItem("SOUTH");
//            cmbZone.setEnabled(false);
//            btnSave.setEnabled(true);
//        }
        
    }
    
    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    public void DefaultSettings() {

        //String data = toString();
        Object[] rowData = new Object[15];
        rowData[0] = "1";
        DataModel.addRow(rowData);

        clearFields();
    }
   
    private void clearFields() {
        
        for (int i = 0; i < DataModel.getRowCount(); i++) {
            DataModel.removeRow(i);
        }
        if (DataModel.getRowCount() > 0) {
            DataModel.removeRow(0);
        }
        Object[] rowData = new Object[15];
        rowData[0] = 1;
        DataModel.addRow(rowData);
    }

    private void DisplayData() {
        try{
            clearFields();
            FormatGrid();
//            
//            String InchargeCode = data.getStringValueFromDB("SELECT INCHARGE_CD FROM PRODUCTION.FELT_INCHARGE where INCHARGE_NAME='"+cmbZone.getSelectedItem()+"'");
//            System.out.println("Incharge Code : "+InchargeCode);
//            
//            String Doc_No = data.getStringValueFromDB("SELECT * FROM PRODUCTION.FELT_SALES_SPILOVER_UPN_AREAINCHARGE_HEADER WHERE INCHARGE='"+InchargeCode+"'");
//            txtDocNo.setText(Doc_No);
//            lblTitle.setText("Felt Sales Spilover Piece UPN wise divert (Area Incharge) - " + Doc_No);
//
//            String str_query = "SELECT * FROM PRODUCTION.FELT_SALES_SPILOVER_UPN_AREAINCHARGE_DETAIL WHERE DOC_NO='"+Doc_No+"' AND ENTRY_STATUS='ACTIVE'";
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            String sql = "SELECT * FROM PRODUCTION.FELT_DESIGN_MASTER_HEADER where UPN_NO!='' ";
            
            if(!txtPartyCode.getText().equals(""))
            {
                sql = sql + " AND PARTY_CODE='"+txtPartyCode.getText()+"'";
            }
            if(!txtStyle.getText().equals(""))
            {
                sql = sql + " AND STYLE='"+txtStyle.getText()+"'";
            }
            ResultSet resultSet = statement.executeQuery(sql);
            int srNo = 0;
            
            while (resultSet.next()) {
                srNo++;
                int NewRow = srNo - 1;

                Object[] rowData = new Object[1];
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SrNo", srNo + "", NewRow);
                
                DataModel.setValueByVariable("UPN_NO", resultSet.getString("UPN_NO"), NewRow);
                DataModel.setValueByVariable("REVISION_NO", resultSet.getString("DESIGN_REVISION_NO"), NewRow);
                if(resultSet.getString("DESIGN_ACTIVE_STATUS").equals("0"))
                {
                    DataModel.setValueByVariable("CURRENT_STATUS", "ACTIVE", NewRow);
                }
                else
                {
                    DataModel.setValueByVariable("CURRENT_STATUS", "INACTIVE", NewRow);
                }
                DataModel.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_NAME", resultSet.getString("PARTY_NAME"), NewRow);
                DataModel.setValueByVariable("PRESS_CATEGORY", resultSet.getString("PRESS_CATEGORY"), NewRow);
                DataModel.setValueByVariable("STYLE", resultSet.getString("STYLE"), NewRow);
                DataModel.setValueByVariable("PRODUCT_GROUP", resultSet.getString("PRODUCT_GROUP"), NewRow);
                DataModel.setValueByVariable("PRODUCT_CODE", resultSet.getString("PRODUCT_CODE"), NewRow);
                DataModel.setValueByVariable("LENGTH", resultSet.getString("LENGTH"), NewRow);
                DataModel.setValueByVariable("WIDTH", resultSet.getString("WIDTH"), NewRow);
                DataModel.setValueByVariable("GSM", resultSet.getString("GSM"), NewRow);
                DataModel.setValueByVariable("SQMTR", resultSet.getString("SQMTR"), NewRow);
                DataModel.setValueByVariable("WEIGHT", resultSet.getString("WEIGHT"), NewRow);
                DataModel.setValueByVariable("WARP", resultSet.getString("WARP"), NewRow);
                DataModel.setValueByVariable("WEFT", resultSet.getString("WEFT"), NewRow);
                DataModel.setValueByVariable("ENDS_10CM", resultSet.getString("ENDS_10CM"), NewRow);
                DataModel.setValueByVariable("PICKS_10CM", resultSet.getString("PICKS_10CM"), NewRow);
                DataModel.setValueByVariable("WIDTH_FACT", resultSet.getString("WIDTH_FACT"), NewRow);
                DataModel.setValueByVariable("NO_ENDS", resultSet.getString("NO_ENDS"), NewRow);
                DataModel.setValueByVariable("REED", resultSet.getString("REED"), NewRow);
                DataModel.setValueByVariable("REED_SPACE", resultSet.getString("REED_SPACE"), NewRow);
                DataModel.setValueByVariable("WEAVE", resultSet.getString("WEAVE"), NewRow);
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    

    private void FormatGrid() {
        try {
            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("Select Status"); 
            DataModel.addColumn("Current Status");
            DataModel.addColumn("UPN_NO"); 
            DataModel.addColumn("Revision No"); 
            DataModel.addColumn("PARTY_CODE"); 
            DataModel.addColumn("PARTY_NAME"); 
            DataModel.addColumn("PRESS_CATEGORY"); 
            DataModel.addColumn("STYLE"); 
            DataModel.addColumn("PRODUCT_GROUP"); 
            DataModel.addColumn("PRODUCT_CODE");
            DataModel.addColumn("LENGTH"); 
            DataModel.addColumn("WIDTH"); 
            DataModel.addColumn("GSM"); 
            DataModel.addColumn("SQMTR");
            DataModel.addColumn("WEIGHT"); 
            DataModel.addColumn("WARP"); 
            DataModel.addColumn("WEFT"); 
            DataModel.addColumn("ENDS_10CM"); 
            DataModel.addColumn("PICKS_10CM"); 
            DataModel.addColumn("WIDTH_FACT"); 
            DataModel.addColumn("NO_ENDS"); 
            DataModel.addColumn("REED");
            DataModel.addColumn("REED_SPACE"); 
            DataModel.addColumn("WEAVE"); 
            
            
            DataModel.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel.SetVariable(1, "SELECT_STATUS"); 
            DataModel.SetVariable(2, "CURRENT_STATUS"); 
            DataModel.SetVariable(3, "UPN_NO"); 
            DataModel.SetVariable(4, "REVISION_NO"); 
            DataModel.SetVariable(5, "PARTY_CODE"); 
            DataModel.SetVariable(6, "PARTY_NAME"); 
            DataModel.SetVariable(7, "PRESS_CATEGORY"); 
            DataModel.SetVariable(8, "STYLE"); 
            DataModel.SetVariable(9, "PRODUCT_GROUP"); 
            DataModel.SetVariable(10, "PRODUCT_CODE"); 
            DataModel.SetVariable(11, "LENGTH"); 
            DataModel.SetVariable(12, "WIDTH"); 
            DataModel.SetVariable(13, "GSM"); 
            DataModel.SetVariable(14, "SQMTR"); 
            DataModel.SetVariable(15, "WEIGHT"); 
            DataModel.SetVariable(16, "WARP"); 
            DataModel.SetVariable(17, "WEFT"); 
            DataModel.SetVariable(18, "ENDS_10CM"); 
            DataModel.SetVariable(19, "PICKS_10CM"); 
            DataModel.SetVariable(20, "WIDTH_FACT"); 
            DataModel.SetVariable(21, "NO_ENDS"); 
            DataModel.SetVariable(22, "REED"); 
            DataModel.SetVariable(23, "REED_SPACE"); 
            DataModel.SetVariable(24, "WEAVE"); 
            
            
            Table.getColumnModel().getColumn(0).setMaxWidth(40);
            Table.getColumnModel().getColumn(1).setMinWidth(140);
            Table.getColumnModel().getColumn(2).setMinWidth(140);
            Table.getColumnModel().getColumn(3).setMinWidth(120);
            Table.getColumnModel().getColumn(4).setMinWidth(120);
            Table.getColumnModel().getColumn(5).setMinWidth(120);
            Table.getColumnModel().getColumn(6).setMinWidth(120);
            Table.getColumnModel().getColumn(7).setMinWidth(120);
            Table.getColumnModel().getColumn(8).setMinWidth(120);
            Table.getColumnModel().getColumn(9).setMinWidth(120);
            Table.getColumnModel().getColumn(10).setMinWidth(120);
            Table.getColumnModel().getColumn(11).setMinWidth(120);
            Table.getColumnModel().getColumn(12).setMinWidth(120);
            Table.getColumnModel().getColumn(13).setMinWidth(120);
            Table.getColumnModel().getColumn(14).setMinWidth(120);
            Table.getColumnModel().getColumn(15).setMinWidth(120);
            Table.getColumnModel().getColumn(16).setMinWidth(120);
            Table.getColumnModel().getColumn(17).setMinWidth(120);
            Table.getColumnModel().getColumn(18).setMinWidth(120);
            Table.getColumnModel().getColumn(19).setMinWidth(120);
            Table.getColumnModel().getColumn(20).setMinWidth(120);
            Table.getColumnModel().getColumn(21).setMinWidth(120);
            Table.getColumnModel().getColumn(22).setMinWidth(120);
            Table.getColumnModel().getColumn(23).setMinWidth(120);
            Table.getColumnModel().getColumn(24).setMinWidth(120);
            
            TableColumn layerColumn = Table.getColumnModel().getColumn(DataModel.getColFromVariable("SELECT_STATUS"));
            JComboBox layerbox = new JComboBox();
            layerbox.addItem("ACTIVE");
            layerbox.addItem("INACTIVE");
            layerColumn.setCellEditor(new DefaultCellEditor(layerbox));
            
//            int ImportCol2 = DataModel.getColFromVariable("HOLD_FOR_MAPPING");
//            Renderer1.setCustomComponent(ImportCol2, "CheckBox");
//            JCheckBox aCheckBox2 = new JCheckBox();
//            aCheckBox2.setBackground(Color.WHITE);
//            aCheckBox2.setVisible(true);
//            aCheckBox2.setSelected(false);
//            Table.getColumnModel().getColumn(ImportCol2).setCellEditor(new DefaultCellEditor(aCheckBox2));
//            Table.getColumnModel().getColumn(ImportCol2).setCellRenderer(Renderer1);
            
//            int ImportCol3 = DataModel.getColFromVariable("COMBINATION_UPN");
//            Renderer1.setCustomComponent(ImportCol3, "CheckBox");
//            JCheckBox aCheckBox3 = new JCheckBox();
//            aCheckBox3.setBackground(Color.WHITE);
//            aCheckBox3.setVisible(true);
//            aCheckBox3.setSelected(false);
//            Table.getColumnModel().getColumn(ImportCol3).setCellEditor(new DefaultCellEditor(aCheckBox3));
//            Table.getColumnModel().getColumn(ImportCol3).setCellRenderer(Renderer1);
            
            DataModel.SetReadOnly(0);
           // DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);
            DataModel.SetReadOnly(7);
            DataModel.SetReadOnly(8);
            DataModel.SetReadOnly(9);
            DataModel.SetReadOnly(10);
            DataModel.SetReadOnly(11);
            DataModel.SetReadOnly(12);
            DataModel.SetReadOnly(13);
            DataModel.SetReadOnly(14);
            DataModel.SetReadOnly(15);
            DataModel.SetReadOnly(16);
            DataModel.SetReadOnly(17);
            DataModel.SetReadOnly(18);
            DataModel.SetReadOnly(19);
            DataModel.SetReadOnly(20);
            DataModel.SetReadOnly(21);
            
            if(USER_ID==109 || USER_ID==306)
            {
                
            }
            else
            {
                for(int i=0;i<DataModel.getColumnCount();i++)
                {
                    DataModel.SetReadOnly(i);
                }
            }
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        txtPartyName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtStyle = new javax.swing.JTextField();
        btnShowData = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        ltbPink = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        Tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setSelectionBackground(new java.awt.Color(208, 220, 234));
        Table.setSelectionForeground(new java.awt.Color(231, 16, 16));
        Table.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                TableAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Table.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TableFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TableFocusLost(evt);
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        Table.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                TableCaretPositionChanged(evt);
            }
        });
        Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 1250, 410);

        btnSave.setText("SAVE");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave);
        btnSave.setBounds(1140, 480, 120, 30);

        jLabel1.setText("Party Code");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 10, 100, 20);

        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });
        jPanel1.add(txtPartyCode);
        txtPartyCode.setBounds(100, 10, 100, 20);

        txtPartyName.setEditable(false);
        jPanel1.add(txtPartyName);
        txtPartyName.setBounds(200, 10, 320, 20);

        jLabel2.setText("Style");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 40, 80, 20);

        txtStyle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStyleKeyPressed(evt);
            }
        });
        jPanel1.add(txtStyle);
        txtStyle.setBounds(100, 37, 140, 20);

        btnShowData.setText("Show Data");
        btnShowData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowDataActionPerformed(evt);
            }
        });
        jPanel1.add(btnShowData);
        btnShowData.setBounds(590, 10, 160, 30);

        Tab.addTab("Design Active/In-Active Status (Design)", jPanel1);

        getContentPane().add(Tab);
        Tab.setBounds(0, 40, 1280, 560);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("Design Active/In-Active Status ");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 10, 1280, 25);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 580, 930, 22);
        getContentPane().add(jPanel5);
        jPanel5.setBounds(210, 50, 10, 10);
        getContentPane().add(ltbPink);
        ltbPink.setBounds(10, 70, 0, 0);
    }// </editor-fold>//GEN-END:initComponents

    private void TableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyPressed
       // if (evt.getKeyCode() == 112 || evt.getKeyCode() == 10) {

        
    }//GEN-LAST:event_TableKeyPressed
    

       
    private void TabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabMouseClicked

    }//GEN-LAST:event_TabMouseClicked

    private void TableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableFocusGained
        // TODO add your handling code here:
        if (Table.getSelectedColumn() == 1) {
//            lblStatus1.setText("Press F1 for selection Machine No and Position No");
        } else {
//            lblStatus1.setText("");
        }
    }//GEN-LAST:event_TableFocusGained

    private void TableAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TableAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TableAncestorMoved

    private void TableCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_TableCaretPositionChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TableCaretPositionChanged

    private void TableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableFocusLost
        // TODO add your handling code here:if(Table.getSelectedColumn() == 1)
//        lblStatus1.setText("");
    }//GEN-LAST:event_TableFocusLost

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        //jdbc:mysql://200.0.0.230:3306/PRODUCTION
        
    }//GEN-LAST:event_TableMouseClicked
    

    private void TableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyReleased
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_TableKeyReleased

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i <= Table.getRowCount() - 1; i++) {

            if(!DataModel.getValueByVariable("SELECT_STATUS", i).equals(""))
            {
                //UPDATE STATUS
                String UPN =  DataModel.getValueByVariable("UPN_NO", i);
                String RevNo =  DataModel.getValueByVariable("REVISION_NO", i);//DataModel.SetVariable(4, ""); 
                String Current_Status = DataModel.getValueByVariable("CURRENT_STATUS", i);//
                try{
                        ResultSet rsTmp = data.getResult("SELECT USER()");
                        rsTmp.first();
                        String str = rsTmp.getString(1);
                        String str_split[] = str.split("@");

                        if(!UPN.equals("") && !RevNo.equals(""))
                        {
                            if(DataModel.getValueByVariable("SELECT_STATUS", i).equals("ACTIVE"))
                            {
                                 data.Execute("UPDATE PRODUCTION.FELT_DESIGN_MASTER_HEADER SET DESIGN_ACTIVE_STATUS='0' "
                                    + " WHERE UPN_NO='"+UPN+"' AND DESIGN_REVISION_NO='"+RevNo+"'");
                                 data.Execute("INSERT INTO  PRODUCTION.FELT_DESIGN_MASTER_ACTIVE_INACTIVE_STATUS_HISTORY \n" +
                                    "(UPN_NO, CURRENT_STATUS, UPDATED_STATUS, REMARK, IP_FROM, USER_ID, DATE_OF_ENTRY)\n" +
                                    "VALUES\n" +
                                    "('"+UPN+"', '"+Current_Status+"', '0', '', '"+str_split[1]+"', '"+EITLERPGLOBAL.gUserID+"', '"+EITLERPGLOBAL.getCurrentDateTimeDB()+"')");
                            }
                            else if(DataModel.getValueByVariable("SELECT_STATUS", i).equals("INACTIVE"))
                            {
                                data.Execute("UPDATE PRODUCTION.FELT_DESIGN_MASTER_HEADER SET DESIGN_ACTIVE_STATUS='1' "
                                    + " WHERE UPN_NO='"+UPN+"' AND DESIGN_REVISION_NO='"+RevNo+"'");
                                 data.Execute("INSERT INTO  PRODUCTION.FELT_DESIGN_MASTER_ACTIVE_INACTIVE_STATUS_HISTORY \n" +
                                    "(UPN_NO, CURRENT_STATUS, UPDATED_STATUS, REMARK, IP_FROM, USER_ID, DATE_OF_ENTRY)\n" +
                                    "VALUES\n" +
                                    "('"+UPN+"', '"+Current_Status+"', '1', '', '"+str_split[1]+"', '"+EITLERPGLOBAL.gUserID+"', '"+EITLERPGLOBAL.getCurrentDateTimeDB()+"')");
                            }
                        }
                }catch(Exception e)
                {
                    e.printStackTrace();
                }
            }
       }
       DisplayData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnShowDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowDataActionPerformed
        // TODO add your handling code here:
        DisplayData();
    }//GEN-LAST:event_btnShowDataActionPerformed

    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 112) {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010' AND PARTY_CLOSE_IND!=1 ";
                aList.ReturnCol = 1;
                aList.ShowReturnCol = true;
                aList.DefaultSearchOn = 2;
                aList.UseSpecifiedConn = true;
                aList.dbURL = EITLERPGLOBAL.DatabaseURL;

                if (aList.ShowLOV()) {
                    txtPartyCode.setText(aList.ReturnVal);
                    txtPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE PARTY_CODE='"+aList.ReturnVal+"'"));
                }
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed

    private void txtStyleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStyleKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 112) {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
                aList.SQL = "SELECT distinct STYLE FROM PRODUCTION.FELT_DESIGN_MASTER_HEADER";
                aList.ReturnCol = 1;
                aList.ShowReturnCol = true;
                aList.DefaultSearchOn = 2;
                aList.UseSpecifiedConn = true;
                aList.dbURL = EITLERPGLOBAL.DatabaseURL;

                if (aList.ShowLOV()) {
                    txtStyle.setText(aList.ReturnVal);
                }
        }
    }//GEN-LAST:event_txtStyleKeyPressed
    

    

    private void Save() {

        
    }

    private void SetFields(boolean pStat) {

        Table.setEnabled(pStat);
        
        if(USER_ID==109 || USER_ID==306)
        {
            //DataModel.SetReadOnly(1);
            btnSave.setEnabled(true);
            Table.setEnabled(true);
        }
        else
        {
            DataModel.SetReadOnly(1);
            btnSave.setEnabled(false);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JTable Table;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnShowData;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel ltbPink;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtPartyName;
    private javax.swing.JTextField txtStyle;
    // End of variables declaration//GEN-END:variables

    
}
