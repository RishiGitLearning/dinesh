/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.FeltDesignMaster;

import EITLERP.*;
import EITLERP.EITLComboModel;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableModel;
import EITLERP.FeltSales.Order.searchkey;
import EITLERP.FeltSales.common.LOV;
import EITLERP.Loader;
import EITLERP.Production.clsFeltProductionApprovalFlow;
import EITLERP.ReportRegister;
import EITLERP.SelectFirstFree;
import EITLERP.clsAuthority;
import EITLERP.clsDepartment;
import EITLERP.clsDocFlow;
import EITLERP.clsFirstFree;
import EITLERP.clsHierarchy;
import EITLERP.clsSales_Party;
import EITLERP.clsUser;
import EITLERP.data;
import EITLERP.frmPendingApprovals;
import TReportWriter.TReportEngine;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.text.MaskFormatter;
import javax.swing.*;

/**
 *
 * @author DAXESH PRAJAPATI
 *
 */
//FELT_SALES_DESIGN_MASTER_HEADER
//FELT_SALES_DESIGN_MASTER_DETAIL
public class FrmFeltDesignMaster extends javax.swing.JApplet {

    private int EditMode = 0;
    private EITLComboModel cmbHierarchyModel;
    private EITLComboModel cmbToModel;
    private EITLTableModel DataModelApprovalStatus;
    private EITLTableModel DataModelUpdateHistory;
    private EITLTableModel DataModel;
    //private EITLTableModel DataModel_OTHER;
    private int SelHierarchyID = 0; //Selected Hierarchy
    private int lnFromID = 0;
    private int FFNo = 0;
    private final int ModuleId = 836;
    private String DOC_NO = "";
    private clsFeltDesignMaster objDM;
    private EITLComboModel cmbSendToModel;
    private TReportEngine objEngine = new TReportEngine();
    private static DecimalFormat df2 = new DecimalFormat("#.##");
    private static DecimalFormat df_no_decimal = new DecimalFormat("#");

    String seleval = "", seltyp = "", selqlt = "", selshd = "", selpiece = "", selext = "", selinv = "", selsz = "";
    private int mlstrc;
    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
    DateFormat dateForDB = new SimpleDateFormat("yyyy-MM-dd");
    public EITLERP.FeltSales.Reports.clsExcelExporter exprt = new EITLERP.FeltSales.Reports.clsExcelExporter();

    public boolean PENDING_DOCUMENT = false; //for refresh pending document module
    public frmPendingApprovals frmPA;
    private EITLComboModel cmbIncharge;
    private double F[] = new double[100];
    private double F1[] = new double[100];

    /**
     * Initializes the applet FrmobjDM
     */
    @Override
    public void init() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(dim.width, dim.height);
        initComponents();
        GenerateCombos();

        GenerateFromCombo();
        GenerateHierarchyCombo();
        SetupApproval();
        SetMenuForRights();

        FormatGridApprovalStatus();
        FormatGridUpdateHistory();

        FormatGrid();

        DefaultSettings();
        //Cancel();
        try {
            MaskFormatter dateMask = new MaskFormatter("##/##/####");
            dateMask.setPlaceholderCharacter('_');
            dateMask.install(txtDocDate);

        } catch (ParseException ex) {
            System.out.println("Error on Mask : " + ex.getLocalizedMessage());
        }
        txtDocDate.setText(df.format(new Date()));

        objDM = new clsFeltDesignMaster();
        boolean load = objDM.LoadData();

        if (load) {
            DisplayData();
        } else {
            JOptionPane.showMessageDialog(this, "Error occured while Loading Data. Error is " + objDM.LastError, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        SelHierarchyID = EITLERPGLOBAL.getComboCode(cmbHierarchy);
        SetFields(false);

    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    public void DefaultSettings() {

        //String data = toString();
        Object[] rowData = new Object[15];
        rowData[0] = "1";

        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        clearFields();
    }

    private void clearFields() {
        txtDocNo.setText("0");
        txtPartyCode.setText("");
        txtMachineNo.setText("");
        txtPosition.setText("");
        txtPartyName.setText("");
        txtMfgLength.setText("");
        txtMkgWidth.setText("");
        txtMfgWidth.setText("");
        txtProdCategory.setText("");
        txtRef.setText("");
        txtStyle.setText("");
        txtPosDesignNo.setText("");
        txtUPN.setText("");
        txtRevision.setText("");
        txtPartyCode.setText("");
        txtProdGroup.setText("");
        txtProdCode.setText("");
        txtLength.setText("");
        txtWidth.setText("");
        txtGSM.setText("");
        txtSqmtr.setText("");
        txtWeight.setText("");
        txtResForReviasion.setText("");
        txtWARP.setText("");
        txtWEFT.setText("");
        txtENDS10CM.setText("");
        txtPICKS10CM.setText("");
        txtWidthFact.setText("");
        txtNoEnds.setText("");
        txtREED.setText("");
        txtREEDSp.setText("");
        txtWEAVE.setText("");
        txtDRAW.setText("");
        txtSYN.setText("");
        txtGSMORD.setText("");
        txtGSMMFG.setText("");
        txtWWGT.setText("");
        txtWE_WGT.setText("");
        txtTK_UP.setText("");
        txtTheoWeight.setText("");
        txtTheoLength.setText("");
        txtTheoPicks.setText("");
        txtLengthFACT.setText("");
        txtENDLength.setText("");
        txtT_Thick.setText("");
        txtTH_CFM.setText("");
        txtBASE_SKG_TOT.setText("");
        txtTOT_SKG.setText("");
        txtTrimWt.setText("");
        txtWeightRange.setText("");
        txtBillWeight.setText("");
        txtKillos.setText("");
        txtFaceSingle.setText("");
        txtPerCount.setText("");
        txtWeavingInstruction.setText("");
        txtNeedlingInstruction.setText("");
        txtTagInstruction.setText("");
        txtDryerWidthMarkWet.setText("");
        txtFinishingInstruction_new.setText("");
        txtDressDrawWeavingInstruction.setText("");
        txtBaseGSM_A.setText("");
        txtBaseGSM_B.setText("");
        txtBaseGSM.setText("");
        txtWEBGSM.setText("");
        txtTotalGSM.setText("");
        txtSafety.setText("");
        txtNeedlingTantion.setText("");
        txtPerWEB.setText("");
        txtPerSYNBase.setText("");
        txtT_TOT_WGT_PCE.setText("");
        txtPerSYNWEB.setText("");
        txtLOOM_NO.setText("");
        txtWebOnFace.setText("");
        txtWebOnBack.setText("");
        txtT_WEB_WGT.setText("");
        txtPaintLines.setText("");
        txtNeedlingTenFACT.setText("");
        txtTW_B4_ND.setText("");
        txtTW_B4_ND_B.setText("");
        txtTW_B4_ND_A.setText("");
        txtRemark.setText("");

        txtStyle1.setText("");
        txtProdGroup1.setText("");
        txtProdCode1.setText("");
        txtLength1.setText("");
        txtWidth1.setText("");
        txtWEAVE1.setText("");
        txtWEFT1.setText("");
        txtPICKS10CM1.setText("");
        txtWARP1.setText("");
        txtENDS10CM1.setText("");
        txtWidthFact1.setText("");
        txtNoEnds1.setText("");
        txtREED1.setText("");
        txtREEDSp1.setText("");
        txtWWGT1.setText("");
        txtWE_WGT1.setText("");
        txtTK_UP1.setText("");
        txtTheoWeight1.setText("");
        txtTheoLength1.setText("");
        txtTheoPicks1.setText("");
        txtLengthFACT1.setText("");
        txtENDLength1.setText("");
        txtBASE_SKG_TOT1.setText("");
        txtFinishingInstruction_new1.setText("");
        
        txtWARP_Detail.setText("");
        txtWEFT_Detail.setText("");
        txtWarpDetail1.setText("");
        txtWeftDetail1.setText("");
        txtBackSingle.setText("");
        
        //JOptionPane.showMessageDialog(null, "Data Model size : "+DataModel.getRowCount());
        FormatGridApprovalStatus();
        FormatGridUpdateHistory();

        FormatGrid();

        // FormatGridA();
        FormatGridHS();
    }

    private void DisplayData() {

        //=========== Color Indication ===============//
        try {

            if (objDM.getAttribute("APPROVED").getInt() == 1) {
                lblTitle.setBackground(Color.BLUE);
                lblTitle.setForeground(Color.WHITE);
            }

            if (objDM.getAttribute("APPROVED").getInt() == 0) {
                lblTitle.setBackground(Color.GRAY);
                lblTitle.setForeground(Color.BLACK);
            }

            if (objDM.getAttribute("CANCELED").getInt() == 1) {
                lblTitle.setBackground(Color.RED);
                lblTitle.setForeground(Color.BLACK);
            }
        } catch (Exception c) {

            c.printStackTrace();
        }
        //============================================//

        //========= Authority Delegation Check =====================//
        if (EITLERPGLOBAL.gAuthorityUserID != EITLERPGLOBAL.gUserID) {

            if (clsAuthority.IsAuthorityGiven(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, EITLERPGLOBAL.gAuthorityUserID, ModuleId)) {
                EITLERPGLOBAL.gNewUserID = EITLERPGLOBAL.gAuthorityUserID;
            } else {
                EITLERPGLOBAL.gNewUserID = EITLERPGLOBAL.gUserID;
            }
        }
        //==========================================================//

        //clsobjDM.ChangeVoucherNo=false;
        clearFields();
        try {
            txtDocNo.setText(objDM.getAttribute("DESIGN_DOC_NO").getString());
            lblTitle.setText("Felt Design Master - " + objDM.getAttribute("DESIGN_DOC_NO").getString());
            txtDocDate.setText(EITLERPGLOBAL.formatDate(objDM.getAttribute("DESIGN_DOC_DATE").getString()));
            lblRevNo.setText(Integer.toString((int) objDM.getAttribute("REVISION_NO").getVal()));
            txtLayerType.setText(objDM.getAttribute("LAYER_TYPE").getString());
            txtRevision.setText(objDM.getAttribute("DESIGN_REVISION_NO").getString());
            txtUPN.setText(objDM.getAttribute("UPN_NO").getString());
            txtPartyCode.setText(objDM.getAttribute("PARTY_CODE").getString());
            txtPartyName.setText(objDM.getAttribute("PARTY_NAME").getString());
            txtMachineNo.setText(objDM.getAttribute("MACHINE_NO").getString());
            txtPosition.setText(objDM.getAttribute("POSITION_NO").getString());
            txtPositionDesc.setText(data.getStringValueFromDB("SELECT POSITION_DESC FROM PRODUCTION.FELT_MACHINE_POSITION_MST WHERE POSITION_NO="+objDM.getAttribute("POSITION_NO").getString()));
            txtPosDesignNo.setText(objDM.getAttribute("POSITION_DESIGN_NO").getString());
            txtRef.setText(objDM.getAttribute("REFERENCE").getString());
            txtProdCategory.setText(objDM.getAttribute("PRESS_CATEGORY").getString());
            txtStyle.setText(objDM.getAttribute("STYLE").getString());
            txtProdGroup.setText(objDM.getAttribute("PRODUCT_GROUP").getString());
            txtProdCode.setText(objDM.getAttribute("PRODUCT_CODE").getString());
            txtLength.setText(objDM.getAttribute("LENGTH").getString());
            txtMfgLength.setText(objDM.getAttribute("MFG_LENGTH").getString());
            txtWidth.setText(objDM.getAttribute("WIDTH").getString());
            txtGSM.setText(objDM.getAttribute("GSM").getString());
            txtSqmtr.setText(objDM.getAttribute("SQMTR").getString());
            txtWeight.setText(objDM.getAttribute("WEIGHT").getString());
            txtResForReviasion.setText(objDM.getAttribute("REASON_OF_REVISION").getString());
            txtWARP.setText(objDM.getAttribute("WARP").getString());
            txtWEFT.setText(objDM.getAttribute("WEFT").getString());
            txtENDS10CM.setText(objDM.getAttribute("ENDS_10CM").getString());
            txtPICKS10CM.setText(objDM.getAttribute("PICKS_10CM").getString());
            txtWidthFact.setText(objDM.getAttribute("WIDTH_FACT").getString());
            txtNoEnds.setText(objDM.getAttribute("NO_ENDS").getString());
            txtREED.setText(objDM.getAttribute("REED").getString());
            txtREEDSp.setText(objDM.getAttribute("REED_SPACE").getString());
            txtWEAVE.setText(objDM.getAttribute("WEAVE").getString());
            txtDRAW.setText(objDM.getAttribute("DRAW").getString());
            txtSYN.setText(objDM.getAttribute("SYN").getString());
            txtGSMORD.setText(objDM.getAttribute("GSM_ORD").getString());
            txtGSMMFG.setText(objDM.getAttribute("GSM_MFG").getString());
            txtWWGT.setText(objDM.getAttribute("W_WGT").getString());
            txtWE_WGT.setText(objDM.getAttribute("WE_WGT").getString());
            txtTK_UP.setText(objDM.getAttribute("TK_UP").getString());
            txtTheoWeight.setText(objDM.getAttribute("THEO_WEIGHT").getString());
            txtTheoLength.setText(objDM.getAttribute("THEO_LENGTH").getString());
            txtTheoPicks.setText(objDM.getAttribute("THEO_PICKS").getString());
            txtLengthFACT.setText(objDM.getAttribute("LENGTH_FACT").getString());
            txtENDLength.setText(objDM.getAttribute("END_LENGTH").getString());
            txtT_Thick.setText(objDM.getAttribute("T_THICK").getString());
            txtTH_CFM.setText(objDM.getAttribute("THEO_CFM").getString());
            txtBASE_SKG_TOT.setText(objDM.getAttribute("BASE_SKG_TOTAL").getString());
            txtTOT_SKG.setText(objDM.getAttribute("TOTAL_SKG").getString());
            txtTrimWt.setText(objDM.getAttribute("TRIM_WEIGHT").getString());
            txtWeightRange.setText(objDM.getAttribute("WEIGHT_RANGE").getString());
            txtBillWeight.setText(objDM.getAttribute("BILL_WEIGHT").getString());
            txtKillos.setText(objDM.getAttribute("KILLOS").getString());
            txtFaceSingle.setText(objDM.getAttribute("FACE_SINGLE").getString());
            txtBackSingle.setText(objDM.getAttribute("BACK_SINGLE").getString());
            txtPerCount.setText(objDM.getAttribute("PER_COUNT").getString());
            txtWeavingInstruction.setText(objDM.getAttribute("WEAVING_INSTRUCTION").getString());
            txtDryerWidthMarkWet.setText(objDM.getAttribute("DRYER_WIDTH_MARK_WET_DRY").getString());
            txtTagInstruction.setText(objDM.getAttribute("TAG_INSTRUCTION").getString());
            txtFinishingInstruction_new.setText(objDM.getAttribute("FINISHING_INSTRUCTION").getString());
            txtNeedlingInstruction.setText(objDM.getAttribute("NEEDLING_INSTRUCTION").getString());
            txtDressDrawWeavingInstruction.setText(objDM.getAttribute("DRESS_DRAW_WEAVING_INSTRUCTION").getString());
            txtBaseGSM.setText(objDM.getAttribute("BASE_GSM").getString());
            txtWEBGSM.setText(objDM.getAttribute("WEB_GSM").getString());
            txtTotalGSM.setText(objDM.getAttribute("TOTAL_GSM").getString());
            txtSafety.setText(objDM.getAttribute("SAFETY").getString());
            txtNeedlingTantion.setText(objDM.getAttribute("NEEDLING_TANTION").getString());
            txtPerWEB.setText(objDM.getAttribute("PER_WEB").getString());
            txtPerSYNBase.setText(objDM.getAttribute("PER_SYN_BASE").getString());
            txtPerSYNWEB.setText(objDM.getAttribute("PER_SYN_WEB").getString());
            txtWebOnFace.setText(objDM.getAttribute("WEB_ON_FACE").getString());
            txtWebOnBack.setText(objDM.getAttribute("WEB_ON_BACK").getString());
            txtPaintLines.setText(objDM.getAttribute("PAINT_LINES").getString());
            txtLOOM_NO.setText(objDM.getAttribute("LOOM_NO").getString());
            txtNeedlingTenFACT.setText(objDM.getAttribute("NEEDLING_TEN_FACT").getString());
            txtTW_B4_ND.setText(objDM.getAttribute("TW_BE_ND").getString());
            txtT_WEB_WGT.setText(objDM.getAttribute("T_WEB_WEIGHT").getString());
            txtT_TOT_WGT_PCE.setText(objDM.getAttribute("T_TOTAL_WEIGHT").getString());
            txtRemark.setText(objDM.getAttribute("REMARK").getString());
            txtMkgWidth.setText(objDM.getAttribute("MKG_WIDTH").getString());
            txtMfgWidth.setText(objDM.getAttribute("MFG_WIDTH").getString());

            txtBaseGSM_A.setText(objDM.getAttribute("BASE_GSM_A").getString());
            txtBaseGSM_B.setText(objDM.getAttribute("BASE_GSM_B").getString());

            txtTW_B4_ND_A.setText(objDM.getAttribute("TW_BE_ND_A").getString());
            txtTW_B4_ND_B.setText(objDM.getAttribute("TW_BE_ND_B").getString());
            
            try{
                    ResultSet rs = data.getResult("SELECT WARP_TXT,WEFT_TXT FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where  PRODUCT_STYLE='" + txtStyle.getText() + "' AND WEFT_W1='" + txtWEFT.getText() + "' AND DESIGN='" + txtWEAVE.getText() + "' AND PICKS_10CM_P1='" + txtPICKS10CM.getText() + "'");
                    System.out.println("SELECT WARP_TXT,WEFT_TXT FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where  PRODUCT_STYLE='" + txtStyle.getText() + "' AND WEFT_W1='" + txtWEFT.getText() + "' AND DESIGN='" + txtWEAVE.getText() + "' AND PICKS_10CM_P1='" + txtPICKS10CM.getText() + "'");
                    rs.first();

                    txtWARP_Detail.setText(rs.getString("WARP_TXT"));
                    txtWEFT_Detail.setText(rs.getString("WEFT_TXT"));                   
            }catch(Exception e)
            {
                e.printStackTrace();
            }
            
            try {
                txtStyle1.setText(objDM.getAttribute("STYLE_MULTILAYER").getString());
                txtProdGroup1.setText(objDM.getAttribute("PRODUCT_GROUP_MULTILAYER").getString());
                txtProdCode1.setText(objDM.getAttribute("PRODUCT_CODE_MULTILAYER").getString());
                txtLength1.setText(objDM.getAttribute("LENGTH_MULTILAYER").getString());
                txtWidth1.setText(objDM.getAttribute("WIDTH_MULTILAYER").getString());
                 txtWEAVE1.setText(objDM.getAttribute("WEAVE_MULTILAYER").getString());
                 txtWEFT1.setText(objDM.getAttribute("WEFT_MULTILAYER").getString());
                 txtPICKS10CM1.setText(objDM.getAttribute("PICKS_10CM_MULTILAYER").getString());
                 txtWARP1.setText(objDM.getAttribute("WARP_MULTILAYER").getString());
                 txtENDS10CM1.setText(objDM.getAttribute("ENDS_10CM_MULTILAYER").getString());
                 txtWidthFact1.setText(objDM.getAttribute("WIDTH_FACT_MULTILAYER").getString());
                 txtNoEnds1.setText(objDM.getAttribute("NO_ENDS_MULTILAYER").getString());
                 txtREED1.setText(objDM.getAttribute("REED_MULTILAYER").getString());
                 txtREEDSp1.setText(objDM.getAttribute("REED_SPACE_MULTILAYER").getString());
                 txtWWGT1.setText(objDM.getAttribute("W_WGT_MULTILAYER").getString());
                 txtWE_WGT1.setText(objDM.getAttribute("WE_WGT_MULTILAYER").getString());
                 txtTK_UP1.setText(objDM.getAttribute("TK_UP_MULTILAYER").getString());
                 txtTheoWeight1.setText(objDM.getAttribute("THEO_WEIGHT_MULTILAYER").getString());
                 txtTheoLength1.setText(objDM.getAttribute("THEO_LENGTH_MULTILAYER").getString());
                 txtTheoPicks1.setText(objDM.getAttribute("THEO_PICKS_MULTILAYER").getString());
                 txtLengthFACT1.setText(objDM.getAttribute("LENGTH_FACT_MULTILAYER").getString());
                 txtENDLength1.setText(objDM.getAttribute("END_LENGTH_MULTILAYER").getString());
                 txtBASE_SKG_TOT1.setText(objDM.getAttribute("BASE_SKG_TOTAL_MULTILAYER").getString());
                 txtFinishingInstruction_new1.setText(objDM.getAttribute("FINISHING_INSTRUCTION_MULTILAYER").getString());
                 try{
                    ResultSet rs1 = data.getResult("SELECT WARP_TXT,WEFT_TXT FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where  PRODUCT_STYLE='" + txtStyle1.getText() + "' AND WEFT_W1='" + txtWEFT1.getText() + "' AND DESIGN='" + txtWEAVE1.getText() + "' AND PICKS_10CM_P1='" + txtPICKS10CM1.getText() + "'");
                
                    rs1.first();
                    txtWarpDetail1.setText(rs1.getString("WARP_TXT"));
                    txtWeftDetail1.setText(rs1.getString("WEFT_TXT"));
                 }catch(Exception e)
                 {
                     
                 }
            } catch (Exception e) {
                e.printStackTrace();
            }
            
            EITLERPGLOBAL.setComboIndex(cmbHierarchy, objDM.getAttribute("HIERARCHY_ID").getInt());
            try{
                //DESIGN_CHANGED_BY
                cmbChangedBy.setSelectedItem(objDM.getAttribute("DESIGN_CHANGED_BY").getString());
            }catch(Exception e)
            {
                e.printStackTrace();
            }
            FormatGrid();
//            FormatGrid_OTHER();

            //Now Generate Table
            int NewRow = 0;
            int NewRow2 = 0;
            for (int i = 1; i <= objDM.hmFeltPerformanceTrackingDetails.size(); i++) {
                clsFeltDesignMasterDetails ObjItem = (clsFeltDesignMasterDetails) objDM.hmFeltPerformanceTrackingDetails.get(Integer.toString(i));

               // int NewRow = i - 1;
                // int NewRow2 = i - 1;
                Object[] rowData = new Object[100];
//                if(ObjItem.getAttribute("SUPPLIER").getString().equals("SDML"))
//                {
                rowData[0] = (NewRow + 1) + "";
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SR_NO", ObjItem.getAttribute("SR_NO").getString(), NewRow);
                DataModel.setValueByVariable("FACE_WEB", ObjItem.getAttribute("FACE_WEB").getString(), NewRow);
                DataModel.setValueByVariable("FACE_NO_WEB", ObjItem.getAttribute("FACE_NO_WEB").getString(), NewRow);
                DataModel.setValueByVariable("BACK_WEB", ObjItem.getAttribute("BACK_WEB").getString(), NewRow);
                DataModel.setValueByVariable("BACK_NO_WEB", ObjItem.getAttribute("BACK_NO_WEB").getString(), NewRow);
                DataModel.setValueByVariable("TAKE_UP", ObjItem.getAttribute("TAKE_UP").getString(), NewRow);
                DataModel.setValueByVariable("PENETRATION", ObjItem.getAttribute("PENETRATION").getString(), NewRow);

                NewRow++;

            }

            //DoNotEvaluate=false;
            //UpdateTotals();
            //======== Generating Grid for Document Approval Flow ========//
            FormatGridA();
            HashMap List = new HashMap();
            String DocNo = objDM.getAttribute("DESIGN_DOC_NO").getString();
            List = clsFeltProductionApprovalFlow.getDocumentFlow(ModuleId, DocNo);
            for (int i = 1; i <= List.size(); i++) {
                clsDocFlow ObjFlow = (clsDocFlow) List.get(Integer.toString(i));
                Object[] rowData = new Object[7];
                //JOptionPane.showMessageDialog(null, "USER ID : "+ObjFlow.getAttribute("USER_ID").getVal());
                rowData[0] = Integer.toString(i);
                rowData[1] = clsUser.getUserName(EITLERPGLOBAL.gCompanyID, (int) ObjFlow.getAttribute("USER_ID").getVal());
                rowData[2] = (String) ObjFlow.getAttribute("STATUS").getObj();
                rowData[3] = clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID, (int) ObjFlow.getAttribute("DEPT_ID").getVal());
                rowData[4] = EITLERPGLOBAL.formatDate((String) ObjFlow.getAttribute("RECEIVED_DATE").getObj());
                rowData[5] = EITLERPGLOBAL.formatDate((String) ObjFlow.getAttribute("ACTION_DATE").getObj());
                rowData[6] = (String) ObjFlow.getAttribute("REMARKS").getObj();

                DataModelApprovalStatus.addRow(rowData);
            }

            //Showing Audit Trial History
            FormatGridHS();
            HashMap History = objDM.getHistoryList(EITLERPGLOBAL.gCompanyID + "", DocNo);
            for (int i = 1; i <= History.size(); i++) {
                clsFeltDesignMaster ObjHistory = (clsFeltDesignMaster) History.get(Integer.toString(i));
                Object[] rowData = new Object[6];

                rowData[0] = Integer.toString((int) ObjHistory.getAttribute("REVISION_NO").getVal());
                rowData[1] = clsUser.getUserName(EITLERPGLOBAL.gCompanyID, Integer.parseInt(ObjHistory.getAttribute("MODIFIED_BY").getString()));
                rowData[2] = ObjHistory.getAttribute("MODIFIED_DATE").getString();

                String ApprovalStatus = "";

                if (((String) ObjHistory.getAttribute("APPROVAL_STATUS").getString()).equals("A")) {
                    ApprovalStatus = "Approved";
                }

                if (((String) ObjHistory.getAttribute("APPROVAL_STATUS").getString()).equals("F")) {
                    ApprovalStatus = "Final Approved";
                }

                if (((String) ObjHistory.getAttribute("APPROVAL_STATUS").getString()).equals("W")) {
                    ApprovalStatus = "Waiting";
                }

                if (((String) ObjHistory.getAttribute("APPROVAL_STATUS").getString()).equals("R")) {
                    ApprovalStatus = "Rejected";
                }

                if (((String) ObjHistory.getAttribute("APPROVAL_STATUS").getString()).equals("P")) {
                    ApprovalStatus = "Pending";
                }

                if (((String) ObjHistory.getAttribute("APPROVAL_STATUS").getString()).equals("C")) {
                    ApprovalStatus = "Skiped";
                }

                if (((String) ObjHistory.getAttribute("APPROVAL_STATUS").getString()).equals("H")) {
                    ApprovalStatus = "Hold";
                }

                rowData[3] = ApprovalStatus;
                rowData[4] = ObjHistory.getAttribute("APPROVER_REMARKS").getString();
                rowData[5] = ObjHistory.getAttribute("FROM_IP").getString();

                DataModelUpdateHistory.addRow(rowData);
            }
            //txtPieceNoFocusLost(null);
            //============================================================//
            //setSTATUS();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void FormatGridA() {
        DataModelApprovalStatus = new EITLTableModel();

        TableApprovalStatus.removeAll();
        TableApprovalStatus.setModel(DataModelApprovalStatus);

        //Set the table Readonly
        DataModelApprovalStatus.TableReadOnly(true);

        //Add the columns
        DataModelApprovalStatus.addColumn("Sr.");
        DataModelApprovalStatus.addColumn("User");
        DataModelApprovalStatus.addColumn("Status");
        DataModelApprovalStatus.addColumn("Department");
        DataModelApprovalStatus.addColumn("Received Date");
        DataModelApprovalStatus.addColumn("Action Date");
        DataModelApprovalStatus.addColumn("Remarks");

        TableApprovalStatus.setAutoResizeMode(TableApprovalStatus.AUTO_RESIZE_OFF);

    }

    private void SetMenuForRights() {
        // --- Add Rights --
        if (clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 6261, 62611)) {
            cmdNew.setEnabled(true);
        } else {
            cmdNew.setEnabled(false);
        }

        // --- Edit Rights --
        cmdEdit.setEnabled(true);
        if (clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 6261, 62612)) {
            cmdEdit.setEnabled(true);
        } else {
            cmdEdit.setEnabled(false);
        }

        // --- Delete Rights --
        if (clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 6261, 62613)) {
            cmdDelete.setEnabled(true);
        } else {
            cmdDelete.setEnabled(false);
        }

        // --- Print Rights --
        if (clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 6261, 62615)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        } else {
            //cmdPreview.setEnabled(false);
            //cmdPrint.setEnabled(false);
        }
    }

    private void SetupApproval() {

        if (cmbHierarchy.getItemCount() > 1) {
            cmbHierarchy.setEnabled(true);
        }
        //JOptionPane.showMessageDialog(null, "Approval Cmb : "+cmbHierarchy.getItemCount());
        //In Edit Mode Hierarchy Should be disabled
        if (EditMode == EITLERPGLOBAL.ADD) {
            cmbHierarchy.setEnabled(true);
        } else {
            cmbHierarchy.setEnabled(false);
        }

        //Set Default Hierarchy ID for User
        int DefaultID = clsHierarchy.getDefaultHierarchy((int) EITLERPGLOBAL.gCompanyID);
        EITLERPGLOBAL.setComboIndex(cmbHierarchy, DefaultID);

        if (EditMode == EITLERPGLOBAL.ADD) {
            lnFromID = (int) EITLERPGLOBAL.gNewUserID;
            txtFrom.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID));
            txtFromRemarks.setText("Creator of Document");
        } else {
            lnFromID = (int) EITLERPGLOBAL.gNewUserID;
            txtFrom.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID));
            txtFromRemarks.setText("");
        }

        SelHierarchyID = EITLERPGLOBAL.getComboCode(cmbHierarchy);
        //JOptionPane.showMessageDialog(null, "Hierarchy Id = "+SelHierarchyID);
        //GenerateFromCombo();
        //GenerateSendToCombo();

        if (clsHierarchy.CanSkip((int) EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int) EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        } else {
            cmbSendTo.setEnabled(false);
        }

        if (clsHierarchy.CanFinalApprove((int) EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int) EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        } else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }

        if (EditMode == EITLERPGLOBAL.EDIT) {
            cmbHierarchy.setEnabled(false);
        }

        if (EditMode == 0) {
            cmbHierarchy.setEnabled(false);
            txtFrom.setEnabled(false);
            //txtFromRemarks.setEnabled(false);
            OpgApprove.setEnabled(false);
            OpgFinal.setEnabled(false);
            OpgReject.setEnabled(false);
            cmbSendTo.setEnabled(false);
            txtToRemarks.setEnabled(false);
        }

        if (clsHierarchy.IsCreator(EITLERPGLOBAL.gCompanyID, SelHierarchyID, EITLERPGLOBAL.gUserID)) {
            OpgReject.setEnabled(false);
        }
        if (clsHierarchy.CanFinalApprove(EITLERPGLOBAL.gCompanyID, SelHierarchyID, EITLERPGLOBAL.gUserID)) {
            //JOptionPane.showMessageDialog(null, "Final Approver");
            OpgApprove.setEnabled(false);
        }
    }

    private void FormatGrid() {
        try {
            DataModel = new EITLTableModel();
            tblSDML.removeAll();

            tblSDML.setModel(DataModel);
            tblSDML.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("FACE WEB"); //1
            DataModel.addColumn("FACE NO WEB"); //1
            DataModel.addColumn("BACK WEB");//22
            DataModel.addColumn("BACK NO WEB"); //2
            DataModel.addColumn("TAKE UP"); //3
            DataModel.addColumn("PENETRATION"); //4

            DataModel.SetVariable(0, "SR_NO"); //0 - Read Only
            DataModel.SetVariable(1, "FACE_WEB"); //4
            DataModel.SetVariable(2, "FACE_NO_WEB");//22
            DataModel.SetVariable(3, "BACK_WEB"); //1
            DataModel.SetVariable(4, "BACK_NO_WEB"); //1
            DataModel.SetVariable(5, "TAKE_UP"); //1
            DataModel.SetVariable(6, "PENETRATION"); //2

            tblSDML.getColumnModel().getColumn(0).setMinWidth(40);
            tblSDML.getColumnModel().getColumn(0).setMaxWidth(40);

            tblSDML.getColumnModel().getColumn(1).setMinWidth(70);
            tblSDML.getColumnModel().getColumn(1).setMaxWidth(70);

            tblSDML.getColumnModel().getColumn(2).setMinWidth(80);
            tblSDML.getColumnModel().getColumn(2).setMaxWidth(80);

            tblSDML.getColumnModel().getColumn(3).setMinWidth(70);
            tblSDML.getColumnModel().getColumn(3).setMaxWidth(70);
            
            tblSDML.getColumnModel().getColumn(4).setMinWidth(80);
            tblSDML.getColumnModel().getColumn(4).setMaxWidth(80);
            
            tblSDML.getColumnModel().getColumn(5).setMinWidth(70);
            tblSDML.getColumnModel().getColumn(5).setMaxWidth(70);
             
            tblSDML.getColumnModel().getColumn(6).setMinWidth(80);
            tblSDML.getColumnModel().getColumn(6).setMaxWidth(80);
            DataModel.SetReadOnly(0);
            //DataModel.SetReadOnly(1);
            //DataModel.SetReadOnly(2);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void FormatGridHS() {
        DataModelUpdateHistory = new EITLTableModel();

        TableUpdateHistory.removeAll();
        TableUpdateHistory.setModel(DataModelUpdateHistory);

        //Set the table Readonly
        DataModelUpdateHistory.TableReadOnly(true);

        //Add the columns
        DataModelUpdateHistory.addColumn("Rev No.");
        DataModelUpdateHistory.addColumn("User");
        DataModelUpdateHistory.addColumn("Date");
        DataModelUpdateHistory.addColumn("Status");
        DataModelUpdateHistory.addColumn("Remarks");
        DataModelUpdateHistory.addColumn("FROM_IP");

        TableColumnModel tcm = TableUpdateHistory.getColumnModel();
        tcm.getColumn(0).setPreferredWidth(20);
        tcm.getColumn(1).setPreferredWidth(120);
        tcm.getColumn(2).setPreferredWidth(100);
        tcm.getColumn(3).setPreferredWidth(80);
        tcm.getColumn(4).setPreferredWidth(80);
        tcm.getColumn(5).setPreferredWidth(100);
        TableUpdateHistory.setAutoResizeMode(TableUpdateHistory.AUTO_RESIZE_OFF);
    }

    private void GenerateCombos() {
        //Generates Combo Boxes
        HashMap List = new HashMap();
        String strCondition = "";

        //----- Generate cmbType ------- //
        cmbHierarchyModel = new EITLComboModel();
        cmbHierarchy.removeAllItems();
        cmbHierarchy.setModel(cmbHierarchyModel);

        List = clsHierarchy.getListEx(" WHERE D_COM_HIERARCHY.COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " AND MODULE_ID=" + ModuleId);

        if (EditMode == EITLERPGLOBAL.EDIT) {
            List = clsHierarchy.getList(" WHERE COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " AND MODULE_ID=" + ModuleId);
        }

        if (EditMode == EITLERPGLOBAL.EDIT) {
            if (EITLERPGLOBAL.gNewUserID == clsFeltProductionApprovalFlow.getCreator(ModuleId, DOC_NO + "")) {
                List = clsHierarchy.getListEx(" WHERE D_COM_HIERARCHY.COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " AND MODULE_ID=" + (ModuleId));
            } else {
                List = clsHierarchy.getList(" WHERE COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " AND MODULE_ID=" + ModuleId);
            }
        }

        for (int i = 1; i <= List.size(); i++) {
            clsHierarchy ObjHierarchy = (clsHierarchy) List.get(Integer.toString(i));
            ComboData aData = new ComboData();
            aData.Code = (int) ObjHierarchy.getAttribute("HIERARCHY_ID").getVal();
            aData.Text = (String) ObjHierarchy.getAttribute("HIERARCHY_NAME").getObj();
            cmbHierarchyModel.addElement(aData);
        }
        //------------------------------ //
    }

    private void GenerateFromCombo() {
        //Generates Combo Boxes
        HashMap List = new HashMap();

        try {
            if (EditMode == EITLERPGLOBAL.ADD) {
                //----- Generate cmbType ------- //
                cmbToModel = new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);

                List = clsHierarchy.getUserList((int) EITLERPGLOBAL.gCompanyID, SelHierarchyID, EITLERPGLOBAL.gNewUserID);
                for (int i = 1; i <= List.size(); i++) {
                    clsUser ObjUser = (clsUser) List.get(Integer.toString(i));
                    ComboData aData = new ComboData();
                    aData.Code = (int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text = (String) ObjUser.getAttribute("USER_NAME").getObj();

                    if (ObjUser.getAttribute("USER_ID").getVal() == EITLERPGLOBAL.gNewUserID) {
                        //Exclude Current User
                    } else {
                        cmbToModel.addElement(aData);
                    }
                }
                //------------------------------ //
            } else {
                //----- Generate cmbType ------- //
                cmbToModel = new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);

                List = clsFeltProductionApprovalFlow.getRemainingUsers(ModuleId, DOC_NO + "");
                for (int i = 1; i <= List.size(); i++) {
                    clsUser ObjUser = (clsUser) List.get(Integer.toString(i));
                    ComboData aData = new ComboData();
                    aData.Code = (int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text = (String) ObjUser.getAttribute("USER_NAME").getObj();
                    cmbToModel.addElement(aData);
                }
                //------------------------------ //
            }
        } catch (Exception e) {
        }

    }

    private void FormatGridApprovalStatus() {
        DataModelApprovalStatus = new EITLTableModel();

        TableApprovalStatus.removeAll();
        TableApprovalStatus.setModel(DataModelApprovalStatus);

        //Set the table Readonly
        DataModelApprovalStatus.TableReadOnly(true);

        //Add the columns
        DataModelApprovalStatus.addColumn("Sr.");
        DataModelApprovalStatus.addColumn("User");
        DataModelApprovalStatus.addColumn("Department");
        DataModelApprovalStatus.addColumn("Status");
        DataModelApprovalStatus.addColumn("Received Date");
        DataModelApprovalStatus.addColumn("Action Date");
        DataModelApprovalStatus.addColumn("Remarks");

        TableColumnModel tcm = TableApprovalStatus.getColumnModel();
        tcm.getColumn(0).setPreferredWidth(10);
        tcm.getColumn(3).setPreferredWidth(20);
        tcm.getColumn(4).setPreferredWidth(150);
        tcm.getColumn(5).setPreferredWidth(150);
    }

    private void FormatGridUpdateHistory() {
        DataModelUpdateHistory = new EITLTableModel();

        TableUpdateHistory.removeAll();
        TableUpdateHistory.setModel(DataModelUpdateHistory);

        //Set the table Readonly
        DataModelUpdateHistory.TableReadOnly(true);

        //Add the columns
        DataModelUpdateHistory.addColumn("Rev No.");
        DataModelUpdateHistory.addColumn("User");
        DataModelUpdateHistory.addColumn("Date");
        DataModelUpdateHistory.addColumn("Status");
        DataModelUpdateHistory.addColumn("Remarks");
        DataModelUpdateHistory.addColumn("FROM_IP");

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        Tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        txtDocDate = new javax.swing.JFormattedTextField();
        lblRevNo = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSDML = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        txtMachineNo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPosition = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPartyName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtUPN = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtRevision = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPosDesignNo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtRef = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtStyle = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtProdGroup = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtProdCode = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtLength = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtWidth = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtGSM = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtSqmtr = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtResForReviasion = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtWARP = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtWEFT = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtENDS10CM = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtPICKS10CM = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtWidthFact = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtNoEnds = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtREED = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtREEDSp = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtWEAVE = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtDRAW = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtSYN = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtGSMORD = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        txtGSMMFG = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txtWWGT = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txtWE_WGT = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txtTK_UP = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtTheoWeight = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        txtTheoLength = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        txtTheoPicks = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        txtLengthFACT = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        txtENDLength = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        txtT_Thick = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        txtTH_CFM = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        txtBASE_SKG_TOT = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        txtTOT_SKG = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        txtTrimWt = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        txtWeightRange = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        txtBillWeight = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        txtKillos = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        txtFaceSingle = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        txtPerCount = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        txtBaseGSM_A = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        txtWEBGSM = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        txtTotalGSM = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        txtPerWEB = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        txtPerSYNBase = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        txtPerSYNWEB = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        txtSafety = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        txtNeedlingTantion = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        txtNeedlingTenFACT = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        txtPaintLines = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        txtLOOM_NO = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        txtTW_B4_ND = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        txtT_WEB_WGT = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        txtT_TOT_WGT_PCE = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtWeavingInstruction = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtNeedlingInstruction = new javax.swing.JTextArea();
        txtTagInstruction = new javax.swing.JTextField();
        txtDryerWidthMarkWet = new javax.swing.JTextField();
        txtDressDrawWeavingInstruction = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jLabel80 = new javax.swing.JLabel();
        txtRemark = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        txtProdCategory = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        txtMfgLength = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        txtMkgWidth = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        txtMfgWidth = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel85 = new javax.swing.JLabel();
        txtWARP_Detail = new javax.swing.JTextField();
        jLabel86 = new javax.swing.JLabel();
        txtWEFT_Detail = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtFinishingInstruction_new = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtWebOnBack = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtWebOnFace = new javax.swing.JTextArea();
        txtBaseGSM_B = new javax.swing.JTextField();
        jLabel87 = new javax.swing.JLabel();
        txtBaseGSM = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        txtTW_B4_ND_B = new javax.swing.JTextField();
        txtTW_B4_ND_A = new javax.swing.JTextField();
        txtLayerType = new javax.swing.JTextField();
        jLabel88 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        txtBackSingle = new javax.swing.JTextField();
        jLabel96 = new javax.swing.JLabel();
        txtPositionDesc = new javax.swing.JTextField();
        jLabel102 = new javax.swing.JLabel();
        cmbChangedBy = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        Tab2 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        cmbHierarchy = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtFromRemarks = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        OpgApprove = new javax.swing.JRadioButton();
        OpgFinal = new javax.swing.JRadioButton();
        OpgReject = new javax.swing.JRadioButton();
        OpgHold = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        cmbSendTo = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        txtToRemarks = new javax.swing.JTextField();
        cmdBackToTab0 = new javax.swing.JButton();
        cmdFromRemarksBig = new javax.swing.JButton();
        cmdNextToTab2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        StatusPanel = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableApprovalStatus = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TableUpdateHistory = new javax.swing.JTable();
        cmdViewHistory = new javax.swing.JButton();
        cmdNormalView = new javax.swing.JButton();
        cmdShowRemarks = new javax.swing.JButton();
        txtAuditRemarks = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtStyle1 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        txtWidth1 = new javax.swing.JTextField();
        jLabel95 = new javax.swing.JLabel();
        txtLength1 = new javax.swing.JTextField();
        jLabel97 = new javax.swing.JLabel();
        txtProdCode1 = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        txtProdGroup1 = new javax.swing.JTextField();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        txtWEAVE1 = new javax.swing.JTextField();
        jLabel101 = new javax.swing.JLabel();
        txtWEFT1 = new javax.swing.JTextField();
        jLabel103 = new javax.swing.JLabel();
        txtPICKS10CM1 = new javax.swing.JTextField();
        jLabel104 = new javax.swing.JLabel();
        txtWARP1 = new javax.swing.JTextField();
        txtREEDSp1 = new javax.swing.JTextField();
        jLabel109 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        txtREED1 = new javax.swing.JTextField();
        jLabel111 = new javax.swing.JLabel();
        txtNoEnds1 = new javax.swing.JTextField();
        txtWidthFact1 = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        txtENDS10CM1 = new javax.swing.JTextField();
        jLabel113 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        txtTheoWeight1 = new javax.swing.JTextField();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        txtTheoLength1 = new javax.swing.JTextField();
        txtBASE_SKG_TOT1 = new javax.swing.JTextField();
        jLabel123 = new javax.swing.JLabel();
        txtTheoPicks1 = new javax.swing.JTextField();
        jLabel125 = new javax.swing.JLabel();
        txtLengthFACT1 = new javax.swing.JTextField();
        jLabel130 = new javax.swing.JLabel();
        txtWWGT1 = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        txtENDLength1 = new javax.swing.JTextField();
        jLabel133 = new javax.swing.JLabel();
        txtWE_WGT1 = new javax.swing.JTextField();
        jLabel134 = new javax.swing.JLabel();
        txtTK_UP1 = new javax.swing.JTextField();
        BtnMultipart_Formula = new javax.swing.JButton();
        jLabel90 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtFinishingInstruction_new1 = new javax.swing.JTextArea();
        jLabel93 = new javax.swing.JLabel();
        txtWeftDetail1 = new javax.swing.JTextField();
        txtWarpDetail1 = new javax.swing.JTextField();
        jLabel94 = new javax.swing.JLabel();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();

        jMenuItem1.setText("Single Layer");
        jMenuItem1.setActionCommand("Single_Layer");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Multi Layer");
        jMenuItem2.setActionCommand("Multi_Player");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        getContentPane().setLayout(null);

        Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        Tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel2.setText("Doc Date");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(210, 0, 80, 20);

        jLabel3.setText("Doc No");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 110, 20);

        txtDocNo.setEditable(false);
        txtDocNo.setBackground(new java.awt.Color(254, 242, 230));
        txtDocNo.setText("PD000001");
        txtDocNo.setEnabled(false);
        jPanel1.add(txtDocNo);
        txtDocNo.setBounds(90, 0, 90, 20);

        txtDocDate.setEditable(false);
        jPanel1.add(txtDocDate);
        txtDocDate.setBounds(280, 0, 70, 20);

        lblRevNo.setText("...");
        jPanel1.add(lblRevNo);
        lblRevNo.setBounds(180, 0, 34, 20);

        tblSDML.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSDML.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblSDMLKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tblSDML);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(590, 340, 530, 170);

        jLabel5.setText("Party Code");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(0, 20, 80, 15);

        txtPartyCode.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                txtPartyCodeComponentMoved(evt);
            }
        });
        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });
        jPanel1.add(txtPartyCode);
        txtPartyCode.setBounds(90, 20, 60, 20);

        txtMachineNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMachineNoKeyPressed(evt);
            }
        });
        jPanel1.add(txtMachineNo);
        txtMachineNo.setBounds(470, 20, 30, 20);

        jLabel6.setText("Machine No");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(390, 20, 90, 20);
        jPanel1.add(txtPosition);
        txtPosition.setBounds(570, 20, 30, 20);

        jLabel7.setText("Position");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(500, 20, 60, 20);

        txtPartyName.setEnabled(false);
        jPanel1.add(txtPartyName);
        txtPartyName.setBounds(150, 20, 230, 20);

        jLabel4.setText("UPN No");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(360, 0, 70, 20);

        txtUPN = new JTextFieldHint(new JTextField(),"Search by F1");
        txtUPN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUPNFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUPNFocusLost(evt);
            }
        });
        txtUPN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUPNKeyPressed(evt);
            }
        });
        jPanel1.add(txtUPN);
        txtUPN.setBounds(420, 0, 120, 20);

        jLabel1.setText("Revision No");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(540, 0, 90, 15);
        jPanel1.add(txtRevision);
        txtRevision.setBounds(630, 0, 40, 20);

        jLabel8.setText("Position Design No");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(600, 20, 140, 15);
        jPanel1.add(txtPosDesignNo);
        txtPosDesignNo.setBounds(740, 20, 40, 20);

        jLabel9.setText("Ref.");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(810, 250, 40, 15);
        jPanel1.add(txtRef);
        txtRef.setBounds(860, 250, 260, 20);

        jLabel10.setText("Style");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(950, 20, 50, 15);

        txtStyle = new JTextFieldHint(new JTextField(),"Press F1");
        txtStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStyleActionPerformed(evt);
            }
        });
        txtStyle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStyleKeyPressed(evt);
            }
        });
        jPanel1.add(txtStyle);
        txtStyle.setBounds(1000, 20, 90, 20);

        jLabel11.setText("Prod. Group");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(0, 40, 90, 15);

        txtProdGroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdGroupKeyPressed(evt);
            }
        });
        jPanel1.add(txtProdGroup);
        txtProdGroup.setBounds(90, 40, 70, 20);

        jLabel12.setText("Prod Code");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(160, 40, 80, 15);

        txtProdCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdCodeKeyPressed(evt);
            }
        });
        jPanel1.add(txtProdCode);
        txtProdCode.setBounds(260, 40, 60, 20);

        jLabel13.setText("Length");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(330, 40, 60, 15);
        jPanel1.add(txtLength);
        txtLength.setBounds(420, 40, 60, 20);

        jLabel14.setText("Width");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(620, 40, 50, 15);

        txtWidth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWidthFocusLost(evt);
            }
        });
        jPanel1.add(txtWidth);
        txtWidth.setBounds(720, 40, 60, 20);

        jLabel15.setText("GSM");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(780, 80, 50, 15);
        jPanel1.add(txtGSM);
        txtGSM.setBounds(850, 80, 60, 20);

        jLabel16.setText("SQMTR");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(910, 80, 48, 15);
        jPanel1.add(txtSqmtr);
        txtSqmtr.setBounds(1000, 80, 60, 20);

        jLabel17.setText("Weight");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(910, 100, 70, 15);
        jPanel1.add(txtWeight);
        txtWeight.setBounds(1000, 100, 60, 20);

        jLabel18.setText("Res. for Revision");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(690, 160, 120, 15);
        jPanel1.add(txtResForReviasion);
        txtResForReviasion.setBounds(820, 160, 270, 20);

        jLabel20.setText("Warp");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(780, 60, 50, 15);
        jPanel1.add(txtWARP);
        txtWARP.setBounds(850, 60, 60, 20);

        jLabel21.setText("Weft");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(160, 60, 60, 15);

        txtWEFT = new JTextFieldHint(new JTextField(),"Press F1");
        txtWEFT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWEFTKeyPressed(evt);
            }
        });
        jPanel1.add(txtWEFT);
        txtWEFT.setBounds(260, 60, 60, 20);

        jLabel22.setText("ENDS/10CM");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(0, 80, 100, 15);
        jPanel1.add(txtENDS10CM);
        txtENDS10CM.setBounds(90, 80, 70, 20);

        jLabel23.setText("Picks / 10CM");
        jPanel1.add(jLabel23);
        jLabel23.setBounds(590, 60, 110, 15);

        txtPICKS10CM = new JTextFieldHint(new JTextField(),"Press F1");
        txtPICKS10CM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPICKS10CMKeyPressed(evt);
            }
        });
        jPanel1.add(txtPICKS10CM);
        txtPICKS10CM.setBounds(720, 60, 60, 20);

        jLabel24.setText("Width Fact");
        jPanel1.add(jLabel24);
        jLabel24.setBounds(160, 80, 90, 15);

        txtWidthFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWidthFactActionPerformed(evt);
            }
        });
        jPanel1.add(txtWidthFact);
        txtWidthFact.setBounds(260, 80, 60, 20);

        jLabel25.setText("No. Ends");
        jPanel1.add(jLabel25);
        jLabel25.setBounds(330, 80, 80, 15);
        jPanel1.add(txtNoEnds);
        txtNoEnds.setBounds(420, 80, 60, 20);

        jLabel26.setText("REED");
        jPanel1.add(jLabel26);
        jLabel26.setBounds(480, 80, 60, 15);
        jPanel1.add(txtREED);
        txtREED.setBounds(570, 80, 50, 20);

        jLabel27.setText("REED Space");
        jPanel1.add(jLabel27);
        jLabel27.setBounds(620, 80, 90, 15);
        jPanel1.add(txtREEDSp);
        txtREEDSp.setBounds(720, 80, 60, 20);

        jLabel28.setText("Weave");
        jPanel1.add(jLabel28);
        jLabel28.setBounds(0, 60, 70, 15);

        txtWEAVE = new JTextFieldHint(new JTextField(),"Press F1");
        txtWEAVE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWEAVEKeyPressed(evt);
            }
        });
        jPanel1.add(txtWEAVE);
        txtWEAVE.setBounds(90, 60, 70, 20);

        jLabel29.setText("Draw");
        jPanel1.add(jLabel29);
        jLabel29.setBounds(0, 100, 70, 15);
        jPanel1.add(txtDRAW);
        txtDRAW.setBounds(90, 100, 70, 20);

        jLabel30.setText("SYN (%)");
        jPanel1.add(jLabel30);
        jLabel30.setBounds(160, 100, 80, 15);
        jPanel1.add(txtSYN);
        txtSYN.setBounds(260, 100, 60, 20);

        jLabel37.setText("GSM/ORD");
        jPanel1.add(jLabel37);
        jLabel37.setBounds(330, 100, 90, 15);
        jPanel1.add(txtGSMORD);
        txtGSMORD.setBounds(420, 100, 60, 20);

        jLabel38.setText("GSM/MFG");
        jPanel1.add(jLabel38);
        jLabel38.setBounds(480, 100, 90, 15);
        jPanel1.add(txtGSMMFG);
        txtGSMMFG.setBounds(570, 100, 50, 20);

        jLabel39.setText("W. Wgt");
        jPanel1.add(jLabel39);
        jLabel39.setBounds(620, 100, 80, 15);
        jPanel1.add(txtWWGT);
        txtWWGT.setBounds(720, 100, 60, 20);

        jLabel40.setText("We wgt");
        jPanel1.add(jLabel40);
        jLabel40.setBounds(780, 100, 80, 15);
        jPanel1.add(txtWE_WGT);
        txtWE_WGT.setBounds(850, 100, 60, 20);

        jLabel41.setText("TK UP");
        jPanel1.add(jLabel41);
        jLabel41.setBounds(780, 120, 60, 15);
        jPanel1.add(txtTK_UP);
        txtTK_UP.setBounds(850, 120, 60, 20);

        jLabel42.setText("Theo. Weight");
        jPanel1.add(jLabel42);
        jLabel42.setBounds(0, 120, 100, 15);
        jPanel1.add(txtTheoWeight);
        txtTheoWeight.setBounds(100, 120, 60, 20);

        jLabel43.setText("Theo. Length");
        jPanel1.add(jLabel43);
        jLabel43.setBounds(160, 120, 110, 15);
        jPanel1.add(txtTheoLength);
        txtTheoLength.setBounds(260, 120, 60, 20);

        jLabel44.setText("Theo. Picks");
        jPanel1.add(jLabel44);
        jLabel44.setBounds(330, 120, 90, 15);
        jPanel1.add(txtTheoPicks);
        txtTheoPicks.setBounds(420, 120, 60, 20);

        jLabel45.setText("Length FACT");
        jPanel1.add(jLabel45);
        jLabel45.setBounds(480, 120, 100, 15);
        jPanel1.add(txtLengthFACT);
        txtLengthFACT.setBounds(570, 120, 50, 20);

        jLabel46.setText("End Length");
        jPanel1.add(jLabel46);
        jLabel46.setBounds(620, 120, 110, 15);
        jPanel1.add(txtENDLength);
        txtENDLength.setBounds(720, 120, 60, 20);

        jLabel47.setText("T Thick");
        jPanel1.add(jLabel47);
        jLabel47.setBounds(910, 140, 70, 15);
        jPanel1.add(txtT_Thick);
        txtT_Thick.setBounds(1000, 140, 60, 20);

        jLabel48.setText("Theo. CFM");
        jPanel1.add(jLabel48);
        jLabel48.setBounds(0, 140, 80, 15);
        jPanel1.add(txtTH_CFM);
        txtTH_CFM.setBounds(90, 140, 70, 20);

        jLabel49.setText("Base SKG Total");
        jPanel1.add(jLabel49);
        jLabel49.setBounds(160, 140, 120, 15);
        jPanel1.add(txtBASE_SKG_TOT);
        txtBASE_SKG_TOT.setBounds(270, 140, 50, 20);

        jLabel50.setText("Total  SKG");
        jPanel1.add(jLabel50);
        jLabel50.setBounds(330, 140, 80, 15);
        jPanel1.add(txtTOT_SKG);
        txtTOT_SKG.setBounds(420, 140, 60, 20);

        jLabel51.setText("Trim Wt.");
        jPanel1.add(jLabel51);
        jLabel51.setBounds(480, 140, 90, 15);
        jPanel1.add(txtTrimWt);
        txtTrimWt.setBounds(570, 140, 50, 20);

        jLabel52.setText("Weight Range");
        jPanel1.add(jLabel52);
        jLabel52.setBounds(620, 140, 110, 15);
        jPanel1.add(txtWeightRange);
        txtWeightRange.setBounds(720, 139, 190, 20);

        jLabel53.setText("Bill Weight");
        jPanel1.add(jLabel53);
        jLabel53.setBounds(910, 120, 100, 15);
        jPanel1.add(txtBillWeight);
        txtBillWeight.setBounds(1000, 120, 60, 20);

        jLabel54.setText("Killos");
        jPanel1.add(jLabel54);
        jLabel54.setBounds(0, 160, 50, 15);
        jPanel1.add(txtKillos);
        txtKillos.setBounds(90, 160, 70, 20);

        jLabel55.setText("Dress / Draw Weaving Instruction");
        jPanel1.add(jLabel55);
        jLabel55.setBounds(290, 250, 270, 15);

        jLabel56.setText("Weaving Instruction");
        jPanel1.add(jLabel56);
        jLabel56.setBounds(710, 230, 170, 15);

        jLabel57.setText("Face Singe");
        jPanel1.add(jLabel57);
        jLabel57.setBounds(160, 160, 100, 15);
        jPanel1.add(txtFaceSingle);
        txtFaceSingle.setBounds(260, 160, 60, 20);

        jLabel58.setText("Dryer width mark WET/DRY");
        jPanel1.add(jLabel58);
        jLabel58.setBounds(330, 230, 200, 15);

        jLabel59.setText("Tag Instruction");
        jPanel1.add(jLabel59);
        jLabel59.setBounds(0, 230, 140, 15);

        jLabel61.setText("Finishing Instruction");
        jPanel1.add(jLabel61);
        jLabel61.setBounds(0, 180, 170, 15);

        jLabel62.setText("Per (%) Contration");
        jPanel1.add(jLabel62);
        jLabel62.setBounds(480, 160, 140, 15);
        jPanel1.add(txtPerCount);
        txtPerCount.setBounds(630, 160, 50, 20);

        jLabel63.setText("Base GSM   A");
        jPanel1.add(jLabel63);
        jLabel63.setBounds(0, 250, 110, 15);

        txtBaseGSM_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBaseGSM_AFocusLost(evt);
            }
        });
        jPanel1.add(txtBaseGSM_A);
        txtBaseGSM_A.setBounds(100, 250, 50, 20);

        jLabel64.setText("WEB GSM  ");
        jPanel1.add(jLabel64);
        jLabel64.setBounds(0, 270, 100, 15);
        jPanel1.add(txtWEBGSM);
        txtWEBGSM.setBounds(100, 270, 50, 20);

        jLabel65.setText("Total GSM");
        jPanel1.add(jLabel65);
        jLabel65.setBounds(150, 270, 80, 15);
        jPanel1.add(txtTotalGSM);
        txtTotalGSM.setBounds(230, 270, 50, 20);

        jLabel66.setText("Needling Instruction");
        jPanel1.add(jLabel66);
        jLabel66.setBounds(510, 180, 160, 15);

        jLabel67.setText("Per (%) WEB");
        jPanel1.add(jLabel67);
        jLabel67.setBounds(0, 290, 90, 20);
        jPanel1.add(txtPerWEB);
        txtPerWEB.setBounds(100, 290, 50, 20);

        jLabel68.setText("Per (%)  SYN WEB");
        jPanel1.add(jLabel68);
        jLabel68.setBounds(0, 310, 140, 15);
        jPanel1.add(txtPerSYNBase);
        txtPerSYNBase.setBounds(280, 290, 60, 20);

        jLabel69.setText("Per (%)  SYN BASE");
        jPanel1.add(jLabel69);
        jLabel69.setBounds(150, 290, 140, 15);
        jPanel1.add(txtPerSYNWEB);
        txtPerSYNWEB.setBounds(120, 310, 50, 20);

        jLabel70.setText("Safety");
        jPanel1.add(jLabel70);
        jLabel70.setBounds(290, 270, 70, 15);
        jPanel1.add(txtSafety);
        txtSafety.setBounds(340, 270, 200, 20);

        jLabel71.setText("Needling Tantion");
        jPanel1.add(jLabel71);
        jLabel71.setBounds(570, 270, 130, 15);
        jPanel1.add(txtNeedlingTantion);
        txtNeedlingTantion.setBounds(710, 270, 220, 20);

        jLabel72.setText("Needling Ten FACT");
        jPanel1.add(jLabel72);
        jLabel72.setBounds(0, 370, 150, 20);
        jPanel1.add(txtNeedlingTenFACT);
        txtNeedlingTenFACT.setBounds(150, 370, 140, 20);

        jLabel73.setText("Paint Lines ");
        jPanel1.add(jLabel73);
        jLabel73.setBounds(0, 350, 110, 15);
        jPanel1.add(txtPaintLines);
        txtPaintLines.setBounds(90, 350, 200, 20);

        jLabel74.setText("Web on FACE");
        jPanel1.add(jLabel74);
        jLabel74.setBounds(290, 330, 120, 15);

        jLabel75.setText("WEB on BACK");
        jPanel1.add(jLabel75);
        jLabel75.setBounds(290, 420, 120, 15);

        jLabel76.setText("Loom No ");
        jPanel1.add(jLabel76);
        jLabel76.setBounds(170, 310, 90, 15);
        jPanel1.add(txtLOOM_NO);
        txtLOOM_NO.setBounds(230, 310, 60, 20);

        jLabel77.setText("TW B4 ND  A");
        jPanel1.add(jLabel77);
        jLabel77.setBounds(0, 390, 100, 15);
        jPanel1.add(txtTW_B4_ND);
        txtTW_B4_ND.setBounds(230, 390, 60, 20);

        jLabel78.setText("T WEB Wgt");
        jPanel1.add(jLabel78);
        jLabel78.setBounds(0, 330, 100, 15);
        jPanel1.add(txtT_WEB_WGT);
        txtT_WEB_WGT.setBounds(90, 330, 200, 20);

        jLabel79.setText("(One) T. TOT WGT (PCE)");
        jPanel1.add(jLabel79);
        jLabel79.setBounds(390, 290, 190, 15);
        jPanel1.add(txtT_TOT_WGT_PCE);
        txtT_TOT_WGT_PCE.setBounds(550, 290, 380, 20);

        txtWeavingInstruction.setColumns(20);
        txtWeavingInstruction.setRows(5);
        jScrollPane1.setViewportView(txtWeavingInstruction);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(860, 230, 260, 20);

        txtNeedlingInstruction.setColumns(20);
        txtNeedlingInstruction.setRows(5);
        jScrollPane5.setViewportView(txtNeedlingInstruction);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(700, 180, 420, 50);
        jPanel1.add(txtTagInstruction);
        txtTagInstruction.setBounds(120, 230, 210, 20);
        jPanel1.add(txtDryerWidthMarkWet);
        txtDryerWidthMarkWet.setBounds(520, 230, 180, 20);
        jPanel1.add(txtDressDrawWeavingInstruction);
        txtDressDrawWeavingInstruction.setBounds(540, 250, 260, 20);

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd);
        btnAdd.setBounds(960, 310, 64, 25);

        btnRemove.setText("REMOVE");
        btnRemove.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jPanel1.add(btnRemove);
        btnRemove.setBounds(1030, 310, 90, 25);

        jLabel80.setText("Remark");
        jPanel1.add(jLabel80);
        jLabel80.setBounds(290, 310, 70, 15);
        jPanel1.add(txtRemark);
        txtRemark.setBounds(380, 307, 550, 20);

        jLabel81.setText("Prod Category");
        jPanel1.add(jLabel81);
        jLabel81.setBounds(780, 20, 110, 15);

        txtProdCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdCategoryKeyPressed(evt);
            }
        });
        jPanel1.add(txtProdCategory);
        txtProdCategory.setBounds(890, 20, 60, 20);

        jLabel82.setText("M. Length");
        jPanel1.add(jLabel82);
        jLabel82.setBounds(480, 40, 80, 15);

        txtMfgLength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMfgLengthKeyReleased(evt);
            }
        });
        jPanel1.add(txtMfgLength);
        txtMfgLength.setBounds(570, 40, 50, 20);

        jLabel83.setText("Marking Width");
        jPanel1.add(jLabel83);
        jLabel83.setBounds(780, 40, 110, 15);

        txtMkgWidth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMkgWidthFocusLost(evt);
            }
        });
        jPanel1.add(txtMkgWidth);
        txtMkgWidth.setBounds(890, 40, 60, 20);

        jLabel84.setText("Mfg Width");
        jPanel1.add(jLabel84);
        jLabel84.setBounds(950, 40, 90, 15);

        txtMfgWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMfgWidthActionPerformed(evt);
            }
        });
        txtMfgWidth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMfgWidthFocusLost(evt);
            }
        });
        jPanel1.add(txtMfgWidth);
        txtMfgWidth.setBounds(1040, 40, 50, 20);

        jButton1.setText("Generate Formula");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(90, 460, 190, 25);

        jLabel85.setText("Warp Detail");
        jPanel1.add(jLabel85);
        jLabel85.setBounds(910, 60, 100, 15);
        jPanel1.add(txtWARP_Detail);
        txtWARP_Detail.setBounds(1000, 60, 110, 20);

        jLabel86.setText("Weft Detail");
        jPanel1.add(jLabel86);
        jLabel86.setBounds(330, 60, 100, 15);
        jPanel1.add(txtWEFT_Detail);
        txtWEFT_Detail.setBounds(420, 60, 170, 20);

        jButton2.setText("Generate Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(90, 490, 190, 25);

        txtFinishingInstruction_new.setColumns(20);
        txtFinishingInstruction_new.setRows(5);
        jScrollPane4.setViewportView(txtFinishingInstruction_new);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(140, 180, 360, 50);

        txtWebOnBack.setColumns(20);
        txtWebOnBack.setRows(5);
        jScrollPane7.setViewportView(txtWebOnBack);

        jPanel1.add(jScrollPane7);
        jScrollPane7.setBounds(380, 420, 200, 90);

        txtWebOnFace.setColumns(20);
        txtWebOnFace.setRows(5);
        jScrollPane8.setViewportView(txtWebOnFace);

        jPanel1.add(jScrollPane8);
        jScrollPane8.setBounds(380, 330, 200, 80);

        txtBaseGSM_B.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBaseGSM_BFocusLost(evt);
            }
        });
        jPanel1.add(txtBaseGSM_B);
        txtBaseGSM_B.setBounds(170, 250, 50, 20);

        jLabel87.setText("B");
        jPanel1.add(jLabel87);
        jLabel87.setBounds(150, 250, 30, 15);
        jPanel1.add(txtBaseGSM);
        txtBaseGSM.setBounds(230, 250, 50, 20);

        jLabel89.setText("B");
        jPanel1.add(jLabel89);
        jLabel89.setBounds(150, 390, 20, 15);

        txtTW_B4_ND_B.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTW_B4_ND_BFocusLost(evt);
            }
        });
        jPanel1.add(txtTW_B4_ND_B);
        txtTW_B4_ND_B.setBounds(160, 390, 50, 20);

        txtTW_B4_ND_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTW_B4_ND_AFocusLost(evt);
            }
        });
        jPanel1.add(txtTW_B4_ND_A);
        txtTW_B4_ND_A.setBounds(90, 390, 50, 20);
        jPanel1.add(txtLayerType);
        txtLayerType.setBounds(760, 0, 110, 20);

        jLabel88.setText("Layer Type ");
        jPanel1.add(jLabel88);
        jLabel88.setBounds(680, 0, 90, 15);

        jLabel92.setText("Back Singe");
        jPanel1.add(jLabel92);
        jLabel92.setBounds(330, 160, 100, 15);
        jPanel1.add(txtBackSingle);
        txtBackSingle.setBounds(420, 160, 60, 20);

        jLabel96.setText("Position Desc");
        jPanel1.add(jLabel96);
        jLabel96.setBounds(870, 0, 110, 20);
        jPanel1.add(txtPositionDesc);
        txtPositionDesc.setBounds(980, 0, 130, 19);

        jLabel102.setText("Changed By");
        jPanel1.add(jLabel102);
        jLabel102.setBounds(930, 270, 100, 20);

        cmbChangedBy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SDML", "PARTY" }));
        jPanel1.add(cmbChangedBy);
        cmbChangedBy.setBounds(1030, 270, 90, 24);

        Tab.addTab("Felt Design Master", jPanel1);

        jPanel2.setLayout(null);

        Tab2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Tab2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Tab2FocusGained(evt);
            }
        });
        Tab2.setLayout(null);

        jLabel31.setText("Hierarchy ");
        Tab2.add(jLabel31);
        jLabel31.setBounds(10, 23, 66, 15);

        cmbHierarchy.setEnabled(false);
        cmbHierarchy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbHierarchyItemStateChanged(evt);
            }
        });
        cmbHierarchy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbHierarchyFocusGained(evt);
            }
        });
        Tab2.add(cmbHierarchy);
        cmbHierarchy.setBounds(90, 20, 180, 24);

        jLabel32.setText("From");
        Tab2.add(jLabel32);
        jLabel32.setBounds(10, 62, 56, 15);

        txtFrom.setBackground(new java.awt.Color(246, 238, 238));
        txtFrom.setForeground(new java.awt.Color(11, 7, 7));
        Tab2.add(txtFrom);
        txtFrom.setBounds(90, 60, 180, 19);

        jLabel35.setText("Remarks");
        Tab2.add(jLabel35);
        jLabel35.setBounds(10, 95, 62, 15);

        txtFromRemarks.setBackground(new java.awt.Color(204, 204, 204));
        Tab2.add(txtFromRemarks);
        txtFromRemarks.setBounds(90, 95, 530, 19);

        jLabel36.setText("Your Action  ");
        Tab2.add(jLabel36);
        jLabel36.setBounds(10, 130, 81, 15);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(null);

        buttonGroup1.add(OpgApprove);
        OpgApprove.setText("Approve & Forward");
        OpgApprove.setEnabled(false);
        OpgApprove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgApproveMouseClicked(evt);
            }
        });
        OpgApprove.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OpgApproveItemStateChanged(evt);
            }
        });
        OpgApprove.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgApproveFocusGained(evt);
            }
        });
        jPanel6.add(OpgApprove);
        OpgApprove.setBounds(6, 6, 171, 23);

        buttonGroup1.add(OpgFinal);
        OpgFinal.setText("Final Approve");
        OpgFinal.setEnabled(false);
        OpgFinal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgFinalMouseClicked(evt);
            }
        });
        OpgFinal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OpgFinalItemStateChanged(evt);
            }
        });
        OpgFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgFinalFocusGained(evt);
            }
        });
        jPanel6.add(OpgFinal);
        OpgFinal.setBounds(6, 32, 136, 20);

        buttonGroup1.add(OpgReject);
        OpgReject.setText("Reject");
        OpgReject.setEnabled(false);
        OpgReject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgRejectMouseClicked(evt);
            }
        });
        OpgReject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OpgRejectItemStateChanged(evt);
            }
        });
        OpgReject.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgRejectFocusGained(evt);
            }
        });
        jPanel6.add(OpgReject);
        OpgReject.setBounds(6, 54, 136, 20);

        buttonGroup1.add(OpgHold);
        OpgHold.setSelected(true);
        OpgHold.setText("Hold Document");
        OpgHold.setEnabled(false);
        OpgHold.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgHoldMouseClicked(evt);
            }
        });
        OpgHold.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OpgHoldItemStateChanged(evt);
            }
        });
        OpgHold.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgHoldFocusGained(evt);
            }
        });
        jPanel6.add(OpgHold);
        OpgHold.setBounds(6, 76, 136, 20);

        Tab2.add(jPanel6);
        jPanel6.setBounds(90, 130, 180, 100);

        jLabel33.setText("Send To");
        Tab2.add(jLabel33);
        jLabel33.setBounds(10, 253, 60, 15);

        cmbSendTo.setEnabled(false);
        cmbSendTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbSendToFocusGained(evt);
            }
        });
        Tab2.add(cmbSendTo);
        cmbSendTo.setBounds(90, 250, 180, 24);

        jLabel34.setText("Remarks");
        Tab2.add(jLabel34);
        jLabel34.setBounds(10, 292, 60, 15);

        txtToRemarks.setEnabled(false);
        txtToRemarks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToRemarksFocusGained(evt);
            }
        });
        Tab2.add(txtToRemarks);
        txtToRemarks.setBounds(90, 290, 570, 19);

        cmdBackToTab0.setText("<< Back");
        cmdBackToTab0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackToTab0ActionPerformed(evt);
            }
        });
        Tab2.add(cmdBackToTab0);
        cmdBackToTab0.setBounds(450, 400, 102, 25);

        cmdFromRemarksBig.setText("...");
        cmdFromRemarksBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFromRemarksBigActionPerformed(evt);
            }
        });
        Tab2.add(cmdFromRemarksBig);
        cmdFromRemarksBig.setBounds(630, 95, 33, 21);

        cmdNextToTab2.setMnemonic('N');
        cmdNextToTab2.setText("Next >>");
        cmdNextToTab2.setToolTipText("Next Tab");
        cmdNextToTab2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextToTab2ActionPerformed(evt);
            }
        });
        Tab2.add(cmdNextToTab2);
        cmdNextToTab2.setBounds(570, 400, 102, 25);

        jPanel2.add(Tab2);
        Tab2.setBounds(0, 0, 770, 460);

        Tab.addTab("Approval", jPanel2);

        jPanel3.setLayout(null);

        StatusPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        StatusPanel.setLayout(null);

        jLabel60.setText("Document Approval Status");
        StatusPanel.add(jLabel60);
        jLabel60.setBounds(12, 10, 242, 15);

        TableApprovalStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TableApprovalStatus);

        StatusPanel.add(jScrollPane2);
        jScrollPane2.setBounds(0, 40, 694, 120);

        jLabel19.setText("Document Update History");
        StatusPanel.add(jLabel19);
        jLabel19.setBounds(10, 170, 182, 15);

        TableUpdateHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(TableUpdateHistory);

        StatusPanel.add(jScrollPane6);
        jScrollPane6.setBounds(10, 190, 540, 130);

        cmdViewHistory.setText("View Revisions");
        cmdViewHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdViewHistoryActionPerformed(evt);
            }
        });
        StatusPanel.add(cmdViewHistory);
        cmdViewHistory.setBounds(570, 170, 132, 24);

        cmdNormalView.setText("Back to Normal");
        cmdNormalView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNormalViewActionPerformed(evt);
            }
        });
        StatusPanel.add(cmdNormalView);
        cmdNormalView.setBounds(570, 200, 132, 24);

        cmdShowRemarks.setText("Show Remarks");
        cmdShowRemarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowRemarksActionPerformed(evt);
            }
        });
        StatusPanel.add(cmdShowRemarks);
        cmdShowRemarks.setBounds(570, 230, 132, 24);

        txtAuditRemarks.setEnabled(false);
        StatusPanel.add(txtAuditRemarks);
        txtAuditRemarks.setBounds(570, 260, 129, 19);

        jButton4.setText("Next >>");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        StatusPanel.add(jButton4);
        jButton4.setBounds(660, 290, 100, 30);

        jButton5.setText("<<Previous");
        jButton5.setMargin(new java.awt.Insets(2, 5, 2, 5));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        StatusPanel.add(jButton5);
        jButton5.setBounds(560, 290, 100, 30);

        jPanel3.add(StatusPanel);
        StatusPanel.setBounds(10, 0, 790, 380);

        Tab.addTab("Status", jPanel3);

        jPanel4.setLayout(null);

        txtStyle1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStyle1KeyPressed(evt);
            }
        });
        jPanel4.add(txtStyle1);
        txtStyle1.setBounds(90, 10, 90, 20);

        jLabel91.setText("Style");
        jPanel4.add(jLabel91);
        jLabel91.setBounds(0, 10, 50, 15);

        txtWidth1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWidth1FocusLost(evt);
            }
        });
        jPanel4.add(txtWidth1);
        txtWidth1.setBounds(800, 10, 50, 20);

        jLabel95.setText("Width");
        jPanel4.add(jLabel95);
        jLabel95.setBounds(680, 10, 50, 15);
        jPanel4.add(txtLength1);
        txtLength1.setBounds(610, 10, 70, 20);

        jLabel97.setText("Length");
        jPanel4.add(jLabel97);
        jLabel97.setBounds(520, 10, 60, 15);

        txtProdCode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdCode1KeyPressed(evt);
            }
        });
        jPanel4.add(txtProdCode1);
        txtProdCode1.setBounds(450, 10, 70, 20);

        jLabel98.setText("Prod Code");
        jPanel4.add(jLabel98);
        jLabel98.setBounds(350, 10, 80, 15);

        txtProdGroup1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdGroup1KeyPressed(evt);
            }
        });
        jPanel4.add(txtProdGroup1);
        txtProdGroup1.setBounds(280, 10, 70, 20);

        jLabel99.setText("Prod. Group");
        jPanel4.add(jLabel99);
        jLabel99.setBounds(180, 10, 90, 15);

        jLabel100.setText("Weave");
        jPanel4.add(jLabel100);
        jLabel100.setBounds(0, 30, 70, 15);

        txtWEAVE1 = new JTextFieldHint(new JTextField(),"Press F1");
        txtWEAVE1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWEAVE1KeyPressed(evt);
            }
        });
        jPanel4.add(txtWEAVE1);
        txtWEAVE1.setBounds(90, 30, 90, 20);

        jLabel101.setText("Weft");
        jPanel4.add(jLabel101);
        jLabel101.setBounds(180, 30, 60, 15);

        txtWEFT1 = new JTextFieldHint(new JTextField(),"Press F1");
        txtWEFT1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWEFT1KeyPressed(evt);
            }
        });
        jPanel4.add(txtWEFT1);
        txtWEFT1.setBounds(280, 30, 70, 20);

        jLabel103.setText("Picks / 10CM");
        jPanel4.add(jLabel103);
        jLabel103.setBounds(350, 30, 110, 15);

        txtPICKS10CM1 = new JTextFieldHint(new JTextField(),"Press F1");
        txtPICKS10CM1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPICKS10CM1KeyPressed(evt);
            }
        });
        jPanel4.add(txtPICKS10CM1);
        txtPICKS10CM1.setBounds(450, 30, 70, 20);

        jLabel104.setText("Warp");
        jPanel4.add(jLabel104);
        jLabel104.setBounds(520, 30, 50, 15);
        jPanel4.add(txtWARP1);
        txtWARP1.setBounds(610, 30, 70, 20);
        jPanel4.add(txtREEDSp1);
        txtREEDSp1.setBounds(450, 50, 70, 20);

        jLabel109.setText("REED Space");
        jPanel4.add(jLabel109);
        jLabel109.setBounds(350, 50, 90, 15);

        jLabel110.setText("REED");
        jPanel4.add(jLabel110);
        jLabel110.setBounds(180, 50, 60, 15);
        jPanel4.add(txtREED1);
        txtREED1.setBounds(280, 50, 70, 20);

        jLabel111.setText("No. Ends");
        jPanel4.add(jLabel111);
        jLabel111.setBounds(0, 50, 80, 15);
        jPanel4.add(txtNoEnds1);
        txtNoEnds1.setBounds(90, 50, 90, 20);
        jPanel4.add(txtWidthFact1);
        txtWidthFact1.setBounds(960, 30, 70, 20);

        jLabel112.setText("Width Fact");
        jPanel4.add(jLabel112);
        jLabel112.setBounds(860, 30, 90, 15);
        jPanel4.add(txtENDS10CM1);
        txtENDS10CM1.setBounds(800, 30, 50, 20);

        jLabel113.setText("ENDS/10CM");
        jPanel4.add(jLabel113);
        jLabel113.setBounds(680, 30, 100, 15);

        jLabel115.setText("Theo. Weight");
        jPanel4.add(jLabel115);
        jLabel115.setBounds(0, 70, 100, 15);
        jPanel4.add(txtTheoWeight1);
        txtTheoWeight1.setBounds(100, 70, 80, 20);

        jLabel119.setText("Base SKG Total");
        jPanel4.add(jLabel119);
        jLabel119.setBounds(680, 70, 120, 15);

        jLabel120.setText("Theo. Length");
        jPanel4.add(jLabel120);
        jLabel120.setBounds(180, 70, 110, 15);
        jPanel4.add(txtTheoLength1);
        txtTheoLength1.setBounds(280, 70, 70, 20);
        jPanel4.add(txtBASE_SKG_TOT1);
        txtBASE_SKG_TOT1.setBounds(800, 70, 50, 20);

        jLabel123.setText("Theo. Picks");
        jPanel4.add(jLabel123);
        jLabel123.setBounds(350, 70, 90, 15);
        jPanel4.add(txtTheoPicks1);
        txtTheoPicks1.setBounds(450, 70, 70, 20);

        jLabel125.setText("Length FACT");
        jPanel4.add(jLabel125);
        jLabel125.setBounds(520, 70, 100, 15);
        jPanel4.add(txtLengthFACT1);
        txtLengthFACT1.setBounds(610, 70, 70, 20);

        jLabel130.setText("W. Wgt");
        jPanel4.add(jLabel130);
        jLabel130.setBounds(520, 50, 80, 15);
        jPanel4.add(txtWWGT1);
        txtWWGT1.setBounds(610, 50, 70, 20);

        jLabel131.setText("End Length");
        jPanel4.add(jLabel131);
        jLabel131.setBounds(860, 10, 110, 15);
        jPanel4.add(txtENDLength1);
        txtENDLength1.setBounds(960, 10, 70, 20);

        jLabel133.setText("We wgt");
        jPanel4.add(jLabel133);
        jLabel133.setBounds(680, 50, 80, 15);
        jPanel4.add(txtWE_WGT1);
        txtWE_WGT1.setBounds(800, 50, 50, 20);

        jLabel134.setText("TK UP");
        jPanel4.add(jLabel134);
        jLabel134.setBounds(860, 50, 60, 15);
        jPanel4.add(txtTK_UP1);
        txtTK_UP1.setBounds(960, 50, 70, 20);

        BtnMultipart_Formula.setText("Generate Formula");
        BtnMultipart_Formula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMultipart_FormulaActionPerformed(evt);
            }
        });
        jPanel4.add(BtnMultipart_Formula);
        BtnMultipart_Formula.setBounds(800, 100, 230, 25);

        jLabel90.setText("Finishing Instruction");
        jPanel4.add(jLabel90);
        jLabel90.setBounds(0, 100, 170, 15);

        txtFinishingInstruction_new1.setColumns(20);
        txtFinishingInstruction_new1.setRows(5);
        jScrollPane9.setViewportView(txtFinishingInstruction_new1);

        jPanel4.add(jScrollPane9);
        jScrollPane9.setBounds(180, 100, 340, 60);

        jLabel93.setText("Weft Detail");
        jPanel4.add(jLabel93);
        jLabel93.setBounds(530, 100, 100, 15);

        txtWeftDetail1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeftDetail1ActionPerformed(evt);
            }
        });
        jPanel4.add(txtWeftDetail1);
        txtWeftDetail1.setBounds(620, 100, 150, 19);
        jPanel4.add(txtWarpDetail1);
        txtWarpDetail1.setBounds(620, 120, 150, 19);

        jLabel94.setText("Warp Detail");
        jPanel4.add(jLabel94);
        jLabel94.setBounds(530, 120, 100, 15);

        Tab.addTab("B Part (Multi Layer)", jPanel4);

        getContentPane().add(Tab);
        Tab.setBounds(0, 70, 1140, 560);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);

        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });
        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });
        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });
        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });
        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });
        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });
        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });
        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });
        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });
        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });
        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });
        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });
        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });
        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 1140, 40);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("Felt Design Master");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 1140, 25);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 640, 1140, 30);
        getContentPane().add(jPanel5);
        jPanel5.setBounds(210, 50, 10, 10);
    }// </editor-fold>//GEN-END:initComponents

    private void GenerateRejectedSendToCombo() {
        HashMap hmRejectedSendToList = new HashMap();

        cmbSendToModel = new EITLComboModel();
        cmbSendTo.removeAllItems();
        cmbSendTo.setModel(cmbSendToModel);
        DOC_NO = txtDocNo.getText();
        //Now Add other hierarchy Users
        SelHierarchyID = EITLERPGLOBAL.getComboCode(cmbHierarchy);

        hmRejectedSendToList = clsHierarchy.getUserList((int) EITLERPGLOBAL.gCompanyID, SelHierarchyID, EITLERPGLOBAL.gNewUserID, true);

        for (int i = 1; i <= hmRejectedSendToList.size(); i++) {
            clsUser ObjUser = (clsUser) hmRejectedSendToList.get(Integer.toString(i));

            ComboData aData = new ComboData();
            aData.Code = (int) ObjUser.getAttribute("USER_ID").getVal();
            aData.Text = ObjUser.getAttribute("USER_NAME").getString();

            boolean IncludeUser = false;
            //Decide to include user or not
            if (EditMode == EITLERPGLOBAL.EDIT) {

                if (OpgApprove.isSelected()) {
                    IncludeUser = clsFeltProductionApprovalFlow.IncludeUserInApproval(ModuleId, DOC_NO + "", ObjUser.getAttribute("USER_ID").getInt(), EITLERPGLOBAL.gNewUserID);
                }

                if (OpgReject.isSelected()) {
                    //JOptionPane.showMessageDialog(null, "Module Id :"+ModuleId+", DOC No : "+sorder_no+", User Id : "+ObjUser.getAttribute("USER_ID").getInt()+", New user Id "+SDMLERPGLOBAL.gNewUserID);
                    IncludeUser = clsFeltProductionApprovalFlow.IncludeUserInRejection(ModuleId, DOC_NO + "", ObjUser.getAttribute("USER_ID").getInt(), EITLERPGLOBAL.gNewUserID);
                    // JOptionPane.showMessageDialog(null, "IncludeUser = "+IncludeUser);
                }

                if (IncludeUser && (((int) ObjUser.getAttribute("USER_ID").getVal()) != EITLERPGLOBAL.gNewUserID)) {
                    cmbSendToModel.addElement(aData);
                }
            } else {
                if ((ObjUser.getAttribute("USER_ID").getInt()) != EITLERPGLOBAL.gNewUserID) {
                    cmbSendToModel.addElement(aData);
                }
            }
        }

        if (EditMode == EITLERPGLOBAL.EDIT) {
            int Creator = clsFeltProductionApprovalFlow.getCreator(ModuleId, DOC_NO + "");
            EITLERPGLOBAL.setComboIndex(cmbSendTo, Creator);
        }
    }
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed

    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed

    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        MoveNext();

    }//GEN-LAST:event_cmdNextActionPerformed

    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed

    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        try {
            //Add();
            jPopupMenu1.show(cmdNew, 0, 30);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_cmdNewActionPerformed

    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed

    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Are you sure want to delete this record ?", "DELETE RECORD", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            Delete();
        }
    }//GEN-LAST:event_cmdDeleteActionPerformed

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        ((JFrame) getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed

    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        ReportShow();
    }//GEN-LAST:event_cmdPreviewActionPerformed

    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmdPrintActionPerformed

    private void TabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabMouseClicked

    }//GEN-LAST:event_TabMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmdShowRemarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowRemarksActionPerformed

    }//GEN-LAST:event_cmdShowRemarksActionPerformed

    private void cmdNormalViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNormalViewActionPerformed
        objDM.HistoryView = false;
        objDM.LoadData();
        MoveLast();
    }//GEN-LAST:event_cmdNormalViewActionPerformed

    private void cmdViewHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdViewHistoryActionPerformed
        String DocNo1 = txtDocNo.getText();
        objDM.ShowHistory(DocNo1);
        MoveLast();

    }//GEN-LAST:event_cmdViewHistoryActionPerformed

    private void Tab2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab2FocusGained

    }//GEN-LAST:event_Tab2FocusGained

    private void cmdNextToTab2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextToTab2ActionPerformed

    }//GEN-LAST:event_cmdNextToTab2ActionPerformed

    private void cmdFromRemarksBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFromRemarksBigActionPerformed

    }//GEN-LAST:event_cmdFromRemarksBigActionPerformed

    private void cmdBackToTab0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackToTab0ActionPerformed

    }//GEN-LAST:event_cmdBackToTab0ActionPerformed

    private void txtToRemarksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToRemarksFocusGained

    }//GEN-LAST:event_txtToRemarksFocusGained

    private void cmbSendToFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbSendToFocusGained

    }//GEN-LAST:event_cmbSendToFocusGained

    private void OpgHoldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgHoldFocusGained

    }//GEN-LAST:event_OpgHoldFocusGained

    private void OpgHoldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OpgHoldItemStateChanged

    }//GEN-LAST:event_OpgHoldItemStateChanged

    private void OpgHoldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgHoldMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(false);
        OpgReject.setSelected(false);
        OpgHold.setSelected(true);
    }//GEN-LAST:event_OpgHoldMouseClicked

    private void OpgRejectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgRejectFocusGained

    }//GEN-LAST:event_OpgRejectFocusGained

    private void OpgRejectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OpgRejectItemStateChanged

    }//GEN-LAST:event_OpgRejectItemStateChanged

    private void OpgRejectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgRejectMouseClicked
        OpgReject.setSelected(true);
        OpgFinal.setSelected(false);
        OpgApprove.setSelected(false);
        OpgHold.setSelected(false);

        GenerateRejectedSendToCombo();
        cmbSendTo.setEnabled(true);
    }//GEN-LAST:event_OpgRejectMouseClicked

    private void OpgFinalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgFinalFocusGained

    }//GEN-LAST:event_OpgFinalFocusGained

    private void OpgFinalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OpgFinalItemStateChanged

    }//GEN-LAST:event_OpgFinalItemStateChanged

    private void OpgFinalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgFinalMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(true);
        OpgReject.setSelected(false);
        OpgHold.setSelected(false);

        if (!OpgFinal.isEnabled()) {
            OpgHold.setSelected(true);
        }
    }//GEN-LAST:event_OpgFinalMouseClicked

    private void OpgApproveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgApproveFocusGained
        lblStatus.setText("Select the approval action");
    }//GEN-LAST:event_OpgApproveFocusGained

    private void OpgApproveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OpgApproveItemStateChanged

    }//GEN-LAST:event_OpgApproveItemStateChanged

    private void OpgApproveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgApproveMouseClicked

        if (!OpgApprove.isEnabled()) {
            return;
        }

        SelHierarchyID = EITLERPGLOBAL.getComboCode(cmbHierarchy);
        //JOptionPane.showMessageDialog(null, "SelHierarchyId : "+SelHierarchyID);

        //cmbSendTo.setEnabled(true);
        if (EditMode == EITLERPGLOBAL.EDIT) {
            GenerateRejectedSendToCombo();
            if (clsFeltProductionApprovalFlow.IsOnceRejectedDoc(ModuleId, DOC_NO + "")) {
                cmbSendTo.setEnabled(true);
                txtToRemarks.setEnabled(true);
                txtFromRemarks.setEnabled(true);
            } else {
                cmbSendTo.setEnabled(false);
            }
        }
        if (cmbSendTo.getItemCount() <= 0) {
            GenerateSendToCombo();
        }

        OpgFinal.setSelected(false);
        OpgReject.setSelected(false);
        OpgApprove.setSelected(true);
        OpgHold.setSelected(false);
        txtToRemarks.setEnabled(false);
        if (!OpgApprove.isEnabled()) {
            OpgHold.setSelected(true);
        }
    }//GEN-LAST:event_OpgApproveMouseClicked

    private void cmbHierarchyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbHierarchyFocusGained
        lblStatus.setText("Select the hierarchy for approval");
    }//GEN-LAST:event_cmbHierarchyFocusGained

    private void cmbHierarchyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHierarchyItemStateChanged

        SelHierarchyID = EITLERPGLOBAL.getComboCode(cmbHierarchy);

        GenerateSendToCombo();

        if (clsHierarchy.CanSkip((int) EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int) EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        } else {
            cmbSendTo.setEnabled(false);
        }

        if (clsHierarchy.CanFinalApprove((int) EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int) EITLERPGLOBAL.gNewUserID)) {
            if (EditMode == EITLERPGLOBAL.ADD || EditMode == EITLERPGLOBAL.EDIT) {
                OpgFinal.setEnabled(true);
            }
        } else {
            OpgApprove.setEnabled(false);
            OpgApprove.setSelected(false);
        }

        if (clsHierarchy.IsCreator((int) EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int) EITLERPGLOBAL.gNewUserID)) {
            OpgApprove.setEnabled(true);
            OpgReject.setEnabled(false);
            OpgReject.setSelected(false);
        }
    }//GEN-LAST:event_cmbHierarchyItemStateChanged

    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_TAB || evt.getKeyChar() == 10) {
            txtMachineNo.requestFocus();
        } else if (evt.getKeyCode() == 112) {
            try {
                LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010' AND PARTY_CLOSE_IND!=1 ";
                aList.ReturnCol = 1;
                aList.ShowReturnCol = true;
                aList.DefaultSearchOn = 2;
                aList.UseSpecifiedConn = true;
                aList.dbURL = EITLERPGLOBAL.DatabaseURL;

                if (aList.ShowLOV()) {
                    txtPartyCode.setText(aList.ReturnVal);

                    String check_lock = data.getStringValueFromDB("SELECT COALESCE(PARTY_LOCK, 0) AS PARTY_LOCK FROM DINESHMILLS.D_SAL_PARTY_MASTER where PARTY_CODE='" + txtPartyCode.getText() + "'");

                    if ("1".equals(check_lock)) {
                        JOptionPane.showMessageDialog(null, "Party Code : " + txtPartyCode.getText() + " is locked.");
                        txtPartyCode.requestFocus();
                        return;
                    }

                    clsSales_Party objParty = (clsSales_Party) clsSales_Party.getObjectExN(EITLERPGLOBAL.gCompanyID, aList.ReturnVal, "210010");
                    txtPartyName.setText(objParty.getAttribute("PARTY_NAME").getString());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed

    private void tblSDMLKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSDMLKeyPressed

    }//GEN-LAST:event_tblSDMLKeyPressed


    private void txtMachineNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMachineNoKeyPressed

    }//GEN-LAST:event_txtMachineNoKeyPressed

    private void txtPartyCodeComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_txtPartyCodeComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartyCodeComponentMoved

    private void txtUPNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUPNFocusLost
        // TODO add your handling code here:

        if (txtUPN.getText().equals("")) {
            // JOptionPane.showMessageDialog(this, "Please enter UPN");
        } else if (txtUPN.getText().length() != 12) {
            JOptionPane.showMessageDialog(this, "Please enter valid UPN");
        } else {
            String PARTY_CODE = txtUPN.getText().substring(0, 6);
            txtPartyCode.setText(PARTY_CODE);
            txtPartyName.setText(clsSales_Party.getPartyName(EITLERPGLOBAL.gCompanyID, PARTY_CODE));
            String MACHINE_NO = txtUPN.getText().substring(6, 8);
            txtMachineNo.setText(MACHINE_NO);
            String POSITION_DESIGN_NO = txtUPN.getText().substring(8, 12);
            txtPosDesignNo.setText(POSITION_DESIGN_NO);
            String Psition_no = data.getStringValueFromDB("SELECT POSITION_NO FROM PRODUCTION.FELT_MACHINE_POSITION_MST WHERE POSITION_DESIGN_NO='" + POSITION_DESIGN_NO + "'");
            txtPosition.setText(Psition_no);
            txtPositionDesc.setText(data.getStringValueFromDB("SELECT POSITION_DESC FROM PRODUCTION.FELT_MACHINE_POSITION_MST WHERE POSITION_NO="+Psition_no));
            txtPosition.setEditable(false);
            txtPartyCode.setEditable(false);
            txtMachineNo.setEditable(false);
            txtPosDesignNo.setEditable(false);
            txtRevision.setEditable(false);
            String Revision_no = data.getStringValueFromDB("SELECT MAX(DESIGN_REVISION_NO) FROM PRODUCTION.FELT_DESIGN_MASTER_HEADER WHERE UPN_NO='" + txtUPN.getText() + "'");
            if (Revision_no.equals("")) {
                txtRevision.setText("1");
            } else {
                try {
                    int Rev = Integer.parseInt(Revision_no);
                    Rev = Rev + 1;
                    txtRevision.setText(Rev + "");
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

            ResultSet rs = data.getResult("SELECT "
                    + "   D.MM_CATEGORY,ROUND((D.MM_FELT_LENGTH+D.MM_FABRIC_LENGTH)*(D.MM_FELT_WIDTH+D.MM_FABRIC_WIDTH),2) AS SQMTR,(D.MM_FELT_LENGTH+D.MM_FABRIC_LENGTH) AS LENGTH,(D.MM_FELT_WIDTH+D.MM_FABRIC_WIDTH) AS WIDTH,D.MM_FELT_GSM,D.MM_FELT_WEIGHT,D.MM_FELT_STYLE,D.MM_ITEM_CODE,D.MM_GRUP "
                    + "FROM "
                    + "    PRODUCTION.FELT_MACHINE_MASTER_HEADER H, "
                    + "    PRODUCTION.FELT_MACHINE_MASTER_DETAIL D "
                    + "WHERE "
                    + "    H.APPROVED = 1 AND H.CANCELED = 0 "
                    + "        AND H.MM_DOC_NO = D.MM_DOC_NO "
                    + "        AND D.MM_MACHINE_NO = " + txtMachineNo.getText() + " "
                    + "        AND D.MM_PARTY_CODE = '" + txtPartyCode.getText() + "' "
                    + "        AND D.MM_MACHINE_POSITION = " + txtPosition.getText() + "");
            System.out.println("SELECT "
                    + "   D.MM_CATEGORY,ROUND((D.MM_FELT_LENGTH+D.MM_FABRIC_LENGTH)*(D.MM_FELT_WIDTH+D.MM_FABRIC_WIDTH),2) AS SQMTR,(D.MM_FELT_LENGTH+D.MM_FABRIC_LENGTH) AS LENGTH,(D.MM_FELT_WIDTH+D.MM_FABRIC_WIDTH) AS WIDTH,D.MM_FELT_GSM,D.MM_FELT_WEIGHT,D.MM_FELT_STYLE,D.MM_ITEM_CODE,D.MM_GRUP "
                    + "FROM "
                    + "    PRODUCTION.FELT_MACHINE_MASTER_HEADER H, "
                    + "    PRODUCTION.FELT_MACHINE_MASTER_DETAIL D "
                    + "WHERE "
                    + "    H.APPROVED = 1 AND H.CANCELED = 0 "
                    + "        AND H.MM_DOC_NO = D.MM_DOC_NO "
                    + "        AND D.MM_MACHINE_NO = " + txtMachineNo.getText() + " "
                    + "        AND D.MM_PARTY_CODE = '" + txtPartyCode.getText() + "' "
                    + "        AND D.MM_MACHINE_POSITION = " + txtPosition.getText() + "");
            try {
                rs.first();
                txtProdCategory.setText(rs.getString("MM_CATEGORY"));
                txtLength.setText(rs.getString("LENGTH"));
                txtMfgLength.setText(rs.getString("LENGTH"));
                txtLengthFACT.setText(rs.getString("LENGTH"));
                txtENDLength.setText(rs.getString("LENGTH"));
                txtWidth.setText(rs.getString("WIDTH"));
                String Weight = data.getStringValueFromDB("SELECT ROUND('" + rs.getString("MM_FELT_WEIGHT") + "',2) FROM DUAL");
                txtWeight.setText(Weight);
                txtWWGT.setText(rs.getString("MM_FELT_WEIGHT"));
                txtWE_WGT.setText(rs.getString("MM_FELT_WEIGHT"));
                txtGSM.setText(rs.getString("MM_FELT_GSM"));
                txtGSMORD.setText(rs.getString("MM_FELT_GSM"));
                txtGSMMFG.setText(rs.getString("MM_FELT_GSM"));
                txtStyle.setText(rs.getString("MM_FELT_STYLE"));
                txtProdCode.setText(rs.getString("MM_ITEM_CODE"));
                txtProdGroup.setText(rs.getString("MM_GRUP"));
                txtSqmtr.setText(rs.getString("SQMTR"));
                txtTheoLength.setText(rs.getString("LENGTH"));
                txtTheoWeight.setText(rs.getString("MM_FELT_WEIGHT"));
                if(txtLayerType.getText().equals("MULTI_LAYER"))
                {
                    txtLength1.setText(rs.getString("LENGTH"));
                    txtLengthFACT1.setText(rs.getString("LENGTH"));
                    txtENDLength1.setText(rs.getString("LENGTH"));
                    txtWidth1.setText(rs.getString("WIDTH"));
                    txtWWGT1.setText(rs.getString("MM_FELT_WEIGHT"));
                    txtWE_WGT1.setText(rs.getString("MM_FELT_WEIGHT"));
                    txtStyle1.setText(rs.getString("MM_FELT_STYLE"));
                    txtProdCode1.setText(rs.getString("MM_ITEM_CODE"));
                    txtProdGroup1.setText(rs.getString("MM_GRUP"));
                    txtTheoLength1.setText(rs.getString("LENGTH"));
                    txtTheoWeight1.setText(rs.getString("MM_FELT_WEIGHT"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            txtTagInstruction.setText("100 % SYN , GSM , STYLE");
            txtDressDrawWeavingInstruction.setText("MEASURED");
        }

    }//GEN-LAST:event_txtUPNFocusLost

    private void GenerateFormula() {

        if (txtMkgWidth.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Marking Width");
            txtMkgWidth.requestFocus();
            return;
        }
        if (txtMfgWidth.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Manufacturing Width");
            txtMfgWidth.requestFocus();
            return;
        }
        if (txtNeedlingTenFACT.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Needling Tansion Factor");
            txtNeedlingTenFACT.requestFocus();
            return;
        }
        try {
            F[36] = Double.parseDouble(txtLengthFACT.getText());
            F[15] = Double.parseDouble(txtMfgLength.getText());

            F[17] = Double.parseDouble(txtMfgWidth.getText());
            F[22] = Double.parseDouble(txtWidthFact.getText());

            //F[25] = (F[15]*F[36]/100)/2;
            //F[25] = ((F[36]/1000)*F[15])/2;
            //F[25] = (F[15]*F[36]/100)/2;
            System.out.println("Formula : SELECT REED_SPACE FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_STYLE='" + txtStyle.getText() + "' AND ENDS_10CM='" + txtENDS10CM.getText() + "' AND DESIGN='" + txtWEAVE.getText() + "' AND WARP='" + txtWARP.getText() + "' AND PRODUCT_CODE='"+txtProdCode.getText()+"'");
            String formula = data.getStringValueFromDB("SELECT REED_SPACE FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_STYLE='" + txtStyle.getText() + "' AND ENDS_10CM='" + txtENDS10CM.getText() + "' AND DESIGN='" + txtWEAVE.getText() + "' AND WARP='" + txtWARP.getText() + "' AND PRODUCT_CODE='"+txtProdCode.getText()+"'");
            boolean devide4 = false;
            if ("(MFG.LENGTH*L.F/100)/2".equals(formula)) {
                F[25] = ((F[36] / 1000) * F[15]) / 2;
            } else if ("(MFG.LENGTH*L.F/1000)/4".equals(formula)) {
                F[25] = ((F[36] / 1000) * F[15]) / 4;
                devide4 = true;
            } else if ("(MFG.LENGTH*L.F/100)/4".equals(formula)) {
                F[25] = ((F[36] / 1000) * F[15]) / 4;
                devide4 = true;
            } else if ("(MFG.WIDTH+0.20MT SAFETY*W.F)".equals(formula)) {
                F[25] = ((F[36] / 1000) * F[15]) / 2;
            } else if ("MFG.WIDTH*W.F".equals(formula)) {
                F[25] = F[17] * F[22];
            }
            else if ("(MFG.WIDTH*W.F)/100".equals(formula)) {
                F[25] = (F[17] * F[22])/100;
            } else {
                F[25] = ((F[36] / 1000) * F[15]) / 2;
            }

            String RdSp = data.getStringValueFromDB("SELECT ROUND('" + F[25] + "',1) FROM DUAL");
            txtREEDSp.setText("" + RdSp + "0");
            if (devide4) {
                RdSp = data.getStringValueFromDB("SELECT ROUND('" + F[25] + "',2) FROM DUAL");
                txtREEDSp.setText(RdSp);
            }

            if(txtStyle.getText().equals("Y 18271-5"))
            {
                RdSp = data.getStringValueFromDB("SELECT ROUND('" + F[25] + "',2) FROM DUAL");
                txtREEDSp.setText(RdSp);
            }
            
            F[25] = Double.parseDouble(RdSp);

            F[20] = Double.parseDouble(txtENDS10CM.getText());

            F[23] = (F[25] * F[20]) * 10;
            txtNoEnds.setText("" + df2.format(F[23]));

            F[34] = F[17] * (F[22] / 100);
            
            if(txtStyle.getText().equals("Y 18271-5"))
            {
                F[34] =  (( F[15] * F[36] )/100);
            }
            
            txtTheoLength.setText("" + df2.format(F[34]));
            F[34] = Double.parseDouble(txtTheoLength.getText());

            F[21] = Double.parseDouble(txtPICKS10CM.getText());

            F[35] = F[34] * F[21] * 10;
            txtTheoPicks.setText("" + df2.format(F[35]));

            F[18] = Double.parseDouble(txtWARP.getText());

            F[30] = (F[23] * F[34] * F[18]) / 1000000;
            txtWWGT.setText("" + df2.format(F[30]));

            F[19] = Double.parseDouble(txtWEFT.getText());

            F[31] = (F[35] * F[25] * F[19]) / 1000000;
            txtWE_WGT.setText("" + df2.format(F[31]));

            F[32] = Double.parseDouble(txtTK_UP.getText());

            F[33] = (F[30] + F[31]) * ((F[32] / 100) + 1);
            txtTheoWeight.setText("" + df2.format(F[33]));

            F[37] = (F[15] * F[36]) / 1000;
            String EndLen = data.getStringValueFromDB("SELECT ROUND('" + F[37] + "',1) FROM DUAL");
            txtENDLength.setText("" + EndLen + "0");
            
            if(txtStyle.getText().equals("Y 18271-5"))
            {
                txtENDLength.setText("0");
            }
            
            F[37] = Double.parseDouble(txtENDLength.getText());

            double Weight = Double.parseDouble(txtWeight.getText());
            txtKillos.setText(txtWeight.getText());
            F[47] = Weight;//Th.Wt.

            F[42] = F[47];
            txtWeightRange.setText(df2.format((F[42] * 1.03)) + " TO " + df2.format((F[42] * 0.97)));

            F[16] = Double.parseDouble(txtMkgWidth.getText());

            F[13] = Double.parseDouble(txtLength.getText());
            F[14] = Double.parseDouble(txtWidth.getText());
            F[29] = Double.parseDouble(txtGSM.getText());

            F[44] = ((F[13] * F[14]) / (F[15] * F[16])) * F[29];
            txtGSMMFG.setText("" + df_no_decimal.format(F[44]));

            F[43] = (((F[17] - F[16]) * F[15] * F[44]) / 1000);
            txtTrimWt.setText("" + df2.format(F[43]));

            F[40] = Double.parseDouble(txtBASE_SKG_TOT.getText());

            F[68] = F[33] * ((100 - F[40]) / 100);
            txtTW_B4_ND_A.setText("" + df2.format(F[68]));

            F[55] = (F[68] / (F[15] * F[17])) * 1000;
            txtBaseGSM_A.setText("" + df_no_decimal.format(F[55]));

            F[41] = Double.parseDouble(txtTOT_SKG.getText());

            F[57] = F[44] * (1 + F[41] / 100);
            txtTotalGSM.setText("" + df_no_decimal.format(F[57]));

            int Base_GSM_A = 0;
            int Base_GSM_B = 0;
            int Base_GSM = 0;
            try {
                    Base_GSM_A = Integer.parseInt(txtBaseGSM_A.getText());
            } catch (Exception e) { }
            try {
                    Base_GSM_B = Integer.parseInt(txtBaseGSM_B.getText());
            } catch (Exception e) { }
            txtBaseGSM.setText((Base_GSM_A + Base_GSM_B) + "");
            Base_GSM = Base_GSM_A + Base_GSM_B;
            
            F[56] = F[57] - Base_GSM;
            //F[56] = F[57] - F[55];
            txtWEBGSM.setText("" + df_no_decimal.format(F[56]));

            F[58] = (F[56] / F[57]) * 100;
            txtPerWEB.setText("" + df_no_decimal.format(F[58]));

            F[61] = F[17] - F[16];
            txtSafety.setText("" + df2.format(F[61]));

            F[64] = Double.parseDouble(txtNeedlingTenFACT.getText());

            F[63] = (F[64] * F[34]) * 100;
            String NeedlingTantion = data.getStringValueFromDB("SELECT ROUND('" + F[63] + "',0) FROM DUAL");
            txtNeedlingTantion.setText("" + NeedlingTantion);

            F[69] = (F[56] * F[15] * F[17]) / 1000;
            txtT_WEB_WGT.setText("" + df2.format(F[69]));

            double TW_B4_ND_A = 0;
            double TW_B4_ND_B = 0;
            try {
                 TW_B4_ND_A = Double.parseDouble(txtTW_B4_ND_A.getText());
            } catch (Exception e) {
                //e.printStackTrace();
            }
            try {
                 TW_B4_ND_B = Double.parseDouble(txtTW_B4_ND_B.getText());
            } catch (Exception e) {
                //e.printStackTrace();
            }
            txtTW_B4_ND.setText((TW_B4_ND_A + TW_B4_ND_B) + "");
            
            
            F[70] = (TW_B4_ND_A + TW_B4_ND_B) + F[69];
            txtT_TOT_WGT_PCE.setText("" + df2.format(F[70]));

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void GenerateFormula_Multipart() {

        if (txtMkgWidth.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Marking Width");
            txtMkgWidth.requestFocus();
            return;
        }
        if (txtMfgWidth.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Manufacturing Width");
            txtMfgWidth.requestFocus();
            return;
        }
        if (txtNeedlingTenFACT.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Needling Tansion Factor");
            txtNeedlingTenFACT.requestFocus();
            return;
        }
        try {
            F1[36] = Double.parseDouble(txtLengthFACT1.getText());
            F1[15] = Double.parseDouble(txtMfgLength.getText());

            F1[17] = Double.parseDouble(txtMfgWidth.getText());
            F1[22] = Double.parseDouble(txtWidthFact1.getText());

            //F[25] = (F[15]*F[36]/100)/2;
            //F[25] = ((F[36]/1000)*F[15])/2;
            //F[25] = (F[15]*F[36]/100)/2;
            String formula = data.getStringValueFromDB("SELECT REED_SPACE FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_STYLE='" + txtStyle1.getText() + "' AND ENDS_10CM='" + txtENDS10CM1.getText() + "' AND DESIGN='" + txtWEAVE1.getText() + "' AND WARP='" + txtWARP1.getText() + "'");
            boolean devide4 = false;
            if ("(MFG.LENGTH*L.F/100)/2".equals(formula)) {
                F1[25] = ((F1[36] / 1000) * F1[15]) / 2;
            } else if ("(MFG.LENGTH*L.F/1000)/4".equals(formula)) {
                F1[25] = ((F1[36] / 1000) * F1[15]) / 4;
                devide4 = true;
            } else if ("(MFG.WIDTH+0.20MT SAFETY*W.F)".equals(formula)) {
                F1[25] = ((F1[36] / 1000) * F1[15]) / 2;
            } else if ("MFG.WIDTH*W.F".equals(formula)) {
                F1[25] = F1[17] * F1[22];
            } else {
                F1[25] = ((F1[36] / 1000) * F1[15]) / 2;
            }

            String RdSp = data.getStringValueFromDB("SELECT ROUND('" + F1[25] + "',1) FROM DUAL");
            txtREEDSp1.setText("" + RdSp + "0");
            if (devide4) {
                RdSp = data.getStringValueFromDB("SELECT ROUND('" + F1[25] + "',2) FROM DUAL");
                txtREEDSp1.setText(RdSp);
            }

            F1[25] = Double.parseDouble(RdSp);

            F1[20] = Double.parseDouble(txtENDS10CM.getText());

            F1[23] = (F1[25] * F1[20]) * 10;
            txtNoEnds1.setText("" + df2.format(F1[23]));

            F1[34] = F1[17] * (F1[22] / 100);
            txtTheoLength1.setText("" + df2.format(F1[34]));
            F1[34] = Double.parseDouble(txtTheoLength1.getText());

            F1[21] = Double.parseDouble(txtPICKS10CM1.getText());

            F1[35] = F1[34] * F1[21] * 10;
            txtTheoPicks1.setText("" + df2.format(F1[35]));

            F1[18] = Double.parseDouble(txtWARP1.getText());

            F1[30] = (F1[23] * F1[34] * F1[18]) / 1000000;
            txtWWGT1.setText("" + df2.format(F1[30]));

            F1[19] = Double.parseDouble(txtWEFT1.getText());

            F1[31] = (F1[35] * F1[25] * F1[19]) / 1000000;
            txtWE_WGT1.setText("" + df2.format(F1[31]));

            F1[32] = Double.parseDouble(txtTK_UP1.getText());

            F1[33] = (F1[30] + F1[31]) * ((F1[32] / 100) + 1);
            txtTheoWeight1.setText("" + df2.format(F1[33]));

            F1[37] = (F1[15] * F1[36]) / 1000;
            String EndLen = data.getStringValueFromDB("SELECT ROUND('" + F1[37] + "',1) FROM DUAL");
            txtENDLength1.setText("" + EndLen + "0");
            F1[37] = Double.parseDouble(txtENDLength1.getText());

            double Weight = Double.parseDouble(txtWeight.getText());
            //txtKillos1.setText(txtWeight.getText());
            F1[47] = Weight;//Th.Wt.

            F1[42] = F1[47];
            //txtWeightRange1.setText(df2.format((F1[42] * 1.03)) + " TO " + df2.format((F1[42] * 0.97)));

            F1[16] = Double.parseDouble(txtMkgWidth.getText());

            F1[13] = Double.parseDouble(txtLength1.getText());
            F1[14] = Double.parseDouble(txtWidth1.getText());
            F1[29] = Double.parseDouble(txtGSM.getText());

            F1[44] = ((F1[13] * F1[14]) / (F1[15] * F1[16])) * F1[29];
            //txtGSMMFG1.setText("" + df_no_decimal.format(F1[44]));

            F1[43] = (((F1[17] - F1[16]) * F1[15] * F1[44]) / 1000);
            //txtTrimWt1.setText("" + df2.format(F1[43]));

            F1[40] = Double.parseDouble(txtBASE_SKG_TOT1.getText());

            F1[68] = F1[33] * ((100 - F1[40]) / 100);
            txtTW_B4_ND_B.setText("" + df2.format(F1[68]));

            F1[55] = (F1[68] / (F1[15] * F1[17])) * 1000;
            txtBaseGSM_B.setText("" + df_no_decimal.format(F1[55]));

            F1[41] = Double.parseDouble(txtTOT_SKG.getText());

            F1[57] = F1[44] * (1 + F1[41] / 100);
            System.out.println("F44"+F1[44]);
            System.out.println("F41"+F1[41]);
            System.out.println("F57"+F1[57]);
            
            txtTotalGSM.setText("" + df_no_decimal.format(F1[57]));
            
            int Base_GSM_A = 0;
            int Base_GSM_B = 0;
            int Base_GSM = 0;
            try {
                    Base_GSM_A = Integer.parseInt(txtBaseGSM_A.getText());
            } catch (Exception e) { }
            try {
                    Base_GSM_B = Integer.parseInt(txtBaseGSM_B.getText());
            } catch (Exception e) { }
            txtBaseGSM.setText((Base_GSM_A + Base_GSM_B) + "");
            Base_GSM = Base_GSM_A + Base_GSM_B;
            
            F1[56] = F1[57] - Base_GSM;
            
            
            txtWEBGSM.setText("" + df_no_decimal.format(F1[56]));

            F1[58] = (F1[56] / F1[57]) * 100;
            //txtPerWEB1.setText("" + df_no_decimal.format(F1[58]));

            F1[61] = F1[17] - F1[16];
            //txtSafety1.setText("" + df2.format(F[61]));

            F1[64] = Double.parseDouble(txtNeedlingTenFACT.getText());

            F1[63] = (F1[64] * F1[34]) * 100;
            //txtNeedlingTantion1.setText("" + df2.format(F1[63]));

            F1[69] = (F1[56] * F1[15] * F1[17]) / 1000;
            //txtT_WEB_WGT1.setText("" + df2.format(F1[69]));

            
            double TW_B4_ND_A = 0;
            double TW_B4_ND_B = 0;
            try {
                 TW_B4_ND_A = Double.parseDouble(txtTW_B4_ND_A.getText());
            } catch (Exception e) {
                //e.printStackTrace();
            }
            try {
                 TW_B4_ND_B = Double.parseDouble(txtTW_B4_ND_B.getText());
            } catch (Exception e) {
                //e.printStackTrace();
            }
            txtTW_B4_ND.setText((TW_B4_ND_A + TW_B4_ND_B) + "");
            
            F1[70] = (TW_B4_ND_A + TW_B4_ND_B) + F1[69];
            //txtT_TOT_WGT_PCE1.setText("" + df2.format(F1[70]));

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    
    private void txtUPNFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUPNFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUPNFocusGained

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            Object[] rowData = new Object[15];
            rowData[0] = DataModel.getRowCount() + 1;
            DataModel.addRow(rowData);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtProdCategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdCategoryKeyPressed
        // TODO add your handling code here:
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct(PRODUCT_CATEGORY) FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtProdCategory.setText(aList.ReturnVal);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtProdCategoryKeyPressed

    private void txtStyleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStyleKeyPressed
        // TODO add your handling code here:
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct(PRODUCT_STYLE) FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_CATEGORY='" + txtProdCategory.getText() + "'";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtStyle.setText(aList.ReturnVal);
                txtWEAVE.setText("");
                txtWEFT.setText("");
                txtPICKS10CM.setText("");
                txtSYN.setText("");
                txtWARP.setText("");
                txtWARP_Detail.setText("");
                txtWEFT_Detail.setText("");
                txtREED.setText("");
                txtTK_UP.setText("");
                txtENDS10CM.setText("");
                txtTheoPicks.setText("");
                txtTOT_SKG.setText("");
                txtBASE_SKG_TOT.setText("");
                txtLengthFACT.setText("");
                txtWidthFact.setText("");
                txtPerCount.setText("");

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtStyleKeyPressed

    private void txtProdGroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdGroupKeyPressed
        // TODO add your handling code here:
        //;
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct(PRODUCT_GROUP) FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_STYLE='" + txtStyle.getText() + "'";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtProdGroup.setText(aList.ReturnVal);
//                    String REED_SPACE = data.getStringValueFromDB("SELECT REED_SPACE FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_CATEGORY='"+txtProdCategory.getText()+"' AND  PRODUCT_GROUP='"+txtProdGroup.getText()+"' AND PRODUCT_STYLE='"+txtStyle.getText()+"'");
//                    txtREEDSp.setText(REED_SPACE);
//                    
//                    String THEO_WEIGHT = data.getStringValueFromDB("SELECT THEO_WEIGHT FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_CATEGORY='"+txtProdCategory.getText()+"' AND  PRODUCT_GROUP='"+txtProdGroup.getText()+"' AND PRODUCT_STYLE='"+txtStyle.getText()+"'");
//                    txtTheoWeight.setText(THEO_WEIGHT);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtProdGroupKeyPressed

    private void txtProdCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdCodeKeyPressed
        // TODO add your handling code here:
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct(PRODUCT_CODE) FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_GROUP='" + txtProdGroup.getText() + "';";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtProdCode.setText(aList.ReturnVal);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtProdCodeKeyPressed

    private void txtWidthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWidthFocusLost
        // TODO add your handling code here:
        try {

            Double l = Double.parseDouble(txtLength.getText());
            Double w = Double.parseDouble(txtWidth.getText());
            txtSqmtr.setText((l * w) + "");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtWidthFocusLost

    private void txtUPNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUPNKeyPressed
        // TODO add your handling code here:
        try {
            EITLERP.FeltSales.FeltDesignMaster.LOV aList = new EITLERP.FeltSales.FeltDesignMaster.LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT D.MM_UPN_NO,D.MM_PARTY_CODE,D.MM_MACHINE_NO,D.MM_MACHINE_POSITION,D.MM_MACHINE_POSITION_DESC FROM PRODUCTION.FELT_MACHINE_MASTER_HEADER H,PRODUCTION.FELT_MACHINE_MASTER_DETAIL D WHERE H.APPROVED=1 AND H.CANCELED=0 AND H.MM_DOC_NO=D.MM_DOC_NO  AND D.MM_UPN_NO!=''";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtUPN.setText(aList.ReturnVal);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtUPNKeyPressed

    private void txtMfgLengthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMfgLengthKeyReleased
        // TODO add your handling code here:
        GenerateFormula();
    }//GEN-LAST:event_txtMfgLengthKeyReleased

    private void txtMkgWidthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMkgWidthFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMkgWidthFocusLost

    private void txtMfgWidthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMfgWidthFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMfgWidthFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        GenerateFormula();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtWEAVEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWEAVEKeyPressed
        // TODO add your handling code here:
        if (txtStyle.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Select Style");
            return;
        }
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct DESIGN FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_STYLE='" + txtStyle.getText() + "'";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtWEAVE.setText(aList.ReturnVal);
                txtWEFT.setText("");
                txtPICKS10CM.setText("");
                txtSYN.setText("");
                txtWARP.setText("");
                txtWARP_Detail.setText("");
                txtWEFT_Detail.setText("");
                txtREED.setText("");
                txtTK_UP.setText("");
                txtENDS10CM.setText("");
                txtTheoPicks.setText("");
                txtTOT_SKG.setText("");
                txtBASE_SKG_TOT.setText("");
                txtLengthFACT.setText("");
                txtWidthFact.setText("");
                txtPerCount.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtWEAVEKeyPressed

    private void txtWEFTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWEFTKeyPressed
        // TODO add your handling code here:
        if (txtWEAVE.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Select Weave");
            return;
        }
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct  WEFT_W1 FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where DESIGN='" + txtWEAVE.getText() + "'";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtWEFT.setText(aList.ReturnVal);
                txtPICKS10CM.setText("");
                txtSYN.setText("");
                txtWARP.setText("");
                txtWARP_Detail.setText("");
                txtWEFT_Detail.setText("");
                txtREED.setText("");
                txtTK_UP.setText("");
                txtENDS10CM.setText("");
                txtTheoPicks.setText("");
                txtTOT_SKG.setText("");
                txtBASE_SKG_TOT.setText("");
                txtLengthFACT.setText("");
                txtWidthFact.setText("");
                txtPerCount.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtWEFTKeyPressed

    private void txtPICKS10CMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPICKS10CMKeyPressed
        // TODO add your handling code here:
        //txtPICKS10CM.setText(rs.getString("PICKS_10CM_P1"));
        if (txtWEFT.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Select Weft");
            return;
        }
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct PICKS_10CM_P1 FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_STYLE='" + txtStyle.getText() + "' AND WEFT_W1='" + txtWEFT.getText() + "' AND DESIGN='" + txtWEAVE.getText() + "'";
            System.out.println("SELECT distinct PICKS_10CM_P1 FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_STYLE='" + txtStyle.getText() + "' AND WEFT_W1='" + txtWEFT.getText() + "' AND DESIGN='" + txtWEAVE.getText() + "'");
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtPICKS10CM.setText(aList.ReturnVal);

                ResultSet rs = data.getResult("SELECT PER_OF_CONT,DESIGN,WF,LF,SYN,WARP,WARP_TXT,REED,TAKE_UP,ENDS_10CM,DESIGN,WEFT_W1,WEFT_TXT,WEFT_W2,PICKS_10CM_P1,PICKS_10CM_P2,WF,LF,BASE_SKG,TOTAL_SKG FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where  PRODUCT_STYLE='" + txtStyle.getText() + "' AND WEFT_W1='" + txtWEFT.getText() + "' AND DESIGN='" + txtWEAVE.getText() + "' AND PICKS_10CM_P1='" + aList.ReturnVal + "'");
                System.out.println("SELECT PER_OF_CONT,DESIGN,WF,LF,SYN,WARP,WARP_TXT,REED,TAKE_UP,ENDS_10CM,DESIGN,WEFT_W1,WEFT_TXT,WEFT_W2,PICKS_10CM_P1,PICKS_10CM_P2,WF,LF,BASE_SKG,TOTAL_SKG FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where  PRODUCT_STYLE='" + txtStyle.getText() + "' AND WEFT_W1='" + txtWEFT.getText() + "' AND DESIGN='" + txtWEAVE.getText() + "' AND PICKS_10CM_P1='" + aList.ReturnVal + "'");
                try {
                    rs.first();
                    txtSYN.setText(rs.getString("SYN"));
                    txtWARP.setText(rs.getString("WARP"));
                    txtWARP_Detail.setText(rs.getString("WARP_TXT"));
                    txtWEFT_Detail.setText(rs.getString("WEFT_TXT"));
                    txtREED.setText(rs.getString("REED"));
                    txtTK_UP.setText(rs.getString("TAKE_UP"));
                    txtENDS10CM.setText(rs.getString("ENDS_10CM"));
                    txtTheoPicks.setText(rs.getString("PICKS_10CM_P1"));
                    txtTOT_SKG.setText(rs.getString("TOTAL_SKG"));
                    txtBASE_SKG_TOT.setText(rs.getString("BASE_SKG"));
                    txtLengthFACT.setText(rs.getString("LF"));
                    txtWidthFact.setText(rs.getString("WF"));
                    txtPerCount.setText(rs.getString("PER_OF_CONT"));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtPICKS10CMKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//        String partycode = txtPartyCode.getText().trim();
//        Connection Conn = null;
//        Statement st = null;
//        ResultSet rs = null;
//        try {
//            Conn = data.getConn();
//            st = Conn.createStatement();
//
//            HashMap parameterMap = new HashMap();
//            parameterMap.put("CONTEXT", "http://200.0.0.227:8080/SDMLERP/");
//
//            ReportRegister rpt = new ReportRegister(parameterMap, Conn);
//
//            String strSQL = "SELECT \n"
//                    + " H.DESIGN_DOC_NO, DESIGN_DOC_DATE, DESIGN_REVISION_NO, \n"
//                    + " UPN_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, POSITION_NO, POSITION_DESIGN_NO, \n"
//                    + " REFERENCE, PRESS_CATEGORY, STYLE, PRODUCT_GROUP, PRODUCT_CODE, LENGTH, WIDTH, \n"
//                    + " GSM, SQMTR, WEIGHT, REASON_OF_REVISION, WARP, WEFT, ENDS_10CM, PICKS_10CM,\n"
//                    + " WIDTH_FACT, NO_ENDS, REED, REED_SPACE, WEAVE, DRAW, SYN, GSM_ORD, GSM_MFG, \n"
//                    + " W_WGT, WE_WGT, TK_UP, THEO_WEIGHT, THEO_LENGTH, THEO_PICKS, LENGTH_FACT, \n"
//                    + " END_LENGTH, T_THICK, THEO_CFM, BASE_SKG_TOTAL, TOTAL_SKG, TRIM_WEIGHT, WEIGHT_RANGE, \n"
//                    + " BILL_WEIGHT, KILLOS, FACE_SINGLE, PER_COUNT, WEAVING_INSTRUCTION, \n"
//                    + " DRYER_WIDTH_MARK_WET_DRY, TAG_INSTRUCTION, FINISHING_INSTRUCTION, \n"
//                    + " NEEDLING_INSTRUCTION, DRESS_DRAW_WEAVING_INSTRUCTION, BASE_GSM, WEB_GSM, \n"
//                    + " TOTAL_GSM, SAFETY, NEEDLING_TANTION, PER_WEB, PER_SYN_BASE, PER_SYN_WEB, \n"
//                    + " WEB_ON_FACE, WEB_ON_BACK, PAINT_LINES, LOOM_NO, NEEDLING_TEN_FACT, TW_BE_ND, \n"
//                    + " T_WEB_WEIGHT, T_TOTAL_WEIGHT, REMARK, MFG_LENGTH, \n"
//                    + " MKG_WIDTH, MFG_WIDTH, SR_NO, FACE_WEB, FACE_NO_WEB, BACK_WEB, BACK_NO_WEB, TAKE_UP, PENETRATION\n"
//                    + "FROM\n"
//                    + " PRODUCTION.FELT_DESIGN_MASTER_HEADER H,\n"
//                    + " PRODUCTION.FELT_DESIGN_MASTER_DETAIL D\n"
//                    + "WHERE\n"
//                    + " D.DESIGN_DOC_NO = H.DESIGN_DOC_NO\n"
//                    + " AND H.DESIGN_DOC_NO = '" + txtDocNo.getText() + "'\n"
//                    + " AND H.DESIGN_REVISION_NO = '" + txtRevision.getText() + "'";
//
//            System.out.println("Q : " + strSQL);
//
//            rpt.setReportName("/EITLERP/FeltSales/FeltDesignMaster/Report/FeltDesign.jrxml", 1, strSQL); //productlist is the name of my jasper file.
//            rpt.callReport();
//
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
        if(txtLayerType.getText().equals("SINGLE_LAYER"))
        {
            String partycode = txtPartyCode.getText().trim();
            Connection Conn = null;
            Statement st = null;
            ResultSet rs = null;
            try {
                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();
                parameterMap.put("CONTEXT", "http://200.0.0.227:8080/SDMLERP/");

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT \n"
                        + " H.DESIGN_DOC_NO, DESIGN_DOC_DATE, DESIGN_REVISION_NO, \n"
                        + " UPN_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, POSITION_NO, POSITION_DESIGN_NO, \n"
                        + " REFERENCE, PRESS_CATEGORY, STYLE, PRODUCT_GROUP, PRODUCT_CODE, LENGTH, WIDTH, \n"
                        + " GSM, SQMTR, WEIGHT, REASON_OF_REVISION, WARP, WEFT, ENDS_10CM, PICKS_10CM,\n"
                        + " WIDTH_FACT, NO_ENDS, REED, REED_SPACE, WEAVE, DRAW, SYN, GSM_ORD, GSM_MFG, \n"
                        + " W_WGT, WE_WGT, TK_UP, THEO_WEIGHT, THEO_LENGTH, THEO_PICKS, LENGTH_FACT, \n"
                        + " END_LENGTH, T_THICK, THEO_CFM, BASE_SKG_TOTAL, TOTAL_SKG, TRIM_WEIGHT, WEIGHT_RANGE, \n"
                        + " BILL_WEIGHT, KILLOS, FACE_SINGLE, PER_COUNT, WEAVING_INSTRUCTION, \n"
                        + " DRYER_WIDTH_MARK_WET_DRY, TAG_INSTRUCTION, FINISHING_INSTRUCTION, \n"
                        + " NEEDLING_INSTRUCTION, DRESS_DRAW_WEAVING_INSTRUCTION, BASE_GSM, WEB_GSM, \n"
                        + " TOTAL_GSM, SAFETY, NEEDLING_TANTION, PER_WEB, PER_SYN_BASE, PER_SYN_WEB, \n"
                        + " WEB_ON_FACE, WEB_ON_BACK, PAINT_LINES, LOOM_NO, NEEDLING_TEN_FACT, TW_BE_ND, \n"
                        + " T_WEB_WEIGHT, T_TOTAL_WEIGHT, REMARK, MFG_LENGTH, \n"
                        + " MKG_WIDTH, MFG_WIDTH, SR_NO, FACE_WEB, FACE_NO_WEB, BACK_WEB, BACK_NO_WEB, TAKE_UP, PENETRATION\n"
                        + "FROM\n"
                        + " PRODUCTION.FELT_DESIGN_MASTER_HEADER H,\n"
                        + " PRODUCTION.FELT_DESIGN_MASTER_DETAIL D\n"
                        + "WHERE\n"
                        + " D.DESIGN_DOC_NO = H.DESIGN_DOC_NO\n"
                        + " AND H.DESIGN_DOC_NO = '" + txtDocNo.getText() + "'\n"
                        + " AND H.DESIGN_REVISION_NO = '" + txtRevision.getText() + "'";

                System.out.println("Q (SINGLE LAYER) : " + strSQL);

                rpt.setReportName("/EITLERP/FeltSales/FeltDesignMaster/Report/FeltDesign.jrxml", 1, strSQL); //productlist is the name of my jasper file.

                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        else if(txtLayerType.getText().equals("MULTI_LAYER"))
        {
            String partycode = txtPartyCode.getText().trim();
            Connection Conn = null;
            Statement st = null;
            ResultSet rs = null;
            try {
                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();
                parameterMap.put("CONTEXT", "http://200.0.0.227:8080/SDMLERP/");

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT \n"
                        + " H.DESIGN_DOC_NO, DESIGN_DOC_DATE, DESIGN_REVISION_NO, \n"
                        + " UPN_NO, PARTY_CODE, PARTY_NAME, MACHINE_NO, POSITION_NO, POSITION_DESIGN_NO, \n"
                        + " REFERENCE, PRESS_CATEGORY, STYLE, PRODUCT_GROUP, PRODUCT_CODE, LENGTH, WIDTH, \n"
                        + " GSM, SQMTR, WEIGHT, REASON_OF_REVISION, WARP, WEFT, ENDS_10CM, PICKS_10CM,\n"
                        + " WIDTH_FACT, NO_ENDS, REED, REED_SPACE, WEAVE, DRAW, SYN, GSM_ORD, GSM_MFG, \n"
                        + " W_WGT, WE_WGT, TK_UP, THEO_WEIGHT, THEO_LENGTH, THEO_PICKS, LENGTH_FACT, \n"
                        + " END_LENGTH, T_THICK, THEO_CFM, BASE_SKG_TOTAL, TOTAL_SKG, TRIM_WEIGHT, WEIGHT_RANGE, \n"
                        + " BILL_WEIGHT, KILLOS, FACE_SINGLE, PER_COUNT, WEAVING_INSTRUCTION, \n"
                        + " DRYER_WIDTH_MARK_WET_DRY, TAG_INSTRUCTION, FINISHING_INSTRUCTION, \n"
                        + " NEEDLING_INSTRUCTION, DRESS_DRAW_WEAVING_INSTRUCTION, BASE_GSM, WEB_GSM, \n"
                        + " TOTAL_GSM, SAFETY, NEEDLING_TANTION, PER_WEB, PER_SYN_BASE, PER_SYN_WEB, \n"
                        + " WEB_ON_FACE, WEB_ON_BACK, PAINT_LINES, LOOM_NO, NEEDLING_TEN_FACT, TW_BE_ND, \n"
                        + " T_WEB_WEIGHT, T_TOTAL_WEIGHT, REMARK, MFG_LENGTH, \n"
                        + " MKG_WIDTH, MFG_WIDTH, SR_NO, FACE_WEB, FACE_NO_WEB, BACK_WEB, BACK_NO_WEB, TAKE_UP, PENETRATION\n"
                        + "FROM\n"
                        + " PRODUCTION.FELT_DESIGN_MASTER_HEADER H,\n"
                        + " PRODUCTION.FELT_DESIGN_MASTER_DETAIL D\n"
                        + "WHERE\n"
                        + " D.DESIGN_DOC_NO = H.DESIGN_DOC_NO\n"
                        + " AND H.DESIGN_DOC_NO = '" + txtDocNo.getText() + "'\n"
                        + " AND H.DESIGN_REVISION_NO = '" + txtRevision.getText() + "'";

                System.out.println("Q (MULTI LAYER - A) : " + strSQL);

                rpt.setReportName("/EITLERP/FeltSales/FeltDesignMaster/Report/FeltDesign.jrxml", 1, strSQL); //productlist is the name of my jasper file.

                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            }
           
            try {
                Conn = data.getConn();
                st = Conn.createStatement();

                HashMap parameterMap = new HashMap();
                parameterMap.put("CONTEXT", "http://200.0.0.227:8080/SDMLERP/");

                ReportRegister rpt = new ReportRegister(parameterMap, Conn);

                String strSQL = "SELECT \n"
                        + " H.*,D.* \n"
                        + "FROM\n"
                        + " PRODUCTION.FELT_DESIGN_MASTER_HEADER H,\n"
                        + " PRODUCTION.FELT_DESIGN_MASTER_DETAIL D\n"
                        + "WHERE\n"
                        + " D.DESIGN_DOC_NO = H.DESIGN_DOC_NO\n"
                        + " AND H.DESIGN_DOC_NO = '" + txtDocNo.getText() + "'\n"
                        + " AND H.DESIGN_REVISION_NO = '" + txtRevision.getText() + "'";

                System.out.println("Q (MULTI LAYER - B) : " + strSQL);

                rpt.setReportName("/EITLERP/FeltSales/FeltDesignMaster/Report/FeltDesign_multiLayer.jrxml", 1, strSQL); //productlist is the name of my jasper file.

                rpt.callReport();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        Add();
        txtBaseGSM_A.setEnabled(false);
        txtBaseGSM_B.setEnabled(false);
        txtBaseGSM.setEnabled(true);
        txtTW_B4_ND_A.setEnabled(false);
        txtTW_B4_ND_B.setEnabled(false);
        txtTW_B4_ND.setEnabled(true);
        txtLayerType.setText("SINGLE_LAYER");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Add();
        txtBaseGSM_A.setEnabled(true);
        txtBaseGSM_B.setEnabled(true);
        txtBaseGSM.setEnabled(false);
        txtTW_B4_ND_A.setEnabled(true);
        txtTW_B4_ND_B.setEnabled(true);
        txtTW_B4_ND.setEnabled(false);
        
        txtStyle1.setEnabled(true);
        txtProdGroup1.setEnabled(true);
        txtProdCode1.setEnabled(true);
        txtLength1.setEnabled(true);
        txtWidth1.setEnabled(true);
        txtWEAVE1.setEnabled(true);
        txtWEFT1.setEnabled(true);
        txtPICKS10CM1.setEnabled(true);
        txtWARP1.setEnabled(true);
        txtENDS10CM1.setEnabled(true);
        txtWidthFact1.setEnabled(true);
        txtNoEnds1.setEnabled(true);
        txtREED1.setEnabled(true);
        txtREEDSp1.setEnabled(true);
        txtWWGT1.setEnabled(true);
        txtWE_WGT1.setEnabled(true);
        txtTK_UP1.setEnabled(true);
        txtTheoWeight1.setEnabled(true);
        txtTheoLength1.setEnabled(true);
        txtTheoPicks1.setEnabled(true);
        txtLengthFACT1.setEnabled(true);
        txtENDLength1.setEnabled(true);
        txtBASE_SKG_TOT1.setEnabled(true);
        txtFinishingInstruction_new1.setEnabled(true);
        txtLayerType.setText("MULTI_LAYER");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void txtBaseGSM_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBaseGSM_AFocusLost
        // TODO add your handling code here:
        int Base_GSM_A = 0;
        int Base_GSM_B = 0;
        try {
            Base_GSM_A = Integer.parseInt(txtBaseGSM_A.getText());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        try {
            Base_GSM_B = Integer.parseInt(txtBaseGSM_B.getText());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        txtBaseGSM.setText((Base_GSM_A + Base_GSM_B) + "");
    }//GEN-LAST:event_txtBaseGSM_AFocusLost

    private void txtBaseGSM_BFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBaseGSM_BFocusLost
        // TODO add your handling code here:
        int Base_GSM_A = 0;
        int Base_GSM_B = 0;
        try {
            Base_GSM_A = Integer.parseInt(txtBaseGSM_A.getText());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        try {
            Base_GSM_B = Integer.parseInt(txtBaseGSM_B.getText());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        txtBaseGSM.setText((Base_GSM_A + Base_GSM_B) + "");
    }//GEN-LAST:event_txtBaseGSM_BFocusLost

    private void txtTW_B4_ND_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTW_B4_ND_AFocusLost
        // TODO add your handling code here:
        double TW_B4_ND_A = 0;
        double TW_B4_ND_B = 0;
        try {
             TW_B4_ND_A = Double.parseDouble(txtTW_B4_ND_A.getText());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        try {
             TW_B4_ND_B = Double.parseDouble(txtTW_B4_ND_B.getText());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        txtTW_B4_ND.setText((TW_B4_ND_A + TW_B4_ND_B) + "");
    }//GEN-LAST:event_txtTW_B4_ND_AFocusLost

    private void txtTW_B4_ND_BFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTW_B4_ND_BFocusLost
        // TODO add your handling code here:
        double TW_B4_ND_A = 0;
        double TW_B4_ND_B = 0;
        try {
             TW_B4_ND_A = Double.parseDouble(txtTW_B4_ND_A.getText());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        try {
             TW_B4_ND_B = Double.parseDouble(txtTW_B4_ND_B.getText());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        txtTW_B4_ND.setText((TW_B4_ND_A + TW_B4_ND_B) + "");
    }//GEN-LAST:event_txtTW_B4_ND_BFocusLost

    private void txtStyle1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStyle1KeyPressed
        // TODO add your handling code here:
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct(PRODUCT_STYLE) FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_CATEGORY='" + txtProdCategory.getText() + "'";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtStyle1.setText(aList.ReturnVal);
                txtWEAVE1.setText("");
                txtWEFT1.setText("");
                txtPICKS10CM1.setText("");
                //txtSYN1.setText("");
                txtWARP1.setText("");
                txtWarpDetail1.setText("");
                txtWeftDetail1.setText("");
                txtREED1.setText("");
                txtTK_UP1.setText("");
                txtENDS10CM1.setText("");
                txtTheoPicks1.setText("");
                //txtTOT_SKG1.setText("");
                txtBASE_SKG_TOT1.setText("");
                txtLengthFACT1.setText("");
                txtWidthFact1.setText("");
                //txtPerCount1.setText("");

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtStyle1KeyPressed

    private void txtWidth1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWidth1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWidth1FocusLost

    private void txtProdCode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdCode1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdCode1KeyPressed

    private void txtProdGroup1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdGroup1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdGroup1KeyPressed

    private void txtWEAVE1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWEAVE1KeyPressed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (txtStyle1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Select Style");
            return;
        }
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct DESIGN FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where PRODUCT_STYLE='" + txtStyle1.getText() + "'";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtWEAVE1.setText(aList.ReturnVal);
                txtWEFT1.setText("");
                txtPICKS10CM1.setText("");
                txtWARP1.setText("");
                txtREED1.setText("");
                txtTK_UP1.setText("");
                txtENDS10CM1.setText("");
                txtTheoPicks1.setText("");
                txtBASE_SKG_TOT1.setText("");
                txtLengthFACT1.setText("");
                txtWidthFact1.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtWEAVE1KeyPressed

    private void txtWEFT1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWEFT1KeyPressed
        // TODO add your handling code here:
        if (txtWEAVE1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Select Weave");
            return;
        }
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct  WEFT_W1 FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where DESIGN='" + txtWEAVE1.getText() + "'";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtWEFT1.setText(aList.ReturnVal);
                txtPICKS10CM1.setText("");
                txtWARP1.setText("");
                txtREED1.setText("");
                txtTK_UP1.setText("");
                txtENDS10CM1.setText("");
                txtTheoPicks1.setText("");
                
                txtBASE_SKG_TOT1.setText("");
                txtLengthFACT1.setText("");
                txtWidthFact1.setText("");
                
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtWEFT1KeyPressed

    private void txtPICKS10CM1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPICKS10CM1KeyPressed
        // TODO add your handling code here:
          // TODO add your handling code here:
        //txtPICKS10CM.setText(rs.getString("PICKS_10CM_P1"));
        if (txtWEFT1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Select Weft");
            return;
        }
        try {
            LOV aList = new LOV();

//                aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER  WHERE MAIN_ACCOUNT_CODE='210010'";
            aList.SQL = "SELECT distinct PICKS_10CM_P1 FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where WEFT_W1='" + txtWEFT1.getText() + "' AND DESIGN='" + txtWEAVE1.getText() + "'";
            System.out.println("SELECT distinct PICKS_10CM_P1 FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where WEFT_W1='" + txtWEFT1.getText() + "' AND DESIGN='" + txtWEAVE1.getText() + "'");
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            aList.UseSpecifiedConn = true;
            aList.dbURL = EITLERPGLOBAL.DatabaseURL;

            if (aList.ShowLOV()) {
                txtPICKS10CM1.setText(aList.ReturnVal);

                ResultSet rs = data.getResult("SELECT PER_OF_CONT,DESIGN,WF,LF,SYN,WARP,WARP_TXT,REED,TAKE_UP,ENDS_10CM,DESIGN,WEFT_W1,WEFT_TXT,WEFT_W2,PICKS_10CM_P1,PICKS_10CM_P2,WF,LF,BASE_SKG,TOTAL_SKG FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where  PRODUCT_STYLE='" + txtStyle1.getText() + "' AND WEFT_W1='" + txtWEFT1.getText() + "' AND DESIGN='" + txtWEAVE1.getText() + "' AND PICKS_10CM_P1='" + aList.ReturnVal + "'");
                System.out.println("SELECT PER_OF_CONT,DESIGN,WF,LF,SYN,WARP,WARP_TXT,REED,TAKE_UP,ENDS_10CM,DESIGN,WEFT_W1,WEFT_TXT,WEFT_W2,PICKS_10CM_P1,PICKS_10CM_P2,WF,LF,BASE_SKG,TOTAL_SKG FROM PRODUCTION.FELT_DESIGN_PARAMETER_MASTER where  PRODUCT_STYLE='" + txtStyle1.getText() + "' AND WEFT_W1='" + txtWEFT1.getText() + "' AND DESIGN='" + txtWEAVE1.getText() + "' AND PICKS_10CM_P1='" + aList.ReturnVal + "'");
                try {
                    rs.first();
                    txtWARP1.setText(rs.getString("WARP"));
                    txtREED1.setText(rs.getString("REED"));
                    txtTK_UP1.setText(rs.getString("TAKE_UP"));
                    txtENDS10CM1.setText(rs.getString("ENDS_10CM"));
                    txtTheoPicks1.setText(rs.getString("PICKS_10CM_P1"));
                    txtWarpDetail1.setText(rs.getString("WARP_TXT"));
                    txtWeftDetail1.setText(rs.getString("WEFT_TXT"));
                    txtBASE_SKG_TOT1.setText(rs.getString("BASE_SKG"));
                    txtLengthFACT1.setText(rs.getString("LF"));
                    txtWidthFact1.setText(rs.getString("WF"));

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtPICKS10CM1KeyPressed

    private void txtMfgWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMfgWidthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMfgWidthActionPerformed

    private void txtStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStyleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStyleActionPerformed

    private void txtWidthFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWidthFactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWidthFactActionPerformed

    private void BtnMultipart_FormulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMultipart_FormulaActionPerformed
        // TODO add your handling code here:
        GenerateFormula_Multipart();
        int Base_GSM_A = 0;
        int Base_GSM_B = 0;
        try {
            Base_GSM_A = Integer.parseInt(txtBaseGSM_A.getText());
        } catch (Exception e) { }
        try {
            Base_GSM_B = Integer.parseInt(txtBaseGSM_B.getText());
        } catch (Exception e) { }
        txtBaseGSM.setText((Base_GSM_A + Base_GSM_B) + "");
        double TW_B4_ND_A = 0;
        double TW_B4_ND_B = 0;
        try {
             TW_B4_ND_A = Double.parseDouble(txtTW_B4_ND_A.getText());
        } catch (Exception e) { e.printStackTrace(); }
        try {
             TW_B4_ND_B = Double.parseDouble(txtTW_B4_ND_B.getText());
        } catch (Exception e) { e.printStackTrace(); }
        txtTW_B4_ND.setText((TW_B4_ND_A + TW_B4_ND_B) + "");
    }//GEN-LAST:event_BtnMultipart_FormulaActionPerformed

    private void txtWeftDetail1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeftDetail1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeftDetail1ActionPerformed
    /*    */

    private void ReportShow() {

    }

    private void MoveFirst() {
        objDM.MoveFirst();
        DisplayData();
    }

    private void MovePrevious() {
        objDM.MovePrevious();
        DisplayData();
    }

    private void MoveNext() {
        objDM.MoveNext();
        DisplayData();
    }

    private void MoveLast() {
        objDM.MoveLast();
        DisplayData();
    }

    private void Add() {
        //  EditMode=EITLERPGLOBAL.ADD;

        if (!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null, "The year is closed. You cannot enter/edit any transaction");
            return;
        }
        clearFields();

        EditMode = EITLERPGLOBAL.ADD;
        DisableToolbar();
        SetFields(true);
        SetupApproval();
        lblTitle.setBackground(new Color(0, 102, 153));
        lblTitle.setForeground(Color.WHITE);

        txtDocDate.setText(df.format(new Date()));
        
        SelectFirstFree aList = new SelectFirstFree();
        aList.ModuleID = ModuleId;
        aList.FirstFreeNo = 346;
        
        FFNo = aList.FirstFreeNo;
        txtDocNo.setText(clsFirstFree.getNextFreeNo(EITLERPGLOBAL.gCompanyID, ModuleId, FFNo, false));
        lblTitle.setText("Felt Design Master - " + txtDocNo.getText());

    }
    
    public void FindByDocNo(String DocNo) {
        objDM.Filter(" DESIGN_DOC_NO='" + DocNo + "'");
        SetMenuForRights();
        DisplayData();
    }
    
    private void Find() {
        Loader ObjLoader = new Loader(this, "EITLERP.FeltSales.FeltDesignMaster.frmFindDesignMaster", true);
        frmFindDesignMaster ObjFindobjDM = (frmFindDesignMaster) ObjLoader.getObj();

        if (ObjFindobjDM.Cancelled == false) {
            if (!objDM.Filter(ObjFindobjDM.stringFindQuery)) {
                JOptionPane.showMessageDialog(this, "No records found.", "Find Felt Design Master", JOptionPane.YES_OPTION);
            }
            MoveLast();
        }
    }

    public void FindEx(int pCompanyID, String AmendID) {
        objDM.Filter(" DOC_NO='" + AmendID + "'");
        objDM.MoveFirst();
        DisplayData();
    }

    // find rate update by doc no
    public void Find(String docNo) {
        objDM.Filter(" DOC_NO='" + docNo + "'");
        SetMenuForRights();
        DisplayData();
    }

    public void FindWaiting() {
        objDM.Filter(" AND PROD_DOC_NO IN (SELECT DISTINCT PROD_DOC_NO FROM PRODUCTION.FELT_PROD_DATA, PRODUCTION.FELT_PROD_DOC_DATA WHERE PROD_DOC_NO=DOC_NO AND USER_ID=" + EITLERPGLOBAL.gNewUserID + " AND STATUS='W' AND MODULE_ID=" + ModuleId + " AND CANCELED=0) ");
        SetMenuForRights();
        DisplayData();
    }

    private void Save() {

        SetData();

        if (cmbHierarchy.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Select the hierarchy.", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if ((!OpgApprove.isSelected()) && (!OpgReject.isSelected()) && (!OpgFinal.isSelected()) && (!OpgHold.isSelected())) {
            JOptionPane.showMessageDialog(this, "Select the Approval Action.", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (OpgReject.isSelected() && txtToRemarks.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the remarks for rejection", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if ((OpgApprove.isSelected() || OpgReject.isSelected()) && cmbSendTo.getItemCount() <= 0) {
            JOptionPane.showMessageDialog(this, "Select the user, to whom rejected document to be send", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //objDM.LoadData();
        if (EditMode == EITLERPGLOBAL.ADD) {
            
            if (objDM.Insert()) {
                SelectFirstFree aList = new SelectFirstFree();
                aList.ModuleID = ModuleId;
                aList.FirstFreeNo = 346;
                FFNo = aList.FirstFreeNo;
                clsFirstFree.getNextFreeNo(EITLERPGLOBAL.gCompanyID, ModuleId, FFNo, true);
                EditMode = 0;

                if (OpgFinal.isSelected()) {

                    try {

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }

                DisplayData();
            } else {
                JOptionPane.showMessageDialog(this, "Error occured while saving. Error is " + objDM.LastError, " SAVING ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if (EditMode == EITLERPGLOBAL.EDIT) {
            if (objDM.Update()) {
                if (OpgFinal.isSelected()) {
                    try {

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                EditMode = 0;
                DisplayData();
            } else {
                JOptionPane.showMessageDialog(this, "Error occured while saving editing. Error is " + objDM.LastError, "SAVING ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        EditMode = 0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        try {
            if (PENDING_DOCUMENT) {
                frmPA.RefreshView();
                PENDING_DOCUMENT = false;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void Cancel() {
        EditMode = 0;
        DisplayData();
        EnableToolbar();
        SetMenuForRights();
        SetFields(false);
    }

    private void EnableToolbar() {
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }

    private void Edit() {

        String productionDocumentNo = (String) objDM.getAttribute("DESIGN_DOC_NO").getObj();
        if (objDM.IsEditable(productionDocumentNo, EITLERPGLOBAL.gNewUserID)) {
            EditMode = EITLERPGLOBAL.EDIT;

            DisableToolbar();

            GenerateHierarchyCombo();
            GenerateSendToCombo();
            DisplayData();

            SetupApproval();
            //ReasonResetReadonly();
            //cmbOrderReason.setEnabled(false);
            if (clsFeltProductionApprovalFlow.IsCreator(ModuleId, productionDocumentNo)) {
                SetFields(true);
            } else {
                EnableApproval();
            }
        } else {
            JOptionPane.showMessageDialog(this, "You cannot edit this record. It is either approved/rejected or waiting approval for other user", "EDITING ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void Delete() {
        if (objDM.CanDelete(txtDocNo.getText() + "", txtDocDate.getText(), EITLERPGLOBAL.gNewUserID)) {
            DisplayData();
        } else {
            JOptionPane.showMessageDialog(this, objDM.LastError, "DELETION ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void GenerateHierarchyCombo() {
        HashMap hmHierarchyList = new HashMap();

        cmbHierarchyModel = new EITLComboModel();
        cmbHierarchy.removeAllItems();
        cmbHierarchy.setModel(cmbHierarchyModel);

        hmHierarchyList = clsHierarchy.getListEx(" WHERE D_COM_HIERARCHY.COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " AND MODULE_ID=" + ModuleId + " ");

        if (EditMode == EITLERPGLOBAL.EDIT) {
            hmHierarchyList = clsHierarchy.getList(" WHERE COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " AND MODULE_ID=" + ModuleId + " ");
        }
        for (int i = 1; i <= hmHierarchyList.size(); i++) {
            clsHierarchy ObjHierarchy = (clsHierarchy) hmHierarchyList.get(Integer.toString(i));
            ComboData aData = new ComboData();
            aData.Code = (int) ObjHierarchy.getAttribute("HIERARCHY_ID").getVal();
            aData.Text = (String) ObjHierarchy.getAttribute("HIERARCHY_NAME").getObj();
            cmbHierarchyModel.addElement(aData);
        }
    }

    private void GenerateSendToCombo() {
        HashMap hmSendToList = new HashMap();
        try {
            cmbSendToModel = new EITLComboModel();
            cmbSendTo.removeAllItems();
            cmbSendTo.setModel(cmbSendToModel);
            if (EditMode == EITLERPGLOBAL.ADD) {
                hmSendToList = clsHierarchy.getUserList((int) EITLERPGLOBAL.gCompanyID, SelHierarchyID, EITLERPGLOBAL.gNewUserID);
                for (int i = 1; i <= hmSendToList.size(); i++) {
                    clsUser ObjUser = (clsUser) hmSendToList.get(Integer.toString(i));
                    ComboData aData = new ComboData();
                    aData.Code = (int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text = (String) ObjUser.getAttribute("USER_NAME").getObj();

                    if (ObjUser.getAttribute("USER_ID").getVal() == EITLERPGLOBAL.gNewUserID) {
                        //Exclude Current User
                    } else {
                        cmbSendToModel.addElement(aData);
                    }
                }
            } else {
                hmSendToList = clsFeltProductionApprovalFlow.getRemainingUsers(ModuleId, txtDocNo.getText() + "");
                for (int i = 1; i <= hmSendToList.size(); i++) {
                    clsUser ObjUser = (clsUser) hmSendToList.get(Integer.toString(i));
                    ComboData aData = new ComboData();
                    aData.Code = (int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text = (String) ObjUser.getAttribute("USER_NAME").getObj();
                    cmbSendToModel.addElement(aData);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void EnableApproval() {
        cmbSendTo.setEnabled(true);
        OpgApprove.setEnabled(true);
        OpgFinal.setEnabled(true);
        OpgReject.setEnabled(true);
        OpgHold.setEnabled(true);
        txtToRemarks.setEnabled(true);
        SetupApproval();
        SetFields(true);
        //========== Setting Up Header Fields ================//
        String FieldName = "";
        SelHierarchyID = EITLERPGLOBAL.getComboCode(cmbHierarchy);

    }

    private void SetFields(boolean pStat) {
        txtDocDate.setEnabled(pStat);
        txtDocNo.setEnabled(pStat);

        cmbHierarchy.setEnabled(pStat);
        OpgApprove.setEnabled(pStat);
        OpgReject.setEnabled(pStat);
        OpgFinal.setEnabled(pStat);
        OpgHold.setEnabled(pStat);
        cmbSendTo.setEnabled(pStat);
        txtToRemarks.setEnabled(pStat);
        txtPartyCode.setEnabled(pStat);
        txtMachineNo.setEnabled(pStat);
        txtPosition.setEnabled(pStat);
        txtFaceSingle.setEnabled(pStat);
        txtBackSingle.setEnabled(pStat);
        tblSDML.setEnabled(pStat);
        jButton1.setEnabled(pStat);

        SetupApproval();
        if (clsHierarchy.IsCreator(EITLERPGLOBAL.gCompanyID, SelHierarchyID, EITLERPGLOBAL.gUserID)) {
            OpgReject.setEnabled(false);
        }
        if (clsHierarchy.CanFinalApprove(EITLERPGLOBAL.gCompanyID, SelHierarchyID, EITLERPGLOBAL.gUserID)) {
            //JOptionPane.showMessageDialog(null, "Final Approver");
            OpgApprove.setEnabled(false);
        }
        
        txtPositionDesc.setEnabled(false);
        txtMkgWidth.setEnabled(pStat);
        txtMfgLength.setEnabled(pStat);
        txtWARP_Detail.setEnabled(pStat);
        txtWEFT_Detail.setEnabled(pStat);
        txtMfgWidth.setEnabled(pStat);
        txtProdCategory.setEnabled(pStat);
        txtRef.setEnabled(pStat);
        txtStyle.setEnabled(pStat);
        txtPosDesignNo.setEnabled(pStat);
        txtUPN.setEnabled(pStat);
        txtRevision.setEnabled(pStat);
        txtPartyCode.setEnabled(pStat);
        txtProdGroup.setEnabled(pStat);
        txtProdCode.setEnabled(pStat);
        txtLength.setEnabled(pStat);
        txtWidth.setEnabled(pStat);
        txtGSM.setEnabled(pStat);
        txtSqmtr.setEnabled(pStat);
        txtWeight.setEnabled(pStat);
        txtResForReviasion.setEnabled(pStat);
        txtWARP.setEnabled(pStat);
        txtWEFT.setEnabled(pStat);
        txtENDS10CM.setEnabled(pStat);
        txtPICKS10CM.setEnabled(pStat);
        txtWidthFact.setEnabled(pStat);
        txtNoEnds.setEnabled(pStat);
        txtREED.setEnabled(pStat);
        txtREEDSp.setEnabled(pStat);
        txtWEAVE.setEnabled(pStat);
        txtDRAW.setEnabled(pStat);
        txtSYN.setEnabled(pStat);
        txtGSMORD.setEnabled(pStat);
        txtGSMMFG.setEnabled(pStat);
        txtWWGT.setEnabled(pStat);
        txtWE_WGT.setEnabled(pStat);
        txtTK_UP.setEnabled(pStat);
        txtTheoWeight.setEnabled(pStat);
        txtTheoLength.setEnabled(pStat);
        txtTheoPicks.setEnabled(pStat);
        txtLengthFACT.setEnabled(pStat);
        txtENDLength.setEnabled(pStat);
        txtT_Thick.setEnabled(pStat);
        txtTH_CFM.setEnabled(pStat);
        txtBASE_SKG_TOT.setEnabled(pStat);
        txtTOT_SKG.setEnabled(pStat);
        txtTrimWt.setEnabled(pStat);
        txtWeightRange.setEnabled(pStat);
        txtBillWeight.setEnabled(pStat);
        txtKillos.setEnabled(pStat);
        txtFaceSingle.setEnabled(pStat);
        txtPerCount.setEnabled(pStat);
        txtWeavingInstruction.setEnabled(pStat);
        txtNeedlingInstruction.setEnabled(pStat);
        txtTagInstruction.setEnabled(pStat);
        txtDryerWidthMarkWet.setEnabled(pStat);
        txtFinishingInstruction_new.setEnabled(pStat);
        txtDressDrawWeavingInstruction.setEnabled(pStat);

        txtWEBGSM.setEnabled(pStat);
        txtTotalGSM.setEnabled(pStat);
        txtSafety.setEnabled(pStat);
        txtNeedlingTantion.setEnabled(pStat);
        txtPerWEB.setEnabled(pStat);
        txtPerSYNBase.setEnabled(pStat);
        txtT_TOT_WGT_PCE.setEnabled(pStat);
        txtPerSYNWEB.setEnabled(pStat);
        txtLOOM_NO.setEnabled(pStat);
        txtWebOnFace.setEnabled(pStat);
        txtWebOnBack.setEnabled(pStat);
        txtT_WEB_WGT.setEnabled(pStat);
        txtPaintLines.setEnabled(pStat);
        txtNeedlingTenFACT.setEnabled(pStat);

        txtRemark.setEnabled(pStat);

        btnAdd.setEnabled(pStat);
        btnRemove.setEnabled(pStat);
        txtLayerType.setEnabled(false);

        cmbChangedBy.setEnabled(pStat);
//        if(txtLayerType.getText().equals("SINGLE_LAYER"))
//        {
//            txtBaseGSM_A.setEnabled(pStat);
//            txtBaseGSM_B.setEnabled(pStat);
//            txtBaseGSM.setEnabled(pStat);
//
//            txtTW_B4_ND_A.setEnabled(pStat);
//            txtTW_B4_ND_B.setEnabled(pStat);
//            txtTW_B4_ND.setEnabled(pStat);
//        }
//        else
//        {
        txtBaseGSM_A.setEnabled(pStat);
        txtBaseGSM_B.setEnabled(pStat);
        txtBaseGSM.setEnabled(pStat);

        txtTW_B4_ND_A.setEnabled(pStat);
        txtTW_B4_ND_B.setEnabled(pStat);
        txtTW_B4_ND.setEnabled(pStat);
//        }
        txtStyle1.setEnabled(false);
        txtProdGroup1.setEnabled(false);
        txtProdCode1.setEnabled(false);
        txtLength1.setEnabled(false);
        txtWidth1.setEnabled(false);
        
        txtWEAVE1.setEnabled(false);
        txtWEFT1.setEnabled(false);
        txtPICKS10CM1.setEnabled(false);
        txtWARP1.setEnabled(false);
        txtENDS10CM1.setEnabled(false);
        txtWidthFact1.setEnabled(false);
        txtNoEnds1.setEnabled(false);
        txtREED1.setEnabled(false);
        txtREEDSp1.setEnabled(false);
        txtWWGT1.setEnabled(false);
        txtWE_WGT1.setEnabled(false);
        txtTK_UP1.setEnabled(false);
        txtTheoWeight1.setEnabled(false);
        txtTheoLength1.setEnabled(false);
        txtTheoPicks1.setEnabled(false);
        txtLengthFACT1.setEnabled(false);
        txtENDLength1.setEnabled(false);
        txtBASE_SKG_TOT1.setEnabled(false);
        txtFinishingInstruction_new1.setEnabled(false);
        if (txtLayerType.getText().equals("SINGLE_LAYER")) {

        } else if (true && (EditMode == EITLERPGLOBAL.ADD || EditMode == EITLERPGLOBAL.EDIT)) {
            txtStyle1.setEnabled(true);
            txtProdGroup1.setEnabled(true);
            txtProdCode1.setEnabled(true);
            txtLength1.setEnabled(true);
            txtWidth1.setEnabled(true);
            txtWEAVE1.setEnabled(true);
            txtWEFT1.setEnabled(true);
            txtPICKS10CM1.setEnabled(true);
            txtWARP1.setEnabled(true);
            txtENDS10CM1.setEnabled(true);
            txtWidthFact1.setEnabled(true);
            txtNoEnds1.setEnabled(true);
            txtREED1.setEnabled(true);
            txtREEDSp1.setEnabled(true);
            txtWWGT1.setEnabled(true);
            txtWE_WGT1.setEnabled(true);
            txtTK_UP1.setEnabled(true);
            txtTheoWeight1.setEnabled(true);
            txtTheoLength1.setEnabled(true);
            txtTheoPicks1.setEnabled(true);
            txtLengthFACT1.setEnabled(true);
            txtENDLength1.setEnabled(true);
            txtBASE_SKG_TOT1.setEnabled(true);
            txtFinishingInstruction_new1.setEnabled(true);
        }
    }

    private void DisableToolbar() {
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);

    }

    private void SetData() {

        if (EditMode == EITLERPGLOBAL.ADD) {
            SelectFirstFree aList = new SelectFirstFree();
            aList.ModuleID = ModuleId;
            aList.FirstFreeNo = 346;

            FFNo = aList.FirstFreeNo;
            txtDocNo.setText(clsFirstFree.getNextFreeNo(EITLERPGLOBAL.gCompanyID, ModuleId, FFNo, false));
            lblTitle.setText("Felt Design Master - " + txtDocNo.getText());
        }
        
        
        objDM.setAttribute("DESIGN_DOC_NO", txtDocNo.getText());
        objDM.setAttribute("DESIGN_DOC_DATE", txtDocDate.getText());

        objDM.setAttribute("REFERENCE", txtRef.getText());
        objDM.setAttribute("PRESS_CATEGORY", txtProdCategory.getText());
        objDM.setAttribute("STYLE", txtStyle.getText());
        objDM.setAttribute("POSITION_DESIGN_NO", txtPosDesignNo.getText());
        objDM.setAttribute("UPN_NO", txtUPN.getText());
        objDM.setAttribute("DESIGN_REVISION_NO", txtRevision.getText());
        objDM.setAttribute("PARTY_CODE", txtPartyCode.getText());
        objDM.setAttribute("PARTY_NAME", txtPartyName.getText());
        objDM.setAttribute("MACHINE_NO", txtMachineNo.getText());
        objDM.setAttribute("POSITION_NO", txtPosition.getText());
        objDM.setAttribute("PRODUCT_GROUP", txtProdGroup.getText());
        objDM.setAttribute("PRODUCT_CODE", txtProdCode.getText());
        objDM.setAttribute("LENGTH", txtLength.getText());
        objDM.setAttribute("MFG_LENGTH", txtMfgLength.getText());
        objDM.setAttribute("WIDTH", txtWidth.getText());
        objDM.setAttribute("GSM", txtGSM.getText());

        objDM.setAttribute("SQMTR", txtSqmtr.getText());
        objDM.setAttribute("WEIGHT", txtWeight.getText());
        objDM.setAttribute("REASON_OF_REVISION", txtResForReviasion.getText());
        objDM.setAttribute("WARP", txtWARP.getText());
        objDM.setAttribute("WEFT", txtWEFT.getText());
        objDM.setAttribute("ENDS_10CM", txtENDS10CM.getText());
        objDM.setAttribute("PICKS_10CM", txtPICKS10CM.getText());
        objDM.setAttribute("WIDTH_FACT", txtWidthFact.getText());
        objDM.setAttribute("NO_ENDS", txtNoEnds.getText());
        objDM.setAttribute("REED", txtREED.getText());
        objDM.setAttribute("REED_SPACE", txtREEDSp.getText());
        objDM.setAttribute("WEAVE", txtWEAVE.getText());
        objDM.setAttribute("DRAW", txtDRAW.getText());
        objDM.setAttribute("SYN", txtSYN.getText());
        objDM.setAttribute("GSM_ORD", txtGSMORD.getText());
        objDM.setAttribute("GSM_MFG", txtGSMMFG.getText());
        objDM.setAttribute("W_WGT", txtWWGT.getText());
        objDM.setAttribute("WE_WGT", txtWE_WGT.getText());

        objDM.setAttribute("TK_UP", txtTK_UP.getText());
        objDM.setAttribute("THEO_WEIGHT", txtTheoWeight.getText());
        objDM.setAttribute("THEO_LENGTH", txtTheoLength.getText());
        objDM.setAttribute("THEO_PICKS", txtTheoPicks.getText());
        objDM.setAttribute("LENGTH_FACT", txtLengthFACT.getText());
        objDM.setAttribute("END_LENGTH", txtENDLength.getText());
        objDM.setAttribute("T_THICK", txtT_Thick.getText());
        objDM.setAttribute("THEO_CFM", txtTH_CFM.getText());
        objDM.setAttribute("BASE_SKG_TOTAL", txtBASE_SKG_TOT.getText());
        objDM.setAttribute("TOTAL_SKG", txtTOT_SKG.getText());
        objDM.setAttribute("TRIM_WEIGHT", txtTrimWt.getText());
        objDM.setAttribute("WEIGHT_RANGE", txtWeightRange.getText());
        objDM.setAttribute("BILL_WEIGHT", txtBillWeight.getText());
        objDM.setAttribute("KILLOS", txtKillos.getText());
        objDM.setAttribute("MKG_WIDTH", txtMkgWidth.getText());
        objDM.setAttribute("MFG_WIDTH", txtMfgWidth.getText());

        objDM.setAttribute("FACE_SINGLE", txtFaceSingle.getText());
        objDM.setAttribute("BACK_SINGLE", txtBackSingle.getText());
        objDM.setAttribute("PER_COUNT", txtPerCount.getText());
        objDM.setAttribute("WEAVING_INSTRUCTION", txtWeavingInstruction.getText());
        objDM.setAttribute("NEEDLING_INSTRUCTION", txtNeedlingInstruction.getText());
        objDM.setAttribute("TAG_INSTRUCTION", txtTagInstruction.getText());
        objDM.setAttribute("DRYER_WIDTH_MARK_WET_DRY", txtDryerWidthMarkWet.getText());
        objDM.setAttribute("FINISHING_INSTRUCTION", txtFinishingInstruction_new.getText());
        objDM.setAttribute("DRESS_DRAW_WEAVING_INSTRUCTION", txtDressDrawWeavingInstruction.getText());
        objDM.setAttribute("BASE_GSM_A", txtBaseGSM_A.getText());
        objDM.setAttribute("BASE_GSM_B", txtBaseGSM_B.getText());
        objDM.setAttribute("BASE_GSM", txtBaseGSM.getText());
        objDM.setAttribute("WEB_GSM", txtWEBGSM.getText());
        objDM.setAttribute("TOTAL_GSM", txtTotalGSM.getText());
        objDM.setAttribute("SAFETY", txtSafety.getText());
        objDM.setAttribute("NEEDLING_TANTION", txtNeedlingTantion.getText());
        objDM.setAttribute("REMARK", txtRemark.getText());
        objDM.setAttribute("PER_WEB", txtPerWEB.getText());
        objDM.setAttribute("PER_SYN_BASE", txtPerSYNBase.getText());
        objDM.setAttribute("T_TOTAL_WEIGHT", txtT_TOT_WGT_PCE.getText());
        objDM.setAttribute("PER_SYN_WEB", txtPerSYNWEB.getText());
        objDM.setAttribute("LOOM_NO", txtLOOM_NO.getText());
        objDM.setAttribute("WEB_ON_FACE", txtWebOnFace.getText());
        objDM.setAttribute("WEB_ON_BACK", txtWebOnBack.getText());
        objDM.setAttribute("T_WEB_WEIGHT", txtT_WEB_WGT.getText());
        objDM.setAttribute("PAINT_LINES", txtPaintLines.getText());
        objDM.setAttribute("NEEDLING_TEN_FACT", txtNeedlingTenFACT.getText());
        objDM.setAttribute("TW_BE_ND", txtTW_B4_ND.getText());
        objDM.setAttribute("TW_BE_ND_A", txtTW_B4_ND_A.getText());
        objDM.setAttribute("TW_BE_ND_B", txtTW_B4_ND_B.getText());
        objDM.setAttribute("LAYER_TYPE", txtLayerType.getText());
        
        objDM.setAttribute("DESIGN_CHANGED_BY", cmbChangedBy.getSelectedItem());
        

        DOC_NO = txtDocNo.getText();
        objDM.setAttribute("DOC_NO", txtDocNo.getText());
        objDM.setAttribute("DOC_DATE", txtDocDate.getText());
        objDM.setAttribute("MODULE_ID", ModuleId);
        objDM.setAttribute("USER_ID", EITLERPGLOBAL.gNewUserID);

        //----- Update Approval Specific Fields -----------//
        objDM.setAttribute("HIERARCHY_ID", EITLERPGLOBAL.getComboCode(cmbHierarchy));
        objDM.setAttribute("FROM", EITLERPGLOBAL.gNewUserID);
        objDM.setAttribute("TO", EITLERPGLOBAL.getComboCode(cmbSendTo));
        objDM.setAttribute("FROM_REMARKS", txtToRemarks.getText());

        try {
            objDM.setAttribute("STYLE_MULTILAYER", txtStyle1.getText());
            objDM.setAttribute("PRODUCT_GROUP_MULTILAYER", txtProdGroup1.getText());
            objDM.setAttribute("PRODUCT_CODE_MULTILAYER", txtProdCode1.getText());
            objDM.setAttribute("LENGTH_MULTILAYER", txtLength1.getText());
            objDM.setAttribute("WIDTH_MULTILAYER", txtWidth1.getText());
            objDM.setAttribute("GSM_MULTILAYER", "");
            objDM.setAttribute("SQMTR_MULTILAYER", "");
            objDM.setAttribute("WEIGHT_MULTILAYER", "");
            //objDM.setAttribute("GSM_MULTILAYER", txtGSM1.getText());
            //objDM.setAttribute("SQMTR_MULTILAYER", txtSqmtr1.getText());
            //objDM.setAttribute("WEIGHT_MULTILAYER", txtWeight1.getText());
            objDM.setAttribute("WEAVE_MULTILAYER", txtWEAVE1.getText());
            objDM.setAttribute("WEFT_MULTILAYER", txtWEFT1.getText());
            objDM.setAttribute("PICKS_10CM_MULTILAYER", txtPICKS10CM1.getText());
            objDM.setAttribute("WARP_MULTILAYER", txtWARP1.getText());
            objDM.setAttribute("ENDS_10CM_MULTILAYER", txtENDS10CM1.getText());
            objDM.setAttribute("WIDTH_FACT_MULTILAYER", txtWidthFact1.getText());
            objDM.setAttribute("NO_ENDS_MULTILAYER", txtNoEnds1.getText());
            objDM.setAttribute("REED_MULTILAYER", txtREED1.getText());
            objDM.setAttribute("REED_SPACE_MULTILAYER", txtREEDSp1.getText());
            objDM.setAttribute("REASON_OF_REVISION_MULTILAYER", "");
            objDM.setAttribute("DRAW_MULTILAYER", "");
            objDM.setAttribute("GSM_ORD_MULTILAYER", "");
            objDM.setAttribute("GSM_MFG_MULTILAYER", "");
            
//            objDM.setAttribute("REASON_OF_REVISION_MULTILAYER", txtResForReviasion1.getText());
//            objDM.setAttribute("DRAW_MULTILAYER", txtDRAW1.getText());
//            objDM.setAttribute("GSM_ORD_MULTILAYER", txtGSMORD1.getText());
//            objDM.setAttribute("GSM_MFG_MULTILAYER", txtGSMMFG1.getText());
            
            objDM.setAttribute("W_WGT_MULTILAYER", txtWWGT1.getText());
            objDM.setAttribute("WE_WGT_MULTILAYER", txtWE_WGT1.getText());
            objDM.setAttribute("TK_UP_MULTILAYER", txtTK_UP1.getText());
            objDM.setAttribute("THEO_WEIGHT_MULTILAYER", txtTheoWeight1.getText());
            objDM.setAttribute("THEO_LENGTH_MULTILAYER", txtTheoLength1.getText());
            objDM.setAttribute("THEO_PICKS_MULTILAYER", txtTheoPicks1.getText());
            objDM.setAttribute("LENGTH_FACT_MULTILAYER", txtLengthFACT1.getText());
            objDM.setAttribute("END_LENGTH_MULTILAYER", txtENDLength1.getText());
            objDM.setAttribute("T_THICK_MULTILAYER", "");
            objDM.setAttribute("FACE_SINGLE_MULTILAYER", "");
            objDM.setAttribute("KILLOS_MULTILAYER", "");
            objDM.setAttribute("BILL_WEIGHT_MULTILAYER", "");
            objDM.setAttribute("TRIM_WEIGHT_MULTILAYER", "");
            objDM.setAttribute("TOTAL_SKG_MULTILAYER", "");
            
//            objDM.setAttribute("T_THICK_MULTILAYER", txtT_Thick1.getText());
//            objDM.setAttribute("FACE_SINGLE_MULTILAYER", txtFaceSingle1.getText());
//            objDM.setAttribute("KILLOS_MULTILAYER", txtKillos1.getText());
//            objDM.setAttribute("BILL_WEIGHT_MULTILAYER", txtBillWeight1.getText());
//            objDM.setAttribute("TRIM_WEIGHT_MULTILAYER", txtTrimWt1.getText());
//            objDM.setAttribute("TOTAL_SKG_MULTILAYER", txtTOT_SKG1.getText());
            
            objDM.setAttribute("BASE_SKG_TOTAL_MULTILAYER", txtBASE_SKG_TOT1.getText());
            objDM.setAttribute("THEO_CFM_MULTILAYER", "");
            objDM.setAttribute("WEIGHT_RANGE_MULTILAYER", "");
            objDM.setAttribute("PER_COUNT_MULTILAYER", "");
            
            //objDM.setAttribute("THEO_CFM_MULTILAYER", txtTH_CFM1.getText());
            //objDM.setAttribute("WEIGHT_RANGE_MULTILAYER", txtWeightRange1.getText());
            //objDM.setAttribute("PER_COUNT_MULTILAYER", txtPerCount1.getText());
            
            
            objDM.setAttribute("FINISHING_INSTRUCTION_MULTILAYER", txtFinishingInstruction_new1.getText());
            
        } catch (Exception e) {
            e.printStackTrace();
        }

        if (OpgApprove.isSelected()) {
            objDM.setAttribute("APPROVAL_STATUS", "A");
        }

        if (OpgFinal.isSelected()) {
            objDM.setAttribute("APPROVAL_STATUS", "F");
        }

        if (OpgReject.isSelected()) {
            objDM.setAttribute("APPROVAL_STATUS", "R");
            objDM.setAttribute("SEND_DOC_TO", EITLERPGLOBAL.getComboCode(cmbSendTo));
        }

        if (OpgHold.isSelected()) {
            objDM.setAttribute("APPROVAL_STATUS", "H");
        }

        if (EditMode == EITLERPGLOBAL.ADD) {
            objDM.setAttribute("CREATED_BY", EITLERPGLOBAL.gNewUserID);
            objDM.setAttribute("CREATED_DATE", EITLERPGLOBAL.getCurrentDateTimeDB());
        } else {
            objDM.setAttribute("MODIFIED_BY", EITLERPGLOBAL.gNewUserID);
            objDM.setAttribute("MODIFIED_DATE", EITLERPGLOBAL.getCurrentDateDB());
            objDM.setAttribute("UPDATED_BY", EITLERPGLOBAL.gNewUserID);
            objDM.setAttribute("UPDATED_DATE", EITLERPGLOBAL.getCurrentDateDB());
        }

        //======= Set Line part ============
        try {
            objDM.hmFeltPerformanceTrackingDetails.clear();

            for (int i = 0; i <= tblSDML.getRowCount() - 1; i++) {

                clsFeltDesignMasterDetails objDMDetails = new clsFeltDesignMasterDetails();

                //objobjDMDetails.setAttribute("S_ORDER_DETAIL_CODE","");
                objDMDetails.setAttribute("DESIGN_DOC_NO", txtDocNo.getText());
                objDMDetails.setAttribute("SR_NO", DataModel.getValueByVariable("SR_NO", i) + "");//SR_NO

                objDMDetails.setAttribute("FACE_WEB", DataModel.getValueByVariable("FACE_WEB", i) + "");//SR_NO
                objDMDetails.setAttribute("FACE_NO_WEB", DataModel.getValueByVariable("FACE_NO_WEB", i) + "");//SR_NO
                objDMDetails.setAttribute("BACK_WEB", DataModel.getValueByVariable("BACK_WEB", i) + "");//SR_NO
                objDMDetails.setAttribute("BACK_NO_WEB", DataModel.getValueByVariable("BACK_NO_WEB", i) + "");//SR_NO
                objDMDetails.setAttribute("TAKE_UP", DataModel.getValueByVariable("TAKE_UP", i) + "");//SR_NO
                objDMDetails.setAttribute("PENETRATION", DataModel.getValueByVariable("PENETRATION", i) + "");//SR_NO

                objDM.hmFeltPerformanceTrackingDetails.put(Integer.toString(objDM.hmFeltPerformanceTrackingDetails.size() + 1), objDMDetails);
            }

        } catch (Exception e) {
            System.out.println("Error on setData : " + e.getMessage());
            e.printStackTrace();
        };
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnMultipart_Formula;
    private javax.swing.JRadioButton OpgApprove;
    private javax.swing.JRadioButton OpgFinal;
    private javax.swing.JRadioButton OpgHold;
    private javax.swing.JRadioButton OpgReject;
    private javax.swing.JPanel StatusPanel;
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JPanel Tab2;
    private javax.swing.JTable TableApprovalStatus;
    private javax.swing.JTable TableUpdateHistory;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cmbChangedBy;
    private javax.swing.JComboBox cmbHierarchy;
    private javax.swing.JComboBox cmbSendTo;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdBackToTab0;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdFromRemarksBig;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdNextToTab2;
    private javax.swing.JButton cmdNormalView;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdShowRemarks;
    private javax.swing.JButton cmdTop;
    private javax.swing.JButton cmdViewHistory;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblRevNo;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblSDML;
    private javax.swing.JTextField txtAuditRemarks;
    private javax.swing.JTextField txtBASE_SKG_TOT;
    private javax.swing.JTextField txtBASE_SKG_TOT1;
    private javax.swing.JTextField txtBackSingle;
    private javax.swing.JTextField txtBaseGSM;
    private javax.swing.JTextField txtBaseGSM_A;
    private javax.swing.JTextField txtBaseGSM_B;
    private javax.swing.JTextField txtBillWeight;
    private javax.swing.JTextField txtDRAW;
    private javax.swing.JFormattedTextField txtDocDate;
    private javax.swing.JTextField txtDocNo;
    private javax.swing.JTextField txtDressDrawWeavingInstruction;
    private javax.swing.JTextField txtDryerWidthMarkWet;
    private javax.swing.JTextField txtENDLength;
    private javax.swing.JTextField txtENDLength1;
    private javax.swing.JTextField txtENDS10CM;
    private javax.swing.JTextField txtENDS10CM1;
    private javax.swing.JTextField txtFaceSingle;
    private javax.swing.JTextArea txtFinishingInstruction_new;
    private javax.swing.JTextArea txtFinishingInstruction_new1;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtFromRemarks;
    private javax.swing.JTextField txtGSM;
    private javax.swing.JTextField txtGSMMFG;
    private javax.swing.JTextField txtGSMORD;
    private javax.swing.JTextField txtKillos;
    private javax.swing.JTextField txtLOOM_NO;
    private javax.swing.JTextField txtLayerType;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtLength1;
    private javax.swing.JTextField txtLengthFACT;
    private javax.swing.JTextField txtLengthFACT1;
    private javax.swing.JTextField txtMachineNo;
    private javax.swing.JTextField txtMfgLength;
    private javax.swing.JTextField txtMfgWidth;
    private javax.swing.JTextField txtMkgWidth;
    private javax.swing.JTextArea txtNeedlingInstruction;
    private javax.swing.JTextField txtNeedlingTantion;
    private javax.swing.JTextField txtNeedlingTenFACT;
    private javax.swing.JTextField txtNoEnds;
    private javax.swing.JTextField txtNoEnds1;
    private javax.swing.JTextField txtPICKS10CM;
    private javax.swing.JTextField txtPICKS10CM1;
    private javax.swing.JTextField txtPaintLines;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtPartyName;
    private javax.swing.JTextField txtPerCount;
    private javax.swing.JTextField txtPerSYNBase;
    private javax.swing.JTextField txtPerSYNWEB;
    private javax.swing.JTextField txtPerWEB;
    private javax.swing.JTextField txtPosDesignNo;
    private javax.swing.JTextField txtPosition;
    private javax.swing.JTextField txtPositionDesc;
    private javax.swing.JTextField txtProdCategory;
    private javax.swing.JTextField txtProdCode;
    private javax.swing.JTextField txtProdCode1;
    private javax.swing.JTextField txtProdGroup;
    private javax.swing.JTextField txtProdGroup1;
    private javax.swing.JTextField txtREED;
    private javax.swing.JTextField txtREED1;
    private javax.swing.JTextField txtREEDSp;
    private javax.swing.JTextField txtREEDSp1;
    private javax.swing.JTextField txtRef;
    private javax.swing.JTextField txtRemark;
    private javax.swing.JTextField txtResForReviasion;
    private javax.swing.JTextField txtRevision;
    private javax.swing.JTextField txtSYN;
    private javax.swing.JTextField txtSafety;
    private javax.swing.JTextField txtSqmtr;
    private javax.swing.JTextField txtStyle;
    private javax.swing.JTextField txtStyle1;
    private javax.swing.JTextField txtTH_CFM;
    private javax.swing.JTextField txtTK_UP;
    private javax.swing.JTextField txtTK_UP1;
    private javax.swing.JTextField txtTOT_SKG;
    private javax.swing.JTextField txtTW_B4_ND;
    private javax.swing.JTextField txtTW_B4_ND_A;
    private javax.swing.JTextField txtTW_B4_ND_B;
    private javax.swing.JTextField txtT_TOT_WGT_PCE;
    private javax.swing.JTextField txtT_Thick;
    private javax.swing.JTextField txtT_WEB_WGT;
    private javax.swing.JTextField txtTagInstruction;
    private javax.swing.JTextField txtTheoLength;
    private javax.swing.JTextField txtTheoLength1;
    private javax.swing.JTextField txtTheoPicks;
    private javax.swing.JTextField txtTheoPicks1;
    private javax.swing.JTextField txtTheoWeight;
    private javax.swing.JTextField txtTheoWeight1;
    private javax.swing.JTextField txtToRemarks;
    private javax.swing.JTextField txtTotalGSM;
    private javax.swing.JTextField txtTrimWt;
    private javax.swing.JTextField txtUPN;
    private javax.swing.JTextField txtWARP;
    private javax.swing.JTextField txtWARP1;
    private javax.swing.JTextField txtWARP_Detail;
    private javax.swing.JTextField txtWEAVE;
    private javax.swing.JTextField txtWEAVE1;
    private javax.swing.JTextField txtWEBGSM;
    private javax.swing.JTextField txtWEFT;
    private javax.swing.JTextField txtWEFT1;
    private javax.swing.JTextField txtWEFT_Detail;
    private javax.swing.JTextField txtWE_WGT;
    private javax.swing.JTextField txtWE_WGT1;
    private javax.swing.JTextField txtWWGT;
    private javax.swing.JTextField txtWWGT1;
    private javax.swing.JTextField txtWarpDetail1;
    private javax.swing.JTextArea txtWeavingInstruction;
    private javax.swing.JTextArea txtWebOnBack;
    private javax.swing.JTextArea txtWebOnFace;
    private javax.swing.JTextField txtWeftDetail1;
    private javax.swing.JTextField txtWeight;
    private javax.swing.JTextField txtWeightRange;
    private javax.swing.JTextField txtWidth;
    private javax.swing.JTextField txtWidth1;
    private javax.swing.JTextField txtWidthFact;
    private javax.swing.JTextField txtWidthFact1;
    // End of variables declaration//GEN-END:variables
}
