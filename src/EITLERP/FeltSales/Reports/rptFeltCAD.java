/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.Reports;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableModel;
import EITLERP.*;
import EITLERP.ReportRegister;
import EITLERP.data;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.*;

/**
 *
 * @author Dharmendra
 */
public class rptFeltCAD extends javax.swing.JApplet {

    /**
     * Initializes the applet FrmWhStk
     */
    private EITLTableModel DataModel = new EITLTableModel();
    public EITLERP.clsExcel_Exporter exprt = new EITLERP.clsExcel_Exporter();
    private String fromYear = "";
    private String toYear = "";

    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>
        //</editor-fold>

        /* Create and display the applet */
        initComponents();
        file1.show(false);
        GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
        int scrwidth = gd.getDisplayMode().getWidth();
        int scrheight = gd.getDisplayMode().getHeight();
        setSize(scrwidth, scrheight);
        FormatTable();
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        cmdShow = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdETE = new javax.swing.JButton();
        file1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        txtName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtTotalCredit = new javax.swing.JTextField();
        txtTotalDebit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbChargeCode = new javax.swing.JComboBox();

        jMenuItem1.setText("jMenuItem1");
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("jMenuItem2");
        jPopupMenu1.add(jMenuItem2);

        getContentPane().setLayout(null);

        cmdShow.setText("Show");
        cmdShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowActionPerformed(evt);
            }
        });
        getContentPane().add(cmdShow);
        cmdShow.setBounds(830, 40, 120, 30);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 90, 940, 390);

        cmdETE.setText("Export to Excel");
        cmdETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdETEActionPerformed(evt);
            }
        });
        getContentPane().add(cmdETE);
        cmdETE.setBounds(800, 500, 150, 30);
        getContentPane().add(file1);
        file1.setBounds(30, 280, 220, 280);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 29));
        jPanel1.setLayout(null);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Felt CAD Report");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(2, 4, 460, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 2, 960, 29);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("From Date : ");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 40, 90, 20);

        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(100, 40, 100, 20);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("To Date : ");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(220, 40, 70, 20);

        txtToDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtToDateFocusLost(evt);
            }
        });
        getContentPane().add(txtToDate);
        txtToDate.setBounds(290, 40, 100, 20);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Party Code :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 60, 100, 20);

        txtPartyCode.setName(""); // NOI18N
        txtPartyCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartyCodeActionPerformed(evt);
            }
        });
        txtPartyCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPartyCodeFocusLost(evt);
            }
        });
        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });
        getContentPane().add(txtPartyCode);
        txtPartyCode.setBounds(110, 60, 90, 20);
        getContentPane().add(txtName);
        txtName.setBounds(210, 60, 550, 20);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("TOTAL : ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(450, 540, 140, 15);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("CREDIT : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(450, 490, 140, 15);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText(" DEBIT : ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(450, 510, 140, 15);

        txtTotal.setEditable(false);
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotal.setEnabled(false);
        getContentPane().add(txtTotal);
        txtTotal.setBounds(590, 540, 150, 19);

        txtTotalCredit.setEditable(false);
        txtTotalCredit.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtTotalCredit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotalCredit.setEnabled(false);
        getContentPane().add(txtTotalCredit);
        txtTotalCredit.setBounds(590, 490, 150, 19);

        txtTotalDebit.setEditable(false);
        txtTotalDebit.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtTotalDebit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotalDebit.setEnabled(false);
        getContentPane().add(txtTotalDebit);
        txtTotalDebit.setBounds(590, 510, 150, 19);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Charge Code :");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(410, 40, 105, 20);

        cmbChargeCode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "01", "02", "03", "04", "05", "06", "07", "08", "09" }));
        getContentPane().add(cmbChargeCode);
        cmbChargeCode.setBounds(520, 40, 72, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        } else {

            txtTotalCredit.setText("");
            txtTotalDebit.setText("");
            txtTotal.setText("");
            String sql = "";
            ResultSet rs;
            DataModel = new EITLTableModel();
            Table.removeAll();
            Table.setModel(DataModel);
            Table.setAutoResizeMode(Table.AUTO_RESIZE_OFF);
            try {
                String frmdt = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
                String todt = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
                String tagCndtn = "";
                String stkTagCndtn = "";
                String dmCndtn = "";
                if (!txtPartyCode.getText().trim().equalsIgnoreCase("")) {
                    tagCndtn = " AND T.PARTY_CODE = '" + txtPartyCode.getText().trim() + "' ";
                    stkTagCndtn = " AND FELT_AMEND_PARTY_CODE = '" + txtPartyCode.getText().trim() + "' ";
                    dmCndtn = " AND DB_PARTY_CODE = '" + txtPartyCode.getText().trim() + "' ";
                }
                
                if (!cmbChargeCode.getSelectedItem().toString().equalsIgnoreCase("Select")) {
                    tagCndtn = tagCndtn + " AND CHARGE_CODE = '" + cmbChargeCode.getSelectedItem().toString() + "' ";
                    stkTagCndtn = stkTagCndtn + " AND PARTY_CHARGE_CODE = '" + cmbChargeCode.getSelectedItem().toString() + "' ";
                    dmCndtn = dmCndtn + " AND CHARGE_CODE = '" + cmbChargeCode.getSelectedItem().toString() + "' ";
                }

                sql = "SELECT @a:=@a+1 AS 'Srno.', PARTY_CODE AS 'Party Code',PARTY_NAME AS 'Name',CHARGE_CODE AS 'Charge Code',PIECE_NO AS 'Piece No',BILL_PRODUCT_CODE AS 'Product Code',"
                        + "INVOICE_NO AS 'Invoice No',DATE_FORMAT(INVOICE_DATE,'%d/%m/%Y') AS 'Invoice Date',ACTUAL_WEIGHT AS 'Actual Weight',TAGGED_WEIGHT AS 'Tagged Weight',"
                        + "WEIGHT_DIFFERENCE AS 'Weight Difference',UNIT_RATE AS 'Unit Rate',NOTIONAL_PL_AMT AS 'CAD Credit',"
                        + "DEBITMEMO_NO AS 'DebitMemo No',DATE_FORMAT(DEBITMEMO_DATE,'%d/%m/%Y') AS 'DebitMemo Date',DEBITMEMO_AMT AS 'Debit' "
                        + "FROM (SELECT @a:= 0) AS a,"
                        + "("
                        + "SELECT T.PARTY_CODE,T.PARTY_NAME,CHARGE_CODE,PIECE_NO,BILL_PRODUCT_CODE,INVOICE_NO,INVOICE_DATE,ACTUAL_WEIGHT,TAGGED_WEIGHT,"
                        + "WEIGHT_DIFFERENCE,(UNIT_NET_PRICE+UNIT_NET_SEAM) AS UNIT_RATE,NOTIONAL_PL_AMT,'' AS DEBITMEMO_NO,'' AS DEBITMEMO_DATE,'' AS DEBITMEMO_AMT "
                        + "FROM PRODUCTION.FELT_FINISHING_PIECE_TAGGING T, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE T.PARTY_CODE=P.PARTY_CODE AND COALESCE(INVOICE_NO,'') != '' "
                        + "AND PIECE_NO NOT IN (SELECT FELT_AMEND_PIECE_NO FROM PRODUCTION.FELT_PIECE_AMEND WHERE FELT_MODULE_ID=622 AND APPROVED=1 AND CANCELED=0) "
                        + "AND INVOICE_DATE>='" + frmdt + "' AND INVOICE_DATE<='" + todt + "' " + tagCndtn + " "
                        + "UNION ALL "
                        + ""
                        + "SELECT FELT_AMEND_PARTY_CODE,FELT_AMEND_PARTY_NAME,PARTY_CHARGE_CODE,FELT_AMEND_PIECE_NO,FELT_AMEND_BILL_PRODUCT_CODE,"
                        + "INVOICE_NO,INVOICE_DATE,FELT_AMEND_ACTUAL_WEIGHT,FELT_AMEND_BILL_WEIGHT,ROUND((FELT_AMEND_BILL_WEIGHT-FELT_AMEND_ACTUAL_WEIGHT),2) AS WEIGHT_DIFFERENCE,"
                        + "(FELT_AMEND_UNIT_NET_PRICE+FELT_AMEND_UNIT_NET_SEAM) AS UNIT_RATE,FELT_AMEND_NOTIONAL_PL_AMT,'' AS DEBITMEMO_NO,'' AS DEBITMEMO_DATE,'' AS DEBITMEMO_AMT "
                        + "FROM PRODUCTION.FELT_PIECE_AMEND A, PRODUCTION.FELT_SAL_INVOICE_HEADER I WHERE FELT_MODULE_ID=622 "
                        + "AND FELT_AMEND_PIECE_NO=PIECE_NO AND I.APPROVED=1 AND I.CANCELLED=0 AND A.APPROVED=1 AND A.CANCELED=0 "
                        + "AND INVOICE_DATE>='" + frmdt + "' AND INVOICE_DATE<='" + todt + "' " + stkTagCndtn + " "
                        + "UNION ALL "
                        + ""
                        + "SELECT D.DB_PARTY_CODE,P.PARTY_NAME,CHARGE_CODE,COALESCE(D.PIECE_NO,''),'',D.INVOICE_NO,D.INVOICE_DATE,'','','','' AS UNIT_RATE,'' AS CAD_CREDIT,"
                        + "D.DEBITMEMO_NO AS 'DebitMemo No',D.DEBITMEMO_DATE AS 'DebitMemo Date',D.INTEREST_AMT AS DEBITMEMO_AMT "
                        + "FROM FINANCE.D_FIN_DEBITMEMO_RECEIPT_MAPPING D, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE D.DB_PARTY_CODE=P.PARTY_CODE AND D.APPROVED=1 AND D.CANCELLED=0 AND D.MAIN_ACCOUNT_CODE=210010 "
                        + "AND D.DEBITMEMO_DATE>='" + frmdt + "' AND D.DEBITMEMO_DATE<='" + todt + "' " + dmCndtn + " "
                        + " "
                        + "AND DB_PARTY_CODE IN (SELECT DISTINCT PARTY_CODE FROM ( SELECT DISTINCT PARTY_CODE FROM PRODUCTION.FELT_FINISHING_PIECE_TAGGING WHERE COALESCE(INVOICE_NO,'') != '' AND INVOICE_DATE>='" + frmdt + "' AND INVOICE_DATE<='" + todt + "' "
                        + "UNION ALL SELECT DISTINCT FELT_AMEND_PARTY_CODE FROM PRODUCTION.FELT_PIECE_AMEND A, PRODUCTION.FELT_SAL_INVOICE_HEADER I WHERE FELT_MODULE_ID=622 "
                        + "AND FELT_AMEND_PIECE_NO=PIECE_NO AND I.APPROVED=1 AND I.CANCELLED=0 AND A.APPROVED=1 AND A.CANCELED=0 "
                        + "AND INVOICE_DATE>='" + frmdt + "' AND INVOICE_DATE<='" + todt + "') AS X  ) "
                        + " "
                        + "ORDER BY PARTY_CODE,INVOICE_DATE,INVOICE_NO,DEBITMEMO_DATE "
                        + ") AS A";

                System.out.println(sql);
                rs = data.getResult(sql);
                ResultSetMetaData rsInfo = rs.getMetaData();

                //Format the table from the resultset meta data
                int i = 1;
                for (i = 1; i <= rsInfo.getColumnCount(); i++) {
                    DataModel.addColumn(rsInfo.getColumnName(i));
                }
                rs.first();
                System.out.println("Row no." + rs.getRow());
                if (rs.getRow() > 0) {
                    while (!rs.isAfterLast()) {
                        Object[] rowData = new Object[100];
                        for (int m = 1; m < i; m++) {
                            rowData[m - 1] = rs.getString(m);
                        }
                        DataModel.addRow(rowData);
                        rs.next();
                    }
                }
                DataModel.TableReadOnly(true);
                
                
                sql = "SELECT SUM(COALESCE(NOTIONAL_PL_AMT,0)) AS CREDIT_TOTAL "
                        + "FROM "
                        + "("
                        + "SELECT T.PARTY_CODE,T.PARTY_NAME,CHARGE_CODE,PIECE_NO,BILL_PRODUCT_CODE,INVOICE_NO,INVOICE_DATE,ACTUAL_WEIGHT,TAGGED_WEIGHT,"
                        + "WEIGHT_DIFFERENCE,(UNIT_NET_PRICE+UNIT_NET_SEAM) AS UNIT_RATE,NOTIONAL_PL_AMT,'' AS DEBITMEMO_NO,'' AS DEBITMEMO_DATE,'' AS DEBITMEMO_AMT "
                        + "FROM PRODUCTION.FELT_FINISHING_PIECE_TAGGING T, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE T.PARTY_CODE=P.PARTY_CODE AND COALESCE(INVOICE_NO,'') != '' "
                        + "AND PIECE_NO NOT IN (SELECT FELT_AMEND_PIECE_NO FROM PRODUCTION.FELT_PIECE_AMEND WHERE FELT_MODULE_ID=622 AND APPROVED=1 AND CANCELED=0) "
                        + "AND INVOICE_DATE>='" + frmdt + "' AND INVOICE_DATE<='" + todt + "' " + tagCndtn + " "
                        + "UNION ALL "
                        + ""
                        + "SELECT FELT_AMEND_PARTY_CODE,FELT_AMEND_PARTY_NAME,PARTY_CHARGE_CODE,FELT_AMEND_PIECE_NO,FELT_AMEND_BILL_PRODUCT_CODE,"
                        + "INVOICE_NO,INVOICE_DATE,FELT_AMEND_ACTUAL_WEIGHT,FELT_AMEND_BILL_WEIGHT,ROUND((FELT_AMEND_BILL_WEIGHT-FELT_AMEND_ACTUAL_WEIGHT),2) AS WEIGHT_DIFFERENCE,"
                        + "(FELT_AMEND_UNIT_NET_PRICE+FELT_AMEND_UNIT_NET_SEAM) AS UNIT_RATE,FELT_AMEND_NOTIONAL_PL_AMT,'' AS DEBITMEMO_NO,'' AS DEBITMEMO_DATE,'' AS DEBITMEMO_AMT "
                        + "FROM PRODUCTION.FELT_PIECE_AMEND A, PRODUCTION.FELT_SAL_INVOICE_HEADER I WHERE FELT_MODULE_ID=622 "
                        + "AND FELT_AMEND_PIECE_NO=PIECE_NO AND I.APPROVED=1 AND I.CANCELLED=0 AND A.APPROVED=1 AND A.CANCELED=0 "
                        + "AND INVOICE_DATE>='" + frmdt + "' AND INVOICE_DATE<='" + todt + "' " + stkTagCndtn + " "
                        + ") AS A";                
                double creditTotal = data.getDoubleValueFromDB(sql);
                txtTotalCredit.setText(String.valueOf(EITLERPGLOBAL.round(creditTotal,2)));
                
                sql = "SELECT SUM(COALESCE(INTEREST_AMT,0)) FROM FINANCE.D_FIN_DEBITMEMO_RECEIPT_MAPPING D, DINESHMILLS.D_SAL_PARTY_MASTER P WHERE D.DB_PARTY_CODE=P.PARTY_CODE AND D.APPROVED=1 AND D.CANCELLED=0 AND D.MAIN_ACCOUNT_CODE=210010 "
                        + "AND DEBITMEMO_DATE>='" + frmdt + "' AND DEBITMEMO_DATE<='" + todt + "' " + dmCndtn + " "
                        + " "
                        + "AND DB_PARTY_CODE IN (SELECT DISTINCT PARTY_CODE FROM ( SELECT DISTINCT PARTY_CODE FROM PRODUCTION.FELT_FINISHING_PIECE_TAGGING WHERE COALESCE(INVOICE_NO,'') != '' AND INVOICE_DATE>='" + frmdt + "' AND INVOICE_DATE<='" + todt + "' "
                        + "UNION ALL SELECT DISTINCT FELT_AMEND_PARTY_CODE FROM PRODUCTION.FELT_PIECE_AMEND A, PRODUCTION.FELT_SAL_INVOICE_HEADER I WHERE FELT_MODULE_ID=622 "
                        + "AND FELT_AMEND_PIECE_NO=PIECE_NO AND I.APPROVED=1 AND I.CANCELLED=0 AND A.APPROVED=1 AND A.CANCELED=0 "
                        + "AND INVOICE_DATE>='" + frmdt + "' AND INVOICE_DATE<='" + todt + "') AS X  ) ";
                double debitTotal = data.getDoubleValueFromDB(sql);
                txtTotalDebit.setText(String.valueOf(EITLERPGLOBAL.round(debitTotal,2)));
                
                txtTotal.setText(String.valueOf(EITLERPGLOBAL.round(creditTotal-debitTotal,2))); 
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_cmdShowActionPerformed

    private void cmdETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdETEActionPerformed
        // TODO add your handling code here:
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exprt.fillData(Table, new File(file1.getSelectedFile().toString() + ".xls"), "REPORT");

            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_cmdETEActionPerformed

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        // TODO add your handling code here:
        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter from Date");
            txtFromDate.requestFocus();
            txtFromDate.setText("");
            FormatTable();
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.requestFocus();
            txtFromDate.setText("");
            FormatTable();
        } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "',CONCAT('" + fromYear + "','-04-01')) FROM DUAL") < 0) {
            JOptionPane.showMessageDialog(null, "Please enter From Date within Financial Year.");
            txtFromDate.requestFocus();
            txtFromDate.setText("");
            FormatTable();
        } else if (data.getIntValueFromDB("SELECT DATEDIFF(CONCAT('" + toYear + "','-03-31'),'" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "') FROM DUAL") < 0) {
            JOptionPane.showMessageDialog(null, "Please enter From Date within Financial Year.");
            txtFromDate.requestFocus();
            txtFromDate.setText("");
            FormatTable();
        }
    }//GEN-LAST:event_txtFromDateFocusLost

    private void txtToDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToDateFocusGained

    private void txtToDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToDateFocusLost
        // TODO add your handling code here:
        if (!txtFromDate.getText().trim().equals("") && EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            if (txtToDate.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Please Enter To Date");
                txtToDate.requestFocus();
                txtToDate.setText("");
                FormatTable();
            } else if (!EITLERPGLOBAL.isDate(txtToDate.getText())) {
                JOptionPane.showMessageDialog(null, "Invalid To Date in DD/MM/YYYY format.");
                txtToDate.requestFocus();
                txtToDate.setText("");
                FormatTable();
            } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "',CONCAT('" + fromYear + "','-04-01')) FROM DUAL") < 0) {
                JOptionPane.showMessageDialog(null, "Please enter To Date within Financial Year.");
                txtToDate.requestFocus();
                txtToDate.setText("");
                FormatTable();
            } else if (data.getIntValueFromDB("SELECT DATEDIFF(CONCAT('" + toYear + "','-03-31'),'" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "') FROM DUAL") < 0) {
                JOptionPane.showMessageDialog(null, "Please enter To Date within Financial Year.");
                txtToDate.requestFocus();
                txtToDate.setText("");
                FormatTable();
            } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + EITLERPGLOBAL.formatDateDB(txtToDate.getText()) + "','" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText()) + "') FROM DUAL") < 0) {
                JOptionPane.showMessageDialog(null, "Please enter To Date greater then From Date.");
                txtToDate.requestFocus();
                txtToDate.setText("");
                FormatTable();
            }
        } else {
            txtFromDate.requestFocus();
        }
    }//GEN-LAST:event_txtToDateFocusLost

    private void txtPartyCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartyCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartyCodeActionPerformed

    private void txtPartyCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartyCodeFocusLost
        // TODO add your handling code here:
        if (!txtPartyCode.getText().trim().equals("")) { //F1 Key pressed
            String PartyCode = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_SAL_PARTY_MASTER WHERE COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " AND MAIN_ACCOUNT_CODE=210010  AND PARTY_CODE=" + txtPartyCode.getText().trim() + " ");
            txtName.setText(PartyCode);
        } else {
            txtName.setText("");
        }
    }//GEN-LAST:event_txtPartyCodeFocusLost

    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 112) //F1 Key pressed
        {
            LOV aList = new LOV();

            aList.SQL = "SELECT DISTINCT PARTY_CODE, PARTY_NAME FROM PRODUCTION.FELT_FINISHING_PIECE_TAGGING ORDER BY PARTY_CODE";
            aList.ReturnCol = 1;
            aList.SecondCol = 2;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;

            if (aList.ShowLOV()) {
                txtPartyCode.setText(aList.ReturnVal);
                txtName.setText(aList.SecondVal);
            }
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbChargeCode;
    private javax.swing.JButton cmdETE;
    private javax.swing.JButton cmdShow;
    private javax.swing.JFileChooser file1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JLabel txtName;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalCredit;
    private javax.swing.JTextField txtTotalDebit;
    // End of variables declaration//GEN-END:variables

    private boolean Validate() {
        //Form level validations
        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter from date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            return false;
        }

        if (txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter To date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid To Date in DD/MM/YYYY format.");
            return false;
        }

        return true;
    }

    private void FormatTable() {
        DataModel = new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
        Table.setAutoResizeMode(Table.AUTO_RESIZE_OFF);
    }

}
