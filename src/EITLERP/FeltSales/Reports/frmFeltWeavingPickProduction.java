/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.Reports;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableModel;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import sdml.felt.commonUI.data;

/**
 *
 * @author Dharmendra
 */
public class frmFeltWeavingPickProduction extends javax.swing.JApplet {

    /**
     * Initializes the applet frmFeltWeavingPickProduction
     */
    private EITLTableModel DataModel = new EITLTableModel();
    clsExcelExporter exprt = new clsExcelExporter();

    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        //</editor-fold>

        /* Create and display the applet */
        initComponents();
        GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
        int scrwidth = gd.getDisplayMode().getWidth();
        int scrheight = gd.getDisplayMode().getHeight();
        setSize(scrwidth, scrheight);
        file1.setVisible(false);
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtmonth = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtyear = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdview = new javax.swing.JButton();
        cmdExcel = new javax.swing.JButton();
        file1 = new javax.swing.JFileChooser();
        jLabel3 = new javax.swing.JLabel();
        txtminstdpick = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        jLabel1.setText("Month");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 11, 41, 30);
        getContentPane().add(txtmonth);
        txtmonth.setBounds(55, 11, 70, 30);

        jLabel2.setText("Year");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(129, 11, 56, 30);
        getContentPane().add(txtyear);
        txtyear.setBounds(189, 11, 76, 30);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 52, 675, 402);

        cmdview.setText("View");
        cmdview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdviewActionPerformed(evt);
            }
        });
        getContentPane().add(cmdview);
        cmdview.setBounds(283, 11, 93, 30);

        cmdExcel.setText("Excel");
        cmdExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExcelActionPerformed(evt);
            }
        });
        getContentPane().add(cmdExcel);
        cmdExcel.setBounds(10, 485, 138, 35);
        getContentPane().add(file1);
        file1.setBounds(348, 75, 297, 249);

        jLabel3.setText("Minimum STD Pick");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(386, 11, 120, 30);

        txtminstdpick.setText("14410000");
        getContentPane().add(txtminstdpick);
        txtminstdpick.setBounds(493, 11, 96, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdviewActionPerformed
        // TODO add your handling code here:
        
        String sql;
        sql = "SELECT PROD_DATE AS PRODUCTION_DATE,PROD_PIECE_NO AS PIECE_NO,LOOM_NO,WIP_GROUP AS 'GROUP',STYLE,WEIGHT,PICKS_PER_10CMS,REED_SPACE,LENGTH,PICK,PICK_MTRS,WIP_EXT_PIECE_NO AS PIECE_NO,DAY_WEIGHT,COALESCE(TOTAL_PICS_MTRS,'') AS TOTAL_PICS_MTRS FROM  "
                + "( "
                + "SELECT DATE_FORMAT(PROD_DATE,'%d/%m/%Y') AS PROD_DATE,PROD_PIECE_NO,LOOM_NO,WIP_GROUP,WIP_STYLE AS STYLE, A.WEIGHT, PICKS_PER_10CMS,REED_SPACE,LENGTH,  "
                + "CAST(SUBSTRING(PICKS_PER_10CMS,1,3) AS UNSIGNED)*GREATEST(CAST(SUBSTRING(PICKS_PER_10CMS,5,5) AS UNSIGNED) ,1) *REED_SPACE*LENGTH*10 AS PICK_MTRS,WIP_EXT_PIECE_NO,CAST(SUBSTRING(PICKS_PER_10CMS,1,3) AS UNSIGNED)*GREATEST(CAST(SUBSTRING(PICKS_PER_10CMS,5,5) AS UNSIGNED) ,1) *LENGTH*10 AS PICK "
                + "FROM ( "
                + "SELECT * FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DATE >='2017-01-01' AND PROD_DEPT='WEAVING' AND CANCELED =0 AND APPROVED =1  "
                + "AND EXTRACT(MONTH FROM PROD_DATE) ='" + txtmonth.getText() + "' AND  EXTRACT(YEAR FROM PROD_DATE) = '" + txtyear.getText() + "'  "
                + ") AS A, "
                + "PRODUCTION.FELT_WIP_PIECE_REGISTER B  "
                + "WHERE WIP_EXT_PIECE_NO = PROD_PIECE_NO AND RIGHT(WIP_EXT_PIECE_NO,1) !='V'  "
                + ") AS O "
                + "LEFT JOIN  "
                + "(SELECT COALESCE(SUM(WEIGHT),0) AS DAY_WEIGHT FROM PRODUCTION.FELT_PROD_DATA A WHERE PROD_DEPT = 'WEAVING' AND EXTRACT(MONTH FROM PROD_DATE) ='" + txtmonth.getText() + "' AND  EXTRACT(YEAR FROM PROD_DATE) ='" + txtyear.getText() + "' AND A.CANCELED =0 AND A.APPROVED =1 ) AS D ON O.WIP_EXT_PIECE_NO = O.PROD_PIECE_NO "
                + "LEFT JOIN  "
                + "(SELECT COALESCE(SUM(PICS_MTRS),0) AS TOTAL_PICS_MTRS FROM "
                + "(SELECT CAST(SUBSTRING(PICKS_PER_10CMS,1,3) AS UNSIGNED)*GREATEST(CAST(SUBSTRING(PICKS_PER_10CMS,5,5) AS UNSIGNED) ,1) *REED_SPACE*LENGTH*10 AS PICS_MTRS "
                + "FROM PRODUCTION.FELT_PROD_DATA A "
                + "WHERE  EXTRACT(MONTH FROM PROD_DATE) ='" + txtmonth.getText() + "' AND  EXTRACT(YEAR FROM PROD_DATE) = '" + txtyear.getText() + "'  AND A.CANCELED =0 AND A.APPROVED =1 AND PROD_DEPT='WEAVING') AS M WHERE PICS_MTRS<>0) AS TPM "
                + "ON O.WIP_EXT_PIECE_NO = O.PROD_PIECE_NO "
                + "ORDER BY PROD_DATE,PROD_PIECE_NO";
        System.out.println("SQL Query:" + sql);
        ResultSet rs;
        Table.removeAll();
        DataModel=new EITLTableModel();
        Table.setModel(DataModel);
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        try {
            rs = EITLERP.data.getResult(sql);
            DataModel.addColumn("Sr.No.");
            ResultSetMetaData rsInfo = rs.getMetaData();

            //Format the table from the resultset meta data
            int i = 1;
            for (i = 1; i <= rsInfo.getColumnCount(); i++) {
                DataModel.addColumn(rsInfo.getColumnName(i));
            }
            rs.first();
            int k = 1;
            double mtotwt = 0, mtotpicmtr = 0, maxpicmtr = 0;
            if (rs.getRow() > 0) {
                while (!rs.isAfterLast()) {
                    Object[] rowData = new Object[100];
                    rowData[0] = k;
                    mtotwt = mtotwt + rs.getDouble(6);
                    /*mtotpicmtr = mtotpicmtr + rs.getDouble(10);
                    if (maxpicmtr < rs.getDouble(10)) {
                        maxpicmtr = rs.getDouble(10);
                    }*/
                    mtotpicmtr = mtotpicmtr + rs.getDouble(11);
                    if (maxpicmtr < rs.getDouble(11)) {
                        maxpicmtr = rs.getDouble(11);
                    }
                    for (int m = 1; m < i; m++) {
                        rowData[m] = rs.getString(m);
                    }
                    DataModel.addRow(rowData);
                    rs.next();
                    k++;
                }
            }
            Object[] rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            rowData[5] = "T O T A L";
            rowData[6] = EITLERPGLOBAL.round(mtotwt, 2);
            //rowData[10] = EITLERPGLOBAL.round(mtotpicmtr, 2);
            rowData[11] = EITLERPGLOBAL.formatNumber(EITLERPGLOBAL.round(mtotpicmtr, 2));
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            rowData[5] = "TOTAL PIECE[S]";
            //rowData[10] = data.getIntValueFromDB("SELECT COUNT(*) AS TOTAL_PC FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT='WEAVING' AND EXTRACT(MONTH FROM PROD_DATE) ='" + txtmonth.getText() + "' AND  EXTRACT(YEAR FROM PROD_DATE) = '" + txtyear.getText() + "'  "+" AND APPROVED=1 AND CANCELED=0");
            rowData[11] = data.getIntValueFromDB("SELECT COUNT(*) AS TOTAL_PC FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT='WEAVING' AND EXTRACT(MONTH FROM PROD_DATE) ='" + txtmonth.getText() + "' AND  EXTRACT(YEAR FROM PROD_DATE) = '" + txtyear.getText() + "'  "+" AND APPROVED=1 AND CANCELED=0");
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            rowData[5] = "minimum STD Pack";
            //rowData[10] = txtminstdpick.getText();
            rowData[11] = txtminstdpick.getText();
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            rowData[5] = "Different Between Picks";
            //rowData[10] = EITLERPGLOBAL.round(mtotpicmtr, 2) - Double.parseDouble(txtminstdpick.getText());
            rowData[11] = EITLERPGLOBAL.round(mtotpicmtr, 2) - Double.parseDouble(txtminstdpick.getText());
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            DataModel.addRow(rowData);
            rowData = new Object[100];
            rowData[5] = "Max Pick Meter";
            //rowData[10] = EITLERPGLOBAL.round(maxpicmtr, 2);
            rowData[11] = EITLERPGLOBAL.round(maxpicmtr, 2);
            DataModel.addRow(rowData);
            DataModel.TableReadOnly(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdviewActionPerformed

    private void cmdExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExcelActionPerformed
        // TODO add your handling code here:
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exprt.fillData(Table, new File(file1.getSelectedFile().toString() + ".xls"), "FeltWeavingPickProduction");
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_cmdExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton cmdExcel;
    private javax.swing.JButton cmdview;
    private javax.swing.JFileChooser file1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtminstdpick;
    private javax.swing.JTextField txtmonth;
    private javax.swing.JTextField txtyear;
    // End of variables declaration//GEN-END:variables
}
