/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.ExportPartyPayment;

import EITLERP.EITLComboModel;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableModel;
import EITLERP.clsSales_Party;
import EITLERP.data;
import EITLERP.frmPendingApprovals;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author DAXESH PRAJAPATI
 *
 */
public class FrmExportPartyPayment extends javax.swing.JApplet {

    
    private EITLTableModel DataModel;
    private EITLTableModel DataModel_history;
    

    @Override
    public void init() {
        setSize(850, 550);
        initComponents();
        
        FormatGrid();
        FormatGrid_history();
        
         //GenerateHierarchyCombo();

        DefaultSettings();
        DisplayData();
        if(EITLERPGLOBAL.gUserID==98)
        {
            Table.setEnabled(true);
            btnSave.setEnabled(true);
        }
        else
        {
            Table.setEnabled(false);
            btnSave.setEnabled(false);
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    public void DefaultSettings() {

        //String data = toString();
        Object[] rowData = new Object[15];
        rowData[0] = "1";
        
        DataModel.addRow(rowData);

        clearFields();
        lblTitle1.setBackground(new Color(0, 102, 153));
        lblTitle1.setForeground(Color.WHITE);
    }

    private void clearFields() {
       

        for (int i = 0; i < DataModel.getRowCount(); i++) {
            DataModel.removeRow(i);
        }
        if (DataModel.getRowCount() > 0) {
            DataModel.removeRow(0);
        }
        Object[] rowData = new Object[15];
        rowData[0] = 1;
        DataModel.addRow(rowData);
    }

    private void DisplayData() {
        for (int i = 0; i < DataModel.getRowCount(); i++) {
            DataModel.removeRow(i);
        }
        if (DataModel.getRowCount() > 0) {
            DataModel.removeRow(0);
        }
        
        //
        String str_query = "SELECT * FROM PRODUCTION.FELT_SALES_EXPORT_PARTY_PAYMENT_DETAIL WHERE STATUS='INPROCESS' GROUP BY ORDERNO";
        System.out.println("Query : " + str_query);
        try{
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);    
            ResultSet resultSet = statement.executeQuery(str_query);
            int srNo = 0;
            while (resultSet.next()) {
                srNo++;
                int NewRow = srNo - 1;
                
                Object[] rowData = new Object[1];
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SrNo", srNo + "", NewRow);
                DataModel.setValueByVariable("ORDERNO", resultSet.getString("ORDERNO"), NewRow);
                
                //String Party_Code = data.getStringValueFromDB("SELECT PR_PARTY_CODE FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='"+resultSet.getString("PIECE_NO")+"'");
                DataModel.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_NAME", clsSales_Party.getPartyName(EITLERPGLOBAL.gCompanyID, resultSet.getString("PARTY_CODE")), NewRow);
                
                DataModel.setValueByVariable("ENTRY_DATE", EITLERPGLOBAL.formatDate(resultSet.getString("ENTRY_DATE")), NewRow);
                DataModel.setValueByVariable("PAYMENT_DATE", EITLERPGLOBAL.formatDate(resultSet.getString("PAYMENT_DATE")), NewRow);
                DataModel.setValueByVariable("REVISE_DATE", EITLERPGLOBAL.formatDate(resultSet.getString("REVISE_PAYMENT_DATE")), NewRow);
                
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        //=========== Color Indication ===============//
        
        
    }

    

    private void FormatGrid() {
        try {
            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("Order No"); //1
            DataModel.addColumn("Party Code"); //1
            DataModel.addColumn("Party Name"); //1
            DataModel.addColumn("Entry Date"); //2
            DataModel.addColumn("Payment Date"); //3
            DataModel.addColumn("Revise Payment Date"); //4
            DataModel.addColumn("Revise Payment Remark"); //4

            DataModel.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel.SetVariable(1, "ORDERNO"); //1
            DataModel.SetVariable(2, "PARTY_CODE"); //1
            DataModel.SetVariable(3, "PARTY_NAME"); //1
            DataModel.SetVariable(4, "ENTRY_DATE"); //2
            DataModel.SetVariable(5, "PAYMENT_DATE"); //3
            DataModel.SetVariable(6, "REVISE_DATE"); //4
            DataModel.SetVariable(7, "REVISE_REMARK"); //4

            Table.getColumnModel().getColumn(0).setMinWidth(20);
            Table.getColumnModel().getColumn(1).setMinWidth(130);
            Table.getColumnModel().getColumn(2).setMinWidth(90);
            Table.getColumnModel().getColumn(3).setMinWidth(150);
            Table.getColumnModel().getColumn(4).setMinWidth(120);
            Table.getColumnModel().getColumn(5).setMinWidth(120);
            Table.getColumnModel().getColumn(6).setMinWidth(140);
            Table.getColumnModel().getColumn(7).setMinWidth(150);

            //dateColumn.setCellEditor(new DatePi);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void FormatGrid_history() {
        try {
            DataModel_history = new EITLTableModel();
            Table_History.removeAll();

            Table_History.setModel(DataModel_history);
            Table_History.setAutoResizeMode(0);

            DataModel_history.addColumn("SrNo"); //0 - Read Only
            DataModel_history.addColumn("Order No"); //1
            DataModel_history.addColumn("Party Code"); //1
            DataModel_history.addColumn("Party Name"); //1
            DataModel_history.addColumn("Entry Date"); //2
            DataModel_history.addColumn("Payment Date"); //3
            DataModel_history.addColumn("Revise Payment Date"); //4
            DataModel_history.addColumn("Revise Payment Remark"); //4

            DataModel_history.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel_history.SetVariable(1, "ORDERNO"); //1
            DataModel_history.SetVariable(2, "PARTY_CODE"); //1
            DataModel_history.SetVariable(3, "PARTY_NAME"); //1
            DataModel_history.SetVariable(4, "ENTRY_DATE"); //2
            DataModel_history.SetVariable(5, "PAYMENT_DATE"); //3
            DataModel_history.SetVariable(6, "REVISE_DATE"); //4
            DataModel_history.SetVariable(7, "REVISE_REMARK"); //4

            Table_History.getColumnModel().getColumn(0).setMinWidth(20);
            Table_History.getColumnModel().getColumn(1).setMinWidth(130);
            Table_History.getColumnModel().getColumn(2).setMinWidth(90);
            Table_History.getColumnModel().getColumn(3).setMinWidth(150);
            Table_History.getColumnModel().getColumn(4).setMinWidth(120);
            Table_History.getColumnModel().getColumn(5).setMinWidth(120);
            Table_History.getColumnModel().getColumn(6).setMinWidth(140);
            Table_History.getColumnModel().getColumn(7).setMinWidth(150);

            //dateColumn.setCellEditor(new DatePi);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        lblTitle1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel1 = new java.awt.Panel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        panel2 = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_History = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        btnShow = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle1.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle1.setText("Felt Sales Export Party Payment");
        lblTitle1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle1.setOpaque(true);
        getContentPane().add(lblTitle1);
        lblTitle1.setBounds(0, 10, 840, 30);

        jTabbedPane1.setBackground(new java.awt.Color(219, 219, 219));

        panel1.setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(Table);

        panel1.add(jScrollPane3);
        jScrollPane3.setBounds(0, 30, 820, 340);

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        panel1.add(btnSave);
        btnSave.setBounds(570, 380, 150, 30);

        jLabel3.setText("*** Enter revise date in DD/MM/YYYY format and save.");
        panel1.add(jLabel3);
        jLabel3.setBounds(410, 10, 390, 20);

        jTabbedPane1.addTab("Export Payment", panel1);

        panel2.setLayout(null);

        Table_History.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table_History);

        panel2.add(jScrollPane1);
        jScrollPane1.setBounds(11, 47, 790, 380);

        jLabel2.setText("Party Code");
        panel2.add(jLabel2);
        jLabel2.setBounds(20, 10, 100, 30);
        panel2.add(txtPartyCode);
        txtPartyCode.setBounds(100, 10, 140, 30);

        btnShow.setText("Show History");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });
        panel2.add(btnShow);
        btnShow.setBounds(540, 10, 160, 30);

        jTabbedPane1.addTab("Payment Date History", panel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 40, 830, 470);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        for(int i=0;i<Table.getRowCount();i++)
        {
            String ORDERNO = DataModel.getValueByVariable("ORDERNO", i);
            String REVISE_DATE = DataModel.getValueByVariable("REVISE_DATE", i);
            String REVISE_REMARK = DataModel.getValueByVariable("REVISE_REMARK", i);
            
            if(!ORDERNO.equals("") && (!REVISE_DATE.equals("") || !REVISE_REMARK.equals("")))
            {
                String Revice_Date_DB = EITLERPGLOBAL.formatDateDB(REVISE_DATE);
                if(!Revice_Date_DB.equals(""))
                {
                    data.Execute("UPDATE PRODUCTION.FELT_SALES_EXPORT_PARTY_PAYMENT_DETAIL SET STATUS='PROCESSED',REVISE_PAYMENT_DATE='"+Revice_Date_DB+"',REVISE_REMARK='"+REVISE_REMARK+"' WHERE ORDERNO='"+ORDERNO+"'");
                    data.Execute("UPDATE PRODUCTION.FELT_SALES_PIECE_REGISTER SET PR_EXPORT_PARTY_PAYMENT_DATE='"+Revice_Date_DB+"' WHERE PR_EXPORT_PARTY_ORDERNO='"+ORDERNO+"'");
                }
                else
                {   
                    if(!REVISE_REMARK.equals(""))
                    {
                        data.Execute("UPDATE PRODUCTION.FELT_SALES_EXPORT_PARTY_PAYMENT_DETAIL SET STATUS='PROCESSED',REVISE_PAYMENT_DATE='0000-00-00',REVISE_REMARK='"+REVISE_REMARK+"' WHERE ORDERNO='"+ORDERNO+"'");
                        data.Execute("UPDATE PRODUCTION.FELT_SALES_PIECE_REGISTER SET PR_EXPORT_PARTY_PAYMENT_DATE='0000-00-00' WHERE PR_EXPORT_PARTY_ORDERNO='"+ORDERNO+"'");
                    }
                    
                }
            }
            
        }
        DisplayData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        // TODO add your handling code here:
        String sub_qry = "";
        if(!txtPartyCode.getText().equals(""))
        {
            sub_qry = sub_qry + " AND PARTY_CODE='"+txtPartyCode.getText()+"'";
        }

        for (int i = 0; i < DataModel_history.getRowCount(); i++) {
            DataModel_history.removeRow(i);
        }
        if (DataModel_history.getRowCount() > 0) {
            DataModel_history.removeRow(0);
        }
        
        //
        String str_query = "SELECT * FROM PRODUCTION.FELT_SALES_EXPORT_PARTY_PAYMENT_DETAIL WHERE STATUS='PROCESSED' "+sub_qry+" GROUP BY ORDERNO limit 500";
        System.out.println("Query : " + str_query);
        try{
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);    
            ResultSet resultSet = statement.executeQuery(str_query);
            int srNo = 0;
            while (resultSet.next()) {
                srNo++;
                int NewRow = srNo - 1;
                
                Object[] rowData = new Object[1];
                DataModel_history.addRow(rowData);

                DataModel_history.setValueByVariable("SrNo", srNo + "", NewRow);
                DataModel_history.setValueByVariable("ORDERNO", resultSet.getString("ORDERNO"), NewRow);
                
                //String Party_Code = data.getStringValueFromDB("SELECT PR_PARTY_CODE FROM PRODUCTION.FELT_SALES_PIECE_REGISTER WHERE PR_PIECE_NO='"+resultSet.getString("PIECE_NO")+"'");
                DataModel_history.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel_history.setValueByVariable("PARTY_NAME", clsSales_Party.getPartyName(EITLERPGLOBAL.gCompanyID, resultSet.getString("PARTY_CODE")), NewRow);
                
                DataModel_history.setValueByVariable("ENTRY_DATE", EITLERPGLOBAL.formatDate(resultSet.getString("ENTRY_DATE")), NewRow);
                DataModel_history.setValueByVariable("PAYMENT_DATE", EITLERPGLOBAL.formatDate(resultSet.getString("PAYMENT_DATE")), NewRow);
                DataModel_history.setValueByVariable("REVISE_DATE", EITLERPGLOBAL.formatDate(resultSet.getString("REVISE_PAYMENT_DATE")), NewRow);
                
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnShowActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JTable Table_History;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnShow;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblTitle1;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private javax.swing.JTextField txtPartyCode;
    // End of variables declaration//GEN-END:variables
}
