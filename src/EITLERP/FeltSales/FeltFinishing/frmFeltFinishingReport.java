/*
 * frmRptGRNInfo.java
 *
 * Created on April 16, 2008, 12:01 PM
 */
package EITLERP.FeltSales.FeltFinishing;

/**
 *
 * @author root
 */
import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;
import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;
import java.io.*;
import java.sql.ResultSet;
import javax.swing.JTable;
import EITLERP.Production.ReportUI.JTextFieldHint;

public class frmFeltFinishingReport extends javax.swing.JApplet {

    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine = new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData = new TReportWriter.SimpleDataProvider.TTable();
    private EITLTableCellRenderer RowFormat = new EITLTableCellRenderer();
    private clsExcelExporter exp = new clsExcelExporter();
    EITLTableModel DataModel = new EITLTableModel();
    private clsFeltFinishing ObjFeltFinishing;
    //  private TReportEngine objEngine=new TReportEngine();

    /**
     * Initializes the applet frmRptGRNInfo
     */
    public void init() {
        setSize(800, 600);
        initComponents();
        formatGrid();   // TODO add your handling code here:

    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btnShowData = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TResult = new javax.swing.JTable();
        btnxls = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        btnGetReport = new javax.swing.JButton();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setName("PARTYWISE SANCTION REPORT"); // NOI18N
        jPanel3.setLayout(null);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("FELT FINISHING REPORT");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(10, 5, 330, 20);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 740, 30);

        btnShowData.setText("SHOW DATA");
        btnShowData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowDataActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowData);
        btnShowData.setBounds(20, 100, 170, 29);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        TResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TResult.getTableHeader().setFont(new Font("Plain", Font.BOLD, 12));
        jScrollPane1.setViewportView(TResult);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 140, 700, 290);

        btnxls.setText("Excel To Export");
        btnxls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxlsActionPerformed(evt);
            }
        });
        getContentPane().add(btnxls);
        btnxls.setBounds(20, 460, 140, 29);

        jLabel3.setText("From Date");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 40, 80, 20);

        jLabel2.setText("To Date");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 70, 80, 20);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(110, 40, 110, 20);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(110, 70, 110, 20);

        btnGetReport.setText("REPORT");
        btnGetReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetReportActionPerformed(evt);
            }
        });
        getContentPane().add(btnGetReport);
        btnGetReport.setBounds(480, 460, 170, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void btnxlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxlsActionPerformed
        try {

            exp.fillData(TResult, new File("/root/Desktop/FeltFinishing_"+EITLERPGLOBAL.getCurrentDateDB()+"_Report.xls"));
            //exp.fillData(TableI,new File("C://ProductionProcess.xls"));
            exp.fillData(TResult, new File("D://FeltFinishing_"+EITLERPGLOBAL.getCurrentDateDB()+".xls"));
            JOptionPane.showMessageDialog(null, "Data saved at "
                    + //"'C: \\ result.xls' successfully", "Message",
                    "'/root/Desktop/FeltFinishing_"+EITLERPGLOBAL.getCurrentDateDB()+"_Report.xls' successfully in Linux PC or 'D://FeltFinishing_"+EITLERPGLOBAL.getCurrentDateDB()+"_Report.xls' successfully in Windows PC    ", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnxlsActionPerformed

    private void btnShowDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowDataActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        GenerateReport();
    }//GEN-LAST:event_btnShowDataActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void btnGetReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetReportActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        
        PreviewReport();
//        HashMap Parameters = new HashMap();
//        Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
//        Parameters.put("FROM_DATE", txtFromDate.getText().trim());
//        Parameters.put("TO_DATE", txtToDate.getText().trim());
//
//        new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/FELTFINISHING_REPORT.rpt",Parameters,getReportData(EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim()),EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim()),"FELT FINISHING"));
//        EITLERPGLOBAL.PAGE_BREAK=true;
    }//GEN-LAST:event_btnGetReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TResult;
    private javax.swing.JButton btnGetReport;
    private javax.swing.JButton btnShowData;
    private javax.swing.JButton btnxls;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables

    private void GenerateReport() {
        String condition = "";

//        if (txtFromDate.getText().trim().length() > 0) {
//            condition += " AND F.PROD_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim()) + "'";
//        }
//        if (txtToDate.getText().trim().length() > 0) {
//            condition += " AND F.PROD_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim()) + "'";
//        }
        
        if (txtFromDate.getText().trim().length() > 0) {
            condition += " AND F.FINAL_APPROVAL_DATE>='" + EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim()) + "'";
        }
        if (txtToDate.getText().trim().length() > 0) {
            condition += " AND F.FINAL_APPROVAL_DATE<='" + EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim()) + "'";
        }

        formatGrid();

        try {

            String str = "";
            str ="SELECT 1 AS SR_NO,F.FINAL_APPROVAL_DATE,F.PROD_DATE,RIGHT(F.PROD_DOC_NO,6) AS PROD_DOC_NO,F.PROD_PIECE_NO,P.PR_BILL_STYLE AS PR_STYLE,P.PR_BILL_PRODUCT_CODE AS PR_PRODUCT_CODE, ";
            str += "Q.GROUP_NAME,Q.PRODUCT_DESC,Q.SYN_PER,P.PR_PARTY_CODE,S.PARTY_NAME,COALESCE(P.PR_FELT_RATE,'0') AS PR_FELT_RATE,COALESCE(P.PR_FELT_VALUE_WITHOUT_DISCOUNT,'0') AS PR_FELT_VALUE_WITHOUT_DISCOUNT, ";
//            str += "F.LENGTH,F.WIDTH,F.WEIGHT ";
            str += "P.PR_BILL_LENGTH AS LENGTH,P.PR_BILL_WIDTH AS WIDTH,F.TAG_WEIGHT AS WEIGHT ";
            str += "FROM PRODUCTION.FELT_PROD_DATA F, ";
            str += "PRODUCTION.FELT_SALES_PIECE_REGISTER P, ";
            str += "PRODUCTION.FELT_QLT_RATE_MASTER Q, ";
            str += "DINESHMILLS.D_SAL_PARTY_MASTER S ";
            str += "WHERE F.PROD_PIECE_NO=P.PR_PIECE_NO "+condition+" ";
            str += " ";
            str += "AND SUBSTRING(P.PR_BILL_PRODUCT_CODE,1,6)=Q.PRODUCT_CODE ";
            str += "AND S.PARTY_CODE=P.PR_PARTY_CODE ";
            str += "AND S.MAIN_ACCOUNT_CODE=210010 ";
            str += "AND F.PROD_DEPT = 'FELT FINISHING' AND F.APPROVED=1 AND F.CANCELED=0 ";
            str += "AND (Q.EFFECTIVE_TO='0000-00-00' OR Q.EFFECTIVE_TO IS NULL) AND Q.APPROVED=1 AND Q.CANCELED=0 ";
            str += "AND S.APPROVED=1 AND S.CANCELLED=0 ";
            System.out.println(str);

            //String strSQL="SELECT F.PARTY_NAME,F.PARTY_CODE,F.PIECE_NO,F.QUALITY_NO,F.INVOICE_NO,F.INVOICE_DATE,F.GROSS_KG,F.GROSS_SQ_MTR,F.WIDTH,F.LENGTH,F.RATE,F.GROSS_AMOUNT,ROUND((F.TRD_DISCOUNT*100/F.GROSS_AMOUNT),2) AS INV_DISC_PER,ROUND(D.DISC_PER,2) AS SANC_DISC_PER,ROUND((D.DISC_PER-(F.TRD_DISCOUNT*100/F.GROSS_AMOUNT)),2) AS WORK_DISC_PER,F.SEAM_CHARGE AS INV_SEAM_CHARGE,D.SEAM_VALUE AS SANC_SEAM_CHARGE,ROUND((D.SEAM_VALUE-F.SEAM_CHARGE),2) AS WORK_SEAM_CHARGE,ROUND((F.GROSS_AMOUNT*D.DISC_PER)/100-F.TRD_DISCOUNT,2) AS DISC_AMT  FROM PRODUCTION.FELT_INVOICE_DATA F LEFT JOIN PRODUCTION.FELT_RATE_DISC_MASTER_DETAIL D ON F.QUALITY_NO=D.PRODUCT_CODE WHERE F.INVOICE_DATE>= '"+ EITLERPGLOBAL.formatDateDB(txtfromdate.getText())+"' AND F.INVOICE_DATE<='"+ EITLERPGLOBAL.formatDateDB(txttodate.getText())+"' AND F.TRD_DISCOUNT<((F.GROSS_AMOUNT*D.DISC_PER)/100) AND F.PARTY_CODE IN (SELECT H.PARTY_CODE FROM PRODUCTION.FELT_RATE_DISC_MASTER_HEADER H WHERE H.MASTER_NO=D.MASTER_NO) AND F.INVOICE_NO NOT IN (SELECT U.INVOICE_NO FROM PRODUCTION.FELT_UNADJUSTED_TRN_DETAIL U GROUP BY U.INVOICE_NO,U.PIECE_NO)";
            ResultSet rsTmp = data.getResult(str);
            rsTmp.first();

            int Counter = 0;
            double length = 0;
            double weight = 0;

            if (rsTmp.getRow() > 0) {

                while (!rsTmp.isAfterLast()) {
                    Counter++;

                    Object[] rowData = new Object[20];

                    rowData[0] = Counter;
                    rowData[1] = EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp, "FINAL_APPROVAL_DATE", ""));
                    rowData[2] = EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp, "PROD_DATE", ""));
                    rowData[3] = UtilFunctions.getString(rsTmp, "PROD_PIECE_NO", "");
                    rowData[4] = UtilFunctions.getString(rsTmp, "PR_STYLE", "");
                    rowData[5] = UtilFunctions.getString(rsTmp, "PR_PRODUCT_CODE", "");
                    rowData[6] = UtilFunctions.getString(rsTmp, "GROUP_NAME", "");
                    rowData[7] = UtilFunctions.getString(rsTmp, "PRODUCT_DESC", "");
                    rowData[8] = UtilFunctions.getString(rsTmp, "SYN_PER", "");
                    rowData[9] = UtilFunctions.getString(rsTmp, "PR_PARTY_CODE", "");
                    rowData[10] = UtilFunctions.getString(rsTmp, "PARTY_NAME", "");
                    rowData[11] = UtilFunctions.getString(rsTmp, "LENGTH", "");
                    rowData[12] = UtilFunctions.getString(rsTmp, "WIDTH", "");
                    rowData[13] = UtilFunctions.getString(rsTmp, "WEIGHT", "");
                    rowData[14] = UtilFunctions.getString(rsTmp, "PR_FELT_RATE", "");
                    rowData[15] = UtilFunctions.getString(rsTmp, "PR_FELT_VALUE_WITHOUT_DISCOUNT", "");
                    
                    length += Double.parseDouble(rsTmp.getString("LENGTH"));
                    weight += Double.parseDouble(rsTmp.getString("WEIGHT"));
                    
                    DataModel.addRow(rowData);
                    TResult.changeSelection(TResult.getRowCount() - 1, 1, false, false);
                    TResult.requestFocus();

                    rsTmp.next();

                }
                Object[] rowD = new Object[20];
                
                rowD[0] = Counter++;
                    rowD[1] = "";
                    rowD[2] = "TOTAL";
                    rowD[3] = "";
                    rowD[4] = "";
                    rowD[5] = "";
                    rowD[6] = "";
                    rowD[7] = "";
                    rowD[8] = "";
                    rowD[9] = "";
                    rowD[10] = "";
                    rowD[11] = EITLERPGLOBAL.round(length, 2);
                    rowD[12] = "";
                    rowD[13] = EITLERPGLOBAL.round(weight, 2);
                    rowD[14] = "";
                    rowD[15] = "";
                    
                DataModel.addRow(rowD);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void formatGrid() {
        try {
            // objRow=objReportData.newRow();
            DataModel = new EITLTableModel();
            TResult.removeAll();
            TResult.setModel(DataModel);
            TResult.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.LIGHT_GRAY);

            DataModel.addColumn("SR_NO");
            DataModel.addColumn("FINAL_APPROVAL_DATE");
            DataModel.addColumn("PROD_DATE");
            DataModel.addColumn("PROD_PIECE_NO");
            DataModel.addColumn("PR_STYLE");
            DataModel.addColumn("PR_PRODUCT_CODE");
            DataModel.addColumn("GROUP_NAME");
            DataModel.addColumn("PRODUCT_DESC");
            DataModel.addColumn("SYN_PER");
            DataModel.addColumn("PR_PARTY_CODE");
            DataModel.addColumn("PARTY_NAME");
            DataModel.addColumn("LENGTH (mtr)");
            DataModel.addColumn("WIDTH (mtr)");
            DataModel.addColumn("WEIGHT (kg)");
            DataModel.addColumn("Felt Rate");
            DataModel.addColumn("Felt Value(without Discount)");

            DataModel.SetVariable(0, "SR_NO");  //0
            DataModel.SetVariable(1, "FINAL_APPROVAL_DATE"); 
            DataModel.SetVariable(2, "PROD_DATE"); 
            DataModel.SetVariable(3, "PROD_PIECE_NO"); //1
            DataModel.SetVariable(4, "PR_STYLE"); //1
            DataModel.SetVariable(5, "PR_PRODUCT_CODE"); //1
            DataModel.SetVariable(6, "GROUP_NAME"); //1
            DataModel.SetVariable(7, "PRODUCT_DESC"); //1
            DataModel.SetVariable(8, "SYN_PER"); //1
            DataModel.SetVariable(9, "PR_PARTY_CODE"); //2
            DataModel.SetVariable(10, "PARTY_NAME"); //3
            DataModel.SetVariable(11, "LENGTH"); //8
            DataModel.SetVariable(12, "WIDTH"); //4
            DataModel.SetVariable(13, "WEIGHT"); //6
            DataModel.SetVariable(14, "PR_FELT_RATE"); //6
            DataModel.SetVariable(15, "PR_FELT_VALUE_WITHOUT_DISCOUNT"); //6

            DataModel.SetReadOnly(0);
            DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);
            DataModel.SetReadOnly(7);
            DataModel.SetReadOnly(8);
            DataModel.SetReadOnly(9);
            DataModel.SetReadOnly(10);
            DataModel.SetReadOnly(11);
            DataModel.SetReadOnly(12);
            DataModel.SetReadOnly(13);
            DataModel.SetReadOnly(14);
            DataModel.SetReadOnly(15);
            
            for (int j = 0; j < TResult.getColumnCount(); j++) {
                TResult.getColumnModel().getColumn(j).setCellRenderer(Renderer);
            }

        } catch (Exception e) {

        }

    }

    private boolean Validate() {
        //Form level validations

        if (txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter from date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid From Date in DD/MM/YYYY format.");
            return false;
        }

        if (txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter To date");
            return false;
        } else if (!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid To Date in DD/MM/YYYY format.");
            return false;
        }

        return true;
    }
    
    public  TReportWriter.SimpleDataProvider.TTable getReportData(String fromDate,String toDate,String prodDept) {
        TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
        objData.AddColumn("SR_NO");
        objData.AddColumn("FINAL_APPROVAL_DATE");
        objData.AddColumn("PROD_DATE");
        objData.AddColumn("PROD_DOC_NO");
        objData.AddColumn("PROD_PIECE_NO");
        objData.AddColumn("PR_STYLE");
        objData.AddColumn("PR_PRODUCT_CODE");
        objData.AddColumn("GROUP_NAME");
        objData.AddColumn("PRODUCT_DESC");
        objData.AddColumn("SYN_PER");
        objData.AddColumn("PR_PARTY_CODE");
        objData.AddColumn("PARTY_NAME");
        objData.AddColumn("LENGTH");
        objData.AddColumn("WIDTH");
        objData.AddColumn("WEIGHT");
        
        
        try{
            TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
            
            String str ="SELECT 1 AS SR_NO,F.FINAL_APPROVAL_DATE,F.PROD_DATE,RIGHT(F.PROD_DOC_NO,6) AS PROD_DOC_NO,F.PROD_PIECE_NO,P.PR_BILL_STYLE AS PR_STYLE,P.PR_PRODUCT_CODE,Q.GROUP_NAME,Q.PRODUCT_DESC,Q.SYN_PER,P.PR_PARTY_CODE,S.PARTY_NAME,F.LENGTH,F.WIDTH,F.WEIGHT FROM PRODUCTION.FELT_PROD_DATA F, ";
            str += "PRODUCTION.FELT_SALES_PIECE_REGISTER P, ";
            str += "PRODUCTION.FELT_QLT_RATE_MASTER Q, ";
            str += "DINESHMILLS.D_SAL_PARTY_MASTER S ";
            str += "WHERE F.PROD_PIECE_NO=P.PR_PIECE_NO ";
            str += "AND F.PROD_DATE>='"+fromDate+"' ";
            str += "AND F.PROD_DATE<='"+toDate+"' ";
            str += "AND SUBSTRING(P.PR_PRODUCT_CODE,1,6)=Q.PRODUCT_CODE ";
            str += "AND S.PARTY_CODE=P.PR_PARTY_CODE ";
            str += "AND S.MAIN_ACCOUNT_CODE=210010 ";
            str += "AND F.PROD_DEPT = '"+prodDept+"' AND F.APPROVED=1 AND F.CANCELED=0 ";
            str += "AND (Q.EFFECTIVE_TO='0000-00-00' OR Q.EFFECTIVE_TO IS NULL) AND Q.APPROVED=1 AND Q.CANCELED=0 ";
            str += "AND S.APPROVED=1 AND S.CANCELLED=0 ";
            
            ResultSet  rsTemp =data.getResult(str);
            int counter=1;
            while(!rsTemp.isAfterLast()){
                objRow=objData.newRow();
                objRow.setValue("SR_NO", rsTemp.getString("SR_NO"));
                objRow.setValue("FINAL_APPROVAL_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("FINAL_APPROVAL_DATE")));
                objRow.setValue("PROD_DOC_NO", rsTemp.getString("PROD_DOC_NO"));
                objRow.setValue("PROD_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("PROD_DATE")));
                objRow.setValue("PROD_PIECE_NO", rsTemp.getString("PROD_PIECE_NO"));
                objRow.setValue("PR_STYLE", rsTemp.getString("PR_STYLE"));
                objRow.setValue("PR_PRODUCT_CODE", rsTemp.getString("PR_PRODUCT_CODE"));
                objRow.setValue("GROUP_NAME", rsTemp.getString("GROUP_NAME"));
                objRow.setValue("PRODUCT_DESC", rsTemp.getString("PRODUCT_DESC"));
                objRow.setValue("SYN_PER", rsTemp.getString("SYN_PER"));
                objRow.setValue("PR_PARTY_CODE", rsTemp.getString("PR_PARTY_CODE"));
                objRow.setValue("PARTY_NAME", rsTemp.getString("PARTY_NAME"));
                objRow.setValue("LENGTH", rsTemp.getString("LENGTH"));
                objRow.setValue("WIDTH", rsTemp.getString("WIDTH"));
                objRow.setValue("WEIGHT", rsTemp.getString("WEIGHT"));
                
                objData.AddRow(objRow);
                counter++;
                rsTemp.next();
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
        return objData;
    }
    
    private void PreviewReport() {
        String fromDate = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
        String toDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
        String prodDept = "FELT FINISHING";
                
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            Conn = data.getConn();
            st = Conn.createStatement();

            HashMap parameterMap = new HashMap();

            parameterMap.put("RUNDATE", EITLERPGLOBAL.getCurrentDate() + " " + EITLERPGLOBAL.getCurrentTime());
            parameterMap.put("FROM_DATE", txtFromDate.getText().trim());
            parameterMap.put("TO_DATE", txtToDate.getText().trim());
            
            ReportRegister rpt = new ReportRegister(parameterMap, Conn);
               
//            String strSQL ="SELECT 1 AS SR_NO,F.PROD_DATE,F.PROD_DOC_NO,F.PROD_PIECE_NO,P.PR_STYLE,P.PR_PRODUCT_CODE,Q.GROUP_NAME, ";
//            strSQL += "Q.PRODUCT_DESC,Q.SYN_PER,P.PR_PARTY_CODE,S.PARTY_NAME, ";
////            strSQL += "F.LENGTH,F.WIDTH,F.WEIGHT ";
//            strSQL += "P.PR_BILL_LENGTH AS LENGTH,P.PR_BILL_WIDTH AS WIDTH,F.TAG_WEIGHT AS WEIGHT ";
//            strSQL += "FROM PRODUCTION.FELT_PROD_DATA F, ";
//            strSQL += "PRODUCTION.FELT_SALES_PIECE_REGISTER P, ";
//            strSQL += "PRODUCTION.FELT_QLT_RATE_MASTER Q, ";
//            strSQL += "DINESHMILLS.D_SAL_PARTY_MASTER S ";
//            strSQL += "WHERE F.PROD_PIECE_NO=P.PR_PIECE_NO ";
//            strSQL += "AND F.PROD_DATE>='"+fromDate+"' ";
//            strSQL += "AND F.PROD_DATE<='"+toDate+"' ";
//            strSQL += "AND SUBSTRING(P.PR_PRODUCT_CODE,1,6)=Q.PRODUCT_CODE ";
//            strSQL += "AND S.PARTY_CODE=P.PR_PARTY_CODE ";
//            strSQL += "AND S.MAIN_ACCOUNT_CODE=210010 ";
//            strSQL += "AND F.PROD_DEPT = '"+prodDept+"' AND F.APPROVED=1 AND F.CANCELED=0 ";
//            strSQL += "AND (Q.EFFECTIVE_TO='0000-00-00' OR Q.EFFECTIVE_TO IS NULL) AND Q.APPROVED=1 AND Q.CANCELED=0 ";
//            strSQL += "AND S.APPROVED=1 AND S.CANCELLED=0 ";
            
//            String strSQL ="SELECT SR_NO,PROD_DATE,PROD_DOC_NO,PROD_PIECE_NO,PR_STYLE,PR_PRODUCT_CODE,GROUP_NAME,PRODUCT_DESC,SYN_PER,PR_PARTY_CODE,COALESCE(PARTY_NAME,'') AS PARTY_NAME,LENGTH,WIDTH,WEIGHT,TOTAL_LENGTH,TOTAL_WEIGHT  ";
//            strSQL += "FROM (SELECT 1 AS SR_NO,F.PROD_DATE,F.PROD_DOC_NO,F.PROD_PIECE_NO,P.PR_STYLE, ";
//            strSQL += "P.PR_PRODUCT_CODE,Q.GROUP_NAME,Q.PRODUCT_DESC,Q.SYN_PER,P.PR_PARTY_CODE,P.PR_BILL_LENGTH AS LENGTH, ";
//            strSQL += "P.PR_BILL_WIDTH AS WIDTH,F.TAG_WEIGHT AS WEIGHT ";
//            strSQL += "FROM PRODUCTION.FELT_PROD_DATA F, PRODUCTION.FELT_SALES_PIECE_REGISTER P, PRODUCTION.FELT_QLT_RATE_MASTER Q ";
//            strSQL += "WHERE F.PROD_PIECE_NO=P.PR_PIECE_NO ";
//            strSQL += "AND F.PROD_DATE>='"+fromDate+"' ";
//            strSQL += "AND F.PROD_DATE<='"+toDate+"' ";
//            strSQL += "AND SUBSTRING(P.PR_PRODUCT_CODE,1,6)=Q.PRODUCT_CODE ";
//            strSQL += "AND F.PROD_DEPT = 'FELT FINISHING' AND F.APPROVED=1 AND F.CANCELED=0 ";//#AND F.APPROVED=1 AND F.CANCELED=0
//            strSQL += "AND (Q.EFFECTIVE_TO='0000-00-00' OR Q.EFFECTIVE_TO IS NULL) AND Q.APPROVED=1 AND Q.CANCELED=0 ) AS DA ";
//            strSQL += "LEFT JOIN (SELECT PARTY_CODE, SUBSTRING(PARTY_NAME,1,18) AS PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE=210010 AND APPROVED=1 AND CANCELLED=0 ) AS DP ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.PROD_DATE>='"+fromDate+"' AND D.PROD_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO NOT LIKE '%V%' ) AS TL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT = 'FELT FINISHING' AND PROD_DATE>='"+fromDate+"' AND PROD_DATE<='"+toDate+"' AND APPROVED=1 AND CANCELED=0 AND PROD_PIECE_NO NOT LIKE '%V%' ) AS WT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
            
//            String strSQL ="SELECT SR_NO,FINAL_APPROVAL_DATE,PROD_DATE,PROD_DOC_NO,PROD_PIECE_NO,PR_STYLE,PR_PRODUCT_CODE,GROUP_NAME,PRODUCT_DESC,SYN_PER,PR_PARTY_CODE,COALESCE(PARTY_NAME,'') AS PARTY_NAME,LENGTH,WIDTH,WEIGHT,TOTAL_LENGTH,TOTAL_WEIGHT,D_TOTAL_LENGTH,D_TOTAL_WEIGHT,G_TOTAL_LENGTH,G_TOTAL_WEIGHT  ";
//            strSQL += "FROM (SELECT 1 AS SR_NO,F.FINAL_APPROVAL_DATE,F.PROD_DATE,F.PROD_DOC_NO,F.PROD_PIECE_NO,P.PR_STYLE, ";
//            strSQL += "P.PR_PRODUCT_CODE,Q.GROUP_NAME,Q.PRODUCT_DESC,Q.SYN_PER,P.PR_PARTY_CODE,P.PR_BILL_LENGTH AS LENGTH, ";
//            strSQL += "P.PR_BILL_WIDTH AS WIDTH,F.TAG_WEIGHT AS WEIGHT ";
//            strSQL += "FROM PRODUCTION.FELT_PROD_DATA F, PRODUCTION.FELT_SALES_PIECE_REGISTER P, PRODUCTION.FELT_QLT_RATE_MASTER Q ";
//            strSQL += "WHERE F.PROD_PIECE_NO=P.PR_PIECE_NO ";
//            strSQL += "AND F.PROD_DATE>='"+fromDate+"' ";
//            strSQL += "AND F.PROD_DATE<='"+toDate+"' ";
//            strSQL += "AND SUBSTRING(P.PR_PRODUCT_CODE,1,6)=Q.PRODUCT_CODE ";
//            strSQL += "AND F.PROD_DEPT = 'FELT FINISHING' AND F.APPROVED=1 AND F.CANCELED=0 ";//#AND F.APPROVED=1 AND F.CANCELED=0 
//            strSQL += "AND (Q.EFFECTIVE_TO='0000-00-00' OR Q.EFFECTIVE_TO IS NULL) AND Q.APPROVED=1 AND Q.CANCELED=0 ) AS DA ";
//            strSQL += "LEFT JOIN (SELECT PARTY_CODE, SUBSTRING(PARTY_NAME,1,18) AS PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE=210010 AND APPROVED=1 AND CANCELLED=0 ) AS DP ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.PROD_DATE>='"+fromDate+"' AND D.PROD_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO NOT LIKE '%V%' ) AS TL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT = 'FELT FINISHING' AND PROD_DATE>='"+fromDate+"' AND PROD_DATE<='"+toDate+"' AND APPROVED=1 AND CANCELED=0 AND PROD_PIECE_NO NOT LIKE '%V%' ) AS WT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS D_TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.PROD_DATE>='"+fromDate+"' AND D.PROD_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO LIKE '%V%' ) AS DTL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS D_TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT = 'FELT FINISHING' AND PROD_DATE>='"+fromDate+"' AND PROD_DATE<='"+toDate+"' AND APPROVED=1 AND CANCELED=0 AND PROD_PIECE_NO LIKE '%V%' ) AS DWT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS G_TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.PROD_DATE>='"+fromDate+"' AND D.PROD_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO ) AS GTL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS G_TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT = 'FELT FINISHING' AND PROD_DATE>='"+fromDate+"' AND PROD_DATE<='"+toDate+"' AND APPROVED=1 AND CANCELED=0 ) AS GWT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            
            
            String strSQL ="SELECT SR_NO,FINAL_APPROVAL_DATE,PROD_DATE,PROD_DOC_NO,PROD_PIECE_NO,PR_STYLE,PR_PRODUCT_CODE,GROUP_NAME,PRODUCT_DESC,SYN_PER,PR_PARTY_CODE,COALESCE(PARTY_NAME,'') AS PARTY_NAME,LENGTH,WIDTH,WEIGHT,TOTAL_LENGTH,TOTAL_WEIGHT,D_TOTAL_LENGTH,D_TOTAL_WEIGHT,G_TOTAL_LENGTH,G_TOTAL_WEIGHT,PR_FELT_RATE,PR_FELT_VALUE_WITHOUT_DISCOUNT  ";
            strSQL += "FROM (SELECT 1 AS SR_NO,F.FINAL_APPROVAL_DATE,F.PROD_DATE,F.PROD_DOC_NO,F.PROD_PIECE_NO,P.PR_BILL_STYLE AS PR_STYLE, ";
            strSQL += "P.PR_BILL_PRODUCT_CODE AS PR_PRODUCT_CODE,Q.GROUP_NAME,Q.PRODUCT_DESC,Q.SYN_PER,P.PR_PARTY_CODE,P.PR_BILL_LENGTH AS LENGTH, ";
            strSQL += "P.PR_BILL_WIDTH AS WIDTH,F.TAG_WEIGHT AS WEIGHT,COALESCE(PR_FELT_RATE,'0') AS PR_FELT_RATE,COALESCE(PR_FELT_VALUE_WITHOUT_DISCOUNT,'0') AS PR_FELT_VALUE_WITHOUT_DISCOUNT ";
            strSQL += "FROM PRODUCTION.FELT_PROD_DATA F, PRODUCTION.FELT_SALES_PIECE_REGISTER P, PRODUCTION.FELT_QLT_RATE_MASTER Q ";
            strSQL += "WHERE F.PROD_PIECE_NO=P.PR_PIECE_NO ";
            strSQL += "AND F.FINAL_APPROVAL_DATE>='"+fromDate+"' ";
            strSQL += "AND F.FINAL_APPROVAL_DATE<='"+toDate+"' ";
            strSQL += "AND SUBSTRING(P.PR_BILL_PRODUCT_CODE,1,6)=Q.PRODUCT_CODE ";
            strSQL += "AND F.PROD_DEPT = 'FELT FINISHING' AND F.APPROVED=1 AND F.CANCELED=0 ";//#AND F.APPROVED=1 AND F.CANCELED=0 
            strSQL += "AND (Q.EFFECTIVE_TO='0000-00-00' OR Q.EFFECTIVE_TO IS NULL) AND Q.APPROVED=1 AND Q.CANCELED=0 ) AS DA ";
            strSQL += "LEFT JOIN (SELECT PARTY_CODE, SUBSTRING(PARTY_NAME,1,18) AS PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE=210010 AND APPROVED=1 AND CANCELLED=0 ) AS DP ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO NOT LIKE '%V%' ) AS TL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT = 'FELT FINISHING' AND FINAL_APPROVAL_DATE>='"+fromDate+"' AND FINAL_APPROVAL_DATE<='"+toDate+"' AND APPROVED=1 AND CANCELED=0 AND PROD_PIECE_NO NOT LIKE '%V%' ) AS WT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS D_TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO LIKE '%V%' ) AS DTL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS D_TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT = 'FELT FINISHING' AND FINAL_APPROVAL_DATE>='"+fromDate+"' AND FINAL_APPROVAL_DATE<='"+toDate+"' AND APPROVED=1 AND CANCELED=0 AND PROD_PIECE_NO LIKE '%V%' ) AS DWT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS G_TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO ) AS GTL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
//            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS G_TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA WHERE PROD_DEPT = 'FELT FINISHING' AND FINAL_APPROVAL_DATE>='"+fromDate+"' AND FINAL_APPROVAL_DATE<='"+toDate+"' AND APPROVED=1 AND CANCELED=0 ) AS GWT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO NOT LIKE '%V%' ) AS TL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO NOT LIKE '%V%'  ) AS WT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS D_TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO LIKE '%V%' ) AS DTL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS D_TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO AND P.PR_PIECE_NO LIKE '%V%' ) AS DWT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(P.PR_BILL_LENGTH),0) AS G_TOTAL_LENGTH FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO ) AS GTL ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
            strSQL += "LEFT JOIN (SELECT COALESCE(SUM(TAG_WEIGHT),0) AS G_TOTAL_WEIGHT FROM PRODUCTION.FELT_PROD_DATA D,PRODUCTION.FELT_SALES_PIECE_REGISTER P WHERE D.PROD_DEPT = 'FELT FINISHING' AND D.FINAL_APPROVAL_DATE>='"+fromDate+"' AND D.FINAL_APPROVAL_DATE<='"+toDate+"' AND D.APPROVED=1 AND D.CANCELED=0 AND D.PROD_PIECE_NO=P.PR_PIECE_NO ) AS GWT ON DP.PARTY_CODE = DA.PR_PARTY_CODE ";
            
            
            System.out.println("SQL : "+strSQL);
//            rpt.setReportName("/EITLERP/FeltSales/FeltFinishing/FeltFinishingAll.jrxml", 1, strSQL); //productlist is the name of my jasper file.
            rpt.setReportName("/EITLERP/FeltSales/FeltFinishing/FeltFinishingExcise.jrxml", 1, strSQL); //productlist is the name of my jasper file.
            rpt.callReport();

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                st.close();
                Conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    public void setFromToDate(String FromDate,String ToDate)
    {
            txtFromDate.setText(FromDate);
            txtToDate.setText(ToDate);
            GenerateReport();
    }
}
