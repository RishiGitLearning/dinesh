/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.FeltSales.FeltScheme;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableCellRenderer;
import EITLERP.EITLTableModel;
import EITLERP.Finance.FinanceGlobal;
import EITLERP.Finance.UtilFunctions;
import EITLERP.Finance.clsVoucher;
import EITLERP.data;
import EITLERP.*;
import EITLERP.Finance.clsVoucherItem;
//import TReportWriter.TReportEngine;
import TReportWriter.*;
import TReportWriter.SimpleDataProvider.*;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;

/**
 *
 * @author root
 */
public class frmFeltSchemeAutoCNPosting extends javax.swing.JApplet {

    private TReportEngine objEngine = new TReportEngine();
    public String S = "";
    public int Flag = 0;
    private EITLTableModel DataModel;
    private EITLERP.FeltSales.common.FeltInvCalc inv_calculation;
    private EITLComboModel cmbCntrModel;
    private boolean InvFlag = false;
    private boolean cntrFlag = false;
    public String LastError="";
    
    /**
     * Initializes the applet frmFeltInvPro
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frmFeltInvPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frmFeltInvPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frmFeltInvPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frmFeltInvPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the applet */
//        try {
//            java.awt.EventQueue.invokeAndWait(new Runnable() {
//                public void run() {
//                    initComponents();
//                }
//            });
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
        setSize(760, 540);
        initComponents();
        lblTitle.setForeground(Color.WHITE);
        jPanel2.setVisible(true);
        btnPostCN.setVisible(false);
        getDept();
        FormatGrid();
        GenerateData();
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        chkSelectAll = new javax.swing.JCheckBox();
        btnPostCN = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setText("FELT SCHEME AUTO CREDIT NOTE POSTING");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 650, 25);

        jPanel2.setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 640, 320);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 60, 640, 330);

        chkSelectAll.setText("Select All");
        chkSelectAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkSelectAllMouseClicked(evt);
            }
        });
        getContentPane().add(chkSelectAll);
        chkSelectAll.setBounds(20, 30, 170, 25);

        btnPostCN.setText("POST CN");
        btnPostCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostCNActionPerformed(evt);
            }
        });
        getContentPane().add(btnPostCN);
        btnPostCN.setBounds(230, 420, 180, 33);
    }// </editor-fold>//GEN-END:initComponents

    private void chkSelectAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkSelectAllMouseClicked
        // TODO add your handling code here:
        if (chkSelectAll.isSelected()) {
            for (int c=0; c<Table.getRowCount(); c++) {
                Table.getModel().setValueAt(true, c, 0);
            }
            btnPostCN.setVisible(true);
        } else {
            for (int c=0; c<Table.getRowCount(); c++) {
                Table.getModel().setValueAt(false, c, 0);
            }
            btnPostCN.setVisible(false);
        }
    }//GEN-LAST:event_chkSelectAllMouseClicked

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        int chkCount = 0;
        for (int a=0; a<Table.getRowCount(); a++) {
            if (Table.getValueAt(a, 0).equals(true))
                chkCount++;
            }
        if (chkCount==Table.getRowCount()) {
            chkSelectAll.setSelected(true);
        } else {
            chkSelectAll.setSelected(false);
        }
        if (chkCount==0) {
            btnPostCN.setVisible(false);
        } else {
            btnPostCN.setVisible(true);
        }
    }//GEN-LAST:event_TableMouseClicked

    private void btnPostCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostCNActionPerformed
        // TODO add your handling code here:
        
//        for (int a=0; a<Table.getRowCount(); a++) {
//            if (Table.getValueAt(a, 0).equals(true)) {
//                PostAutoCN(2, Table.getValueAt(a, 1).toString(), EITLERPGLOBAL.getCurrentDateDB());
//            }
//        }
//        btnPostCN.setVisible(false);
//        FormatGrid();
//        GenerateData();
        try {
            for (int a = 0; a < Table.getRowCount(); a++) {
                if (Table.getValueAt(a, 0).equals(true)) {
                    data.Execute("UPDATE PRODUCTION.ANNUAL_ORDER_INCENTIVE SET CN_IND=1 WHERE PIECE_NO='" + Table.getValueAt(a, 1).toString() + "'");
                }
            }

            ResultSet rsData = data.getResult("SELECT DISTINCT PARTY_CODE FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE WHERE CN_IND=1 ORDER BY PARTY_CODE");
            rsData.first();

            if (rsData.getRow() > 0) {
                while (!rsData.isAfterLast()) {
                    String partyCd = rsData.getString("PARTY_CODE");
                    
                    PostAutoCNPartyWise(2, partyCd, EITLERPGLOBAL.getCurrentDateDB());
                    
                    rsData.next();
                }
            }

            btnPostCN.setVisible(false);
            FormatGrid();
            GenerateData();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPostCNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btnPostCN;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkSelectAll;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private void FormatGrid() {
        try {

            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);

            EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
            //Renderer.setColor(0, 0, Color.LIGHT_GRAY);

            DataModel.addColumn("Select");
            DataModel.addColumn("Piece No");
            DataModel.addColumn("Party Code");
            DataModel.addColumn("Party Name");
            DataModel.addColumn("Inv Charge Code");
            DataModel.addColumn("Invoice No");
            DataModel.addColumn("Invoice Date");
            DataModel.addColumn("Invoice Amount");
            DataModel.addColumn("PI Date");
            DataModel.addColumn("Voucher Date");
            DataModel.addColumn("Due Date 1");
            DataModel.addColumn("Due Date 2");
            
            

            int ImportCol = 0;
            Renderer.setCustomComponent(ImportCol, "CheckBox");
            JCheckBox aCheckBox = new JCheckBox();
            aCheckBox.setBackground(Color.WHITE);
            aCheckBox.setVisible(true);
            aCheckBox.setEnabled(true);
            aCheckBox.setSelected(false);
            Table.getColumnModel().getColumn(ImportCol).setCellEditor(new DefaultCellEditor(aCheckBox));
            Table.getColumnModel().getColumn(ImportCol).setCellRenderer(Renderer);

            DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);
            DataModel.SetReadOnly(7);
            DataModel.SetReadOnly(8);
            DataModel.SetReadOnly(9);
            DataModel.SetReadOnly(10);
            DataModel.SetReadOnly(11);
            
            Table.getColumnModel().getColumn(0).setMinWidth(60);
            Table.getColumnModel().getColumn(1).setMinWidth(80);
            Table.getColumnModel().getColumn(2).setMinWidth(80);
            Table.getColumnModel().getColumn(3).setMinWidth(120);
            Table.getColumnModel().getColumn(4).setMinWidth(80);
            Table.getColumnModel().getColumn(5).setMinWidth(80);
            Table.getColumnModel().getColumn(6).setMinWidth(80);
            Table.getColumnModel().getColumn(7).setMinWidth(80);
            Table.getColumnModel().getColumn(8).setMinWidth(80);
            Table.getColumnModel().getColumn(9).setMinWidth(80);
            Table.getColumnModel().getColumn(10).setMinWidth(80);
            Table.getColumnModel().getColumn(11).setMinWidth(80);
            

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Enter Correct Details in Table. Error is : " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void GenerateData() {
        
        System.out.println("START : Updation of Annual Order Incentive Data");
        try {
            ResultSet rsChrgCd = null;
            ResultSet rsData = null;
            String chrgCdDetail = "SELECT * FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE WHERE PI_DATE NOT IN ('0000-00-00') AND INVOICE_DATE IN ('0000-00-00')";
            rsChrgCd = data.getResult(chrgCdDetail);
            rsChrgCd.first();
            if (rsChrgCd.getRow() > 0) {
                while (!rsChrgCd.isAfterLast()) {
                    String pieceNo = rsChrgCd.getString("PIECE_NO");
                    String partyCd = rsChrgCd.getString("PARTY_CODE");

                    if (data.IsRecordExist("SELECT D.* FROM PRODUCTION.FELT_SAL_INVOICE_DETAIL D,PRODUCTION.FELT_SAL_INVOICE_HEADER H WHERE H.INVOICE_NO=D.INVOICE_NO AND H.INVOICE_DATE=SUBSTRING(D.INVOICE_DATE,1,10) AND H.APPROVED=1 AND H.CANCELLED=0 AND D.PIECE_NO='" + pieceNo + "' ")) {
                        String invNo = data.getStringValueFromDB("SELECT H.INVOICE_NO FROM PRODUCTION.FELT_SAL_INVOICE_DETAIL D,PRODUCTION.FELT_SAL_INVOICE_HEADER H WHERE H.INVOICE_NO=D.INVOICE_NO AND H.INVOICE_DATE=SUBSTRING(D.INVOICE_DATE,1,10) AND H.APPROVED=1 AND H.CANCELLED=0 AND D.PIECE_NO='" + pieceNo + "'");
                        String invDate = data.getStringValueFromDB("SELECT H.INVOICE_DATE FROM PRODUCTION.FELT_SAL_INVOICE_DETAIL D,PRODUCTION.FELT_SAL_INVOICE_HEADER H WHERE H.INVOICE_NO=D.INVOICE_NO AND H.INVOICE_DATE=SUBSTRING(D.INVOICE_DATE,1,10) AND H.APPROVED=1 AND H.CANCELLED=0 AND D.PIECE_NO='" + pieceNo + "'");
                        double basAmt = data.getDoubleValueFromDB("SELECT D.BAS_AMT FROM PRODUCTION.FELT_SAL_INVOICE_DETAIL D,PRODUCTION.FELT_SAL_INVOICE_HEADER H WHERE H.INVOICE_NO=D.INVOICE_NO AND H.INVOICE_DATE=SUBSTRING(D.INVOICE_DATE,1,10) AND H.APPROVED=1 AND H.CANCELLED=0 AND D.PIECE_NO='" + pieceNo + "'");

                        String strSQL = "SELECT  A1.INVOICE_NO,B1.INVOICE_DATE,A1.INVOICE_AMT,A1.PARTY_CODE,A1.PARTY_NAME, ";
                        strSQL += "A1.CHARGE_CODE,A1.PARTY_CHARGE_CODE,VOUCHER,VOUCHER_DATE,B1.INVOICE_AMOUNT FROM  ";
                        strSQL += "(SELECT  INVOICE_NO,SUBSTRING(INVOICE_DATE,1,10) AS INVOICE_DATE,PARTY_CODE,PARTY_NAME, ";
                        strSQL += "INVOICE_AMT,CHARGE_CODE,PARTY_CHARGE_CODE ";
                        strSQL += "FROM PRODUCTION.FELT_SAL_INVOICE_HEADER ";
                        strSQL += "WHERE INVOICE_NO='" + invNo + "' ";
                        strSQL += "AND SUBSTRING(INVOICE_DATE,1,10)='" + invDate + "'  ";
                        strSQL += "AND INVOICE_TYPE=2 AND CHARGE_CODE IN ('09') AND APPROVED=1 AND CANCELLED=0) AS A1 ";
                        strSQL += "LEFT JOIN ";
                        strSQL += "(SELECT INVOICE_NO,INVOICE_DATE,SUM(DISTINCT AMOUNT) AS INVOICE_AMOUNT, ";
                        strSQL += "GROUP_CONCAT(DISTINCT D.VOUCHER_NO ORDER BY D.VOUCHER_NO SEPARATOR ', ') AS VOUCHER, ";
                        strSQL += "MAX(D.VOUCHER_DATE) AS VOUCHER_DATE  ";
                        strSQL += "FROM FINANCE.D_FIN_VOUCHER_DETAIL_EX C,FINANCE.D_FIN_VOUCHER_HEADER D ";
                        strSQL += "WHERE INVOICE_NO='" + invNo + "'  ";
                        strSQL += "AND INVOICE_DATE='" + invDate + "' ";
                        strSQL += "AND C.VOUCHER_NO NOT LIKE ('SJ%')  ";
                        strSQL += "AND C.VOUCHER_NO= D.VOUCHER_NO AND D.APPROVED =1 AND D.CANCELLED =0 ";
                        strSQL += "GROUP BY INVOICE_NO,INVOICE_DATE) AS B1 ";
                        strSQL += "ON A1.INVOICE_NO = B1.INVOICE_NO ";
                        strSQL += "AND B1.INVOICE_DATE = A1.INVOICE_DATE ";
                        strSQL += "ORDER BY A1.INVOICE_NO ";

                        if (data.IsRecordExist(strSQL)) {
                            
                            rsData = data.getResult(strSQL);
                            rsData.first();
                            
                            Double invAmt = rsData.getDouble("INVOICE_AMT");
                            String chCd = rsData.getString("CHARGE_CODE");
                            String pChCd = rsData.getString("PARTY_CHARGE_CODE");
                            String rcVoucher = rsData.getString("VOUCHER");
                            String rcVoucherDt = rsData.getString("VOUCHER_DATE");
                            Double rcVoucherAmt = rsData.getDouble("INVOICE_AMOUNT");
                            
                            String upstrSQL = "UPDATE PRODUCTION.ANNUAL_ORDER_INCENTIVE SET INVOICE_NO='" + invNo + "',INVOICE_DATE='" + invDate + "',INVOICE_AMT='" + invAmt + "',BASIC_VALUE='" + basAmt + "',INVOICE_CHARGE_CODE='" + chCd + "',PARTY_CHARGE_CODE='" + pChCd + "',RC_VOUCHER_DATE='" + rcVoucherDt + "',RC_VOUCHER_AMT='" + rcVoucherAmt + "',RC_DETAIL='" + rcVoucher + "' WHERE PIECE_NO='" + pieceNo + "' AND PARTY_CODE = '" + partyCd + "' ";
                            data.Execute(upstrSQL);
                            System.out.println("UPDATED PIECE NO : "+pieceNo);
                        }

                    }

                    rsChrgCd.next();
                }
            }
        } catch (Exception e) {
            
        }
        System.out.println("END : Updation of Annual Order Incentive Data");
        
        try {
            String SQL = "SELECT * FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE WHERE PI_DATE NOT IN ('0000-00-00') AND INVOICE_DATE NOT IN ('0000-00-00') AND RC_VOUCHER_DATE NOT IN ('0000-00-00') AND RC_VOUCHER_DATE<=DUE_DATE2 AND PI_BASED_CN_NO='' ";
            System.out.println(SQL);

            ResultSet rsTmp = data.getResult(SQL);
            rsTmp.first();

            int Counter = 0;

            if (rsTmp.getRow() > 0) {

                while (!rsTmp.isAfterLast()) {
                    Counter++;
                    // objRow=objReportData.newRow();
                    Object[] rowData = new Object[20];

                    rowData[1] = UtilFunctions.getString(rsTmp, "PIECE_NO", "");
                    rowData[2] = UtilFunctions.getString(rsTmp, "PARTY_CODE", "");
                    String pName = clsSales_Party.getPartyName(2, UtilFunctions.getString(rsTmp, "PARTY_CODE", ""));
                    rowData[3] = pName;
                    rowData[4] = UtilFunctions.getString(rsTmp, "INVOICE_CHARGE_CODE", "");
                    rowData[5] = UtilFunctions.getString(rsTmp, "INVOICE_NO", "");
                    rowData[6] = EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp, "INVOICE_DATE", ""));
                    rowData[7] = UtilFunctions.getString(rsTmp, "INVOICE_AMT", "");
                    rowData[8] = EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp, "PI_DATE", ""));
                    rowData[9] = EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp, "RC_VOUCHER_DATE", ""));
                    rowData[10] = EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp, "DUE_DATE1", ""));
                    rowData[11] = EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp, "DUE_DATE2", ""));
                    
                    DataModel.addRow(rowData);
                    rsTmp.next();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void getDept() {
        if (EITLERPGLOBAL.gUserDeptID == 29 || EITLERPGLOBAL.gUserDeptID == 76 || EITLERPGLOBAL.gUserDeptID == 0) {
            btnPostCN.setEnabled(true);
        } else {
            btnPostCN.setEnabled(false);
            btnPostCN.setVisible(false);
        }
    }
    
    private boolean PostAutoCN(int CompanyID, String GRNo, String GRDate) {
        try {
            //Get Object            
            System.out.println("SSSS 0");
            System.out.println("PieceNo " + GRNo);
            System.out.println("CurDate  " + GRDate);

            String invNo = "";
            String invDt = "";
            String voucherDt = "";
            String dueDt1 = "";
            String dueDt2 = "";
            String pieceNo = "";
            double invAmt = 0;
            double cnAmt = 0;
            

            clsVoucher objVoucher = new clsVoucher();

            String PartyCode = data.getStringValueFromDB("SELECT PARTY_CODE FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE WHERE PIECE_NO='" + GRNo + "' ");
            //String PartyMainCode=clsBook.getBookMainCode(CompanyID, objVoucher.getAttribute("BOOK_CODE").getString());
            //String PartyMainCode = "125019";
            String PartyMainCode = "210010";
            String MainCode = "435132";

            //String InvoiceNo = data.getStringValueFromDB("SELECT INVOICE_NO FROM D_INV_GRN_HEADER WHERE GRN_NO='" + GRNNo + "' AND INVOICE_NO<>'' ");
            //String InvoiceDate = data.getStringValueFromDB("SELECT INVOICE_DATE FROM D_INV_GRN_HEADER WHERE GRN_NO='" + GRNNo + "' AND INVOICE_NO<>'' ");
            String SelPrefix = "";
            String SelSuffix = "";
            int FFNo = 0;

            System.out.println("SSSS 1");
            //****** Prepare Voucher Object ********//

            //  setAttribute("FIN_HIERARCHY_ID",0);
//            objVoucher.setAttribute("FIN_HIERARCHY_ID", 1646); //FOR FELT - AUTO CN
            objVoucher.setAttribute("FIN_HIERARCHY_ID", 2034); //FOR FELT TEST - AUTO CN in JV
            //  setAttribute("FIN_HIERARCHY_ID",1668); // FOR LIVE

            //(1) Select the Hierarchy
            //HashMap List = clsApprovalRules.getApprovalRules(EITLERPGLOBAL.gCompanyID, clsVoucher.DebitNoteModuleID, "CHOOSE_HIERARCHY", "PUR_DN_AUTO", "");
            HashMap List = clsApprovalRules.getApprovalRules(EITLERPGLOBAL.gCompanyID, clsVoucher.CreditNoteVoucherModuleID, "CHOOSE_HIERARCHY", "CN_AUTO", "");

            if (List.size() > 0) {
                //Get the Result of the Rule which would be the hierarchy no.
                clsApprovalRules objRule = (clsApprovalRules) List.get(Integer.toString(1));
                int HierarchyID = UtilFunctions.CInt(objRule.getAttribute("RULE_OUTCOME").getString());
                System.out.println("HID 1 1" + HierarchyID);
                objVoucher.setAttribute("FIN_HIERARCHY_ID", HierarchyID);
            }

            ResultSet rsVoucher = data.getResult("SELECT * FROM D_COM_FIRSTFREE WHERE MODULE_ID=" + clsVoucher.CreditNoteVoucherModuleID);
            rsVoucher.first();

            if (rsVoucher.getRow() > 0) {
                SelPrefix = rsVoucher.getString("PREFIX_CHARS");
                SelSuffix = rsVoucher.getString("SUFFIX_CHARS");
                FFNo = rsVoucher.getInt("FIRSTFREE_NO");
            }

            int VoucherSrNo = 0;

            objVoucher = new clsVoucher();
            objVoucher.LoadDataEx(EITLERPGLOBAL.gCompanyID);

            objVoucher.setAttribute("PREFIX", SelPrefix);
            objVoucher.setAttribute("SUFFIX", SelSuffix);
            objVoucher.setAttribute("FFNO", FFNo);
            objVoucher.setAttribute("COMPANY_ID", EITLERPGLOBAL.gCompanyID);
            objVoucher.setAttribute("VOUCHER_DATE", EITLERPGLOBAL.formatDate(GRDate));

            //SUITING
            //objVoucher.setAttribute("BOOK_CODE", "45");
//            objVoucher.setAttribute("BOOK_CODE", "13");
            objVoucher.setAttribute("BOOK_CODE", "17"); // Special Disc
            //GRNAccountCode="405021";
//            objVoucher.setAttribute("FIN_HIERARCHY_ID", 1646); //FOR FELT - AUTO CN
            objVoucher.setAttribute("FIN_HIERARCHY_ID", 2034); //FOR FELT - AUTO CN

//            objVoucher.setAttribute("VOUCHER_TYPE", FinanceGlobal.TYPE_CREDIT_NOTE);
            objVoucher.setAttribute("VOUCHER_TYPE", FinanceGlobal.TYPE_JOURNAL);
            objVoucher.setAttribute("CHEQUE_NO", "");
            objVoucher.setAttribute("CHEQUE_DATE", "0000-00-00");
            objVoucher.setAttribute("BANK_NAME", "");
            objVoucher.setAttribute("PO_NO", "");
            objVoucher.setAttribute("PO_DATE", "0000-00-00");
            objVoucher.setAttribute("INVOICE_NO", "");
            objVoucher.setAttribute("INVOICE_DATE", "0000-00-00");
            objVoucher.setAttribute("GRN_NO", "");
            objVoucher.setAttribute("GRN_DATE", "0000-00-00");
            objVoucher.setAttribute("ST_CATEGORY", "");
            objVoucher.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
            objVoucher.setAttribute("REMARKS", "");
            objVoucher.setAttribute("REASON_CODE", "10");

            objVoucher.setAttribute("HIERARCHY_ID", objVoucher.getAttribute("FIN_HIERARCHY_ID").getInt());
            int FirstUserID = data.getIntValueFromDB("SELECT USER_ID FROM D_COM_HIERARCHY_RIGHTS WHERE HIERARCHY_ID=" + objVoucher.getAttribute("FIN_HIERARCHY_ID").getInt() + " AND SR_NO=1");
            System.out.println("Hierarchy ID = " + objVoucher.getAttribute("FIN_HIERARCHY_ID").getInt());
            System.out.println("First user ID = " + FirstUserID);

            objVoucher.setAttribute("FROM", FirstUserID);
            objVoucher.setAttribute("TO", FirstUserID);
            objVoucher.setAttribute("FROM_REMARKS", "");
            objVoucher.setAttribute("APPROVAL_STATUS", "H"); //Final Approve

            objVoucher.colVoucherItems.clear();

            String strSQLHSN = "";
            strSQLHSN = "SELECT * FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE WHERE PIECE_NO='" + GRNo + "'";

            ResultSet rsHSNData = data.getResult(strSQLHSN);
            rsHSNData.first();

            if (rsHSNData.getRow() > 0) {
                while (!rsHSNData.isAfterLast()) {

                    pieceNo = rsHSNData.getString("PIECE_NO");
                    invNo = rsHSNData.getString("INVOICE_NO");
                    invDt = rsHSNData.getString("INVOICE_DATE");
                    invAmt = rsHSNData.getDouble("INVOICE_AMT");
                    voucherDt = rsHSNData.getString("RC_VOUCHER_DATE");
                    dueDt1 = rsHSNData.getString("DUE_DATE1");
                    dueDt2 = rsHSNData.getString("DUE_DATE2");
                    
                    if (data.getIntValueFromDB("SELECT DATEDIFF('" + voucherDt + "','" + dueDt1 + "') FROM DUAL") <= 0 ) {
                        cnAmt = EITLERPGLOBAL.round((invAmt * 0.01),0);
                    } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + voucherDt + "','" + dueDt2 + "') FROM DUAL") <= 0 ) {
                        cnAmt = EITLERPGLOBAL.round((invAmt * 0.005),0);
                    }

                    System.out.println("Piece No " + rsHSNData.getString("PIECE_NO"));
                    System.out.println("CN AMT = " + cnAmt);


                    //DB_NET_AMOUNT += DB_INVOICE_AMOUNT + DB_CGST + DB_SGST + DB_IGST + DB_RCM + DB_COMPOSITION + DB_GST_COMPENSATION_CESS;
                    //CN_NET_AMOUNT += CN_INVOICE_AMOUNT + CN_CGST + CN_SGST + CN_IGST + CN_RCM;

//                    double IGSTPER = data.getDoubleValueFromDB("SELECT DISTINCT COLUMN_5_PER  FROM D_INV_GRN_DETAIL WHERE GRN_NO ='" + GRNo + "' ");
//                    double SGSTPER = data.getDoubleValueFromDB("SELECT DISTINCT COLUMN_4_PER  FROM D_INV_GRN_DETAIL WHERE GRN_NO ='" + GRNo + "' ");
//                    double CGSTPER = data.getDoubleValueFromDB("SELECT DISTINCT COLUMN_3_PER  FROM D_INV_GRN_DETAIL WHERE GRN_NO ='" + GRNo + "' ");
//
//                    double IGSTPER = rsHSNData.getDouble("IGST_PER");
//                    double SGSTPER = rsHSNData.getDouble("SGST_PER");
//                    double CGSTPER = rsHSNData.getDouble("CGST_PER");
////
//                    
//                    String IGSTPayableCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE GST_CATG ='IGST' AND GST_PERCENT =" + IGSTPER);
//                    String SGSTPayableCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE GST_CATG ='SGST' AND GST_PERCENT =" + SGSTPER);
//                    String CGSTPayableCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE GST_CATG ='CGST' AND GST_PERCENT =" + CGSTPER);
//                    //String IGSTPayableCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE GST_CATG ='IGST' AND GST_PERCENT =5");
                    //String SGSTPayableCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE GST_CATG ='SGST' AND GST_PERCENT =2.5");
                    //String CGSTPayableCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM FINANCE.D_FIN_GL WHERE GST_CATG ='CGST' AND GST_PERCENT =2.5");
//                  
//                    
//                    System.out.println("IGST PER " + IGSTPER);
//                    System.out.println("SGST PER " + SGSTPER);
//                    System.out.println("CGST PER " + CGSTPER);
//                    System.out.println("IGST PAYABLE ACCOUNT : " + IGSTPayableCode);
//                    System.out.println("SGST PAYABLE ACCOUNT : " + SGSTPayableCode);
//                    System.out.println("CGST PAYABLE ACCOUNT : " + CGSTPayableCode);
//
//                    if (IGSTPayableCode.equals("")) {
//                        IGSTPayableCode = "<IGST Payable Code>";
//                    }
//                    if (SGSTPayableCode.equals("")) {
//                        SGSTPayableCode = "<SGST Payable Code>";
//                    }
//                    if (CGSTPayableCode.equals("")) {
//                        CGSTPayableCode = "<CGST Payable Code>";
//                    }

//                    System.out.println("INVOICE NO " + InvoiceNo);
//                    System.out.println("INVOICE DATE " + InvoiceDate);
//                    
//                    System.out.println("CN INVOICE AMT = " + CN_INVOICE_AMOUNT);
//                    System.out.println("CN CGST = " + CN_CGST);
//                    System.out.println("CN SGST = " + CN_SGST);
//                    System.out.println("CN IGST = " + CN_IGST);
//                    //System.out.println("CN RCM = " + DB_RCM);
//                    System.out.println("CN COMPOSITION = " + CN_COMPOSITION);
//                    System.out.println("CN NET AMOUNT = " + CN_NET_AMOUNT);

                    //credit Entries
                    if (cnAmt > 0) {
                        VoucherSrNo++;
                        clsVoucherItem objVoucherItem = new clsVoucherItem();
                        objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
                        objVoucherItem.setAttribute("EFFECT", "C");
                        objVoucherItem.setAttribute("ACCOUNT_ID", 1);
                        objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", "210010");
                        objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
                        objVoucherItem.setAttribute("AMOUNT", cnAmt);
                        objVoucherItem.setAttribute("REMARKS", "");
                        objVoucherItem.setAttribute("PO_NO", "");
                        objVoucherItem.setAttribute("PO_DATE", "");
                        objVoucherItem.setAttribute("INVOICE_NO", invNo);
                        objVoucherItem.setAttribute("INVOICE_DATE", EITLERPGLOBAL.formatDate(invDt));
                        objVoucherItem.setAttribute("INVOICE_AMOUNT", invAmt);
                        objVoucherItem.setAttribute("GRN_NO", "");
                        objVoucherItem.setAttribute("GRN_DATE", "");
                        objVoucherItem.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
                        objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
                        objVoucherItem.setAttribute("HSN_SAC_CODE", "");
                        objVoucherItem.setAttribute("ITEM_DESCRIPTION", "");
                        objVoucherItem.setAttribute("GR_INVOICE_NO", "");
                        objVoucherItem.setAttribute("GR_INVOICE_DATE", "");
                        objVoucherItem.setAttribute("GR_NO", "");
                        objVoucherItem.setAttribute("GR_DATE", "");
                        objVoucherItem.setAttribute("LINK_NO", "");
                        
                        objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);
                    }

                    //(2) Hundi Charges
//                    if (CN_RCM > 0) {
//
//                        VoucherSrNo++;
//                        clsVoucherItem objVoucherItem = new clsVoucherItem();
//                        objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
//                        objVoucherItem.setAttribute("EFFECT", "C");
//                        objVoucherItem.setAttribute("ACCOUNT_ID", 1);
//                        objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", "450227");
//                        objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
//                        objVoucherItem.setAttribute("AMOUNT", CN_RCM);
//                        objVoucherItem.setAttribute("REMARKS", "RCM");
//                        objVoucherItem.setAttribute("PO_NO", "");
//                        objVoucherItem.setAttribute("PO_DATE", "");
//                        objVoucherItem.setAttribute("INVOICE_NO", "");
//                        objVoucherItem.setAttribute("INVOICE_DATE", "");
//                        objVoucherItem.setAttribute("INVOICE_AMOUNT", 0);
//                        objVoucherItem.setAttribute("GRN_NO", "");
//                        objVoucherItem.setAttribute("GRN_DATE", "");
//                        objVoucherItem.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
//                        objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
//                        objVoucherItem.setAttribute("HSN_SAC_CODE", HSNSAC_CODE);
//                        objVoucherItem.setAttribute("ITEM_DESCRIPTION", ITEM_DESC);
//                        objVoucherItem.setAttribute("GR_INVOICE_NO", rsHSNData.getString("INVOICE_NO"));
//                        objVoucherItem.setAttribute("GR_INVOICE_DATE", EITLERPGLOBAL.formatDate(rsHSNData.getString("INVOICE_DATE")));
//                        objVoucherItem.setAttribute("GR_NO", GRNo);
//                        objVoucherItem.setAttribute("GR_DATE", EITLERPGLOBAL.formatDate(GRDate));
//                        objVoucherItem.setAttribute("LINK_NO", rsHSNData.getString("LINK_NO"));
//                                                
//                        objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);
//
//                    }

                    //(3) Insurance Charges
//                    if (CN_COMPOSITION > 0) {
//
//                        VoucherSrNo++;
//                        clsVoucherItem objVoucherItem = new clsVoucherItem();
//                        objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
//                        objVoucherItem.setAttribute("EFFECT", "C");
//                        objVoucherItem.setAttribute("ACCOUNT_ID", 1);
//                        objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", "427027");
//                        objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
//                        objVoucherItem.setAttribute("AMOUNT", DB_COMPOSITION);
//                        objVoucherItem.setAttribute("REMARKS", "COMPOSITION");
//                        objVoucherItem.setAttribute("PO_NO", PONo);
//                        objVoucherItem.setAttribute("PO_DATE", EITLERPGLOBAL.formatDate(PODate));
//                        objVoucherItem.setAttribute("INVOICE_NO", InvoiceNo);
//                        objVoucherItem.setAttribute("INVOICE_DATE", EITLERPGLOBAL.formatDate(InvoiceDate));
//                        objVoucherItem.setAttribute("INVOICE_AMOUNT", 0);
//                        objVoucherItem.setAttribute("GRN_NO", GRNNo);
//                        objVoucherItem.setAttribute("GRN_DATE", EITLERPGLOBAL.formatDate(GRNDate));
//                        objVoucherItem.setAttribute("MODULE_ID", clsVoucher.DebitNoteModuleID);
//                        objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
//                        objVoucherItem.setAttribute("HSN_SAC_CODE", HSNSAC_CODE);
//                        objVoucherItem.setAttribute("ITEM_DESCRIPTION", ITEM_DESC);
//                        objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);
//
//                    }

                    //(4) Bank Charges
//                    if (CN_GST_COMPENSATION_CESS > 0) {
//
//                        VoucherSrNo++;
//                        clsVoucherItem objVoucherItem = new clsVoucherItem();
//                        objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
//                        objVoucherItem.setAttribute("EFFECT", "C");
//                        objVoucherItem.setAttribute("ACCOUNT_ID", 1);
//                        objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", "450038");
//                        objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
//                        objVoucherItem.setAttribute("AMOUNT", DB_GST_COMPENSATION_CESS);
//                        objVoucherItem.setAttribute("REMARKS", "GST Compensation cess");
//                        objVoucherItem.setAttribute("PO_NO", PONo);
//                        objVoucherItem.setAttribute("PO_DATE", EITLERPGLOBAL.formatDate(PODate));
//                        objVoucherItem.setAttribute("INVOICE_NO", InvoiceNo);
//                        objVoucherItem.setAttribute("INVOICE_DATE", EITLERPGLOBAL.formatDate(InvoiceDate));
//                        objVoucherItem.setAttribute("INVOICE_AMOUNT", 0);
//                        objVoucherItem.setAttribute("GRN_NO", GRNNo);
//                        objVoucherItem.setAttribute("GRN_DATE", EITLERPGLOBAL.formatDate(GRNDate));
//                        objVoucherItem.setAttribute("MODULE_ID", clsVoucher.DebitNoteModuleID);
//                        objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
//                        objVoucherItem.setAttribute("HSN_SAC_CODE", HSNSAC_CODE);
//                        objVoucherItem.setAttribute("ITEM_DESCRIPTION", ITEM_DESC);
//                        objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);
//
//                    }

                    //(10) GST Amount
//                    if (CN_CGST > 0) {
//
//                        VoucherSrNo++;
//                        clsVoucherItem objVoucherItem = new clsVoucherItem();
//                        objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
//                        objVoucherItem.setAttribute("EFFECT", "C");
//                        objVoucherItem.setAttribute("ACCOUNT_ID", 1);
//                        objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", CGSTPayableCode);
//                        objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
//                        objVoucherItem.setAttribute("AMOUNT", CN_CGST);
//                        objVoucherItem.setAttribute("REMARKS", "CGST");
//                        objVoucherItem.setAttribute("PO_NO", "");
//                        objVoucherItem.setAttribute("PO_DATE", "");
//                        objVoucherItem.setAttribute("INVOICE_NO", "");
//                        objVoucherItem.setAttribute("INVOICE_DATE", "");
//                        objVoucherItem.setAttribute("INVOICE_AMOUNT", 0);
//                        objVoucherItem.setAttribute("GRN_NO", "");
//                        objVoucherItem.setAttribute("GRN_DATE", "");
//                        objVoucherItem.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
//                        objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
//                        objVoucherItem.setAttribute("HSN_SAC_CODE", HSNSAC_CODE);
//                        objVoucherItem.setAttribute("ITEM_DESCRIPTION", ITEM_DESC);
//                        objVoucherItem.setAttribute("GR_INVOICE_NO", rsHSNData.getString("INVOICE_NO"));
//                        objVoucherItem.setAttribute("GR_INVOICE_DATE", EITLERPGLOBAL.formatDate(rsHSNData.getString("INVOICE_DATE")));
//                        objVoucherItem.setAttribute("GR_NO", GRNo);
//                        objVoucherItem.setAttribute("GR_DATE", EITLERPGLOBAL.formatDate(GRDate));
//                        objVoucherItem.setAttribute("LINK_NO", rsHSNData.getString("LINK_NO"));
//                                                
//                        objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);
//                    }
//
//                    if (CN_SGST > 0) {
//                        VoucherSrNo++;
//                        clsVoucherItem objVoucherItem = new clsVoucherItem();
//                        objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
//                        objVoucherItem.setAttribute("EFFECT", "C");
//                        objVoucherItem.setAttribute("ACCOUNT_ID", 1);
//                        objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", SGSTPayableCode);
//                        objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
//                        objVoucherItem.setAttribute("AMOUNT", CN_SGST);
//                        objVoucherItem.setAttribute("REMARKS", "SGST");
//                        objVoucherItem.setAttribute("PO_NO", "");
//                        objVoucherItem.setAttribute("PO_DATE", "");
//                        objVoucherItem.setAttribute("INVOICE_NO", "");
//                        objVoucherItem.setAttribute("INVOICE_DATE", "");
//                        objVoucherItem.setAttribute("INVOICE_AMOUNT", 0);
//                        objVoucherItem.setAttribute("GRN_NO", "");
//                        objVoucherItem.setAttribute("GRN_DATE", "");
//                        objVoucherItem.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
//                        objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
//                        objVoucherItem.setAttribute("HSN_SAC_CODE", HSNSAC_CODE);
//                        objVoucherItem.setAttribute("ITEM_DESCRIPTION", ITEM_DESC);
//                        objVoucherItem.setAttribute("GR_INVOICE_NO", rsHSNData.getString("INVOICE_NO"));
//                        objVoucherItem.setAttribute("GR_INVOICE_DATE", EITLERPGLOBAL.formatDate(rsHSNData.getString("INVOICE_DATE")));
//                        objVoucherItem.setAttribute("GR_NO", GRNo);
//                        objVoucherItem.setAttribute("GR_DATE", EITLERPGLOBAL.formatDate(GRDate));
//                        objVoucherItem.setAttribute("LINK_NO", rsHSNData.getString("LINK_NO"));
//                                                
//                        objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);
//                    }
//
//                    if (CN_IGST > 0) {
//                        VoucherSrNo++;
//                        clsVoucherItem objVoucherItem = new clsVoucherItem();
//                        objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
//                        objVoucherItem.setAttribute("EFFECT", "C");
//                        objVoucherItem.setAttribute("ACCOUNT_ID", 1);
//                        objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", IGSTPayableCode);
//                        objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
//                        objVoucherItem.setAttribute("AMOUNT", CN_IGST);
//                        objVoucherItem.setAttribute("REMARKS", "IGST");
//                        objVoucherItem.setAttribute("PO_NO", "");
//                        objVoucherItem.setAttribute("PO_DATE", "");
//                        objVoucherItem.setAttribute("INVOICE_NO", "");
//                        objVoucherItem.setAttribute("INVOICE_DATE", "");
//                        objVoucherItem.setAttribute("INVOICE_AMOUNT", 0);
//                        objVoucherItem.setAttribute("GRN_NO", "");
//                        objVoucherItem.setAttribute("GRN_DATE", "");
//                        objVoucherItem.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
//                        objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
//                        objVoucherItem.setAttribute("HSN_SAC_CODE", HSNSAC_CODE);
//                        objVoucherItem.setAttribute("ITEM_DESCRIPTION", ITEM_DESC);
//                        objVoucherItem.setAttribute("GR_INVOICE_NO", rsHSNData.getString("INVOICE_NO"));
//                        objVoucherItem.setAttribute("GR_INVOICE_DATE", EITLERPGLOBAL.formatDate(rsHSNData.getString("INVOICE_DATE")));
//                        objVoucherItem.setAttribute("GR_NO", GRNo);
//                        objVoucherItem.setAttribute("GR_DATE", EITLERPGLOBAL.formatDate(GRDate));
//                        objVoucherItem.setAttribute("LINK_NO", rsHSNData.getString("LINK_NO"));
//                        
//                        objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);
//                    }

                    rsHSNData.next();
                }
            }

            //.getAttribute("DB_GROSS_AMT").getVal()
            // double DB_INVOICE_AMOUNT=objGRNGen.getAttribute("DB_INVOICE_AMT").getVal();
            VoucherSrNo++;
            clsVoucherItem objVoucherItem = new clsVoucherItem();
            objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
            objVoucherItem.setAttribute("EFFECT", "D");
            objVoucherItem.setAttribute("ACCOUNT_ID", 1);
            objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
            objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
            objVoucherItem.setAttribute("AMOUNT", cnAmt);
            objVoucherItem.setAttribute("REMARKS", "");
            objVoucherItem.setAttribute("PO_NO", "");
            objVoucherItem.setAttribute("PO_NO", "");
            objVoucherItem.setAttribute("PO_DATE", "");
            objVoucherItem.setAttribute("INVOICE_NO", "");
            objVoucherItem.setAttribute("INVOICE_DATE", "");
            objVoucherItem.setAttribute("GRN_NO", "");
            objVoucherItem.setAttribute("GRN_DATE", "");
            objVoucherItem.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
            objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
            objVoucherItem.setAttribute("GR_INVOICE_NO", "");
            objVoucherItem.setAttribute("GR_INVOICE_DATE", "");
            objVoucherItem.setAttribute("GR_NO", "");
            objVoucherItem.setAttribute("GR_DATE", "");
            objVoucherItem.setAttribute("LINK_NO", "");
                        

            objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);

            objVoucher.DoNotValidateAccounts = true;

            if (objVoucher.Insert()) {

                //SJ Posted. Automatically adjust advance receipt amount
                String CNNo = objVoucher.getAttribute("VOUCHER_NO").getString();
                data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET APPROVED=0 AND APPROVED_DATE=CURDATE() WHERE VOUCHER_NO='" + CNNo + "'", FinanceGlobal.FinURL);
                data.Execute("UPDATE PRODUCTION.ANNUAL_ORDER_INCENTIVE SET PI_BASED_CN_NO='"+CNNo+"',PI_BASED_CN_AMT='"+cnAmt+"',PI_BASED_CN_DATE=CURDATE() WHERE PIECE_NO='"+GRNo+"'");
                System.out.println("Auto CreditNote  Posted " + CNNo);
                return true;
            } else {
                LastError = objVoucher.LastError;
                return false;
            }
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    private boolean PostAutoCNPartyWise(int CompanyID, String GRNo, String GRDate) {
        try {
            //Get Object            
            System.out.println("SSSS 0");
            System.out.println("PieceNo " + GRNo);
            System.out.println("CurDate  " + GRDate);

            String invNo = "";
            String invDt = "";
            String voucherDt = "";
            String dueDt1 = "";
            String dueDt2 = "";
            String pieceNo = "";
            String Remark = "";
            double invAmt = 0;
            double basicAmt = 0;
            double cnAmt = 0;
            double totalCNAmt = 0;
            

            clsVoucher objVoucher = new clsVoucher();

            //String PartyCode = data.getStringValueFromDB("SELECT PARTY_CODE FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE WHERE PIECE_NO='" + GRNo + "' ");
            //String PartyMainCode=clsBook.getBookMainCode(CompanyID, objVoucher.getAttribute("BOOK_CODE").getString());
            //String PartyMainCode = "125019";
            String PartyMainCode = "210010";
            String MainCode = "435077";

            //String InvoiceNo = data.getStringValueFromDB("SELECT INVOICE_NO FROM D_INV_GRN_HEADER WHERE GRN_NO='" + GRNNo + "' AND INVOICE_NO<>'' ");
            //String InvoiceDate = data.getStringValueFromDB("SELECT INVOICE_DATE FROM D_INV_GRN_HEADER WHERE GRN_NO='" + GRNNo + "' AND INVOICE_NO<>'' ");
            String SelPrefix = "";
            String SelSuffix = "";
            int FFNo = 0;

            System.out.println("SSSS 1");
            //****** Prepare Voucher Object ********//

            //  setAttribute("FIN_HIERARCHY_ID",0);
//            objVoucher.setAttribute("FIN_HIERARCHY_ID", 1646); //FOR FELT - AUTO CN
            objVoucher.setAttribute("FIN_HIERARCHY_ID", 2034); //FOR FELT - AUTO CN
            //  setAttribute("FIN_HIERARCHY_ID",1668); // FOR LIVE

            //(1) Select the Hierarchy
            //HashMap List = clsApprovalRules.getApprovalRules(EITLERPGLOBAL.gCompanyID, clsVoucher.DebitNoteModuleID, "CHOOSE_HIERARCHY", "PUR_DN_AUTO", "");
            HashMap List = clsApprovalRules.getApprovalRules(EITLERPGLOBAL.gCompanyID, clsVoucher.CreditNoteVoucherModuleID, "CHOOSE_HIERARCHY", "CN_AUTO", "");

            if (List.size() > 0) {
                //Get the Result of the Rule which would be the hierarchy no.
                clsApprovalRules objRule = (clsApprovalRules) List.get(Integer.toString(1));
                int HierarchyID = UtilFunctions.CInt(objRule.getAttribute("RULE_OUTCOME").getString());
                System.out.println("HID 1 1" + HierarchyID);
                objVoucher.setAttribute("FIN_HIERARCHY_ID", HierarchyID);
            }

            ResultSet rsVoucher = data.getResult("SELECT * FROM D_COM_FIRSTFREE WHERE MODULE_ID=" + clsVoucher.CreditNoteVoucherModuleID);
            rsVoucher.first();

            if (rsVoucher.getRow() > 0) {
                SelPrefix = rsVoucher.getString("PREFIX_CHARS");
                SelSuffix = rsVoucher.getString("SUFFIX_CHARS");
                FFNo = rsVoucher.getInt("FIRSTFREE_NO");
            }

            int VoucherSrNo = 0;
            
            objVoucher = new clsVoucher();
            objVoucher.LoadDataEx(EITLERPGLOBAL.gCompanyID);

            objVoucher.setAttribute("PREFIX", SelPrefix);
            objVoucher.setAttribute("SUFFIX", SelSuffix);
            objVoucher.setAttribute("FFNO", FFNo);
            objVoucher.setAttribute("COMPANY_ID", EITLERPGLOBAL.gCompanyID);
            objVoucher.setAttribute("VOUCHER_DATE", EITLERPGLOBAL.formatDate(GRDate));

            //SUITING
            //objVoucher.setAttribute("BOOK_CODE", "45");
//            objVoucher.setAttribute("BOOK_CODE", "13");
            objVoucher.setAttribute("BOOK_CODE", "14"); // Special Disc
            //GRNAccountCode="405021";
//            objVoucher.setAttribute("FIN_HIERARCHY_ID", 1646); //FOR FELT - AUTO CN
            objVoucher.setAttribute("FIN_HIERARCHY_ID", 2034); //FOR FELT - AUTO CN

//            objVoucher.setAttribute("VOUCHER_TYPE", FinanceGlobal.TYPE_CREDIT_NOTE);
            objVoucher.setAttribute("VOUCHER_TYPE", FinanceGlobal.TYPE_JOURNAL);
            objVoucher.setAttribute("CHEQUE_NO", "");
            objVoucher.setAttribute("CHEQUE_DATE", "0000-00-00");
            objVoucher.setAttribute("BANK_NAME", "DISCOUNT JOURNAL");
            objVoucher.setAttribute("PO_NO", "");
            objVoucher.setAttribute("PO_DATE", "0000-00-00");
            objVoucher.setAttribute("INVOICE_NO", "");
            objVoucher.setAttribute("INVOICE_DATE", "0000-00-00");
            objVoucher.setAttribute("GRN_NO", "");
            objVoucher.setAttribute("GRN_DATE", "0000-00-00");
            objVoucher.setAttribute("ST_CATEGORY", "");
            objVoucher.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
            objVoucher.setAttribute("REMARKS", "CASH DISCOUNT AGAINST ADVANCE ORDER");
            objVoucher.setAttribute("REASON_CODE", "");
            objVoucher.setAttribute("EXCLUDE_IN_ADJ", 1);

            objVoucher.setAttribute("HIERARCHY_ID", objVoucher.getAttribute("FIN_HIERARCHY_ID").getInt());
            int FirstUserID = data.getIntValueFromDB("SELECT USER_ID FROM D_COM_HIERARCHY_RIGHTS WHERE HIERARCHY_ID=" + objVoucher.getAttribute("FIN_HIERARCHY_ID").getInt() + " AND SR_NO=1");
            System.out.println("Hierarchy ID = " + objVoucher.getAttribute("FIN_HIERARCHY_ID").getInt());
            System.out.println("First user ID = " + FirstUserID);

            objVoucher.setAttribute("FROM", FirstUserID);
            objVoucher.setAttribute("TO", FirstUserID);
            objVoucher.setAttribute("FROM_REMARKS", "");
            objVoucher.setAttribute("APPROVAL_STATUS", "H"); //Final Approve

            objVoucher.colVoucherItems.clear();

            String strSQL = "";
            strSQL = "SELECT * FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE WHERE PARTY_CODE='"+GRNo+"' AND CN_IND=1 ORDER BY PIECE_NO"; //AND PI_BASED_CN_NO=''

            ResultSet rsPRTData = data.getResult(strSQL);
            rsPRTData.first();

            if (rsPRTData.getRow() > 0) {
                while (!rsPRTData.isAfterLast()) {
                    
                    pieceNo = rsPRTData.getString("PIECE_NO");
                    invNo = rsPRTData.getString("INVOICE_NO");
                    invDt = rsPRTData.getString("INVOICE_DATE");
                    invAmt = rsPRTData.getDouble("INVOICE_AMT");
                    basicAmt = data.getDoubleValueFromDB("SELECT BAS_AMT FROM PRODUCTION.FELT_SAL_INVOICE_HEADER WHERE APPROVED=1 AND CANCELLED=0 AND INVOICE_NO='"+invNo+"' AND INVOICE_DATE='"+invDt+"'");
                    voucherDt = rsPRTData.getString("RC_VOUCHER_DATE");
                    dueDt1 = rsPRTData.getString("DUE_DATE1");
                    dueDt2 = rsPRTData.getString("DUE_DATE2");
                    Remark = "INV_NO " + invNo + "  DATED - " + invDt + "  BASAMT =  "+basicAmt;

                    if (data.getIntValueFromDB("SELECT DATEDIFF('" + voucherDt + "','" + dueDt1 + "') FROM DUAL") <= 0 ) {
                        cnAmt = EITLERPGLOBAL.round((basicAmt * 0.015),0);
                    } else if (data.getIntValueFromDB("SELECT DATEDIFF('" + voucherDt + "','" + dueDt2 + "') FROM DUAL") <= 0 ) {
                        cnAmt = EITLERPGLOBAL.round((basicAmt * 0.0075),0);
                    }
                    
                    totalCNAmt += cnAmt;
                    
                    data.Execute("UPDATE PRODUCTION.ANNUAL_ORDER_INCENTIVE SET PI_BASED_CN_AMT='"+cnAmt+"' WHERE PARTY_CODE='"+GRNo+"' AND PIECE_NO='"+pieceNo+"' AND CN_IND=1");
                
                    System.out.println("Piece No " + rsPRTData.getString("PIECE_NO"));
                    System.out.println("CN AMT = " + cnAmt);
                    System.out.println("TOTAL CN AMT = " + totalCNAmt);

                    //credit Entries
                    if (cnAmt > 0) {
                        VoucherSrNo++;
                        clsVoucherItem objVoucherItem = new clsVoucherItem();
                        objVoucherItem.setAttribute("SR_NO", VoucherSrNo);
                        objVoucherItem.setAttribute("EFFECT", "C");
                        objVoucherItem.setAttribute("ACCOUNT_ID", 1);
                        objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", "210010");
                        objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", GRNo);
                        objVoucherItem.setAttribute("AMOUNT", cnAmt);
                        objVoucherItem.setAttribute("REMARKS", Remark);
                        objVoucherItem.setAttribute("PO_NO", "");
                        objVoucherItem.setAttribute("PO_DATE", "");
                        objVoucherItem.setAttribute("INVOICE_NO", "");
                        objVoucherItem.setAttribute("INVOICE_DATE", "");
                        objVoucherItem.setAttribute("INVOICE_AMOUNT", "");
                        objVoucherItem.setAttribute("GRN_NO", "");
                        objVoucherItem.setAttribute("GRN_DATE", "");
                        objVoucherItem.setAttribute("MODULE_ID", clsVoucher.CreditNoteVoucherModuleID);
                        objVoucherItem.setAttribute("REF_COMPANY_ID", CompanyID);
                        objVoucherItem.setAttribute("HSN_SAC_CODE", "");
                        objVoucherItem.setAttribute("ITEM_DESCRIPTION", "");
                        objVoucherItem.setAttribute("GR_INVOICE_NO", "");
                        objVoucherItem.setAttribute("GR_INVOICE_DATE", "");
                        objVoucherItem.setAttribute("GR_NO", "");
                        objVoucherItem.setAttribute("GR_DATE", "");
                        objVoucherItem.setAttribute("LINK_NO", "");
                        objVoucherItem.setAttribute("VALUE_DATE", EITLERPGLOBAL.formatDate(GRDate)); 
                        
                        objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);
                    }

                    rsPRTData.next();
                }
            }

            //.getAttribute("DB_GROSS_AMT").getVal()
            // double DB_INVOICE_AMOUNT=objGRNGen.getAttribute("DB_INVOICE_AMT").getVal();
            VoucherSrNo++;
            clsVoucherItem objVoucherItem = new clsVoucherItem();
            objVoucherItem.setAttribute("SR_NO", 0);
            objVoucherItem.setAttribute("EFFECT", "D");
            objVoucherItem.setAttribute("ACCOUNT_ID", 1);
            objVoucherItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
            objVoucherItem.setAttribute("SUB_ACCOUNT_CODE", "");
            objVoucherItem.setAttribute("AMOUNT", totalCNAmt);
            objVoucherItem.setAttribute("REMARKS", "");
            objVoucherItem.setAttribute("PO_NO", "");
            objVoucherItem.setAttribute("PO_NO", "");
            objVoucherItem.setAttribute("PO_DATE", "");
            objVoucherItem.setAttribute("INVOICE_NO", "");
            objVoucherItem.setAttribute("INVOICE_DATE", "");
            objVoucherItem.setAttribute("GRN_NO", "");
            objVoucherItem.setAttribute("GRN_DATE", "");
            objVoucherItem.setAttribute("MODULE_ID", "");
            objVoucherItem.setAttribute("REF_COMPANY_ID", 0);
            objVoucherItem.setAttribute("GR_INVOICE_NO", "");
            objVoucherItem.setAttribute("GR_INVOICE_DATE", "");
            objVoucherItem.setAttribute("GR_NO", "");
            objVoucherItem.setAttribute("GR_DATE", "");
            objVoucherItem.setAttribute("LINK_NO", "");
            objVoucherItem.setAttribute("VALUE_DATE", EITLERPGLOBAL.formatDate(GRDate));            
                        

            objVoucher.colVoucherItems.put(Integer.toString(objVoucher.colVoucherItems.size() + 1), objVoucherItem);

            objVoucher.DoNotValidateAccounts = true;

            if (objVoucher.Insert()) {

                //SJ Posted. Automatically adjust advance receipt amount
                String CNNo = objVoucher.getAttribute("VOUCHER_NO").getString();
                data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET APPROVED=0 AND APPROVED_DATE=CURDATE() WHERE VOUCHER_NO='" + CNNo + "'", FinanceGlobal.FinURL);
                data.Execute("UPDATE PRODUCTION.ANNUAL_ORDER_INCENTIVE SET PI_BASED_CN_NO='"+CNNo+"',PI_BASED_CN_DATE=CURDATE(),CN_IND=0 WHERE PARTY_CODE='"+GRNo+"' AND CN_IND=1");
                System.out.println("Auto CreditNote  Posted " + CNNo);
                return true;
            } else {
                LastError = objVoucher.LastError;
                return false;
            }
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    
}
