/* frmFeltSalesInfo.java 
 * 
 * 
 * Created on July 13, 2005, 10:47 AM
 */
package EITLERP.FeltSales.AdvanceAnnualOrderIncentive;

import EITLERP.*;
import EITLERP.Production.FeltCreditNote.clsExcelExporter;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.sql.*;
import java.lang.*;
import java.io.File;

/**
 *
 * @author Rajpalsinh Jadeja
 */
public class frmFeltAdvanceAnnualOrderIncentive extends javax.swing.JApplet {

    String SelUserID = "";
    String strSQL = "";

//    private clsExcelExporter exp = new clsExcelExporter();
    private EITLTableCellRenderer Renderer = new EITLTableCellRenderer();
    private EITLTableCellRenderer CellPainter = new EITLTableCellRenderer();
    private EITLTableCellRenderer CellPaint = new EITLTableCellRenderer();
    private EITLTableCellRenderer CellPainterA = new EITLTableCellRenderer();
     private EITLComboModel cmbYearModel;
    private EITLTableModel DataModelProductionProcess = new EITLTableModel();
    private EITLTableModel DataModelComplaint = new EITLTableModel();
    private EITLTableModel DataModelOutStanding = new EITLTableModel();
    private EITLTableModel DataModelStgInvoice = new EITLTableModel();
    private EITLTableModel DataModelAccountCreditNote = new EITLTableModel();

    private EITLComboModel cmbOrderModel = new EITLComboModel();
    private EITLComboModel cmbBuyerModel = new EITLComboModel();
    private EITLComboModel cmbComplaintModel = new EITLComboModel();
    private EITLComboModel cmbOutStandingModel = new EITLComboModel();
    private EITLComboModel cmbInvoiceModel = new EITLComboModel();
    private EITLComboModel cmbCreditNoteModel = new EITLComboModel();
    
    
    private clsExcelExporter exp = new clsExcelExporter();
    public EITLERP.Sales.clsExcelExporter export = new EITLERP.Sales.clsExcelExporter();

    public void init() {
        System.gc();
        setSize(1000, 800);
        initComponents();
        GenerateCombo();
        FormatGrid();
        GenerateYearCombo();
        
    }

    private void GenerateCombo() {
        cmbBuyerModel = new EITLComboModel();
       
        HashMap List = new HashMap();
        List = (new clsUser()).getList(" WHERE COMPANY_ID=" + EITLERPGLOBAL.gCompanyID);

        for (int i = 1; i <= List.size(); i++) {
            clsUser ObjUser = (clsUser) List.get(Integer.toString(i));

            ComboData aData = new ComboData();
            aData.Code = (int) ObjUser.getAttribute("USER_ID").getVal();
            aData.Text = (String) ObjUser.getAttribute("USER_NAME").getObj();
            cmbBuyerModel.addElement(aData);
        }
        cmbOrderModel = new EITLComboModel();
        cmbOrder.removeAllItems();
        cmbOrder.setModel(cmbOrderModel);
        ComboData aData = new ComboData();

        aData.Code = 1;
        aData.Text = "PARTY CODE";
        cmbOrderModel.addElement(aData);

        aData.Code = 2;
        aData.Text = "PARTY NAME";
        cmbOrderModel.addElement(aData);

        aData.Code = 3;
        aData.Text = "PIECE NO";
        cmbOrderModel.addElement(aData);

     

    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        ProductionProcessPanel = new javax.swing.JPanel();
        cmdShowProductionProcess = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableProductionProcess = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cmbOrder = new javax.swing.JComboBox();
        cmdProductionProcessExporttoExcel = new javax.swing.JButton();
        txtpartycode = new javax.swing.JTextField();
        txtpartyname = new javax.swing.JTextField();
        cmdClearAll = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtPieceNo = new javax.swing.JTextField();
        cmbYear = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMachineNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPosition = new javax.swing.JTextField();

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 29));
        jPanel1.setLayout(null);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Advance Annual Order Incentive Information System  ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 0, 360, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 860, 30);

        jLabel2.setText("Party Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 40, 74, 16);

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setAutoscrolls(true);
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseEntered(evt);
            }
        });

        ProductionProcessPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ProductionProcessPanel.setToolTipText("Production Process");
        ProductionProcessPanel.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        ProductionProcessPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProductionProcessPanelMouseEntered(evt);
            }
        });
        ProductionProcessPanel.setLayout(null);

        cmdShowProductionProcess.setText("Show List");
        cmdShowProductionProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowProductionProcessActionPerformed(evt);
            }
        });
        ProductionProcessPanel.add(cmdShowProductionProcess);
        cmdShowProductionProcess.setBounds(570, 10, 118, 28);

        TableProductionProcess.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableProductionProcess.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TableProductionProcess.setMinimumSize(new java.awt.Dimension(1, 64));
        TableProductionProcess.getTableHeader().setFont(new Font("Plain", Font.BOLD, 12));
        TableProductionProcess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableProductionProcessMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableProductionProcess);

        ProductionProcessPanel.add(jScrollPane1);
        jScrollPane1.setBounds(10, 50, 830, 260);

        jLabel3.setText("Order By :");
        ProductionProcessPanel.add(jLabel3);
        jLabel3.setBounds(310, 10, 90, 20);

        cmbOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrderActionPerformed(evt);
            }
        });
        ProductionProcessPanel.add(cmbOrder);
        cmbOrder.setBounds(420, 10, 140, 30);

        cmdProductionProcessExporttoExcel.setText("Export to Excel");
        cmdProductionProcessExporttoExcel.setMargin(new java.awt.Insets(1, 7, 1, 7));
        cmdProductionProcessExporttoExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProductionProcessExporttoExcelActionPerformed(evt);
            }
        });
        ProductionProcessPanel.add(cmdProductionProcessExporttoExcel);
        cmdProductionProcessExporttoExcel.setBounds(10, 10, 128, 30);

        jTabbedPane1.addTab("Annual Order Incentive", ProductionProcessPanel);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 110, 870, 370);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Pending Order Form");

        txtpartycode.setToolTipText("Press F1 key for search Party Code");
        txtpartycode = new JTextFieldHint(new JTextField(),"Search by F1");
        txtpartycode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpartycodeFocusLost(evt);
            }
        });
        txtpartycode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpartycodeKeyPressed(evt);
            }
        });
        getContentPane().add(txtpartycode);
        txtpartycode.setBounds(120, 40, 90, 28);

        txtpartyname.setBackground(new java.awt.Color(204, 204, 204));
        txtpartyname = new JTextFieldHint(new JTextField(),"Party Name");
        txtpartyname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpartynameActionPerformed(evt);
            }
        });
        getContentPane().add(txtpartyname);
        txtpartyname.setBounds(210, 40, 510, 28);

        cmdClearAll.setText("Reset");
        cmdClearAll.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdClearAll.setMargin(new java.awt.Insets(2, 7, 2, 7));
        cmdClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearAllActionPerformed(evt);
            }
        });
        getContentPane().add(cmdClearAll);
        cmdClearAll.setBounds(770, 40, 110, 32);

        jLabel5.setText("Piece No");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 70, 70, 20);
        getContentPane().add(txtPieceNo);
        txtPieceNo.setBounds(120, 70, 90, 30);

        cmbYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbYearItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbYear);
        cmbYear.setBounds(260, 70, 140, 30);

        jLabel4.setText("Year");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(220, 70, 40, 20);

        jLabel6.setText("Machine No");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(420, 70, 77, 16);

        txtMachineNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMachineNoKeyPressed(evt);
            }
        });
        getContentPane().add(txtMachineNo);
        txtMachineNo.setBounds(510, 70, 80, 28);

        jLabel7.setText("Position");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(600, 70, 60, 20);

        txtPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPositionActionPerformed(evt);
            }
        });
        getContentPane().add(txtPosition);
        txtPosition.setBounds(660, 70, 100, 28);
    }// </editor-fold>//GEN-END:initComponents

    private void txtpartycodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpartycodeFocusLost
        try {
            if (!txtpartycode.getText().equals("")) {
                String strSQL = "";
                ResultSet rsTmp;
                strSQL = "";
                strSQL += "SELECT PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE PARTY_CODE = " + txtpartycode.getText().trim() + "";
                rsTmp = data.getResult(strSQL);
                rsTmp.first();
                txtpartyname.setText(rsTmp.getString("PARTY_NAME"));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtpartycodeFocusLost
                                                                                    
    private void txtpartynameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpartynameActionPerformed

    }//GEN-LAST:event_txtpartynameActionPerformed

    private void txtpartycodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpartycodeKeyPressed
        if (evt.getKeyCode() == 112) //F1 Key pressed
        {
            LOV aList = new LOV();

            aList.SQL = "SELECT distinct(A.PARTY_CODE),B.PARTY_NAME FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE A.PARTY_CODE=B.PARTY_CODE;";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;
            if (aList.ShowLOV()) {
                txtpartycode.setText(aList.ReturnVal);
                txtpartyname.setText(clsSales_Party.getPartyName(EITLERPGLOBAL.gCompanyID, aList.ReturnVal));
            }
        }
    }//GEN-LAST:event_txtpartycodeKeyPressed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void cmdClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearAllActionPerformed
        txtpartyname.setText("");
        txtpartycode.setText("");
        txtMachineNo.setText("");
        txtPosition.setText("");
//      txtdatefrom.setText("");
//      txtdateto.setText("");
        txtPieceNo.setText("");
      
    //  txtasondate.setText("");

    }//GEN-LAST:event_cmdClearAllActionPerformed

    private void jTabbedPane1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseEntered

    }//GEN-LAST:event_jTabbedPane1MouseEntered

    private void ProductionProcessPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductionProcessPanelMouseEntered
        txtpartycode.setEnabled(true);
        txtpartyname.setEnabled(true);
//        txtdatefrom.setEnabled(true);
//        txtdateto.setEnabled(true);
        txtPieceNo.setEnabled(true);
    }//GEN-LAST:event_ProductionProcessPanelMouseEntered

    private void cmdProductionProcessExporttoExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProductionProcessExporttoExcelActionPerformed
        try {

            exp.fillData(TableProductionProcess, new File("/root/Desktop/Annual Order Incentive.xls"));
            exp.fillData(TableProductionProcess, new File("D://Annual Order Incentive.xls"));
            JOptionPane.showMessageDialog(null, "Data saved at "
                + "'/root/Desktop/Annual Order Incentive.xls' successfully in Linux PC or 'D://Annual Order Incentive.xls' successfully in Windows PC    ", "Message",
                JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_cmdProductionProcessExporttoExcelActionPerformed

    private void cmbOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbOrderActionPerformed

    private void TableProductionProcessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableProductionProcessMouseClicked

    }//GEN-LAST:event_TableProductionProcessMouseClicked

    private void cmdShowProductionProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowProductionProcessActionPerformed
        GenerateProcess();
    }//GEN-LAST:event_cmdShowProductionProcessActionPerformed

    private void cmbYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbYearItemStateChanged
        //jLabel3.setText((String)cmbYear.getSelectedItem());
       
    }//GEN-LAST:event_cmbYearItemStateChanged

    private void txtMachineNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMachineNoKeyPressed

    }//GEN-LAST:event_txtMachineNoKeyPressed

    private void txtPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPositionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ProductionProcessPanel;
    private javax.swing.JTable TableProductionProcess;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbOrder;
    private javax.swing.JComboBox cmbYear;
    private javax.swing.JButton cmdClearAll;
    private javax.swing.JButton cmdProductionProcessExporttoExcel;
    private javax.swing.JButton cmdShowProductionProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtMachineNo;
    private javax.swing.JTextField txtPieceNo;
    private javax.swing.JTextField txtPosition;
    private javax.swing.JTextField txtpartycode;
    private javax.swing.JTextField txtpartyname;
    // End of variables declaration//GEN-END:variables

    private void FormatGrid() {

        DataModelProductionProcess = new EITLTableModel();
        TableProductionProcess.removeAll();
        TableProductionProcess.setModel(DataModelProductionProcess);

        TableProductionProcess.setAutoResizeMode(TableProductionProcess.AUTO_RESIZE_OFF);

        //updated on 14/10/2014 by Dhaval 
        DataModelProductionProcess.addColumn("Sr.");
        DataModelProductionProcess.addColumn("Piece No"); //1
        DataModelProductionProcess.addColumn("Order No"); //2
        DataModelProductionProcess.addColumn("Order Date"); //3
        DataModelProductionProcess.addColumn("Party Code"); //4
        DataModelProductionProcess.addColumn("Party Name"); //5
        DataModelProductionProcess.addColumn("Req Month"); //6
        DataModelProductionProcess.addColumn("Product Code"); //7
        DataModelProductionProcess.addColumn("Product Group Desc"); //8
        DataModelProductionProcess.addColumn("Pi Date"); //9
        DataModelProductionProcess.addColumn("Pi Amount"); //10
        DataModelProductionProcess.addColumn("W/H Rcvd Date"); //11
        DataModelProductionProcess.addColumn("W/H Weight"); //12
        DataModelProductionProcess.addColumn("Length"); //13
        DataModelProductionProcess.addColumn("Width"); //14
        DataModelProductionProcess.addColumn("Gsm"); //15
        DataModelProductionProcess.addColumn("RC Voucher Date"); //16
        DataModelProductionProcess.addColumn("RC Voucher Amount"); //17
        DataModelProductionProcess.addColumn("RC Detail"); //18
        DataModelProductionProcess.addColumn("Invoice No"); //19
        DataModelProductionProcess.addColumn("Invoice Date"); //20
        DataModelProductionProcess.addColumn("Invoice Amount"); //21
        DataModelProductionProcess.addColumn("Pi Based Credit Note No"); //22
        DataModelProductionProcess.addColumn("Pi Based Credit Note Amount"); //23
        DataModelProductionProcess.addColumn("Pi Based Credit Note Date"); //24
        DataModelProductionProcess.addColumn("Due Date1"); //25
        DataModelProductionProcess.addColumn("Due Date2"); //26
        DataModelProductionProcess.addColumn("Year End Discount Per"); //27
        DataModelProductionProcess.addColumn("Year End Discount Amount"); //28
        DataModelProductionProcess.addColumn("Bill Discount Per"); //29
        DataModelProductionProcess.addColumn("PI No"); //30
        DataModelProductionProcess.addColumn("Party Charge Code"); //31
        DataModelProductionProcess.addColumn("Invoice Charge Code"); //32
        DataModelProductionProcess.addColumn("Machien Position No");//33
        DataModelProductionProcess.addColumn("Machien Position Desc"); //33
        DataModelProductionProcess.addColumn("Machien No"); //34
        DataModelProductionProcess.addColumn("Email"); //35
        DataModelProductionProcess.addColumn("Fin Year"); //36
        DataModelProductionProcess.addColumn("Basic Value"); //37
        DataModelProductionProcess.addColumn("Discount"); //38
        DataModelProductionProcess.addColumn("Order Amount"); //39
        

        DataModelProductionProcess.TableReadOnly(true);
        TableProductionProcess.getColumnModel().getColumn(0).setMaxWidth(50);

    }

    //party wise month wise 
    private void GenerateProcess() {
        String strOrderDateFrom = "";
        String strOrderDateTo = "";
        String cndtn = "";
        try {
            FormatGrid(); //clear existing content of table
            String PartyCode = txtpartycode.getText().toString();
            String PieceNo = txtPieceNo.getText();
            String MachineNo =txtMachineNo.getText();
            String Position = txtPosition.getText();
            String Yeartype  = (String)cmbYear.getSelectedItem(); 
            ResultSet rsTmp, rsBuyer, rsIndent, rsRIA;
            boolean flag = false;
            
            if (!txtpartycode.getText().equals("")) {
                cndtn += " AND A.PARTY_CODE= '" + PartyCode + "'";
            }
            if (!txtMachineNo.getText().equals("")) {
                cndtn += " AND A.MC_NO= '" + MachineNo + "'";
            }
            if (!txtPosition.getText().equals("")) {
                cndtn += " AND A.MC_POSITION_NO= '" + Position + "'";
            }
            
            if (!PieceNo.equals("")) {
                
            String[] Pieces = PieceNo.split(",");
                for (int i = 0; i < Pieces.length; i++) {

                    if (i == 0) {
                        cndtn = cndtn + " AND A.PIECE_NO = '" + Pieces[i] + "' ";
                    } 

                }
                flag = true;
            }
            
            if (!cmbYear.getSelectedItem().equals("")) {
                cndtn += " AND  A.FIN_YEAR = '" + Yeartype + "'";
            }
             
            
            strSQL = "SELECT A.PIECE_NO,A.ORDER_NO,A.ORDER_DATE,A.REQ_MONTH,A.PI_DATE,A.PI_AMT,A.WH_RCVD_DATE,A.WH_WEIGHT,A.LENGTH,A.WIDTH,A.GSM,A.RC_VOUCHER_DATE,A.RC_VOUCHER_AMT,A.RC_DETAIL,A.INVOICE_NO,A.INVOICE_DATE,A.INVOICE_AMT,A.PI_BASED_CN_NO,A.PI_BASED_CN_AMT,A.PI_BASED_CN_DATE,A.DUE_DATE1,A.DUE_DATE2,A.YEAR_END_DISC_PER,A.YEAR_END_DISC_AMT,A.BILL_DISC,A.PI_NO,A.PARTY_CHARGE_CODE,B.PARTY_NAME,A.INVOICE_CHARGE_CODE,A.MC_POSITION_NO,A.MC_POSITION_DESC,A.MC_NO,A.PARTY_CODE,A.EMAIL,A.FIN_YEAR,A.PRODUCT_CODE,A.PRODUCT_GROUP_DESC,A.BASIC_VALUE,A.DISCOUNT,A.ORDER_AMT FROM PRODUCTION.ANNUAL_ORDER_INCENTIVE A,DINESHMILLS.D_SAL_PARTY_MASTER B WHERE A.PARTY_CODE=B.PARTY_CODE " + cndtn + "  ";
            
            int Orderby = cmbOrder.getSelectedIndex();
            Orderby++;
            if (Orderby == 1) {
                strSQL += " ORDER BY A.PARTY_CODE";
            }
            if (Orderby == 2) {
                strSQL += " ORDER BY B.PARTY_NAME ";
            }
            if (Orderby == 3) {
                strSQL += " ORDER BY A.PIECE_NO ";
            }
            if (Orderby == 4) {
                strSQL += " ORDER BY A.REQ_MONTH ";
            }
            

            System.out.println("strSQL 2 :" + strSQL);
            rsTmp = data.getResult(strSQL);
            rsTmp.first();
            if (rsTmp.getRow() > 0) {
                int cnt = 0;
                while (!rsTmp.isAfterLast()) {
                    cnt++;
                    Object[] rowData = new Object[50];
                    rowData[0] = Integer.toString(cnt);
                    rowData[1] = rsTmp.getString("PIECE_NO");
                    rowData[2] = rsTmp.getString("ORDER_NO");
                    rowData[3] = EITLERPGLOBAL.formatDate(rsTmp.getString("ORDER_DATE"));
                    rowData[4] = rsTmp.getString("PARTY_CODE");
                    rowData[5] = rsTmp.getString("PARTY_NAME");
                    rowData[6] = rsTmp.getString("REQ_MONTH");
                    rowData[7] = rsTmp.getString("PRODUCT_CODE");
                    rowData[8] = rsTmp.getString("PRODUCT_GROUP_DESC");
                    rowData[9] = EITLERPGLOBAL.formatDate(rsTmp.getString("PI_DATE"));
                    rowData[10] = rsTmp.getString("PI_AMT");
                    rowData[11] = EITLERPGLOBAL.formatDate(rsTmp.getString("WH_RCVD_DATE"));
                    rowData[12] = rsTmp.getString("WH_WEIGHT");
                    rowData[13] = rsTmp.getString("LENGTH");
                    rowData[14] = rsTmp.getString("WIDTH");
                    rowData[15] = rsTmp.getString("GSM");
                    rowData[16] = EITLERPGLOBAL.formatDate(rsTmp.getString("RC_VOUCHER_DATE"));
                    rowData[17] = rsTmp.getString("RC_VOUCHER_AMT");
                    rowData[18] = rsTmp.getString("RC_DETAIL");
                    rowData[19] = rsTmp.getString("INVOICE_NO");
                    rowData[20] = EITLERPGLOBAL.formatDate(rsTmp.getString("INVOICE_DATE"));
                    rowData[21] = rsTmp.getString("INVOICE_AMT");
                    rowData[22] = rsTmp.getString("PI_BASED_CN_NO");
                    rowData[23] = rsTmp.getString("PI_BASED_CN_AMT");
                    rowData[24] = EITLERPGLOBAL.formatDate(rsTmp.getString("PI_BASED_CN_DATE"));
                    rowData[25] = EITLERPGLOBAL.formatDate(rsTmp.getString("DUE_DATE1"));
                    rowData[26] = EITLERPGLOBAL.formatDate(rsTmp.getString("DUE_DATE2"));
                    rowData[27] = rsTmp.getString("YEAR_END_DISC_PER");
                    rowData[28] = rsTmp.getString("YEAR_END_DISC_AMT");
                    rowData[29] = rsTmp.getString("BILL_DISC");
                    rowData[30] = rsTmp.getString("PI_NO");
                    rowData[31] = rsTmp.getString("PARTY_CHARGE_CODE");
                    rowData[32] = rsTmp.getString("INVOICE_CHARGE_CODE");
                    rowData[33] = rsTmp.getString("MC_POSITION_NO");
                    rowData[34] = rsTmp.getString("MC_POSITION_DESC");
                    rowData[35] = rsTmp.getString("MC_NO");
                    rowData[36] = rsTmp.getString("EMAIL");
                    rowData[37] = rsTmp.getString("FIN_YEAR");
                    rowData[38] = rsTmp.getString("BASIC_VALUE");
                    rowData[39] = rsTmp.getString("DISCOUNT");
                    rowData[40] = rsTmp.getString("ORDER_AMT");
                    
                    DataModelProductionProcess.addRow(rowData);

                    rsTmp.next();
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }
    private void GenerateYearCombo() {
        HashMap List2=new HashMap();
   
        //----- Generate Department Combo ------- //
        
        cmbYearModel=new EITLComboModel();
        cmbYear.removeAllItems();
        cmbYear.setModel(cmbYearModel);
        
        try{
            ComboData combodata2=new ComboData();
            combodata2.Code=0;
         //   combodata2.Text="SELECT YEAR";
            
            cmbYearModel.addElement(combodata2);
            ResultSet rs2=data.getResult("SELECT PARA_CODE,PARA_DESC FROM PRODUCTION.FELT_PARAMETER_MASTER WHERE PARA_ID='ANNUAL_ORDER' ");
            while(!rs2.isAfterLast()){
                combodata2=new ComboData();
                combodata2.Code=rs2.getLong("PARA_CODE");
                combodata2.Text=rs2.getString("PARA_DESC");
                
                cmbYearModel.addElement(combodata2);
                rs2.next();
            }
        }catch(SQLException e) {
            e.printStackTrace();
        }
        
    }

}
