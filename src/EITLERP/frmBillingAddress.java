/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */
 
package EITLERP;
 
/**
 *
 * @author  nhpatel
 */
/*<APPLET CODE=frmBillingAddress HEIGHT=382 WIDTH=455></APPLET>*/

import javax.swing.*;
import java.awt.*;
 
public class frmBillingAddress extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsBillingAddress ObjBill;
    
    /** Creates new form frmTemplate */
    public frmBillingAddress() {
        System.gc();
        setSize(455,382);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        
        
        //Load the Data
        ObjBill=new clsBillingAddress();
        if(ObjBill.LoadData((int)EITLERPGLOBAL.gCompanyID)) {
            ObjBill.MoveFirst();
            DisplayData();
            //------- Set the menu for User rights ----- //
            SetMenuForRights();
        }
        else {
            JOptionPane.showMessageDialog(null,"Failed to load data");
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtBillID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAdd1 = new javax.swing.JTextField();
        txtAdd2 = new javax.swing.JTextField();
        txtAdd3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPincode = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText(" COMPANY BILLING ADDRESSES");
        jLabel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 40, 650, 25);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.EtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel2.setText("Address No.");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(12, 20, 82, 15);

        txtBillID.setEditable(false);
        txtBillID.setNextFocusableComponent(txtAdd1);
        jPanel1.add(txtBillID);
        txtBillID.setBounds(96, 18, 82, 19);

        jLabel3.setText("Address");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(12, 58, 72, 15);

        txtAdd1.setBorder(new javax.swing.border.EtchedBorder());
        txtAdd1.setNextFocusableComponent(txtAdd2);
        txtAdd1.setEnabled(false);
        jPanel1.add(txtAdd1);
        txtAdd1.setBounds(96, 54, 270, 19);

        txtAdd2.setNextFocusableComponent(txtAdd3);
        txtAdd2.setEnabled(false);
        txtAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd2ActionPerformed(evt);
            }
        });

        jPanel1.add(txtAdd2);
        txtAdd2.setBounds(96, 78, 270, 19);

        txtAdd3.setNextFocusableComponent(txtCity);
        txtAdd3.setEnabled(false);
        jPanel1.add(txtAdd3);
        txtAdd3.setBounds(96, 102, 270, 19);

        jLabel4.setText("City");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(12, 142, 48, 15);

        txtCity.setNextFocusableComponent(txtPincode);
        txtCity.setEnabled(false);
        jPanel1.add(txtCity);
        txtCity.setBounds(98, 140, 134, 19);

        jLabel5.setText("Pincode");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(14, 164, 74, 15);

        txtPincode.setNextFocusableComponent(txtState);
        txtPincode.setEnabled(false);
        jPanel1.add(txtPincode);
        txtPincode.setBounds(98, 164, 134, 19);

        jLabel6.setText("State");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(14, 192, 76, 15);

        txtState.setNextFocusableComponent(txtCountry);
        txtState.setEnabled(false);
        jPanel1.add(txtState);
        txtState.setBounds(98, 188, 134, 19);

        jLabel7.setText("Country");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(12, 217, 74, 15);

        txtCountry.setNextFocusableComponent(txtState);
        txtCountry.setEnabled(false);
        jPanel1.add(txtCountry);
        txtCountry.setBounds(98, 214, 134, 19);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 66, 444, 290);

    }//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ObjBill.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed

    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed

    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPreviewActionPerformed

    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdFilterActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        Delete();
    }//GEN-LAST:event_cmdDeleteActionPerformed

    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed

    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed

    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed

    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed

    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed

    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    private void txtAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd2ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar ToolBar;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdTop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAdd1;
    private javax.swing.JTextField txtAdd2;
    private javax.swing.JTextField txtAdd3;
    private javax.swing.JTextField txtBillID;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtPincode;
    private javax.swing.JTextField txtState;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    private void MoveFirst()
    {
        ObjBill.MoveFirst();
        DisplayData();
    }
    
    private void MovePrevious()
    {
       ObjBill.MovePrevious();
       DisplayData();
    }
    
    private void MoveNext()
    {
        ObjBill.MoveNext();
        DisplayData();
    }
    
    private void MoveLast()
    {
       ObjBill.MoveLast();
       DisplayData();
    }
    
    private void Add()
    {
        EditMode=EITLERPGLOBAL.ADD;
        ClearFields();
        SetFields(true);
        DisableToolbar();
    }
    
    private void Edit()
    {
        EditMode=EITLERPGLOBAL.EDIT;
        SetFields(true);
        DisableToolbar();
    }
    
    private void Delete()
    {
       if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION)
       {
           if(ObjBill.Delete())
           {
             ObjBill.MoveLast();
             DisplayData();
           }
           else
           {
            JOptionPane.showMessageDialog(null,"Error while deleting record. Error is"+ObjBill.LastError);
           }
       }
    }
    
   private void Save() 
   {
      if(txtAdd1.getText().trim().equals(""))
      {
       JOptionPane.showMessageDialog(null,"Please enter address");
       return;
      }
      
      if(txtCity.getText().trim().equals(""))
      {
       JOptionPane.showMessageDialog(null,"Please enter city");
       return;
      }
      
      SetData();
      
      if(EditMode==EITLERPGLOBAL.ADD)
      {
          if(ObjBill.Insert())
          {
          }
          else
          {
            JOptionPane.showMessageDialog(null,"Error occured while saving. "+ObjBill.LastError);
            return;
          }
      }
      
      if(EditMode==EITLERPGLOBAL.EDIT)
      {
          if(ObjBill.Update())
          {
          }
          else
          {
            JOptionPane.showMessageDialog(null,"Error occured while saving. "+ObjBill.LastError);
            return;
          }
      }
      
      EditMode=0;
      SetFields(false);
      EnableToolbar();
   }
    
   private void Cancel() 
   {
      DisplayData();
      EditMode=0;
      SetFields(false);
      EnableToolbar();
   }
    //Didplay data on the Screen
    private void DisplayData() {
       txtBillID.setText(Double.toString(ObjBill.getAttribute("BILL_ID").getVal()));
       txtAdd1.setText((String)ObjBill.getAttribute("ADD1").getObj());
       txtAdd2.setText((String)ObjBill.getAttribute("ADD2").getObj());
       txtAdd3.setText((String)ObjBill.getAttribute("ADD3").getObj());
       txtCity.setText((String)ObjBill.getAttribute("CITY").getObj());
       txtPincode.setText((String)ObjBill.getAttribute("PINCODE").getObj());
       txtState.setText((String)ObjBill.getAttribute("STATE").getObj());
       txtCountry.setText((String)ObjBill.getAttribute("COUNTRY").getObj());
    }
    
    //Sets data to the Class Object
    private void SetData() {
        ObjBill.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
        ObjBill.setAttribute("ADD1",txtAdd1.getText());
        ObjBill.setAttribute("ADD2",txtAdd2.getText());
        ObjBill.setAttribute("ADD3",txtAdd3.getText());
        ObjBill.setAttribute("CITY",txtCity.getText());
        ObjBill.setAttribute("PINCODE",txtPincode.getText());
        ObjBill.setAttribute("STATE",txtState.getText());
        ObjBill.setAttribute("COUNTRY",txtCountry.getText());
    }
    
    private void ClearFields()
    {
        txtAdd1.setText("");
        txtAdd2.setText("");
        txtAdd3.setText("");
        txtCity.setText("");
        txtPincode.setText("");
        txtState.setText("");
        txtCountry.setText("");
    }
    
    private void SetFields(boolean pStat)
    {
        txtAdd1.setEnabled(pStat);
        txtAdd2.setEnabled(pStat);
        txtAdd3.setEnabled(pStat);
        txtCity.setEnabled(pStat);
        txtPincode.setEnabled(pStat);
        txtState.setEnabled(pStat);
        txtCountry.setEnabled(pStat);
    }
    private void SetMenuForRights() {
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,101)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,102)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,103)) {
            cmdDelete.setEnabled(true);
        }
        else {
            cmdDelete.setEnabled(false);
        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,104)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
    }
    
}
