/*
 * 
 * Created on December 20, 2013, 12:14 PM
 */

package EITLERP.MIS;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import java.sql.*;
import EITLERP.*;
import java.util.*;
import EITLERP.*;
import java.sql.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.Purchase.*;
import EITLERP.Stores.*;
import EITLERP.Finance.*;
import EITLERP.Finance.UtilFunctions;
import java.io.File;

/**
 *
 * @author  Ashutosh Pathak
 */
public class frmPurchasingFlowReport extends javax.swing.JApplet {
    
    private EITLComboModel cmbInvoiceTypeModel;
     EITLTableModel DataModel= new EITLTableModel();
     private EITLTableCellRenderer RowFormat=new EITLTableCellRenderer();
     private clsExcelExporter exp = new clsExcelExporter();
     /** Initializes the applet frmABDReport */
    public void init() {
        initComponents();        
        setSize(1020, 500);
        GenerateCombo();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        RptFromDate = new javax.swing.JTextField();
        cmbInvoiceType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TResult = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TResult1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        RptToDate = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(48, 174, 237));
        lblTitle.setText("PURCHASING FLOW REPORT");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 1000, 25);

        lblStatus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(0, 51, 255));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(20, 390, 450, 20);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 130, 0, 0);

        RptFromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RptFromDateActionPerformed(evt);
            }
        });
        getContentPane().add(RptFromDate);
        RptFromDate.setBounds(100, 40, 100, 24);
        getContentPane().add(cmbInvoiceType);
        cmbInvoiceType.setBounds(500, 40, 210, 24);

        jLabel5.setText("Company");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(430, 40, 100, 20);

        jLabel6.setText("From Date");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 40, 70, 20);

        jPanel1.setLayout(null);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        TResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TResult.getTableHeader().setFont(new Font("Plain", Font.BOLD, 12));
        jScrollPane1.setViewportView(TResult);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 50, 940, 280);

        jButton2.setText("Show Detail Report");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(20, 10, 240, 30);

        jButton1.setText("Excel To Export");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(280, 10, 150, 30);

        jTabbedPane1.addTab("Purchasing Flow Detail Report", null, jPanel1, "");

        jPanel2.setLayout(null);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        TResult1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TResult.getTableHeader().setFont(new Font("Plain", Font.BOLD, 12));
        jScrollPane2.setViewportView(TResult1);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(20, 40, 850, 290);

        jButton3.setText("Show Summary Report");
        jButton3.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(20, 10, 240, 30);

        jButton4.setText("Excel To Export");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(280, 10, 150, 30);

        jTabbedPane1.addTab("Purchasing Flow Summary", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(20, 70, 980, 380);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Purchasing Flow Detail Report");

        jLabel7.setText("To Date");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(230, 40, 70, 20);

        RptToDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RptToDateActionPerformed(evt);
            }
        });
        getContentPane().add(RptToDate);
        RptToDate.setBounds(300, 40, 100, 24);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String FromDate=EITLERPGLOBAL.formatDateDB(RptFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(RptToDate.getText());    
        //String InvoiceType=cmbInvoiceType.getSelectedItem().toString()+" Sales";
        String InvoiceType=cmbInvoiceType.getSelectedItem().toString();
        String Type = Integer.toString(cmbInvoiceType.getSelectedIndex());
        System.out.println(InvoiceType);
        System.out.println(Type);
        if(cmbInvoiceType.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Please Select any type");
            cmbInvoiceType.requestFocus();
        }
        else{
            formatGrid()  ;
            GeneratPurchasingFlowReport(FromDate,ToDate,Type,InvoiceType);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void RptFromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RptFromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RptFromDateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
        try{
             
                    exp.fillData(TResult,new File("/root/Desktop/PurchasingFlowReport.xls"));
                    exp.fillData(TResult,new File("D://PurchasingFlowReport.xls"));
                    JOptionPane.showMessageDialog(null, "Data saved at " +
                            "'/root/Desktop/PurchasingFlowReport.xls' successfully in Linux PC or 'D://PurchasingFlowReport.xls' successfully in Windows PC    ", "Message",
                            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }  
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
            String FromDate=EITLERPGLOBAL.formatDateDB(RptFromDate.getText());
            String ToDate=EITLERPGLOBAL.formatDateDB(RptToDate.getText());
            
   //     String ToDate=EITLERPGLOBAL.formatDateDB(RptToDate.getText());    
        //String InvoiceType=cmbInvoiceType.getSelectedItem().toString()+" Sales";
        String InvoiceType=cmbInvoiceType.getSelectedItem().toString();
        String Type = Integer.toString(cmbInvoiceType.getSelectedIndex());
        System.out.println(InvoiceType);
        System.out.println(Type);
        if(cmbInvoiceType.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Please Select any type");
            cmbInvoiceType.requestFocus();
        }
        else{
            formatGridSummary()  ;
            GeneratPurchasingFlowSummary(FromDate,ToDate,Type,InvoiceType);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       try{
             
                    exp.fillData(TResult1,new File("/root/Desktop/PurchasingFlowSummary.xls"));
                    exp.fillData(TResult1,new File("D://PurchasingFlowSummary.xls"));
                    JOptionPane.showMessageDialog(null, "Data saved at " +
                            "'/root/Desktop/PurchasingFlowSummary.xls' successfully in Linux PC or 'D://PurchasingFlowSummary.xls' successfully in Windows PC    ", "Message",
                            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }  
    }//GEN-LAST:event_jButton4ActionPerformed

    private void RptToDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RptToDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RptToDateActionPerformed
                        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField RptFromDate;
    private javax.swing.JTextField RptToDate;
    private javax.swing.JTable TResult;
    private javax.swing.JTable TResult1;
    private javax.swing.JComboBox cmbInvoiceType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() { 
        cmbInvoiceTypeModel=new EITLComboModel();
        cmbInvoiceType.removeAllItems();
        cmbInvoiceType.setModel(cmbInvoiceTypeModel);
        
        ComboData aData=new ComboData();        
        aData.Text="-Select Type-";
        aData.Code=0;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="ANKLESHWAR";
        aData.Code=1;
        cmbInvoiceTypeModel.addElement(aData);
        
        aData.Text="BARODA";
        aData.Code=2;
        cmbInvoiceTypeModel.addElement(aData);

        
    }
    
    private void GeneratPurchasingFlowReport(String FromDate,String ToDate,String Type, String InvoiceType){
        try{
            String Condition="";
            int l=0;
             String str ="";
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            /*
            objData.AddColumn("INWARD_NO");            
            objData.AddColumn("INWARD_DATE");
            objData.AddColumn("INVOICE_NO");
            objData.AddColumn("INVOICE_DATE");
            objData.AddColumn("CHALAN_NO");
            objData.AddColumn("CHALAN_DATE");
            objData.AddColumn("SUPPLIER_CODE");
            objData.AddColumn("SUPP_NAME");
            objData.AddColumn("GI_APPROVED");
            objData.AddColumn("MIR_NO");
            objData.AddColumn("MIR_DATE");
            objData.AddColumn("MIR_APPROVED");
            objData.AddColumn("GRN_NO");
            objData.AddColumn("GRN_DATE");
            objData.AddColumn("GRN_APPROVED");
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("V_APPROVED");
            */
            
            objData.AddColumn("INWARD_NO");
objData.AddColumn("INWARD_DATE");
objData.AddColumn("INW_SUPPLIER_CODE");
objData.AddColumn("INW_SUPP_NAME");
objData.AddColumn("CHALAN_NO");
objData.AddColumn("CHALAN_DATE");
objData.AddColumn("INW_INV_NO");
objData.AddColumn("INW_INV_DATE");
objData.AddColumn("INW_APP");
objData.AddColumn("INW_APP_DATE");
objData.AddColumn("MIR_NO");
objData.AddColumn("MIR_DATE");
objData.AddColumn("MIR_STATUS");
objData.AddColumn("MIR_APP_DATE");
objData.AddColumn("MIR_USER_NAME");
objData.AddColumn("GRN_NO");
objData.AddColumn("GRN_DATE");
objData.AddColumn("GRN_APP");
objData.AddColumn("GRN_APP_DATE");
objData.AddColumn("PJV_NO");
objData.AddColumn("PJV_DATE");
objData.AddColumn("PJV_AMT");
objData.AddColumn("PJV_APP");
objData.AddColumn("PJV_APP_DATE");
objData.AddColumn("PJV_INV_NO");
objData.AddColumn("PJV_INV_DATE");
objData.AddColumn("PJV_INV_AMT");
objData.AddColumn("PJV_MAIN");
objData.AddColumn("PJV_PARTY");
objData.AddColumn("DN_NO");
objData.AddColumn("DN_DATE");
objData.AddColumn("DN_APP");
objData.AddColumn("DN_APP_DATE");
objData.AddColumn("DN_AMT");
objData.AddColumn("DN_MAIN");
objData.AddColumn("DN_PARTY");
objData.AddColumn("REQ_NO");
objData.AddColumn("REQ_DATE");
objData.AddColumn("PR_APP");
objData.AddColumn("PR_APP_DATE");
objData.AddColumn("PR_DEPT_DESC");
objData.AddColumn("INDENT_NO");
objData.AddColumn("INDENT_DATE");
objData.AddColumn("IND_APP");
objData.AddColumn("IND_APP_DATE");
objData.AddColumn("PO_NO");
objData.AddColumn("PO_DATE");
objData.AddColumn("PO_APP");
objData.AddColumn("PO_APP_DATE");
objData.AddColumn("PO_INQUIRY_NO");
objData.AddColumn("PO_INQUIRY_DATE");
objData.AddColumn("PO_QUOTATION_NO");
objData.AddColumn("PO_QUOTATION_DATE");

  
            
            
            
            
          
            if(Type.equals("2"))
            {
             str="SELECT INWARD_NO,INWARD_DATE,INW_SUPPLIER_CODE,INW_SUPP_NAME,CHALAN_NO,CHALAN_DATE,INW_INV_NO,INW_INV_DATE,INW_APP,INW_APP_DATE,MIR_NO,MIR_DATE,MIR_STATUS,MIR_APP_DATE,MIR_USER_NAME,GRN_NO,GRN_DATE,GRN_APP,GRN_APP_DATE,PJV_NO,PJV_DATE,PJV_AMT,PJV_APP,PJV_APP_DATE,PJV_INV_NO,PJV_INV_DATE,PJV_INV_AMT,PJV_MAIN,PJV_PARTY,DN_NO,DN_DATE,DN_APP,DN_APP_DATE,DN_AMT,DN_MAIN,DN_PARTY,REQ_NO,REQ_DATE,PR_APP,PR_APP_DATE,PR_DEPT_DESC,INDENT_NO,INDENT_DATE,IND_APP,IND_APP_DATE,PO_NO,PO_DATE,PO_APP,PO_APP_DATE,PO_INQUIRY_NO,PO_INQUIRY_DATE,PO_QUOTATION_NO,PO_QUOTATION_DATE FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE ,INVOICE_NO AS INW_INV_NO,INVOICE_DATE AS INW_INV_DATE,I.SUPPLIER_CODE AS INW_SUPPLIER_CODE,SUPP_NAME AS INW_SUPP_NAME,CASE WHEN  I.APPROVED =1 THEN 'APPROVED' WHEN  I.APPROVED =0 THEN 'PENDING' END AS INW_APP,I.APPROVED_DATE AS INW_APP_DATE FROM DINESHMILLS.D_INV_GATE_INWARD_HEADER I,DINESHMILLS.D_COM_SUPP_MASTER S WHERE INWARD_DATE >= '"+FromDate+"' AND INWARD_DATE <= '"+ToDate+"' AND I.CANCELLED =0 AND I.SUPPLIER_CODE = S.SUPPLIER_CODE) AS INWARD LEFT JOIN  (SELECT * FROM  (SELECT DISTINCT H.MIR_NO,H.MIR_DATE,D.PO_NO AS MIR_PO_NO,H.APPROVED AS MIR_APP,H.APPROVED_DATE AS MIR_APP_DATE,C.USER_ID AS MIR_USERID, USER_NAME AS MIR_USER_NAME, CASE WHEN STATUS ='W' THEN 'PENDING' WHEN STATUS = 'F' THEN 'APPROVED' END AS MIR_STATUS,GATEPASS_NO AS MIR_GATEPASS_NO FROM DINESHMILLS.D_INV_MIR_HEADER H,DINESHMILLS.D_INV_MIR_DETAIL D,DINESHMILLS.D_COM_DOC_DATA C,DINESHMILLS.D_COM_USER_MASTER U  WHERE MIR_DATE >= '2016-01-01' AND H.MIR_NO = D.MIR_NO AND MODULE_ID IN (5,6) AND DOC_NO = H.MIR_NO AND C.STATUS IN ('W','F') AND U.USER_ID = C.USER_ID AND H.CANCELLED =0 ) AS MIR  LEFT JOIN  (SELECT * FROM  (SELECT DISTINCT H.PO_NO,H.PO_DATE,QUOTATION_NO AS PO_QUOTATION_NO,QUOTATION_DATE AS PO_QUOTATION_DATE,INQUIRY_NO AS PO_INQUIRY_NO,INQUIRY_DATE AS PO_INQUIRY_DATE ,INDENT_NO AS PO_INDENT_NO,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PO_APP,H.APPROVED_DATE AS PO_APP_DATE FROM DINESHMILLS.D_PUR_PO_HEADER H,DINESHMILLS.D_PUR_PO_DETAIL D WHERE H.PO_NO = D.PO_NO AND PO_DATE >='2015-04-01' AND H.CANCELLED =0) AS PO  LEFT JOIN  (SELECT * FROM (SELECT DISTINCT H.INDENT_NO,H.INDENT_DATE,D.MR_NO AS IND_MR_NO,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS IND_APP,APPROVED_DATE AS IND_APP_DATE FROM  DINESHMILLS.D_INV_INDENT_HEADER H,DINESHMILLS.D_INV_INDENT_DETAIL D WHERE H.INDENT_NO = D.INDENT_NO  AND INDENT_DATE >='2015-04-01' AND H.CANCELED =0) AS INDENT  LEFT JOIN  (SELECT DISTINCT H.REQ_NO,H.REQ_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PR_APP,APPROVED_DATE AS PR_APP_DATE,DEPT_ID AS PR_DEPT,DEPT_DESC AS PR_DEPT_DESC FROM  DINESHMILLS.D_INV_REQ_HEADER H,DINESHMILLS.D_INV_REQ_DETAIL D,DINESHMILLS.D_COM_DEPT_MASTER M WHERE H.REQ_NO = D.REQ_NO AND M.DEPT_ID = DEST_DEPT_ID AND REQ_DATE >='2015-04-01' AND H.CANCELED =0) AS PR  ON PR.REQ_NO = INDENT.IND_MR_NO ) AS PRMIR ON PRMIR.INDENT_NO = PO.PO_INDENT_NO ) AS PRMIRPO  ON PRMIRPO.PO_NO = MIR.MIR_PO_NO) AS PRTOMIR  ON INWARD.INWARD_NO = PRTOMIR.MIR_GATEPASS_NO) AS INWTOMIR  LEFT JOIN   (SELECT DISTINCT B.GRN_NO,B.GRN_DATE,A.MIR_NO AS GRN_MIR,  CASE WHEN  B.APPROVED =1 THEN 'APPROVED' WHEN  B.APPROVED =0 THEN 'PENDING' END AS GRN_APP,B.APPROVED_DATE AS GRN_APP_DATE  FROM DINESHMILLS.D_INV_GRN_DETAIL A,DINESHMILLS.D_INV_GRN_HEADER B WHERE A.GRN_NO = B.GRN_NO AND GRN_DATE >= '2016-01-01' AND B.CANCELLED =0 ) AS GRN  ON INWTOMIR.MIR_NO = GRN.GRN_MIR) AS INWTOGRN  LEFT JOIN  (SELECT DISTINCT H.VOUCHER_NO AS PJV_NO,H.VOUCHER_DATE AS PJV_DATE,GRN_NO AS PJV_GRN,GRN_DATE AS PJV_GRN_DATE,PO_NO AS PJV_PO,PO_DATE AS PJV_PO_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PJV_APP,H.APPROVED_DATE AS PJV_APP_DATE,INVOICE_NO AS PJV_INV_NO,INVOICE_DATE AS PJV_INV_DATE,INVOICE_AMOUNT AS PJV_INV_AMT,AMOUNT AS PJV_AMT,MAIN_ACCOUNT_CODE AS PJV_MAIN,SUB_ACCOUNT_CODE AS PJV_PARTY FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'PJ' AND VOUCHER_DATE  >='2016-01-01' AND H.CANCELLED =0 AND SUB_ACCOUNT_CODE !='') AS PJV  ON PJV.PJV_GRN = INWTOGRN.GRN_NO AND PJV.PJV_GRN_DATE = INWTOGRN.GRN_DATE ) AS INWTOPJV LEFT JOIN (SELECT DISTINCT H.VOUCHER_NO AS DN_NO,H.VOUCHER_DATE AS DN_DATE,GRN_NO AS DN_GRN,GRN_DATE AS DN_GRN_DATE,PO_NO AS DN_PO,PO_DATE AS DN_PO_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS DN_APP, H.APPROVED_DATE AS DN_APP_DATE,INVOICE_NO AS DN_INV_NO,INVOICE_DATE AS DN_INV_DATE,INVOICE_AMOUNT AS DN_INV_AMT,AMOUNT AS DN_AMT,MAIN_ACCOUNT_CODE AS DN_MAIN,SUB_ACCOUNT_CODE AS DN_PARTY FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'DN' AND VOUCHER_DATE  >='2016-01-01' AND H.CANCELLED =0 AND SUB_ACCOUNT_CODE !='' AND GRN_NO !='' ) AS DN ON DN.DN_GRN = INWTOPJV.GRN_NO AND DN.DN_GRN_DATE = INWTOPJV.GRN_DATE ORDER BY INWARD_DATE,INWARD_NO";
            System.out.println(str);
            }
            
           if(Type.equals("1"))
           {
         //   str="SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE,INVOICE_NO,INVOICE_DATE,GRN.SUPPLIER_CODE,SUPP_NAME,GI_APPROVED,MIR_NO,MIR_DATE,MIR_APPROVED,GRN_NO,GRN_DATE,GRN_APPROVED,VOUCHER_NO,VOUCHER_DATE,V_APPROVED  FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE,INVOICE_NO,INVOICE_DATE,SUPPLIER_CODE,GI_APPROVED,MIR_NO,MIR_DATE,MIR_APPROVED,E.GRN_NO,E.GRN_DATE,GRN_APPROVED,VOUCHER_NO,VOUCHER_DATE,F.APPROVED AS V_APPROVED  FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE,INVOICE_NO,INVOICE_DATE,SUPPLIER_CODE,GI_APPROVED,C.MIR_NO,MIR_DATE,MIR_APPROVED,GRN_NO,GRN_DATE,D.APPROVED AS GRN_APPROVED FROM (SELECT INWARD_NO,INWARD_DATE,A.CHALAN_NO,A.CHALAN_DATE,A.INVOICE_NO,A.INVOICE_DATE,SUPPLIER_CODE,A.APPROVED AS GI_APPROVED,MIR_NO,MIR_DATE,B.APPROVED AS MIR_APPROVED FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE,INVOICE_NO,INVOICE_DATE,SUPPLIER_CODE,APPROVED FROM DINESHMILLSA.D_INV_GATE_INWARD_HEADER WHERE INWARD_DATE >= '"+FromDate+"' AND CANCELLED =0 ) AS A LEFT JOIN (SELECT * FROM DINESHMILLSA.D_INV_MIR_HEADER WHERE MIR_DATE >= '"+FromDate+"') AS B ON INWARD_NO = GATEPASS_NO) AS C LEFT JOIN (SELECT DISTINCT B.GRN_NO,B.GRN_DATE,A.MIR_NO,B.APPROVED FROM DINESHMILLSA.D_INV_GRN_DETAIL A,DINESHMILLSA.D_INV_GRN_HEADER B WHERE A.GRN_NO = B.GRN_NO AND GRN_DATE >= '"+FromDate+"' ) AS D ON C.MIR_NO = D.MIR_NO ) AS E LEFT JOIN (SELECT DISTINCT H.VOUCHER_NO,H.VOUCHER_DATE,GRN_NO,GRN_DATE,PO_NO,PO_DATE,H.APPROVED FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'PA' AND VOUCHER_DATE  >='"+FromDate+"') AS F  ON E.GRN_NO = F.GRN_NO AND E.GRN_DATE = F.GRN_DATE  ) AS GRN LEFT JOIN (SELECT * FROM DINESHMILLSA.D_COM_SUPP_MASTER ) AS SM ON GRN.SUPPLIER_CODE = SM.SUPPLIER_CODE ORDER BY INWARD_DATE,INWARD_NO";
            str="SELECT INWARD_NO,INWARD_DATE,INW_SUPPLIER_CODE,INW_SUPP_NAME,CHALAN_NO,CHALAN_DATE,INW_INV_NO,INW_INV_DATE,INW_APP,INW_APP_DATE,MIR_NO,MIR_DATE,MIR_STATUS,MIR_APP_DATE,MIR_USER_NAME,GRN_NO,GRN_DATE,GRN_APP,GRN_APP_DATE,PJV_NO,PJV_DATE,PJV_AMT,PJV_APP,PJV_APP_DATE,PJV_INV_NO,PJV_INV_DATE,PJV_INV_AMT,PJV_MAIN,PJV_PARTY,DN_NO,DN_DATE,DN_APP,DN_APP_DATE,DN_AMT,DN_MAIN,DN_PARTY,REQ_NO,REQ_DATE,PR_APP,PR_APP_DATE,PR_DEPT_DESC,INDENT_NO,INDENT_DATE,IND_APP,IND_APP_DATE,PO_NO,PO_DATE,PO_APP,PO_APP_DATE,PO_INQUIRY_NO,PO_INQUIRY_DATE,PO_QUOTATION_NO,PO_QUOTATION_DATE FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE ,INVOICE_NO AS INW_INV_NO,INVOICE_DATE AS INW_INV_DATE,I.SUPPLIER_CODE AS INW_SUPPLIER_CODE,SUPP_NAME AS INW_SUPP_NAME,CASE WHEN  I.APPROVED =1 THEN 'APPROVED' WHEN  I.APPROVED =0 THEN 'PENDING' END AS INW_APP,I.APPROVED_DATE AS INW_APP_DATE FROM DINESHMILLSA.D_INV_GATE_INWARD_HEADER I,DINESHMILLSA.D_COM_SUPP_MASTER S WHERE INWARD_DATE >= '"+FromDate+"' AND INWARD_DATE <= '"+ToDate+"' AND I.CANCELLED =0 AND I.SUPPLIER_CODE = S.SUPPLIER_CODE) AS INWARD LEFT JOIN  (SELECT * FROM  (SELECT DISTINCT H.MIR_NO,H.MIR_DATE,D.PO_NO AS MIR_PO_NO,H.APPROVED AS MIR_APP,H.APPROVED_DATE AS MIR_APP_DATE,C.USER_ID AS MIR_USERID, USER_NAME AS MIR_USER_NAME, CASE WHEN STATUS ='W' THEN 'PENDING' WHEN STATUS = 'F' THEN 'APPROVED' END AS MIR_STATUS,GATEPASS_NO AS MIR_GATEPASS_NO FROM DINESHMILLSA.D_INV_MIR_HEADER H,DINESHMILLSA.D_INV_MIR_DETAIL D,DINESHMILLSA.D_COM_DOC_DATA C,DINESHMILLSA.D_COM_USER_MASTER U  WHERE MIR_DATE >= '2016-01-01' AND H.MIR_NO = D.MIR_NO AND MODULE_ID IN (5,6) AND DOC_NO = H.MIR_NO AND C.STATUS IN ('W','F') AND U.USER_ID = C.USER_ID AND H.CANCELLED =0 ) AS MIR  LEFT JOIN  (SELECT * FROM  (SELECT DISTINCT H.PO_NO,H.PO_DATE,QUOTATION_NO AS PO_QUOTATION_NO,QUOTATION_DATE AS PO_QUOTATION_DATE,INQUIRY_NO AS PO_INQUIRY_NO,INQUIRY_DATE AS PO_INQUIRY_DATE ,INDENT_NO AS PO_INDENT_NO,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PO_APP,H.APPROVED_DATE AS PO_APP_DATE FROM DINESHMILLSA.D_PUR_PO_HEADER H,DINESHMILLSA.D_PUR_PO_DETAIL D WHERE H.PO_NO = D.PO_NO AND PO_DATE >='2015-04-01' AND H.CANCELLED =0) AS PO  LEFT JOIN  (SELECT * FROM (SELECT DISTINCT H.INDENT_NO,H.INDENT_DATE,D.MR_NO AS IND_MR_NO,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS IND_APP,APPROVED_DATE AS IND_APP_DATE FROM  DINESHMILLSA.D_INV_INDENT_HEADER H,DINESHMILLSA.D_INV_INDENT_DETAIL D WHERE H.INDENT_NO = D.INDENT_NO  AND INDENT_DATE >='2015-04-01' AND H.CANCELED =0) AS INDENT  LEFT JOIN  (SELECT DISTINCT H.REQ_NO,H.REQ_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PR_APP,APPROVED_DATE AS PR_APP_DATE,DEPT_ID AS PR_DEPT,DEPT_DESC AS PR_DEPT_DESC FROM  DINESHMILLSA.D_INV_REQ_HEADER H,DINESHMILLSA.D_INV_REQ_DETAIL D,DINESHMILLSA.D_COM_DEPT_MASTER M WHERE H.REQ_NO = D.REQ_NO AND M.DEPT_ID = DEST_DEPT_ID AND REQ_DATE >='2015-04-01' AND H.CANCELED =0) AS PR  ON PR.REQ_NO = INDENT.IND_MR_NO ) AS PRMIR ON PRMIR.INDENT_NO = PO.PO_INDENT_NO ) AS PRMIRPO  ON PRMIRPO.PO_NO = MIR.MIR_PO_NO) AS PRTOMIR  ON INWARD.INWARD_NO = PRTOMIR.MIR_GATEPASS_NO) AS INWTOMIR  LEFT JOIN   (SELECT DISTINCT B.GRN_NO,B.GRN_DATE,A.MIR_NO AS GRN_MIR,  CASE WHEN  B.APPROVED =1 THEN 'APPROVED' WHEN  B.APPROVED =0 THEN 'PENDING' END AS GRN_APP,B.APPROVED_DATE AS GRN_APP_DATE  FROM DINESHMILLSA.D_INV_GRN_DETAIL A,DINESHMILLSA.D_INV_GRN_HEADER B WHERE A.GRN_NO = B.GRN_NO AND GRN_DATE >= '2016-01-01' AND B.CANCELLED =0 ) AS GRN  ON INWTOMIR.MIR_NO = GRN.GRN_MIR) AS INWTOGRN  LEFT JOIN  (SELECT DISTINCT H.VOUCHER_NO AS PJV_NO,H.VOUCHER_DATE AS PJV_DATE,GRN_NO AS PJV_GRN,GRN_DATE AS PJV_GRN_DATE,PO_NO AS PJV_PO,PO_DATE AS PJV_PO_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PJV_APP,H.APPROVED_DATE AS PJV_APP_DATE,INVOICE_NO AS PJV_INV_NO,INVOICE_DATE AS PJV_INV_DATE,INVOICE_AMOUNT AS PJV_INV_AMT,AMOUNT AS PJV_AMT,MAIN_ACCOUNT_CODE AS PJV_MAIN,SUB_ACCOUNT_CODE AS PJV_PARTY FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'PA' AND VOUCHER_DATE  >='2016-01-01' AND H.CANCELLED =0 AND SUB_ACCOUNT_CODE !='') AS PJV  ON PJV.PJV_GRN = INWTOGRN.GRN_NO AND PJV.PJV_GRN_DATE = INWTOGRN.GRN_DATE ) AS INWTOPJV LEFT JOIN (SELECT DISTINCT H.VOUCHER_NO AS DN_NO,H.VOUCHER_DATE AS DN_DATE,GRN_NO AS DN_GRN,GRN_DATE AS DN_GRN_DATE,PO_NO AS DN_PO,PO_DATE AS DN_PO_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS DN_APP, H.APPROVED_DATE AS DN_APP_DATE,INVOICE_NO AS DN_INV_NO,INVOICE_DATE AS DN_INV_DATE,INVOICE_AMOUNT AS DN_INV_AMT,AMOUNT AS DN_AMT,MAIN_ACCOUNT_CODE AS DN_MAIN,SUB_ACCOUNT_CODE AS DN_PARTY FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'DN' AND VOUCHER_DATE  >='2016-01-01' AND H.CANCELLED =0 AND SUB_ACCOUNT_CODE !='' AND GRN_NO !='' ) AS DN ON DN.DN_GRN = INWTOPJV.GRN_NO AND DN.DN_GRN_DATE = INWTOPJV.GRN_DATE ORDER BY INWARD_DATE,INWARD_NO;";
            System.out.println(str);
             }
            
           ResultSet  rsTemp =data.getResult(str);
           rsTemp.first();
           int Counter = 0;
           
            if(rsTemp.getRow()>0) {
            while(!rsTemp.isAfterLast()){
               // l++;
                 Counter ++;
                  objRow=objData.newRow();
                  Object[] rowData=new Object[55];
                        
                  
                  //EITLERPGLOBAL.formatDate(rsTemp.getString("DELIV_DATE"));
                    rowData[0]=UtilFunctions.getString(rsTemp,"INWARD_NO","");
                    rowData[1]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"INWARD_DATE",""));
                    rowData[2]=UtilFunctions.getString(rsTemp,"INW_SUPPLIER_CODE","");
                    rowData[3]=UtilFunctions.getString(rsTemp,"INW_SUPP_NAME","");
                    rowData[4]=UtilFunctions.getString(rsTemp,"CHALAN_NO","");
                    rowData[5]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"CHALAN_DATE",""));
                    rowData[6]=UtilFunctions.getString(rsTemp,"INW_INV_NO","");
                    rowData[7]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"INW_INV_DATE",""));
                    rowData[8]=UtilFunctions.getString(rsTemp,"INW_APP","");
                    rowData[9]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"INW_APP_DATE",""));
                    rowData[10]=UtilFunctions.getString(rsTemp,"MIR_NO","");
                    rowData[11]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"MIR_DATE",""));
                    rowData[12]=UtilFunctions.getString(rsTemp,"MIR_STATUS","");
                    rowData[13]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"MIR_APP_DATE",""));
                    rowData[14]=UtilFunctions.getString(rsTemp,"MIR_USER_NAME","");
                    rowData[15]=UtilFunctions.getString(rsTemp,"GRN_NO","");
                    rowData[16]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"GRN_DATE",""));
                    rowData[17]=UtilFunctions.getString(rsTemp,"GRN_APP","");
                    rowData[18]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"GRN_APP_DATE",""));
                    rowData[19]=UtilFunctions.getString(rsTemp,"PJV_NO","");
                    rowData[20]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PJV_DATE",""));
                    rowData[21]=UtilFunctions.getString(rsTemp,"PJV_AMT","");
                    rowData[22]=UtilFunctions.getString(rsTemp,"PJV_APP","");
                    rowData[23]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PJV_APP_DATE",""));
                    rowData[24]=UtilFunctions.getString(rsTemp,"PJV_INV_NO","");
                    rowData[25]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PJV_INV_DATE",""));
                    rowData[26]=UtilFunctions.getString(rsTemp,"PJV_INV_AMT","");
                    rowData[27]=UtilFunctions.getString(rsTemp,"PJV_MAIN","");
                    rowData[28]=UtilFunctions.getString(rsTemp,"PJV_PARTY","");
                    rowData[29]=UtilFunctions.getString(rsTemp,"DN_NO","");
                    rowData[30]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"DN_DATE",""));
                    rowData[31]=UtilFunctions.getString(rsTemp,"DN_APP","");
                    rowData[32]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"DN_APP_DATE",""));
                    rowData[33]=UtilFunctions.getString(rsTemp,"DN_AMT","");
                    rowData[34]=UtilFunctions.getString(rsTemp,"DN_MAIN","");
                    rowData[35]=UtilFunctions.getString(rsTemp,"DN_PARTY","");
                    rowData[36]=UtilFunctions.getString(rsTemp,"REQ_NO","");
                    rowData[37]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"REQ_DATE",""));
                    rowData[38]=UtilFunctions.getString(rsTemp,"PR_APP","");
                    rowData[39]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PR_APP_DATE",""));
                    rowData[40]=UtilFunctions.getString(rsTemp,"PR_DEPT_DESC","");
                    rowData[41]=UtilFunctions.getString(rsTemp,"INDENT_NO","");
                    rowData[42]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"INDENT_DATE",""));
                    rowData[43]=UtilFunctions.getString(rsTemp,"IND_APP","");
                    rowData[44]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"IND_APP_DATE",""));
                    rowData[45]=UtilFunctions.getString(rsTemp,"PO_NO","");
                    rowData[46]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PO_DATE",""));
                    rowData[47]=UtilFunctions.getString(rsTemp,"PO_APP","");
                    rowData[48]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PO_APP_DATE",""));
                    rowData[49]=UtilFunctions.getString(rsTemp,"PO_INQUIRY_NO","");
                    rowData[50]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PO_INQUIRY_DATE",""));
                    rowData[51]=UtilFunctions.getString(rsTemp,"PO_QUOTATION_NO","");
                    rowData[52]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PO_QUOTATION_DATE",""));       
                
                
                
                
                
                
                objData.AddRow(objRow);    
                DataModel.addRow(rowData);
                rsTemp.next();
            }
            }
            HashMap parameter=new HashMap();
            parameter.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            parameter.put("FROM_DATE",EITLERPGLOBAL.formatDate(FromDate));
         //   parameter.put("TO_DATE",EITLERPGLOBAL.formatDate(ToDate));
            parameter.put("INV_TYPE",InvoiceType);
            //parameter.put("BOOK_NAME",clsBook.getBookName(EITLERPGLOBAL.gCompanyID,BookCode));
            //parameter.put("TOTAL_INVOICE_NO",Integer.toString(l));
            
            //parameter.put("NAME","ORDER");
            //parameter.put("LAST_DATE","15/02/2014"
            
           // EITLERPGLOBAL.PAGE_BREAK=true;
        /////   new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/PurchasingFlowReport.rpt",parameter,objData);
          //  new TReportWriter.TReportEngine().PreviewReport("http://200.0.0.100:8080/SDMLERP/EITLERP/Reports/PurchasingFlowReport.rpt",parameter,objData);
            rsTemp.close();            
           
        }catch(SQLException e) {
            e.printStackTrace();
            
        }
    }
    
    
        private void formatGrid() {
        try {
           // objRow=objReportData.newRow();
            DataModel=new EITLTableModel();
            TResult.removeAll();
            TResult.setModel(DataModel);
            TResult.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
          
            
            DataModel.addColumn("INWARD_NO");
            DataModel.addColumn("INWARD_DATE");
            DataModel.addColumn("INW_SUPPLIER_CODE");
            DataModel.addColumn("INW_SUPP_NAME");
            DataModel.addColumn("CHALAN_NO");
            DataModel.addColumn("CHALAN_DATE");
            DataModel.addColumn("INW_INV_NO");
            DataModel.addColumn("INW_INV_DATE");
            DataModel.addColumn("INW_APP");
            DataModel.addColumn("INW_APP_DATE");
            DataModel.addColumn("MIR_NO");
            DataModel.addColumn("MIR_DATE");
            DataModel.addColumn("MIR_STATUS");
            DataModel.addColumn("MIR_APP_DATE");
            DataModel.addColumn("MIR_USER_NAME");
            DataModel.addColumn("GRN_NO");
            DataModel.addColumn("GRN_DATE");
            DataModel.addColumn("GRN_APP");
            DataModel.addColumn("GRN_APP_DATE");
            DataModel.addColumn("PJV_NO");
            DataModel.addColumn("PJV_DATE");
            DataModel.addColumn("PJV_AMT");
            DataModel.addColumn("PJV_APP");
            DataModel.addColumn("PJV_APP_DATE");
            DataModel.addColumn("PJV_INV_NO");
            DataModel.addColumn("PJV_INV_DATE");
            DataModel.addColumn("PJV_INV_AMT");
            DataModel.addColumn("PJV_MAIN");
            DataModel.addColumn("PJV_PARTY");
            DataModel.addColumn("DN_NO");
            DataModel.addColumn("DN_DATE");
            DataModel.addColumn("DN_APP");
            DataModel.addColumn("DN_APP_DATE");
            DataModel.addColumn("DN_AMT");
            DataModel.addColumn("DN_MAIN");
            DataModel.addColumn("DN_PARTY");
            DataModel.addColumn("REQ_NO");
            DataModel.addColumn("REQ_DATE");
            DataModel.addColumn("PR_APP");
            DataModel.addColumn("PR_APP_DATE");
            DataModel.addColumn("PR_DEPT_DESC");
            DataModel.addColumn("INDENT_NO");
            DataModel.addColumn("INDENT_DATE");
            DataModel.addColumn("IND_APP");
            DataModel.addColumn("IND_APP_DATE");
            DataModel.addColumn("PO_NO");
            DataModel.addColumn("PO_DATE");
            DataModel.addColumn("PO_APP");
            DataModel.addColumn("PO_APP_DATE");
            DataModel.addColumn("PO_INQUIRY_NO");
            DataModel.addColumn("PO_INQUIRY_DATE");
            DataModel.addColumn("PO_QUOTATION_NO");
            DataModel.addColumn("PO_QUOTATION_DATE");

            
            
           
            
            RowFormat =new EITLTableCellRenderer();
            
            for(int j=0;j<TResult.getColumnCount();j++) {
                TResult.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
        }
        catch(Exception e) {
            
        }
                
    }
    
    
    
    private void formatGridSummary() {
        try {
           // objRow=objReportData.newRow();
            DataModel=new EITLTableModel();
            TResult1.removeAll();
            TResult1.setModel(DataModel);
            TResult1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            
            DataModel.addColumn("INWARD_NO");
            DataModel.addColumn("INWARD_DATE");
            DataModel.addColumn("INW_SUPPLIER_CODE");
            DataModel.addColumn("INW_SUPP_NAME");
            DataModel.addColumn("MIR_NO");
            DataModel.addColumn("MIR_DATE");
            DataModel.addColumn("MIR_STATUS");
            DataModel.addColumn("MIR_APP_DATE");
            DataModel.addColumn("MIR_USER_NAME");
            DataModel.addColumn("GRN_NO");
            DataModel.addColumn("GRN_DATE");
            DataModel.addColumn("GRN_APP");
            DataModel.addColumn("GRN_APP_DATE");
            DataModel.addColumn("PJV_NO");
            DataModel.addColumn("PJV_DATE");
            DataModel.addColumn("PJV_APP");
            DataModel.addColumn("PJV_APP_DATE");
          
           
            RowFormat =new EITLTableCellRenderer();
            
            for(int j=0;j<TResult1.getColumnCount();j++) {
                TResult1.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
        }
        catch(Exception e) {
            
        }
                
    }
        
   
        private void GeneratPurchasingFlowSummary(String FromDate,String ToDate,String Type, String InvoiceType){
        try{
            String Condition="";
            int l=0;
             String str ="";
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("INWARD_NO");
objData.AddColumn("INWARD_DATE");
objData.AddColumn("INW_SUPPLIER_CODE");
objData.AddColumn("INW_SUPP_NAME");
objData.AddColumn("MIR_NO");
objData.AddColumn("MIR_DATE");
objData.AddColumn("MIR_STATUS");
objData.AddColumn("MIR_APP_DATE");
objData.AddColumn("MIR_USER_NAME");
objData.AddColumn("GRN_NO");
objData.AddColumn("GRN_DATE");
objData.AddColumn("GRN_APP");
objData.AddColumn("GRN_APP_DATE");
objData.AddColumn("PJV_NO");
objData.AddColumn("PJV_DATE");
objData.AddColumn("PJV_APP");
objData.AddColumn("PJV_APP_DATE");

  
            
            
            
            
          
            if(Type.equals("2"))
            {
             str="SELECT DISTINCT INWARD_NO,INWARD_DATE,INW_SUPPLIER_CODE,INW_SUPP_NAME,MIR_NO,MIR_DATE,MIR_STATUS,MIR_APP_DATE,MIR_USER_NAME,GRN_NO,GRN_DATE,GRN_APP,GRN_APP_DATE,PJV_NO,PJV_DATE,PJV_APP,PJV_APP_DATE FROM (SELECT INWARD_NO,INWARD_DATE,INW_SUPPLIER_CODE,INW_SUPP_NAME,CHALAN_NO,CHALAN_DATE,INW_INV_NO,INW_INV_DATE,INW_APP,INW_APP_DATE,MIR_NO,MIR_DATE,MIR_STATUS,MIR_APP_DATE,MIR_USER_NAME,GRN_NO,GRN_DATE,GRN_APP,GRN_APP_DATE,PJV_NO,PJV_DATE,PJV_AMT,PJV_APP,PJV_APP_DATE,PJV_INV_NO,PJV_INV_DATE,PJV_INV_AMT,PJV_MAIN,PJV_PARTY,DN_NO,DN_DATE,DN_APP,DN_APP_DATE,DN_AMT,DN_MAIN,DN_PARTY,REQ_NO,REQ_DATE,PR_APP,PR_APP_DATE,PR_DEPT_DESC,INDENT_NO,INDENT_DATE,IND_APP,IND_APP_DATE,PO_NO,PO_DATE,PO_APP,PO_APP_DATE,PO_INQUIRY_NO,PO_INQUIRY_DATE,PO_QUOTATION_NO,PO_QUOTATION_DATE FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE ,INVOICE_NO AS INW_INV_NO,INVOICE_DATE AS INW_INV_DATE,I.SUPPLIER_CODE AS INW_SUPPLIER_CODE,SUPP_NAME AS INW_SUPP_NAME,CASE WHEN  I.APPROVED =1 THEN 'APPROVED' WHEN  I.APPROVED =0 THEN 'PENDING' END AS INW_APP,I.APPROVED_DATE AS INW_APP_DATE FROM DINESHMILLS.D_INV_GATE_INWARD_HEADER I,DINESHMILLS.D_COM_SUPP_MASTER S WHERE INWARD_DATE >= '"+FromDate+"' AND INWARD_DATE <= '"+ToDate+"' AND I.CANCELLED =0 AND I.SUPPLIER_CODE = S.SUPPLIER_CODE) AS INWARD LEFT JOIN  (SELECT * FROM  (SELECT DISTINCT H.MIR_NO,H.MIR_DATE,D.PO_NO AS MIR_PO_NO,H.APPROVED AS MIR_APP,H.APPROVED_DATE AS MIR_APP_DATE,C.USER_ID AS MIR_USERID, USER_NAME AS MIR_USER_NAME, CASE WHEN STATUS ='W' THEN 'PENDING' WHEN STATUS = 'F' THEN 'APPROVED' END AS MIR_STATUS,GATEPASS_NO AS MIR_GATEPASS_NO FROM DINESHMILLS.D_INV_MIR_HEADER H,DINESHMILLS.D_INV_MIR_DETAIL D,DINESHMILLS.D_COM_DOC_DATA C,DINESHMILLS.D_COM_USER_MASTER U  WHERE MIR_DATE >= '2016-01-01' AND H.MIR_NO = D.MIR_NO AND MODULE_ID IN (5,6) AND DOC_NO = H.MIR_NO AND C.STATUS IN ('W','F') AND U.USER_ID = C.USER_ID AND H.CANCELLED =0 ) AS MIR  LEFT JOIN  (SELECT * FROM  (SELECT DISTINCT H.PO_NO,H.PO_DATE,QUOTATION_NO AS PO_QUOTATION_NO,QUOTATION_DATE AS PO_QUOTATION_DATE,INQUIRY_NO AS PO_INQUIRY_NO,INQUIRY_DATE AS PO_INQUIRY_DATE ,INDENT_NO AS PO_INDENT_NO,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PO_APP,H.APPROVED_DATE AS PO_APP_DATE FROM DINESHMILLS.D_PUR_PO_HEADER H,DINESHMILLS.D_PUR_PO_DETAIL D WHERE H.PO_NO = D.PO_NO AND PO_DATE >='2015-04-01' AND H.CANCELLED =0) AS PO  LEFT JOIN  (SELECT * FROM (SELECT DISTINCT H.INDENT_NO,H.INDENT_DATE,D.MR_NO AS IND_MR_NO,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS IND_APP,APPROVED_DATE AS IND_APP_DATE FROM  DINESHMILLS.D_INV_INDENT_HEADER H,DINESHMILLS.D_INV_INDENT_DETAIL D WHERE H.INDENT_NO = D.INDENT_NO  AND INDENT_DATE >='2015-04-01' AND H.CANCELED =0) AS INDENT  LEFT JOIN  (SELECT DISTINCT H.REQ_NO,H.REQ_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PR_APP,APPROVED_DATE AS PR_APP_DATE,DEPT_ID AS PR_DEPT,DEPT_DESC AS PR_DEPT_DESC FROM  DINESHMILLS.D_INV_REQ_HEADER H,DINESHMILLS.D_INV_REQ_DETAIL D,DINESHMILLS.D_COM_DEPT_MASTER M WHERE H.REQ_NO = D.REQ_NO AND M.DEPT_ID = DEST_DEPT_ID AND REQ_DATE >='2015-04-01' AND H.CANCELED =0) AS PR  ON PR.REQ_NO = INDENT.IND_MR_NO ) AS PRMIR ON PRMIR.INDENT_NO = PO.PO_INDENT_NO ) AS PRMIRPO  ON PRMIRPO.PO_NO = MIR.MIR_PO_NO) AS PRTOMIR  ON INWARD.INWARD_NO = PRTOMIR.MIR_GATEPASS_NO) AS INWTOMIR  LEFT JOIN   (SELECT DISTINCT B.GRN_NO,B.GRN_DATE,A.MIR_NO AS GRN_MIR,  CASE WHEN  B.APPROVED =1 THEN 'APPROVED' WHEN  B.APPROVED =0 THEN 'PENDING' END AS GRN_APP,B.APPROVED_DATE AS GRN_APP_DATE  FROM DINESHMILLS.D_INV_GRN_DETAIL A,DINESHMILLS.D_INV_GRN_HEADER B WHERE A.GRN_NO = B.GRN_NO AND GRN_DATE >= '2016-01-01' AND B.CANCELLED =0 ) AS GRN  ON INWTOMIR.MIR_NO = GRN.GRN_MIR) AS INWTOGRN  LEFT JOIN  (SELECT DISTINCT H.VOUCHER_NO AS PJV_NO,H.VOUCHER_DATE AS PJV_DATE,GRN_NO AS PJV_GRN,GRN_DATE AS PJV_GRN_DATE,PO_NO AS PJV_PO,PO_DATE AS PJV_PO_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PJV_APP,H.APPROVED_DATE AS PJV_APP_DATE,INVOICE_NO AS PJV_INV_NO,INVOICE_DATE AS PJV_INV_DATE,INVOICE_AMOUNT AS PJV_INV_AMT,AMOUNT AS PJV_AMT,MAIN_ACCOUNT_CODE AS PJV_MAIN,SUB_ACCOUNT_CODE AS PJV_PARTY FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'PJ' AND VOUCHER_DATE  >='2016-01-01' AND H.CANCELLED =0 AND SUB_ACCOUNT_CODE !='') AS PJV  ON PJV.PJV_GRN = INWTOGRN.GRN_NO AND PJV.PJV_GRN_DATE = INWTOGRN.GRN_DATE ) AS INWTOPJV LEFT JOIN (SELECT DISTINCT H.VOUCHER_NO AS DN_NO,H.VOUCHER_DATE AS DN_DATE,GRN_NO AS DN_GRN,GRN_DATE AS DN_GRN_DATE,PO_NO AS DN_PO,PO_DATE AS DN_PO_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS DN_APP, H.APPROVED_DATE AS DN_APP_DATE,INVOICE_NO AS DN_INV_NO,INVOICE_DATE AS DN_INV_DATE,INVOICE_AMOUNT AS DN_INV_AMT,AMOUNT AS DN_AMT,MAIN_ACCOUNT_CODE AS DN_MAIN,SUB_ACCOUNT_CODE AS DN_PARTY FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'DN' AND VOUCHER_DATE  >='2016-01-01' AND H.CANCELLED =0 AND SUB_ACCOUNT_CODE !='' AND GRN_NO !='' ) AS DN ON DN.DN_GRN = INWTOPJV.GRN_NO AND DN.DN_GRN_DATE = INWTOPJV.GRN_DATE) AS SUMARY  ORDER BY INWARD_DATE,INWARD_NO";
            System.out.println(str);
            }
            
           if(Type.equals("1"))
           {
         //   str="SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE,INVOICE_NO,INVOICE_DATE,GRN.SUPPLIER_CODE,SUPP_NAME,GI_APPROVED,MIR_NO,MIR_DATE,MIR_APPROVED,GRN_NO,GRN_DATE,GRN_APPROVED,VOUCHER_NO,VOUCHER_DATE,V_APPROVED  FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE,INVOICE_NO,INVOICE_DATE,SUPPLIER_CODE,GI_APPROVED,MIR_NO,MIR_DATE,MIR_APPROVED,E.GRN_NO,E.GRN_DATE,GRN_APPROVED,VOUCHER_NO,VOUCHER_DATE,F.APPROVED AS V_APPROVED  FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE,INVOICE_NO,INVOICE_DATE,SUPPLIER_CODE,GI_APPROVED,C.MIR_NO,MIR_DATE,MIR_APPROVED,GRN_NO,GRN_DATE,D.APPROVED AS GRN_APPROVED FROM (SELECT INWARD_NO,INWARD_DATE,A.CHALAN_NO,A.CHALAN_DATE,A.INVOICE_NO,A.INVOICE_DATE,SUPPLIER_CODE,A.APPROVED AS GI_APPROVED,MIR_NO,MIR_DATE,B.APPROVED AS MIR_APPROVED FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE,INVOICE_NO,INVOICE_DATE,SUPPLIER_CODE,APPROVED FROM DINESHMILLSA.D_INV_GATE_INWARD_HEADER WHERE INWARD_DATE >= '"+FromDate+"' AND CANCELLED =0 ) AS A LEFT JOIN (SELECT * FROM DINESHMILLSA.D_INV_MIR_HEADER WHERE MIR_DATE >= '"+FromDate+"') AS B ON INWARD_NO = GATEPASS_NO) AS C LEFT JOIN (SELECT DISTINCT B.GRN_NO,B.GRN_DATE,A.MIR_NO,B.APPROVED FROM DINESHMILLSA.D_INV_GRN_DETAIL A,DINESHMILLSA.D_INV_GRN_HEADER B WHERE A.GRN_NO = B.GRN_NO AND GRN_DATE >= '"+FromDate+"' ) AS D ON C.MIR_NO = D.MIR_NO ) AS E LEFT JOIN (SELECT DISTINCT H.VOUCHER_NO,H.VOUCHER_DATE,GRN_NO,GRN_DATE,PO_NO,PO_DATE,H.APPROVED FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'PA' AND VOUCHER_DATE  >='"+FromDate+"') AS F  ON E.GRN_NO = F.GRN_NO AND E.GRN_DATE = F.GRN_DATE  ) AS GRN LEFT JOIN (SELECT * FROM DINESHMILLSA.D_COM_SUPP_MASTER ) AS SM ON GRN.SUPPLIER_CODE = SM.SUPPLIER_CODE ORDER BY INWARD_DATE,INWARD_NO";
            str="SELECT DISTINCT INWARD_NO,INWARD_DATE,INW_SUPPLIER_CODE,INW_SUPP_NAMEMIR_NO,MIR_DATE,MIR_STATUS,MIR_APP_DATE,GRN_NO,GRN_DATE,GRN_APP,GRN_APP_DATE,PJV_NO,PJV_DATE,PJV_APP,PJV_APP_DATE FROM (SELECT INWARD_NO,INWARD_DATE,INW_SUPPLIER_CODE,INW_SUPP_NAME,CHALAN_NO,CHALAN_DATE,INW_INV_NO,INW_INV_DATE,INW_APP,INW_APP_DATE,MIR_NO,MIR_DATE,MIR_STATUS,MIR_APP_DATE,MIR_USER_NAME,GRN_NO,GRN_DATE,GRN_APP,GRN_APP_DATE,PJV_NO,PJV_DATE,PJV_AMT,PJV_APP,PJV_APP_DATE,PJV_INV_NO,PJV_INV_DATE,PJV_INV_AMT,PJV_MAIN,PJV_PARTY,DN_NO,DN_DATE,DN_APP,DN_APP_DATE,DN_AMT,DN_MAIN,DN_PARTY,REQ_NO,REQ_DATE,PR_APP,PR_APP_DATE,PR_DEPT_DESC,INDENT_NO,INDENT_DATE,IND_APP,IND_APP_DATE,PO_NO,PO_DATE,PO_APP,PO_APP_DATE,PO_INQUIRY_NO,PO_INQUIRY_DATE,PO_QUOTATION_NO,PO_QUOTATION_DATE FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT INWARD_NO,INWARD_DATE,CHALAN_NO,CHALAN_DATE ,INVOICE_NO AS INW_INV_NO,INVOICE_DATE AS INW_INV_DATE,I.SUPPLIER_CODE AS INW_SUPPLIER_CODE,SUPP_NAME AS INW_SUPP_NAME,CASE WHEN  I.APPROVED =1 THEN 'APPROVED' WHEN  I.APPROVED =0 THEN 'PENDING' END AS INW_APP,I.APPROVED_DATE AS INW_APP_DATE FROM DINESHMILLSA.D_INV_GATE_INWARD_HEADER I,DINESHMILLSA.D_COM_SUPP_MASTER S WHERE INWARD_DATE >= '"+FromDate+"' AND INWARD_DATE <= '"+ToDate+"'  AND I.CANCELLED =0 AND I.SUPPLIER_CODE = S.SUPPLIER_CODE) AS INWARD LEFT JOIN  (SELECT * FROM  (SELECT DISTINCT H.MIR_NO,H.MIR_DATE,D.PO_NO AS MIR_PO_NO,H.APPROVED AS MIR_APP,H.APPROVED_DATE AS MIR_APP_DATE,C.USER_ID AS MIR_USERID, USER_NAME AS MIR_USER_NAME, CASE WHEN STATUS ='W' THEN 'PENDING' WHEN STATUS = 'F' THEN 'APPROVED' END AS MIR_STATUS,GATEPASS_NO AS MIR_GATEPASS_NO FROM DINESHMILLSA.D_INV_MIR_HEADER H,DINESHMILLSA.D_INV_MIR_DETAIL D,DINESHMILLSA.D_COM_DOC_DATA C,DINESHMILLSA.D_COM_USER_MASTER U  WHERE MIR_DATE >= '2016-01-01' AND H.MIR_NO = D.MIR_NO AND MODULE_ID IN (5,6) AND DOC_NO = H.MIR_NO AND C.STATUS IN ('W','F') AND U.USER_ID = C.USER_ID AND H.CANCELLED =0 ) AS MIR  LEFT JOIN  (SELECT * FROM  (SELECT DISTINCT H.PO_NO,H.PO_DATE,QUOTATION_NO AS PO_QUOTATION_NO,QUOTATION_DATE AS PO_QUOTATION_DATE,INQUIRY_NO AS PO_INQUIRY_NO,INQUIRY_DATE AS PO_INQUIRY_DATE ,INDENT_NO AS PO_INDENT_NO,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PO_APP,H.APPROVED_DATE AS PO_APP_DATE FROM DINESHMILLSA.D_PUR_PO_HEADER H,DINESHMILLSA.D_PUR_PO_DETAIL D WHERE H.PO_NO = D.PO_NO AND PO_DATE >='2015-04-01' AND H.CANCELLED =0) AS PO  LEFT JOIN  (SELECT * FROM (SELECT DISTINCT H.INDENT_NO,H.INDENT_DATE,D.MR_NO AS IND_MR_NO,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS IND_APP,APPROVED_DATE AS IND_APP_DATE FROM  DINESHMILLSA.D_INV_INDENT_HEADER H,DINESHMILLSA.D_INV_INDENT_DETAIL D WHERE H.INDENT_NO = D.INDENT_NO  AND INDENT_DATE >='2015-04-01' AND H.CANCELED =0) AS INDENT  LEFT JOIN  (SELECT DISTINCT H.REQ_NO,H.REQ_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PR_APP,APPROVED_DATE AS PR_APP_DATE,DEPT_ID AS PR_DEPT,DEPT_DESC AS PR_DEPT_DESC FROM  DINESHMILLSA.D_INV_REQ_HEADER H,DINESHMILLSA.D_INV_REQ_DETAIL D,DINESHMILLSA.D_COM_DEPT_MASTER M WHERE H.REQ_NO = D.REQ_NO AND M.DEPT_ID = DEST_DEPT_ID AND REQ_DATE >='2015-04-01' AND H.CANCELED =0) AS PR  ON PR.REQ_NO = INDENT.IND_MR_NO ) AS PRMIR ON PRMIR.INDENT_NO = PO.PO_INDENT_NO ) AS PRMIRPO  ON PRMIRPO.PO_NO = MIR.MIR_PO_NO) AS PRTOMIR  ON INWARD.INWARD_NO = PRTOMIR.MIR_GATEPASS_NO) AS INWTOMIR  LEFT JOIN   (SELECT DISTINCT B.GRN_NO,B.GRN_DATE,A.MIR_NO AS GRN_MIR,  CASE WHEN  B.APPROVED =1 THEN 'APPROVED' WHEN  B.APPROVED =0 THEN 'PENDING' END AS GRN_APP,B.APPROVED_DATE AS GRN_APP_DATE  FROM DINESHMILLSA.D_INV_GRN_DETAIL A,DINESHMILLSA.D_INV_GRN_HEADER B WHERE A.GRN_NO = B.GRN_NO AND GRN_DATE >= '2016-01-01' AND B.CANCELLED =0 ) AS GRN  ON INWTOMIR.MIR_NO = GRN.GRN_MIR) AS INWTOGRN  LEFT JOIN  (SELECT DISTINCT H.VOUCHER_NO AS PJV_NO,H.VOUCHER_DATE AS PJV_DATE,GRN_NO AS PJV_GRN,GRN_DATE AS PJV_GRN_DATE,PO_NO AS PJV_PO,PO_DATE AS PJV_PO_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS PJV_APP,H.APPROVED_DATE AS PJV_APP_DATE,INVOICE_NO AS PJV_INV_NO,INVOICE_DATE AS PJV_INV_DATE,INVOICE_AMOUNT AS PJV_INV_AMT,AMOUNT AS PJV_AMT,MAIN_ACCOUNT_CODE AS PJV_MAIN,SUB_ACCOUNT_CODE AS PJV_PARTY FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'PJ' AND VOUCHER_DATE  >='2016-01-01' AND H.CANCELLED =0 AND SUB_ACCOUNT_CODE !='') AS PJV  ON PJV.PJV_GRN = INWTOGRN.GRN_NO AND PJV.PJV_GRN_DATE = INWTOGRN.GRN_DATE ) AS INWTOPJV LEFT JOIN (SELECT DISTINCT H.VOUCHER_NO AS DN_NO,H.VOUCHER_DATE AS DN_DATE,GRN_NO AS DN_GRN,GRN_DATE AS DN_GRN_DATE,PO_NO AS DN_PO,PO_DATE AS DN_PO_DATE,CASE WHEN  H.APPROVED =1 THEN 'APPROVED' WHEN  H.APPROVED =0 THEN 'PENDING' END AS DN_APP, H.APPROVED_DATE AS DN_APP_DATE,INVOICE_NO AS DN_INV_NO,INVOICE_DATE AS DN_INV_DATE,INVOICE_AMOUNT AS DN_INV_AMT,AMOUNT AS DN_AMT,MAIN_ACCOUNT_CODE AS DN_MAIN,SUB_ACCOUNT_CODE AS DN_PARTY FROM  FINANCE.D_FIN_VOUCHER_HEADER H ,FINANCE.D_FIN_VOUCHER_DETAIL D WHERE H.VOUCHER_NO = D.VOUCHER_NO AND SUBSTRING(H.VOUCHER_NO,1,2) = 'DN' AND VOUCHER_DATE  >='2016-01-01' AND H.CANCELLED =0 AND SUB_ACCOUNT_CODE !='' AND GRN_NO !='' ) AS DN ON DN.DN_GRN = INWTOPJV.GRN_NO AND DN.DN_GRN_DATE = INWTOPJV.GRN_DATE ) AS SUMARY  ORDER BY INWARD_DATE,INWARD_NO ";
            System.out.println(str);
             }
            
           ResultSet  rsTemp =data.getResult(str);
           rsTemp.first();
           int Counter = 0;
           
            if(rsTemp.getRow()>0) {
            while(!rsTemp.isAfterLast()){
               // l++;
                 Counter ++;
                  objRow=objData.newRow();
                  Object[] rowData=new Object[18];
                    rowData[0]=UtilFunctions.getString(rsTemp,"INWARD_NO","");
                    rowData[1]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"INWARD_DATE",""));
                    rowData[2]=UtilFunctions.getString(rsTemp,"INW_SUPPLIER_CODE","");
                    rowData[3]=UtilFunctions.getString(rsTemp,"INW_SUPP_NAME","");
                    rowData[4]=UtilFunctions.getString(rsTemp,"MIR_NO","");
                    rowData[5]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"MIR_DATE",""));
                    rowData[6]=UtilFunctions.getString(rsTemp,"MIR_STATUS","");
                    rowData[7]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"MIR_APP_DATE",""));
                    rowData[8]=UtilFunctions.getString(rsTemp,"MIR_USER_NAME","");
                    rowData[9]=UtilFunctions.getString(rsTemp,"GRN_NO","");
                    rowData[10]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"GRN_DATE",""));
                    rowData[11]=UtilFunctions.getString(rsTemp,"GRN_APP","");
                    rowData[12]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"GRN_APP_DATE",""));
                    rowData[13]=UtilFunctions.getString(rsTemp,"PJV_NO","");
                    rowData[14]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PJV_DATE",""));
                    rowData[15]=UtilFunctions.getString(rsTemp,"PJV_AMT","");
                    rowData[16]=UtilFunctions.getString(rsTemp,"PJV_APP","");
                    rowData[17]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTemp,"PJV_APP_DATE",""));
                
                
                
                
                
                
                objData.AddRow(objRow);    
                DataModel.addRow(rowData);
                rsTemp.next();
            }
            }
            HashMap parameter=new HashMap();
            parameter.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            parameter.put("FROM_DATE",EITLERPGLOBAL.formatDate(FromDate));
         //   parameter.put("TO_DATE",EITLERPGLOBAL.formatDate(ToDate));
            parameter.put("INV_TYPE",InvoiceType);
            //parameter.put("BOOK_NAME",clsBook.getBookName(EITLERPGLOBAL.gCompanyID,BookCode));
            //parameter.put("TOTAL_INVOICE_NO",Integer.toString(l));
            
            //parameter.put("NAME","ORDER");
            //parameter.put("LAST_DATE","15/02/2014"
            
           // EITLERPGLOBAL.PAGE_BREAK=true;
        /////   new TReportWriter.TReportEngine().PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/PurchasingFlowReport.rpt",parameter,objData);
          //  new TReportWriter.TReportEngine().PreviewReport("http://200.0.0.100:8080/SDMLERP/EITLERP/Reports/PurchasingFlowReport.rpt",parameter,objData);
            rsTemp.close();            
           
        }catch(SQLException e) {
            e.printStackTrace();
            
        }
    }
    
    
}
