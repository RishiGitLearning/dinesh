/*
 * trexport.java
 *
 * Created on March 13, 2008, 10:55 AM
 */

//package Templates.Other;
package EITLERP.Finance.Util;

/**
 *
 * @author  nitin
 */
import java.sql.*;
import java.util.*;
import java.io.*;
import EITLERP.*;
import EITLERP.Stores.*;
import TReportWriter.*;
import TReportWriter.SimpleDataProvider.*;
import java.awt.*;
import javax.swing.* ;
import EITLERP.Sales.clsSalesParty;
import EITLERP.Finance.*;
import java.math.BigDecimal;


public class frmDepositExport extends javax.swing.JApplet {
    private EITLComboModel cmbSelectTypeModel;
    private Vector sVector ;
    private Vector gVector;
    private String BookCodeList = "";
    /** Initializes the applet trexport */
    public void init() {
        sVector = new Vector();
        gVector = new Vector();
        initComponents();
        setSize(380,390);
        GenerateCombo();
        //txtFromDate.setText("01/03/2011");
        //txtToDate.setText("31/03/2011");
        txtFromDate.requestFocus();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        bgDepositType = new javax.swing.ButtonGroup();
        bgFreshorRenewal = new javax.swing.ButtonGroup();
        bg8224 = new javax.swing.ButtonGroup();
        bg5839 = new javax.swing.ButtonGroup();
        txtFromDate = new javax.swing.JTextField();
        lblFromDate = new javax.swing.JLabel();
        lblToDate = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        lblSaveFile = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        cmdShowFileDialog = new javax.swing.JButton();
        cmdWarrant = new javax.swing.JButton();
        cmdDeposit = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        cmbSelectType = new javax.swing.JComboBox();
        lblSelectType = new javax.swing.JLabel();
        OpgLD = new javax.swing.JRadioButton();
        OpgFD = new javax.swing.JRadioButton();
        OpgCD = new javax.swing.JRadioButton();
        OpgDepositNone = new javax.swing.JRadioButton();
        OpgFresh = new javax.swing.JRadioButton();
        OpgRenewal = new javax.swing.JRadioButton();
        OpgFreshorRenewalNone = new javax.swing.JRadioButton();
        Opg84 = new javax.swing.JRadioButton();
        Opg24 = new javax.swing.JRadioButton();
        Opg82or24None = new javax.swing.JRadioButton();
        cmdBook = new javax.swing.JButton();
        Opg58 = new javax.swing.JRadioButton();
        Opg39 = new javax.swing.JRadioButton();
        Opg58or39None = new javax.swing.JRadioButton();
        cmdBook5839 = new javax.swing.JButton();
        cmdcd24 = new javax.swing.JButton();
        cmdSalesInt = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        getContentPane().setLayout(null);

        txtFromDate.setColumns(15);
        txtFromDate.setNextFocusableComponent(txtToDate);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 42, 90, 19);

        lblFromDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromDate.setText("From Date :");
        getContentPane().add(lblFromDate);
        lblFromDate.setBounds(10, 44, 80, 15);

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To Date :");
        getContentPane().add(lblToDate);
        lblToDate.setBounds(190, 44, 65, 15);

        txtToDate.setColumns(15);
        txtToDate.setNextFocusableComponent(cmbSelectType);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(261, 42, 90, 19);

        lblSaveFile.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSaveFile.setText("Save File :");
        getContentPane().add(lblSaveFile);
        lblSaveFile.setBounds(8, 306, 65, 15);

        txtFile.setColumns(15);
        txtFile.setNextFocusableComponent(cmdShowFileDialog);
        txtFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFileKeyPressed(evt);
            }
        });

        getContentPane().add(txtFile);
        txtFile.setBounds(77, 304, 247, 19);

        cmdShowFileDialog.setText("Export TR");
        cmdShowFileDialog.setNextFocusableComponent(cmdDeposit);
        cmdShowFileDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowFileDialogActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShowFileDialog);
        cmdShowFileDialog.setBounds(328, 303, 30, 20);

        cmdWarrant.setText("Warrant");
        cmdWarrant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdWarrantActionPerformed(evt);
            }
        });

        getContentPane().add(cmdWarrant);
        cmdWarrant.setBounds(98, 336, 86, 20);

        cmdDeposit.setText("Deposit");
        cmdDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDepositActionPerformed(evt);
            }
        });

        getContentPane().add(cmdDeposit);
        cmdDeposit.setBounds(8, 335, 87, 20);

        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHeader.setText("GENERATE EXPORT DATA FROM ERP FOR COBOL");
        getContentPane().add(lblHeader);
        lblHeader.setBounds(12, 11, 351, 15);

        cmbSelectType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSelectTypeItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbSelectType);
        cmbSelectType.setBounds(94, 70, 256, 21);

        lblSelectType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSelectType.setText("Select Type :");
        getContentPane().add(lblSelectType);
        lblSelectType.setBounds(9, 72, 80, 15);

        OpgLD.setText(" LD");
        bgDepositType.add(OpgLD);
        getContentPane().add(OpgLD);
        OpgLD.setBounds(14, 123, 55, 17);

        OpgFD.setText(" FD");
        bgDepositType.add(OpgFD);
        getContentPane().add(OpgFD);
        OpgFD.setBounds(81, 123, 55, 17);

        OpgCD.setText(" CD");
        bgDepositType.add(OpgCD);
        getContentPane().add(OpgCD);
        OpgCD.setBounds(152, 122, 55, 17);

        OpgDepositNone.setSelected(true);
        OpgDepositNone.setText(" NONE");
        bgDepositType.add(OpgDepositNone);
        getContentPane().add(OpgDepositNone);
        OpgDepositNone.setBounds(225, 121, 80, 17);

        OpgFresh.setText(" FRESH");
        bgFreshorRenewal.add(OpgFresh);
        getContentPane().add(OpgFresh);
        OpgFresh.setBounds(20, 149, 69, 17);

        OpgRenewal.setText(" RENEWAL");
        bgFreshorRenewal.add(OpgRenewal);
        getContentPane().add(OpgRenewal);
        OpgRenewal.setBounds(98, 149, 95, 17);

        OpgFreshorRenewalNone.setSelected(true);
        OpgFreshorRenewalNone.setText(" NONE");
        bgFreshorRenewal.add(OpgFreshorRenewalNone);
        getContentPane().add(OpgFreshorRenewalNone);
        OpgFreshorRenewalNone.setBounds(199, 148, 80, 17);

        Opg84.setText("87");
        bg8224.add(Opg84);
        getContentPane().add(Opg84);
        Opg84.setBounds(19, 176, 69, 17);

        Opg24.setText(" 24");
        bg8224.add(Opg24);
        getContentPane().add(Opg24);
        Opg24.setBounds(97, 176, 95, 17);

        Opg82or24None.setSelected(true);
        Opg82or24None.setText(" NONE");
        bg8224.add(Opg82or24None);
        getContentPane().add(Opg82or24None);
        Opg82or24None.setBounds(198, 175, 80, 17);

        cmdBook.setText("Book 87 & 24");
        cmdBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBookActionPerformed(evt);
            }
        });

        getContentPane().add(cmdBook);
        cmdBook.setBounds(190, 337, 119, 20);

        Opg58.setText(" 58");
        bg5839.add(Opg58);
        getContentPane().add(Opg58);
        Opg58.setBounds(20, 200, 69, 17);

        Opg39.setText(" 39");
        bg5839.add(Opg39);
        getContentPane().add(Opg39);
        Opg39.setBounds(97, 200, 95, 17);

        Opg58or39None.setSelected(true);
        Opg58or39None.setText(" NONE");
        bg5839.add(Opg58or39None);
        getContentPane().add(Opg58or39None);
        Opg58or39None.setBounds(198, 200, 80, 17);

        cmdBook5839.setText("Book 58 & 39");
        cmdBook5839.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBook5839ActionPerformed(evt);
            }
        });

        getContentPane().add(cmdBook5839);
        cmdBook5839.setBounds(0, 360, 119, 20);

        cmdcd24.setText("CD 24 yearly");
        cmdcd24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdcd24ActionPerformed(evt);
            }
        });

        getContentPane().add(cmdcd24);
        cmdcd24.setBounds(240, 360, 120, 20);

        cmdSalesInt.setText("Sales Int.");
        cmdSalesInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSalesIntActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSalesInt);
        cmdSalesInt.setBounds(120, 360, 120, 20);

        jMenu1.setText("Menu");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

    }//GEN-END:initComponents

    private void cmdSalesIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSalesIntActionPerformed
        // TODO add your handling code here:
       
        try{
            GenerateSalesIntYearly();
            
            String Line="";
            int Counter = 0;
            ResultSet rsFile = null;
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText().trim())));
            //BufferedWriter aFile=new BufferedWriter(new FileWriter(new File("/root/Desktop/aaa.txt")));
            rsFile = EITLERP.data.getResult("SELECT * FROM TR_COBOL ",FinanceGlobal.FinURL);
            rsFile.first();
            while (!rsFile.isAfterLast()) {
                Counter++;
                if(Counter==127) {
                    boolean halt=true;
                }
                Line = "";
                Line = rsFile.getString("TR_REC_TYPE");
                Line += rsFile.getString("TR_INV_AGSR");
                Line += rsFile.getString("TR_DIV_CODE");
                Line += rsFile.getString("BOOK_CODE");
                Line += rsFile.getString("TR_YR");
                Line += rsFile.getString("TR_MT");
                Line += rsFile.getString("TR_DT");
                Line += rsFile.getString("TR_REF_AL");
                Line += rsFile.getString("TR_REF_NO");
                Line += rsFile.getString("TR_MAIN_CODE");
                Line += rsFile.getString("TR_SUB_CODE");
                Line += rsFile.getString("TR_CHEQUE_NO");
                Line += rsFile.getString("TR_REF_SR");
                Line += rsFile.getString("TR_CHQ_BILL_DATE");
                Line += rsFile.getString("TR_DESCRIPTION");
                Line += rsFile.getString("SALETAX_CODE");
                Line += rsFile.getString("TR_AMT");
                Line += rsFile.getString("TR_AMT_SIGN");
                Line += rsFile.getString("TR_ALLOC_CODE");
                Line += rsFile.getString("TR_PO_AL");
                Line += rsFile.getString("TR_PO_NO");
                Line += rsFile.getString("TR_PO_FLG");
                Line += rsFile.getString("TR_BILL_AL");
                Line += rsFile.getString("TR_BILL_NO");
                Line += rsFile.getString("TR_PO_FL");
                Line += rsFile.getString("TR_INV_Y1Y2");
                Line += rsFile.getString("TR_DIR_IND");
                Line += rsFile.getString("TR_TRAN_CODE");
                System.out.println("Counter = " + Counter + " Length = " +Line.length());
                aFile.write(Line);
                aFile.newLine();
                rsFile.next();
            }
            aFile.close();
        } catch(Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_cmdSalesIntActionPerformed
    
    private void cmdcd24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdcd24ActionPerformed
        // TODO add your handling code here:
        try {
            GenerateCD24Yearly();
            
            String Line="";
            int Counter = 0;
            ResultSet rsFile = null;
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText().trim())));
            rsFile = EITLERP.data.getResult("SELECT * FROM TR_COBOL ",FinanceGlobal.FinURL);
            rsFile.first();
            while (!rsFile.isAfterLast()) {
                Counter++;
                if(Counter==127) {
                    boolean halt=true;
                }
                Line = "";
                Line = rsFile.getString("TR_REC_TYPE");
                Line += rsFile.getString("TR_INV_AGSR");
                Line += rsFile.getString("TR_DIV_CODE");
                Line += rsFile.getString("BOOK_CODE");
                Line += rsFile.getString("TR_YR");
                Line += rsFile.getString("TR_MT");
                Line += rsFile.getString("TR_DT");
                Line += rsFile.getString("TR_REF_AL");
                Line += rsFile.getString("TR_REF_NO");
                Line += rsFile.getString("TR_MAIN_CODE");
                Line += rsFile.getString("TR_SUB_CODE");
                Line += rsFile.getString("TR_CHEQUE_NO");
                Line += rsFile.getString("TR_REF_SR");
                Line += rsFile.getString("TR_CHQ_BILL_DATE");
                Line += rsFile.getString("TR_DESCRIPTION");
                Line += rsFile.getString("SALETAX_CODE");
                Line += rsFile.getString("TR_AMT");
                Line += rsFile.getString("TR_AMT_SIGN");
                Line += rsFile.getString("TR_ALLOC_CODE");
                Line += rsFile.getString("TR_PO_AL");
                Line += rsFile.getString("TR_PO_NO");
                Line += rsFile.getString("TR_PO_FLG");
                Line += rsFile.getString("TR_BILL_AL");
                Line += rsFile.getString("TR_BILL_NO");
                Line += rsFile.getString("TR_PO_FL");
                Line += rsFile.getString("TR_INV_Y1Y2");
                Line += rsFile.getString("TR_DIR_IND");
                Line += rsFile.getString("TR_TRAN_CODE");
                System.out.println("Counter = " + Counter + " Length = " +Line.length());
                aFile.write(Line);
                aFile.newLine();
                rsFile.next();
            }
            aFile.close();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdcd24ActionPerformed
    
    private void cmdBook5839ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBook5839ActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(GenerateBookData5839()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
    }//GEN-LAST:event_cmdBook5839ActionPerformed
    
    private void cmdBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBookActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(GenerateBookData()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
    }//GEN-LAST:event_cmdBookActionPerformed
    
    private void txtFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFileKeyPressed
        // TODO add your handling code here:
        try {
            int DepoType = 0;
            int fORr = 0;
            int Book = 0;
            String FileName = "/root/Desktop/";
            if(evt.getKeyCode()==112) {
                if(cmbSelectType.getSelectedIndex()==1) {
                    if(OpgFD.isSelected()) {
                        DepoType = 1;
                    } else if(OpgLD.isSelected()) {
                        DepoType = 2;
                    } else if(OpgCD.isSelected()) {
                        DepoType = 3;
                    }
                    
                    if(OpgFresh.isSelected()) {
                        fORr = 1;
                    } else if(OpgRenewal.isSelected()) {
                        fORr = 2;
                    }
                    
                    if(DepoType==1 && fORr==1) {
                        FileName += "fdfr.txt";
                    } else if(DepoType==1 && fORr==2) {
                        FileName += "fdre.txt";
                    } else if(DepoType==2 && fORr==1) {
                        FileName += "ldfr.txt";
                    } else if(DepoType==2 && fORr==2) {
                        FileName += "ldre.txt";
                    } else if(DepoType==3 && fORr==1) {
                        FileName += "cdfr.txt";
                    } else if(DepoType==3 && fORr==2) {
                        FileName += "cdre.txt";
                    }
                    
                    txtFile.setText(FileName);
                }
                
                if(cmbSelectType.getSelectedIndex()==2) {
                    if(OpgFD.isSelected()) {
                        DepoType = 1;
                    } else if(OpgLD.isSelected()) {
                        DepoType = 2;
                    } else if(OpgCD.isSelected()) {
                        DepoType = 3;
                    }
                    if(DepoType==1) {
                        FileName += "fwrt.txt";
                    } else if(DepoType==2) {
                        FileName += "lwrt.txt";
                    } else if(DepoType==3) {
                        FileName += "cwrt.txt";
                    }
                    txtFile.setText(FileName);
                }
                
                if(cmbSelectType.getSelectedIndex()==3) {
                    if(OpgFD.isSelected()) {
                        DepoType = 1;
                    } else if(OpgLD.isSelected()) {
                        DepoType = 2;
                    } else if(OpgCD.isSelected()) {
                        DepoType = 3;
                    }
                    
                    if(Opg84.isSelected()) {
                        Book = 1;
                    } else if(Opg24.isSelected()) {
                        Book = 2;
                    }
                    
                    if(DepoType==1 && Book==1) {
                        FileName += "fd84.txt";
                    } else if(DepoType==1 && Book==2) {
                        FileName += "fd24.txt";
                    } else if(DepoType==2 && Book==1) {
                        FileName += "ld84.txt";
                    } else if(DepoType==2 && Book==2) {
                        FileName += "ld24.txt";
                    } else if(DepoType==3 && Book==1) {
                        FileName += "cd84.txt";
                    } else if(DepoType==3 && Book==2) {
                        FileName += "cd24.txt";
                    }
                    txtFile.setText(FileName);
                }
                
                if(cmbSelectType.getSelectedIndex()==4) {
                    if(OpgFD.isSelected()) {
                        DepoType = 1;
                    } else if(OpgLD.isSelected()) {
                        DepoType = 2;
                    } else if(OpgCD.isSelected()) {
                        DepoType = 3;
                    }
                    
                    if(Opg58.isSelected()) {
                        //Book = 1;
                        FileName += "fd58.txt";
                    } else if(Opg39.isSelected()) {
                        //Book = 2;
                        FileName += "fd39.txt";
                    }
                    txtFile.setText(FileName);
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtFileKeyPressed
    
    private void cmbSelectTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSelectTypeItemStateChanged
        // TODO add your handling code here:
        try {
            if(cmbSelectType.getSelectedIndex()==0) {
                txtFile.setEnabled(false);
                cmdShowFileDialog.setEnabled(false);
                OpgFD.setEnabled(false);
                OpgCD.setEnabled(false);
                OpgLD.setEnabled(false);
                OpgFresh.setEnabled(false);
                OpgRenewal.setEnabled(false);
                cmdDeposit.setEnabled(false);
                cmdWarrant.setEnabled(false);
                cmdBook.setEnabled(false);
                cmdSalesInt.setEnabled(false);
                //cmdcd24.setEnabled(false);
                OpgDepositNone.setEnabled(false);
                OpgFreshorRenewalNone.setEnabled(false);
                OpgFreshorRenewalNone.setSelected(true);
                Opg84.setEnabled(false);
                Opg24.setEnabled(false);
                Opg82or24None.setEnabled(false);
                OpgDepositNone.setSelected(true);
                
                Opg82or24None.setSelected(true);
                
                Opg58.setEnabled(false);
                Opg39.setEnabled(false);
                Opg58or39None.setEnabled(false);
                Opg58or39None.setSelected(true);
                cmdBook5839.setEnabled(false);
            } else if(cmbSelectType.getSelectedIndex()==1) {
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdDeposit.setEnabled(true);
                OpgFD.setEnabled(true);
                OpgCD.setEnabled(true);
                OpgLD.setEnabled(true);
                OpgFresh.setEnabled(true);
                OpgRenewal.setEnabled(true);
                cmdWarrant.setEnabled(false);
                cmdBook.setEnabled(false);
                cmdSalesInt.setEnabled(false);
                //cmdcd24.setEnabled(false);
                OpgDepositNone.setEnabled(true);
                OpgFreshorRenewalNone.setEnabled(true);
                Opg84.setEnabled(false);
                Opg24.setEnabled(false);
                Opg82or24None.setEnabled(false);
                OpgDepositNone.setSelected(true);
                OpgFreshorRenewalNone.setSelected(true);
                Opg82or24None.setSelected(true);
                
                Opg58.setEnabled(false);
                Opg39.setEnabled(false);
                Opg58or39None.setEnabled(false);
                Opg58or39None.setSelected(true);
                cmdBook5839.setEnabled(false);
            } else if(cmbSelectType.getSelectedIndex()==2) {
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdDeposit.setEnabled(false);
                OpgFD.setEnabled(true);
                OpgCD.setEnabled(true);
                OpgLD.setEnabled(true);
                OpgFresh.setEnabled(false);
                OpgRenewal.setEnabled(false);
                cmdWarrant.setEnabled(true);
                cmdBook.setEnabled(false);
                cmdSalesInt.setEnabled(false);
                //cmdcd24.setEnabled(false);
                OpgDepositNone.setEnabled(true);
                OpgFreshorRenewalNone.setEnabled(false);
                Opg84.setEnabled(false);
                Opg24.setEnabled(false);
                Opg82or24None.setEnabled(false);
                OpgDepositNone.setSelected(true);
                OpgFreshorRenewalNone.setSelected(true);
                Opg82or24None.setSelected(true);
                
                Opg58.setEnabled(false);
                Opg39.setEnabled(false);
                Opg58or39None.setEnabled(false);
                Opg58or39None.setSelected(true);
                cmdBook5839.setEnabled(false);
            } else if(cmbSelectType.getSelectedIndex()==3) {
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdDeposit.setEnabled(false);
                OpgFD.setEnabled(true);
                OpgCD.setEnabled(true);
                OpgLD.setEnabled(true);
                OpgFresh.setEnabled(false);
                OpgRenewal.setEnabled(false);
                cmdWarrant.setEnabled(false);
                cmdBook.setEnabled(true);
                //cmdcd24.setEnabled(true);
                OpgDepositNone.setEnabled(true);
                OpgFreshorRenewalNone.setEnabled(false);
                Opg84.setEnabled(true);
                Opg24.setEnabled(true);
                Opg82or24None.setEnabled(true);
                OpgDepositNone.setSelected(true);
                OpgFreshorRenewalNone.setSelected(true);
                Opg82or24None.setSelected(true);
                
                Opg58.setEnabled(false);
                Opg39.setEnabled(false);
                Opg58or39None.setEnabled(false);
                Opg58or39None.setSelected(true);
                cmdBook5839.setEnabled(false);
                
            } else if(cmbSelectType.getSelectedIndex()==4) {
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdDeposit.setEnabled(false);
                OpgFD.setEnabled(false);
                OpgCD.setEnabled(false);
                OpgLD.setEnabled(false);
                OpgFresh.setEnabled(false);
                OpgRenewal.setEnabled(false);
                cmdWarrant.setEnabled(false);
                cmdBook.setEnabled(false);
                //cmdcd24.setEnabled(false);
                OpgDepositNone.setEnabled(false);
                OpgFreshorRenewalNone.setEnabled(false);
                Opg84.setEnabled(false);
                Opg24.setEnabled(false);
                Opg82or24None.setEnabled(false);
                OpgDepositNone.setSelected(true);
                OpgFreshorRenewalNone.setSelected(true);
                Opg82or24None.setSelected(true);
                Opg58.setEnabled(true);
                Opg39.setEnabled(true);
                Opg58or39None.setEnabled(true);
                Opg58or39None.setSelected(true);
                cmdBook5839.setEnabled(true);
            }
            else if(cmbSelectType.getSelectedIndex()==5) {
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdDeposit.setEnabled(false);
                OpgFD.setEnabled(false);
                OpgCD.setEnabled(false);
                OpgLD.setEnabled(false);
                OpgFresh.setEnabled(false);
                OpgRenewal.setEnabled(false);
                cmdWarrant.setEnabled(false);
                cmdBook.setEnabled(false);
                cmdSalesInt.setEnabled(true);
                OpgDepositNone.setEnabled(false);
                OpgFreshorRenewalNone.setEnabled(false);
                Opg84.setEnabled(false);
                Opg24.setEnabled(false);
                Opg82or24None.setEnabled(false);
                OpgDepositNone.setSelected(false);
                OpgFreshorRenewalNone.setSelected(false);
                Opg82or24None.setSelected(false);
                Opg58.setEnabled(false);
                Opg39.setEnabled(false);
                Opg58or39None.setEnabled(false);
                Opg58or39None.setSelected(false);
                cmdBook5839.setEnabled(false);
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbSelectTypeItemStateChanged
    
    private void cmdDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDepositActionPerformed
        EITLERP.data.Execute("DELETE FROM TR_DEPOSIT",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(GenerateDepositData()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdDepositActionPerformed
    
    private void cmdWarrantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdWarrantActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_WARRANT",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(GenerateWarrantData()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
        
    }//GEN-LAST:event_cmdWarrantActionPerformed
    
    private void cmdShowFileDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowFileDialogActionPerformed
        // TODO add your handling code here:
        FileDialog ff = new FileDialog(findParentFrame(this));
        ff.show();
        txtFile.setText(ff.getDirectory()+ff.getFile());
        
    }//GEN-LAST:event_cmdShowFileDialogActionPerformed
    
    private void writeToFile(String FromDate,String ToDate) {
        try{
            String Line="";
            int Counter = 0;
            ResultSet rsFile = null;
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText().trim())));
            
            if(cmbSelectType.getSelectedIndex()==1) {
                rsFile = EITLERP.data.getResult("SELECT * FROM TR_DEPOSIT ",FinanceGlobal.FinURL);
                rsFile.first();
                if(rsFile.getRow()>0) {
                    while (!rsFile.isAfterLast()) {
                        Counter++;
                        Line = "";
                        Line = rsFile.getString("REC_TYPE");
                        Line += rsFile.getString("RECEPT_NO");
                        Line += rsFile.getString("RECEPT_YR");
                        Line += rsFile.getString("ISSUE_DATE");
                        Line += rsFile.getString("TITLE");
                        Line += rsFile.getString("NAME");
                        Line += rsFile.getString("ADR_1");
                        Line += rsFile.getString("ADR_2");
                        Line += rsFile.getString("ADR_3");
                        Line += rsFile.getString("PIN_CODE");
                        Line += rsFile.getString("JOINT_HD1");
                        Line += rsFile.getString("JOINT_HD2");
                        Line += rsFile.getString("JOINT_HD3");
                        Line += rsFile.getString("AMOUNT");
                        Line += rsFile.getString("CHEQUE_NO");
                        Line += rsFile.getString("CHEQUE_DT");
                        Line += rsFile.getString("PERIOD");
                        Line += rsFile.getString("RATE_PERCN");
                        Line += rsFile.getString("RECEPT_DT");
                        Line += rsFile.getString("DUE_DATE");
                        Line += rsFile.getString("PARTY_CODE");
                        Line += rsFile.getString("PERTICULAR");
                        Line += rsFile.getString("OLDRECTYPE");
                        Line += rsFile.getString("OLD_RCP_NO");
                        Line += rsFile.getString("OLD_RCP_YR");
                        Line += rsFile.getString("CATAGORY");
                        Line += rsFile.getString("LF_NO");
                        Line += rsFile.getString("EMP_NO");
                        Line += rsFile.getString("STATUS_CD");
                        Line += rsFile.getString("BROKER_CD");
                        Line += rsFile.getString("INDICATOR");
                        Line += rsFile.getString("PM_DATE");
                        Line += rsFile.getString("INT_PERIOD");
                        Line += rsFile.getString("MAT_VALUE");
                        Line += rsFile.getString("INT_AMOUNT");
                        Line += rsFile.getString("TAX_AMOUNT");
                        Line += rsFile.getString("TAX_IND");
                        Line += rsFile.getString("LASTINT_DT");
                        Line += rsFile.getString("PARTY_TYPE");
                        Line += rsFile.getString("REF_NO");
                        Line += rsFile.getString("NO_INT_IND");
                        Line += rsFile.getString("INT_PROV_N");
                        Line += rsFile.getString("INV_IND");
                        System.out.println("Counter = " + Counter + " Length = " +Line.length());
                        aFile.write(Line);
                        aFile.newLine();
                        rsFile.next();
                    }
                }
            }
            
            if(cmbSelectType.getSelectedIndex()==2) {
                rsFile = EITLERP.data.getResult("SELECT * FROM TR_WARRANT",FinanceGlobal.FinURL);
                rsFile.first();
                if(rsFile.getRow()>0) {
                    while (!rsFile.isAfterLast()) {
                        Counter++;
                        Line = "";
                        Line = rsFile.getString("DP_TYPE");
                        Line += rsFile.getString("RECPT_NO");
                        Line += rsFile.getString("DP_YEAR");
                        Line += rsFile.getString("PARTY_CD");
                        Line += rsFile.getString("WARRNT_NO");
                        Line += rsFile.getString("CHALLAN_NO");
                        Line += rsFile.getString("CHALLAN_DT");
                        Line += rsFile.getString("MICR_TDS_N");
                        Line += rsFile.getString("GROSS_INT");
                        Line += rsFile.getString("TAX");
                        Line += rsFile.getString("NET_INT");
                        Line += rsFile.getString("INDICATOR");
                        Line += rsFile.getString("WARRENT_DT");
                        Line += rsFile.getString("FILL");
                        System.out.println("Counter = " + Counter + " Length = " +Line.length());
                        aFile.write(Line);
                        aFile.newLine();
                        rsFile.next();
                    }
                }
            }
            
            if(cmbSelectType.getSelectedIndex()==3 || cmbSelectType.getSelectedIndex()==4 || cmbSelectType.getSelectedIndex()==5) {
                rsFile = EITLERP.data.getResult("SELECT * FROM TR_COBOL ",FinanceGlobal.FinURL);
                rsFile.first();
                if(rsFile.getRow()>0) {
                    while (!rsFile.isAfterLast()) {
                        Counter++;
                        Line = "";
                        Line = rsFile.getString("TR_REC_TYPE");
                        Line += rsFile.getString("TR_INV_AGSR");
                        Line += rsFile.getString("TR_DIV_CODE");
                        Line += rsFile.getString("BOOK_CODE");
                        Line += rsFile.getString("TR_YR");
                        Line += rsFile.getString("TR_MT");
                        Line += rsFile.getString("TR_DT");
                        Line += rsFile.getString("TR_REF_AL");
                        Line += rsFile.getString("TR_REF_NO");
                        Line += rsFile.getString("TR_MAIN_CODE");
                        Line += rsFile.getString("TR_SUB_CODE");
                        Line += rsFile.getString("TR_CHEQUE_NO");
                        Line += rsFile.getString("TR_REF_SR");
                        Line += rsFile.getString("TR_CHQ_BILL_DATE");
                        Line += rsFile.getString("TR_DESCRIPTION");
                        Line += rsFile.getString("SALETAX_CODE");
                        Line += rsFile.getString("TR_AMT");
                        Line += rsFile.getString("TR_AMT_SIGN");
                        Line += rsFile.getString("TR_ALLOC_CODE");
                        Line += rsFile.getString("TR_PO_AL");
                        Line += rsFile.getString("TR_PO_NO");
                        Line += rsFile.getString("TR_PO_FLG");
                        Line += rsFile.getString("TR_BILL_AL");
                        Line += rsFile.getString("TR_BILL_NO");
                        Line += rsFile.getString("TR_PO_FL");
                        Line += rsFile.getString("TR_INV_Y1Y2");
                        Line += rsFile.getString("TR_DIR_IND");
                        Line += rsFile.getString("TR_TRAN_CODE");
                        System.out.println("Counter = " + Counter + " Length = " +Line.length());
                        aFile.write(Line);
                        aFile.newLine();
                        rsFile.next();
                    }
                }
            }
            aFile.close();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private boolean GenerateDepositData() {
        String strdata = "";
        ResultSet rsData = null;
        String Condition = "";
        Connection Conn = null;
        Statement stmt = null;
        int Counter=0;
        try {
            Conn = data.getConn(FinanceGlobal.FinURL);
            stmt = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol = stmt.executeQuery("SELECT * FROM TR_DEPOSIT LIMIT 1");
            
            strdata = "SELECT SCHEME_TYPE,A.*  FROM D_FD_DEPOSIT_MASTER A, D_FD_SCHEME_MASTER B " +
            "WHERE RECEIPT_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())+"' " +
            "AND RECEIPT_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' " +
            "AND A.SCHEME_ID=B.SCHEME_ID AND A.APPROVED=1 AND A.CANCELLED=0 ";
            if(OpgFD.isSelected()) {
                Condition = "AND SCHEME_TYPE=1 ";
            } else if(OpgLD.isSelected()) {
                Condition = "AND SCHEME_TYPE=2 ";
            } else if(OpgCD.isSelected()) {
                Condition = "AND SCHEME_TYPE=3 ";
            }
            strdata += Condition;
            
            if(OpgFresh.isSelected()) {
                Condition = "AND OLD_RECEIPT_NO='' ";
            } else if(OpgRenewal.isSelected()) {
                Condition = "AND OLD_RECEIPT_NO<>'' ";
            }
            strdata += Condition;
            strdata += "ORDER BY SCHEME_TYPE, RECEIPT_DATE ";
            
            rsData = data.getResult(strdata,FinanceGlobal.FinURL);
            rsData.first();
            Counter=0;
            if(rsData.getRow() > 0)
            {   
            while(!rsData.isAfterLast()) {
                Counter++;
                //System.out.println("C = " + Counter);
                rsCobol.moveToInsertRow();
                rsCobol.updateInt("COUNTER", Counter);
                // Receipt Type
                String RecType = "";
                if(OpgFD.isSelected()) {
                    RecType = "FD";
                } else if(OpgLD.isSelected()) {
                    RecType = "LD";
                } else if(OpgCD.isSelected()) {
                    RecType = "CD";
                }
                rsCobol.updateString("REC_TYPE", RecType);
                
                // Receipt No
                String ReceiptNo = UtilFunctions.getString(rsData,"LEGACY_NO","");
                
                if(ReceiptNo.length()<7) {
                    ReceiptNo=EITLERPGLOBAL.padLeftEx(ReceiptNo, "0", 7);
                } else if(ReceiptNo.length()>7) {
                    ReceiptNo = ReceiptNo.substring(ReceiptNo.length()-7);
                }
                rsCobol.updateString("RECEPT_NO", ReceiptNo.substring(1));
                
                // Receipt Year
                String RceiptDate = UtilFunctions.getString(rsData,"RECEIPT_DATE","0000-00-00");
                String StartDate = EITLERPGLOBAL.getFinYearStartDate(RceiptDate);
                String EndDate = EITLERPGLOBAL.getFinYearEndDate(RceiptDate);
                String Recept_YR = StartDate.substring(2,4) + EndDate.substring(2,4);
                rsCobol.updateString("RECEPT_YR", Recept_YR);
                
                // Receipt date
                String RecDate = RceiptDate.substring(8,10) + RceiptDate.substring(5,7) + RceiptDate.substring(2,4);
                rsCobol.updateString("ISSUE_DATE", RecDate);
                
                // Title
                String Title = UtilFunctions.getString(rsData,"TITLE","");
                if(Title.length() < 7) {
                    Title = EITLERPGLOBAL.padRightEx(Title, " ", 7);
                }
                rsCobol.updateString("TITLE", Title);
                
                // Name
                String Name = UtilFunctions.getString(rsData,"APPLICANT_NAME","");
                if(Name.length() > 40) {
                    Name = Name.substring(0,40);
                } else if(Name.length() < 40) {
                    Name = EITLERPGLOBAL.padRightEx(Name, " ", 40);
                }
                rsCobol.updateString("NAME", Name);
                
                // Address
                String Adr1 = UtilFunctions.getString(rsData,"ADDRESS1","").trim().replace('\t',' ').trim();
                String Adr2 = UtilFunctions.getString(rsData,"ADDRESS2","").trim().replace('\t',' ').trim();
                String Adr3 = UtilFunctions.getString(rsData,"ADDRESS3","").trim().replace('\t',' ').trim();
                if(Adr1.length() > 36) {
                    Adr1 = Adr1.substring(0,36);
                } else if(Adr1.length() < 36) {
                    Adr1 = EITLERPGLOBAL.padRightEx(Adr1, " ", 36);
                }
                if(Adr2.length() > 36) {
                    Adr2 = Adr2.substring(0,36);
                } else if(Adr2.length() < 36) {
                    Adr2 = EITLERPGLOBAL.padRightEx(Adr2, " ", 36);
                }
                if(Adr3.length() > 36) {
                    Adr3 = Adr3.substring(0,36);
                } else if(Adr3.length() < 36) {
                    Adr3 = EITLERPGLOBAL.padRightEx(Adr3, " ", 36);
                }
                rsCobol.updateString("ADR_1", Adr1);
                rsCobol.updateString("ADR_2", Adr2);
                rsCobol.updateString("ADR_3", Adr3);
                
                // Pincode
                String Pincode = UtilFunctions.getString(rsData,"PINCODE","");
                if(Pincode.length() < 6) {
                    Pincode = "000000";
                }
                rsCobol.updateString("PIN_CODE", Pincode);
                
                // Joint Holders
                String JH1 = UtilFunctions.getString(rsData,"APPLICANT2","");
                String JH2 = UtilFunctions.getString(rsData,"APPLICANT3","");
                String JH3 = UtilFunctions.getString(rsData,"APPLICANT4","");
                
                if(JH1.length() < 30 ) {
                    JH1 = EITLERPGLOBAL.padRightEx(JH1," ",30);
                } else if(JH1.length() > 30) {
                    JH1 = JH1.substring(0,30);
                }
                if(JH2.length() < 30 ) {
                    JH2 = EITLERPGLOBAL.padRightEx(JH2," ",30);
                } else if(JH2.length() > 30) {
                    JH2 = JH2.substring(0,30);
                }
                if(JH3.length() < 30 ) {
                    JH3 = EITLERPGLOBAL.padRightEx(JH3," ",30);
                } else if(JH3.length() > 30) {
                    JH3 = JH3.substring(0,30);
                }
                rsCobol.updateString("JOINT_HD1", JH1);
                rsCobol.updateString("JOINT_HD2", JH2);
                rsCobol.updateString("JOINT_HD3", JH3);
                
                // Amount
                String Amount = Double.toString(UtilFunctions.getDouble(rsData,"AMOUNT",0));
                Amount = Amount.substring(0,Amount.indexOf("."));
                if(Amount.length() < 8) {
                    Amount = EITLERPGLOBAL.padLeftEx(Amount, "0", 8);
                }
                rsCobol.updateString("AMOUNT", Amount);
                
                // Cheque No & Date
                String CHNo = UtilFunctions.getString(rsData,"CHEQUE_NO","");
                if(CHNo.length() < 8) {
                    CHNo = EITLERPGLOBAL.padRightEx(CHNo, " ", 8);
                }
                rsCobol.updateString("CHEQUE_NO", CHNo);
                String CHDate = UtilFunctions.getString(rsData,"CHEQUE_DATE","0000-00-00");
                if(CHDate.equals("")) {
                    CHDate = "000000";
                } else {
                    CHDate = CHDate.substring(8,10) + CHDate.substring(5,7) + CHDate.substring(2,4);
                }
                rsCobol.updateString("CHEQUE_DT", CHDate);
                
                //Period
                rsCobol.updateString("PERIOD", Integer.toString(UtilFunctions.getInt(rsData,"DEPOSIT_PERIOD",0)));
                
                // Rate Percentage
                String Rate = Double.toString(UtilFunctions.getDouble(rsData,"INTEREST_RATE",0)*100);
                Rate = Rate.substring(0,Rate.indexOf("."));
                Rate = EITLERPGLOBAL.padLeftEx(Rate, "0", 4);
                rsCobol.updateString("RATE_PERCN", Rate);
                
                //Receipt Date
                rsCobol.updateString("RECEPT_DT", RecDate);
                
                //Due Date
                String DueDate = UtilFunctions.getString(rsData,"MATURITY_DATE","0000-00-00");
                DueDate = DueDate.substring(8,10) + DueDate.substring(5,7) + DueDate.substring(2,4);
                rsCobol.updateString("DUE_DATE", DueDate);
                
                // PartyCode
                rsCobol.updateString("PARTY_CODE", UtilFunctions.getString(rsData, "PARTY_CODE", ""));
                
                // Old receipt info
                String oldReceiptNo = UtilFunctions.getString(rsData,"OLD_RECEIPT_NO","");
                String Perticular = "";
                if(oldReceiptNo.equals("")) {
                    Perticular = "F";
                } else {
                    Perticular = "R";
                }
                rsCobol.updateString("PERTICULAR", Perticular);
                String oldRecType = "";
                String oldRecNo = "";
                String oldRec_YR = "";
                if(Perticular.equals("R")) {
                    int Type = data.getIntValueFromDB("SELECT SCHEME_TYPE FROM D_FD_DEPOSIT_MASTER A, D_FD_SCHEME_MASTER B " +
                    "WHERE A.SCHEME_ID=B.SCHEME_ID AND RECEIPT_NO='"+oldReceiptNo+"' ",FinanceGlobal.FinURL);
                    String oldRecDate = data.getStringValueFromDB("SELECT RECEIPT_DATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+oldReceiptNo+"'",FinanceGlobal.FinURL);
                    if(Type==1) {
                        oldRecType = "FD";
                    } else if(Type==2) {
                        oldRecType = "LD";
                    } else if(Type==3) {
                        oldRecType = "CD";
                    }
                    if(!oldReceiptNo.startsWith("M")) {
                        oldReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+oldReceiptNo+"'");
                    }
                    StartDate = EITLERPGLOBAL.getFinYearStartDate(oldRecDate);
                    EndDate = EITLERPGLOBAL.getFinYearEndDate(oldRecDate);
                    oldRec_YR = StartDate.substring(2,4) + EndDate.substring(2,4);
                } else {
                    oldRecType = EITLERPGLOBAL.padLeftEx(oldRecType, " ", 2);
                    oldReceiptNo = "0000000";
                    oldRec_YR = "0000";
                }
                if(oldReceiptNo.equals("")) {
                    oldReceiptNo="0000000";
                }
                rsCobol.updateString("OLDRECTYPE", oldRecType);
                rsCobol.updateString("OLD_RCP_NO", oldReceiptNo.substring(1));
                rsCobol.updateString("OLD_RCP_YR", oldRec_YR);
                
                // Catagory
                rsCobol.updateString("CATAGORY", " ");
                
                // LF No
                String LFNo = UtilFunctions.getString(rsData,"FOLIO_NO","");
                if(LFNo.length() < 6) {
                    LFNo = EITLERPGLOBAL.padRightEx(LFNo, " ", 6);
                }
                rsCobol.updateString("LF_NO", LFNo);
                
                // Employee No
                String EmployeeNo = UtilFunctions.getString(rsData,"EMPLOYEE_NO","");
                if(EmployeeNo.length() < 6) {
                    EmployeeNo = EITLERPGLOBAL.padRightEx(EmployeeNo, "0", 6);
                }
                rsCobol.updateString("EMP_NO", EmployeeNo);
                
                // status_cd
                String Status = data.getStringValueFromDB("SELECT CASE WHEN DEPOSITER_CATEGORY = 1 THEN 'E' " +
                "WHEN DEPOSITER_CATEGORY = 2 THEN 'S' WHEN DEPOSITER_CATEGORY = 3 THEN 'C' " +
                "WHEN DEPOSITER_CATEGORY = 4 THEN 'D' WHEN DEPOSITER_CATEGORY = 5 THEN 'I' " +
                "ELSE '' END DEPOSITER_CATEGORY FROM D_FD_DEPOSIT_MASTER " +
                "WHERE RECEIPT_NO='" + UtilFunctions.getString(rsData,"RECEIPT_NO","") + "' ",FinanceGlobal.FinURL);
                rsCobol.updateString("STATUS_CD", Status);
                
                // Broker Code
                String BrokerCode = UtilFunctions.getString(rsData,"BROKER_CODE","");
                if(BrokerCode.equals("")) {
                    BrokerCode = "000";
                }
                if(BrokerCode.length()<3) {
                    BrokerCode = EITLERPGLOBAL.padLeftEx(BrokerCode, "0", 3);
                } else if(BrokerCode.length()>3) {
                    BrokerCode = BrokerCode.substring(BrokerCode.length()-3);
                }
                rsCobol.updateString("BROKER_CD",BrokerCode);
                
                // other info
                rsCobol.updateString("INDICATOR", "0");
                rsCobol.updateString("PM_DATE", "000000");
                rsCobol.updateString("INT_PERIOD", "00");
                
                if(RecType.equals("CD")) {
                    double MatValue = 0;
                    String EffectiveDate = data.getStringValueFromDB("SELECT EFFECTIVE_DATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+UtilFunctions.getString(rsData,"RECEIPT_NO","")+"' ",FinanceGlobal.FinURL);
                    String MaturityDate = data.getStringValueFromDB("SELECT MATURITY_DATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+UtilFunctions.getString(rsData,"RECEIPT_NO","")+"' ",FinanceGlobal.FinURL);
                    String SchemeID = data.getStringValueFromDB("SELECT SCHEME_ID FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+UtilFunctions.getString(rsData,"RECEIPT_NO","")+"' ",FinanceGlobal.FinURL);
                    int Months = data.getIntValueFromDB("SELECT INTEREST_CALCULATION_PERIOD FROM D_FD_SCHEME_MASTER WHERE SCHEME_ID='"+SchemeID+"' ",FinanceGlobal.FinURL);
                    double Rate1 = data.getDoubleValueFromDB("SELECT INTEREST_RATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+UtilFunctions.getString(rsData,"RECEIPT_NO","")+"' ",FinanceGlobal.FinURL);
                    double nyear = Months/12.0;
                    double nTimes = 12.0/Months;
                    double Amt = data.getDoubleValueFromDB("SELECT AMOUNT FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+UtilFunctions.getString(rsData,"RECEIPT_NO","")+"' ",FinanceGlobal.FinURL);
                    double MaturityAmount=0.0;
                    boolean calculated = true;
                    int depositPeriod = data.getIntValueFromDB("SELECT DEPOSIT_PERIOD FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+UtilFunctions.getString(rsData,"RECEIPT_NO","")+"' ",FinanceGlobal.FinURL);
                    int calculatedPeriod = 0;
                    calculatedPeriod += Months;
                    while(calculated) {
                        MaturityAmount = EITLERPGLOBAL.round((Amt * Math.pow((1 + ((Rate1/100)/nTimes)),nTimes*nyear)) - Amt,0);
                        Amt += MaturityAmount;
                        if(calculatedPeriod==depositPeriod) {
                            calculated = false;
                            continue;
                        } else {
                            calculatedPeriod += Months;
                        }
                        
                    }
                    String strAmount = Double.toString(Amt);
                    strAmount = strAmount.substring(0,strAmount.indexOf("."));
                    if(strAmount.length() < 8) {
                        strAmount = EITLERPGLOBAL.padLeftEx(strAmount, "0", 8);
                    }
                    rsCobol.updateString("MAT_VALUE", strAmount);
                } else {
                    rsCobol.updateString("MAT_VALUE", "00000000");
                }
                
                rsCobol.updateString("INT_AMOUNT", "000000000");
                rsCobol.updateString("TAX_AMOUNT", "00000000");
                rsCobol.updateString("TAX_IND", "0");
                rsCobol.updateString("LASTINT_DT", "000000");
                rsCobol.updateString("PARTY_TYPE", "0");
                rsCobol.updateString("REF_NO", ReceiptNo.substring(1));
                rsCobol.updateString("NO_INT_IND", "0");
                rsCobol.updateString("INT_PROV_N", "     ");
                rsCobol.updateString("INV_IND", "6");
                rsCobol.insertRow();
                rsData.next();
            }
            }   
        }catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean GenerateWarrantData() {
        String strdata = "";
        ResultSet rsData = null;
        String Condition = "";
        Connection Conn = null;
        Statement stmt = null;
        int Counter=0;
        try {
            Conn = data.getConn(FinanceGlobal.FinURL);
            stmt = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol = stmt.executeQuery("SELECT * FROM TR_WARRANT LIMIT 1");
            
            strdata = "SELECT SCHEME_TYPE ,B.* FROM D_FD_INT_CALC_HEADER A, D_FD_INT_CALC_DETAIL B, " +
            "D_FD_DEPOSIT_MASTER C, D_FD_SCHEME_MASTER D WHERE A.DOC_NO=B.DOC_NO AND B.RECEIPT_NO=C.RECEIPT_NO " +
            "AND C.SCHEME_ID=D.SCHEME_ID AND WARRANT_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())+"' " +
            "AND WARRANT_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' AND WARRANT_NO<>'0000000' " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 ";
            
            if(OpgFD.isSelected()) {
                Condition = "AND SCHEME_TYPE=1 ";
            } else if(OpgLD.isSelected()) {
                Condition = "AND SCHEME_TYPE=2 ";
            } else if(OpgCD.isSelected()) {
                Condition = "AND SCHEME_TYPE=3 ";
            }
            strdata += Condition;
            strdata += "ORDER BY LEGACY_WARRANT_NO ";
            
            rsData = data.getResult(strdata,FinanceGlobal.FinURL);
            rsData.first();
            Counter=0;
            while(!rsData.isAfterLast()) {
                Counter++;
                rsCobol.moveToInsertRow();
                rsCobol.updateInt("COUNTER", Counter);
                // Receipt Type
                String RecType = "";
                if(OpgFD.isSelected()) {
                    RecType = "FD";
                } else if(OpgLD.isSelected()) {
                    RecType = "LD";
                } else if(OpgCD.isSelected()) {
                    RecType = "CD";
                }
                rsCobol.updateString("DP_TYPE", RecType);
                
                // Receipt No
                String ReceiptNo = UtilFunctions.getString(rsData,"RECEIPT_NO","");
                if(!ReceiptNo.startsWith("M")) {
                    ReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"'",FinanceGlobal.FinURL);
                }
                rsCobol.updateString("RECPT_NO", ReceiptNo.substring(1));
                
                // DP Year
                String ReceiptDate = data.getStringValueFromDB("SELECT RECEIPT_DATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"'",FinanceGlobal.FinURL);
                String StartDate = EITLERPGLOBAL.getFinYearStartDate(ReceiptDate);
                String EndDate = EITLERPGLOBAL.getFinYearEndDate(ReceiptDate);
                String Recept_YR = StartDate.substring(2,4) + EndDate.substring(2,4);
                rsCobol.updateString("DP_YEAR", Recept_YR);
                
                // PartyCode
                String PartyCode = UtilFunctions.getString(rsData, "PARTY_CODE", "");
                rsCobol.updateString("PARTY_CD", PartyCode);
                
                // Warrant No
                String WarrantNo = Integer.toString(UtilFunctions.getInt(rsData, "LEGACY_WARRANT_NO", 0));
                if(WarrantNo.length()<6) {
                    WarrantNo = EITLERPGLOBAL.padLeftEx(WarrantNo, "0", 6);
                }
                rsCobol.updateString("WARRNT_NO", WarrantNo);
                
                // Challan No & Date
                String CHNo = "";
                CHNo = EITLERPGLOBAL.padRightEx(CHNo, "0", 6);
                rsCobol.updateString("CHALLAN_NO", CHNo);
                String CHDate = "";
                CHDate = EITLERPGLOBAL.padRightEx(CHDate, " ", 6);
                rsCobol.updateString("CHALLAN_DT", CHDate);
                
                // MICR No
                String MICRNo = UtilFunctions.getString(rsData, "MICR_NO", "");
                if(MICRNo.length() < 6) {
                    MICRNo = EITLERPGLOBAL.padLeftEx(MICRNo, "0", 6);
                }
                rsCobol.updateString("MICR_TDS_N", MICRNo);
                
                // Gross Amount ,TAX, Net Interest
                String gAmount = "0";
                String Tax = "0";
                String NetInterest = "0";
                
                if(RecType.equals("CD")) {
                    gAmount = Double.toString(data.getDoubleValueFromDB("SELECT SUM(INTEREST_AMOUNT) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+ReceiptNo+"' AND PARTY_CODE='"+PartyCode+"'",FinanceGlobal.FinURL)*100);
                    gAmount = gAmount.substring(0,gAmount.indexOf("."));
                    Tax = Double.toString(data.getDoubleValueFromDB("SELECT SUM(TDS_AMOUNT) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+ReceiptNo+"' AND PARTY_CODE='"+PartyCode+"'",FinanceGlobal.FinURL)*100);
                    Tax = Tax.substring(0,Tax.indexOf("."));
                    NetInterest = Double.toString(data.getDoubleValueFromDB("SELECT SUM(NET_INTEREST) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+ReceiptNo+"' AND PARTY_CODE='"+PartyCode+"'",FinanceGlobal.FinURL)*100);
                    NetInterest = NetInterest.substring(0,NetInterest.indexOf("."));
                } else {
                    gAmount = Double.toString(UtilFunctions.getDouble(rsData,"INTEREST_AMOUNT",0)*100);
                    gAmount = gAmount.substring(0,gAmount.indexOf("."));
                    Tax = Double.toString(UtilFunctions.getDouble(rsData,"TDS_AMOUNT",0)*100);
                    Tax = Tax.substring(0,Tax.indexOf("."));
                    NetInterest = Double.toString(UtilFunctions.getDouble(rsData,"NET_INTEREST",0)*100);
                    NetInterest = NetInterest.substring(0,NetInterest.indexOf("."));
                }
                
                if(gAmount.length() < 8) {
                    gAmount = EITLERPGLOBAL.padLeftEx(gAmount, "0", 8);
                }
                rsCobol.updateString("GROSS_INT", gAmount);
                
                if(Tax.length() < 7) {
                    Tax = EITLERPGLOBAL.padLeftEx(Tax, "0", 7);
                }
                rsCobol.updateString("TAX", Tax);
                
                if(NetInterest.length() < 8) {
                    NetInterest = EITLERPGLOBAL.padLeftEx(NetInterest, "0", 8);
                }
                rsCobol.updateString("NET_INT", NetInterest);
                
                
                rsCobol.updateString("INDICATOR", " ");
                
                String WarrantDate = UtilFunctions.getString(rsData,"WARRANT_DATE","0000-00-00");
                WarrantDate = WarrantDate.substring(8,10) + WarrantDate.substring(5,7) + WarrantDate.substring(2,4);
                rsCobol.updateString("WARRENT_DT", WarrantDate);
                
                rsCobol.updateString("FILL", "   ");
                rsCobol.insertRow();
                rsData.next();
            }
        }catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean GenerateBookData() {
        String strdata = "";
        ResultSet rsData = null;
        String Condition = "";
        Connection Conn = null;
        Statement stmt = null;
        int Counter=0;
        try {
            Conn = data.getConn(FinanceGlobal.FinURL);
            stmt = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol = stmt.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            
            strdata = "SELECT SCHEME_TYPE ,B.* FROM D_FD_INT_CALC_HEADER A, D_FD_INT_CALC_DETAIL B, " +
            "D_FD_DEPOSIT_MASTER C, D_FD_SCHEME_MASTER D WHERE A.DOC_NO=B.DOC_NO AND B.RECEIPT_NO=C.RECEIPT_NO " +
            "AND C.SCHEME_ID=D.SCHEME_ID AND WARRANT_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())+"' " +
            "AND WARRANT_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' AND WARRANT_NO<>'0000000' " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 ";
            
            if(OpgFD.isSelected()) {
                Condition = "AND SCHEME_TYPE=1 ";
            } else if(OpgLD.isSelected()) {
                Condition = "AND SCHEME_TYPE=2 ";
            } else if(OpgCD.isSelected()) {
                Condition = "AND SCHEME_TYPE=3 ";
            }
            strdata += Condition;
            strdata += "ORDER BY LEGACY_WARRANT_NO ";
            
            rsData = data.getResult(strdata,FinanceGlobal.FinURL);
            rsData.first();
            Counter=0;
            boolean TaxExists = false;
            if(rsData.getRow() > 0) {
                
                
                while(!rsData.isAfterLast()) {
                    Counter++;
                    TaxExists = false;
                    rsCobol.moveToInsertRow();
                    rsCobol.updateInt("RECNO", Counter);
                    rsCobol.updateString("TR_REC_TYPE", "01");
                    
                    rsCobol.updateString("TR_DIV_CODE", "03");
                    String BookCode = "";
                    if(Opg24.isSelected()) {
                        BookCode = "24";
                    } else if(Opg84.isSelected()) {                       
                        BookCode = "87";
                    }
                    rsCobol.updateString("BOOK_CODE",BookCode );
                    
                    String WarrantDate = UtilFunctions.getString(rsData,"WARRANT_DATE","0000-00-00");
                    rsCobol.updateString("TR_YR",WarrantDate.substring(2,4));
                    rsCobol.updateString("TR_MT",WarrantDate.substring(5,7));
                    rsCobol.updateString("TR_DT", WarrantDate.substring(8,10));
                    
                    String RecType = "";
                    if(OpgFD.isSelected()) {
                        RecType = "FD";
                    } else if(OpgLD.isSelected()) {
                        RecType = "LD";
                    } else if(OpgCD.isSelected()) {
                        RecType = "CD";
                    }
                    rsCobol.updateString("TR_REF_AL",RecType);
                    
                    String erpReceiptNo = UtilFunctions.getString(rsData,"RECEIPT_NO","");
                    String cReceiptNo = "";
                    if(!erpReceiptNo.startsWith("M")) {
                        cReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+erpReceiptNo+"'",FinanceGlobal.FinURL);
                        if(cReceiptNo.length()<7) {
                            cReceiptNo = EITLERPGLOBAL.padLeftEx(cReceiptNo, "0", 7);
                        }
                    } else {
                        cReceiptNo = erpReceiptNo;
                    }
                    rsCobol.updateString("TR_REF_NO",cReceiptNo.substring(1));
                    
                    String Invagsr = "0";
                    if(OpgFD.isSelected()) {
                        Invagsr="1";
                    } else if(OpgLD.isSelected()) {
                        Invagsr="2";
                    } else if(OpgCD.isSelected()) {
                        Invagsr="3";
                    }
                    
                    
                    rsCobol.updateString("TR_INV_AGSR", "000000");
                    
                    
                    String MainCode = "";
                    if(RecType.equals("CD")) {
                        MainCode = "115160";
                    } else {
                        MainCode = UtilFunctions.getString(rsData, "MAIN_ACCOUNT_CODE", "");
                    }
                    rsCobol.updateString("TR_MAIN_CODE", MainCode);
                    String PartyCode = UtilFunctions.getString(rsData, "PARTY_CODE", "");
                    rsCobol.updateString("TR_SUB_CODE", PartyCode);
                    
                    String CHNo = "";
                    if(RecType.equals("CD")) {
                        CHNo = "CD" + cReceiptNo.substring(1);
                    } else {
                        CHNo = EITLERPGLOBAL.padRightEx(CHNo, " ", 8);
                    }
                    rsCobol.updateString("TR_CHEQUE_NO", CHNo);
                    rsCobol.updateString("TR_REF_SR", "    ");
                    String CHDate = "";
                    if(RecType.equals("CD")) {
                        CHDate = EITLERPGLOBAL.padRightEx(CHDate, "0", 6);
                    } else {
                        CHDate = WarrantDate.substring(8,10) + WarrantDate.substring(5,7) + WarrantDate.substring(2,4);
                    }
                    rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);
                    
                    String PartyName = data.getStringValueFromDB("SELECT APPLICANT_NAME FROM D_FD_DEPOSIT_MASTER WHERE PARTY_CODE='"+PartyCode+"' AND RECEIPT_NO='"+erpReceiptNo+"' ",FinanceGlobal.FinURL);
                    
                    if(PartyName.length() > 25) {
                        PartyName = PartyName.substring(0,25);
                    } else if(PartyName.length() < 25) {
                        PartyName = EITLERPGLOBAL.padRightEx(PartyName, " ", 25);
                    }
                    rsCobol.updateString("TR_DESCRIPTION", PartyName);
                    rsCobol.updateString("SALETAX_CODE", "00");
                    
                    double dAmount = 0;
                    String gAmount = "";
                    double dNetInterest = 0;
                    String NetInterest = "";
                    String StartDate = "", EndDate="";
                    if(Opg24.isSelected()) {
                        if(RecType.equals("CD")) { //FOR CD 24
                            StartDate = EITLERPGLOBAL.getFinYearStartDate(WarrantDate);
                            EndDate = EITLERPGLOBAL.getFinYearEndDate(WarrantDate);
                            String SQL = "SELECT SUM(INTEREST_AMOUNT) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+erpReceiptNo+"' " +
                            "AND PARTY_CODE='"+PartyCode+"' AND WARRANT_DATE>='"+StartDate+"' AND WARRANT_DATE<='"+EndDate+"'";
                            dAmount = EITLERPGLOBAL.round(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL),2);
                            dAmount = EITLERPGLOBAL.round(EITLERPGLOBAL.round(dAmount, 2) * 100,2);
                            gAmount = Double.toString(dAmount);
                            gAmount = gAmount.substring(0,gAmount.indexOf("."));
                            if(gAmount.length() < 11) {
                                gAmount = EITLERPGLOBAL.padLeftEx(gAmount, "0", 11);
                            }
                            SQL = "SELECT SUM(TDS_AMOUNT) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+erpReceiptNo+"' " +
                            "AND PARTY_CODE='"+PartyCode+"' AND WARRANT_DATE>='"+StartDate+"' AND WARRANT_DATE<='"+EndDate+"'";
                            if(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL) > 0) {
                                TaxExists =true;
                            }
                        } else { //FOR LD AND FD 24
                            dAmount = EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData, "INTEREST_AMOUNT", 0), 2);
                            dAmount = EITLERPGLOBAL.round(EITLERPGLOBAL.round(dAmount, 2) * 100,2);
                            gAmount = Double.toString(dAmount);
                            gAmount = gAmount.substring(0,gAmount.indexOf("."));
                            if(gAmount.length() < 11) {
                                gAmount = EITLERPGLOBAL.padLeftEx(gAmount, "0", 11);
                            }
                            if(UtilFunctions.getDouble(rsData, "TDS_AMOUNT", 0) > 0) {
                                TaxExists =true;
                            }
                        }
                        rsCobol.updateString("TR_AMT", gAmount);
                        rsCobol.updateString("TR_AMT_SIGN", "C");
                    } else {
                        if(RecType.equals("CD")) { // FOR CD 82
                            String SQL = "SELECT SUM(B.INTEREST_AMOUNT) FROM D_FD_INT_CALC_HEADER A, D_FD_INT_CALC_DETAIL B " +
                            "WHERE A.DOC_NO=B.DOC_NO AND B.RECEIPT_NO='"+erpReceiptNo+"' AND B.PARTY_CODE='"+PartyCode+"' AND A.TDS_ONLY=0 " +
                            "AND A.APPROVED=1 AND A.CANCELLED=0 ";
                            //                        String SQL = "SELECT SUM(NET_INTEREST) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+erpReceiptNo+"' " +
                            //                        "AND PARTY_CODE='"+PartyCode+"' ";
                            double grossAmount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
                            SQL = "SELECT SUM(B.TDS_AMOUNT) FROM D_FD_INT_CALC_HEADER A, D_FD_INT_CALC_DETAIL B " +
                            "WHERE A.DOC_NO=B.DOC_NO AND B.RECEIPT_NO='"+erpReceiptNo+"' AND B.PARTY_CODE='"+PartyCode+"' " +
                            "AND A.APPROVED=1 AND A.CANCELLED=0 ";
                            double TDSAmount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
                            grossAmount = grossAmount - TDSAmount;
                            NetInterest = Double.toString(EITLERPGLOBAL.round(grossAmount,2) * 100);
                            NetInterest = NetInterest.substring(0,NetInterest.indexOf("."));
                        } else { // FOR LD AND FD 82
                            dNetInterest = EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData,"NET_INTEREST",0),2);
                            dNetInterest = EITLERPGLOBAL.round(EITLERPGLOBAL.round(dNetInterest, 2) * 100,2);
                            NetInterest = Double.toString(dNetInterest);
                            NetInterest = NetInterest.substring(0,NetInterest.indexOf("."));
                        }
                        
                        if(NetInterest.length() < 11) {
                            NetInterest = EITLERPGLOBAL.padLeftEx(NetInterest, "0", 11);
                        }
                        rsCobol.updateString("TR_AMT", NetInterest);
                        rsCobol.updateString("TR_AMT_SIGN", "D");
                    }
                    
                    String TRAllocCode = "";
                    if(Opg24.isSelected()) {
                        TRAllocCode = UtilFunctions.getString(rsData,"INT_MAIN_ACCOUNT_CODE","");
                    } else {
                        TRAllocCode = EITLERPGLOBAL.padRightEx(TRAllocCode, " ", 6);
                    }
                    rsCobol.updateString("TR_ALLOC_CODE", TRAllocCode);
                    rsCobol.updateString("TR_PO_AL", "  ");
                    rsCobol.updateString("TR_PO_NO", "      ");
                    rsCobol.updateString("TR_PO_FLG", "  ");
                    rsCobol.updateString("TR_BILL_AL","  ");
                    rsCobol.updateString("TR_BILL_NO", "000000");
                    rsCobol.updateString("TR_PO_FL","00");
                    rsCobol.updateString("TR_INV_Y1Y2","    ");
                    rsCobol.updateString("TR_DIR_IND"," ");
                    rsCobol.updateString("TR_TRAN_CODE", "00");
                    rsCobol.insertRow();
                    
                    if(Opg24.isSelected() && TaxExists) {
                        Counter++;
                        rsCobol.updateInt("RECNO", Counter);
                        rsCobol.updateString("TR_REC_TYPE", "01");
                        rsCobol.updateString("TR_INV_AGSR", "000000");
                        rsCobol.updateString("TR_DIV_CODE", "03");
                        rsCobol.updateString("BOOK_CODE",BookCode );
                        //                    rsCobol.updateString("TR_YR", WarrantDate.substring(8,10));
                        //                    rsCobol.updateString("TR_MT",WarrantDate.substring(5,7));
                        //                    rsCobol.updateString("TR_DT",WarrantDate.substring(2,4));
                        rsCobol.updateString("TR_YR",WarrantDate.substring(2,4));
                        rsCobol.updateString("TR_MT",WarrantDate.substring(5,7));
                        rsCobol.updateString("TR_DT", WarrantDate.substring(8,10));
                        
                        rsCobol.updateString("TR_REF_AL",RecType);
                        rsCobol.updateString("TR_REF_NO",cReceiptNo.substring(1));
                        rsCobol.updateString("TR_MAIN_CODE", MainCode);
                        rsCobol.updateString("TR_SUB_CODE", PartyCode);
                        rsCobol.updateString("TR_CHEQUE_NO", CHNo);
                        rsCobol.updateString("TR_REF_SR", "    ");
                        rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);
                        rsCobol.updateString("TR_DESCRIPTION", PartyName);
                        rsCobol.updateString("SALETAX_CODE", "00");
                        String TaxAmount = "0";
                        if(RecType.equals("CD")) {
                            String SQL = "SELECT SUM(TDS_AMOUNT) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+erpReceiptNo+"' " +
                            "AND PARTY_CODE='"+PartyCode+"' AND WARRANT_DATE>='"+StartDate+"' AND WARRANT_DATE<='"+EndDate+"'";
                            TaxAmount = Double.toString(EITLERPGLOBAL.round(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL),2) * 100);
                            TaxAmount = TaxAmount.substring(0,TaxAmount.indexOf("."));
                        } else {
                            TaxAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData, "TDS_AMOUNT", 0),2) * 100);
                            TaxAmount = TaxAmount.substring(0,TaxAmount.indexOf("."));
                        }
                        if(TaxAmount.length() < 11) {
                            TaxAmount = EITLERPGLOBAL.padLeftEx(TaxAmount, "0", 11);
                        }
                        
                        rsCobol.updateString("TR_AMT", TaxAmount);
                        rsCobol.updateString("TR_AMT_SIGN", "D");
                        rsCobol.updateString("TR_ALLOC_CODE", "127174");
                        rsCobol.updateString("TR_PO_AL", "  ");
                        rsCobol.updateString("TR_PO_NO", "      ");
                        rsCobol.updateString("TR_PO_FLG", "  ");
                        rsCobol.updateString("TR_BILL_AL","  ");
                        rsCobol.updateString("TR_BILL_NO", "000000");
                        rsCobol.updateString("TR_PO_FL","00");
                        rsCobol.updateString("TR_INV_Y1Y2","    ");
                        rsCobol.updateString("TR_DIR_IND"," ");
                        rsCobol.updateString("TR_TRAN_CODE", "00");
                        rsCobol.insertRow();
                    }
                    rsData.next();
                }
            }
        }catch(Exception e) {
            e.getMessage();
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean GenerateCD24Yearly() {
        String strdata = "";
        ResultSet rsData = null;
        String Condition = "";
        Connection Conn = null;
        Statement stmt = null;
        int Counter=0;
        try {
            Conn = data.getConn(FinanceGlobal.FinURL);
            stmt = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
            
            ResultSet rsCobol = stmt.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            
            strdata = "SELECT B.RECEIPT_NO,SUM(B.INTEREST_AMOUNT) AS AMOUNT, B.PARTY_CODE, " +
            "B.INT_MAIN_ACCOUNT_CODE, SUM(B.TDS_AMOUNT) AS TDSAMOUNT FROM D_FD_INT_CALC_HEADER A, " +
            "D_FD_INT_CALC_DETAIL B , D_FD_DEPOSIT_MASTER C " +
            "WHERE A.DOC_NO=B.DOC_NO AND B.RECEIPT_NO=C.RECEIPT_NO AND B.PARTY_CODE=C.PARTY_CODE " +
            "AND B.WARRANT_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())+"' " +
            "AND B.MAIN_ACCOUNT_CODE='115153' " +
            "AND B.WARRANT_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' " +
            "AND B.WARRANT_NO='0000000' AND A.TDS_ONLY=0 " +
            "AND C.MATURITY_DATE>'"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 " +
            "AND (C.PM_DATE>'"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' " +
            "OR C.PM_DATE='0000-00-00' OR C.PM_DATE='') " +
            "GROUP BY B.RECEIPT_NO " +
            "ORDER BY B.RECEIPT_NO ";
            
            rsData = data.getResult(strdata,FinanceGlobal.FinURL);
            rsData.first();
            Counter=0;
            boolean TaxExists = false;
            while(!rsData.isAfterLast()) {
                Counter++;
                TaxExists = false;
                rsCobol.moveToInsertRow();
                rsCobol.updateInt("RECNO", Counter);
                rsCobol.updateString("TR_REC_TYPE", "01");
                
                rsCobol.updateString("TR_DIV_CODE", "03");
                String BookCode = "24";
                rsCobol.updateString("BOOK_CODE",BookCode );
                
                String WarrantDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
                rsCobol.updateString("TR_YR",WarrantDate.substring(2,4));
                rsCobol.updateString("TR_MT",WarrantDate.substring(5,7));
                rsCobol.updateString("TR_DT", WarrantDate.substring(8,10));
                
                String RecType = "CD";
                rsCobol.updateString("TR_REF_AL",RecType);
                
                String erpReceiptNo = UtilFunctions.getString(rsData,"RECEIPT_NO","");
                String cReceiptNo = "";
                if(!erpReceiptNo.startsWith("M")) {
                    cReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+erpReceiptNo+"'",FinanceGlobal.FinURL);
                    if(cReceiptNo.length()<7) {
                        cReceiptNo = EITLERPGLOBAL.padLeftEx(cReceiptNo, "0", 7);
                    }
                } else {
                    cReceiptNo = erpReceiptNo;
                }
                rsCobol.updateString("TR_REF_NO",cReceiptNo.substring(1));
                
                rsCobol.updateString("TR_INV_AGSR", "000000");
                
                
                String MainCode = "115160";
                rsCobol.updateString("TR_MAIN_CODE", MainCode);
                String PartyCode = UtilFunctions.getString(rsData, "PARTY_CODE", "");
                rsCobol.updateString("TR_SUB_CODE", PartyCode);
                
                String CHNo = "";
                if(RecType.equals("CD")) {
                    CHNo = "CD" + cReceiptNo.substring(1);
                } else {
                    CHNo = EITLERPGLOBAL.padRightEx(CHNo, " ", 8);
                }
                rsCobol.updateString("TR_CHEQUE_NO", CHNo);
                rsCobol.updateString("TR_REF_SR", "    ");
                String CHDate = "";
                if(RecType.equals("CD")) {
                    CHDate = EITLERPGLOBAL.padRightEx(CHDate, "0", 6);
                } else {
                    CHDate = WarrantDate.substring(8,10) + WarrantDate.substring(5,7) + WarrantDate.substring(2,4);
                }
                rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);
                
                String PartyName = data.getStringValueFromDB("SELECT APPLICANT_NAME FROM D_FD_DEPOSIT_MASTER WHERE PARTY_CODE='"+PartyCode+"' AND RECEIPT_NO='"+erpReceiptNo+"' ",FinanceGlobal.FinURL);
                
                if(PartyName.length() > 25) {
                    PartyName = PartyName.substring(0,25);
                } else if(PartyName.length() < 25) {
                    PartyName = EITLERPGLOBAL.padRightEx(PartyName, " ", 25);
                }
                rsCobol.updateString("TR_DESCRIPTION", PartyName);
                rsCobol.updateString("SALETAX_CODE", "00");
                
                double dAmount = 0;
                String gAmount = "";
                double dNetInterest = 0;
                String NetInterest = "";
                String StartDate = "", EndDate="";
                
                if(RecType.equals("CD")) { //FOR CD 24
                    dAmount = EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData,"AMOUNT",0),2);
                    dAmount = EITLERPGLOBAL.round(EITLERPGLOBAL.round(dAmount, 2) * 100,2);
                    gAmount = Double.toString(dAmount);
                    gAmount = gAmount.substring(0,gAmount.indexOf("."));
                    if(gAmount.length() < 11) {
                        gAmount = EITLERPGLOBAL.padLeftEx(gAmount, "0", 11);
                    }
                    
                    if(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData,"TDSAMOUNT",0),2) > 0) {
                        TaxExists =true;
                    }
                }
                rsCobol.updateString("TR_AMT", gAmount);
                rsCobol.updateString("TR_AMT_SIGN", "C");
                
                
                String TRAllocCode = "";
                
                TRAllocCode = UtilFunctions.getString(rsData,"INT_MAIN_ACCOUNT_CODE","");
                
                rsCobol.updateString("TR_ALLOC_CODE", TRAllocCode);
                rsCobol.updateString("TR_PO_AL", "  ");
                rsCobol.updateString("TR_PO_NO", "      ");
                rsCobol.updateString("TR_PO_FLG", "  ");
                rsCobol.updateString("TR_BILL_AL","  ");
                rsCobol.updateString("TR_BILL_NO", "000000");
                rsCobol.updateString("TR_PO_FL","00");
                rsCobol.updateString("TR_INV_Y1Y2","    ");
                rsCobol.updateString("TR_DIR_IND"," ");
                rsCobol.updateString("TR_TRAN_CODE", "00");
                rsCobol.insertRow();
                
                if(TaxExists) {
                    Counter++;
                    rsCobol.updateInt("RECNO", Counter);
                    rsCobol.updateString("TR_REC_TYPE", "01");
                    rsCobol.updateString("TR_INV_AGSR", "000000");
                    rsCobol.updateString("TR_DIV_CODE", "03");
                    rsCobol.updateString("BOOK_CODE",BookCode );
                    rsCobol.updateString("TR_YR",WarrantDate.substring(2,4));
                    rsCobol.updateString("TR_MT",WarrantDate.substring(5,7));
                    rsCobol.updateString("TR_DT", WarrantDate.substring(8,10));
                    
                    rsCobol.updateString("TR_REF_AL",RecType);
                    rsCobol.updateString("TR_REF_NO",cReceiptNo.substring(1));
                    rsCobol.updateString("TR_MAIN_CODE", MainCode);
                    rsCobol.updateString("TR_SUB_CODE", PartyCode);
                    rsCobol.updateString("TR_CHEQUE_NO", CHNo);
                    rsCobol.updateString("TR_REF_SR", "    ");
                    rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);
                    rsCobol.updateString("TR_DESCRIPTION", PartyName);
                    rsCobol.updateString("SALETAX_CODE", "00");
                    String TaxAmount = "0";
                    if(RecType.equals("CD")) {
                        TaxAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData,"TDSAMOUNT",0),2) * 100);
                        TaxAmount = TaxAmount.substring(0,TaxAmount.indexOf("."));
                    }
                    
                    if(TaxAmount.length() < 11) {
                        TaxAmount = EITLERPGLOBAL.padLeftEx(TaxAmount, "0", 11);
                    }
                    
                    rsCobol.updateString("TR_AMT", TaxAmount);
                    rsCobol.updateString("TR_AMT_SIGN", "D");
                    rsCobol.updateString("TR_ALLOC_CODE", "127174");
                    rsCobol.updateString("TR_PO_AL", "  ");
                    rsCobol.updateString("TR_PO_NO", "      ");
                    rsCobol.updateString("TR_PO_FLG", "  ");
                    rsCobol.updateString("TR_BILL_AL","  ");
                    rsCobol.updateString("TR_BILL_NO", "000000");
                    rsCobol.updateString("TR_PO_FL","00");
                    rsCobol.updateString("TR_INV_Y1Y2","    ");
                    rsCobol.updateString("TR_DIR_IND"," ");
                    rsCobol.updateString("TR_TRAN_CODE", "00");
                    rsCobol.insertRow();
                }
                rsData.next();
            }
        }catch(Exception e) {
            e.getMessage();
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean GenerateSalesIntYearly() {
        String strdata = "";
        ResultSet rsData = null;
        String Condition = "";
        Connection Conn = null;
        Statement stmt = null;
        int Counter=0;
        try {
            Conn = data.getConn(FinanceGlobal.FinURL);
            stmt = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
            
            ResultSet rsCobol = stmt.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            
            /*strdata = "SELECT B.RECEIPT_NO,SUM(B.INTEREST_AMOUNT) AS AMOUNT, B.PARTY_CODE, " +
            "B.INT_MAIN_ACCOUNT_CODE, SUM(B.TDS_AMOUNT) AS TDSAMOUNT FROM D_FD_INT_CALC_HEADER A, " +
            "D_FD_INT_CALC_DETAIL B , D_FD_DEPOSIT_MASTER C " +
            "WHERE A.DOC_NO=B.DOC_NO AND B.RECEIPT_NO=C.RECEIPT_NO AND B.PARTY_CODE=C.PARTY_CODE " +
            "AND B.WARRANT_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())+"' " +
            "AND B.MAIN_ACCOUNT_CODE='115153' " +
            "AND B.WARRANT_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' " +
            "AND B.WARRANT_NO='0000000' AND A.TDS_ONLY=0 " +
            "AND C.MATURITY_DATE>'"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 " +
            "AND (C.PM_DATE>'"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' " +
            "OR C.PM_DATE='0000-00-00' OR C.PM_DATE='') " +
            "GROUP BY B.RECEIPT_NO " +
            "ORDER BY B.RECEIPT_NO ";*/
            
            strdata= "SELECT B.RECEIPT_NO,SUM(B.NET_INTEREST) AS AMOUNT,B.MAIN_ACCOUNT_CODE,B.PARTY_CODE,B.INTEREST_MAIN_CODE,SUM(B.TDS_AMOUNT) AS TDSAMOUNT " +
                    "FROM D_FD_SALES_INTEREST_HEADER A, D_FD_SALES_INTEREST_DETAIL B, D_FD_SALES_DEPOSIT_MASTER C " +
                    "WHERE A.DOC_NO='000002' AND A.DOC_NO=B.DOC_NO AND B.RECEIPT_NO=C.RECEIPT_NO AND B.PARTY_CODE=C.PARTY_CODE AND A.APPROVED=1 AND " +
                    //"A.DOC_DATE='"+EITLERPGLOBAL.formatDateDB(txtDocDate.getText().trim())+"' " +
                    "A.CANCELLED=0 " +
                    "GROUP BY B.RECEIPT_NO " +
                    "ORDER BY B.RECEIPT_NO";
            
            rsData = data.getResult(strdata,FinanceGlobal.FinURL);
            rsData.first();
            Counter=0;
            boolean TaxExists = false;
            while(!rsData.isAfterLast()) {
                Counter++;
                TaxExists = false;
                rsCobol.moveToInsertRow();
                rsCobol.updateInt("RECNO", Counter);
                rsCobol.updateString("TR_REC_TYPE", "01");
                
                rsCobol.updateString("TR_DIV_CODE", "03");
                String BookCode = "24";
                rsCobol.updateString("BOOK_CODE",BookCode );
                
                //String WarrantDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
                rsCobol.updateString("TR_YR","12");//WarrantDate.substring(2,4));
                rsCobol.updateString("TR_MT","03");//WarrantDate.substring(5,7));
                rsCobol.updateString("TR_DT","31"); //WarrantDate.substring(8,10));
                
                
                //String RecType = "";
                if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132642")){
                    rsCobol.updateString("TR_REF_AL","DD");
                }else if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132666")){
                    rsCobol.updateString("TR_REF_AL","ND");
                }else if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132635")){
                    rsCobol.updateString("TR_REF_AL","SL");
                }
                
                
                String erpReceiptNo = UtilFunctions.getString(rsData,"RECEIPT_NO","");
                String cReceiptNo = "";
                
                
                if(erpReceiptNo.startsWith("M")){
                    cReceiptNo=(erpReceiptNo.substring(5));
                }else{
                    cReceiptNo=erpReceiptNo;
                }
                    
                rsCobol.updateString("TR_REF_NO",cReceiptNo.substring(1));
                
                rsCobol.updateString("TR_REF_NO",cReceiptNo);
                rsCobol.updateString("TR_INV_AGSR", "000000");
                
                
                
                if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132642")){
                    rsCobol.updateString("TR_MAIN_CODE","133155");
                }else if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132666")){
                    rsCobol.updateString("TR_MAIN_CODE","133203");
                }else if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132635")){
                    rsCobol.updateString("TR_MAIN_CODE","133132");
                }
                //rsCobol.updateString("TR_MAIN_CODE", MainCode);
                String PartyCode = UtilFunctions.getString(rsData, "PARTY_CODE", "");
                rsCobol.updateString("TR_SUB_CODE", PartyCode);
                
                /*String CHNo = "";
                if(RecType.equals("CD")) {
                    CHNo = "CD" + cReceiptNo.substring(1);
                } else {
                    CHNo = EITLERPGLOBAL.padRightEx(CHNo, " ", 8);
                }*/
                String CHNo="";
                CHNo = EITLERPGLOBAL.padRightEx(CHNo, " ", 8);
                rsCobol.updateString("TR_CHEQUE_NO", CHNo);
                rsCobol.updateString("TR_REF_SR", "    ");
                String CHDate = "";
                CHDate = EITLERPGLOBAL.padRightEx(CHDate, "0", 6);
                /*if(RecType.equals("CD")) {
                    CHDate = EITLERPGLOBAL.padRightEx(CHDate, "0", 6);
                } else {
                    CHDate = WarrantDate.substring(8,10) + WarrantDate.substring(5,7) + WarrantDate.substring(2,4);
                }*/
                rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);
                
                String PartyName = data.getStringValueFromDB("SELECT APPLICANT_NAME FROM D_FD_SALES_DEPOSIT_MASTER WHERE PARTY_CODE='"+PartyCode+"' AND RECEIPT_NO='"+erpReceiptNo+"' ",FinanceGlobal.FinURL);
                
                if(PartyName.length() > 25) {
                    PartyName = PartyName.substring(0,25);
                } else if(PartyName.length() < 25) {
                    PartyName = EITLERPGLOBAL.padRightEx(PartyName, " ", 25);
                }
                rsCobol.updateString("TR_DESCRIPTION", PartyName);
                rsCobol.updateString("SALETAX_CODE", "00");
                
                double dAmount = 0;
                String gAmount = "";
                double dNetInterest = 0;
                String NetInterest = "";
                String StartDate = "", EndDate="";
                
                //if(RecType.equals("CD")) { //FOR CD 24
                    dAmount = EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData,"AMOUNT",0),2);
                    dAmount = EITLERPGLOBAL.round(EITLERPGLOBAL.round(dAmount, 2) * 100,2);
                    gAmount = Double.toString(dAmount);
                    gAmount = gAmount.substring(0,gAmount.indexOf("."));
                    if(gAmount.length() < 11) {
                        gAmount = EITLERPGLOBAL.padLeftEx(gAmount, "0", 11);
                    }
                    
                    if(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData,"TDSAMOUNT",0),2) > 0) {
                        TaxExists =true;
                    }
                //}
                rsCobol.updateString("TR_AMT", gAmount);
                rsCobol.updateString("TR_AMT_SIGN", "C");
                
                
                String TRAllocCode = "";
                
                //TRAllocCode = UtilFunctions.getString(rsData,"INTEREST_MAIN_CODE","");
                
                rsCobol.updateString("TR_ALLOC_CODE", "437220");
                rsCobol.updateString("TR_PO_AL", "  ");
                rsCobol.updateString("TR_PO_NO", "      ");
                rsCobol.updateString("TR_PO_FLG", "  ");
                rsCobol.updateString("TR_BILL_AL","  ");
                rsCobol.updateString("TR_BILL_NO", "000000");
                rsCobol.updateString("TR_PO_FL","00");
                rsCobol.updateString("TR_INV_Y1Y2","    ");
                rsCobol.updateString("TR_DIR_IND"," ");
                rsCobol.updateString("TR_TRAN_CODE", "00");
                rsCobol.insertRow();
                
                if(TaxExists) {
                    Counter++;
                    rsCobol.updateInt("RECNO", Counter);
                    rsCobol.updateString("TR_REC_TYPE", "01");
                    rsCobol.updateString("TR_INV_AGSR", "000000");
                    rsCobol.updateString("TR_DIV_CODE", "03");
                    rsCobol.updateString("BOOK_CODE",BookCode );
                    rsCobol.updateString("TR_YR", "12");
                    rsCobol.updateString("TR_MT", "03");
                    rsCobol.updateString("TR_DT", "31");
                    
                    if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132642")){
                    rsCobol.updateString("TR_REF_AL","DD");
                }else if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132666")){
                    rsCobol.updateString("TR_REF_AL","ND");
                }else if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132635")){
                    rsCobol.updateString("TR_REF_AL","SL");
                }
                   
                    rsCobol.updateString("TR_REF_NO",cReceiptNo);
                    //String MainCode=UtilFunctions.getString(rsData, "MAIN_ACCOUNT_CODE", "");
                    rsCobol.updateString("TR_MAIN_CODE", "127174");
                     
               /* if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132642")){
                    rsCobol.updateString("TR_MAIN_CODE","133155");
                }else if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132666")){
                    rsCobol.updateString("TR_MAIN_CODE","133203");
                }else if(rsData.getString("MAIN_ACCOUNT_CODE").equals("132635")){
                    rsCobol.updateString("TR_MAIN_CODE","133162");
                }*/
                    rsCobol.updateString("TR_SUB_CODE", "000000");
                    rsCobol.updateString("TR_CHEQUE_NO", CHNo);
                    rsCobol.updateString("TR_REF_SR", "    ");
                    rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);
                    rsCobol.updateString("TR_DESCRIPTION", PartyName);
                    rsCobol.updateString("SALETAX_CODE", "00");
                    String TaxAmount = "0";
                    TaxAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsData,"TDSAMOUNT",0),2) * 100);
                    TaxAmount = TaxAmount.substring(0,TaxAmount.indexOf("."));
                                        
                    if(TaxAmount.length() < 11) {
                        TaxAmount = EITLERPGLOBAL.padLeftEx(TaxAmount, "0", 11);
                    }
                    
                    rsCobol.updateString("TR_AMT", TaxAmount);
                    rsCobol.updateString("TR_AMT_SIGN", "D");
                    rsCobol.updateString("TR_ALLOC_CODE", "437220");
                    rsCobol.updateString("TR_PO_AL", "  ");
                    rsCobol.updateString("TR_PO_NO", "      ");
                    rsCobol.updateString("TR_PO_FLG", "  ");
                    rsCobol.updateString("TR_BILL_AL","  ");
                    rsCobol.updateString("TR_BILL_NO", "000000");
                    rsCobol.updateString("TR_PO_FL","00");
                    rsCobol.updateString("TR_INV_Y1Y2","    ");
                    rsCobol.updateString("TR_DIR_IND"," ");
                    rsCobol.updateString("TR_TRAN_CODE", "00");
                    rsCobol.insertRow();
                }
                rsData.next();
            }
        }catch(Exception e) {
            e.getMessage();
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean GenerateBookData5839_OLD() {
        String strdata = "";
        ResultSet rsData = null;
        String Condition = "";
        Connection Conn = null;
        Statement stmt = null;
        int Counter=0;
        int DepositEntryType= 0;
        try {
            Conn = data.getConn(FinanceGlobal.FinURL);
            stmt = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol = stmt.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            
            if(Opg58.isSelected()) {
                DepositEntryType= 1;
            } else {
                DepositEntryType= 2;
            }
            
            strdata = "SELECT * FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())+"' " +
            "AND RECEIPT_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' AND DEPOSIT_ENTRY_TYPE=" + DepositEntryType + " " +
            "AND APPROVED=1 AND CANCELLED=0 ";
            
            strdata += "ORDER BY RECEIPT_DATE ";
            
            rsData = data.getResult(strdata,FinanceGlobal.FinURL);
            rsData.first();
            Counter=0;
            boolean TaxExists = false;
            while(!rsData.isAfterLast()) {
                Counter++;
                TaxExists = false;
                rsCobol.moveToInsertRow();
                rsCobol.updateInt("RECNO", Counter);
                rsCobol.updateString("TR_REC_TYPE", "01");
                
                rsCobol.updateString("TR_DIV_CODE", "03");
                String BookCode = "";
                if(Opg58.isSelected()) {
                    BookCode = "58";
                } else if(Opg39.isSelected()) {
                    BookCode = "39";
                }
                rsCobol.updateString("BOOK_CODE",BookCode );
                
                String ReceiptDate = UtilFunctions.getString(rsData,"RECEIPT_DATE","0000-00-00");
                rsCobol.updateString("TR_YR",ReceiptDate.substring(2,4));
                rsCobol.updateString("TR_MT",ReceiptDate.substring(5,7));
                rsCobol.updateString("TR_DT", ReceiptDate.substring(8,10));
                
                
                rsCobol.updateString("TR_REF_AL","  ");
                
                String erpReceiptNo = UtilFunctions.getString(rsData,"RECEIPT_NO","");
                String cReceiptNo = "";
                if(!erpReceiptNo.startsWith("M")) {
                    cReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+erpReceiptNo+"'",FinanceGlobal.FinURL);
                    if(cReceiptNo.length()<7) {
                        cReceiptNo = EITLERPGLOBAL.padLeftEx(cReceiptNo, "0", 7);
                    }
                } else {
                    cReceiptNo = erpReceiptNo;
                }
                rsCobol.updateString("TR_REF_NO",cReceiptNo.substring(1));
                
                String Invagsr = "0";
                if(OpgFD.isSelected()) {
                    Invagsr="1";
                } else if(OpgLD.isSelected()) {
                    Invagsr="2";
                } else if(OpgCD.isSelected()) {
                    Invagsr="3";
                }
                
                rsCobol.updateString("TR_INV_AGSR", Invagsr + cReceiptNo.substring(2));
                
                String MainCode = UtilFunctions.getString(rsData, "MAIN_ACCOUNT_CODE", "");
                rsCobol.updateString("TR_MAIN_CODE", MainCode);
                String PartyCode = UtilFunctions.getString(rsData, "PARTY_CODE", "");
                rsCobol.updateString("TR_SUB_CODE", PartyCode);
                
                String CHNo = UtilFunctions.getString(rsData, "CHEQUE_NO", "");
                if(CHNo.length() > 8) {
                    CHNo = CHNo.substring(CHNo.length()-8);
                } else {
                    CHNo = EITLERPGLOBAL.padRightEx(CHNo, " ", 8);
                }
                rsCobol.updateString("TR_CHEQUE_NO", CHNo);
                rsCobol.updateString("TR_REF_SR", "    ");
                
                String CHDate = "";
                if(ReceiptDate.equals("")) {
                    CHDate = EITLERPGLOBAL.padRightEx(CHDate, "0", 6);
                } else {
                    CHDate = ReceiptDate.substring(8,10) + ReceiptDate.substring(5,7) + ReceiptDate.substring(2,4);
                }
                rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);
                
                String PartyName = data.getStringValueFromDB("SELECT APPLICANT_NAME FROM D_FD_DEPOSIT_MASTER WHERE PARTY_CODE='"+PartyCode+"' AND RECEIPT_NO='"+erpReceiptNo+"' ",FinanceGlobal.FinURL);
                
                if(PartyName.length() > 25) {
                    PartyName = PartyName.substring(0,25);
                } else if(PartyName.length() < 25) {
                    PartyName = EITLERPGLOBAL.padRightEx(PartyName, " ", 25);
                }
                rsCobol.updateString("TR_DESCRIPTION", PartyName);
                rsCobol.updateString("SALETAX_CODE", "00");
                
                double Amount = UtilFunctions.getDouble(rsData,"AMOUNT",0);
                String Amt = new BigDecimal(Amount*100).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
                Amt = Amt.substring(0,Amt.indexOf("."));
                if(Amt.length() < 11) {
                    Amt = EITLERPGLOBAL.padLeftEx(Amt, "0", 11);
                    //Amt = EITLERPGLOBAL.padRightEx(Amt, "0", 11);
                }
                
                rsCobol.updateString("TR_AMT", Amt);
                rsCobol.updateString("TR_AMT_SIGN", "C");
                
                String TRAllocCode = "000000";
                
                rsCobol.updateString("TR_ALLOC_CODE", TRAllocCode);
                rsCobol.updateString("TR_PO_AL", "  ");
                rsCobol.updateString("TR_PO_NO", "      ");
                rsCobol.updateString("TR_PO_FLG", "  ");
                rsCobol.updateString("TR_BILL_AL","  ");
                rsCobol.updateString("TR_BILL_NO", "000000");
                rsCobol.updateString("TR_PO_FL","00");
                rsCobol.updateString("TR_INV_Y1Y2","    ");
                rsCobol.updateString("TR_DIR_IND"," ");
                rsCobol.updateString("TR_TRAN_CODE", "00");
                rsCobol.insertRow();
                
                rsData.next();
            }
        }catch(Exception e) {
            e.getMessage();
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean GenerateBookData5839() {
        String strdata = "";
        ResultSet rsData = null;
        String Condition = "";
        Connection Conn = null;
        Statement stmt = null;
        int Counter=0;
        int DepositEntryType= 0;
        try {
            Conn = data.getConn(FinanceGlobal.FinURL);
            stmt = Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol = stmt.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            int RefCounter=0;
            if(Opg58.isSelected()) {
                DepositEntryType= 1;
            } else {
                DepositEntryType= 2;
            }
            
            strdata = "SELECT * FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())+"' " +
            "AND RECEIPT_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' AND DEPOSIT_ENTRY_TYPE=" + DepositEntryType + " " +
            "AND APPROVED=1 AND CANCELLED=0 ";
            
            strdata += "ORDER BY RECEIPT_DATE ";
            
            rsData = data.getResult(strdata,FinanceGlobal.FinURL);
            rsData.first();
            Counter=0;
            boolean TaxExists = false;
            if(rsData.getRow()>0) {
                while(!rsData.isAfterLast()) {
                    Counter++;
                    RefCounter++;
                    TaxExists = false;
                    rsCobol.moveToInsertRow();
                    rsCobol.updateInt("RECNO", Counter);
                    rsCobol.updateString("TR_REC_TYPE", "01");

                    rsCobol.updateString("TR_DIV_CODE", "03");
                    String BookCode = "";
                    if(Opg58.isSelected()) {
                        BookCode = "58";
                    } else if(Opg39.isSelected()) {
                        BookCode = "39";
                    }
                    rsCobol.updateString("BOOK_CODE",BookCode );

                    String ReceiptDate = UtilFunctions.getString(rsData,"RECEIPT_DATE","0000-00-00");
                    rsCobol.updateString("TR_YR",ReceiptDate.substring(2,4));
                    rsCobol.updateString("TR_MT",ReceiptDate.substring(5,7));
                    rsCobol.updateString("TR_DT", ReceiptDate.substring(8,10));


                    rsCobol.updateString("TR_REF_AL","  ");

                    String erpReceiptNo = UtilFunctions.getString(rsData,"RECEIPT_NO","");
                    String OldReceiptNo = UtilFunctions.getString(rsData,"OLD_RECEIPT_NO","");

                    String cReceiptNo = "";
                    if(!erpReceiptNo.startsWith("M")) {
                        cReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+erpReceiptNo+"'",FinanceGlobal.FinURL);
                        if(cReceiptNo.length()<7) {
                            cReceiptNo = EITLERPGLOBAL.padLeftEx(cReceiptNo, "0", 7);
                        }
                    } else {
                        cReceiptNo = erpReceiptNo;
                    }

                    String oReceiptNo = "";
                    if(OldReceiptNo.startsWith("M")) {
                        oReceiptNo = data.getStringValueFromDB("SELECT OLD_RECEIPT_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+erpReceiptNo+"'",FinanceGlobal.FinURL);
                        if(oReceiptNo.length()<7) {
                            oReceiptNo = EITLERPGLOBAL.padLeftEx(oReceiptNo, "0", 7);
                        }
                    } else {
                        oReceiptNo = OldReceiptNo;
                    }



                    if(Opg58.isSelected()){
                        rsCobol.updateString("TR_REF_NO",cReceiptNo.substring(1));
                    } else if (Opg39.isSelected()){
                        rsCobol.updateString("TR_REF_NO",EITLERPGLOBAL.padLeftEx(Integer.toString(RefCounter),"0",6));
                    }

                    String Invagsr = "0";
                    if(OpgFD.isSelected()) {
                        Invagsr="1";
                    } else if(OpgLD.isSelected()) {
                        Invagsr="2";
                    } else if(OpgCD.isSelected()) {
                        Invagsr="3";
                    }

                    if(Opg58.isSelected()){
                        rsCobol.updateString("TR_INV_AGSR", Invagsr + cReceiptNo.substring(cReceiptNo.length()-5));
                    }
                    else if (Opg39.isSelected()){
                        rsCobol.updateString("TR_INV_AGSR", "000000");
                    }

                    String MainCode = UtilFunctions.getString(rsData, "MAIN_ACCOUNT_CODE", "");
                    rsCobol.updateString("TR_MAIN_CODE", MainCode);
                    String PartyCode = UtilFunctions.getString(rsData, "PARTY_CODE", "");
                    rsCobol.updateString("TR_SUB_CODE", PartyCode);

                    String CHNo = UtilFunctions.getString(rsData, "CHEQUE_NO", "");
                    if(CHNo.length() > 8) {
                        CHNo = CHNo.substring(CHNo.length()-8);
                    } else {
                        CHNo = EITLERPGLOBAL.padRightEx(CHNo, " ", 8);
                    }
                    String DepositSchemeName="";
                    if (Opg58.isSelected()){

                        rsCobol.updateString("TR_CHEQUE_NO", CHNo);
                    }
                    else if (Opg39.isSelected()){

                        int DepositSchemeID = data.getIntValueFromDB("SELECT SCHEME_TYPE FROM D_FD_SCHEME_MASTER WHERE SCHEME_ID='"+UtilFunctions.getString(rsData,"SCHEME_ID", "")+"'", FinanceGlobal.FinURL);
                        if (DepositSchemeID==1) {
                            DepositSchemeName = "FD";
                        }else if(DepositSchemeID==2){
                            DepositSchemeName = "LD";
                        }else if(DepositSchemeID==3){
                            DepositSchemeName = "CD";
                        }

                        rsCobol.updateString("TR_CHEQUE_NO",EITLERPGLOBAL.padRightEx(DepositSchemeName+cReceiptNo.substring(1), " ", 8) );

                    }
                    rsCobol.updateString("TR_REF_SR", "    ");

                    String CHDate = "";
                    if(ReceiptDate.equals("")) {
                        CHDate = EITLERPGLOBAL.padRightEx(CHDate, "0", 6);
                    } else {
                        CHDate = ReceiptDate.substring(8,10) + ReceiptDate.substring(5,7) + ReceiptDate.substring(2,4);
                    }
                    rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);

                    String PartyName = data.getStringValueFromDB("SELECT APPLICANT_NAME FROM D_FD_DEPOSIT_MASTER WHERE PARTY_CODE='"+PartyCode+"' AND RECEIPT_NO='"+erpReceiptNo+"' ",FinanceGlobal.FinURL);

                    if(PartyName.length() > 25) {
                        PartyName = PartyName.substring(0,25);
                    } else if(PartyName.length() < 25) {
                        PartyName = EITLERPGLOBAL.padRightEx(PartyName, " ", 25);
                    }
                    rsCobol.updateString("TR_DESCRIPTION", PartyName);
                    rsCobol.updateString("SALETAX_CODE", "00");

                    double Amount = UtilFunctions.getDouble(rsData,"AMOUNT",0);
                    String Amt = new BigDecimal(Amount*100).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
                    Amt = Amt.substring(0,Amt.indexOf("."));
                    if(Amt.length() < 11) {
                        Amt = EITLERPGLOBAL.padLeftEx(Amt, "0", 11);
                        //Amt = EITLERPGLOBAL.padRightEx(Amt, "0", 11);
                    }

                    rsCobol.updateString("TR_AMT", Amt);
                    rsCobol.updateString("TR_AMT_SIGN", "C");

                    String TRAllocCode = "000000";

                    rsCobol.updateString("TR_ALLOC_CODE", TRAllocCode);
                    rsCobol.updateString("TR_PO_AL", "  ");
                    rsCobol.updateString("TR_PO_NO", "      ");
                    rsCobol.updateString("TR_PO_FLG", "  ");
                    rsCobol.updateString("TR_BILL_AL","  ");
                    rsCobol.updateString("TR_BILL_NO", "000000");
                    rsCobol.updateString("TR_PO_FL","00");
                    rsCobol.updateString("TR_INV_Y1Y2","    ");
                    rsCobol.updateString("TR_DIR_IND"," ");
                    rsCobol.updateString("TR_TRAN_CODE", "00");
                    rsCobol.insertRow();

                    rsData.next();

                    if (Opg39.isSelected()){
                        Counter++;
                        rsCobol.moveToInsertRow();
                        rsCobol.updateInt("RECNO", Counter);
                        rsCobol.updateString("TR_REC_TYPE", "01");
                        rsCobol.updateString("TR_DIV_CODE", "03");
                        rsCobol.updateString("BOOK_CODE",BookCode );
                        rsCobol.updateString("TR_YR",ReceiptDate.substring(2,4));
                        rsCobol.updateString("TR_MT",ReceiptDate.substring(5,7));
                        rsCobol.updateString("TR_DT", ReceiptDate.substring(8,10));
                        rsCobol.updateString("TR_REF_AL","  ");

                        //rsCobol.updateString("TR_REF_NO","000003");
                        rsCobol.updateString("TR_REF_NO",EITLERPGLOBAL.padLeftEx(Integer.toString(RefCounter),"0",6));
                        rsCobol.updateString("TR_INV_AGSR", "000000");
                        String OldMainCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FD_DEPOSIT_MASTER WHERE  RECEIPT_NO='"+oReceiptNo+"' ",FinanceGlobal.FinURL);
                        String SchemeID  = data.getStringValueFromDB("SELECT SCHEME_ID FROM D_FD_DEPOSIT_MASTER WHERE  RECEIPT_NO='"+oReceiptNo+"' ",FinanceGlobal.FinURL);

                        rsCobol.updateString("TR_MAIN_CODE", OldMainCode);
                        rsCobol.updateString("TR_SUB_CODE", PartyCode);


                        int DepositSchemeID = data.getIntValueFromDB("SELECT SCHEME_TYPE FROM D_FD_SCHEME_MASTER WHERE SCHEME_ID='"+SchemeID+"'", FinanceGlobal.FinURL);
                        if (DepositSchemeID==1) {
                            DepositSchemeName = "FD";
                        }else if(DepositSchemeID==2){
                            DepositSchemeName = "LD";
                        }else if(DepositSchemeID==3){
                            DepositSchemeName = "CD";
                        }

                        //rsCobol.updateString("TR_CHEQUE_NO", DepositSchemeName+oReceiptNo.substring(1));
                        rsCobol.updateString("TR_CHEQUE_NO", EITLERPGLOBAL.padRightEx(DepositSchemeName+oReceiptNo.substring(1), " ", 8));

                        rsCobol.updateString("TR_REF_SR", "    ");
                        rsCobol.updateString("TR_CHQ_BILL_DATE", CHDate);
                        rsCobol.updateString("TR_DESCRIPTION", PartyName);
                        rsCobol.updateString("SALETAX_CODE", "00");
                        rsCobol.updateString("TR_AMT", Amt);
                        rsCobol.updateString("TR_AMT_SIGN", "D");
                        rsCobol.updateString("TR_ALLOC_CODE", TRAllocCode);
                        rsCobol.updateString("TR_PO_AL", "  ");
                        rsCobol.updateString("TR_PO_NO", "      ");
                        rsCobol.updateString("TR_PO_FLG", "  ");
                        rsCobol.updateString("TR_BILL_AL","  ");
                        rsCobol.updateString("TR_BILL_NO", "000000");
                        rsCobol.updateString("TR_PO_FL","00");
                        rsCobol.updateString("TR_INV_Y1Y2","    ");
                        rsCobol.updateString("TR_DIR_IND"," ");
                        rsCobol.updateString("TR_TRAN_CODE", "00");
                        rsCobol.insertRow();
                    }
                }
            }
        } catch(Exception e) {
            e.getMessage();
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Opg24;
    private javax.swing.JRadioButton Opg39;
    private javax.swing.JRadioButton Opg58;
    private javax.swing.JRadioButton Opg58or39None;
    private javax.swing.JRadioButton Opg82or24None;
    private javax.swing.JRadioButton Opg84;
    private javax.swing.JRadioButton OpgCD;
    private javax.swing.JRadioButton OpgDepositNone;
    private javax.swing.JRadioButton OpgFD;
    private javax.swing.JRadioButton OpgFresh;
    private javax.swing.JRadioButton OpgFreshorRenewalNone;
    private javax.swing.JRadioButton OpgLD;
    private javax.swing.JRadioButton OpgRenewal;
    private javax.swing.ButtonGroup bg5839;
    private javax.swing.ButtonGroup bg8224;
    private javax.swing.ButtonGroup bgDepositType;
    private javax.swing.ButtonGroup bgFreshorRenewal;
    private javax.swing.JComboBox cmbSelectType;
    private javax.swing.JButton cmdBook;
    private javax.swing.JButton cmdBook5839;
    private javax.swing.JButton cmdDeposit;
    private javax.swing.JButton cmdSalesInt;
    private javax.swing.JButton cmdShowFileDialog;
    private javax.swing.JButton cmdWarrant;
    private javax.swing.JButton cmdcd24;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblSaveFile;
    private javax.swing.JLabel lblSelectType;
    private javax.swing.JLabel lblToDate;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        cmbSelectTypeModel=new EITLComboModel();
        cmbSelectType.removeAllItems();
        cmbSelectType.setModel(cmbSelectTypeModel);
        
        ComboData aData=new ComboData();
        aData.Code=0;
        aData.Text="Select Action";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="Generate Deposit";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="Generate Warrant";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=3;        
        aData.Text="Generate 87-24";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=4;
        aData.Text="Generate 58-39";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=5;
        aData.Text="Sales Deposit Interest";
        cmbSelectTypeModel.addElement(aData);
    }
    
    private boolean Validate() {
        if(txtFile.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please specify file.");
            return true;
        }
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Insert from date");
            return true;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText().trim())) {
            JOptionPane.showMessageDialog(this,"Insert valid from date");
            return true;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Insert To date");
            return true;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText().trim())) {
            JOptionPane.showMessageDialog(this,"Insert valid To date");
            return true;
        }
        
        if(cmbSelectType.getSelectedIndex()==1 || cmbSelectType.getSelectedIndex()==2 || cmbSelectType.getSelectedIndex()==3) {
            if(OpgDepositNone.isSelected()) {
                JOptionPane.showMessageDialog(this,"Please select deposit type...");
                return true;
            }
            if(cmbSelectType.getSelectedIndex()==1) {
                if(OpgFreshorRenewalNone.isSelected()) {
                    JOptionPane.showMessageDialog(this,"Please select Fresh or Renewal...");
                    return true;
                }
            }
            if(cmbSelectType.getSelectedIndex()==3) {
                if(Opg82or24None.isSelected()) {
                    JOptionPane.showMessageDialog(this,"Please select 87 or 24...");
                    return true;
                }
            }
            
            if(cmbSelectType.getSelectedIndex()==4) {
                if(Opg58or39None.isSelected()) {
                    JOptionPane.showMessageDialog(this,"Please select 86 or 24...");
                    return true;
                }
            }
        }
        return false;
    }
}
