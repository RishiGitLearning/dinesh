/*
 * trexport.java
 *
 * Created on March 13, 2008, 10:55 AM
 */

//package Templates.Other;
package EITLERP.Finance;

/**
 *
 * @author  nitin
 */
import java.sql.*;
import java.util.*;
import java.io.*;
import EITLERP.*;
import EITLERP.Stores.*;
import TReportWriter.*;
import TReportWriter.SimpleDataProvider.*;
import java.awt.*;
import javax.swing.* ;
import EITLERP.Sales.clsSalesParty;
import java.math.BigDecimal;


public class frmTRExport_old extends javax.swing.JApplet {
    private EITLComboModel cmbSelectTypeModel;
    private Vector sVector ;
    private Vector gVector;
    private String BookCodeList = "";
    /** Initializes the applet trexport */
    public void init() {
        sVector = new Vector();
        gVector = new Vector();
        initComponents();
        setSize(380,390);
        GenerateCombo();
        jButton2.setVisible(false);
        txtFromDate.requestFocus();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        cmdPJV = new javax.swing.JButton();
        txtFromDate = new javax.swing.JTextField();
        lblFromDate = new javax.swing.JLabel();
        lblToDate = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        lblSaveFile = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        cmdShowFileDialog = new javax.swing.JButton();
        cmdJV = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cmdCashVoucher = new javax.swing.JButton();
        cmdBankVoucher = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        GeneratedTRPane = new javax.swing.JScrollPane();
        GeneratedTRList = new javax.swing.JList();
        SelectedTRPane = new javax.swing.JScrollPane();
        SelectedTRList = new javax.swing.JList();
        cmdAddtoSelectionList = new javax.swing.JButton();
        cmdRemovefromSelectionList = new javax.swing.JButton();
        cmbSelectType = new javax.swing.JComboBox();
        lblSelectType = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        cmdPJV.setText("PJV");
        cmdPJV.setNextFocusableComponent(txtFromDate);
        cmdPJV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPJVActionPerformed(evt);
            }
        });
        cmdPJV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdPJVMouseClicked(evt);
            }
        });

        getContentPane().add(cmdPJV);
        cmdPJV.setBounds(257, 319, 107, 20);

        txtFromDate.setColumns(15);
        txtFromDate.setText("01/04/2010");
        txtFromDate.setNextFocusableComponent(txtToDate);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 42, 90, 19);

        lblFromDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromDate.setText("From Date :");
        getContentPane().add(lblFromDate);
        lblFromDate.setBounds(10, 44, 80, 15);

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To Date :");
        getContentPane().add(lblToDate);
        lblToDate.setBounds(190, 44, 65, 15);

        txtToDate.setColumns(15);
        txtToDate.setText("30/04/2010");
        txtToDate.setNextFocusableComponent(cmbSelectType);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(261, 42, 90, 19);

        lblSaveFile.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSaveFile.setText("Save File :");
        getContentPane().add(lblSaveFile);
        lblSaveFile.setBounds(8, 297, 65, 15);

        txtFile.setColumns(15);
        txtFile.setText("/root/Desktop/pjv.txt");
        txtFile.setNextFocusableComponent(cmdShowFileDialog);
        getContentPane().add(txtFile);
        txtFile.setBounds(77, 295, 247, 19);

        cmdShowFileDialog.setText("Export TR");
        cmdShowFileDialog.setNextFocusableComponent(cmdCashVoucher);
        cmdShowFileDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowFileDialogActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShowFileDialog);
        cmdShowFileDialog.setBounds(328, 294, 30, 20);

        cmdJV.setText("JV");
        cmdJV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdJVActionPerformed(evt);
            }
        });

        getContentPane().add(cmdJV);
        cmdJV.setBounds(132, 343, 118, 18);

        jButton2.setText("Export TR Type 1");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(9, 349, 110, 30);

        cmdCashVoucher.setText("Cash Voucher");
        cmdCashVoucher.setNextFocusableComponent(cmdBankVoucher);
        cmdCashVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCashVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCashVoucher);
        cmdCashVoucher.setBounds(7, 319, 121, 20);

        cmdBankVoucher.setText("Bank Voucher");
        cmdBankVoucher.setNextFocusableComponent(cmdPJV);
        cmdBankVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBankVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdBankVoucher);
        cmdBankVoucher.setBounds(131, 319, 121, 20);

        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHeader.setText("GENERATE EXPORT DATA FROM ERP FOR COBOL");
        getContentPane().add(lblHeader);
        lblHeader.setBounds(12, 11, 351, 15);

        GeneratedTRPane.setViewportBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        GeneratedTRPane.setViewportView(GeneratedTRList);

        getContentPane().add(GeneratedTRPane);
        GeneratedTRPane.setBounds(10, 100, 100, 180);

        SelectedTRPane.setViewportBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        SelectedTRList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        SelectedTRPane.setViewportView(SelectedTRList);

        getContentPane().add(SelectedTRPane);
        SelectedTRPane.setBounds(250, 100, 100, 180);

        cmdAddtoSelectionList.setText("Add >>");
        cmdAddtoSelectionList.setNextFocusableComponent(cmdRemovefromSelectionList);
        cmdAddtoSelectionList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddtoSelectionListActionPerformed(evt);
            }
        });

        getContentPane().add(cmdAddtoSelectionList);
        cmdAddtoSelectionList.setBounds(118, 117, 112, 24);

        cmdRemovefromSelectionList.setText("Remove>>");
        cmdRemovefromSelectionList.setNextFocusableComponent(txtFile);
        cmdRemovefromSelectionList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemovefromSelectionListActionPerformed(evt);
            }
        });

        getContentPane().add(cmdRemovefromSelectionList);
        cmdRemovefromSelectionList.setBounds(119, 145, 110, 24);

        cmbSelectType.setNextFocusableComponent(cmdAddtoSelectionList);
        cmbSelectType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSelectTypeItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbSelectType);
        cmbSelectType.setBounds(96, 70, 161, 21);

        lblSelectType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSelectType.setText("Select Type :");
        getContentPane().add(lblSelectType);
        lblSelectType.setBounds(11, 72, 80, 15);

    }//GEN-END:initComponents
    
    private void cmdRemovefromSelectionListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemovefromSelectionListActionPerformed
        // TODO add your handling code here:
        try {
            Object[] selectedItemsNo = SelectedTRList.getSelectedValues();
            for(int i=0;i<selectedItemsNo.length;i++) {
                sVector.removeElement(sVector.get(sVector.indexOf(selectedItemsNo[i])));
            }
            SelectedTRList.setListData(sVector);
            SelectedTRList.clearSelection();
            GeneratedTRList.clearSelection();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdRemovefromSelectionListActionPerformed
    
    private void cmdAddtoSelectionListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddtoSelectionListActionPerformed
        // TODO add your handling code here:
        try {
            int[] selectedItemsNo = GeneratedTRList.getSelectedIndices();
            
            for(int i=0;i<selectedItemsNo.length;i++) {
                if(sVector.indexOf(gVector.get(selectedItemsNo[i]))!=-1) {
                    JOptionPane.showMessageDialog(this,"TR Code already exists.");
                    return;
                }
            }
            
            for(int i=0;i<selectedItemsNo.length;i++) {
                sVector.addElement(gVector.get(selectedItemsNo[i]));
            }
            SelectedTRList.setListData(sVector);
            SelectedTRList.clearSelection();
            GeneratedTRList.clearSelection();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdAddtoSelectionListActionPerformed
    
    private void cmbSelectTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSelectTypeItemStateChanged
        // TODO add your handling code here:
        try {
            ResultSet rsData;
            int Counter = 0;
            if(cmbSelectType.getSelectedIndex()==0) {
                cmdAddtoSelectionList.setEnabled(false);
                cmdRemovefromSelectionList.setEnabled(false);
                txtFile.setEnabled(false);
                cmdShowFileDialog.setEnabled(false);
                cmdCashVoucher.setEnabled(false);
                cmdBankVoucher.setEnabled(false);
                cmdPJV.setEnabled(false);
                cmdJV.setEnabled(false);
                gVector.clear();
                GeneratedTRList.setListData(gVector);
                sVector.clear();
                SelectedTRList.setListData(sVector);
            } else if(cmbSelectType.getSelectedIndex()==1) {
                cmdAddtoSelectionList.setEnabled(true);
                cmdRemovefromSelectionList.setEnabled(true);
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdCashVoucher.setEnabled(true);
                cmdBankVoucher.setEnabled(false);
                cmdPJV.setEnabled(false);
                cmdJV.setEnabled(false);
                String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE='01' AND BOOK_CODE<>'99' ORDER BY BOOK_CODE";  //AND VOUCHER_TYPE<>0
                rsData = data.getResult(SQL,FinanceGlobal.FinURL);
                rsData.first();
                Counter = 0;
                gVector.clear();
                while(!rsData.isAfterLast()){
                    Counter++;
                    gVector.addElement(rsData.getString("BOOK_CODE"));
                    rsData.next();
                }
                GeneratedTRList.setListData(gVector);
                sVector.clear();
                SelectedTRList.setListData(sVector);
            } else if(cmbSelectType.getSelectedIndex()==2) {
                cmdAddtoSelectionList.setEnabled(true);
                cmdRemovefromSelectionList.setEnabled(true);
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdCashVoucher.setEnabled(false);
                cmdBankVoucher.setEnabled(true);
                cmdPJV.setEnabled(false);
                cmdJV.setEnabled(false);
                String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE='01' AND BOOK_CODE<>'99' ORDER BY BOOK_CODE";  //AND VOUCHER_TYPE<>0
                rsData = data.getResult(SQL,FinanceGlobal.FinURL);
                rsData.first();
                Counter = 0;
                gVector.clear();
                while(!rsData.isAfterLast()){
                    Counter++;
                    gVector.addElement(rsData.getString("BOOK_CODE"));
                    rsData.next();
                }
                GeneratedTRList.setListData(gVector);
            } else if(cmbSelectType.getSelectedIndex()==3) {
                cmdAddtoSelectionList.setEnabled(true);
                cmdRemovefromSelectionList.setEnabled(true);
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdCashVoucher.setEnabled(false);
                cmdBankVoucher.setEnabled(false);
                cmdPJV.setEnabled(true);
                cmdJV.setEnabled(false);
                String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE='03' AND BOOK_CODE<>'99' ORDER BY BOOK_CODE";  //AND VOUCHER_TYPE<>0
                rsData = data.getResult(SQL,FinanceGlobal.FinURL);
                rsData.first();
                Counter = 0;
                gVector.clear();
                while(!rsData.isAfterLast()){
                    Counter++;
                    gVector.addElement(rsData.getString("BOOK_CODE"));
                    rsData.next();
                }
                GeneratedTRList.setListData(gVector);
                sVector.clear();
                SelectedTRList.setListData(sVector);
            } else if (cmbSelectType.getSelectedIndex()==4){
                cmdAddtoSelectionList.setEnabled(true);
                cmdRemovefromSelectionList.setEnabled(true);
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdCashVoucher.setEnabled(false);
                cmdBankVoucher.setEnabled(false);
                cmdPJV.setEnabled(false);
                cmdJV.setEnabled(true);
                String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE='02' AND BOOK_CODE<>'99' ORDER BY BOOK_CODE";  //AND VOUCHER_TYPE<>0
                rsData = data.getResult(SQL,FinanceGlobal.FinURL);
                rsData.first();
                Counter = 0;
                gVector.clear();
                while(!rsData.isAfterLast()){
                    Counter++;
                    gVector.addElement(rsData.getString("BOOK_CODE"));
                    rsData.next();
                }
                GeneratedTRList.setListData(gVector);
                sVector.clear();
                SelectedTRList.setListData(sVector);
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbSelectTypeItemStateChanged
    
    private void cmdBankVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBankVoucherActionPerformed
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(BankVoucher()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdBankVoucherActionPerformed
    
    private void cmdCashVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCashVoucherActionPerformed
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(CashVoucher()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdCashVoucherActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        //ExportTrType1();
        //ExportTrType2();
        //ExportTrType3();
        //ExportPJV();
        writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void cmdJVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdJVActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(ExportJV()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
    }//GEN-LAST:event_cmdJVActionPerformed
    
    private void cmdPJVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdPJVMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPJVMouseClicked
    
    private void cmdShowFileDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowFileDialogActionPerformed
        // TODO add your handling code here:
        FileDialog ff = new FileDialog(findParentFrame(this));
        ff.show();
        txtFile.setText(ff.getDirectory()+ff.getFile());
        
    }//GEN-LAST:event_cmdShowFileDialogActionPerformed
    
    private void cmdPJVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPJVActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(ExportPJVDeduction()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
    }//GEN-LAST:event_cmdPJVActionPerformed
    
    private void writeToFile(String FromDate,String ToDate) {
        try{
            String FromdMonth,FromdYear,FromdDate,TodMonth,TodYear,TodDate,MainCode,SubCode,AllocCode,PoNo,PoAl ="";
            FromdMonth = FromDate.substring(5,7);
            FromdDate = FromDate.substring(8,10);
            FromdYear = FromDate.substring(2,4);
            TodMonth = ToDate.substring(5,7);
            TodDate = ToDate.substring(8,10);
            TodYear = ToDate.substring(2,4);
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
            EITLERP.data.Execute("UPDATE TR_COBOL SET TR_PO_AL ='G ' WHERE TR_PO_NO LIKE 'B%'",FinanceGlobal.FinURL);
            //EITLERP.data.Execute("DELETE  FROM TR_COBOL WHERE TR_MAIN_CODE LIKE '<%' OR TR_SUB_CODE LIKE '<%' OR TR_ALLOC_CODE LIKE '<%'",FinanceGlobal.FinURL);
            ResultSet rsFile = EITLERP.data.getResult("SELECT * FROM TR_COBOL ",FinanceGlobal.FinURL);
            String PoFlag="";
            while (!rsFile.isAfterLast()) {
                
                MainCode = rsFile.getString("TR_MAIN_CODE");
                
                SubCode = rsFile.getString("TR_SUB_CODE");
                AllocCode = rsFile.getString("TR_ALLOC_CODE");
                if(MainCode.equals("441018") || MainCode.equals("214832")) {
                    boolean halt=true;
                }
                PoNo =rsFile.getString("TR_PO_NO");
                PoAl =rsFile.getString("TR_PO_AL");
                if (PoNo.length() > 6) {
                    String sPoNo = PoNo;
                    PoNo = sPoNo.substring(0,6);
                    PoFlag = sPoNo.substring(6);
                }
                else {
                    PoFlag="  ";
                }
                if (PoNo.equals("")) {
                    PoNo ="000000";
                }
                if (PoAl.equals("")) {
                    PoAl ="00";
                }
                if (MainCode.substring(0,1).equals("<")) {
                    MainCode ="000000";
                }
                if (!(SubCode.equals(""))) {
                    if(SubCode.substring(0,1).equals("<")) {
                        SubCode ="000000";
                    }
                }
                else if (SubCode.equals("")) {
                    SubCode="000000";
                }
                
                if (!(AllocCode.equals(""))) {
                    if(AllocCode.substring(0,1).equals("<")) {
                        AllocCode ="000000";
                    }
                }
                else if(AllocCode.equals("")) {
                    AllocCode="000000";
                }
                //aFile.write(rsFile.getString("TR_REC_TYPE")+rsFile.getString("TR_INV_AGSR")+rsFile.getString("TR_DIV_CODE")+rsFile.getString("BOOK_CODE")+rsFile.getString("TR_YR")+rsFile.getString("TR_MT")+rsFile.getString("TR_DT")+rsFile.getString("TR_REF_AL")+rsFile.getString("TR_REF_NO")+MainCode+SubCode+rsFile.getString("TR_CHEQUE_NO")+rsFile.getString("TR_REF_SR")+rsFile.getString("TR_CHQ_BILL_DATE")+rsFile.getString("TR_DESCRIPTION")+rsFile.getString("SALETAX_CODE")+rsFile.getString("TR_AMT")+rsFile.getString("TR_AMT_SIGN")+AllocCode+PoAl+PoNo+"  "+rsFile.getString("TR_BILL_NO")+"00"+rsFile.getString("TR_INV_Y1Y2")+" 00");
                //                    String BillAL = "";
                //                    if(MainCode.equals("125019")) {
                //                        BillAL = "  ";
                //                    } else {
                //                        BillAL = rsFile.getString("TR_BILL_AL");
                //                    }
                
                aFile.write(rsFile.getString("TR_REC_TYPE")+rsFile.getString("TR_INV_AGSR")+rsFile.getString("TR_DIV_CODE")+rsFile.getString("BOOK_CODE")+rsFile.getString("TR_YR")+rsFile.getString("TR_MT")+rsFile.getString("TR_DT")+rsFile.getString("TR_REF_AL")+rsFile.getString("TR_REF_NO")+MainCode+SubCode+rsFile.getString("TR_CHEQUE_NO")+rsFile.getString("TR_REF_SR")+rsFile.getString("TR_CHQ_BILL_DATE")+rsFile.getString("TR_DESCRIPTION")+rsFile.getString("SALETAX_CODE")+rsFile.getString("TR_AMT")+rsFile.getString("TR_AMT_SIGN")+AllocCode+PoAl+PoNo+PoFlag+rsFile.getString("TR_BILL_AL")+rsFile.getString("TR_BILL_NO")+"  "+rsFile.getString("TR_INV_Y1Y2")+" 00");
                aFile.newLine();
                rsFile.next();
            }
            aFile.close();
        }
        catch(Exception e)
        { e.printStackTrace();}
    }
    
    private void ExportTrType1(){
        
        // new Thread() {
        
        //    public void run(){
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String BlockNo="1";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        
        int refNo = 1 ;
        
        
        try {
            
            
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            
            /*EITLERP.data.Execute("DELETE FROM TMP_GENERAL",FinanceGlobal.FinURL);
            String strQuery = "INSERT INTO TMP_GENERAL(COLUMN_1,COLUMN_2,COLUMN_3,COLUMN_4,COLUMN_5,COLUMN_6,COLUMN_7,COLUMN_8,COLUMN_9,COLUMN_10,COLUMN_11,COLUMN_12,COLUMN_13,COLUMN_14,COLUMN_15,COLUMN_16,COLUMN_17,COLUMN_18,COLUMN_19,COLUMN_20,COLUMN_21,COLUMN_22,COLUMN_23,COLUMN_24)" ;
            EITLERP.data.Execute(strQuery+" SELECT '01'  TR_REC_TYPE,'000000' TR_INV_AGSR,'03'  TR_DIV_CODE,A.BOOK_CODE  TR_BOOK_CODE,DATE_FORMAT(A.VOUCHER_DATE,'%y')  TR_YR,DATE_FORMAT(A.VOUCHER_DATE,'%m')  TR_MT,DATE_FORMAT(A.VOUCHER_DATE,'%d')  TR_DY,'' TR_REF_AL,'' TR_REF__NO,B.MAIN_ACCOUNT_CODE  TR_MAIN_CODE,B.SUB_ACCOUNT_CODE  TR_SUB_CODE,A.CHEQUE_NO TR_CHEQUE_NO,DATE_FORMAT(A.CHEQUE_DATE,'%d%m%y')  TR_CHEQ_BILL_DATE,A.REMARKS AS TR_DESCRIPTION,B.AMOUNT  TR_AMT,B.EFFECT TR_AMT_SIGN,'' TR_ALLOC_CODE,B.PO_NO  TR_PO_NO, A.ST_CATEGORY AS TR_SALETAX,B.INVOICE_NO  TR_BILL_NO,CONCAT(substr(year(B.INVOICE_DATE),3,2),(substr(year(B.INVOICE_DATE),3,2)+1))  TR_INV_Y1Y2 ,DATE_FORMAT(B.INVOICE_DATE,'%d%m%y') BILL_DATE,B.BLOCK_NO  AS EX_BLOCK_NO,A.VOUCHER_NO VOUCHER_NO FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B  WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE >='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND A.VOUCHER_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND A.VOUCHER_NO NOT LIKE 'M%' AND A.BOOK_CODE IN(04,12,10,13,15,16,17,18,19,20,24,40,41,42,43,44,61,63,64,65,67,70,71,72,73,74,75,76,77,78,79,80) AND A.COMPANY_ID =2  ORDER BY A.VOUCHER_NO,B.SR_NO",FinanceGlobal.FinURL);
            ResultSet rsTmp=EITLERP.data.getResult("SELECT * FROM TMP_GENERAL ORDER BY COLUMN_4,COLUMN_5,COLUMN_6,COLUMN_7,COLUMN_24,COLUMN_23,COLUMN_16",FinanceGlobal.FinURL);
            rsTmp.last();
            rsTmp.first();
            VoucherNo = rsTmp.getString("COLUMN_24");
            BlockNo = rsTmp.getString("COLUMN_23");*/
            
            ResultSet rsVoucher,rsBlock,rsHeader,rsTmp;
            //rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND BOOK_CODE IN (63) AND APPROVED ='1' AND CANCELLED ='0' AND VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY VOUCHER_DATE,BOOK_CODE",FinanceGlobal.FinURL);
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE BOOK_CODE IN (23,26,27,28,29,30,31,32,33,34,35,36,37,38,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,70,71,72,73,74,75,76,77,78,79,80) AND VOUCHER_NO NOT LIKE 'M%'  AND APPROVED ='1' AND CANCELLED ='0' AND VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY VOUCHER_DATE,BOOK_CODE",FinanceGlobal.FinURL);
            //rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE BOOK_CODE IN (36) AND VOUCHER_NO NOT LIKE 'M%'  AND APPROVED ='1' AND CANCELLED ='0' AND VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY VOUCHER_DATE,BOOK_CODE",FinanceGlobal.FinURL);
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    String VoucherDate=rsHeader.getString("VOUCHER_DATE");
                    
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    
                    //Generate New Reference No.
                    String LastNo=Integer.toString(UtilFunctions.CInt(EITLERP.data.getStringValueFromDB("SELECT MAX(TR_REF_NO) AS MAX_NO FROM TR_COBOL WHERE TR_MT='"+Month+"' AND TR_DT='"+Day+"' AND BOOK_CODE='"+BookCode+"'",FinanceGlobal.FinURL))+1);
                    String RefNo=EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    int RefSrNo=0;
                    
                    
                    rsBlock=EITLERP.data.getResult("SELECT DISTINCT(BLOCK_NO) FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                    rsBlock.first();
                    
                    if(rsBlock.getRow()>0) {
                        
                        while(!rsBlock.isAfterLast()) {
                            
                            BlockNo = rsBlock.getString("BLOCK_NO");
                            String Sign,ChequeNo,BillDate,ChequeDate,Description,SaleTaxCode,TrAmount,TrSign ="";
                            String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                            PoAl="";
                            PoNo="";
                            chrPoNo="";
                            //BlockNo = rsBlock.getString("BLOCK_NO");
                            if(EITLERP.data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX A,D_FIN_TR_MAPPING B,D_FIN_VOUCHER_HEADER C WHERE A.VOUCHER_NO  ='"+VoucherNo+"' AND A.VOUCHER_NO =C.VOUCHER_NO AND B.ITEM_CODE = '"+rsHeader.getString("BOOK_CODE")+"' AND A.MAIN_ACCOUNT_CODE =B.MAIN_ACCOUNT_CODE AND A.BLOCK_NO ='"+BlockNo+"'",FinanceGlobal.FinURL)) {
                                if(EITLERP.data.IsRecordExist("SELECT B.MAIN_ACCOUNT_CODE,B.EFFECT FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B,D_FIN_TR_MAPPING C WHERE A.VOUCHER_NO ='"+VoucherNo+"'  AND B.BLOCK_NO ='"+BlockNo+"' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.BOOK_CODE =C.ITEM_CODE AND C.MAIN_ACCOUNT_CODE = B.MAIN_ACCOUNT_CODE",FinanceGlobal.FinURL)) {
                                    rsTmp = EITLERP.data.getResult("SELECT B.MAIN_ACCOUNT_CODE,B.EFFECT FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B,D_FIN_TR_MAPPING C WHERE A.VOUCHER_NO ='"+VoucherNo+"'  AND B.BLOCK_NO ='"+BlockNo+"' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.BOOK_CODE =C.ITEM_CODE AND C.MAIN_ACCOUNT_CODE = B.MAIN_ACCOUNT_CODE",FinanceGlobal.FinURL);
                                    System.out.println(VoucherNo +"Date :"+VoucherDate);
                                    AllocationCode = rsTmp.getString("MAIN_ACCOUNT_CODE");
                                    Sign = rsTmp.getString("EFFECT");
                                    
                                    rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT <>'"+Sign+"'",FinanceGlobal.FinURL);
                                    Sign=rsTmp.getString("EFFECT");
                                    
                                    // Export this entry to Cobol
                                    rsCobol.moveToInsertRow();
                                    rsCobol.updateString("TR_REC_TYPE", "01");
                                    rsCobol.updateString("TR_INV_AGSR", "000000");
                                    rsCobol.updateString("TR_DIV_CODE", "03");
                                    rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                                    rsCobol.updateString("TR_YR",Year);
                                    rsCobol.updateString("TR_MT",Month);
                                    rsCobol.updateString("TR_DT",Day);
                                    rsCobol.updateString("TR_REF_AL","  ");
                                    rsCobol.updateString("TR_REF_NO",RefNo);
                                    rsCobol.updateString("TR_MAIN_CODE",rsTmp.getString("MAIN_ACCOUNT_CODE"));
                                    rsCobol.updateString("TR_SUB_CODE",rsTmp.getString("SUB_ACCOUNT_CODE"));
                                    
                                    
                                    //(1) Cheque No. Start ==================================
                                    if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                        ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                        
                                        if(ChequeNo.length()>8) {
                                            ChequeNo=ChequeNo.substring(0,8);
                                        }
                                        else {
                                            ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                        }
                                        
                                        rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                    }
                                    else {
                                        rsCobol.updateString("TR_CHEQUE_NO","00000000");
                                    }
                                    //==============Cheque No. Over ========================
                                    
                                    
                                    //(2) Cheque/Bill Date =====================================
                                    BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                                    ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                    
                                    
                                    if(!BillDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                    }
                                    else {
                                        if(!ChequeDate.trim().equals("")) {
                                            rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                        }
                                        else {
                                            //No bill date and cheque date specified
                                            rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                        }
                                    }
                                    //================ Cheque/Bill Date Over =======================
                                    
                                    
                                    
                                    //(3) Description ==============================================
                                    Description=UtilFunctions.getString(rsHeader,"REMARKS","");
                                    if(Description.length()>25) {
                                        Description=Description.substring(0,25);
                                    }
                                    else {
                                        Description=EITLERPGLOBAL.padRight(25, Description," ");
                                    }
                                    
                                    rsCobol.updateString("TR_DESCRIPTION", Description);
                                    //==============================================================
                                    
                                    
                                    
                                    //(4) Sales Tax Category =========================================
                                    SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                                    
                                    if(SaleTaxCode.length()>2) {
                                        SaleTaxCode=SaleTaxCode.substring(0,2);
                                    }
                                    else {
                                        SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                                    }
                                    
                                    
                                    rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                                    //===============================================================
                                    
                                    //(5) Amount ======================================================
                                    TrAmount = Integer.toString(UtilFunctions.getInt(rsTmp,"AMOUNT",0)*100);
                                    //String TrAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsTmp,"AMOUNT", 0), 2));
                                    if(TrAmount.length()>11) {
                                        TrAmount=TrAmount.substring(0,11);
                                    }
                                    else {
                                        TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                                    }
                                    
                                    rsCobol.updateString("TR_AMT", TrAmount);
                                    //=================================================================
                                    
                                    
                                    //(6) Amount Sign =====================================================
                                    TrSign = UtilFunctions.getString(rsTmp,"EFFECT","");
                                    rsCobol.updateString("TR_AMT_SIGN", TrSign);
                                    // Amount Sign Over ================================================
                                    
                                    
                                    //(7) PO No. and suffix ==============================================
                                    
                                    if(VoucherNo.equals("PA076100205")) {
                                        boolean halt=true;
                                    }
                                    PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                    
                                    if(PoAl.equals("")) {
                                        PoAl ="   ";
                                    }
                                    
                                    if (PoAl.substring(0,1).equals("B")) {
                                        chrPoAl = "G ";
                                    }
                                    else if (PoAl.substring(0,1).equals("P")) {
                                        chrPoAl = "P ";
                                    }
                                    else if (PoAl.substring(0,1).equals("W")) {
                                        chrPoAl = "W ";
                                    }
                                    
                                    //PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").substring(0,1);
                                    
                                    else if (PoAl.substring(0,1).equals("A")) {
                                        if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                            chrPoAl = "A " ;
                                        else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                            chrPoAl = "CP";
                                        }
                                    }
                                    else if (PoAl.substring(0,2).equals("A3")) {
                                        chrPoAl = "CP";
                                    }
                                    else if (PoAl.substring(0,2).equals("D-")) {
                                        chrPoAl ="D ";
                                    }
                                    else if (PoAl.substring(0,2).equals("I/")) {
                                        chrPoAl ="I ";
                                    }
                                    else if (PoAl.substring(0,1).equals("S")) {
                                        chrPoAl ="S ";
                                    }
                                    else if (PoAl.substring(0,2).equals("RM")) {
                                        chrPoAl ="RM";
                                    }
                                    else if (PoAl.substring(0,2).equals("CA")) {
                                        chrPoAl ="CA";
                                    }
                                    
                                    else {
                                        chrPoAl ="  ";
                                    }
                                    
                                    rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                    
                                    
                                    
                                    PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                    if(PoNo.trim().equals("")) {
                                        PoNo ="000000";
                                    }
                                    
                                    //System.out.println("PO Length" + PoNo.length());
                                    
                                    if (PoNo.substring(0,1).equals("B")) {
                                        if(PoNo.length()==6) {
                                            chrPoNo = "B" + PoNo.substring(1,6);
                                        }
                                        else {
                                            chrPoNo = "B" + PoNo.substring(2,7);
                                        }
                                    }
                                    else if (PoNo.substring(0,1).equals("G")) {
                                        chrPoNo = "B0" + PoNo.substring(2,6);
                                    }
                                    else if (PoNo.substring(0,1).equals("W")) {
                                        chrPoNo = PoNo.substring(1,7);
                                    }
                                    else if (PoNo.substring(0,1).equals("P")) {
                                        chrPoNo = PoNo.substring(1,7);
                                    }
                                    else if (PoNo.substring(0,1).equals("A")) {
                                        if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                            chrPoNo = "0" +PoNo.substring(1,6);
                                        else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                            chrPoNo = "A"+PoNo.substring(2,7);
                                        }
                                        
                                    }
                                    
                                    //PoNo = PoNo.substring(0,2);
                                    else if (PoNo.substring(0,2).equals("D-")) {
                                        chrPoNo = "0"+ PoNo.substring(2,7);
                                    }
                                    
                                    else if (PoNo.substring(0,2).equals("I/")) {
                                        chrPoNo = PoNo.substring(2,8);
                                    }
                                    
                                    else if (PoNo.substring(0,1).equals("S")) {
                                        
                                        if(PoNo.length()==6) {
                                            chrPoNo = "0" + PoNo.substring(1,6);
                                        }
                                        else {
                                            chrPoNo = "0" + PoNo.substring(2,7);
                                        }
                                        
                                    }
                                    else if (PoNo.substring(0,2).equals("CA")) {
                                        chrPoNo = "0"+PoNo.substring(2,7);
                                    }
                                    else if (PoNo.substring(0,2).equals("RM")) {
                                        chrPoNo = "0"+PoNo.substring(2,7);
                                    }
                                    else {
                                        chrPoNo = "000000" ;
                                    }
                                    
                                    
                                    rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                    //  PO Over ==================================================================
                                    
                                    
                                    //(7) PO Flag ================================================================
                                    PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                                    
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                    }
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3"))
                                        
                                    {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLSA");
                                    }
                                    
                                    rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    
                                    
                                    //(8) Invoice No. ============================================================
                                    BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO","0");
                                    if(BillNo.length()>8) {
                                        BillNo=BillNo.substring(0,8);
                                    }
                                    else {
                                        BillNo=EITLERPGLOBAL.padLeft(8, BillNo,"0");
                                    }
                                    
                                    rsCobol.updateString("TR_BILL_NO",BillNo);
                                    //============================================================================
                                    
                                    
                                    
                                    //(9) Year ===================================================================
                                    Yr1_Yr2="0000";
                                    // Yr1_Yr2 = Integer.toString(EITLERPGLOBAL.FinYearFrom).substring(2,3)+Integer.toString(EITLERPGLOBAL.FinYearTo).substring(2,3);
                                    rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    
                                    //(10) Reference sr. no. and fixed transaction code ==========================
                                    RefSrNo++;
                                    strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                                    rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                    rsCobol.updateString("TR_TRAN_CODE","000");
                                    //============================================================================
                                    
                                    
                                    //**** Find Opposite Entry ***********//
                                    //rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT<>'"+Sign+"'",FinanceGlobal.FinURL);
                                    //Replace allocation code of above record with this record's main code
                                    
                                    
                                    //(11) Allocation Code =======================================================
                                    //AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                                    //rsCobol.updateString("TR_ALLOC_CODE",AllocationCode);Commented By nisarg
                                    rsCobol.updateString("TR_ALLOC_CODE","000000");
                                    //============================================================================
                                    
                                    rsCobol.insertRow() ;
                                }
                                else if(EITLERP.data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND MAIN_ACCOUNT_CODE<>'' AND SUB_ACCOUNT_CODE<>''",FinanceGlobal.FinURL)) {
                                    rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND MAIN_ACCOUNT_CODE<>'' AND SUB_ACCOUNT_CODE<>''",FinanceGlobal.FinURL);
                                    System.out.println(VoucherNo +"Date :"+VoucherDate);
                                    
                                    Sign=rsTmp.getString("EFFECT");
                                    
                                    // Export this entry to Cobol
                                    rsCobol.moveToInsertRow();
                                    rsCobol.updateString("TR_REC_TYPE", "01");
                                    rsCobol.updateString("TR_INV_AGSR", "000000");
                                    rsCobol.updateString("TR_DIV_CODE", "03");
                                    rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                                    rsCobol.updateString("TR_YR",Year);
                                    rsCobol.updateString("TR_MT",Month);
                                    rsCobol.updateString("TR_DT",Day);
                                    rsCobol.updateString("TR_REF_AL","  ");
                                    rsCobol.updateString("TR_REF_NO",RefNo);
                                    rsCobol.updateString("TR_MAIN_CODE",rsTmp.getString("MAIN_ACCOUNT_CODE"));
                                    rsCobol.updateString("TR_SUB_CODE",rsTmp.getString("SUB_ACCOUNT_CODE"));
                                    
                                    
                                    //(1) Cheque No. Start ==================================
                                    if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                        ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                        
                                        if(ChequeNo.length()>8) {
                                            ChequeNo=ChequeNo.substring(0,8);
                                        }
                                        else {
                                            ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                        }
                                        
                                        rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                    }
                                    else {
                                        rsCobol.updateString("TR_CHEQUE_NO","00000000");
                                    }
                                    //==============Cheque No. Over ========================
                                    
                                    
                                    //(2) Cheque/Bill Date =====================================
                                    BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                                    ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                    
                                    
                                    if(!BillDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                    }
                                    else {
                                        if(!ChequeDate.trim().equals("")) {
                                            rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                        }
                                        else {
                                            //No bill date and cheque date specified
                                            rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                        }
                                    }
                                    //================ Cheque/Bill Date Over =======================
                                    
                                    
                                    
                                    //(3) Description ==============================================
                                    Description=UtilFunctions.getString(rsHeader,"REMARKS","");
                                    if(Description.length()>25) {
                                        Description=Description.substring(0,25);
                                    }
                                    else {
                                        Description=EITLERPGLOBAL.padRight(25, Description," ");
                                    }
                                    
                                    rsCobol.updateString("TR_DESCRIPTION", Description);
                                    //==============================================================
                                    
                                    
                                    
                                    //(4) Sales Tax Category =========================================
                                    SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                                    
                                    if(SaleTaxCode.length()>2) {
                                        SaleTaxCode=SaleTaxCode.substring(0,2);
                                    }
                                    else {
                                        SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                                    }
                                    
                                    
                                    rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                                    //===============================================================
                                    
                                    //(5) Amount ======================================================
                                    TrAmount = Integer.toString(UtilFunctions.getInt(rsTmp,"AMOUNT",0)*100);
                                    //String TrAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsTmp,"AMOUNT", 0), 2));
                                    if(TrAmount.length()>11) {
                                        TrAmount=TrAmount.substring(0,11);
                                    }
                                    else {
                                        TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                                    }
                                    
                                    rsCobol.updateString("TR_AMT", TrAmount);
                                    //=================================================================
                                    
                                    
                                    //(6) Amount Sign =====================================================
                                    TrSign = UtilFunctions.getString(rsTmp,"EFFECT","");
                                    rsCobol.updateString("TR_AMT_SIGN", TrSign);
                                    // Amount Sign Over ================================================
                                    
                                    
                                    //(7) PO No. and suffix ==============================================
                                    
                                    if(VoucherNo.equals("PA076100205")) {
                                        boolean halt=true;
                                    }
                                    PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                    
                                    if(PoAl.equals("")) {
                                        PoAl ="   ";
                                    }
                                    
                                    if (PoAl.substring(0,1).equals("B")) {
                                        chrPoAl = "G ";
                                    }
                                    else if (PoAl.substring(0,1).equals("P")) {
                                        chrPoAl = "P ";
                                    }
                                    else if (PoAl.substring(0,1).equals("W")) {
                                        chrPoAl = "W ";
                                    }
                                    
                                    //PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").substring(0,1);
                                    
                                    else if (PoAl.substring(0,1).equals("A")) {
                                        if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                            chrPoAl = "A " ;
                                        else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                            chrPoAl = "CP";
                                        }
                                    }
                                    else if (PoAl.substring(0,2).equals("A3")) {
                                        chrPoAl = "CP";
                                    }
                                    else if (PoAl.substring(0,2).equals("D-")) {
                                        chrPoAl ="D ";
                                    }
                                    else if (PoAl.substring(0,2).equals("I/")) {
                                        chrPoAl ="I ";
                                    }
                                    else if (PoAl.substring(0,1).equals("S")){
                                        chrPoAl ="S ";
                                    }
                                    else if (PoAl.substring(0,2).equals("RM")) {
                                        chrPoAl ="RM";
                                    }
                                    else if (PoAl.substring(0,2).equals("CA")) {
                                        chrPoAl ="CA";
                                    }
                                    
                                    else {
                                        chrPoAl ="  ";
                                    }
                                    
                                    rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                    
                                    
                                    
                                    PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                    if(PoNo.trim().equals("")) {
                                        PoNo ="000000";
                                    }
                                    
                                    //System.out.println("PO Length" + PoNo.length());
                                    
                                    if (PoNo.substring(0,1).equals("B")) {
                                        if(PoNo.length()==6) {
                                            chrPoNo = "B" + PoNo.substring(1,6);
                                        }
                                        else {
                                            chrPoNo = "B" + PoNo.substring(2,7);
                                        }
                                    }
                                    else if (PoNo.substring(0,1).equals("G")) {
                                        chrPoNo = "B0" + PoNo.substring(2,6);
                                    }
                                    else if (PoNo.substring(0,1).equals("W")) {
                                        chrPoNo = PoNo.substring(1,7);
                                    }
                                    else if (PoNo.substring(0,1).equals("P")) {
                                        chrPoNo = PoNo.substring(1,7);
                                    }
                                    else if (PoNo.substring(0,1).equals("A")) {
                                        if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                            chrPoNo = "0" +PoNo.substring(1,6);
                                        else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                            chrPoNo = "A"+PoNo.substring(2,7);
                                        }
                                        
                                    }
                                    
                                    //PoNo = PoNo.substring(0,2);
                                    else if (PoNo.substring(0,2).equals("D-")) {
                                        chrPoNo = "0"+ PoNo.substring(2,7);
                                    }
                                    
                                    else if (PoNo.substring(0,2).equals("I/")) {
                                        chrPoNo = PoNo.substring(2,8);
                                    }
                                    
                                    else if (PoNo.substring(0,1).equals("S")) {
                                        
                                        if(PoNo.length()==6) {
                                            chrPoNo = "0" + PoNo.substring(1,6);
                                        }
                                        else {
                                            chrPoNo = "0" + PoNo.substring(2,7);
                                        }
                                        
                                    }
                                    else if (PoNo.substring(0,2).equals("CA")) {
                                        chrPoNo = "0"+PoNo.substring(2,7);
                                    }
                                    else if (PoNo.substring(0,2).equals("RM")) {
                                        chrPoNo = "0"+PoNo.substring(2,7);
                                    }
                                    else {
                                        chrPoNo = "000000" ;
                                    }
                                    
                                    
                                    rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                    //  PO Over ==================================================================
                                    
                                    
                                    //(7) PO Flag ================================================================
                                    PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                                    
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                    }
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3"))
                                        
                                    {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLSA");
                                    }
                                    
                                    rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    
                                    
                                    //(8) Invoice No. ============================================================
                                    BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO","0");
                                    if(BillNo.length()>8) {
                                        BillNo=BillNo.substring(0,8);
                                    }
                                    else {
                                        BillNo=EITLERPGLOBAL.padLeft(8, BillNo,"0");
                                    }
                                    
                                    rsCobol.updateString("TR_BILL_NO",BillNo);
                                    rsCobol.updateString("TR_BILL_AL","  ");
                                    //============================================================================
                                    
                                    
                                    
                                    //(9) Year ===================================================================
                                    Yr1_Yr2="0000";
                                    // Yr1_Yr2 = Integer.toString(EITLERPGLOBAL.FinYearFrom).substring(2,3)+Integer.toString(EITLERPGLOBAL.FinYearTo).substring(2,3);
                                    rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    
                                    //(10) Reference sr. no. and fixed transaction code ==========================
                                    RefSrNo++;
                                    strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                                    rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                    rsCobol.updateString("TR_TRAN_CODE","000");
                                    //============================================================================
                                    
                                    
                                    //**** Find Opposite Entry ***********//
                                    rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT<>'"+Sign+"'",FinanceGlobal.FinURL);
                                    //Replace allocation code of above record with this record's main code
                                    
                                    
                                    //(11) Allocation Code =======================================================
                                    AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                                    //rsCobol.updateString("TR_ALLOC_CODE",AllocationCode);commented by nisarg
                                    rsCobol.updateString("TR_ALLOC_CODE","000000");
                                    //============================================================================
                                    
                                    rsCobol.insertRow() ;
                                    
                                    
                                }
                                else {
                                    rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO='"+BlockNo+"' LIMIT 1",FinanceGlobal.FinURL);
                                    System.out.println(VoucherNo +"Date :"+VoucherDate);
                                    
                                    Sign=rsTmp.getString("EFFECT");
                                    
                                    // Export this entry to Cobol
                                    rsCobol.moveToInsertRow();
                                    rsCobol.updateString("TR_REC_TYPE", "01");
                                    rsCobol.updateString("TR_INV_AGSR", "000000");
                                    rsCobol.updateString("TR_DIV_CODE", "03");
                                    rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                                    rsCobol.updateString("TR_YR",Year);
                                    rsCobol.updateString("TR_MT",Month);
                                    rsCobol.updateString("TR_DT",Day);
                                    rsCobol.updateString("TR_REF_AL","  ");
                                    rsCobol.updateString("TR_REF_NO",RefNo);
                                    rsCobol.updateString("TR_MAIN_CODE",rsTmp.getString("MAIN_ACCOUNT_CODE"));
                                    rsCobol.updateString("TR_SUB_CODE",rsTmp.getString("SUB_ACCOUNT_CODE"));
                                    
                                    
                                    //(1) Cheque No. Start ==================================
                                    if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                        ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                        
                                        if(ChequeNo.length()>8) {
                                            ChequeNo=ChequeNo.substring(0,8);
                                        }
                                        else {
                                            ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                        }
                                        
                                        rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                    }
                                    else {
                                        rsCobol.updateString("TR_CHEQUE_NO","00000000");
                                    }
                                    //==============Cheque No. Over ========================
                                    
                                    
                                    //(2) Cheque/Bill Date =====================================
                                    BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                                    ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                    
                                    
                                    if(!BillDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                    }
                                    else {
                                        if(!ChequeDate.trim().equals("")) {
                                            rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                        }
                                        else {
                                            //No bill date and cheque date specified
                                            rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                        }
                                    }
                                    //================ Cheque/Bill Date Over =======================
                                    
                                    
                                    
                                    //(3) Description ==============================================
                                    Description=UtilFunctions.getString(rsHeader,"REMARKS","");
                                    if(Description.length()>25) {
                                        Description=Description.substring(0,25);
                                    }
                                    else {
                                        Description=EITLERPGLOBAL.padRight(25, Description," ");
                                    }
                                    
                                    rsCobol.updateString("TR_DESCRIPTION", Description);
                                    //==============================================================
                                    
                                    
                                    
                                    //(4) Sales Tax Category =========================================
                                    SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                                    
                                    if(SaleTaxCode.length()>2) {
                                        SaleTaxCode=SaleTaxCode.substring(0,2);
                                    }
                                    else {
                                        SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                                    }
                                    
                                    
                                    rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                                    //===============================================================
                                    
                                    //(5) Amount ======================================================
                                    TrAmount = Integer.toString(UtilFunctions.getInt(rsTmp,"AMOUNT",0)*100);
                                    //String TrAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsTmp,"AMOUNT", 0), 2));
                                    if(TrAmount.length()>11) {
                                        TrAmount=TrAmount.substring(0,11);
                                    }
                                    else {
                                        TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                                    }
                                    
                                    rsCobol.updateString("TR_AMT", TrAmount);
                                    //=================================================================
                                    
                                    
                                    //(6) Amount Sign =====================================================
                                    TrSign = UtilFunctions.getString(rsTmp,"EFFECT","");
                                    rsCobol.updateString("TR_AMT_SIGN", TrSign);
                                    // Amount Sign Over ================================================
                                    
                                    
                                    //(7) PO No. and suffix ==============================================
                                    
                                    if(VoucherNo.equals("PA076100205")) {
                                        boolean halt=true;
                                    }
                                    PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                    
                                    if(PoAl.equals("")) {
                                        PoAl ="   ";
                                    }
                                    
                                    if (PoAl.substring(0,1).equals("B")) {
                                        chrPoAl = "G ";
                                    }
                                    else if (PoAl.substring(0,1).equals("P")) {
                                        chrPoAl = "P ";
                                    }
                                    else if (PoAl.substring(0,1).equals("W")) {
                                        chrPoAl = "W ";
                                    }
                                    
                                    //PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").substring(0,1);
                                    
                                    else if (PoAl.substring(0,1).equals("A")) {
                                        if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                            chrPoAl = "A " ;
                                        else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                            chrPoAl = "CP";
                                        }
                                    }
                                    else if (PoAl.substring(0,2).equals("A3")) {
                                        chrPoAl = "CP";
                                    }
                                    else if (PoAl.substring(0,2).equals("D-")) {
                                        chrPoAl ="D ";
                                    }
                                    else if (PoAl.substring(0,2).equals("I/")) {
                                        chrPoAl ="I ";
                                    }
                                    else if (PoAl.substring(0,1).equals("S")){
                                        chrPoAl ="S ";
                                    }
                                    else if (PoAl.substring(0,2).equals("RM")) {
                                        chrPoAl ="RM";
                                    }
                                    else if (PoAl.substring(0,2).equals("CA")) {
                                        chrPoAl ="CA";
                                    }
                                    
                                    else {
                                        chrPoAl ="  ";
                                    }
                                    
                                    rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                    
                                    
                                    
                                    PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                    if(PoNo.trim().equals("")) {
                                        PoNo ="000000";
                                    }
                                    
                                    //System.out.println("PO Length" + PoNo.length());
                                    
                                    if (PoNo.substring(0,1).equals("B")) {
                                        if(PoNo.length()==6) {
                                            chrPoNo = "B" + PoNo.substring(1,6);
                                        }
                                        else {
                                            chrPoNo = "B" + PoNo.substring(2,7);
                                        }
                                    }
                                    else if (PoNo.substring(0,1).equals("G")) {
                                        chrPoNo = "B0" + PoNo.substring(2,6);
                                    }
                                    else if (PoNo.substring(0,1).equals("W")) {
                                        chrPoNo = PoNo.substring(1,7);
                                    }
                                    else if (PoNo.substring(0,1).equals("P")) {
                                        chrPoNo = PoNo.substring(1,7);
                                    }
                                    else if (PoNo.substring(0,1).equals("A")) {
                                        if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                            chrPoNo = "0" +PoNo.substring(1,6);
                                        else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                            chrPoNo = "A"+PoNo.substring(2,7);
                                        }
                                        
                                    }
                                    
                                    //PoNo = PoNo.substring(0,2);
                                    else if (PoNo.substring(0,2).equals("D-")) {
                                        chrPoNo = "0"+ PoNo.substring(2,7);
                                    }
                                    
                                    else if (PoNo.substring(0,2).equals("I/")) {
                                        chrPoNo = PoNo.substring(2,8);
                                    }
                                    
                                    else if (PoNo.substring(0,1).equals("S")) {
                                        
                                        if(PoNo.length()==6) {
                                            chrPoNo = "0" + PoNo.substring(1,6);
                                        }
                                        else {
                                            chrPoNo = "0" + PoNo.substring(2,7);
                                        }
                                        
                                    }
                                    else if (PoNo.substring(0,2).equals("CA")) {
                                        chrPoNo = "0"+PoNo.substring(2,7);
                                    }
                                    else if (PoNo.substring(0,2).equals("RM")) {
                                        chrPoNo = "0"+PoNo.substring(2,7);
                                    }
                                    else {
                                        chrPoNo = "000000" ;
                                    }
                                    
                                    
                                    rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                    //  PO Over ==================================================================
                                    
                                    
                                    //(7) PO Flag ================================================================
                                    PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                                    
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                    }
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3"))
                                        
                                    {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLSA");
                                    }
                                    
                                    rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    
                                    
                                    //(8) Invoice No. ============================================================
                                    BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO","0");
                                    if(BillNo.length()>8) {
                                        BillNo=BillNo.substring(0,8);
                                    }
                                    else {
                                        BillNo=EITLERPGLOBAL.padLeft(8, BillNo,"0");
                                    }
                                    
                                    rsCobol.updateString("TR_BILL_NO",BillNo);
                                    //============================================================================
                                    
                                    
                                    
                                    //(9) Year ===================================================================
                                    Yr1_Yr2="0000";
                                    // Yr1_Yr2 = Integer.toString(EITLERPGLOBAL.FinYearFrom).substring(2,3)+Integer.toString(EITLERPGLOBAL.FinYearTo).substring(2,3);
                                    rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    
                                    //(10) Reference sr. no. and fixed transaction code ==========================
                                    RefSrNo++;
                                    strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                                    rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                    rsCobol.updateString("TR_TRAN_CODE","000");
                                    //============================================================================
                                    
                                    
                                    //**** Find Opposite Entry ***********//
                                    rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT<>'"+Sign+"'",FinanceGlobal.FinURL);
                                    //Replace allocation code of above record with this record's main code
                                    
                                    
                                    //(11) Allocation Code =======================================================
                                    AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                                    rsCobol.updateString("TR_ALLOC_CODE","000000");
                                    //============================================================================
                                    
                                    rsCobol.insertRow() ;
                                    
                                    
                                }
                            }
                            else {
                                System.out.println("Voucher No."+VoucherNo+"Block No."+BlockNo);
                                String JVRefNo = Integer.toString(UtilFunctions.CInt(EITLERP.data.getStringValueFromDB("SELECT MAX(TR_REF_NO) AS MAX_NO FROM TR_COBOL WHERE TR_MT='"+Month+"' AND TR_DT='"+Day+"' AND BOOK_CODE='25'",FinanceGlobal.FinURL))+1);
                                String JVRefNo1=EITLERPGLOBAL.Replicate("0",6-JVRefNo.length())+JVRefNo;
                                int JVRefSrNo=0;
                                
                                rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT  ='D'",FinanceGlobal.FinURL);
                                Sign=rsTmp.getString("EFFECT");
                                
                                // Export this entry to Cobol
                                rsCobol.moveToInsertRow();
                                rsCobol.updateString("TR_REC_TYPE", "01");
                                rsCobol.updateString("TR_INV_AGSR", "000000");
                                rsCobol.updateString("TR_DIV_CODE", "03");
                                rsCobol.updateString("BOOK_CODE","25");
                                rsCobol.updateString("TR_YR",Year);
                                rsCobol.updateString("TR_MT",Month);
                                rsCobol.updateString("TR_DT",Day);
                                rsCobol.updateString("TR_REF_AL","  ");
                                rsCobol.updateString("TR_REF_NO",JVRefNo1);
                                rsCobol.updateString("TR_MAIN_CODE",rsTmp.getString("MAIN_ACCOUNT_CODE"));
                                rsCobol.updateString("TR_SUB_CODE",rsTmp.getString("SUB_ACCOUNT_CODE"));
                                
                                
                                //(1) Cheque No. Start ==================================
                                if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                    ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                    
                                    if(ChequeNo.length()>8) {
                                        ChequeNo=ChequeNo.substring(0,8);
                                    }
                                    else {
                                        ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                    }
                                    
                                    rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                }
                                else {
                                    rsCobol.updateString("TR_CHEQUE_NO","00000000");
                                }
                                //==============Cheque No. Over ========================
                                
                                
                                //(2) Cheque/Bill Date =====================================
                                BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                                ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                
                                
                                if(!BillDate.trim().equals("")) {
                                    rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                }
                                else {
                                    if(!ChequeDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                    }
                                    else {
                                        //No bill date and cheque date specified
                                        rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                    }
                                }
                                //================ Cheque/Bill Date Over =======================
                                
                                
                                
                                //(3) Description ==============================================
                                Description=UtilFunctions.getString(rsHeader,"REMARKS","");
                                if(Description.length()>25) {
                                    Description=Description.substring(0,25);
                                }
                                else {
                                    Description=EITLERPGLOBAL.padRight(25, Description," ");
                                }
                                
                                rsCobol.updateString("TR_DESCRIPTION", Description);
                                //==============================================================
                                
                                
                                
                                //(4) Sales Tax Category =========================================
                                SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                                
                                if(SaleTaxCode.length()>2) {
                                    SaleTaxCode=SaleTaxCode.substring(0,2);
                                }
                                else {
                                    SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                                }
                                
                                
                                rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                                //===============================================================
                                
                                //(5) Amount ======================================================
                                TrAmount = Integer.toString(UtilFunctions.getInt(rsTmp,"AMOUNT",0)*100);
                                //String TrAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsTmp,"AMOUNT", 0), 2));
                                if(TrAmount.length()>11) {
                                    TrAmount=TrAmount.substring(0,11);
                                }
                                else {
                                    TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                                }
                                
                                rsCobol.updateString("TR_AMT", TrAmount);
                                //=================================================================
                                
                                
                                //(6) Amount Sign =====================================================
                                TrSign = UtilFunctions.getString(rsTmp,"EFFECT","");
                                rsCobol.updateString("TR_AMT_SIGN", TrSign);
                                // Amount Sign Over ================================================
                                
                                
                                //(7) PO No. and suffix ==============================================
                                
                                if(VoucherNo.equals("PA076100205")) {
                                    boolean halt=true;
                                }
                                PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                
                                if(PoAl.equals("")) {
                                    PoAl ="   ";
                                }
                                
                                if (PoAl.substring(0,1).equals("B")) {
                                    chrPoAl = "G ";
                                }
                                else if (PoAl.substring(0,1).equals("P")) {
                                    chrPoAl = "P ";
                                }
                                else if (PoAl.substring(0,1).equals("W")) {
                                    chrPoAl = "W ";
                                }
                                
                                //PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").substring(0,1);
                                
                                else if (PoAl.substring(0,1).equals("A")) {
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                        chrPoAl = "A " ;
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                        chrPoAl = "CP";
                                    }
                                }
                                else if (PoAl.substring(0,2).equals("A3")) {
                                    chrPoAl = "CP";
                                }
                                else if (PoAl.substring(0,2).equals("D-")) {
                                    chrPoAl ="D ";
                                }
                                else if (PoAl.substring(0,2).equals("I/")) {
                                    chrPoAl ="I ";
                                }
                                else if (PoAl.substring(0,1).equals("S")) {
                                    chrPoAl ="S ";
                                }
                                else if (PoAl.substring(0,2).equals("RM")) {
                                    chrPoAl ="RM";
                                }
                                else if (PoAl.substring(0,2).equals("CA")) {
                                    chrPoAl ="CA";
                                }
                                
                                else {
                                    chrPoAl ="  ";
                                }
                                
                                rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                
                                
                                
                                PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                if(PoNo.trim().equals("")) {
                                    PoNo ="000000";
                                }
                                
                                //System.out.println("PO Length" + PoNo.length());
                                
                                if (PoNo.substring(0,1).equals("B")) {
                                    if(PoNo.length()==6) {
                                        chrPoNo = "B" + PoNo.substring(1,6);
                                    }
                                    else {
                                        chrPoNo = "B" + PoNo.substring(2,7);
                                    }
                                }
                                else if (PoNo.substring(0,1).equals("G")) {
                                    chrPoNo = "B0" + PoNo.substring(2,6);
                                }
                                else if (PoNo.substring(0,1).equals("W")) {
                                    chrPoNo = PoNo.substring(1,7);
                                }
                                else if (PoNo.substring(0,1).equals("P")) {
                                    chrPoNo = PoNo.substring(1,7);
                                }
                                else if (PoNo.substring(0,1).equals("A")) {
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                        chrPoNo = "0" +PoNo.substring(1,6);
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                        chrPoNo = "A"+PoNo.substring(2,7);
                                    }
                                    
                                }
                                
                                //PoNo = PoNo.substring(0,2);
                                else if (PoNo.substring(0,2).equals("D-")) {
                                    chrPoNo = "0"+ PoNo.substring(2,7);
                                }
                                
                                else if (PoNo.substring(0,2).equals("I/")) {
                                    chrPoNo = PoNo.substring(2,8);
                                }
                                
                                else if (PoNo.substring(0,1).equals("S")) {
                                    
                                    if(PoNo.length()==6) {
                                        chrPoNo = "0" + PoNo.substring(1,6);
                                    }
                                    else {
                                        chrPoNo = "0" + PoNo.substring(2,7);
                                    }
                                    
                                }
                                else if (PoNo.substring(0,2).equals("CA")) {
                                    chrPoNo = "0"+PoNo.substring(2,7);
                                }
                                else if (PoNo.substring(0,2).equals("RM")) {
                                    chrPoNo = "0"+PoNo.substring(2,7);
                                }
                                else {
                                    chrPoNo = "000000" ;
                                }
                                
                                
                                rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                //  PO Over ==================================================================
                                
                                
                                //(7) PO Flag ================================================================
                                PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                                
                                if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                }
                                else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3"))
                                    
                                {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLSA");
                                }
                                
                                rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                
                                
                                //(8) Invoice No. ============================================================
                                BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO","0");
                                if(BillNo.length()>8) {
                                    BillNo=BillNo.substring(0,8);
                                }
                                else {
                                    BillNo=EITLERPGLOBAL.padLeft(8, BillNo,"0");
                                }
                                
                                rsCobol.updateString("TR_BILL_NO",BillNo);
                                //============================================================================
                                
                                
                                
                                //(9) Year ===================================================================
                                Yr1_Yr2="0000";
                                // Yr1_Yr2 = Integer.toString(EITLERPGLOBAL.FinYearFrom).substring(2,3)+Integer.toString(EITLERPGLOBAL.FinYearTo).substring(2,3);
                                rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                
                                //(10) Reference sr. no. and fixed transaction code ==========================
                                JVRefSrNo++;
                                strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(JVRefSrNo),"0");
                                rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                rsCobol.updateString("TR_TRAN_CODE","000");
                                //============================================================================
                                
                                
                                //**** Find Opposite Entry ***********//
                                //rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT<>'"+Sign+"'",FinanceGlobal.FinURL);
                                //Replace allocation code of above record with this record's main code
                                
                                
                                //(11) Allocation Code =======================================================
                                //AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                                rsCobol.updateString("TR_ALLOC_CODE","000000");
                                //============================================================================
                                
                                rsCobol.insertRow() ;
                                
                                rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT <>'"+Sign+"'",FinanceGlobal.FinURL);
                                Sign=rsTmp.getString("EFFECT");
                                
                                // Export this entry to Cobol
                                rsCobol.moveToInsertRow();
                                rsCobol.updateString("TR_REC_TYPE", "01");
                                rsCobol.updateString("TR_INV_AGSR", "000000");
                                rsCobol.updateString("TR_DIV_CODE", "03");
                                rsCobol.updateString("BOOK_CODE","25");
                                rsCobol.updateString("TR_YR",Year);
                                rsCobol.updateString("TR_MT",Month);
                                rsCobol.updateString("TR_DT",Day);
                                rsCobol.updateString("TR_REF_AL","  ");
                                rsCobol.updateString("TR_REF_NO",JVRefNo1);
                                rsCobol.updateString("TR_MAIN_CODE",rsTmp.getString("MAIN_ACCOUNT_CODE"));
                                rsCobol.updateString("TR_SUB_CODE",rsTmp.getString("SUB_ACCOUNT_CODE"));
                                
                                
                                //(1) Cheque No. Start ==================================
                                if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                    ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                    
                                    if(ChequeNo.length()>8) {
                                        ChequeNo=ChequeNo.substring(0,8);
                                    }
                                    else {
                                        ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                    }
                                    
                                    rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                }
                                else {
                                    rsCobol.updateString("TR_CHEQUE_NO","00000000");
                                }
                                //==============Cheque No. Over ========================
                                
                                
                                //(2) Cheque/Bill Date =====================================
                                BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                                ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                
                                
                                if(!BillDate.trim().equals("")) {
                                    rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                }
                                else {
                                    if(!ChequeDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                    }
                                    else {
                                        //No bill date and cheque date specified
                                        rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                    }
                                }
                                //================ Cheque/Bill Date Over =======================
                                
                                
                                
                                //(3) Description ==============================================
                                Description=UtilFunctions.getString(rsHeader,"REMARKS","");
                                if(Description.length()>25) {
                                    Description=Description.substring(0,25);
                                }
                                else {
                                    Description=EITLERPGLOBAL.padRight(25, Description," ");
                                }
                                
                                rsCobol.updateString("TR_DESCRIPTION", Description);
                                //==============================================================
                                
                                
                                
                                //(4) Sales Tax Category =========================================
                                SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                                
                                if(SaleTaxCode.length()>2) {
                                    SaleTaxCode=SaleTaxCode.substring(0,2);
                                }
                                else {
                                    SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                                }
                                
                                
                                rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                                //===============================================================
                                
                                //(5) Amount ======================================================
                                TrAmount = Integer.toString(UtilFunctions.getInt(rsTmp,"AMOUNT",0)*100);
                                //String TrAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsTmp,"AMOUNT", 0), 2));
                                if(TrAmount.length()>11) {
                                    TrAmount=TrAmount.substring(0,11);
                                }
                                else {
                                    TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                                }
                                
                                rsCobol.updateString("TR_AMT", TrAmount);
                                //=================================================================
                                
                                
                                //(6) Amount Sign =====================================================
                                TrSign = UtilFunctions.getString(rsTmp,"EFFECT","");
                                rsCobol.updateString("TR_AMT_SIGN", TrSign);
                                // Amount Sign Over ================================================
                                
                                
                                //(7) PO No. and suffix ==============================================
                                
                                if(VoucherNo.equals("PA076100205")) {
                                    boolean halt=true;
                                }
                                PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                
                                if(PoAl.equals("")) {
                                    PoAl ="   ";
                                }
                                
                                if (PoAl.substring(0,1).equals("B")) {
                                    chrPoAl = "G ";
                                }
                                else if (PoAl.substring(0,1).equals("P")) {
                                    chrPoAl = "P ";
                                }
                                else if (PoAl.substring(0,1).equals("W")) {
                                    chrPoAl = "W ";
                                }
                                
                                //PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").substring(0,1);
                                
                                else if (PoAl.substring(0,1).equals("A")) {
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                        chrPoAl = "A " ;
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                        chrPoAl = "CP";
                                    }
                                }
                                else if (PoAl.substring(0,2).equals("A3")) {
                                    chrPoAl = "CP";
                                }
                                else if (PoAl.substring(0,2).equals("D-")) {
                                    chrPoAl ="D ";
                                }
                                else if (PoAl.substring(0,2).equals("I/")) {
                                    chrPoAl ="I ";
                                }
                                else if (PoAl.substring(0,1).equals("S")) {
                                    chrPoAl ="S ";
                                }
                                else if (PoAl.substring(0,2).equals("RM")) {
                                    chrPoAl ="RM";
                                }
                                else if (PoAl.substring(0,2).equals("CA")) {
                                    chrPoAl ="CA";
                                }
                                
                                else {
                                    chrPoAl ="  ";
                                }
                                
                                rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                
                                
                                
                                PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                if(PoNo.trim().equals("")) {
                                    PoNo ="000000";
                                }
                                
                                //System.out.println("PO Length" + PoNo.length());
                                
                                if (PoNo.substring(0,1).equals("B")) {
                                    if(PoNo.length()==6) {
                                        chrPoNo = "B" + PoNo.substring(1,6);
                                    }
                                    else {
                                        chrPoNo = "B" + PoNo.substring(2,7);
                                    }
                                }
                                else if (PoNo.substring(0,1).equals("G")) {
                                    chrPoNo = "B0" + PoNo.substring(2,6);
                                }
                                else if (PoNo.substring(0,1).equals("W")) {
                                    chrPoNo = PoNo.substring(1,7);
                                }
                                else if (PoNo.substring(0,1).equals("P")) {
                                    chrPoNo = PoNo.substring(1,7);
                                }
                                else if (PoNo.substring(0,1).equals("A")) {
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                        chrPoNo = "0" +PoNo.substring(1,6);
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                        chrPoNo = "A"+PoNo.substring(2,7);
                                    }
                                    
                                }
                                
                                //PoNo = PoNo.substring(0,2);
                                else if (PoNo.substring(0,2).equals("D-")) {
                                    chrPoNo = "0"+ PoNo.substring(2,7);
                                }
                                
                                else if (PoNo.substring(0,2).equals("I/")) {
                                    chrPoNo = PoNo.substring(2,8);
                                }
                                
                                else if (PoNo.substring(0,1).equals("S")) {
                                    
                                    if(PoNo.length()==6) {
                                        chrPoNo = "0" + PoNo.substring(1,6);
                                    }
                                    else {
                                        chrPoNo = "0" + PoNo.substring(2,7);
                                    }
                                    
                                }
                                else if (PoNo.substring(0,2).equals("CA")) {
                                    chrPoNo = "0"+PoNo.substring(2,7);
                                }
                                else if (PoNo.substring(0,2).equals("RM")) {
                                    chrPoNo = "0"+PoNo.substring(2,7);
                                }
                                else {
                                    chrPoNo = "000000" ;
                                }
                                
                                
                                rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                //  PO Over ==================================================================
                                
                                
                                //(7) PO Flag ================================================================
                                PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                                
                                if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                }
                                else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3"))
                                    
                                {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLSA");
                                }
                                
                                rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                
                                
                                //(8) Invoice No. ============================================================
                                BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO","0");
                                if(BillNo.length()>8) {
                                    BillNo=BillNo.substring(0,8);
                                }
                                else {
                                    BillNo=EITLERPGLOBAL.padLeft(8, BillNo,"0");
                                }
                                
                                rsCobol.updateString("TR_BILL_NO",BillNo);
                                //============================================================================
                                
                                
                                
                                //(9) Year ===================================================================
                                Yr1_Yr2="0000";
                                // Yr1_Yr2 = Integer.toString(EITLERPGLOBAL.FinYearFrom).substring(2,3)+Integer.toString(EITLERPGLOBAL.FinYearTo).substring(2,3);
                                rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                
                                //(10) Reference sr. no. and fixed transaction code ==========================
                                JVRefSrNo++;
                                strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(JVRefSrNo),"0");
                                rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                rsCobol.updateString("TR_TRAN_CODE","000");
                                //============================================================================
                                
                                
                                //**** Find Opposite Entry ***********//
                                //rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT<>'"+Sign+"'",FinanceGlobal.FinURL);
                                //Replace allocation code of above record with this record's main code
                                
                                
                                //(11) Allocation Code =======================================================
                                //AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                                rsCobol.updateString("TR_ALLOC_CODE","000000");
                                //============================================================================
                                
                                rsCobol.insertRow() ;
                            }
                            
                            
                            rsBlock.next();
                            
                        }
                        
                    }
                    rsVoucher.next();
                    
                }
                
            }
        }
        
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    private boolean ExportPJVDeduction() {
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            ResultSet rsVoucher,rsBlock,rsHeader;
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' AND BOOK_CODE IN ("+BookCodeList+") AND APPROVED ='1' AND CANCELLED ='0' AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY BOOK_CODE,LEGACY_DATE",FinanceGlobal.FinURL);
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    
                    //Generate New Reference No.
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    int RefSrNo=0;
                    
                    String Sign,ChequeNo,BillDate,ChequeDate,Description="",SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    
                    if(EITLERP.data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND SUB_ACCOUNT_CODE='' AND MAIN_ACCOUNT_CODE NOT IN ('231321','210080') AND EFFECT='C' ",FinanceGlobal.FinURL)) { //AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191','231716','231717','241225') AND IS_DEDUCTION<>1
                        //We found the record with both main, take it first
                        strQry = "SELECT VOUCHER_NO, INVOICE_DATE, PO_NO,INVOICE_NO,COMPANY_ID ,MAIN_ACCOUNT_CODE ,SUB_ACCOUNT_CODE, " +
                        "AMOUNT,BLOCK_NO,EFFECT FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+ VoucherNo +"' AND MAIN_ACCOUNT_CODE<>'' " +
                        "AND SUB_ACCOUNT_CODE='' AND MAIN_ACCOUNT_CODE NOT IN ('231321','210080') AND EFFECT='C' " +
                        "GROUP BY BLOCK_NO " +
                        "ORDER BY BLOCK_NO ";
                        
                        ResultSet rsTmp = EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        if (rsTmp.getRow() >0) {
                            rsTmp.first();
                            while (! rsTmp.isAfterLast()) {
                                int BlockNo = UtilFunctions.getInt(rsTmp,"BLOCK_NO",0);
                                rsBlock = data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+ VoucherNo +"' AND BLOCK_NO="+BlockNo+" ORDER BY BLOCK_NO,SR_NO",FinanceGlobal.FinURL);
                                rsBlock.first();
                                while(!rsBlock.isAfterLast()) {
                                    Effect = UtilFunctions.getString(rsBlock,"EFFECT","");
                                    Main_acc_code = UtilFunctions.getString(rsBlock,"MAIN_ACCOUNT_CODE","");
                                    Sub_acc_code = UtilFunctions.getString(rsBlock,"SUB_ACCOUNT_CODE","").trim();
                                    AllocationCode = "000000";
                                    if(Sub_acc_code.trim().equals("")) {
                                        Sub_acc_code="000000";
                                    }
                                    // Export this entry to Cobol
                                    rsCobol.moveToInsertRow();
                                    rsCobol.updateString("TR_REC_TYPE", "01");
                                    rsCobol.updateString("TR_INV_AGSR", "000000");
                                    rsCobol.updateString("TR_DIV_CODE", "03");
                                    rsCobol.updateString("BOOK_CODE","45");
                                    rsCobol.updateString("TR_YR",Year);
                                    rsCobol.updateString("TR_MT",Month);
                                    rsCobol.updateString("TR_DT",Day);
                                    rsCobol.updateString("TR_REF_AL",rsHeader.getString("BOOK_CODE").trim());
                                    rsCobol.updateString("TR_REF_NO",RefNo);
                                    rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                                    rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                                    
                                    //(1) Cheque No. Start ==================================
                                    if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                        ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                        if(ChequeNo.length()>8) {
                                            ChequeNo=ChequeNo.substring(0,8);
                                        } else {
                                            ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, " ");
                                        }
                                        rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                    } else {
                                        rsCobol.updateString("TR_CHEQUE_NO","        ");
                                    }
                                    //==============Cheque No. Over ========================
                                    
                                    //(2) Cheque/Bill Date =====================================
                                    BillDate=UtilFunctions.getString(rsBlock,"INVOICE_DATE","0000-00-00");
                                    ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                    
                                    if(!BillDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                    } else {
                                        if(!ChequeDate.trim().equals("")) {
                                            rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                        } else {
                                            //No bill date and cheque date specified
                                            rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                        }
                                    }
                                    //================ Cheque/Bill Date Over =======================
                                    
                                    //(3) Description ==============================================
                                    if(Description.trim().length()>25) {
                                        Description=Description.trim().substring(0,25);
                                    } else {
                                        Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                                    }
                                    rsCobol.updateString("TR_DESCRIPTION", Description.replace('\n',' '));
                                    //==============================================================
                                    
                                    //(4) Sales Tax Category =========================================
                                    rsCobol.updateString("SALETAX_CODE", "00");
                                    //===============================================================
                                    
                                    //(5) Amount ======================================================
                                    TrAmount = getAmount(rsBlock.getDouble("AMOUNT"));
                                    rsCobol.updateString("TR_AMT", TrAmount);
                                    //=================================================================
                                    
                                    //(6) Amount Sign =====================================================
                                    rsCobol.updateString("TR_AMT_SIGN", Effect);
                                    // Amount Sign Over ================================================
                                    
                                    //(7) PO No. and suffix ==============================================
                                    //PoAl = UtilFunctions.getString(rsBlock,"PO_NO","000000");
                                    PoAl = getPOAlpha(UtilFunctions.getString(rsBlock,"PO_NO","000000"));
                                    chrPoAl = PoAl;
                                    if (Main_acc_code.equals("125019") ) {
                                        rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                    } else {
                                        rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                                    }
                                    
                                    //PoNo = UtilFunctions.getString(rsBlock,"PO_NO","000000");
                                    PoNo = getPONo(UtilFunctions.getString(rsBlock,"PO_NO","000000"));
                                    chrPoNo = PoNo;
                                    chrPoNo =EITLERPGLOBAL.padLeft(6,chrPoNo,"0");
                                    
                                    if (Main_acc_code.equals("125019") ) {
                                        rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                    } else {
                                        rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                                    }
                                    //  PO Over ==================================================================
                                    
                                    //(7) PO Flag ================================================================
                                    PoFlg = UtilFunctions.getString(rsBlock,"COMPANY_ID","");
                                    if (UtilFunctions.getString(rsBlock,"COMPANY_ID","").equals("2")) {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                    } else if (UtilFunctions.getString(rsBlock,"COMPANY_ID","").equals("3")) {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLS");
                                    }
                                    rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    //(8) Invoice No. ============================================================
                                    BillNo= UtilFunctions.getString(rsBlock,"INVOICE_NO","0").trim();
                                    if(BillNo.length()>6) {
                                        //BillNo=BillNo.substring(0,8);
                                        BillNo=BillNo.substring(BillNo.length()-6);
                                    } else {
                                        BillNo=EITLERPGLOBAL.padLeft(6, BillNo,"0");
                                    }
                                    rsCobol.updateString("TR_BILL_AL","  ");
                                    rsCobol.updateString("TR_BILL_NO",BillNo);
                                    rsCobol.updateString("TR_PO_FL","  ");
                                    //============================================================================
                                    
                                    //(9) Year ===================================================================
                                    Yr1_Yr2="0000";
                                    rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    //(10) Reference sr. no. and fixed transaction code ==========================
                                    RefSrNo++;
                                    strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                                    rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                    rsCobol.updateString("TR_TRAN_CODE","000");
                                    //============================================================================
                                    
                                    //**** Find Opposite Entry *********
                                    //(11) Allocation Code =======================================================
                                    //AllocationCode=UtilFunctions.getString(rsBlock,"MAIN_ACCOUNT_CODE","");
                                    rsCobol.updateString("TR_ALLOC_CODE",AllocationCode);
                                    //============================================================================
                                    rsCobol.insertRow() ;
                                    
                                    rsBlock.next();
                                }
                                rsTmp.next();
                            }
                        }
                    }
                    rsVoucher.next();
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean ExportJV() {
        
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String SrNo="1";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            ResultSet rsVoucher,rsSr,rsHeader;
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <>'' AND BOOK_CODE IN ("+BookCodeList+") AND APPROVED ='1' AND CANCELLED ='0' AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY BOOK_CODE,LEGACY_DATE",FinanceGlobal.FinURL);
            rsVoucher.last();
            System.out.print("No. of Voucher"+rsVoucher.getRow());
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    String VoucherDate=rsHeader.getString("VOUCHER_DATE");
                    
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    
                    //Generate New Reference No.
                    String LastNo=Integer.toString(UtilFunctions.CInt(EITLERP.data.getStringValueFromDB("SELECT MAX(TR_REF_NO) AS MAX_NO FROM TR_COBOL WHERE TR_MT='"+Month+"' AND TR_DT='"+Day+"' AND BOOK_CODE='"+BookCode+"'",FinanceGlobal.FinURL))+1);
                    String RefNo=EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    int RefSrNo=0;
                    
                    
                    rsSr=EITLERP.data.getResult("SELECT DISTINCT(SR_NO) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                    rsSr.first();
                    
                    if(rsSr.getRow()>0) {
                        
                        while(!rsSr.isAfterLast()) {
                            
                            String Sign,ChequeNo,BillDate,ChequeDate,Description,SaleTaxCode,TrAmount,TrSign ="";
                            String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                            PoAl="";
                            PoNo="";
                            chrPoNo="";
                            SrNo = rsSr.getString("SR_NO");
                            
                            if(EITLERP.data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND SR_NO='"+SrNo+"'",FinanceGlobal.FinURL)) {//We found the record with both main and sub code, take it first
                                
                                ResultSet rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND SR_NO='"+SrNo+"'",FinanceGlobal.FinURL);
                                Sign=rsTmp.getString("EFFECT");
                                
                                // Export this entry to Cobol
                                rsCobol.moveToInsertRow();
                                rsCobol.updateString("TR_REC_TYPE", "01");
                                rsCobol.updateString("TR_INV_AGSR", "000000");
                                rsCobol.updateString("TR_DIV_CODE", "03");
                                rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                                rsCobol.updateString("TR_YR",Year);
                                rsCobol.updateString("TR_MT",Month);
                                rsCobol.updateString("TR_DT",Day);
                                rsCobol.updateString("TR_REF_AL","  ");
                                rsCobol.updateString("TR_REF_NO",RefNo);
                                rsCobol.updateString("TR_MAIN_CODE",rsTmp.getString("MAIN_ACCOUNT_CODE"));
                                rsCobol.updateString("TR_SUB_CODE",rsTmp.getString("SUB_ACCOUNT_CODE"));
                                
                                
                                //(1) Cheque No. Start ==================================
                                if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                    ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                    
                                    if(ChequeNo.length()>8) {
                                        ChequeNo=ChequeNo.substring(0,8);
                                    }
                                    else {
                                        ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                    }
                                    
                                    rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                }
                                else {
                                    rsCobol.updateString("TR_CHEQUE_NO","00000000");
                                }
                                //==============Cheque No. Over ========================
                                
                                
                                //(2) Cheque/Bill Date =====================================
                                BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                                ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                
                                
                                if(!BillDate.trim().equals("")) {
                                    rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                }
                                else {
                                    if(!ChequeDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                    }
                                    else {
                                        //No bill date and cheque date specified
                                        rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                    }
                                }
                                //================ Cheque/Bill Date Over =======================
                                
                                
                                
                                //(3) Description ==============================================
                                Description=UtilFunctions.getString(rsHeader,"REMARKS","");
                                if(Description.length()>25) {
                                    Description=Description.substring(0,25);
                                }
                                else {
                                    Description=EITLERPGLOBAL.padRight(25, Description," ");
                                }
                                
                                rsCobol.updateString("TR_DESCRIPTION", Description);
                                //==============================================================
                                
                                
                                
                                //(4) Sales Tax Category =========================================
                                SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                                
                                if(SaleTaxCode.length()>2) {
                                    SaleTaxCode=SaleTaxCode.substring(0,2);
                                }
                                else {
                                    SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                                }
                                
                                
                                rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                                //===============================================================
                                
                                //(5) Amount ======================================================
                                
                                StringTokenizer st = new StringTokenizer(String.valueOf(UtilFunctions.getDouble(rsTmp,"AMOUNT",0)),".");
                                String Amount1 = st.nextToken();
                                String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
                                if(Amount2.equals("")) {
                                    Amount2 = "00";
                                }
                                String newAmount = Amount1 + Amount2;
                                TrAmount = newAmount;
                                
                                //TrAmount = Integer.toString(UtilFunctions.getInt(rsTmp,"AMOUNT",0)*100);
                                //String TrAmount = Double.toString(EITLERPGLOBAL.round(UtilFunctions.getDouble(rsTmp,"AMOUNT", 0), 2));
                                if(TrAmount.length()>11) {
                                    TrAmount=TrAmount.substring(0,11);
                                }
                                else {
                                    TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                                }
                                
                                rsCobol.updateString("TR_AMT", TrAmount);
                                //=================================================================
                                
                                
                                //(6) Amount Sign =====================================================
                                TrSign = UtilFunctions.getString(rsTmp,"EFFECT","");
                                rsCobol.updateString("TR_AMT_SIGN", TrSign);
                                // Amount Sign Over ================================================
                                
                                
                                //(7) PO No. and suffix ==============================================
                                
                                if(VoucherNo.equals("PA076100205")) {
                                    boolean halt=true;
                                }
                                PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                
                                if(PoAl.equals("")) {
                                    PoAl ="   ";
                                }
                                
                                if (PoAl.substring(0,1).equals("B")) {
                                    chrPoAl = "G ";
                                }
                                else if (PoAl.substring(0,1).equals("P")) {
                                    chrPoAl = "P ";
                                }
                                else if (PoAl.substring(0,1).equals("W")) {
                                    chrPoAl = "W ";
                                }
                                
                                //PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").substring(0,1);
                                
                                else if (PoAl.substring(0,1).equals("A")) {
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                        chrPoAl = "A " ;
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                        chrPoAl = "CP";
                                    }
                                }
                                else if (PoAl.substring(0,2).equals("A3")) {
                                    chrPoAl = "CP";
                                }
                                else if (PoAl.substring(0,2).equals("D-")) {
                                    chrPoAl ="D ";
                                }
                                else if (PoAl.substring(0,2).equals("I/")) {
                                    chrPoAl ="I ";
                                }
                                else if (PoAl.substring(0,1).equals("S")){
                                    chrPoAl ="S ";
                                }
                                else if (PoAl.substring(0,2).equals("RM")) {
                                    chrPoAl ="RM";
                                }
                                else if (PoAl.substring(0,2).equals("CA")) {
                                    chrPoAl ="CA";
                                }
                                
                                else {
                                    chrPoAl ="  ";
                                }
                                
                                rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                
                                
                                
                                PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                if(PoNo.trim().equals("")) {
                                    PoNo ="000000";
                                }
                                
                                //System.out.println("PO Length" + PoNo.length());
                                
                                if (PoNo.substring(0,1).equals("B")) {
                                    chrPoNo = "B" + PoNo.substring(2,7);
                                }
                                else if (PoNo.substring(0,1).equals("W")) {
                                    chrPoNo = PoNo.substring(1,7);
                                }
                                else if (PoNo.substring(0,1).equals("P")) {
                                    chrPoNo = PoNo.substring(1,7);
                                }
                                else if (PoNo.substring(0,1).equals("A")) {
                                    if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2"))
                                        chrPoNo = "0" +PoNo.substring(1,6);
                                    else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                        chrPoNo = "A"+PoNo.substring(2,7);
                                    }
                                    
                                }
                                
                                //PoNo = PoNo.substring(0,2);
                                else if (PoNo.substring(0,2).equals("D-")) {
                                    chrPoNo = "0"+ PoNo.substring(2,7);
                                }
                                
                                else if (PoNo.substring(0,2).equals("I/")) {
                                    chrPoNo = PoNo.substring(2,8);
                                }
                                
                                else if (PoNo.substring(0,2).equals("S/")) {
                                    chrPoNo = "0" + PoNo.substring(2,7);
                                }
                                else if (PoNo.substring(0,2).equals("CA")) {
                                    chrPoNo = "0"+PoNo.substring(2,7);
                                }
                                else if (PoNo.substring(0,2).equals("RM")) {
                                    chrPoNo = "0"+PoNo.substring(2,7);
                                }
                                else {
                                    chrPoNo = "000000" ;
                                }
                                
                                
                                rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                //  PO Over ==================================================================
                                
                                
                                //(7) PO Flag ================================================================
                                PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                                
                                if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                }
                                else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3"))
                                    
                                {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLSA");
                                }
                                
                                rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                
                                
                                //(8) Invoice No. ============================================================
                                BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO","0");
                                if(BillNo.length()>8) {
                                    BillNo=BillNo.substring(0,8);
                                }
                                else {
                                    BillNo=EITLERPGLOBAL.padLeft(8, BillNo,"0");
                                }
                                
                                rsCobol.updateString("TR_BILL_NO",BillNo);
                                //============================================================================
                                
                                
                                
                                //(9) Year ===================================================================
                                Yr1_Yr2="0000";
                                // Yr1_Yr2 = Integer.toString(EITLERPGLOBAL.FinYearFrom).substring(2,3)+Integer.toString(EITLERPGLOBAL.FinYearTo).substring(2,3);
                                rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                
                                //(10) Reference sr. no. and fixed transaction code ==========================
                                RefSrNo++;
                                strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                                rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                rsCobol.updateString("TR_TRAN_CODE","000");
                                //============================================================================
                                
                                
                                //**** Find Opposite Entry ***********//
                                //rsTmp=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND BLOCK_NO="+BlockNo+" AND EFFECT<>'"+Sign+"'",FinanceGlobal.FinURL);
                                //Replace allocation code of above record with this record's main code
                                
                                
                                //(11) Allocation Code =======================================================
                                //AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                                rsCobol.updateString("TR_ALLOC_CODE","000000");
                                //============================================================================
                                rsCobol.insertRow();
                            }
                            rsSr.next();
                        }
                    }
                    rsVoucher.next();
                }
            }
        }
        catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean CashVoucher() {
        
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            ResultSet rsVoucher,rsBlock,rsHeader;
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            //String tempCondition = "VOUCHER_NO IN ('CS093001419','CS093001426','CS093001434','CS093001429','CS093001433','CS093001450','CS093001452', 'CR093000388','CR093000389','CR093000390') ";
            
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' AND BOOK_CODE IN ("+BookCodeList+")  AND APPROVED ='1' AND CANCELLED ='0' AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY LEGACY_NO,BOOK_CODE",FinanceGlobal.FinURL); //AND "+ tempCondition +"
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    if(VoucherNo.equals("CS093001419")) {
                        System.out.println();
                    }
                    int RefSrNo=0;
                    int VoucherType = rsHeader.getInt("VOUCHER_TYPE");
                    
                    String Sign,ChequeNo,BillDate,ChequeDate,Description,SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    
                    if(VoucherType == 4) {
                        strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND EFFECT ='D' AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191') ";
                    } else {
                        strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND EFFECT ='C' AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191') ";
                    }
                    
                    if(EITLERP.data.IsRecordExist(strQry,FinanceGlobal.FinURL)) {
                        ResultSet rsTmp;
                        if(VoucherType == 4) {
                            String tmpQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL " +
                            "WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND IS_DEDUCTION=0 " + //CS093001388
                            "GROUP BY VOUCHER_NO,MAIN_ACCOUNT_CODE,SR_NO,EFFECT " +
                            "UNION " +
                            "SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='C' AND IS_DEDUCTION=1 ";
                            rsTmp=EITLERP.data.getResult(tmpQry,FinanceGlobal.FinURL);
                        } else {
                            rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        }
                        //ResultSet rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        rsTmp.first();
                        //------- Start Coding
                        while (!rsTmp.isAfterLast()) {
                            Main_acc_code=rsTmp.getString("MAIN_ACCOUNT_CODE");
                            Sub_acc_code=rsTmp.getString("SUB_ACCOUNT_CODE");
                            Effect=rsTmp.getString("EFFECT");
                            int SrNo = rsTmp.getInt("SR_NO");
                            // Export this entry to Cobol
                            rsCobol.moveToInsertRow();
                            rsCobol.updateString("TR_REC_TYPE", "01");
                            
                            String TR_INV_AGSR = "";
                            TR_INV_AGSR = data.getStringValueFromDB("SELECT LINK_NO FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND LINK_NO<>'' AND SR_NO="+SrNo+" AND IS_DEDUCTION<>1",FinanceGlobal.FinURL);
                            
                            if(!TR_INV_AGSR.equals("")) {
                                String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                if(ARRAY_TR_INV_AGSR[0].trim().length() <= 6) {
                                    rsCobol.updateString("TR_INV_AGSR", EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[0].trim(),"0"));
                                } else {
                                    rsCobol.updateString("TR_INV_AGSR", ARRAY_TR_INV_AGSR[0].substring(0,6));
                                }
                            } else {
                                rsCobol.updateString("TR_INV_AGSR", "000000");
                            }
                            
                            
                            //rsCobol.updateString("TR_INV_AGSR", "000000");
                            
                            rsCobol.updateString("TR_DIV_CODE", "03");
                            rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                            rsCobol.updateString("TR_YR",Year);
                            rsCobol.updateString("TR_MT",Month);
                            rsCobol.updateString("TR_DT",Day);
                            rsCobol.updateString("TR_REF_AL","  ");
                            rsCobol.updateString("TR_REF_NO",RefNo);
                            rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                            rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                            
                            //(1) Cheque No. Start ==================================
                            if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","").trim();
                                if(ChequeNo.length()>8) {
                                    ChequeNo=ChequeNo.substring(0,8);
                                } else {
                                    ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                }
                                rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                            } else {
                                rsCobol.updateString("TR_CHEQUE_NO","00000000");
                            }
                            //==============Cheque No. Over ========================
                            
                            //(2) Cheque/Bill Date =====================================
                            BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                            ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                            
                            if(!BillDate.trim().equals("")) {
                                rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                            } else {
                                if(!ChequeDate.trim().equals("")) {
                                    rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                } else {
                                    //No bill date and cheque date specified
                                    rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                }
                            }
                            //================ Cheque/Bill Date Over =======================
                            
                            //(3) Description ==============================================
                            Description=UtilFunctions.getString(rsHeader,"REMARKS","").trim().replace('\n',' ');
                            if(Description.trim().length()>25) {
                                Description=Description.trim().substring(0,25);
                            } else {
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            
                            if(Description.trim().length()==0 && (Main_acc_code.equals("125019") || Main_acc_code.equals("125033")))  {
                                Description = "BILLNO."+UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim() + " PAID";
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            
                            if((Main_acc_code.equals("210027") || (Main_acc_code.equals("210072"))))  {
                                String AgentAlpha = clsSalesParty.getAgentAlpha(Sub_acc_code);
                                if(!AgentAlpha.equals("")) {
                                    AgentAlpha+="/";
                                }
                                Description = EITLERPGLOBAL.padRight(25, AgentAlpha + UtilFunctions.getString(rsTmp,"LINK_NO"," ").trim()," ");
                            }
                            
                            if(Main_acc_code.equals("210010")) {
                                Description = EITLERPGLOBAL.padRight(25, "F /"+ UtilFunctions.getString(rsTmp,"LINK_NO"," ").trim()," ");
                            }
                            
                            rsCobol.updateString("TR_DESCRIPTION", Description);
                            //==============================================================
                            
                            //(4) Sales Tax Category =========================================
                            SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                            
                            if(SaleTaxCode.length()>2) {
                                SaleTaxCode=SaleTaxCode.substring(0,2);
                            } else {
                                SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                            }
                            rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                            //===============================================================
                            
                            //(5) Amount ======================================================
                            double prath=rsTmp.getDouble("AMOUNT");
                            if(Effect.equals("D") && VoucherType==4) {
                                prath += data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND REF_SR_NO="+SrNo,FinanceGlobal.FinURL);
                            }
                            //TrAmount = Long.toString((long)(UtilFunctions.getDouble(rsTmp,"AMOUNT",0)*100));
                            
                            /*StringTokenizer st = new StringTokenizer(String.valueOf(prath),".");
                            String Amount1 = st.nextToken();
                            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
                            if(Amount2.equals("")) {
                                Amount2 = "00";
                            }
                            String newAmount = Amount1 + Amount2;
                            TrAmount = newAmount;
                             
                             
                            //TrAmount = Long.toString((long)(prath*100));
                            if(TrAmount.length()>11) {
                                TrAmount=TrAmount.substring(0,11);
                            } else {
                                TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                            }*/
                            TrAmount = new BigDecimal(prath).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
                            StringTokenizer st = new StringTokenizer(TrAmount, ".");
                            String Amount1 = st.nextToken();
                            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
                            TrAmount = Amount1 + Amount2;
                            if(TrAmount.length()>11) {
                                TrAmount=TrAmount.substring(0,11);
                            }
                            else {
                                TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                            }
                            rsCobol.updateString("TR_AMT", TrAmount);
                            //=================================================================
                            
                            //(6) Amount Sign =====================================================
                            TrSign = Effect;
                            rsCobol.updateString("TR_AMT_SIGN", TrSign);
                            // Amount Sign Over ================================================
                            
                            rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                            PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                            rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                            //  PO Over ==================================================================
                            rsCobol.updateString("TR_PO_FLG","");//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            //(8) Invoice No. ============================================================
                            BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                            if(BillNo.length()>6) {
                                //BillNo=BillNo.substring(0,8);
                                BillNo=BillNo.substring(BillNo.length()-6);
                            } else {
                                BillNo=EITLERPGLOBAL.padLeft(6, BillNo,"0");
                            }
                            rsCobol.updateString("TR_BILL_AL","  ");
                            rsCobol.updateString("TR_BILL_NO",BillNo);
                            //============================================================================
                            
                            //(9) Year ===================================================================
                            Yr1_Yr2="0000";
                            if(!TR_INV_AGSR.equals("")) {
                                String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                if(ARRAY_TR_INV_AGSR.length > 1) {
                                    if(ARRAY_TR_INV_AGSR[1].trim().length() <= 4) {
                                        Yr1_Yr2 = EITLERPGLOBAL.padLeft(4,ARRAY_TR_INV_AGSR[1].trim(),"0");
                                    } else {
                                        Yr1_Yr2 = ARRAY_TR_INV_AGSR[1].substring(0,4);
                                    }
                                }
                            } else {
                                Yr1_Yr2="0000";
                            }
                            rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            
                            //(10) Reference sr. no. and fixed transaction code ==========================
                            RefSrNo++;
                            strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                            rsCobol.updateString("TR_REF_SR",strRefSrNo);
                            rsCobol.updateString("TR_TRAN_CODE","000");
                            //============================================================================
                            
                            
                            //**** Find Opposite Entry *********
                            //(11) Allocation Code =======================================================
                            AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                            rsCobol.updateString("TR_ALLOC_CODE","");
                            //============================================================================
                            
                            rsCobol.insertRow();
                            rsTmp.next();
                        }
                    }
                    
                    rsVoucher.next();
                }
                
            }
            SelectedTRList.clearSelection();
            GeneratedTRList.clearSelection();
        }
        catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    // End of Cash Voucher
    
    private boolean BankVoucher() {
        
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            ResultSet rsVoucher,rsBlock,rsHeader;
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' AND BOOK_CODE IN ("+BookCodeList+")  AND APPROVED ='1' AND CANCELLED ='0' AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY BOOK_CODE,LEGACY_DATE",FinanceGlobal.FinURL);
            int count = rsVoucher.getRow();
            System.out.println("Total Record is :" + count);
            
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    System.out.println(VoucherNo);
                    if (VoucherNo.equals("PY095800779")) {
                        System.out.print("");
                    }
                    
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    
                    int RefSrNo=0;
                    int VoucherType = rsHeader.getInt("VOUCHER_TYPE");
                    
                    String Sign,ChequeNo,BillDate,ChequeDate,Description,SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    int Sr_No=0;
                    
                    try {
                        if (VoucherType == 2) {    // Payment Voucher
                            strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND IS_DEDUCTION<>1 AND EFFECT='D' "; //AND MAIN_ACCOUNT_CODE NOT IN('127176','127035')
                        } else if (VoucherType ==6 ){ // Receipt Voucher
                            strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND EFFECT ='C'  ";
                        } else if (VoucherType == 10) { // Payment Voucher 2
                            strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND IS_DEDUCTION<>1 AND EFFECT='D' "; //AND MAIN_ACCOUNT_CODE NOT IN('127176','127035')
                        }
                    } catch (Exception e) {
                    }
                    
                    if(EITLERP.data.IsRecordExist(strQry,FinanceGlobal.FinURL)) {
                        
                        ResultSet rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        rsTmp.first();
                        
                        //------- Start Coding
                        while (!rsTmp.isAfterLast()) {
                            Main_acc_code=rsTmp.getString("MAIN_ACCOUNT_CODE");
                            Sub_acc_code=rsTmp.getString("SUB_ACCOUNT_CODE");
                            Effect=rsTmp.getString("EFFECT");
                            Sr_No = rsTmp.getInt("SR_NO");
                            
                            
                            // Export this entry to Cobol
                            rsCobol.moveToInsertRow();
                            rsCobol.updateString("TR_REC_TYPE", "01");
                            String TR_INV_AGSR = "";
                            TR_INV_AGSR = data.getStringValueFromDB("SELECT LINK_NO FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND LINK_NO<>'' AND SR_NO="+Sr_No+" AND IS_DEDUCTION<>1",FinanceGlobal.FinURL);
                            
                            if(!TR_INV_AGSR.equals("")) {
                                String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                if(ARRAY_TR_INV_AGSR[0].trim().length() <= 6) {
                                    rsCobol.updateString("TR_INV_AGSR", EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[0].trim(),"0"));
                                } else {
                                    rsCobol.updateString("TR_INV_AGSR", ARRAY_TR_INV_AGSR[0].substring(0,6));
                                }
                            } else {
                                rsCobol.updateString("TR_INV_AGSR", "000000");
                            }
                            
                            
                            rsCobol.updateString("TR_DIV_CODE", "03");
                            rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                            rsCobol.updateString("TR_YR",Year);
                            rsCobol.updateString("TR_MT",Month);
                            rsCobol.updateString("TR_DT",Day);
                            rsCobol.updateString("TR_REF_AL","  ");
                            rsCobol.updateString("TR_REF_NO",RefNo);
                            rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                            rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                            
                            
                            //(1) Cheque No. Start ==================================
                            if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","").trim();
                                
                                if(ChequeNo.length()>8) {
                                    ChequeNo=ChequeNo.substring(0,8);
                                }
                                else {
                                    //ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                    ChequeNo=EITLERPGLOBAL.padRight(8,ChequeNo, " ");
                                    
                                }
                                
                                rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                            }
                            else {
                                rsCobol.updateString("TR_CHEQUE_NO","00000000");
                            }
                            //==============Cheque No. Over ========================
                            
                            
                            //(2) Cheque/Bill Date =====================================
                            BillDate=Day+Month+Year;
                            rsCobol.updateString("TR_CHQ_BILL_DATE",BillDate);
                            //================ Cheque/Bill Date Over =======================
                            
                            
                            
                            //(3) Description ==============================================
                            Description=UtilFunctions.getString(rsHeader,"REMARKS","").replace('\n',' ');
                            if(Description.trim().length()>25) {
                                Description=Description.trim().substring(0,25);
                            } else {
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            
                            if(Description.trim().length()==0 && (Main_acc_code.equals("125019") || Main_acc_code.equals("125033")))  {
                                Description = "BILLNO."+UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim() + " PAID";
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            
                            if((Main_acc_code.equals("210027") || (Main_acc_code.equals("210072"))))  {
                                String AgentAlpha = clsSalesParty.getAgentAlpha(Sub_acc_code);
                                if(!AgentAlpha.equals("")) {
                                    AgentAlpha+="/";
                                }
                                Description = EITLERPGLOBAL.padRight(25, AgentAlpha + UtilFunctions.getString(rsTmp,"LINK_NO"," ").trim()," ");
                            }
                            
                            if(Main_acc_code.equals("210010")) {
                                
                                Description = EITLERPGLOBAL.padRight(25, "F /"+ UtilFunctions.getString(rsTmp,"LINK_NO"," ").trim()," ");
                            }
                            
                            rsCobol.updateString("TR_DESCRIPTION", Description);
                            //==============================================================
                            
                            
                            
                            //(4) Sales Tax Category =========================================
                            SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                            
                            if(SaleTaxCode.length()>2) {
                                SaleTaxCode=SaleTaxCode.substring(0,2);
                            }
                            else {
                                SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                            }
                            
                            
                            rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                            //===============================================================
                            
                            //(5) Amount ======================================================
                            /*double prath=rsTmp.getDouble("AMOUNT");
                            double prath1=UtilFunctions.getDouble(rsTmp, "AMOUNT",0);
                             
                             
                            StringTokenizer st = new StringTokenizer(String.valueOf(UtilFunctions.getDouble(rsTmp,"AMOUNT",0)),".");
                            String Amount1 = st.nextToken();
                            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
                            if(Amount2.equals("")) {
                                Amount2 = "00";
                            }
                            String newAmount = Amount1 + Amount2;
                            TrAmount = newAmount;
                             
                            //TrAmount = Long.toString((long)(UtilFunctions.getDouble(rsTmp,"AMOUNT",0)*100));
                             
                             
                            if (VoucherNo.equals("PY083100521")) {
                                TrAmount="1000000000";
                            }
                             
                            if(TrAmount.length()>11) {
                                TrAmount=TrAmount.substring(0,11);
                            }
                            else {
                                TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                            }
                             */
                            
                            TrAmount = new BigDecimal(rsTmp.getDouble("AMOUNT")).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
                            StringTokenizer st = new StringTokenizer(TrAmount, ".");
                            String Amount1 = st.nextToken();
                            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
                            TrAmount = Amount1 + Amount2;
                            if(TrAmount.length()>11) {
                                TrAmount=TrAmount.substring(0,11);
                            }
                            else {
                                TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                            }
                            rsCobol.updateString("TR_AMT", TrAmount);
                            //=================================================================
                            
                            
                            //(6) Amount Sign =====================================================
                            TrSign = Effect;
                            rsCobol.updateString("TR_AMT_SIGN", TrSign);
                            // Amount Sign Over ================================================
                            
                            //(7) PO No. and suffix ==============================================
                            
                            if(RefNo.equals("001039")) {
                                System.out.println();
                            }
                            PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").trim();
                            
                            if(PoAl.equals("")) {
                                PoAl ="  ";
                            }
                            
                            if (PoAl.substring(0,1).equals("B")) {
                                chrPoAl = "G ";
                            }
                            else if (PoAl.substring(0,1).equals("P")) {
                                chrPoAl = "P ";
                            }
                            else if (PoAl.substring(0,1).equals("W")) {
                                chrPoAl = "W ";
                            }
                            else if (PoAl.substring(0,1).equals("A")) {
                                if(PoAl.substring(0,2).equals("A0")) {
                                    chrPoAl = "CP";
                                } else {
                                    chrPoAl = "A ";
                                }
                                
                            }
                            else if (PoAl.substring(0,2).equals("A3")) {
                                chrPoAl = "CP";
                            }
                            else if (PoAl.substring(0,2).equals("D-")) {
                                chrPoAl ="D ";
                            }
                            else if (PoAl.substring(0,2).equals("I/")) {
                                chrPoAl ="I ";
                            }
                            else if (PoAl.substring(0,1).toUpperCase().equals("S")){
                                chrPoAl ="S ";
                            }
                            else if (PoAl.substring(0,2).equals("RM")) {
                                chrPoAl ="RM";
                            }
                            else if (PoAl.substring(0,2).equals("CA")) {
                                chrPoAl ="CA";
                            }
                            
                            else {
                                chrPoAl ="  ";
                            }
                            
                            if (Main_acc_code.equals("125019") ) {
                                rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                            }
                            else {
                                rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                            }
                            
                            PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                            if(PoNo.trim().equals("")) {
                                PoNo ="000000";
                            }
                            
                            if (PoNo.substring(0,1).equals("B")) {
                                chrPoNo = "B" + PoNo.substring(2,7);
                            }
                            else if (PoNo.substring(0,1).equals("W")) {
                                chrPoNo = PoNo.substring(1,7);
                            }
                            else if (PoNo.substring(0,1).equals("P")) {
                                chrPoNo = PoNo.substring(1,7);
                            }
                            else if (PoNo.substring(0,1).equals("A")) {
                                if (PoNo.substring(0,2).equals("A0")) {
                                    chrPoNo ="A" + PoNo.substring(2,PoNo.length());
                                }
                                else {
                                    chrPoNo ="0"+PoNo.substring(1,PoNo.length());
                                }
                            }
                            else if (PoNo.substring(0,2).equals("D-")) {
                                chrPoNo = PoNo.substring(2,PoNo.length());
                            }
                            else if (PoNo.substring(0,2).equals("I/")) {
                                chrPoNo = PoNo.substring(2,PoNo.length());
                            }
                            else if (PoNo.substring(0,2).toUpperCase().equals("S/")) {
                                chrPoNo = "0" + PoNo.substring(2,PoNo.length());
                            }
                            else if (PoNo.substring(0,2).equals("CA")) {
                                chrPoNo = PoNo.substring(2,PoNo.length());
                            }
                            else if (PoNo.substring(0,2).equals("RM")) {
                                chrPoNo = "0"+PoNo.substring(3,PoNo.length());
                            }
                            else {
                                chrPoNo = "000000" ;
                            }
                            
                            chrPoNo =EITLERPGLOBAL.padLeft(6,chrPoNo,"0");
                            
                            if (Main_acc_code.equals("125019") ) {
                                rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                            }
                            else {
                                rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                            }
                            //  PO Over ==================================================================
                            
                            PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                            
                            if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                            }
                            else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3"))
                                
                            {
                                PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLS");
                            }
                            rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            
                            
                            //(8) Invoice No. ============================================================
                            BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                            String BillAlpha="";
                            
                            if(BillNo.length()>6) {
                                BillNo=BillNo.substring(BillNo.length()-6);
                            }
                            else {
                                BillNo=EITLERPGLOBAL.padLeft(6, BillNo.trim(),"0");
                            }
                            
                            if(BillNo.equals("000000") && Main_acc_code.equals("125019")) {
                                BillNo = chrPoNo.substring(chrPoNo.length()-6);
                            }
                            
                            if ((BillNo.equals(chrPoNo) || BillNo.equals(""))&& Main_acc_code.equals("125019")) {
                                BillAlpha= "AD";
                            } else {
                                BillAlpha= "  ";
                            }
                            
                            if (Sub_acc_code.equals("") || Main_acc_code.equals("125033"))                            {
                                BillNo="000000";
                            }
                            rsCobol.updateString("TR_BILL_NO",BillNo);
                            rsCobol.updateString("TR_BILL_AL",BillAlpha);
                            //============================================================================
                            
                            
                            
                            //(9) Year ===================================================================
                            Yr1_Yr2="0000";
                            if(!TR_INV_AGSR.equals("")) {
                                String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                if(ARRAY_TR_INV_AGSR.length > 1) {
                                    if(ARRAY_TR_INV_AGSR[1].trim().length() <= 4) {
                                        Yr1_Yr2 = EITLERPGLOBAL.padLeft(4,ARRAY_TR_INV_AGSR[1].trim(),"0");
                                    } else {
                                        Yr1_Yr2 = ARRAY_TR_INV_AGSR[1].substring(0,4);
                                    }
                                }
                            } else {
                                Yr1_Yr2="0000";
                            }
                            rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            
                            //(10) Reference sr. no. and fixed transaction code ==========================
                            RefSrNo++;
                            strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                            rsCobol.updateString("TR_REF_SR",strRefSrNo);
                            rsCobol.updateString("TR_TRAN_CODE","000");
                            //============================================================================
                            
                            
                            //**** Find Opposite Entry *********
                            //(11) Allocation Code =======================================================
                            AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                            rsCobol.updateString("TR_ALLOC_CODE","");
                            //============================================================================
                            
                            rsCobol.insertRow() ;
                            
                            rsTmp.next();
                        }
                    }
                    rsVoucher.next();
                }
            }
        }
        catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private String findSalesTaxCode(ResultSet rsTax) {
        String code="00";
        try {
            
            rsTax.first();
            while(!rsTax.isAfterLast()) {
                String MainAccountCode = rsTax.getString("MAIN_ACCOUNT_CODE");
                int index = MainAccountCode.indexOf(".");
                if(index > 0) {
                    int stCode = Integer.parseInt(MainAccountCode.substring(7));
                    if(stCode>=1 && stCode<=7) {
                        code="03";
                    } else if(stCode==21) {
                        code="01";
                    } else {
                        code="07";
                    }
                }
                rsTax.next();
            }
            if(code.equals("00")) {
                code="07";
            }
        } catch (Exception e) {
        }
        return code;
    }
    
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList GeneratedTRList;
    private javax.swing.JScrollPane GeneratedTRPane;
    private javax.swing.JList SelectedTRList;
    private javax.swing.JScrollPane SelectedTRPane;
    private javax.swing.JComboBox cmbSelectType;
    private javax.swing.JButton cmdAddtoSelectionList;
    private javax.swing.JButton cmdBankVoucher;
    private javax.swing.JButton cmdCashVoucher;
    private javax.swing.JButton cmdJV;
    private javax.swing.JButton cmdPJV;
    private javax.swing.JButton cmdRemovefromSelectionList;
    private javax.swing.JButton cmdShowFileDialog;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblSaveFile;
    private javax.swing.JLabel lblSelectType;
    private javax.swing.JLabel lblToDate;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        cmbSelectTypeModel=new EITLComboModel();
        cmbSelectType.removeAllItems();
        cmbSelectType.setModel(cmbSelectTypeModel);
        
        ComboData aData=new ComboData();
        aData.Code=0;
        aData.Text="Select Type";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="Cash Book";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="Bank Book";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=3;
        aData.Text="PJV";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=4;
        aData.Text="JV";
        cmbSelectTypeModel.addElement(aData);
        
    }
    
    private String getBookList() {
        String tmpBookList = "";
        Enumeration e = sVector.elements();
        while(e.hasMoreElements()){
            tmpBookList += e.nextElement()+",";
        }
        System.out.println(tmpBookList.length());
        tmpBookList = tmpBookList.substring(0,tmpBookList.length()-1);
        System.out.println(tmpBookList.length());
        return tmpBookList;
    }
    
    private boolean Validate() {
        if(txtFile.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please specify file.");
            return true;
        }
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Insert from date");
            return true;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText().trim())) {
            JOptionPane.showMessageDialog(this,"Insert valid from date");
            return true;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Insert To date");
            return true;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText().trim())) {
            JOptionPane.showMessageDialog(this,"Insert valid To date");
            return true;
        }
        return false;
    }
    
    private String getPOAlpha(String PoNo) {
        String PoAl = PoNo;
        String chrPoAl = "";
        try {
            if(PoAl.equals("")) {
                PoAl ="  ";
            }
            
            if (PoAl.substring(0,1).equals("B")) {
                chrPoAl = "G ";
            } else if (PoAl.substring(0,1).equals("P")) {
                chrPoAl = "P ";
            } else if (PoAl.substring(0,1).equals("W")) {
                chrPoAl = "W ";
            } else if (PoAl.substring(0,1).equals("A")) {
                if(PoAl.substring(0,2).equals("A0")) {
                    chrPoAl = "CP";
                } else {
                    chrPoAl = "A ";
                }
            } else if (PoAl.substring(0,2).equals("A3")) {
                chrPoAl = "CP";
            } else if (PoAl.substring(0,2).equals("D-")) {
                chrPoAl ="D ";
            } else if (PoAl.substring(0,2).equals("I/")) {
                chrPoAl ="I ";
            } else if (PoAl.substring(0,1).toUpperCase().equals("S")){
                chrPoAl ="S ";
            } else if (PoAl.substring(0,2).equals("RM")) {
                chrPoAl ="RM";
            } else if (PoAl.substring(0,2).equals("CA")) {
                chrPoAl ="CA";
            } else {
                chrPoAl ="  ";
            }
        } catch(Exception e) {
            e.printStackTrace();
            return PoAl;
        }
        return PoAl;
    }
    
    private String getPONo(String PoNo) {
        String chrPoNo = "";
        try {
            if(PoNo.trim().equals("")) {
                PoNo ="000000";
            }
            
            if (PoNo.substring(0,1).equals("B")) {
                chrPoNo = "B" + PoNo.substring(2,7);
            } else if (PoNo.substring(0,1).equals("W")) {
                chrPoNo = PoNo.substring(1,7);
            } else if (PoNo.substring(0,1).equals("P")) {
                chrPoNo = PoNo.substring(1,7);
            } else if (PoNo.substring(0,1).equals("A")) {
                if (PoNo.substring(0,2).equals("A0")) {
                    chrPoNo ="A" + PoNo.substring(2,PoNo.length());
                } else {
                    chrPoNo ="0"+PoNo.substring(1,PoNo.length());
                }
            } else if (PoNo.substring(0,2).equals("D-")) {
                chrPoNo = PoNo.substring(2,PoNo.length());
            } else if (PoNo.substring(0,2).equals("I/")) {
                chrPoNo = PoNo.substring(2,PoNo.length());
            } else if (PoNo.substring(0,2).toUpperCase().equals("S/")) {
                chrPoNo = "0" + PoNo.substring(2,PoNo.length());
            } else if (PoNo.substring(0,2).equals("CA")) {
                chrPoNo = PoNo.substring(2,PoNo.length());
            } else if (PoNo.substring(0,2).equals("RM")) {
                chrPoNo = "0"+PoNo.substring(3,PoNo.length());
            } else {
                chrPoNo = "000000" ;
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            return chrPoNo;
        }
        return chrPoNo;
    }
    
    private String  getAmount(double amt) {
        String TrAmount = "";
        try {
            TrAmount  = new BigDecimal(amt).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
            StringTokenizer st = new StringTokenizer(TrAmount, ".");
            String Amount1 = st.nextToken();
            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
            TrAmount = Amount1 + Amount2;
            if(TrAmount.length()>11) {
                TrAmount=TrAmount.substring(0,11);
            } else {
                TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
            }
        } catch(Exception e) {
            e.printStackTrace();
            return TrAmount;
        }
        return TrAmount;
    }
}