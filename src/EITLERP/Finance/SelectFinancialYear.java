package EITLERP.Finance;

/**
 *
 * @author  nhpatel
 */
/*<APPLET CODE=SelectMIR.Class HEIGHT=400 WIDTH=700></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;


public class SelectFinancialYear extends javax.swing.JApplet {
    
    private EITLTableModel DataModel;
    private EITLTableCellRenderer Rend=new EITLTableCellRenderer();
    
    public boolean Cancelled=true;
    public HashMap colSelItems=new HashMap();
    private JDialog aDialog;
    public static int SelYearFromGetCopy=0;
    public static int SelYearFromSetCopy=0;
    private EITLComboModel cmbFromModelGet;
    private EITLComboModel cmbFromModelSet;
    
    public String SQL;
    public int ReturnCol;
    public boolean ShowReturnCol;
    public int DefaultSearchOn;
    String ReturnVal="";
    public static String PCode = "";
    public boolean CopyHeader=true;
    public clsDepositMaster ObjReceipt;
    
    private EITLComboModel cmbDeptModel;
    private int SelDeptID=0;
    
    /** Creates new form LOV */
    public SelectFinancialYear() {
        System.gc();
        initComponents();
        //FormatGrid();
        //txtPartyCode.setText(PCode);
        //txtPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+PCode+"' ",FinanceGlobal.FinURL));
        //GenerateCombo();
        //int DeptID=clsUser.getDeptID(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID);
        //EITLERPGLOBAL.setComboIndex(cmbDept,DeptID);
        
    }
    
    public void init() {
        System.gc();
        setSize(740,470);
        initComponents();
        //FormatGrid();
        //txtPartyCode.setText(PCode);
        //txtPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+PCode+"' ",FinanceGlobal.FinURL));
        //GenerateCombo();
        //int DeptID=clsUser.getDeptID(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID);
        //EITLERPGLOBAL.setComboIndex(cmbDept,DeptID);
        
    }
    
    public SelectFinancialYear(String pSQL, int pReturnCol, boolean pShowReturnCol, int pDefaultSearchOn) {
        initComponents();
        DataModel=new EITLTableModel();
        SQL=pSQL;
        ReturnCol=pReturnCol;
        ShowReturnCol=pShowReturnCol;
        DefaultSearchOn=pDefaultSearchOn;
        //  lblSearch.setDisplayedMnemonic('S');
        //  lblSearch.setLabelFor((Component) txtSearch);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblMsgGet = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        cmdOK = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        lblMsgSet = new javax.swing.JLabel();
        lblFromYearGet = new javax.swing.JLabel();
        cmbFromYearGet = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtToYearGet = new javax.swing.JTextField();
        lblFromYearSet = new javax.swing.JLabel();
        cmbFromYearSet = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtToYearSet = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        lblMsgGet.setFont(new java.awt.Font("Arial", 1, 12));
        lblMsgGet.setText(" Select Year to Copy :");
        getContentPane().add(lblMsgGet);
        lblMsgGet.setBounds(10, 10, 130, 15);

        jPanel4.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jPanel4);
        jPanel4.setBounds(8, 70, 350, 6);

        cmdOK.setText("OK");
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOK);
        cmdOK.setBounds(80, 160, 78, 23);

        cmdCancel.setText("Cancel");
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(170, 160, 79, 23);

        lblMsgSet.setFont(new java.awt.Font("Arial", 1, 12));
        lblMsgSet.setText(" Select Year to Generate :");
        getContentPane().add(lblMsgSet);
        lblMsgSet.setBounds(10, 80, 350, 15);

        lblFromYearGet.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromYearGet.setText("For the Year : ");
        getContentPane().add(lblFromYearGet);
        lblFromYearGet.setBounds(10, 40, 100, 20);

        cmbFromYearGet.setToolTipText("");
        cmbFromYearGet.setOpaque(false);
        cmbFromYearGet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFromYearGetItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbFromYearGet);
        cmbFromYearGet.setBounds(120, 40, 102, 20);

        jLabel3.setText("--");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(250, 40, 20, 20);

        txtToYearGet.setEnabled(false);
        getContentPane().add(txtToYearGet);
        txtToYearGet.setBounds(280, 40, 70, 20);

        lblFromYearSet.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromYearSet.setText("For the Year : ");
        getContentPane().add(lblFromYearSet);
        lblFromYearSet.setBounds(10, 110, 100, 20);

        cmbFromYearSet.setToolTipText("");
        cmbFromYearSet.setOpaque(false);
        cmbFromYearSet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFromYearSetItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbFromYearSet);
        cmbFromYearSet.setBounds(120, 110, 102, 20);

        jLabel4.setText("--");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(250, 110, 20, 20);

        txtToYearSet.setEnabled(false);
        getContentPane().add(txtToYearSet);
        txtToYearSet.setBounds(280, 110, 70, 20);

    }//GEN-END:initComponents
    
    private void cmbFromYearSetItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFromYearSetItemStateChanged
        // TODO add your handling code here:
        if(cmbFromYearSet.getSelectedIndex()!=0) {
            txtToYearSet.setText(Integer.toString(EITLERPGLOBAL.getComboCode(cmbFromYearSet)+1));
        } else {
            txtToYearSet.setText("");
        }
    }//GEN-LAST:event_cmbFromYearSetItemStateChanged
    
    private void cmbFromYearGetItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFromYearGetItemStateChanged
        // TODO add your handling code here:
        
        if(cmbFromYearGet.getSelectedIndex()!=0) {
            GenerateYearComboSet();
            txtToYearGet.setText(Integer.toString(EITLERPGLOBAL.getComboCode(cmbFromYearGet)+1));
        } else {
            GenerateYearComboSet();
            txtToYearGet.setText("");
            txtToYearSet.setText("");
            cmbFromYearSet.setSelectedIndex(0);
        }
        
        
    }//GEN-LAST:event_cmbFromYearGetItemStateChanged
    
    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        // TODO add your handling code here:
        if(EITLERPGLOBAL.getComboCode(cmbFromYearGet)==0 || EITLERPGLOBAL.getComboCode(cmbFromYearSet)==0) {
            Cancelled=true;
        } else {
            SetList();
            Cancelled=false;
        }
        aDialog.dispose();
    }//GEN-LAST:event_cmdOKActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancelled=true;
        aDialog.dispose();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // Add your handling code here:
        /*try {
            if(evt.getKeyCode()==10) //Enter key pressed
            {
                if(Table.getRowCount()<=0) {
                    Cancelled=true;
                }
                else {
                    Cancelled=false;
                    ReturnVal=(String) DataModel.getValueAt(Table.getSelectedRow(),ReturnCol-1);
                }
                aDialog.dispose();
                return;
            }
         
            if(evt.getKeyCode()==27) //Escape key pressed
            {
                Cancelled=true;
                ReturnVal="";
                aDialog.dispose();
                return;
            }
         
            if(evt.getKeyCode()==40) //Down Arrow key pressed
            {
                if(Table.getSelectedRow()<Table.getRowCount()) {
                    Table.changeSelection(Table.getSelectedRow()+1,DefaultSearchOn-1,false,false);
                }
                return;
            }
         
         
            if(evt.getKeyCode()==38) //Up Arrow key pressed
            {
                if(Table.getSelectedRow()>=0) {
                    Table.changeSelection(Table.getSelectedRow()-1,DefaultSearchOn-1,false,false);
                }
         
                return;
            }
         
        }
        catch(Exception e)
        {}*/
    }//GEN-LAST:event_txtSearchKeyPressed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbFromYearGet;
    private javax.swing.JComboBox cmbFromYearSet;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdOK;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblFromYearGet;
    private javax.swing.JLabel lblFromYearSet;
    private javax.swing.JLabel lblMsgGet;
    private javax.swing.JLabel lblMsgSet;
    private javax.swing.JTextField txtToYearGet;
    private javax.swing.JTextField txtToYearSet;
    // End of variables declaration//GEN-END:variables
    
    
    private void SetList() {
        SelYearFromGetCopy=EITLERPGLOBAL.getComboCode(cmbFromYearGet);
        SelYearFromSetCopy=EITLERPGLOBAL.getComboCode(cmbFromYearSet);
    }
    
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    public boolean ShowList() {
        try {
            
            //FormatGrid();
            
            setSize(500,400);
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"Select Financial Year",true);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(false);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            cmbFromModelGet=new EITLComboModel();
            cmbFromModelSet=new EITLComboModel();
            GenerateYearComboGet();
            aDialog.show();
        }
        catch(Exception e) {
        }
        return !Cancelled;
    }
    
    private void GenerateYearComboGet() {
        try {
            HashMap List=new HashMap();
            
            cmbFromYearGet.setModel(cmbFromModelGet);
            cmbFromYearGet.removeAllItems();
            
            List=clsFinYear.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND YEAR_FROM IN (SELECT DISTINCT YEAR_FROM FROM FINANCE.D_FIN_NOTE_MASTER)");
            
            ComboData cmbData=new ComboData();
            cmbData.Text="Select Year";
            cmbData.Code=0;
            cmbData.strCode ="0";
            cmbFromModelGet.addElement(cmbData);
            
            for(int i=1;i<=List.size();i++) {
                clsFinYear ObjYear =(clsFinYear) List.get(Integer.toString(i));
                
                cmbData=new ComboData();
                cmbData.Text=Integer.toString((int)ObjYear.getAttribute("YEAR_FROM").getVal());
                cmbData.Code=(int)ObjYear.getAttribute("YEAR_FROM").getVal();
                cmbData.strCode =Integer.toString((int)ObjYear.getAttribute("YEAR_FROM").getVal());
                cmbFromModelGet.addElement(cmbData);
            }
            cmbFromYearGet.setSelectedIndex(0);
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void GenerateYearComboSet() {
        HashMap List=new HashMap();
        
        cmbFromYearSet.setModel(cmbFromModelSet);
        cmbFromYearSet.removeAllItems();
        
        int YearFrom = EITLERPGLOBAL.getComboCode(cmbFromYearGet);
        if(YearFrom==0) {
            List=clsFinYear.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND YEAR_FROM >"+100000);
        } else {
            List=clsFinYear.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND YEAR_FROM<>0 AND YEAR_FROM >"+YearFrom);
        }
        
        
        ComboData cmbData=new ComboData();
        cmbData.Text="Select Year";
        cmbData.Code=0;
        cmbData.strCode ="0";
        cmbFromModelSet.addElement(cmbData);
        for(int i=1;i<=List.size();i++) {
            clsFinYear ObjYear =(clsFinYear) List.get(Integer.toString(i));
            
            cmbData=new ComboData();
            cmbData.Text=Integer.toString((int)ObjYear.getAttribute("YEAR_FROM").getVal());
            cmbData.Code=(int)ObjYear.getAttribute("YEAR_FROM").getVal();
            cmbData.strCode =Integer.toString((int)ObjYear.getAttribute("YEAR_FROM").getVal());
            cmbFromModelSet.addElement(cmbData);
        }
        cmbFromYearSet.setSelectedIndex(0);
    }
    
}

