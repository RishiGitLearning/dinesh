

package EITLERP.Finance.ReportsUI;


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import java.text.*;
import TReportWriter.*;

public class frmRptPrematurityRefund extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private EITLComboModel cmbMonthModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    /** Initializes the applet frmRptGRNInfo */
    public void init() {
        setSize(424,264);
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cmdPreview = new javax.swing.JButton();
        lblDocNo = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("Prematurity Refund Detail");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(9, 8, 350, 15);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 2, 800, 30);

        cmdPreview.setText("Preview Report");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });
        cmdPreview.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                cmdPreviewComponentHidden(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(80, 100, 130, 25);

        lblDocNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocNo.setText("Doc No.:");
        getContentPane().add(lblDocNo);
        lblDocNo.setBounds(35, 73, 70, 15);

        txtDocNo.setColumns(10);
        getContentPane().add(txtDocNo);
        txtDocNo.setBounds(110, 70, 90, 20);

    }//GEN-END:initComponents

    private void cmdPreviewComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cmdPreviewComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPreviewComponentHidden
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        GenerateReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblDocNo;
    private javax.swing.JTextField txtDocNo;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        
        try {
            String strSQL = "";
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("SR_NO");
            objReportData.AddColumn("RECEIPT_NO");
            objReportData.AddColumn("LEGACY_NO");
            objReportData.AddColumn("RECEIPT_DATE");
            objReportData.AddColumn("APPLICANT_NAME");
            objReportData.AddColumn("AMOUNT");
            objReportData.AddColumn("PERIOD");
            objReportData.AddColumn("RATE");
            objReportData.AddColumn("EFFECTIVE_DATE");
            objReportData.AddColumn("MATURITY_DATE");
            objReportData.AddColumn("TOTAL_GROSS_INT");
            objReportData.AddColumn("TOTAL_TDS");
            objReportData.AddColumn("TOTAL_NET");
            objReportData.AddColumn("BROKERAGE");
            objReportData.AddColumn("NET_PAYABLE_INTEREST");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("SR_NO","");
            objOpeningRow.setValue("RECEIPT_NO","");
            objOpeningRow.setValue("LEGACY_NO","");
            objOpeningRow.setValue("RECEIPT_DATE","0000-00-00");
            objOpeningRow.setValue("APPLICANT_NAME","");
            objOpeningRow.setValue("AMOUNT","");
            objOpeningRow.setValue("PERIOD","");
            objOpeningRow.setValue("RATE","");
            objOpeningRow.setValue("EFFECTIVE_DATE","0000-00-00");
            objOpeningRow.setValue("MATURITY_DATE","0000-00-00");
            objOpeningRow.setValue("TOTAL_GROSS_INT","");
            objOpeningRow.setValue("TOTAL_TDS","");
            objOpeningRow.setValue("TOTAL_NET","");
            objOpeningRow.setValue("BROKERAGE","");
            objOpeningRow.setValue("NET_PAYABLE_INTEREST","");
            
            
            strSQL = "SELECT * FROM D_FD_DEPOSIT_PM WHERE DOC_NO='"+txtDocNo.getText().trim()+"' ";
            ResultSet rsReceipt=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsReceipt.first();
            
            objRow=objReportData.newRow();
            
            objRow.setValue("SR_NO","1");
            objRow.setValue("RECEIPT_NO",UtilFunctions.getString(rsReceipt,"RECEIPT_NO",""));
            objRow.setValue("LEGACY_NO",UtilFunctions.getString(rsReceipt,"LEGACY_NO",""));
            String ReceiptNo = UtilFunctions.getString(rsReceipt,"RECEIPT_NO","");
            String PartyCode = data.getStringValueFromDB("SELECT PARTY_CODE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"'",FinanceGlobal.FinURL);
            String ReceiptDate = data.getStringValueFromDB("SELECT RECEIPT_DATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
            objRow.setValue("RECEIPT_DATE",EITLERPGLOBAL.formatDate(ReceiptDate));
            String ApplicantName = data.getStringValueFromDB("SELECT APPLICANT_NAME FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"' ",FinanceGlobal.FinURL);
            objRow.setValue("APPLICANT_NAME",ApplicantName);
            objRow.setValue("AMOUNT",Double.toString(UtilFunctions.getDouble(rsReceipt,"PRINCIPLE_AMOUNT",0)));
            
            int period = data.getIntValueFromDB("SELECT DEPOSIT_PERIOD FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
            objRow.setValue("PERIOD",Integer.toString(period));
            
            objRow.setValue("RATE",Double.toString(UtilFunctions.getDouble(rsReceipt,"INTEREST_RATE",0)));
            
            String EffectiveDate = data.getStringValueFromDB("SELECT EFFECTIVE_DATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"'",FinanceGlobal.FinURL);
            String MaturityDate = data.getStringValueFromDB("SELECT MATURITY_DATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"'",FinanceGlobal.FinURL);

            objRow.setValue("EFFECTIVE_DATE",EITLERPGLOBAL.formatDate(EffectiveDate));
            objRow.setValue("MATURITY_DATE",EITLERPGLOBAL.formatDate(MaturityDate));
            
            double gInterest = EITLERPGLOBAL.round(UtilFunctions.getDouble(rsReceipt,"PAID_INTEREST",0),2);
            objRow.setValue("TOTAL_GROSS_INT",Double.toString(gInterest));
            
            double TDS = EITLERPGLOBAL.round(UtilFunctions.getDouble(rsReceipt,"PAID_TDS",0)+UtilFunctions.getDouble(rsReceipt,"CURRRENT_TDS",0),2);
            objRow.setValue("TOTAL_TDS",Double.toString(TDS));
            
            objRow.setValue("TOTAL_NET",Double.toString(EITLERPGLOBAL.round(gInterest-TDS,2)));
            
            objRow.setValue("BROKERAGE",Double.toString(UtilFunctions.getDouble(rsReceipt,"BROKERAGE",0)));
            objRow.setValue("NET_PAYABLE_INTEREST",Double.toString(UtilFunctions.getDouble(rsReceipt,"NET_PAYABLE_AMOUNT",0)));
            objReportData.AddRow(objRow);
            
            HashMap Parameters=new HashMap();
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptPrematurityRefund.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    private boolean Validate() {
        //Form level validations
        if(txtDocNo.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Doc No.");
            return false;
        }
        return true;
    }
}
