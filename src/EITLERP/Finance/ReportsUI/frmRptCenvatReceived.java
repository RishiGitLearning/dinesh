/*
 * frmpartyinfo.java
 *
 * Created on November 28, 2007, 12:12 PM
 */

package EITLERP.Finance.ReportsUI;

import javax.swing.*;
import EITLERP.* ;
import java.sql.*;
import EITLERP.Finance.*;
import java.util.*;
import TReportWriter.*;

/**
 *
 * @author  root
 */
public class frmRptCenvatReceived extends javax.swing.JApplet {
    
    /** Initializes the applet frmpartyinfo */
    
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    //clsAccount ObjAccount = new clsAccount();
    //clsPartyInfo ObjParty ;
    //EITLTableModel TableModelM,TableModelD,TableModelV ;
    static String acname ;
    Object[][] ObjDate;
    
    
    public void init() {
        setSize(500,250);
        initComponents();
        //FormatMonthGrid();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        subcodetxt = new javax.swing.JTextField();
        cmdnextparty = new javax.swing.JButton();
        lblAccountName = new javax.swing.JLabel();
        maincodetxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel5.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(0, 153, 204));
        jPanel5.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel4.setText("DETAILS OF CENVAT RECEIVED");
        jPanel5.add(jLabel4);
        jLabel4.setBounds(9, 8, 280, 15);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(-1, -1, 490, 30);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        subcodetxt.setColumns(15);
        subcodetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subcodetxtActionPerformed(evt);
            }
        });
        subcodetxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                subcodetxtFocusLost(evt);
            }
        });
        subcodetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                subcodetxtKeyPressed(evt);
            }
        });

        jPanel1.add(subcodetxt);
        subcodetxt.setBounds(290, 180, 100, 20);

        cmdnextparty.setText("Show");
        cmdnextparty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdnextpartyActionPerformed(evt);
            }
        });

        jPanel1.add(cmdnextparty);
        cmdnextparty.setBounds(290, 100, 88, 25);

        lblAccountName.setText("-");
        jPanel1.add(lblAccountName);
        lblAccountName.setBounds(100, 70, 340, 15);

        maincodetxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                maincodetxtFocusLost(evt);
            }
        });
        maincodetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                maincodetxtKeyPressed(evt);
            }
        });

        jPanel1.add(maincodetxt);
        maincodetxt.setBounds(100, 40, 100, 19);

        jLabel1.setText("Main Code ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 40, 80, 20);

        jLabel3.setText("From Date ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 10, 80, 15);

        txtFromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromDateActionPerformed(evt);
            }
        });

        jPanel1.add(txtFromDate);
        txtFromDate.setBounds(100, 10, 100, 19);

        jLabel5.setText("To Date ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(260, 10, 70, 15);

        jPanel1.add(txtToDate);
        txtToDate.setBounds(340, 10, 100, 19);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 50, 470, 140);

    }//GEN-END:initComponents
    
    private void txtFromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFromDateActionPerformed
    
    private void subcodetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subcodetxtActionPerformed
        
    }//GEN-LAST:event_subcodetxtActionPerformed
    
    private void subcodetxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_subcodetxtFocusLost
        // TODO add your handling code here:
        lblAccountName.setText(clsPartyMaster.getAccountName(maincodetxt.getText(),subcodetxt.getText()));
    }//GEN-LAST:event_subcodetxtFocusLost
    
    private void subcodetxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subcodetxtKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) {
            
            LOV aList=new LOV();
            
            aList.SQL="SELECT PARTY_CODE,PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 ORDER BY PARTY_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            aList.UseSpecifiedConn=true;
            aList.dbURL=FinanceGlobal.FinURL;
            
            if(aList.ShowLOV()) {
                subcodetxt.setText(aList.ReturnVal);
                lblAccountName.setText(clsPartyMaster.getAccountName(maincodetxt.getText(),aList.ReturnVal));
                
                
            }
            
        }
    }//GEN-LAST:event_subcodetxtKeyPressed
    
    private void maincodetxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maincodetxtFocusLost
        // TODO add your handling code here:
        lblAccountName.setText(clsPartyMaster.getAccountName(maincodetxt.getText(),subcodetxt.getText()));
    }//GEN-LAST:event_maincodetxtFocusLost
    
    private void maincodetxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_maincodetxtKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) {
            LOV aList=new LOV();
            
            aList.SQL="SELECT MAIN_ACCOUNT_CODE,ACCOUNT_NAME FROM D_FIN_GL WHERE  APPROVED=1 ORDER BY ACCOUNT_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            aList.UseSpecifiedConn=true;
            aList.dbURL=FinanceGlobal.FinURL;
            
            if(aList.ShowLOV()) {
                maincodetxt.setText(aList.ReturnVal);
            }
            
        }
    }//GEN-LAST:event_maincodetxtKeyPressed
    
    private void cmdnextpartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdnextpartyActionPerformed
        if ( ! Validate()) {
            return;
        }
        GenerateMonthGrid((new clsPartyInfo()).getMonthDetailCenvat(maincodetxt.getText().trim(),subcodetxt.getText().trim(),txtFromDate.getText().trim(),txtToDate.getText().trim(),true));
    }//GEN-LAST:event_cmdnextpartyActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
    }//GEN-LAST:event_formMouseClicked
    
    public void GenerateMonthGrid(Object[][] ObjMonth){
        
        
        TReportWriter.SimpleDataProvider.TRow objRow;
        TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
        
        objReportData.AddColumn("MONTH");
        objReportData.AddColumn("OPENING_BALANCE");
        objReportData.AddColumn("CENVAT_AVAILED");
        objReportData.AddColumn("CENVAT_UTILISED");
        objReportData.AddColumn("CLOSING_BALANCE");
        
        
        TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
        
        objOpeningRow.setValue("MONTH","");
        objOpeningRow.setValue("OPENING_BALANCE","");
        objOpeningRow.setValue("CENVAT_AVAILED","");
        objOpeningRow.setValue("CENVAT_UTILISED","");
        objOpeningRow.setValue("CLOSING_BALANCE","");
        
        String months[]={"January","February","March","April","May","June","July","August","Septmber","October","November","December"};
        
        String from = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
        String to = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
        
        java.sql.Date checkfrom = java.sql.Date.valueOf(from);
        java.sql.Date checkto = java.sql.Date.valueOf(to);
        
        
        int monthNo=0;
        int i=0;
        while(checkfrom.before(checkto)) {
            //if(EITLERPGLOBAL.getMonth(to) <= EITLERPGLOBAL.getMonth(from) && EITLERPGLOBAL.getYear(to) <= EITLERPGLOBAL.getYear(from) ) {
            objRow=objReportData.newRow();
            String Fromyy = String.valueOf(EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())).substring(2,4);
            String Toyy = String.valueOf(EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())).substring(2,4);
            
            monthNo= EITLERPGLOBAL.getMonth(from);
            
            if(monthNo<=8) {
                objRow.setValue("MONTH",months[monthNo-1] + "-" + EITLERPGLOBAL.getYear(from));
            }
            else{
                objRow.setValue("MONTH",months[monthNo-1] + "-" + EITLERPGLOBAL.getYear(from));
            }
            
            from = clsCalcInterest.addMonthToDate(from,1);
            
            checkfrom = java.sql.Date.valueOf(from);
            checkto = java.sql.Date.valueOf(to);
            
            String str = String.valueOf(ObjMonth[i][0]);
            int strLen = str.length();
            str = str.substring(0,strLen-2);
            objRow.setValue("OPENING_BALANCE",str);
            
            str = String.valueOf(ObjMonth[i][1]);
            strLen = str.length();
            str = str.substring(0,strLen-2);
            objRow.setValue("CENVAT_AVAILED",str);
            
            str = String.valueOf(ObjMonth[i][2]);
            strLen = str.length();
            str = str.substring(0,strLen-2);
            objRow.setValue("CENVAT_UTILISED",str);
            
            str = String.valueOf(ObjMonth[i][3]);
            strLen = str.length();
            str = str.substring(0,strLen-2);
            objRow.setValue("CLOSING_BALANCE",str);
            
            objReportData.AddRow(objRow);
            i++;
            
        }
        
        
        HashMap Parameters=new HashMap();
        
        Parameters.put("SUB_CODE",lblAccountName.getText());
        Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
        Parameters.put("FIN_FROM_DATE",txtFromDate.getText().trim());
        Parameters.put("FIN_TO_DATE",txtToDate.getText().trim());
        String FromYear = txtFromDate.getText().trim().substring(txtFromDate.getText().trim().lastIndexOf("/")+1);
        String ToYear = txtToDate.getText().trim().substring(txtToDate.getText().trim().lastIndexOf("/")+1);
        Parameters.put("FIN_YEAR_FROM",FromYear);
        Parameters.put("FIN_YEAR_TO",ToYear);
        Parameters.put("ASSESMENT_YEAR_FROM",String.valueOf(EITLERPGLOBAL.FinYearFrom));
        Parameters.put("ASSESMENT_YEAR_TO",String.valueOf(EITLERPGLOBAL.FinYearTo));
        
        objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCenvatReceived.rpt",Parameters,objReportData);
    }
    
    public String getFromDate(int selMonth) {
        int month,year,remainMonth;
        String Date;
        month =Integer.parseInt(EITLERPGLOBAL.FinFromDateDB.substring(5,7));
        year=Integer.parseInt(EITLERPGLOBAL.FinFromDateDB.substring(0,4));
        if(selMonth>=9) {
            year++;
            remainMonth=selMonth%9+1;
            month=remainMonth;
            return Integer.toString(year)+"-"+"0"+Integer.toString(month)+"-"+"01";
            
        }
        else {
            month=month+selMonth;
            if(month>=10){
                return Integer.toString(year)+"-"+Integer.toString(month)+"-"+"01";
            }
            else{
                return Integer.toString(year)+"-"+"0"+Integer.toString(month)+"-"+"01";
            }
        }
    }
    
    public String getStrQuery(String MainAccountCode,String SubAccountCode) {
        
        String strQuery;
        if(!SubAccountCode.trim().equals("")) {
            strQuery=" AND SUB_ACCOUNT_CODE ="+SubAccountCode;
            if(!MainAccountCode.trim().equals("")) {
                strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
            }
        }
        else {
            strQuery = " AND MAIN_ACCOUNT_CODE ="+MainAccountCode ;
        }
        
        return strQuery;
    }
    
    private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter from Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter To Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        if(maincodetxt.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter the Main code....");
            return false;
        }
        else if(lblAccountName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Invalid Main code...");
            return false;
        }
        
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdnextparty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblAccountName;
    private javax.swing.JTextField maincodetxt;
    private javax.swing.JTextField subcodetxt;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
}
