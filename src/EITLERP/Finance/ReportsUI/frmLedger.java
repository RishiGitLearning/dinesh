/*
 * frmLedger.java
 *
 * Created on August 24, 2007, 10:52 AM
 */

package EITLERP.Finance.ReportsUI;

/**
 *
 * @author  root
 */
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import EITLERP.*;
import EITLERP.Finance.*;
import javax.swing.*;
import javax.swing.JTable;
import java.io.*;
import EITLERP.Purchase.*;
import EITLERP.Stores.*;
import java.sql.*;
import TReportWriter.*;
import EITLERP.Utils.SimpleDataProvider.*;
import EITLERP.Finance.Config.*;
import EITLERP.Finance.ReportsUI.*;
import java.text.*;
import javax.swing.text.*;
import java.awt.event.*;


public class frmLedger extends javax.swing.JApplet {
    
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLTableCellRenderer RowFormat=new EITLTableCellRenderer();
    private EITLTableCellRenderer CellAlign=new EITLTableCellRenderer();
    private EITLTableCellRenderer ColumnColor=new EITLTableCellRenderer();
    private EITLTableCellRenderer POColor=new EITLTableCellRenderer();
     private boolean Updating=false;
    boolean updated=false;
    
    DecimalFormat dFormat=new DecimalFormat("###0.00");
    
    private clsExcelExporter exp = new clsExcelExporter();
    private TReportEngine objEngine=new TReportEngine();
    String cellLastValue="";
    /** Initializes the applet frmLedger */
    public void init() {
        setSize(730, 550);
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        mnuSelectAdvAmountReport = new javax.swing.JPopupMenu();
        mnuAdvanceCreditDetail = new javax.swing.JMenuItem();
        mnuAdvanceCreditSummary = new javax.swing.JMenuItem();
        lblTitle = new javax.swing.JLabel();
        cmdShowVoucher = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        Tab = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMainAccountCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFromSubAccountCode = new javax.swing.JTextField();
        lblFromSubAccountName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        cmdShow = new javax.swing.JButton();
        chkApproved = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtBookCode = new javax.swing.JTextField();
        lblBookName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFromAmount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtToAmount = new javax.swing.JTextField();
        chkLegacy = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        txtToSubAccountCode = new javax.swing.JTextField();
        lblToSubAccountName = new javax.swing.JLabel();
        cmdNewLedger = new javax.swing.JButton();
        cmdNewPrintLedger = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        cmdSearch = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblDebitTotal = new javax.swing.JLabel();
        lblCreditTotal = new javax.swing.JLabel();
        cmdPrintSummary = new javax.swing.JButton();
        cmdAdvReceipt = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        mnuAdvanceCreditDetail.setText("Advance Credit Detail");
        mnuAdvanceCreditDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdvanceCreditDetailActionPerformed(evt);
            }
        });

        mnuSelectAdvAmountReport.add(mnuAdvanceCreditDetail);

        mnuAdvanceCreditSummary.setText("Advance Credit Summary");
        mnuAdvanceCreditSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdvanceCreditSummaryActionPerformed(evt);
            }
        });

        mnuSelectAdvAmountReport.add(mnuAdvanceCreditSummary);

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" ONLINE LEDGER DISPLAY");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(1, 1, 780, 25);

        cmdShowVoucher.setText("Show Voucher");
        cmdShowVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShowVoucher);
        cmdShowVoucher.setBounds(30, 460, 140, 25);

        cmdPrint.setText("Print Ledger For Account Old");
        cmdPrint.setMargin(new java.awt.Insets(2, 1, 2, 1));
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPrint);
        cmdPrint.setBounds(180, 460, 190, 25);

        jPanel3.setLayout(null);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Main Code :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(5, 11, 105, 15);

        txtMainAccountCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMainAccountCodeFocusLost(evt);
            }
        });
        txtMainAccountCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMainAccountCodeKeyPressed(evt);
            }
        });

        jPanel1.add(txtMainAccountCode);
        txtMainAccountCode.setBounds(120, 10, 130, 19);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("From Sub Code :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(5, 35, 105, 15);

        txtFromSubAccountCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromSubAccountCodeFocusLost(evt);
            }
        });
        txtFromSubAccountCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFromSubAccountCodeKeyPressed(evt);
            }
        });

        jPanel1.add(txtFromSubAccountCode);
        txtFromSubAccountCode.setBounds(120, 37, 130, 19);

        lblFromSubAccountName.setText("...");
        jPanel1.add(lblFromSubAccountName);
        lblFromSubAccountName.setBounds(258, 40, 350, 15);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("From Date :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(5, 92, 105, 15);

        jPanel1.add(txtFromDate);
        txtFromDate.setBounds(120, 90, 100, 19);

        cmdShow.setText("Generate Ledger For Account");
        cmdShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowActionPerformed(evt);
            }
        });

        jPanel1.add(cmdShow);
        cmdShow.setBounds(80, 230, 220, 25);

        chkApproved.setSelected(true);
        chkApproved.setText("Only Approved Vouchers");
        jPanel1.add(chkApproved);
        chkApproved.setBounds(118, 183, 180, 23);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("To Date :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(232, 92, 59, 15);

        jPanel1.add(txtToDate);
        txtToDate.setBounds(298, 91, 100, 19);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Book Code :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(5, 123, 105, 17);

        txtBookCode.setColumns(10);
        txtBookCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBookCodeFocusLost(evt);
            }
        });
        txtBookCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBookCodeKeyPressed(evt);
            }
        });

        jPanel1.add(txtBookCode);
        txtBookCode.setBounds(120, 123, 90, 19);

        lblBookName.setText("-");
        jPanel1.add(lblBookName);
        lblBookName.setBounds(225, 125, 350, 15);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Amount From :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(5, 151, 105, 18);

        txtFromAmount.setColumns(10);
        jPanel1.add(txtFromAmount);
        txtFromAmount.setBounds(120, 151, 100, 19);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("To :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(237, 151, 38, 18);

        txtToAmount.setColumns(10);
        jPanel1.add(txtToAmount);
        txtToAmount.setBounds(283, 149, 100, 20);

        chkLegacy.setText("Use Legacy Data");
        jPanel1.add(chkLegacy);
        chkLegacy.setBounds(123, 300, 135, 23);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("To Sub Code :");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(5, 62, 105, 15);

        txtToSubAccountCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtToSubAccountCodeFocusLost(evt);
            }
        });
        txtToSubAccountCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtToSubAccountCodeKeyPressed(evt);
            }
        });

        jPanel1.add(txtToSubAccountCode);
        txtToSubAccountCode.setBounds(120, 64, 130, 19);

        lblToSubAccountName.setText("...");
        jPanel1.add(lblToSubAccountName);
        lblToSubAccountName.setBounds(259, 67, 350, 15);

        cmdNewLedger.setForeground(new java.awt.Color(255, 51, 102));
        cmdNewLedger.setText("Generate Ledger For Sales");
        cmdNewLedger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewLedgerActionPerformed(evt);
            }
        });

        jPanel1.add(cmdNewLedger);
        cmdNewLedger.setBounds(320, 230, 240, 25);

        cmdNewPrintLedger.setForeground(new java.awt.Color(255, 51, 102));
        cmdNewPrintLedger.setText("Print Ledger For Sales");
        cmdNewPrintLedger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewPrintLedgerActionPerformed(evt);
            }
        });

        jPanel1.add(cmdNewPrintLedger);
        cmdNewPrintLedger.setBounds(320, 270, 240, 25);

        jPanel3.add(jPanel1);
        jPanel1.setBounds(2, 0, 690, 390);

        Tab.addTab("Filter Criteria", jPanel3);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(5, 35, 680, 330);

        jLabel8.setText("Search");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(445, 13, 50, 15);

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jPanel2.add(txtSearch);
        txtSearch.setBounds(500, 10, 120, 19);

        cmdSearch.setFont(new java.awt.Font("Dialog", 0, 10));
        cmdSearch.setText("Go");
        cmdSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSearchActionPerformed(evt);
            }
        });

        jPanel2.add(cmdSearch);
        cmdSearch.setBounds(624, 10, 47, 20);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 9));
        jLabel9.setText("Click on the column,  type keywords in search textbox and click on Go button to search.");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(12, 14, 410, 11);

        jLabel10.setText("Total :");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(273, 370, 53, 15);

        lblDebitTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDebitTotal.setText("..");
        jPanel2.add(lblDebitTotal);
        lblDebitTotal.setBounds(322, 369, 120, 15);

        lblCreditTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreditTotal.setText("..");
        jPanel2.add(lblCreditTotal);
        lblCreditTotal.setBounds(455, 369, 120, 15);

        Tab.addTab("Ledger", jPanel2);

        getContentPane().add(Tab);
        Tab.setBounds(2, 27, 700, 420);

        cmdPrintSummary.setText("Print Ledger Summary");
        cmdPrintSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintSummaryActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPrintSummary);
        cmdPrintSummary.setBounds(180, 490, 190, 25);

        cmdAdvReceipt.setText("Adv. Receipt");
        cmdAdvReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAdvReceiptActionPerformed(evt);
            }
        });

        getContentPane().add(cmdAdvReceipt);
        cmdAdvReceipt.setBounds(480, 490, 120, 25);

        jButton1.setText("Export to Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(30, 490, 140, 25);

        jButton2.setText("Print Ledger for Account Updated");
        jButton2.setMargin(new java.awt.Insets(2, 1, 2, 1));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(380, 460, 220, 25);

        jButton3.setText("Print Yearly Nominal");
        jButton3.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(180, 520, 190, 25);

    }//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        updated=true;
        String maincode="";
        int Type=0;
        int counter=0;
        int list=0;
         if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please enter From date");
            return;    
                }
         if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please enter To date");
            return ;  
                }
        try {
            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("LEGACY_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("BOOK_CODE");
            objData.AddColumn("MAIN_CODE");
            objData.AddColumn("CODE");
            objData.AddColumn("SUB_ACCOUNT_CODE");
            objData.AddColumn("CHEQUE_NO");
            objData.AddColumn("CHEQUE_DATE");
            objData.AddColumn("INVOICE_NO");
            objData.AddColumn("INVOICE_DATE");
            objData.AddColumn("LINK_NO");
            objData.AddColumn("PO_NO");
            objData.AddColumn("PO_DATE");
            objData.AddColumn("GRN_NO");
            objData.AddColumn("GRN_DATE");
            objData.AddColumn("REMARKS");
            objData.AddColumn("DEBIT_AMOUNT");
            objData.AddColumn("CREDIT_AMOUNT");
            objData.AddColumn("GROUP");
            objData.AddColumn("CLOSING_BALANCE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("PARTY_CODE1");
            objData.AddColumn("NAME");            
            
            String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
            String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
            
            HashMap List = new HashMap();
            List=clsAccount.getLedgerNomYearly(txtMainAccountCode.getText(),txtFromSubAccountCode.getText(),txtToSubAccountCode.getText(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());                             
            try{
                String main_code="";
                //TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                for(int i=1;i<=List.size();i++) {                    
                    //objItem=(clsVoucherLedgerItem)List.get(Integer.toString(i));
                    clsVoucherLedgerItem objItem=(clsVoucherLedgerItem)List.get(Integer.toString(i));                    
                    TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();                
                    
                    if(objItem.getAttribute("VOUCHER_NO").getString().equals("OPENING")){
                        main_code=objItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                    }
                    
                    if(objItem.getAttribute("VOUCHER_NO").getString().equals("CLOSING")){
                        //clsVoucherLedgerItem objItem1=(clsVoucherLedgerItem)List.get(Integer.toString(i+1));                    
                        //main_code=objItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                        //objRow.setValue("CODE", "MAIN CODE AND NAME :"+objItem.getAttribute("MAIN_ACCOUNT_CODE").getString()+"  "+clsPartyMaster.getAccountName(objItem.getAttribute("MAIN_ACCOUNT_CODE").getString(),""));        
                        //objData.AddRow(objRow);
                    }
                     
                    //if(data.IsRecordExist("SELECT MAIN_ACCOUNT_CODE FROM D_FIN_GL WHERE IS_SUBSIDAIRY!=1 AND APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE='"+main_code+"'",FinanceGlobal.FinURL)){
                        objRow.setValue("MAIN_CODE", main_code);
                    //}                    
                    //objRow.setValue("MAIN_CODE", objItem.getAttribute("MAIN_ACCOUNT_CODE").getString());
                    
                    //objRow.setValue("SUB_ACCOUNT_CODE","1");                    
                    if(objItem.getAttribute("VOUCHER_NO").getString().equals("OPENING") || objItem.getAttribute("VOUCHER_NO").getString().equals("CLOSING")){
                    objRow.setValue("VOUCHER_NO", objItem.getAttribute("VOUCHER_NO").getString());
                    objRow.setValue("LEGACY_NO", objItem.getAttribute("LEGACY_NO").getString());
                    objRow.setValue("VOUCHER_DATE", objItem.getAttribute("VOUCHER_DATE").getString());
                    objRow.setValue("BOOK_CODE", objItem.getAttribute("BOOK_CODE").getString());    
                    objRow.setValue("SUB_ACCOUNT_CODE", objItem.getAttribute("SUB_ACCOUNT_CODE").getString());
                    objRow.setValue("PARTY_CODE1", objItem.getAttribute("MAIN_ACCOUNT_CODE").getString());
                    //objRow.setValue("PARTY_CODE1", objItem.getAttribute("PARTY_CODE1").getString());
                    String Name=clsPartyMaster.getAccountName("",objItem.getAttribute("MAIN_ACCOUNT_CODE").getString());
                    if(Name.equals("")){
                        Name=clsPartyMaster.getAccountName(objItem.getAttribute("MAIN_ACCOUNT_CODE").getString(),"");
                    }
                    //if(Name.length()>22)
                    //{
                    //    Name=Name.substring(0,22);
                    //}
                    if(objItem.getAttribute("VOUCHER_NO").getString().equals("OPENING")){
                    objRow.setValue("CODE", "MAIN CODE AND NAME :"+main_code+"  "+clsPartyMaster.getAccountName(main_code,""));        
                    objRow.setValue("NAME", Name);    
                    }
                    else{
                    objRow.setValue("NAME", "");    
                    }  
                    objRow.setValue("CHEQUE_NO", objItem.getAttribute("CHEQUE_NO").getString());
                    objRow.setValue("CHEQUE_DATE", objItem.getAttribute("CHEQUE_DATE").getString());
                    objRow.setValue("INVOICE_NO", objItem.getAttribute("INVOICE_NO").getString());
                    objRow.setValue("INVOICE_DATE", objItem.getAttribute("INVOICE_DATE").getString());
                    if((txtMainAccountCode.getText().trim().equals("210027") || txtMainAccountCode.getText().trim().equals("210010") || txtMainAccountCode.getText().trim().equals("210072")) && (!objItem.getAttribute("INVOICE_NO").getString().equals("")) && (objItem.getAttribute("LINK_NO").getString().equals(""))) {
                        objRow.setValue("LINK_NO", EITLERP.Sales.clsSalesInvoice.getAgentAlphaSrNo(objItem.getAttribute("INVOICE_NO").getString(), EITLERPGLOBAL.formatDateDB(objItem.getAttribute("INVOICE_DATE").getString())));
                    } else {
                        if(objItem.getAttribute("LINK_NO").getString().length()>14) {
                            objRow.setValue("LINK_NO", objItem.getAttribute("LINK_NO").getString().substring(0,14));
                        } else {
                            objRow.setValue("LINK_NO", objItem.getAttribute("LINK_NO").getString());
                        }
                    }
                    objRow.setValue("PO_NO", objItem.getAttribute("PO_NO").getString());
                    objRow.setValue("PO_DATE", objItem.getAttribute("PO_DATE").getString());
                    objRow.setValue("GRN_NO", objItem.getAttribute("GRN_NO").getString());
                    objRow.setValue("GRN_DATE", objItem.getAttribute("GRN_DATE").getString());
                    objRow.setValue("REMARKS", objItem.getAttribute("REMARKS").getString());
                    String PartyName = clsPolicyMaster.getPartyName(EITLERPGLOBAL.gCompanyID,objItem.getAttribute("SUB_ACCOUNT_CODE").getString().trim(),txtMainAccountCode.getText().trim());
                    objRow.setValue("PARTY_NAME", PartyName);
                    if(i==List.size()) {
                        objRow.setValue("DEBIT_AMOUNT", lblDebitTotal.getText());
                        objRow.setValue("CREDIT_AMOUNT",lblCreditTotal.getText());
                    }
                    else {
                        objRow.setValue("DEBIT_AMOUNT", dFormat.format(objItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                        objRow.setValue("CREDIT_AMOUNT", dFormat.format(objItem.getAttribute("CREDIT_AMOUNT").getDouble()));
                    }
                    if(objItem.getAttribute("CLOSING_BALANCE").getDouble()<0) {
                        objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Cr");
                        if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("") && objItem.getAttribute("REMARKS").getString().equals("")){
                           objRow.setValue("CLOSING_BALANCE","");
                        }
                    }
                    //else if(objItem.getAttribute("CLOSING_BALANCE").getDouble()==0) {                        
                    //    objRow.setValue("CLOSING_BALANCE","");
                        //if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("")){
                        //   objRow.setValue("CLOSING_BALANCE","");
                        //}
                    //}
                    else{
                        objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Dr");
                        if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("") && objItem.getAttribute("REMARKS").getString().equals("")){
                           objRow.setValue("CLOSING_BALANCE","");
                        }
                    }                    
                    objRow.setValue("GROUP", objItem.getAttribute("GROUP").getString());                    
                    }
                    else{
                    objRow.setValue("CODE", "MAIN CODE AND NAME :"+main_code+"  "+clsPartyMaster.getAccountName(main_code,""));    
                    objRow.setValue("VOUCHER_NO", objItem.getAttribute("VOUCHER_NO").getString());
                    objRow.setValue("LEGACY_NO", objItem.getAttribute("LEGACY_NO").getString());
                    objRow.setValue("VOUCHER_DATE", objItem.getAttribute("VOUCHER_DATE").getString());
                    objRow.setValue("BOOK_CODE", objItem.getAttribute("BOOK_CODE").getString());    
                    objRow.setValue("SUB_ACCOUNT_CODE", objItem.getAttribute("SUB_ACCOUNT_CODE").getString());
                    objRow.setValue("PARTY_CODE1", objItem.getAttribute("PARTY_CODE1").getString());
                    String Name=clsPartyMaster.getAccountName("",objItem.getAttribute("PARTY_CODE1").getString());
                    if(Name.equals("")){
                        Name=clsPartyMaster.getAccountName(objItem.getAttribute("PARTY_CODE1").getString(),"");
                    }
                    if(Name.length()>22)
                    {
                        Name=Name.substring(0,22);
                    }
                    objRow.setValue("NAME", Name);                    
                    objRow.setValue("CHEQUE_NO", objItem.getAttribute("CHEQUE_NO").getString());
                    objRow.setValue("CHEQUE_DATE", objItem.getAttribute("CHEQUE_DATE").getString());
                    objRow.setValue("INVOICE_NO", objItem.getAttribute("INVOICE_NO").getString());
                    objRow.setValue("INVOICE_DATE", objItem.getAttribute("INVOICE_DATE").getString());
                    if((txtMainAccountCode.getText().trim().equals("210027") || txtMainAccountCode.getText().trim().equals("210010") || txtMainAccountCode.getText().trim().equals("210072")) && (!objItem.getAttribute("INVOICE_NO").getString().equals("")) && (objItem.getAttribute("LINK_NO").getString().equals(""))) {
                        objRow.setValue("LINK_NO", EITLERP.Sales.clsSalesInvoice.getAgentAlphaSrNo(objItem.getAttribute("INVOICE_NO").getString(), EITLERPGLOBAL.formatDateDB(objItem.getAttribute("INVOICE_DATE").getString())));
                    } else {
                        if(objItem.getAttribute("LINK_NO").getString().length()>14) {
                            objRow.setValue("LINK_NO", objItem.getAttribute("LINK_NO").getString().substring(0,14));
                        } else {
                            objRow.setValue("LINK_NO", objItem.getAttribute("LINK_NO").getString());
                        }
                    }
                    objRow.setValue("PO_NO", objItem.getAttribute("PO_NO").getString());
                    objRow.setValue("PO_DATE", objItem.getAttribute("PO_DATE").getString());
                    objRow.setValue("GRN_NO", objItem.getAttribute("GRN_NO").getString());
                    objRow.setValue("GRN_DATE", objItem.getAttribute("GRN_DATE").getString());
                    objRow.setValue("REMARKS", objItem.getAttribute("REMARKS").getString());
                    String PartyName = clsPolicyMaster.getPartyName(EITLERPGLOBAL.gCompanyID,objItem.getAttribute("SUB_ACCOUNT_CODE").getString().trim(),txtMainAccountCode.getText().trim());
                    objRow.setValue("PARTY_NAME", PartyName);
                    if(i==List.size()) {
                        objRow.setValue("DEBIT_AMOUNT", lblDebitTotal.getText());
                        objRow.setValue("CREDIT_AMOUNT",lblCreditTotal.getText());
                    }
                    else {
                        objRow.setValue("DEBIT_AMOUNT", dFormat.format(objItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                        objRow.setValue("CREDIT_AMOUNT", dFormat.format(objItem.getAttribute("CREDIT_AMOUNT").getDouble()));
                    }
                    if(objItem.getAttribute("CLOSING_BALANCE").getDouble()<0) {
                        objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Cr");
                        if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("") && objItem.getAttribute("REMARKS").getString().equals("")){
                           objRow.setValue("CLOSING_BALANCE","");
                        }
                    }
                    //else if(objItem.getAttribute("CLOSING_BALANCE").getDouble()==0) {                        
                    //    objRow.setValue("CLOSING_BALANCE","");
                        //if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("")){
                        //   objRow.setValue("CLOSING_BALANCE","");
                        //}
                    //}
                    else{
                        objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Dr");
                        if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("") && objItem.getAttribute("REMARKS").getString().equals("")){
                           objRow.setValue("CLOSING_BALANCE","");
                        }
                    }                    
                    objRow.setValue("GROUP", objItem.getAttribute("GROUP").getString());
                    }
                    objData.AddRow(objRow);                                                            
                }
            }
            catch(Exception e) {
                e.printStackTrace();
            }                                   
                    
            HashMap Parameters=new HashMap();
            //String AccName = data.getStringValueFromDB("SELECT ACCOUNT_NAME FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE='"+txtMainAccountCode.getText().trim()+"' ",FinanceGlobal.FinURL);
            //Parameters.put("MAIN_CODE",txtMainAccountCode.getText().trim() + " - " + AccName);
            
            //Parameters.put("PARTY_CODE", txtFromSubAccountCode.getText());
            //Parameters.put("PARTY_NAME",clsPartyMaster.getAccountName(txtMainAccountCode.getText(), txtFromSubAccountCode.getText()));
            Parameters.put("FROM_DATE", txtFromDate.getText());
            Parameters.put("TO_DATE", txtToDate.getText());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedYearlyNominal_green.rpt",Parameters,objData);    //for account green ledger copy                
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        updated=false;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        updated=true;
        if(!Validate()) {
            return;
        }
        PrintLedger(0);
        updated=false;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
              try{
            
            exp.fillData(Table,new File("/root/Desktop/Online Ledger.xls"));
            //exp.fillData(TableI,new File("C://ProductionProcess.xls"));
            exp.fillData(Table,new File("D://Online Ledger.xls"));
            JOptionPane.showMessageDialog(null, "Data saved at " +
            //"'C: \\ result.xls' successfully", "Message",
            "'/root/Desktop/Online Ledger.xls' successfully in Linux PC or 'D://Online Ledger.xls' successfully in Windows PC    ", "Message",
            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmdNewPrintLedgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewPrintLedgerActionPerformed
        // TODO add your handling code here:
        if(!Validate()) {
            return;
        }
        PrintLedger(1);
    }//GEN-LAST:event_cmdNewPrintLedgerActionPerformed

    private void cmdNewLedgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewLedgerActionPerformed
        // TODO add your handling code here:
        try {
            if(!Validate()) {
                return;
            }
            if(txtMainAccountCode.getText().trim().equals("")&&txtFromSubAccountCode.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null,"Please specify Main Code/Sub Code");
                return;
            }
            GenerateGridNew();
            Tab.setSelectedIndex(1);
        } catch(Exception e) {
        }
    }//GEN-LAST:event_cmdNewLedgerActionPerformed
    
    private void mnuAdvanceCreditSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdvanceCreditSummaryActionPerformed
        // TODO add your handling code here:
        if(txtMainAccountCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Enter Main Code.");
            return;
        }
        advReceiptSummary(txtMainAccountCode.getText().trim(),txtFromSubAccountCode.getText().trim(),EITLERPGLOBAL.getCurrentDateDB());
    }//GEN-LAST:event_mnuAdvanceCreditSummaryActionPerformed
    
    private void mnuAdvanceCreditDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdvanceCreditDetailActionPerformed
        // TODO add your handling code here:
        if(txtMainAccountCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Enter Main Code.");
            return;
        }
        advReceiptDetail(txtMainAccountCode.getText().trim(),txtFromSubAccountCode.getText().trim(),EITLERPGLOBAL.getCurrentDateDB());
    }//GEN-LAST:event_mnuAdvanceCreditDetailActionPerformed
    
    private void cmdAdvReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAdvReceiptActionPerformed
        // TODO add your handling code here:
        mnuSelectAdvAmountReport.show(this, cmdAdvReceipt.getX(), cmdAdvReceipt.getY()+cmdAdvReceipt.getHeight());
    }//GEN-LAST:event_cmdAdvReceiptActionPerformed
    
    private void cmdPrintSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintSummaryActionPerformed
        // TODO add your handling code here:
        if(!Validate()) {
            return;
        }
        PrintLedgerSummary();
    }//GEN-LAST:event_cmdPrintSummaryActionPerformed
    
    private void txtToSubAccountCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToSubAccountCodeFocusLost
        // TODO add your handling code here:
        lblToSubAccountName.setText(clsPartyMaster.getAccountName(txtMainAccountCode.getText(),txtToSubAccountCode.getText()));
    }//GEN-LAST:event_txtToSubAccountCodeFocusLost
    
    private void txtToSubAccountCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtToSubAccountCodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) {
            
            LOV aList=new LOV();
            
            aList.SQL="SELECT PARTY_CODE,PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 ORDER BY PARTY_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            aList.UseSpecifiedConn=true;
            aList.dbURL=FinanceGlobal.FinURL;
            
            if(aList.ShowLOV()) {
                txtToSubAccountCode.setText(aList.ReturnVal);
                lblToSubAccountName.setText(clsPartyMaster.getAccountName(txtMainAccountCode.getText(),aList.ReturnVal));
            }
            
        }
    }//GEN-LAST:event_txtToSubAccountCodeKeyPressed
    
    private void cmdSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSearchActionPerformed
        // TODO add your handling code here:
        searchWithin(' ');
    }//GEN-LAST:event_cmdSearchActionPerformed
    
    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // TODO add your handling code here:
        try {
            //searchWithin(evt.getKeyChar());
            
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_txtSearchKeyTyped
    
    private void txtBookCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBookCodeFocusLost
        // TODO add your handling code here:
        lblBookName.setText(clsBook.getBookName(EITLERPGLOBAL.gCompanyID, txtBookCode.getText()));
    }//GEN-LAST:event_txtBookCodeFocusLost
    
    private void txtBookCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookCodeKeyPressed
        // TODO add your handling code here:
        try {
            
            if(evt.getKeyCode()==112) {
                LOV aList=new LOV();
                
                aList.SQL="SELECT BOOK_CODE,BOOK_NAME FROM D_FIN_BOOK_MASTER ORDER BY BOOK_NAME";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=2;
                aList.UseSpecifiedConn=true;
                aList.dbURL=FinanceGlobal.FinURL;
                
                if(aList.ShowLOV()) {
                    txtBookCode.setText(aList.ReturnVal);
                    lblBookName.setText(clsBook.getBookName(EITLERPGLOBAL.gCompanyID, txtBookCode.getText()));
                }
                
            }
            
        }
        catch(Exception e) {
            
        }
        
    }//GEN-LAST:event_txtBookCodeKeyPressed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
        if(!Validate()) {
            return;
        }
        PrintLedger(0);
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdShowVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowVoucherActionPerformed
        // TODO add your handling code here:
        try {
            if(Table.getSelectedRow()>=0) {
                String DocNo=DataModel.getValueByVariable("VOUCHER_NO", Table.getSelectedRow());
                clsVoucher.OpenVoucher(DocNo, null);
                /*if(!DocNo.trim().equals("")) {
                    int CompanyID=UtilFunctions.CInt(DataModel.getValueByVariable("COMPANY_ID",Table.getSelectedRow()));
                    AppletFrame aFrame=new AppletFrame("Voucher");
                    aFrame.startAppletEx("EITLERP.Finance.frmVoucher","Voucher");
                    frmVoucher ObjDoc=(frmVoucher) aFrame.ObjApplet;
                    ObjDoc.FindEx(CompanyID,DocNo);
                }*/
            }
            
        } catch(Exception e) {
            
        }
        
    }//GEN-LAST:event_cmdShowVoucherActionPerformed
    
    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:
        try {
            if(!Validate()) {
                return;
            }
            if(txtMainAccountCode.getText().trim().equals("")&&txtFromSubAccountCode.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null,"Please specify Main Code/Sub Code");
                return;
            }
            GenerateGrid();
            Tab.setSelectedIndex(1);
        } catch(Exception e) {
        }
    }//GEN-LAST:event_cmdShowActionPerformed
    
    private void txtFromSubAccountCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromSubAccountCodeFocusLost
        // TODO add your handling code here:
        lblFromSubAccountName.setText(clsPartyMaster.getAccountName(txtMainAccountCode.getText(),txtFromSubAccountCode.getText()));
    }//GEN-LAST:event_txtFromSubAccountCodeFocusLost
    
    private void txtFromSubAccountCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFromSubAccountCodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) {
            
            LOV aList=new LOV();
            
            aList.SQL="SELECT PARTY_CODE,PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 ORDER BY PARTY_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            aList.UseSpecifiedConn=true;
            aList.dbURL=FinanceGlobal.FinURL;
            
            if(aList.ShowLOV()) {
                txtFromSubAccountCode.setText(aList.ReturnVal);
                lblFromSubAccountName.setText(clsPartyMaster.getAccountName(txtMainAccountCode.getText(),aList.ReturnVal));
            }
            
        }
        
    }//GEN-LAST:event_txtFromSubAccountCodeKeyPressed
    
    private void txtMainAccountCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMainAccountCodeFocusLost
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txtMainAccountCodeFocusLost
    
    private void txtMainAccountCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMainAccountCodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==112) {
            LOV aList=new LOV();
            
            aList.SQL="SELECT MAIN_ACCOUNT_CODE,ACCOUNT_NAME FROM D_FIN_GL WHERE  APPROVED=1 ORDER BY ACCOUNT_NAME";
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            aList.UseSpecifiedConn=true;
            aList.dbURL=FinanceGlobal.FinURL;
            
            if(aList.ShowLOV()) {
                txtMainAccountCode.setText(aList.ReturnVal);
            }
        }
    }//GEN-LAST:event_txtMainAccountCodeKeyPressed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JTable Table;
    private javax.swing.JCheckBox chkApproved;
    private javax.swing.JCheckBox chkLegacy;
    private javax.swing.JButton cmdAdvReceipt;
    private javax.swing.JButton cmdNewLedger;
    private javax.swing.JButton cmdNewPrintLedger;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdPrintSummary;
    private javax.swing.JButton cmdSearch;
    private javax.swing.JButton cmdShow;
    private javax.swing.JButton cmdShowVoucher;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblCreditTotal;
    private javax.swing.JLabel lblDebitTotal;
    private javax.swing.JLabel lblFromSubAccountName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblToSubAccountName;
    private javax.swing.JMenuItem mnuAdvanceCreditDetail;
    private javax.swing.JMenuItem mnuAdvanceCreditSummary;
    private javax.swing.JPopupMenu mnuSelectAdvAmountReport;
    private javax.swing.JTextField txtBookCode;
    private javax.swing.JTextField txtFromAmount;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtFromSubAccountCode;
    private javax.swing.JTextField txtMainAccountCode;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtToAmount;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtToSubAccountCode;
    // End of variables declaration//GEN-END:variables
    
    private void FormatGrid() {
         Updating=true;
        try {
            
            EITLTableCellRenderer cellRender=new EITLTableCellRenderer();
            cellRender.setHorizontalAlignment(JLabel.RIGHT);
            
            DataModel=new EITLTableModel();
            Table.removeAll();
            
            Table.setModel(DataModel);
            TableColumnModel ColModel=Table.getColumnModel();
            Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Date"); //0 - Read Only
            DataModel.addColumn("Voucher No."); //1
            DataModel.addColumn("Legacy No"); //1
            DataModel.addColumn("Main Code"); //2 //Read Only
            DataModel.addColumn("Sub Code");//3
            DataModel.addColumn("A/c Name");//4
            DataModel.addColumn("Cheque No."); //5
            DataModel.addColumn("Debit Amount");//6
            DataModel.addColumn("Credit Amount");//7
            DataModel.addColumn("Closing"); //8
            DataModel.addColumn("Link No"); //9
            DataModel.addColumn("Invoice No."); //10
            DataModel.addColumn("Invoice Date"); //11
            DataModel.addColumn("GRN No."); //12
            DataModel.addColumn("GRN Date"); //13
            DataModel.addColumn("PO No."); //14
            DataModel.addColumn("PO Date"); //15
            DataModel.addColumn("Due Date"); //16
            DataModel.addColumn("Company Name"); //17
            DataModel.addColumn("Company ID"); //18
            DataModel.addColumn("Party Name"); //19
            
            DataModel.SetVariable(0,"VOUCHER_DATE"); //0
            DataModel.SetVariable(1,"VOUCHER_NO"); //1
            DataModel.SetVariable(2,"LEGACY_NO"); //1
            DataModel.SetVariable(3,"MAIN_ACCOUNT_CODE"); //2
            DataModel.SetVariable(4,"SUB_ACCOUNT_CODE"); //3
            DataModel.SetVariable(5,"ACCOUNT_NAME"); //4
            DataModel.SetVariable(6,"CHEQUE_NO"); //5
            DataModel.SetVariable(7,"DEBIT_AMOUNT"); //6
            DataModel.SetVariable(8,"CREDIT_AMOUNT"); //7
            DataModel.SetVariable(9,"CLOSING_BALANCE"); //8
            DataModel.SetVariable(10,"LINK_NO"); //9
            DataModel.SetVariable(11,"INVOICE_NO"); //10
            DataModel.SetVariable(12,"INVOICE_DATE"); //11
            DataModel.SetVariable(13,"GRN_NO"); //12
            DataModel.SetVariable(14,"GRN_DATE"); //13
            DataModel.SetVariable(15,"PO_NO"); //14
            DataModel.SetVariable(16,"PO_DATE"); //15
            DataModel.SetVariable(17,"DUE_DATE"); //16
            DataModel.SetVariable(18,"COMPANY_NAME"); //17
            DataModel.SetVariable(19,"COMPANY_ID"); //18
            DataModel.SetVariable(20,"PARTY_NAME"); //19
            
            DataModel.TableReadOnly(false);
            
            Table.getColumnModel().getColumn(7).setCellRenderer(cellRender);
            Table.getColumnModel().getColumn(8).setCellRenderer(cellRender);
            Table.getColumnModel().getColumn(9).setCellRenderer(cellRender);
            
           // Table.getColumnModel().getColumn(4).setMinWidth(10);
           // Table.getColumnModel().getColumn(4).setMaxWidth(10);
            //Table.getColumnModel().getColumn(20).setMinWidth(40);
            //Table.getColumnModel().getColumn(20).setMaxWidth(40);
            
            
            RowFormat=new EITLTableCellRenderer();
            
            for(int j=0;j<Table.getColumnCount();j++) {
                Table.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
            
            CellAlign.setHorizontalAlignment(JLabel.RIGHT);
            
            Table.getColumnModel().getColumn(DataModel.getColFromVariable("DEBIT_AMOUNT")).setCellRenderer(CellAlign);
            Table.getColumnModel().getColumn(DataModel.getColFromVariable("CREDIT_AMOUNT")).setCellRenderer(CellAlign);
            Table.getColumnModel().getColumn(DataModel.getColFromVariable("PO_NO")).setCellRenderer(POColor);
            
            
            //------- Install Table List Selection Listener ------//
            Table.getColumnModel().getSelectionModel().addListSelectionListener(
            new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent e) {
                    int last=Table.getSelectedColumn();
                    String strVar=DataModel.getVariable(last);
                    
                    
                    //=============== Cell Editing Routine =======================//
                    try {
                        cellLastValue=(String)Table.getValueAt(Table.getSelectedRow(),Table.getSelectedColumn());
                        
                        Table.editCellAt(Table.getSelectedRow(),Table.getSelectedColumn());
                        if(Table.getEditorComponent() instanceof JTextComponent) {
                            ((JTextComponent)Table.getEditorComponent()).selectAll();
                        }
                    }
                    catch(Exception cell){}
                    //============= Cell Editing Routine Ended =================//
                }
            }
            );
                 
            //----- Install Table Model Event Listener -------//
            Table.getModel().addTableModelListener(new TableModelListener() {
                public void tableChanged(TableModelEvent e) {
                    if (e.getType() == TableModelEvent.UPDATE) {
                        int col = e.getColumn();
                        
                        //=========== Cell Update Prevention Check ===========//
                        String curValue=(String)Table.getValueAt(Table.getSelectedRow(), e.getColumn());
                        if(curValue.equals(cellLastValue)) {
                            return;
                        }
                        //====================================================//
                    }
                }
            });
            
        } catch(Exception e) {
        }
         Updating=false;
    }
    
    private void GenerateGrid() {
        try {
            POColor.removeBackColors();
            
            double CreditTotal=0;
            double DebitTotal=0;
            
            String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
            String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
            String LastVoucherNo="";
            String VoucherNo="";
            String Remarks="";
            HashMap List;
            FormatGrid();
            String MainAccountCode = txtMainAccountCode.getText().trim();
            
            if(chkLegacy.isSelected()) {
                List=clsAccount.getLedgerLegacy(txtMainAccountCode.getText(),txtFromSubAccountCode.getText(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
            }
            else {
                if((txtFromSubAccountCode.getText().trim().equals("") && txtToSubAccountCode.getText().trim().equals("")) || (!txtFromSubAccountCode.getText().trim().equals("") && txtToSubAccountCode.getText().trim().equals("")) || (txtFromSubAccountCode.getText().trim().equals("") && !txtToSubAccountCode.getText().trim().equals(""))) {
                    String SubCode = "";
                    if(!txtFromSubAccountCode.getText().trim().equals("")) {
                        SubCode = txtFromSubAccountCode.getText().trim();
                    }
                    if(!txtToSubAccountCode.getText().trim().equals("")) {
                        SubCode = txtToSubAccountCode.getText().trim();
                    }
                    //List=clsAccount.getLedger(txtMainAccountCode.getText(),txtFromSubAccountCode.getText(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
                    List=clsAccount.getLedger(txtMainAccountCode.getText(),SubCode, FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
                } else {
                    List=clsAccount.getLedger(txtMainAccountCode.getText(),txtFromSubAccountCode.getText(),txtToSubAccountCode.getText(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
                }
            }
            
            
            for(int i=1;i<=(List.size()-1);i++) {
                //clsVoucher objItem=(clsVoucher)List.get(Integer.toString(i));
                clsVoucherLedgerItem objItem=(clsVoucherLedgerItem)List.get(Integer.toString(i));
                
                VoucherNo=objItem.getAttribute("VOUCHER_NO").getString();
                
                if((!VoucherNo.equals(LastVoucherNo))) {
                    
                    if(!Remarks.trim().equals("")) {
                        
                        Object[] rowData=new Object[10];
                        rowData[0]="";
                        rowData[1]="";
                        rowData[2]="";
                        rowData[3]="";
                        rowData[4]="";
                        rowData[5]=Remarks;
                        rowData[6]="";
                        rowData[7]="";
                        rowData[8]="";
                        
                        DataModel.addRow(rowData);
                    }
                    
                    //Add Blank Row
                    Object[] rowData=new Object[1];
                    DataModel.addRow(rowData);
                }
                
                Remarks=objItem.getAttribute("REMARKS").getString();
                
                
                Object[] rowData=new Object[21];
                rowData[0]=objItem.getAttribute("VOUCHER_DATE").getString();
                rowData[1]=objItem.getAttribute("VOUCHER_NO").getString();
                rowData[2]=objItem.getAttribute("LEGACY_NO").getString();
                rowData[3]=objItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                rowData[4]=objItem.getAttribute("SUB_ACCOUNT_CODE").getString();
                rowData[5]=objItem.getAttribute("ACCOUNT_NAME").getString();
                rowData[6]=objItem.getAttribute("CHEQUE_NO").getString();
                if(objItem.getAttribute("DEBIT_AMOUNT").getDouble()==0) {
                    rowData[7]="";
                } else {
                    rowData[7]=dFormat.format(objItem.getAttribute("DEBIT_AMOUNT").getDouble());
                    DebitTotal+=objItem.getAttribute("DEBIT_AMOUNT").getDouble();
                }
                
                if(objItem.getAttribute("CREDIT_AMOUNT").getDouble()==0) {
                    rowData[8]="";
                } else {
                    rowData[8]=dFormat.format(objItem.getAttribute("CREDIT_AMOUNT").getDouble());
                    CreditTotal+=objItem.getAttribute("CREDIT_AMOUNT").getDouble();
                }
                
                if(objItem.getAttribute("CLOSING_BALANCE").getDouble()<0) {
                    rowData[9]=dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Cr";
                }
                else {
                    rowData[9]=dFormat.format(objItem.getAttribute("CLOSING_BALANCE").getDouble())+" Dr";
                }
                if((MainAccountCode.equals("210027") || MainAccountCode.equals("210010") || MainAccountCode.equals("210072")) && (!objItem.getAttribute("INVOICE_NO").getString().equals("")) && (objItem.getAttribute("LINK_NO").getString().equals(""))) {
                    rowData[10]=EITLERP.Sales.clsSalesInvoice.getAgentAlphaSrNo(objItem.getAttribute("INVOICE_NO").getString(), EITLERPGLOBAL.formatDateDB(objItem.getAttribute("INVOICE_DATE").getString()));
                } else {
                    rowData[10]=objItem.getAttribute("LINK_NO").getString();
                }
                
                rowData[11]=objItem.getAttribute("INVOICE_NO").getString();
                rowData[12]=objItem.getAttribute("INVOICE_DATE").getString();
                rowData[13]=objItem.getAttribute("GRN_NO").getString();
                rowData[14]=objItem.getAttribute("GRN_DATE").getString();
                rowData[15]=objItem.getAttribute("PO_NO").getString();
                rowData[16]=objItem.getAttribute("PO_DATE").getString();
                rowData[17]=objItem.getAttribute("DUE_DATE").getString();
                rowData[18]=clsCompany.getCityName(objItem.getAttribute("COMPANY_ID").getInt());
                rowData[19]=Integer.toString(objItem.getAttribute("COMPANY_ID").getInt());
                String PartyName = clsPolicyMaster.getPartyName(EITLERPGLOBAL.gCompanyID,objItem.getAttribute("SUB_ACCOUNT_CODE").getString().trim(),txtMainAccountCode.getText().trim());
                rowData[20]=PartyName;
                
                DataModel.addRow(rowData);
                
                if(objItem.getAttribute("EXECUTED_PO").getInt()==1) {
                    POColor.setBackColor(Table.getRowCount()-1, DataModel.getColFromVariable("PO_NO"), Color.GREEN);
                } /*else {
                    POColor.setBackColor(Table.getRowCount()-1, DataModel.getColFromVariable("PO_NO"), Color.WHITE);
                }*/
                
                if((!VoucherNo.equals(LastVoucherNo))) {
                    
                }
                
                LastVoucherNo=VoucherNo;
            }
            
            DataModel.setValueByVariable("CREDIT_AMOUNT",dFormat.format(CreditTotal),Table.getRowCount()-1);
            DataModel.setValueByVariable("DEBIT_AMOUNT",dFormat.format(DebitTotal),Table.getRowCount()-1);
            lblCreditTotal.setText(dFormat.format(CreditTotal));
            lblDebitTotal.setText(dFormat.format(DebitTotal));
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }

       
    private void GenerateGridNew() {
        try {
            POColor.removeBackColors();
            
            double CreditTotal=0;
            double DebitTotal=0;
            
            String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
            String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
            String LastVoucherNo="";
            String VoucherNo="";
            String Remarks="";
            HashMap List;
            FormatGridNew();
            String MainAccountCode = txtMainAccountCode.getText().trim();
            String SubCode = txtFromSubAccountCode.getText().trim();
            List=clsAccount.getTallyLedger(txtMainAccountCode.getText(),SubCode, FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
            for(int i=1;i<=(List.size()-1);i++) {
                //clsVoucher objItem=(clsVoucher)List.get(Integer.toString(i));
                clsVoucherLedgerItem objItem=(clsVoucherLedgerItem)List.get(Integer.toString(i));
                
                VoucherNo=objItem.getAttribute("VOUCHER_NO").getString();
                
                if((!VoucherNo.equals(LastVoucherNo))) {
                    
                    if(!Remarks.trim().equals("")) {
                        
                        Object[] rowData=new Object[9];
                        rowData[0]="";
                        rowData[1]="";
                        rowData[2]="";
                        rowData[3]=Remarks;
                        rowData[4]="";
                        rowData[5]="";
                        rowData[6]="";
                        rowData[7]="";
                        rowData[8]="";
                        
                        DataModel.addRow(rowData);
                    }
                    
                    //Add Blank Row
                    Object[] rowData=new Object[1];
                    DataModel.addRow(rowData);
                }
                
                Remarks=objItem.getAttribute("REMARKS").getString();
                
                
                Object[] rowData=new Object[14];
                rowData[0]=objItem.getAttribute("VOUCHER_DATE").getString();
                rowData[1]=objItem.getAttribute("VOUCHER_NO").getString();
                rowData[2]=objItem.getAttribute("LEGACY_NO").getString();
                //rowData[2]=objItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                //rowData[3]=objItem.getAttribute("SUB_ACCOUNT_CODE").getString();
                //rowData[4]=objItem.getAttribute("ACCOUNT_NAME").getString();
                rowData[3]=objItem.getAttribute("CHEQUE_NO").getString();
                if(objItem.getAttribute("DEBIT_AMOUNT").getDouble()==0) {
                    rowData[4]="";
                } else {
                    rowData[4]=dFormat.format(objItem.getAttribute("DEBIT_AMOUNT").getDouble());
                    DebitTotal+=objItem.getAttribute("DEBIT_AMOUNT").getDouble();
                }
                
                if(objItem.getAttribute("CREDIT_AMOUNT").getDouble()==0) {
                    rowData[5]="";
                } else {
                    rowData[5]=dFormat.format(objItem.getAttribute("CREDIT_AMOUNT").getDouble());
                    CreditTotal+=objItem.getAttribute("CREDIT_AMOUNT").getDouble();
                }
                
                if(objItem.getAttribute("CLOSING_BALANCE").getDouble()<0) {
                    rowData[6]=dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Cr";
                }
                else {
                    rowData[6]=dFormat.format(objItem.getAttribute("CLOSING_BALANCE").getDouble())+" Dr";
                }
                if((MainAccountCode.equals("210027") || MainAccountCode.equals("210010") || MainAccountCode.equals("210072")) && (!objItem.getAttribute("INVOICE_NO").getString().equals("")) && (objItem.getAttribute("LINK_NO").getString().equals(""))) {
                    rowData[7]=EITLERP.Sales.clsSalesInvoice.getAgentAlphaSrNo(objItem.getAttribute("INVOICE_NO").getString(), EITLERPGLOBAL.formatDateDB(objItem.getAttribute("INVOICE_DATE").getString()));
                } else {
                    rowData[7]=objItem.getAttribute("LINK_NO").getString();
                }
                
                rowData[8]=objItem.getAttribute("INVOICE_NO").getString();
                rowData[9]=objItem.getAttribute("INVOICE_DATE").getString();
                rowData[10]=objItem.getAttribute("GRN_NO").getString();
                rowData[11]=objItem.getAttribute("GRN_DATE").getString();
                rowData[12]=objItem.getAttribute("PO_NO").getString();
                rowData[13]=objItem.getAttribute("PO_DATE").getString();
                //rowData[16]=objItem.getAttribute("DUE_DATE").getString();
                //rowData[17]=clsCompany.getCityName(objItem.getAttribute("COMPANY_ID").getInt());
                //rowData[18]=Integer.toString(objItem.getAttribute("COMPANY_ID").getInt());
                //String PartyName = clsPolicyMaster.getPartyName(EITLERPGLOBAL.gCompanyID,objItem.getAttribute("SUB_ACCOUNT_CODE").getString().trim(),txtMainAccountCode.getText().trim());
                //rowData[19]=PartyName;
                
                DataModel.addRow(rowData);
                
                if(objItem.getAttribute("EXECUTED_PO").getInt()==1) {
                    POColor.setBackColor(Table.getRowCount()-1, DataModel.getColFromVariable("PO_NO"), Color.GREEN);
                }
                
                if((!VoucherNo.equals(LastVoucherNo))) {
                    
                }
                
                LastVoucherNo=VoucherNo;
            }
            
            DataModel.setValueByVariable("CREDIT_AMOUNT",dFormat.format(CreditTotal),Table.getRowCount()-1);
            DataModel.setValueByVariable("DEBIT_AMOUNT",dFormat.format(DebitTotal),Table.getRowCount()-1);
            lblCreditTotal.setText(dFormat.format(CreditTotal));
            lblDebitTotal.setText(dFormat.format(DebitTotal));
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void FormatGridNew() {
        Updating=true;
        try {
            
            EITLTableCellRenderer cellRender=new EITLTableCellRenderer();
            cellRender.setHorizontalAlignment(JLabel.RIGHT);
            
            DataModel=new EITLTableModel();
            Table.removeAll();
            
            Table.setModel(DataModel);
            TableColumnModel ColModel=Table.getColumnModel();
            Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Date"); //0 - Read Only
            DataModel.addColumn("Voucher No."); //1
            DataModel.addColumn("Legacy No."); //1
            DataModel.addColumn("Cheque No."); //5
            DataModel.addColumn("Debit Amount");//6
            DataModel.addColumn("Credit Amount");//7
            DataModel.addColumn("Closing"); //8
            DataModel.addColumn("Link No"); //9
            DataModel.addColumn("Invoice No."); //10
            DataModel.addColumn("Invoice Date"); //11
            DataModel.addColumn("GRN No."); //12
            DataModel.addColumn("GRN Date"); //13
            DataModel.addColumn("PO No."); //14
            DataModel.addColumn("PO Date"); //15
            //DataModel.addColumn("Due Date"); //16
            //DataModel.addColumn("Company Name"); //17
            //DataModel.addColumn("Company ID"); //18
            //DataModel.addColumn("Party Name"); //19
            
            DataModel.SetVariable(0,"VOUCHER_DATE"); //0
            DataModel.SetVariable(1,"VOUCHER_NO"); //1
            DataModel.SetVariable(2,"LEGACY_NO"); //1
            //DataModel.SetVariable(2,"MAIN_ACCOUNT_CODE"); //2
            //DataModel.SetVariable(3,"SUB_ACCOUNT_CODE"); //3
            //DataModel.SetVariable(4,"ACCOUNT_NAME"); //4
            DataModel.SetVariable(3,"CHEQUE_NO"); //5
            DataModel.SetVariable(4,"DEBIT_AMOUNT"); //6
            DataModel.SetVariable(5,"CREDIT_AMOUNT"); //7
            DataModel.SetVariable(6,"CLOSING_BALANCE"); //8
            DataModel.SetVariable(7,"LINK_NO"); //9
            DataModel.SetVariable(8,"INVOICE_NO"); //10
            DataModel.SetVariable(9,"INVOICE_DATE"); //11
            DataModel.SetVariable(10,"GRN_NO"); //12
            DataModel.SetVariable(11,"GRN_DATE"); //13
            DataModel.SetVariable(12,"PO_NO"); //14
            DataModel.SetVariable(13,"PO_DATE"); //15
            //DataModel.SetVariable(16,"DUE_DATE"); //16
            //DataModel.SetVariable(17,"COMPANY_NAME"); //17
            //DataModel.SetVariable(18,"COMPANY_ID"); //18
            //DataModel.SetVariable(19,"PARTY_NAME"); //19
            
            DataModel.TableReadOnly(false);
            
            Table.getColumnModel().getColumn(4).setCellRenderer(cellRender);
            Table.getColumnModel().getColumn(5).setCellRenderer(cellRender);
            Table.getColumnModel().getColumn(6).setCellRenderer(cellRender);
            
            //Table.getColumnModel().getColumn(3).setMinWidth(0);
            //Table.getColumnModel().getColumn(3).setMaxWidth(0);
            //Table.getColumnModel().getColumn(19).setMinWidth(0);
            //Table.getColumnModel().getColumn(19).setMaxWidth(0);
            
            
            RowFormat=new EITLTableCellRenderer();
            
            for(int j=0;j<Table.getColumnCount();j++) {
                Table.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
            }
            
            
            CellAlign.setHorizontalAlignment(JLabel.RIGHT);
            
            Table.getColumnModel().getColumn(DataModel.getColFromVariable("DEBIT_AMOUNT")).setCellRenderer(CellAlign);
            Table.getColumnModel().getColumn(DataModel.getColFromVariable("CREDIT_AMOUNT")).setCellRenderer(CellAlign);
            Table.getColumnModel().getColumn(DataModel.getColFromVariable("PO_NO")).setCellRenderer(POColor);
            
            
            //------- Install Table List Selection Listener ------//
            Table.getColumnModel().getSelectionModel().addListSelectionListener(
            new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent e) {
                    int last=Table.getSelectedColumn();
                    String strVar=DataModel.getVariable(last);
                    
                    
                    //=============== Cell Editing Routine =======================//
                    try {
                        cellLastValue=(String)Table.getValueAt(Table.getSelectedRow(),Table.getSelectedColumn());
                        
                        Table.editCellAt(Table.getSelectedRow(),Table.getSelectedColumn());
                        if(Table.getEditorComponent() instanceof JTextComponent) {
                            ((JTextComponent)Table.getEditorComponent()).selectAll();
                        }
                    }
                    catch(Exception cell){}
                    //============= Cell Editing Routine Ended =================//
                }
            });
            
            //----- Install Table Model Event Listener -------//
            Table.getModel().addTableModelListener(new TableModelListener() {
                public void tableChanged(TableModelEvent e) {
                    if (e.getType() == TableModelEvent.UPDATE) {
                        int col = e.getColumn();
                        
                        //=========== Cell Update Prevention Check ===========//
                        String curValue=(String)Table.getValueAt(Table.getSelectedRow(), e.getColumn());
                        if(curValue.equals(cellLastValue)) {
                            return;
                        }
                        //====================================================//
                    }
                }
            });
            
        } catch(Exception e) {
        }
        Updating=false;
    }
   
    
    private void PrintLedger(int Type) {
        try {
            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("LEGACY_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("BOOK_CODE");
            objData.AddColumn("SUB_ACCOUNT_CODE");
            objData.AddColumn("CHEQUE_NO");
            objData.AddColumn("CHEQUE_DATE");
            objData.AddColumn("INVOICE_NO");
            objData.AddColumn("INVOICE_DATE");
            objData.AddColumn("LINK_NO");
            objData.AddColumn("PO_NO");
            objData.AddColumn("PO_DATE");
            objData.AddColumn("GRN_NO");
            objData.AddColumn("GRN_DATE");
            objData.AddColumn("REMARKS");
            objData.AddColumn("DEBIT_AMOUNT");
            objData.AddColumn("CREDIT_AMOUNT");
            objData.AddColumn("GROUP");
            objData.AddColumn("CLOSING_BALANCE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("PARTY_CODE1");
            objData.AddColumn("NAME");
            
            
            String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
            String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
            
            HashMap List = new HashMap();
            if(((txtFromSubAccountCode.getText().trim().equals("") && txtToSubAccountCode.getText().trim().equals("")) || (!txtFromSubAccountCode.getText().trim().equals("") && txtToSubAccountCode.getText().trim().equals("")) || (txtFromSubAccountCode.getText().trim().equals("") && !txtToSubAccountCode.getText().trim().equals(""))) && clsAccount.IsSubsidairyAccount(txtMainAccountCode.getText().trim())) {
                String SubCode = "";
                if(!txtFromSubAccountCode.getText().trim().equals("")) {
                    SubCode = txtFromSubAccountCode.getText().trim();
                }
                if(!txtToSubAccountCode.getText().trim().equals("")) {
                    SubCode = txtToSubAccountCode.getText().trim();
                }
                if(Type==0) {
                    List=clsAccount.getMyLedger(txtMainAccountCode.getText(),txtFromSubAccountCode.getText().trim(),txtToSubAccountCode.getText().trim(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
                } else {
                    List=clsAccount.getMyLedgerNew(txtMainAccountCode.getText(),txtFromSubAccountCode.getText().trim(),txtToSubAccountCode.getText().trim(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
                }
            } else {
                List=clsAccount.getLedger(txtMainAccountCode.getText(),txtFromSubAccountCode.getText(),txtToSubAccountCode.getText(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
            }
            // try placed by hardik
            try{
                for(int i=1;i<=List.size();i++) {
                    
                    clsVoucherLedgerItem objItem=(clsVoucherLedgerItem)List.get(Integer.toString(i));
                    TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                    objRow.setValue("VOUCHER_NO", objItem.getAttribute("VOUCHER_NO").getString());
                    objRow.setValue("LEGACY_NO", objItem.getAttribute("LEGACY_NO").getString());
                    objRow.setValue("VOUCHER_DATE", objItem.getAttribute("VOUCHER_DATE").getString());
                    objRow.setValue("BOOK_CODE", objItem.getAttribute("BOOK_CODE").getString());
                    //objRow.setValue("SUB_ACCOUNT_CODE","1");
                    objRow.setValue("SUB_ACCOUNT_CODE", objItem.getAttribute("SUB_ACCOUNT_CODE").getString());
                    objRow.setValue("PARTY_CODE1", objItem.getAttribute("PARTY_CODE1").getString());
                    String Name=clsPartyMaster.getAccountName("",objItem.getAttribute("PARTY_CODE1").getString());
                    if(Name.equals("")){
                        Name=clsPartyMaster.getAccountName(objItem.getAttribute("PARTY_CODE1").getString(),"");
                    }
                    if(Name.length()>22)
                    {
                        Name=Name.substring(0,22);
                    }
                    objRow.setValue("NAME", Name);
                    objRow.setValue("CHEQUE_NO", objItem.getAttribute("CHEQUE_NO").getString());
                    objRow.setValue("CHEQUE_DATE", objItem.getAttribute("CHEQUE_DATE").getString());
                    objRow.setValue("INVOICE_NO", objItem.getAttribute("INVOICE_NO").getString());
                    objRow.setValue("INVOICE_DATE", objItem.getAttribute("INVOICE_DATE").getString());
                    if((txtMainAccountCode.getText().trim().equals("210027") || txtMainAccountCode.getText().trim().equals("210010") || txtMainAccountCode.getText().trim().equals("210072")) && (!objItem.getAttribute("INVOICE_NO").getString().equals("")) && (objItem.getAttribute("LINK_NO").getString().equals(""))) {
                        objRow.setValue("LINK_NO", EITLERP.Sales.clsSalesInvoice.getAgentAlphaSrNo(objItem.getAttribute("INVOICE_NO").getString(), EITLERPGLOBAL.formatDateDB(objItem.getAttribute("INVOICE_DATE").getString())));
                    } else {
                        if(objItem.getAttribute("LINK_NO").getString().length()>14) {
                            objRow.setValue("LINK_NO", objItem.getAttribute("LINK_NO").getString().substring(0,14));
                        } else {
                            objRow.setValue("LINK_NO", objItem.getAttribute("LINK_NO").getString());
                        }
                    }
                    objRow.setValue("PO_NO", objItem.getAttribute("PO_NO").getString());
                    objRow.setValue("PO_DATE", objItem.getAttribute("PO_DATE").getString());
                    objRow.setValue("GRN_NO", objItem.getAttribute("GRN_NO").getString());
                    objRow.setValue("GRN_DATE", objItem.getAttribute("GRN_DATE").getString());
                    objRow.setValue("REMARKS", objItem.getAttribute("REMARKS").getString());
                    String PartyName = clsPolicyMaster.getPartyName(EITLERPGLOBAL.gCompanyID,objItem.getAttribute("SUB_ACCOUNT_CODE").getString().trim(),txtMainAccountCode.getText().trim());
                    objRow.setValue("PARTY_NAME", PartyName);
                    if(i==List.size()) {
                        objRow.setValue("DEBIT_AMOUNT", lblDebitTotal.getText());
                        objRow.setValue("CREDIT_AMOUNT",lblCreditTotal.getText());
                    }
                    else {
                        objRow.setValue("DEBIT_AMOUNT", dFormat.format(objItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                        objRow.setValue("CREDIT_AMOUNT", dFormat.format(objItem.getAttribute("CREDIT_AMOUNT").getDouble()));
                    }
                    if(objItem.getAttribute("CLOSING_BALANCE").getDouble()<0) {
                        objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Cr");
                        if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("") && objItem.getAttribute("REMARKS").getString().equals("")){
                           objRow.setValue("CLOSING_BALANCE","");
                        }
                    }
                    //else if(objItem.getAttribute("CLOSING_BALANCE").getDouble()==0) {                        
                    //    objRow.setValue("CLOSING_BALANCE","");
                        //if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("")){
                        //   objRow.setValue("CLOSING_BALANCE","");
                        //}
                    //}
                    else{
                        objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Dr");
                        if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("") && objItem.getAttribute("REMARKS").getString().equals("")){
                           objRow.setValue("CLOSING_BALANCE","");
                        }
                    }
                    
                    objRow.setValue("GROUP", objItem.getAttribute("GROUP").getString());
                    objData.AddRow(objRow);
                }
            }
            catch(Exception e) {
                e.printStackTrace();
            }
            
            HashMap Parameters=new HashMap();
            String AccName = data.getStringValueFromDB("SELECT ACCOUNT_NAME FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE='"+txtMainAccountCode.getText().trim()+"' ",FinanceGlobal.FinURL);
            Parameters.put("MAIN_CODE",txtMainAccountCode.getText().trim() + " - " + AccName);
            
            Parameters.put("PARTY_CODE", txtFromSubAccountCode.getText());
            Parameters.put("PARTY_NAME",clsPartyMaster.getAccountName(txtMainAccountCode.getText(), txtFromSubAccountCode.getText()));
            Parameters.put("FROM_DATE", txtFromDate.getText());
            Parameters.put("TO_DATE", txtToDate.getText());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            if(updated){
                if(txtFromSubAccountCode.getText().trim().equals("") && txtToSubAccountCode.getText().trim().equals("")){
                    //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedNominal.rpt",Parameters,objData);    
                    objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedNominal_green.rpt",Parameters,objData);    //for account green ledger copy
                    //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedNominal_update.rpt",Parameters,objData);     
                    //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedNominal_update_green.rpt",Parameters,objData);   //for account green ledger copy  
                }
                else{
                  objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdated.rpt",Parameters,objData);      
                }
             
            }else{
             objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedger.rpt",Parameters,objData);   
            }
                
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void PrintLedger(int Type,String maincode) {
        try {
            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("LEGACY_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("BOOK_CODE");
            objData.AddColumn("SUB_ACCOUNT_CODE");
            objData.AddColumn("CHEQUE_NO");
            objData.AddColumn("CHEQUE_DATE");
            objData.AddColumn("INVOICE_NO");
            objData.AddColumn("INVOICE_DATE");
            objData.AddColumn("LINK_NO");
            objData.AddColumn("PO_NO");
            objData.AddColumn("PO_DATE");
            objData.AddColumn("GRN_NO");
            objData.AddColumn("GRN_DATE");
            objData.AddColumn("REMARKS");
            objData.AddColumn("DEBIT_AMOUNT");
            objData.AddColumn("CREDIT_AMOUNT");
            objData.AddColumn("GROUP");
            objData.AddColumn("CLOSING_BALANCE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("PARTY_CODE1");
            objData.AddColumn("NAME");
            
            
            String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
            String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
            
            HashMap List = new HashMap();
            if(((txtFromSubAccountCode.getText().trim().equals("") && txtToSubAccountCode.getText().trim().equals("")) || (!txtFromSubAccountCode.getText().trim().equals("") && txtToSubAccountCode.getText().trim().equals("")) || (txtFromSubAccountCode.getText().trim().equals("") && !txtToSubAccountCode.getText().trim().equals(""))) && clsAccount.IsSubsidairyAccount(txtMainAccountCode.getText().trim())) {
                String SubCode = "";
                if(!txtFromSubAccountCode.getText().trim().equals("")) {
                    SubCode = txtFromSubAccountCode.getText().trim();
                }
                if(!txtToSubAccountCode.getText().trim().equals("")) {
                    SubCode = txtToSubAccountCode.getText().trim();
                }
                if(Type==0) {
                    List=clsAccount.getMyLedger(txtMainAccountCode.getText(),txtFromSubAccountCode.getText().trim(),txtToSubAccountCode.getText().trim(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
                } else {
                    List=clsAccount.getMyLedgerNew(txtMainAccountCode.getText(),txtFromSubAccountCode.getText().trim(),txtToSubAccountCode.getText().trim(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
                }
            } else {
                List=clsAccount.getLedger(txtMainAccountCode.getText(),txtFromSubAccountCode.getText(),txtToSubAccountCode.getText(), FromDate, ToDate,chkApproved.isSelected(), UtilFunctions.CDbl(txtFromAmount.getText()), UtilFunctions.CDbl(txtToAmount.getText()), txtBookCode.getText());
            }
            // try placed by hardik
            try{
                for(int i=1;i<=List.size();i++) {
                    
                    clsVoucherLedgerItem objItem=(clsVoucherLedgerItem)List.get(Integer.toString(i));
                    TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                    objRow.setValue("VOUCHER_NO", objItem.getAttribute("VOUCHER_NO").getString());
                    objRow.setValue("LEGACY_NO", objItem.getAttribute("LEGACY_NO").getString());
                    objRow.setValue("VOUCHER_DATE", objItem.getAttribute("VOUCHER_DATE").getString());
                    objRow.setValue("BOOK_CODE", objItem.getAttribute("BOOK_CODE").getString());
                    //objRow.setValue("SUB_ACCOUNT_CODE","1");
                    objRow.setValue("SUB_ACCOUNT_CODE", objItem.getAttribute("SUB_ACCOUNT_CODE").getString());
                    objRow.setValue("PARTY_CODE1", objItem.getAttribute("PARTY_CODE1").getString());
                    String Name=clsPartyMaster.getAccountName("",objItem.getAttribute("PARTY_CODE1").getString());
                    if(Name.equals("")){
                        Name=clsPartyMaster.getAccountName(objItem.getAttribute("PARTY_CODE1").getString(),"");
                    }
                    if(Name.length()>22)
                    {
                        Name=Name.substring(0,22);
                    }
                    objRow.setValue("NAME", Name);
                    objRow.setValue("CHEQUE_NO", objItem.getAttribute("CHEQUE_NO").getString());
                    objRow.setValue("CHEQUE_DATE", objItem.getAttribute("CHEQUE_DATE").getString());
                    objRow.setValue("INVOICE_NO", objItem.getAttribute("INVOICE_NO").getString());
                    objRow.setValue("INVOICE_DATE", objItem.getAttribute("INVOICE_DATE").getString());
                    if((txtMainAccountCode.getText().trim().equals("210027") || txtMainAccountCode.getText().trim().equals("210010") || txtMainAccountCode.getText().trim().equals("210072")) && (!objItem.getAttribute("INVOICE_NO").getString().equals("")) && (objItem.getAttribute("LINK_NO").getString().equals(""))) {
                        objRow.setValue("LINK_NO", EITLERP.Sales.clsSalesInvoice.getAgentAlphaSrNo(objItem.getAttribute("INVOICE_NO").getString(), EITLERPGLOBAL.formatDateDB(objItem.getAttribute("INVOICE_DATE").getString())));
                    } else {
                        if(objItem.getAttribute("LINK_NO").getString().length()>14) {
                            objRow.setValue("LINK_NO", objItem.getAttribute("LINK_NO").getString().substring(0,14));
                        } else {
                            objRow.setValue("LINK_NO", objItem.getAttribute("LINK_NO").getString());
                        }
                    }
                    objRow.setValue("PO_NO", objItem.getAttribute("PO_NO").getString());
                    objRow.setValue("PO_DATE", objItem.getAttribute("PO_DATE").getString());
                    objRow.setValue("GRN_NO", objItem.getAttribute("GRN_NO").getString());
                    objRow.setValue("GRN_DATE", objItem.getAttribute("GRN_DATE").getString());
                    objRow.setValue("REMARKS", objItem.getAttribute("REMARKS").getString());
                    String PartyName = clsPolicyMaster.getPartyName(EITLERPGLOBAL.gCompanyID,objItem.getAttribute("SUB_ACCOUNT_CODE").getString().trim(),txtMainAccountCode.getText().trim());
                    objRow.setValue("PARTY_NAME", PartyName);
                    if(i==List.size()) {
                        objRow.setValue("DEBIT_AMOUNT", lblDebitTotal.getText());
                        objRow.setValue("CREDIT_AMOUNT",lblCreditTotal.getText());
                    }
                    else {
                        objRow.setValue("DEBIT_AMOUNT", dFormat.format(objItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                        objRow.setValue("CREDIT_AMOUNT", dFormat.format(objItem.getAttribute("CREDIT_AMOUNT").getDouble()));
                    }
                    if(objItem.getAttribute("CLOSING_BALANCE").getDouble()<0) {
                        objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Cr");
                        if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("") && objItem.getAttribute("REMARKS").getString().equals("")){
                           objRow.setValue("CLOSING_BALANCE","");
                        }
                    }
                    //else if(objItem.getAttribute("CLOSING_BALANCE").getDouble()==0) {                        
                    //    objRow.setValue("CLOSING_BALANCE","");
                        //if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("")){
                        //   objRow.setValue("CLOSING_BALANCE","");
                        //}
                    //}
                    else{
                        objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble()))+" Dr");
                        if(objItem.getAttribute("VOUCHER_NO").getString().equals("") && objItem.getAttribute("VOUCHER_DATE").getString().equals("") && objItem.getAttribute("REMARKS").getString().equals("")){
                           objRow.setValue("CLOSING_BALANCE","");
                        }
                    }
                    
                    objRow.setValue("GROUP", objItem.getAttribute("GROUP").getString());
                    objData.AddRow(objRow);
                }
            }
            catch(Exception e) {
                e.printStackTrace();
            }
            
            HashMap Parameters=new HashMap();
            String AccName = data.getStringValueFromDB("SELECT ACCOUNT_NAME FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE='"+txtMainAccountCode.getText().trim()+"' ",FinanceGlobal.FinURL);
            Parameters.put("MAIN_CODE",txtMainAccountCode.getText().trim() + " - " + AccName);
            
            Parameters.put("PARTY_CODE", txtFromSubAccountCode.getText());
            Parameters.put("PARTY_NAME",clsPartyMaster.getAccountName(txtMainAccountCode.getText(), txtFromSubAccountCode.getText()));
            Parameters.put("FROM_DATE", txtFromDate.getText());
            Parameters.put("TO_DATE", txtToDate.getText());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            if(updated){
                if(txtFromSubAccountCode.getText().trim().equals("") && txtToSubAccountCode.getText().trim().equals("")){
                    //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedNominal.rpt",Parameters,objData);    
                    objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedNominal_green.rpt",Parameters,objData);    //for account green ledger copy
                    //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedNominal_update.rpt",Parameters,objData);     
                    //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdatedNominal_update_green.rpt",Parameters,objData);   //for account green ledger copy  
                }
                else{
                  objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedgerUpdated.rpt",Parameters,objData);      
                }
             
            }else{
             objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptCreditorsLedger.rpt",Parameters,objData);   
            }
                
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void PrintLedgerSummary() {
        try {
            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("BOOK_CODE");
            objData.AddColumn("CHEQUE_NO");
            objData.AddColumn("CHEQUE_DATE");
            objData.AddColumn("INVOICE_NO");
            objData.AddColumn("INVOICE_DATE");
            objData.AddColumn("PO_NO");
            objData.AddColumn("PO_DATE");
            objData.AddColumn("REMARKS");
            objData.AddColumn("EFFECT");
            objData.AddColumn("DEBIT_AMOUNT");
            objData.AddColumn("CREDIT_AMOUNT");
            objData.AddColumn("CLOSING_BALANCE");
            
            
            
            String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
            String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
            
            HashMap List = new HashMap();
            List = clsAccount.getMyLedgerSummary(txtMainAccountCode.getText(),FromDate, ToDate,chkApproved.isSelected());
            
            for(int i=1;i<=List.size();i++) {
                
                clsVoucherLedgerItemSummary objItem=(clsVoucherLedgerItemSummary)List.get(Integer.toString(i));
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("VOUCHER_NO", objItem.getAttribute("VOUCHER_NO").getString());
                objRow.setValue("VOUCHER_DATE", EITLERPGLOBAL.formatDate(objItem.getAttribute("VOUCHER_DATE").getString()));
                objRow.setValue("BOOK_CODE", objItem.getAttribute("BOOK_CODE").getString());
                objRow.setValue("CHEQUE_NO", objItem.getAttribute("CHEQUE_NO").getString());
                objRow.setValue("CHEQUE_DATE", EITLERPGLOBAL.formatDate(objItem.getAttribute("CHEQUE_DATE").getString()));
                objRow.setValue("INVOICE_NO", objItem.getAttribute("INVOICE_NO").getString());
                objRow.setValue("INVOICE_DATE", EITLERPGLOBAL.formatDate(objItem.getAttribute("INVOICE_DATE").getString()));
                objRow.setValue("PO_NO", objItem.getAttribute("PO_NO").getString());
                objRow.setValue("PO_DATE", EITLERPGLOBAL.formatDate(objItem.getAttribute("PO_DATE").getString()));
                objRow.setValue("REMARKS", objItem.getAttribute("REMARKS").getString().trim().replace('\n',' ').replace('\t',' '));
                objRow.setValue("DEBIT_AMOUNT", dFormat.format(objItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                objRow.setValue("CREDIT_AMOUNT", dFormat.format(objItem.getAttribute("CREDIT_AMOUNT").getDouble()));
                if(objItem.getAttribute("CLOSING_BALANCE").getDouble() < 0) {
                    objRow.setValue("CLOSING_BALANCE", dFormat.format(Math.abs(objItem.getAttribute("CLOSING_BALANCE").getDouble())));//+" Cr"
                    objRow.setValue("EFFECT", "Cr");
                } else if(objItem.getAttribute("CLOSING_BALANCE").getDouble() > 0) {
                    objRow.setValue("CLOSING_BALANCE", dFormat.format(objItem.getAttribute("CLOSING_BALANCE").getDouble())); //+" Dr"
                    objRow.setValue("EFFECT", "Dr");
                } else {
                    objRow.setValue("CLOSING_BALANCE", "0");
                    objRow.setValue("EFFECT", "");
                }
                objData.AddRow(objRow);
            }
            
            HashMap Parameters=new HashMap();
            Parameters.put("MAIN_CODE",txtMainAccountCode.getText().trim() + " - " + clsAccount.getAccountName(txtMainAccountCode.getText().trim(),""));
            Parameters.put("FROM_DATE", txtFromDate.getText());
            Parameters.put("TO_DATE", txtToDate.getText());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            
            objEngine.PreviewReport("http://200.0.0.227:8080/SDMLERP/EITLERP/Reports/finance/rptCreditorsLedgerSummary.rpt",Parameters,objData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void searchWithin(char recentKey) {
        
        try {
            
            RowFormat.removeBackColors();
            CellAlign.removeBackColors();
            
            Table.repaint();
            
            String searchString=txtSearch.getText();
            
            if(!searchString.trim().equals("")) {
                
                
                if(recentKey!=' ') {
                    searchString=searchString+recentKey;
                }
                
                searchString=searchString.toLowerCase();
                
                int currentCol=Table.getSelectedColumn();
                
                for(int i=0;i<=Table.getRowCount()-1;i++) {
                    
                    if(Table.getValueAt(i,currentCol).toString().trim().toLowerCase().indexOf(searchString)!=-1) {
                        
                        Table.changeSelection(i, currentCol, false,false);
                        
                        RowFormat.setBackColor(i, currentCol, Color.YELLOW);
                        
                        if(currentCol==DataModel.getColFromVariable("DEBIT_AMOUNT")||currentCol==DataModel.getColFromVariable("CREDIT_AMOUNT")) {
                            CellAlign.setBackColor(i, currentCol, Color.YELLOW);
                        }
                        if(currentCol==DataModel.getColFromVariable("PO_NO")) {
                            POColor.setBackColor(i, currentCol, Color.YELLOW);
                        }
                    }
                }
                Table.repaint();
            }
        }
        catch(Exception e) {
            
        }
    }
    
    public void destroy() {
        System.out.println("Destroy");
    }
    
    public static void advReceiptDetail(String MainCode, String FromSubCode ,String AsOnDate) {
        String strSQL = "";
        String Condition = "";
        ResultSet rsData = null;
        TReportEngine objEngine1=new TReportEngine();
        TReportWriter.SimpleDataProvider.TTable objData = new TReportWriter.SimpleDataProvider.TTable();
        
        try {
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("LEGACY_NO");
            objData.AddColumn("LEGACY_DATE");
            objData.AddColumn("BOOK_CODE");
            objData.AddColumn("SUB_ACCOUNT_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("AMOUNT");
            
            if(!FromSubCode.equals("")) {
                Condition = " AND B.SUB_ACCOUNT_CODE = '"+FromSubCode+"' ";
            }
            strSQL = "SELECT A.VOUCHER_NO, A.LEGACY_NO,DATE_FORMAT(A.LEGACY_DATE,'%d/%m/%Y') AS LDATE,DATE_FORMAT(A.VOUCHER_DATE,'%d/%m/%Y') AS VDATE, B.MAIN_ACCOUNT_CODE, " +
            "B.SUB_ACCOUNT_CODE, B.EFFECT, B.AMOUNT,A.BOOK_CODE,B.SR_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE<='"+AsOnDate+"' AND A.VOUCHER_TYPE IN (6,7,8,9,12)  AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' " + Condition + " " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 AND A.EXCLUDE_IN_ADJ =0 AND B.EFFECT='C' AND B.INVOICE_NO ='' " +
            "AND B.MODULE_ID <>65 AND B.GRN_NO ='' AND (B.MATCHED=0 OR B.MATCHED IS NULL) " +
            "ORDER BY B.SUB_ACCOUNT_CODE,A.VOUCHER_DATE ";
            
            rsData = data.getResult(strSQL,FinanceGlobal.FinURL);
           // System.out.println(strSQL);
            rsData.first();
            TReportWriter.SimpleDataProvider.TRow objRow = null;
            if(rsData.getRow() > 0) {
                while(!rsData.isAfterLast()) {
                    objRow=objData.newRow();
                    String VoucherNo = UtilFunctions.getString(rsData, "VOUCHER_NO", "");
                    int VoucherSrNo = UtilFunctions.getInt(rsData, "SR_NO", 0);
                    String SubAccountCode = UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", "");
                    double Amount = UtilFunctions.getDouble(rsData, "AMOUNT", 0);
                    //Amount = clsAccount.get09AmountByVoucher(VoucherNo,MainCode,SubAccountCode,Amount);
                    if(Amount>0) {
                        String VoucherDate = UtilFunctions.getString(rsData, "VDATE", "");
                        objRow.setValue("VOUCHER_NO", UtilFunctions.getString(rsData, "VOUCHER_NO", ""));
                        objRow.setValue("VOUCHER_DATE", UtilFunctions.getString(rsData, "VDATE", ""));
                        objRow.setValue("LEGACY_NO", UtilFunctions.getString(rsData, "LEGACY_NO", ""));
                        if(!UtilFunctions.getString(rsData, "LDATE", "").equals("00/00/0000")) {
                            objRow.setValue("LEGACY_DATE", UtilFunctions.getString(rsData, "LDATE", ""));
                        } else {
                            objRow.setValue("LEGACY_DATE","0000-00-00");
                        }
                        objRow.setValue("BOOK_CODE", UtilFunctions.getString(rsData, "BOOK_CODE", ""));
                        objRow.setValue("SUB_ACCOUNT_CODE", UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", ""));
                        objRow.setValue("PARTY_NAME", clsPartyMaster.getAccountName(MainCode, UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", "")));
                        objRow.setValue("AMOUNT", Double.toString(Amount));
                        objData.AddRow(objRow);
                    }
                    rsData.next();
                }
            }
            
            HashMap Parameters=new HashMap();
            if(!FromSubCode.equals("")) {
                Parameters.put("PARTY_NAME",FromSubCode +" - "+clsPartyMaster.getAccountName(MainCode.trim(), FromSubCode.trim()));
            } else {
                Parameters.put("PARTY_NAME",MainCode+" - "+clsPartyMaster.getAccountName(MainCode.trim(), ""));
            }
            Parameters.put("AS_ON_DATE", EITLERPGLOBAL.getCurrentDate());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            objEngine1.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptAdvanceReceiptAmount.rpt",Parameters,objData);
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    
    public static void advReceiptSummary(String MainCode, String FromSubCode ,String AsOnDate) {
        String strSQL = "";
        String Condition = "";
        ResultSet rsData = null;
        TReportEngine objEngine1=new TReportEngine();
        TReportWriter.SimpleDataProvider.TTable objData = new TReportWriter.SimpleDataProvider.TTable();
        
        try {
            objData.AddColumn("SUB_ACCOUNT_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("AMOUNT");
            
            if(!FromSubCode.equals("")) {
                Condition = " AND B.SUB_ACCOUNT_CODE = '"+FromSubCode+"' ";
            }
            strSQL = "SELECT B.SUB_ACCOUNT_CODE, SUM(B.AMOUNT) AS AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE<='"+AsOnDate+"' AND A.VOUCHER_TYPE IN (6,7,8,9,12) AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' " + Condition + " " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 AND A.EXCLUDE_IN_ADJ =0 AND B.EFFECT='C' AND B.INVOICE_NO ='' AND B.MODULE_ID <>65 " +
            "AND B.GRN_NO ='' AND (B.MATCHED=0 OR B.MATCHED IS NULL) " +
            "GROUP BY B.SUB_ACCOUNT_CODE " +
            "ORDER BY B.SUB_ACCOUNT_CODE ";
            
            rsData = data.getResult(strSQL,FinanceGlobal.FinURL);
         //   System.out.println(strSQL);
            rsData.first();
            TReportWriter.SimpleDataProvider.TRow objRow = null;
            if(rsData.getRow() > 0) {
                while(!rsData.isAfterLast()) {
                    objRow=objData.newRow();
                    String SubAccountCode = UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", "");
                    double Amount = UtilFunctions.getDouble(rsData, "AMOUNT", 0);
                    //Amount = clsAccount.get09AmountByVoucher(VoucherNo,MainCode,SubAccountCode,Amount);
                    if(Amount>0) {
                        objRow.setValue("SUB_ACCOUNT_CODE", UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", ""));
                        objRow.setValue("PARTY_NAME", clsPartyMaster.getAccountName(MainCode, UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", "")));
                        objRow.setValue("AMOUNT", Double.toString(Amount));
                        objData.AddRow(objRow);
                    }
                    rsData.next();
                }
            }
            
            HashMap Parameters=new HashMap();
            if(!FromSubCode.equals("")) {
                Parameters.put("PARTY_NAME",FromSubCode +" - "+clsPartyMaster.getAccountName(MainCode.trim(), FromSubCode.trim()));
            } else {
                Parameters.put("PARTY_NAME",MainCode+" - "+clsPartyMaster.getAccountName(MainCode.trim(), ""));
            }
            Parameters.put("AS_ON_DATE", EITLERPGLOBAL.getCurrentDate());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            objEngine1.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptAdvanceReceiptAmountSummary.rpt",Parameters,objData);
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private boolean Validate() {
        try {
            
        } catch(Exception e) {
        }
        return true;
    }
}
