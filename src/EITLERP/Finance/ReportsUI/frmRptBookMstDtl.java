/*
 * frmBookCode.java
 *
 * Created on February 14, 2008, 12:14 PM
 */

package EITLERP.Finance.ReportsUI;

/**
 *
 * @author  nisarg
 */

import EITLERP.*;
import EITLERP.Finance.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.io.*;
import java.sql.*;
import TReportWriter.*;
import EITLERP.Utils.SimpleDataProvider.*;
import EITLERP.Finance.Config.*;
import EITLERP.Finance.ReportsUI.*;
import java.text.*;


public class frmRptBookMstDtl extends javax.swing.JApplet {
    
    /** Initializes the applet frmBookCode */
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLTableCellRenderer RowFormat=new EITLTableCellRenderer();
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    DecimalFormat dFormat=new DecimalFormat("###0.00");
    
    public void init() {
        initComponents();
        setSize(617,435);
        GenerateGrid();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableData = new javax.swing.JTable();
        cmdPreview = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel4.setText("BOOKS DETAILS ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(9, 9, 140, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-1, -1, 810, 30);

        TableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TableData);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(5, 35, 590, 310);

        cmdPreview.setText("Preview Report");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(450, 360, 130, 25);

    }//GEN-END:initComponents

    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        GenerateBookDtl();
    }//GEN-LAST:event_cmdPreviewActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableData;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
 
    private void FormatGrid()
     {
       try
       {
         DataModel=new EITLTableModel();
         TableData.removeAll();
         TableData.setModel(DataModel);
         TableData.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
         
         DataModel.addColumn("Sr No."); //0
         DataModel.addColumn("Book Name");//1
         DataModel.addColumn("TR Code");//2
                  
         DataModel.SetVariable(0,"SR_NO");
         DataModel.SetVariable(1,"BOOK_NAME");
         DataModel.SetVariable(2,"BOOK_CODE");
         
         RowFormat =new EITLTableCellRenderer();
         
         for(int j=0;j<TableData.getColumnCount();j++)
         {
           TableData.getColumnModel().getColumn(j).setCellRenderer(RowFormat);  
         }
         
       }
       catch(Exception e)
       {
           
       }
     }
    
    private void GenerateGrid()
     {
         FormatGrid();
         
         try
         {
             Object[] rowData;
             int NewRow;
             //Add             
             rowData=new Object[1];
             DataModel.addRow(rowData);
             NewRow=TableData.getRowCount()-1;
             
             DataModel.setValueByVariable("SR_NO","A",NewRow);
             DataModel.setValueByVariable("BOOK_NAME","MILLS UNIT - BARODA & ANKLESHWAR",NewRow);
             DataModel.setValueByVariable("BOOK_CODE","" ,NewRow);
             
             //Add Blank Row
             rowData=new Object[1];
             DataModel.addRow(rowData);
             NewRow=TableData.getRowCount()-1;      
                   
             String strSQL="SELECT * FROM D_FIN_BOOK_MASTER WHERE COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " ORDER BY BOOK_CODE"; 
             
             ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
             rsTmp.first();
             int Counter = 0;
             
             if(rsTmp.getRow()>0)
             {
                while(!rsTmp.isAfterLast())
                {
                   Counter++;

                   rowData=new Object[1];
                   DataModel.addRow(rowData);
                   NewRow=TableData.getRowCount()-1;

                   DataModel.setValueByVariable("SR_NO",Integer.toString(Counter),NewRow);
                   DataModel.setValueByVariable("BOOK_NAME",UtilFunctions.getString(rsTmp,"BOOK_NAME",""),NewRow);
                   DataModel.setValueByVariable("BOOK_CODE",UtilFunctions.getString(rsTmp,"BOOK_CODE","") ,NewRow);

                   rsTmp.next(); 
                }
             }
             
             //Add Blank Row
             rowData=new Object[1];
             DataModel.addRow(rowData);
             NewRow=TableData.getRowCount()-1;
             
             //Add Blank Row
             rowData=new Object[1];
             DataModel.addRow(rowData);
             NewRow=TableData.getRowCount()-1;
             
             //Add Blank Row
             rowData=new Object[1];
             DataModel.addRow(rowData);
             NewRow=TableData.getRowCount()-1;
             
             //Add  
             rowData=new Object[1];
             DataModel.addRow(rowData);
             NewRow=TableData.getRowCount()-1;
             
             DataModel.setValueByVariable("SR_NO","B",NewRow);
             DataModel.setValueByVariable("BOOK_NAME","LEDGER BARODA",NewRow);
             DataModel.setValueByVariable("BOOK_CODE","" ,NewRow);
             
             //Add Blank Row
             rowData=new Object[1];
             DataModel.addRow(rowData);
             NewRow=TableData.getRowCount()-1;
                                      
             strSQL="SELECT ACCOUNT_ID,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,ACCOUNT_NAME "+
                "FROM D_FIN_GL "+
                "WHERE SUB_ACCOUNT_CODE <> '000000' AND APPROVED=1 AND CANCELLED=0 "+
                "AND COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " ORDER BY SUB_ACCOUNT_CODE"; 
             
             rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
             rsTmp.first();
             
             Counter = 0;
             
             if(rsTmp.getRow()>0)
             {
                while(!rsTmp.isAfterLast())
                {
                   Counter++;

                   rowData=new Object[1];
                   DataModel.addRow(rowData);
                   NewRow=TableData.getRowCount()-1;

                   DataModel.setValueByVariable("SR_NO",Integer.toString(Counter),NewRow);
                   DataModel.setValueByVariable("BOOK_NAME",UtilFunctions.getString(rsTmp,"ACCOUNT_NAME",""),NewRow);
                   DataModel.setValueByVariable("BOOK_CODE","" ,NewRow);

                   rsTmp.next(); 
                }
             }
             
         }
         catch(Exception e)
         {
             
         }
     }
          
     private void GenerateBookDtl() {
         
        try
       {
             TReportWriter.SimpleDataProvider.TRow objRow;
             TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
             
             objReportData.AddColumn("SR_NO");
             objReportData.AddColumn("BOOK_NAME");
             objReportData.AddColumn("BOOK_CODE");
                          
             objRow=objReportData.newRow();
             objRow.setValue("SR_NO","A");
             objRow.setValue("BOOK_NAME","MILLS UNIT - BARODA & ANKLESHWAR");
             objRow.setValue("BOOK_CODE","");
             objReportData.AddRow(objRow);
             
             objRow=objReportData.newRow();
             objRow.setValue("SR_NO","");
             objRow.setValue("BOOK_NAME","");
             objRow.setValue("BOOK_CODE","");
             objReportData.AddRow(objRow);             
             
             String strSQL="SELECT * FROM D_FIN_BOOK_MASTER WHERE COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " ORDER BY BOOK_CODE"; 
             
             //System.out.println("sql="+strSQL);
             ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
             rsTmp.first();
             
             int Counter = 0;
             
             if(rsTmp.getRow()>0)
             {
                while(!rsTmp.isAfterLast())
                {
                      Counter ++; 
                      objRow=objReportData.newRow();

                      objRow.setValue("SR_NO",Integer.toString(Counter));
                      objRow.setValue("BOOK_NAME",UtilFunctions.getString(rsTmp,"BOOK_NAME",""));
                      objRow.setValue("BOOK_CODE",UtilFunctions.getString(rsTmp,"BOOK_CODE",""));

                      objReportData.AddRow(objRow);

                      rsTmp.next(); 
                }
             }
             
            objRow=objReportData.newRow();
            objRow.setValue("SR_NO","");
            objRow.setValue("BOOK_NAME","");
            objRow.setValue("BOOK_CODE","");
            objReportData.AddRow(objRow);  
            
            objRow=objReportData.newRow();
            objRow.setValue("SR_NO","");
            objRow.setValue("BOOK_NAME","");
            objRow.setValue("BOOK_CODE","");
            objReportData.AddRow(objRow);   
            
            objRow=objReportData.newRow();
            objRow.setValue("SR_NO","");
            objRow.setValue("BOOK_NAME","");
            objRow.setValue("BOOK_CODE","");
            objReportData.AddRow(objRow);   
            
            objRow=objReportData.newRow();
            objRow.setValue("SR_NO","B");
            objRow.setValue("BOOK_NAME","LEDGER BARODA");
            objRow.setValue("BOOK_CODE","");
            objReportData.AddRow(objRow);   
             
            objRow=objReportData.newRow();
            objRow.setValue("SR_NO","");
            objRow.setValue("BOOK_NAME","");
            objRow.setValue("BOOK_CODE","");
            objReportData.AddRow(objRow);   
            
            strSQL="SELECT ACCOUNT_ID,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,ACCOUNT_NAME "+
                "FROM D_FIN_GL "+
                "WHERE SUB_ACCOUNT_CODE <> '000000' AND APPROVED=1 AND CANCELLED=0 "+
                "AND COMPANY_ID=" + EITLERPGLOBAL.gCompanyID + " ORDER BY SUB_ACCOUNT_CODE"; 
             
            //System.out.println("sql="+strSQL);
            rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsTmp.first();
             
            Counter = 0;
             
            if(rsTmp.getRow()>0)
            {
                while(!rsTmp.isAfterLast())
                {
                      Counter ++; 
                      objRow=objReportData.newRow();

                      objRow.setValue("SR_NO",Integer.toString(Counter));
                      objRow.setValue("BOOK_NAME",UtilFunctions.getString(rsTmp,"ACCOUNT_NAME",""));
                      objRow.setValue("BOOK_CODE","");

                      objReportData.AddRow(objRow);

                      rsTmp.next(); 
                }
            }
           
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            Parameters.put("COMPANY_ID",Integer.toString(Comp_ID));
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
                        
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptBookDtl.rpt",Parameters,objReportData);
            
            
       }
       catch(Exception e)
       {
         e.printStackTrace();  
       }
       
     }
    
}
