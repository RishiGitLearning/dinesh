/*
 * frmRptGRNInfo.java
 *
 * Created on April 16, 2008, 12:01 PM
 */

package EITLERP.Finance.ReportsUI;

/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;

public class frmRptDailyCashBook extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    /** Initializes the applet frmRptGRNInfo */
    public void init() {
        setSize(424,210);
        initComponents();
        txtDate.setText(EITLERPGLOBAL.getCurrentDate());
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBookCode = new javax.swing.JTextField();
        cmdPreview = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("DAILY ACCOUNT CASH BOOK");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(9, 8, 230, 15);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 2, 800, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Date :");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 50, 90, 20);

        txtDate.setColumns(10);
        txtDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateFocusLost(evt);
            }
        });

        getContentPane().add(txtDate);
        txtDate.setBounds(160, 50, 90, 20);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Book Code :");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 90, 90, 20);

        txtBookCode.setColumns(10);
        txtBookCode.setText("30");
        txtBookCode.setEnabled(false);
        txtBookCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBookCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBookCodeFocusLost(evt);
            }
        });

        getContentPane().add(txtBookCode);
        txtBookCode.setBounds(160, 90, 90, 20);

        cmdPreview.setText("Print");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });
        cmdPreview.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmdPreviewFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmdPreviewFocusLost(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(160, 130, 90, 25);

        lblStatus.setForeground(new java.awt.Color(51, 102, 255));
        lblStatus.setText("...");
        lblStatus.setFocusCycleRoot(true);
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 170, 400, 20);

    }//GEN-END:initComponents
    
    private void cmdPreviewFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmdPreviewFocusLost
        // TODO add your handling code here:
        lblStatus.setText("...");
    }//GEN-LAST:event_cmdPreviewFocusLost
    
    private void cmdPreviewFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmdPreviewFocusGained
        // TODO add your handling code here:
        lblStatus.setText("Click to Preview Report");
    }//GEN-LAST:event_cmdPreviewFocusGained
    
    private void txtBookCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBookCodeFocusLost
        // TODO add your handling code here:
        lblStatus.setText("...");
    }//GEN-LAST:event_txtBookCodeFocusLost
    
    private void txtBookCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBookCodeFocusGained
        // TODO add your handling code here:
        lblStatus.setText("Please Enter Book Code");
    }//GEN-LAST:event_txtBookCodeFocusGained
    
    private void txtDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusLost
        // TODO add your handling code here:
        lblStatus.setText("...");
    }//GEN-LAST:event_txtDateFocusLost
    
    private void txtDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusGained
        // TODO add your handling code here:
        lblStatus.setText("Please Enter Date");
    }//GEN-LAST:event_txtDateFocusGained
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        
        GenerateReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtBookCode;
    private javax.swing.JTextField txtDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("SR_NO");
            objReportData.AddColumn("C_AMOUNT");
            objReportData.AddColumn("C_RECEIPT_NO");
            objReportData.AddColumn("C_MAIN_CODE");
            objReportData.AddColumn("C_MAIN_CODE_DESC");
            objReportData.AddColumn("C_LEGACY_NO");
            
            objReportData.AddColumn("D_AMOUNT");
            objReportData.AddColumn("D_RECEIPT_NO");
            objReportData.AddColumn("D_MAIN_CODE");
            objReportData.AddColumn("D_MAIN_CODE_DESC");
            objReportData.AddColumn("D_LEGACY_NO");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("SR_NO","");
            objOpeningRow.setValue("C_AMOUNT","");
            objOpeningRow.setValue("C_RECEIPT_NO","");
            objOpeningRow.setValue("C_MAIN_CODE","");
            objOpeningRow.setValue("C_MAIN_CODE_DESC","");
            objOpeningRow.setValue("C_LEGACY_NO","");
            
            objOpeningRow.setValue("D_AMOUNT","");
            objOpeningRow.setValue("D_RECEIPT_NO","");
            objOpeningRow.setValue("D_MAIN_CODE","");
            objOpeningRow.setValue("D_MAIN_CODE_DESC","");
            objOpeningRow.setValue("D_LEGACY_NO","");
            
            
            String strSQL = "SELECT SUM(B.AMOUNT) AS AMOUNT,B.VOUCHER_NO,B.EFFECT,B.MAIN_ACCOUNT_CODE,A.LEGACY_NO "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID ='" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO  AND A.APPROVED = 1 AND A.CANCELLED = 0 "+
            "AND A.BOOK_CODE = '" + txtBookCode.getText().trim() + "'  AND EFFECT  ='C' "+
            "AND A.VOUCHER_TYPE = '" + FinanceGlobal.TYPE_CASH_RECEIPT_VOUCHER+ "' "+
            "AND A.VOUCHER_DATE = '" + EITLERPGLOBAL.formatDateDB(txtDate.getText().trim()) + "' "+
            "GROUP BY B.VOUCHER_NO "+
            "ORDER BY LEGACY_NO";
            
            ResultSet rsCashReceipt=data.getResult(strSQL,FinanceGlobal.FinURL);
            
            
            strSQL = "SELECT A.CHEQUE_AMOUNT AS AMOUNT,B.VOUCHER_NO,B.EFFECT,B.MAIN_ACCOUNT_CODE,A.LEGACY_NO "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO "+
            "AND A.APPROVED = 1 AND A.CANCELLED = 0 "+
            "AND A.BOOK_CODE = '" + txtBookCode.getText().trim() + "' "+
            "AND EFFECT  ='D' AND B.SR_NO =1 "+
            "AND A.VOUCHER_TYPE = '" + FinanceGlobal.TYPE_CASH_VOUCHER + "'  "+
            "AND A.VOUCHER_DATE = '" + EITLERPGLOBAL.formatDateDB(txtDate.getText().trim()) + "' "+
            "GROUP BY  B.VOUCHER_NO "+
            "ORDER BY LEGACY_NO ";
            
            
            
            //            strSQL = "SELECT B.AMOUNT,B.VOUCHER_NO,B.EFFECT,B.MAIN_ACCOUNT_CODE,A.LEGACY_NO "+
            //            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            //            "WHERE A.COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.APPROVED = 1 AND A.CANCELLED = 0 "+
            //            "AND A.BOOK_CODE = '" + txtBookCode.getText().trim() + "'  AND EFFECT  ='C' AND B.MAIN_ACCOUNT_CODE = '212012' "+
            //            "AND A.VOUCHER_TYPE = '" + FinanceGlobal.TYPE_CASH_VOUCHER + "' "+
            //            "AND A.VOUCHER_DATE = '" + EITLERPGLOBAL.formatDateDB(txtDate.getText().trim()) + "' "+
            //            "ORDER BY LEGACY_NO ";
            
            ResultSet rsCashPayment=data.getResult(strSQL,FinanceGlobal.FinURL);
            
            
            
            
            rsCashReceipt.last();
            rsCashPayment.last();
            
            int ReceiptRecord = rsCashReceipt.getRow();
            int Payment = rsCashPayment.getRow();
            int loop=0;
            
            if(ReceiptRecord > Payment ) {
                loop = rsCashReceipt.getRow();
            }
            else {
                loop = rsCashPayment.getRow();
            }
            
            rsCashReceipt.first();
            rsCashPayment.first();
            //boolean Has1=true;
            //boolean Has2=true;
            
            double OpeningBalance = clsAccount.getOpeningBalance("212012","",EITLERPGLOBAL.formatDateDB(txtDate.getText().trim()));
            double TotalCreditBalance =0;
            
            if(ReceiptRecord>0) {
                TotalCreditBalance = data.getDoubleValueFromDB("SELECT SUM(T.AMOUNT) AS AMOUNT FROM (SELECT SUM(B.AMOUNT) AS AMOUNT "+
                "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
                "WHERE A.COMPANY_ID ='" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO  AND A.APPROVED = 1 AND A.CANCELLED = 0 "+
                "AND A.BOOK_CODE = '" + txtBookCode.getText().trim() + "'  AND EFFECT  ='C' "+
                "AND A.VOUCHER_TYPE = '" + FinanceGlobal.TYPE_CASH_RECEIPT_VOUCHER+ "' "+
                "AND A.VOUCHER_DATE = '" + EITLERPGLOBAL.formatDateDB(txtDate.getText().trim()) + "' "+
                "GROUP BY B.VOUCHER_NO "+
                "ORDER BY LEGACY_NO ) AS T ",FinanceGlobal.FinURL);
            }
            double TotalDebitBalance =0;
            if(Payment >0) {
                TotalDebitBalance= data.getDoubleValueFromDB("SELECT SUM(T.AMOUNT) FROM (SELECT A.CHEQUE_AMOUNT AS AMOUNT "+
                "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
                "WHERE A.COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO "+
                "AND A.APPROVED = 1 AND A.CANCELLED = 0 "+
                "AND A.BOOK_CODE = '" + txtBookCode.getText().trim() + "' "+
                "AND EFFECT  ='D' AND B.SR_NO =1 "+
                "AND A.VOUCHER_TYPE = '" + FinanceGlobal.TYPE_CASH_VOUCHER + "'  "+
                "AND A.VOUCHER_DATE = '" + EITLERPGLOBAL.formatDateDB(txtDate.getText().trim()) + "' "+
                "GROUP BY  B.VOUCHER_NO "+
                "ORDER BY LEGACY_NO ) AS T ",FinanceGlobal.FinURL);
            }
            int Counter = 0;
            if(loop>0) {
                for(int i=1;i<=loop;i++) {
                    
                    Counter ++;
                    objRow=objReportData.newRow();
                    objRow.setValue("SR_NO",Integer.toString(Counter));
                    
                    if(ReceiptRecord>0) {
                        if(!rsCashReceipt.isAfterLast()) {
                            //System.out.println(rsCashReceipt.getString("AMOUNT")  + "  " + rsCashReceipt.getString("VOUCHER_NO") + "  " + rsCashReceipt.getString("A.LEGACY_NO"));
                            objRow.setValue("C_AMOUNT",rsCashReceipt.getString("AMOUNT"));
                            objRow.setValue("C_RECEIPT_NO",rsCashReceipt.getString("VOUCHER_NO"));
                            objRow.setValue("C_MAIN_CODE",rsCashReceipt.getString("MAIN_ACCOUNT_CODE"));
                            objRow.setValue("C_MAIN_CODE_DESC",data.getStringValueFromDB("SELECT ACCOUNT_NAME FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE  = '" + rsCashReceipt.getString("MAIN_ACCOUNT_CODE") + "' ",FinanceGlobal.FinURL));
                            objRow.setValue("C_LEGACY_NO",rsCashReceipt.getString("LEGACY_NO"));
                            rsCashReceipt.next();
                            
                        }
                    }
                    if(Payment>0) {
                        if(!rsCashPayment.isAfterLast()) {
                            //System.out.println(rsCashPayment.getString("AMOUNT")  + "  " + rsCashPayment.getString("VOUCHER_NO") + "  " + rsCashPayment.getString("A.LEGACY_NO"));
                            objRow.setValue("D_AMOUNT",rsCashPayment.getString("AMOUNT"));
                            objRow.setValue("D_RECEIPT_NO",rsCashPayment.getString("VOUCHER_NO"));
                            objRow.setValue("D_MAIN_CODE",rsCashPayment.getString("MAIN_ACCOUNT_CODE"));
                            objRow.setValue("D_MAIN_CODE_DESC",data.getStringValueFromDB("SELECT ACCOUNT_NAME FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE  = '" + rsCashPayment.getString("MAIN_ACCOUNT_CODE") + "' ",FinanceGlobal.FinURL));
                            objRow.setValue("D_LEGACY_NO",rsCashPayment.getString("LEGACY_NO"));
                            
                            rsCashPayment.next();
                        }
                    }
                    objReportData.AddRow(objRow);
                }
            }
            
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            
            Parameters.put("TOTAL_CREDIT_BALANCE",String.valueOf(TotalCreditBalance));
            Parameters.put("TOTAL_DEBIT_BALANCE",String.valueOf(TotalDebitBalance));
            Parameters.put("NET_BALANCE1",String.valueOf(EITLERPGLOBAL.round(OpeningBalance + TotalCreditBalance,2)));
            Parameters.put("NET_BALANCE2",String.valueOf(EITLERPGLOBAL.round(TotalDebitBalance - (OpeningBalance + TotalCreditBalance),2)));
            Parameters.put("OPENING_BALANCE",String.valueOf(OpeningBalance));
            Parameters.put("COMPANY_NAME",clsCompany.getCompanyName(EITLERPGLOBAL.gCompanyID).toUpperCase());
            Parameters.put("DATE",data.getStringValueFromDB("SELECT DATE_FORMAT('" + EITLERPGLOBAL.formatDateDB(txtDate.getText().trim()) + "','%W %D %M %Y') FROM DUAL",FinanceGlobal.FinURL).toUpperCase());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptDailyCashBook.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    
    
    
    
    private boolean Validate() {
        //Form level validations
        
        if(txtDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtBookCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Book Code");
            return false;
        }
        
        return true;
    }
    
}
