package EITLERP.Finance.ReportsUI;

import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import java.text.*;
import TReportWriter.*;

public class frmRptDeductionFromParty extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private EITLComboModel cmbMonthModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    /** Initializes the applet frmRptGRNInfo */
    public void init() {
        setSize(424,264);
        initComponents();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblToDate = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        cmdPreview = new javax.swing.JButton();
        lblFromDate = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        lblMainCode = new javax.swing.JLabel();
        txtMainCode = new javax.swing.JTextField();
        lblPartyCode = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        lblMainCodeName = new javax.swing.JLabel();
        lblPartyName = new javax.swing.JLabel();
        lblMessage = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("DEDUCTION FROM PARTY ACCOUNT");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(9, 8, 350, 15);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 2, 800, 30);

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To Date :");
        getContentPane().add(lblToDate);
        lblToDate.setBounds(220, 43, 60, 15);

        txtToDate.setColumns(10);
        txtToDate.setNextFocusableComponent(txtMainCode);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(290, 40, 100, 20);

        cmdPreview.setText("Preview Report");
        cmdPreview.setNextFocusableComponent(txtFromDate);
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(90, 130, 130, 25);

        lblFromDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromDate.setText("From Date :");
        getContentPane().add(lblFromDate);
        lblFromDate.setBounds(10, 43, 73, 15);

        txtFromDate.setColumns(10);
        txtFromDate.setNextFocusableComponent(txtToDate);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(90, 40, 100, 20);

        lblMainCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMainCode.setText("Main Code :");
        getContentPane().add(lblMainCode);
        lblMainCode.setBounds(8, 71, 75, 15);

        txtMainCode.setColumns(10);
        txtMainCode.setNextFocusableComponent(txtPartyCode);
        txtMainCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMainCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMainCodeFocusLost(evt);
            }
        });
        txtMainCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMainCodeKeyPressed(evt);
            }
        });

        getContentPane().add(txtMainCode);
        txtMainCode.setBounds(90, 70, 100, 20);

        lblPartyCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPartyCode.setText("Party Code :");
        getContentPane().add(lblPartyCode);
        lblPartyCode.setBounds(0, 100, 83, 15);

        txtPartyCode.setColumns(10);
        txtPartyCode.setNextFocusableComponent(cmdPreview);
        txtPartyCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPartyCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPartyCodeFocusLost(evt);
            }
        });
        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });

        getContentPane().add(txtPartyCode);
        txtPartyCode.setBounds(90, 100, 100, 20);

        lblMainCodeName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMainCodeName.setText("...");
        getContentPane().add(lblMainCodeName);
        lblMainCodeName.setBounds(200, 70, 210, 15);

        lblPartyName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPartyName.setText("...");
        getContentPane().add(lblPartyName);
        lblPartyName.setBounds(200, 100, 210, 15);

        lblMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMessage.setText("...");
        getContentPane().add(lblMessage);
        lblMessage.setBounds(10, 160, 390, 15);

    }//GEN-END:initComponents
    
    private void txtPartyCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartyCodeFocusLost
        // TODO add your handling code here:
        lblPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
    }//GEN-LAST:event_txtPartyCodeFocusLost
    
    private void txtMainCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMainCodeFocusLost
        // TODO add your handling code here:
        lblMainCodeName.setText(clsAccount.getAccountName(txtMainCode.getText().trim(), ""));
    }//GEN-LAST:event_txtMainCodeFocusLost
    
    private void txtPartyCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartyCodeFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Press F1");
    }//GEN-LAST:event_txtPartyCodeFocusGained
    
    private void txtMainCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMainCodeFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Press F1");
    }//GEN-LAST:event_txtMainCodeFocusGained
    
    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        // TODO add your handling code here:
        try {
            if(evt.getKeyCode()==112) {
                LOV aList=new LOV();
                aList.SQL="SELECT PARTY_CODE,PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE COMPANY_ID=2 AND APPROVED=1 ORDER BY PARTY_NAME";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=2;
                aList.UseSpecifiedConn=true;
                aList.dbURL=FinanceGlobal.FinURL;
                if(aList.ShowLOV()) {
                    txtPartyCode.setText(aList.ReturnVal);
                    lblPartyName.setText(clsPartyMaster.getAccountName(txtMainCode.getText(),txtPartyCode.getText()));
                }
            }
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed
    
    private void txtMainCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMainCodeKeyPressed
        // TODO add your handling code here:
        try {
            if(evt.getKeyCode()==112) {
                LOV aList=new LOV();
                aList.SQL="SELECT MAIN_ACCOUNT_CODE,ACCOUNT_NAME FROM D_FIN_GL WHERE COMPANY_ID=2 AND APPROVED=1 ORDER BY ACCOUNT_NAME";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=2;
                aList.UseSpecifiedConn=true;
                aList.dbURL=FinanceGlobal.FinURL;
                
                if(aList.ShowLOV()) {
                    txtMainCode.setText(aList.ReturnVal);
                    lblMainCodeName.setText(clsAccount.getAccountName(txtMainCode.getText(),""));
                }
            }
        }
        catch(Exception e) {
        }
    }//GEN-LAST:event_txtMainCodeKeyPressed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        GenerateReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblMainCode;
    private javax.swing.JLabel lblMainCodeName;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblPartyCode;
    private javax.swing.JLabel lblPartyName;
    private javax.swing.JLabel lblToDate;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtMainCode;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        try {
            String strSQL = "";
            String FromDate = txtFromDate.getText().trim();
            String ToDate = txtToDate.getText().trim();
            String MainCode = txtMainCode.getText().trim();
            String PartyCode = txtPartyCode.getText().trim();
            ResultSet TDSInfo;
            TReportWriter.SimpleDataProvider.TTable objReportData;
            
            if(PartyCode.equals("")) {
                //                strSQL = "SELECT A.VOUCHER_NO, A.VOUCHER_DATE, A.VOUCHER_TYPE, B.MAIN_ACCOUNT_CODE, B.APPLICABLE_AMOUNT, B.PERCENTAGE, B.AMOUNT, A.CHEQUE_NO, A.CHEQUE_DATE, B.INVOICE_NO, B.INVOICE_DATE, B.REMARKS " +
                //                "FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(FromDate)+"' AND A.VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(ToDate)+"' AND A.VOUCHER_NO=B.VOUCHER_NO " +
                //                "AND A.COMPANY_ID=B.COMPANY_ID AND A.APPROVED=1 AND A.CANCELLED=0 AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='' AND B.EFFECT='C' AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ORDER BY A.VOUCHER_DATE ";
                
                strSQL = "SELECT A.VOUCHER_NO, A.VOUCHER_DATE, A.VOUCHER_TYPE, B.MAIN_ACCOUNT_CODE, B.APPLICABLE_AMOUNT, B.PERCENTAGE, B.AMOUNT, A.CHEQUE_NO, A.CHEQUE_DATE, B.INVOICE_NO, B.INVOICE_DATE, B.REMARKS " +
                "FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(FromDate)+"' AND A.VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(ToDate)+"' AND A.VOUCHER_NO=B.VOUCHER_NO " +
                "AND A.COMPANY_ID=B.COMPANY_ID AND A.APPROVED=1 AND A.CANCELLED=0 AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='' AND B.EFFECT='C' ORDER BY A.VOUCHER_DATE ";
                
                
                TDSInfo = data.getResult(strSQL, FinanceGlobal.FinURL);
                TDSInfo.first();
                objReportData = getAllPartyDetail(TDSInfo);
            } else {
                //                strSQL = "SELECT DISTINCT(A.VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(FromDate)+"' AND A.VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(ToDate)+"' AND A.VOUCHER_NO=B.VOUCHER_NO " +
                //                " AND A.COMPANY_ID=B.COMPANY_ID AND A.APPROVED=1 AND A.CANCELLED=0 AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='D' AND A.COMPANY_ID=2  ORDER BY A.VOUCHER_DATE";
                
                strSQL = "SELECT DISTINCT(A.VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(FromDate)+"' AND A.VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(ToDate)+"' AND A.VOUCHER_NO=B.VOUCHER_NO " +
                " AND A.COMPANY_ID=B.COMPANY_ID AND A.APPROVED=1 AND A.CANCELLED=0 AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='D'  ORDER BY A.VOUCHER_DATE";
                
                TDSInfo = data.getResult(strSQL, FinanceGlobal.FinURL);
                TDSInfo.first();
                objReportData = getPartyDetail(TDSInfo);
            }
            
            HashMap Parameters=new HashMap();
            Parameters.put("FROM_DATE",FromDate);
            Parameters.put("TO_DATE",ToDate);
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("ACCOUNT_NAME",MainCode +" - " + clsAccount.getAccountName(MainCode,""));
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptDeductionFromParty.rpt",Parameters,objReportData);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private TReportWriter.SimpleDataProvider.TTable getAllPartyDetail(ResultSet rsTDSInfo) {
        TReportWriter.SimpleDataProvider.TTable objReportData = new TReportWriter.SimpleDataProvider.TTable();
        try {
            objReportData=new TReportWriter.SimpleDataProvider.TTable();
            objReportData.AddColumn("SR_NO");
            objReportData.AddColumn("PARTY_CODE");
            objReportData.AddColumn("PARTY_NAME");
            objReportData.AddColumn("APPLICABLE_AMOUNT");
            objReportData.AddColumn("PERCENTAGE");
            objReportData.AddColumn("AMOUNT");
            objReportData.AddColumn("CHEQUE_NO");
            objReportData.AddColumn("CHEQUE_DATE");
            objReportData.AddColumn("INVOICE_NO");
            objReportData.AddColumn("INVOICE_NAME");
            objReportData.AddColumn("REMARKS");
            objReportData.AddColumn("VOUCHER_NO");
            objReportData.AddColumn("VOUCHER_DATE");
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            objRow=objReportData.newRow();
            objRow.setValue("SR_NO", "");
            objRow.setValue("PARTY_CODE", "");
            objRow.setValue("PARTY_NAME", "");
            objRow.setValue("APPLICABLE_AMOUNT", "");
            objRow.setValue("PERCENTAGE", "");
            objRow.setValue("AMOUNT", "");
            objRow.setValue("CHEQUE_NO", "");
            objRow.setValue("CHEQUE_DATE","0000-00-00");
            objRow.setValue("INVOICE_NO", "");
            objRow.setValue("INVOICE_NAME", "");
            objRow.setValue("REMARKS", "");
            objRow.setValue("VOUCHER_NO", "");
            objRow.setValue("VOUCHER_DATE","0000-00-00");
            objReportData.AddRow(objRow);
            
            int Counter=0;
            if(rsTDSInfo.getRow()>0) {
                while(!rsTDSInfo.isAfterLast()) {
                    String VoucherNo = UtilFunctions.getString(rsTDSInfo,"VOUCHER_NO", "");
                    Counter++;
                    double Amount = UtilFunctions.getDouble(rsTDSInfo,"AMOUNT", 0);
                    ResultSet rsTmp = data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND AMOUNT="+Amount,FinanceGlobal.FinURL);
                    rsTmp.first();
                    String MainCode = UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE", "");
                    String PartyCode = UtilFunctions.getString(rsTmp,"SUB_ACCOUNT_CODE", "");
                    String PartyName = clsAccount.getAccountName(MainCode, PartyCode);
                    //System.out.println("Counter = " + Counter + " MainCode = " + MainCode + " PartyName = " + PartyName + " Amount = " + Amount);
                    if (PartyName.length()>45) {
                        PartyName = PartyName.substring(0,45);
                    }
                    objRow=objReportData.newRow();
                    objRow.setValue("SR_NO", Integer.toString(Counter));
                    int VoucherType = 0;
                    if(PartyCode.equals("")) {
                        objRow.setValue("PARTY_CODE", "Deduction from");
                    } else {
                        objRow.setValue("PARTY_CODE", PartyCode);
                        objRow.setValue("PARTY_NAME", PartyName);
                    }
                    
                    //VoucherType = data.getIntValueFromDB("SELECT VOUCHER_TYPE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                    //if(VoucherType==8) {
                    String HRemarks = data.getStringValueFromDB("SELECT REMARKS FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                    objRow.setValue("REMARKS", HRemarks.replace('\n',' '));
                    /*} else {
                        objRow.setValue("REMARKS", UtilFunctions.getString(rsTmp,"REMARKS", ""));
                    }*/
                    objRow.setValue("APPLICABLE_AMOUNT", Double.toString(UtilFunctions.getDouble(rsTmp,"APPLICABLE_AMOUNT", 0)));
                    objRow.setValue("PERCENTAGE", Double.toString(UtilFunctions.getDouble(rsTmp,"PERCENTAGE", 0)));
                    objRow.setValue("AMOUNT", Double.toString(UtilFunctions.getDouble(rsTmp,"AMOUNT", 0)));
                    if(!UtilFunctions.getString(rsTmp,"CHEQUE_NO", "").trim().equals("")) {
                        objRow.setValue("CHEQUE_NO", UtilFunctions.getString(rsTmp,"CHEQUE_NO", ""));
                        objRow.setValue("CHEQUE_DATE", EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTDSInfo,"CHEQUE_DATE","0000-00-00")));
                    } else {
                        objRow.setValue("CHEQUE_NO", "");
                        objRow.setValue("CHEQUE_DATE","0000-00-00");
                    }
                    if(!UtilFunctions.getString(rsTmp,"INVOICE_NO", "").trim().equals("")) {
                        objRow.setValue("INVOICE_NO", UtilFunctions.getString(rsTmp,"INVOICE_NO", ""));
                        objRow.setValue("INVOICE_DATE", EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTDSInfo,"INVOICE_DATE","0000-00-00")));
                    } else {
                        objRow.setValue("INVOICE_NO", "");
                        objRow.setValue("INVOICE_DATE","0000-00-00");
                    }
                    objRow.setValue("VOUCHER_NO", VoucherNo);
                    objRow.setValue("VOUCHER_DATE", EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTDSInfo,"VOUCHER_DATE","0000-00-00")));
                    objReportData.AddRow(objRow);
                    rsTDSInfo.next();
                }
            }
        } catch(Exception e) {
        }
        return objReportData;
    }
    
    private TReportWriter.SimpleDataProvider.TTable getPartyDetail(ResultSet rsTDSInfo) {
        TReportWriter.SimpleDataProvider.TTable objReportData = new TReportWriter.SimpleDataProvider.TTable();
        try {
            objReportData=new TReportWriter.SimpleDataProvider.TTable();
            objReportData.AddColumn("SR_NO");
            objReportData.AddColumn("PARTY_CODE");
            objReportData.AddColumn("PARTY_NAME");
            objReportData.AddColumn("APPLICABLE_AMOUNT");
            objReportData.AddColumn("PERCENTAGE");
            objReportData.AddColumn("AMOUNT");
            objReportData.AddColumn("CHEQUE_NO");
            objReportData.AddColumn("CHEQUE_DATE");
            objReportData.AddColumn("INVOICE_NO");
            objReportData.AddColumn("INVOICE_NAME");
            objReportData.AddColumn("REMARKS");
            objReportData.AddColumn("VOUCHER_NO");
            objReportData.AddColumn("VOUCHER_DATE");
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            objRow=objReportData.newRow();
            objRow.setValue("SR_NO", "");
            objRow.setValue("PARTY_CODE", "");
            objRow.setValue("PARTY_NAME", "");
            objRow.setValue("APPLICABLE_AMOUNT", "");
            objRow.setValue("PERCENTAGE", "");
            objRow.setValue("AMOUNT", "");
            objRow.setValue("CHEQUE_NO", "");
            objRow.setValue("CHEQUE_DATE","0000-00-00");
            objRow.setValue("INVOICE_NO", "");
            objRow.setValue("INVOICE_NAME", "");
            objRow.setValue("REMARKS", "");
            objRow.setValue("VOUCHER_NO", "");
            objRow.setValue("VOUCHER_DATE","0000-00-00");
            objReportData.AddRow(objRow);
            
            int Counter=0;
            if(rsTDSInfo.getRow()>0) {
                while(!rsTDSInfo.isAfterLast()) {
                    String VoucherNo = UtilFunctions.getString(rsTDSInfo,"VOUCHER_NO", "");
                    if(data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE='"+txtMainCode.getText().trim()+"' AND EFFECT='C' ",FinanceGlobal.FinURL)) {
                        Counter++;
                        ResultSet rsTDS = data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE='"+txtMainCode.getText().trim()+"' AND EFFECT='C' ",FinanceGlobal.FinURL);
                        double Amount = UtilFunctions.getDouble(rsTDS,"AMOUNT", 0);
                        ResultSet rsTmp = data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND AMOUNT="+Amount,FinanceGlobal.FinURL);
                        rsTmp.first();
                        String MainCode = UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE", "");
                        String PartyCode = UtilFunctions.getString(rsTmp,"SUB_ACCOUNT_CODE", "");
                        String PartyName = clsAccount.getAccountName(MainCode, PartyCode);
                        int VoucherType = 0;
                        if(PartyCode.equals("")) {
                            objRow.setValue("PARTY_CODE", MainCode);
                            if(txtMainCode.getText().trim().equals("127176")) {
                                objRow.setValue("PARTY_NAME", "TDS Deduction from");
                            } else if(txtMainCode.getText().trim().equals("127035")) {
                                objRow.setValue("PARTY_NAME", "ESI Deduction from");
                            } else {
                                objRow.setValue("PARTY_NAME", "Deduction from");
                            }
                        } else {
                            objRow.setValue("PARTY_CODE", PartyCode);
                            objRow.setValue("PARTY_NAME", PartyName);
                        }
                        VoucherType = data.getIntValueFromDB("SELECT VOUCHER_TYPE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                        if(VoucherType==8) {
                            String HRemarks = data.getStringValueFromDB("SELECT REMARKS FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                            objRow.setValue("REMARKS", HRemarks);
                        } else {
                            objRow.setValue("REMARKS", UtilFunctions.getString(rsTmp,"REMARKS", ""));
                        }
                        objRow=objReportData.newRow();
                        objRow.setValue("SR_NO", Integer.toString(Counter));
                        objRow.setValue("PARTY_CODE", PartyCode);
                        objRow.setValue("PARTY_NAME", PartyName);
                        objRow.setValue("APPLICABLE_AMOUNT", Double.toString(UtilFunctions.getDouble(rsTmp,"APPLICABLE_AMOUNT", 0)));
                        objRow.setValue("PERCENTAGE", Double.toString(UtilFunctions.getDouble(rsTmp,"PERCENTAGE", 0)));
                        objRow.setValue("AMOUNT", Double.toString(UtilFunctions.getDouble(rsTmp,"AMOUNT", 0)));
                        objRow.setValue("CHEQUE_NO", UtilFunctions.getString(rsTmp,"CHEQUE_NO", ""));
                        objRow.setValue("CHEQUE_DATE", EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTDSInfo,"CHEQUE_DATE","0000-00-00")));
                        objRow.setValue("INVOICE_NO", UtilFunctions.getString(rsTmp,"INVOICE_NO", ""));
                        objRow.setValue("INVOICE_DATE", EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTDSInfo,"INVOICE_DATE","0000-00-00")));
                        objRow.setValue("REMARKS", UtilFunctions.getString(rsTmp,"REMARKS", ""));
                        objRow.setValue("VOUCHER_NO", VoucherNo);
                        objRow.setValue("VOUCHER_DATE", EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTDSInfo,"VOUCHER_DATE","0000-00-00")));
                        objReportData.AddRow(objRow);
                    }
                    rsTDSInfo.next();
                }
            }
        } catch(Exception e) {
        }
        return objReportData;
    }
    
    private boolean Validate() {
        //Form level validations
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter From Date.");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText().trim())) {
            JOptionPane.showMessageDialog(null,"Please Enter valid From Date.");
            return false;
        }
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter To Date.");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText().trim())) {
            JOptionPane.showMessageDialog(null,"Please Enter valid To Date.");
            return false;
        }
        if(txtMainCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Main Account Code.");
            return false;
        }
        return true;
    }
}