/*
 * frmrptOutStanding.java
 *
 * Created on February 17, 2008, 12:31 PM
 */

package EITLERP.Finance.ReportsUI;

/**
 *
 * @author  nisarg
 */
import EITLERP.*;
import EITLERP.Finance.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.io.*;
import java.sql.*;
import TReportWriter.*;
import EITLERP.Utils.SimpleDataProvider.*;
import EITLERP.Finance.Config.*;
import EITLERP.Finance.ReportsUI.*;

public class frmRptOutStanding_OLD extends javax.swing.JApplet {
    
    
    private TReportEngine objEngine=new TReportEngine();
    
    /** Initializes the applet frmrptOutStanding */
    public void init() {
        setSize(400,240);
        initComponents();
        txtAsOnDate.setText(EITLERPGLOBAL.getCurrentDate());
        Bar.setVisible(false);
        lblStatus.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        txtAsOnDate = new javax.swing.JTextField();
        cmdPreview = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtMainCode = new javax.swing.JTextField();
        Bar = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSubCode = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setText("As On Date");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(19, 55, 80, 20);

        getContentPane().add(txtAsOnDate);
        txtAsOnDate.setBounds(97, 56, 100, 19);

        cmdPreview.setText("Preview Report");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(246, 162, 130, 25);

        jLabel2.setText("Main Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(25, 96, 70, 15);

        getContentPane().add(txtMainCode);
        txtMainCode.setBounds(99, 93, 100, 19);

        getContentPane().add(Bar);
        Bar.setBounds(5, 165, 150, 20);

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("PARTY OUTSTANDING STATEMENT");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(9, 8, 230, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 2, 800, 30);

        lblStatus.setText("-");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(6, 147, 150, 15);

        jLabel3.setText("Sub Code");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(26, 121, 70, 15);

        getContentPane().add(txtSubCode);
        txtSubCode.setBounds(100, 118, 100, 19);

    }//GEN-END:initComponents
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        new Thread() {
            
            public void run() {
                
                
                double CrAmount = 0;
                double DrAmount = 0;
                
                try {
                    
                    TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
                    
                    objData.AddColumn("MAIN_CODE");
                    objData.AddColumn("PARTY_CODE");
                    objData.AddColumn("PARTY_NAME");
                    objData.AddColumn("PO_NO");
                    objData.AddColumn("PO_DATE");
                    objData.AddColumn("PAY_DAY");
                    objData.AddColumn("BILL_NO");
                    objData.AddColumn("BILL_DATE");
                    objData.AddColumn("BOOK_CODE");
                    objData.AddColumn("TR_REF");
                    objData.AddColumn("TR_DATE");
                    objData.AddColumn("DEBIT_AMOUNT");
                    objData.AddColumn("CREDIT_AMOUNT");
                    objData.AddColumn("CLOSING_BALANCE");
                    
                    String FromDate=EITLERPGLOBAL.FinFromDateDB;
                    String MainCode = txtMainCode.getText().trim();
                    String Condition="";
                    
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND B.SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }
                    
                    String LastClosingDate=clsAccount.getLastClosingDate(EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText()));
                    FromDate=LastClosingDate;
                    
                    int Max=EITLERP.data.getIntValueFromDB("SELECT COUNT(DISTINCT(SUB_ACCOUNT_CODE)) FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B WHERE SUB_ACCOUNT_CODE <> '' AND A.VOUCHER_DATE>='"+FromDate+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText())+"' AND MAIN_ACCOUNT_CODE = '"+MainCode+"' AND A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE<>'000000' "+Condition,FinanceGlobal.FinURL);
                    int Counter=0;
                    boolean VoucherEntriesFound=false;
                    
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    
                    ResultSet rsParty = EITLERP.data.getResult("SELECT DISTINCT(SUB_ACCOUNT_CODE) FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B WHERE SUB_ACCOUNT_CODE <> '' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText())+"' AND A.VOUCHER_DATE>='"+FromDate+"' AND MAIN_ACCOUNT_CODE = '"+MainCode+"' AND A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE<>'000000' "+Condition,FinanceGlobal.FinURL);
                    
                    while(!rsParty.isAfterLast()) {
                        Counter++;
                        
                        VoucherEntriesFound=false;
                        
                        Bar.setValue(Counter);
                        Bar.repaint();
                        String PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                        
                        lblStatus.setText("Party "+PartyCode);
                        TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                        
                        CrAmount = 0;
                        DrAmount = 0;
                        
                        //Fetch PJVs and find payment voucher against it
                        ResultSet rsVoucher = data.getResult("SELECT A.VOUCHER_NO FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='C' AND A.CANCELLED=0 AND A.VOUCHER_DATE>='"+LastClosingDate+"' GROUP BY A.VOUCHER_NO" ,FinanceGlobal.FinURL);
                        rsVoucher.first();
                        
                        if(rsVoucher.getRow()>0) {
                            while(!rsVoucher.isAfterLast()) {
                                
                                String VoucherNo=rsVoucher.getString("VOUCHER_NO");
                                
                                ResultSet rsOut=data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='C' AND A.CANCELLED=0 AND A.VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                                String InvoiceNo=UtilFunctions.getString(rsOut,"INVOICE_NO","");
                                
                                String strSQL="SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B WHERE A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO AND A.COMPANY_ID=B.COMPANY_ID AND A.CANCELLED=0 AND B.EFFECT='C' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.INVOICE_NO='"+InvoiceNo+"' GROUP BY A.VOUCHER_NO";
                                double AmountPayable=data.getDoubleValueFromDB(strSQL,FinanceGlobal.FinURL);
                                double AmountPaid=0;
                                
                                if(!InvoiceNo.trim().equals("")) {
                                    strSQL="SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B WHERE A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO AND A.COMPANY_ID=B.COMPANY_ID AND A.CANCELLED=0 AND B.EFFECT='D' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.INVOICE_NO='"+InvoiceNo+"' GROUP BY A.VOUCHER_NO";
                                    AmountPaid=data.getDoubleValueFromDB(strSQL,FinanceGlobal.FinURL);
                                }
                                
                                if(AmountPayable>AmountPaid) {
                                    VoucherEntriesFound=true;
                                    objRow=objData.newRow();
                                    objRow.setValue("MAIN_CODE",MainCode);
                                    objRow.setValue("PARTY_CODE",rsOut.getString("SUB_ACCOUNT_CODE"));
                                    objRow.setValue("PARTY_NAME",clsPartyMaster.getAccountName(MainCode, rsOut.getString("SUB_ACCOUNT_CODE")));
                                    objRow.setValue("PO_NO",rsOut.getString("PO_NO"));
                                    objRow.setValue("PO_DATE",EITLERPGLOBAL.formatDate(rsOut.getString("PO_DATE")));
                                    objRow.setValue("PAY_DAY",Integer.toString(EITLERP.data.getIntValueFromDB("SELECT IF(CR_DAYS IS NULL,0,CR_DAYS) CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO ='"+rsOut.getString("PO_NO")+"'",EITLERPGLOBAL.DatabaseURL)));
                                    objRow.setValue("BILL_NO",rsOut.getString("INVOICE_NO"));
                                    objRow.setValue("BILL_DATE",EITLERPGLOBAL.formatDate(rsOut.getString("INVOICE_DATE")));
                                    objRow.setValue("BOOK_CODE",rsOut.getString("BOOK_CODE"));
                                    objRow.setValue("TR_REF",rsOut.getString("VOUCHER_NO"));
                                    objRow.setValue("TR_DATE",EITLERPGLOBAL.formatDate(rsOut.getString("VOUCHER_DATE")));
                                    objRow.setValue("DEBIT_AMOUNT","0");
                                    objRow.setValue("CREDIT_AMOUNT",Double.toString(AmountPayable-AmountPaid));
                                    objRow.setValue("CLOSING_BALANCE","");
                                    
                                    CrAmount+=AmountPayable;
                                    //DrAmount+=AmountPaid;
                                    
                                    objData.AddRow(objRow);
                                }
                                
                                rsVoucher.next();
                            }
                        }
                        
                        
                        //if (VoucherEntriesFound) {
                            //Fetch Payment vouchers having unmatched invoice nos.
                            rsVoucher = data.getResult("SELECT A.*,B.*,SUM(B.AMOUNT) AS TOTAL_AMOUNT FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.COMPANY_ID=B.COMPANY_ID AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText())+"' AND A.VOUCHER_DATE>='"+LastClosingDate+"' AND B.EFFECT='D' AND B.GRN_NO='' GROUP BY B.VOUCHER_NO,B.PO_NO,B.GRN_NO,B.INVOICE_NO ORDER BY A.VOUCHER_NO",FinanceGlobal.FinURL);
                            //String strSQL="SELECT A.*,B.*,SUM(B.AMOUNT) AS TOTAL_AMOUNT FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B WHERE A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO AND B.EFFECT='D' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.CANCELLED=0 AND A.VOUCHER_DATE <= '"+EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText())+"' AND A.VOUCHER_DATE>='"+LastClosingDate+"' GROUP BY B.VOUCHER_NO,B.PO_NO,B.GRN_NO,B.INVOICE_NO ORDER BY A.VOUCHER_NO";
                            //rsVoucher = data.getResult(strSQL,FinanceGlobal.FinURL);
                            rsVoucher.first();
                            
                            if(rsVoucher.getRow()>0) {
                                while(!rsVoucher.isAfterLast()) {
                                    
                                    
                                    VoucherEntriesFound=true;
                                    
                                    objRow=objData.newRow();
                                    objRow.setValue("MAIN_CODE",MainCode);
                                    objRow.setValue("PARTY_CODE",PartyCode);
                                    objRow.setValue("PARTY_NAME",clsPartyMaster.getAccountName(MainCode, PartyCode));
                                    objRow.setValue("PO_NO",rsVoucher.getString("PO_NO"));
                                    objRow.setValue("PO_DATE",EITLERPGLOBAL.formatDate(rsVoucher.getString("PO_DATE")));
                                    objRow.setValue("PAY_DAY","0");
                                    objRow.setValue("BILL_NO",rsVoucher.getString("INVOICE_NO"));
                                    objRow.setValue("BILL_DATE",rsVoucher.getString("INVOICE_DATE"));
                                    objRow.setValue("BOOK_CODE",rsVoucher.getString("BOOK_CODE"));
                                    objRow.setValue("TR_REF",rsVoucher.getString("VOUCHER_NO"));
                                    objRow.setValue("TR_DATE",EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE")));
                                    objRow.setValue("DEBIT_AMOUNT",Double.toString(rsVoucher.getDouble("TOTAL_AMOUNT")));
                                    objRow.setValue("CREDIT_AMOUNT","0");
                                    objRow.setValue("CLOSING_BALANCE","");
                                    
                                    DrAmount+=rsVoucher.getDouble("TOTAL_AMOUNT");
                                    
                                    objData.AddRow(objRow);
                                    
                                    rsVoucher.next();
                                }
                                
                            }
                        //}
                        
                        if(VoucherEntriesFound) {
                            objRow = objData.newRow();
                            objRow.setValue("MAIN_CODE",MainCode);
                            objRow.setValue("PARTY_CODE",rsParty.getString("SUB_ACCOUNT_CODE"));
                            objRow.setValue("PARTY_NAME","");
                            objRow.setValue("PO_NO","PARTY TOTAL");
                            objRow.setValue("CREDIT_AMOUNT",Double.toString(EITLERPGLOBAL.round(CrAmount,2)));
                            objRow.setValue("DEBIT_AMOUNT",Double.toString(EITLERPGLOBAL.round(DrAmount,2)));
                            
                            double ClosingBalance=0;
                            
                            if(CrAmount>DrAmount) {
                                ClosingBalance= -1 * (EITLERPGLOBAL.round(CrAmount-DrAmount,2));
                            } else {
                                if(DrAmount>CrAmount) {
                                    ClosingBalance= EITLERPGLOBAL.round(DrAmount-CrAmount,2);
                                } else {
                                    ClosingBalance= EITLERPGLOBAL.round(DrAmount-CrAmount,2);
                                }
                            }
                            
                            if(ClosingBalance<0) {
                                objRow.setValue("CLOSING_BALANCE", Math.abs(ClosingBalance) +" Cr" );
                            }
                            else {
                                objRow.setValue("CLOSING_BALANCE",Math.abs(ClosingBalance)+" Dr");
                            }
                            
                            objRow.setValue("CREDIT_AMOUNT",Double.toString(EITLERPGLOBAL.round(Math.abs(CrAmount),2)));
                            
                            objData.AddRow(objRow);
                        }
                        
                        
                        rsParty.next();
                    }
                    
                    HashMap Parameters=new HashMap();
                    Parameters.put("OUT_DATE",txtAsOnDate.getText());
                    Parameters.put("RUN_DATE",EITLERPGLOBAL.getCurrentDate());
                    objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptPartyOutStanding.rpt",Parameters,objData);
                    
                    
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
                
                Bar.setVisible(false);
                lblStatus.setVisible(false);
            };
        }.start();
        
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtAsOnDate;
    private javax.swing.JTextField txtMainCode;
    private javax.swing.JTextField txtSubCode;
    // End of variables declaration//GEN-END:variables
    
}
