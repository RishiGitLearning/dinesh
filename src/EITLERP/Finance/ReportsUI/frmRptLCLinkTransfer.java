/*
 * frmpartyinfo.java
 *
 * Created on November 28, 2007, 12:12 PM
 */

package EITLERP.Finance.ReportsUI;

import javax.swing.*;
import EITLERP.* ;
import java.sql.*;
import EITLERP.Finance.*;
import java.util.*;
import EITLERP.Sales.clsSalesInvoice;
import EITLERP.Sales.clsSalesParty;
import java.io.*;
import java.awt.*;
import java.math.BigDecimal;

/**
 *
 * @author  root
 */
public class frmRptLCLinkTransfer extends javax.swing.JApplet {
    
    /** Initializes the applet frmpartyinfo */
    public void init() {
        setSize(450,200);
        initComponents();
        //FormatMonthGrid();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cmdTransfer = new javax.swing.JButton();
        lblFromDate = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        lblToDate = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        lblSaveAs = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel5.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(0, 153, 204));
        jPanel5.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel4.setText("TRANSFER LC PAYMENT DATA");
        jPanel5.add(jLabel4);
        jLabel4.setBounds(9, 8, 280, 15);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(-1, -1, 460, 30);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        cmdTransfer.setText("Transfer");
        cmdTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTransferActionPerformed(evt);
            }
        });

        jPanel1.add(cmdTransfer);
        cmdTransfer.setBounds(140, 70, 110, 25);

        lblFromDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromDate.setText("From Date :");
        jPanel1.add(lblFromDate);
        lblFromDate.setBounds(5, 10, 80, 15);

        txtFromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromDateActionPerformed(evt);
            }
        });

        jPanel1.add(txtFromDate);
        txtFromDate.setBounds(90, 10, 90, 19);

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To Date :");
        jPanel1.add(lblToDate);
        lblToDate.setBounds(190, 10, 70, 15);

        jPanel1.add(txtToDate);
        txtToDate.setBounds(270, 10, 90, 19);

        lblSaveAs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSaveAs.setText("Save as :");
        jPanel1.add(lblSaveAs);
        lblSaveAs.setBounds(5, 40, 80, 15);

        jPanel1.add(txtFile);
        txtFile.setBounds(90, 40, 270, 20);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton1);
        jButton1.setBounds(365, 40, 35, 21);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 40, 410, 110);

    }//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileDialog FileDialog=new FileDialog(findParentFrame(this));
        FileDialog.show();
        txtFile.setText(FileDialog.getDirectory()+FileDialog.getFile());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTransferActionPerformed
        if ( ! Validate()) {
            return;
        }
        //GenerateMonthGrid((new clsPartyInfo()).getMonthDetailCenvat(maincodetxt.getText().trim(),subcodetxt.getText().trim(),txtFromDate.getText().trim(),txtToDate.getText().trim(),true));
        GenerateReport();
    }//GEN-LAST:event_cmdTransferActionPerformed
    
    private void txtFromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFromDateActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
    }//GEN-LAST:event_formMouseClicked
    
    public void GenerateReport(){
        ResultSet rsInvoice = null;
        ResultSet rsVoucher = null;
        String InvoiceNo = "";
        String InvoiceDate = "";
        String FromDate = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
        String ToDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
        try{
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
            
            String SQL = "SELECT INVOICE_NO,INVOICE_DATE FROM DINESHMILLS.D_SAL_INVOICE_HEADER " +
            "WHERE PAYMENT_TERM_CODE LIKE '7%' AND APPROVED=1 AND CANCELLED=0 AND INVOICE_DATE>='"+FromDate+"' AND INVOICE_DATE<='"+ToDate+"' " +
            "ORDER BY INVOICE_DATE,INVOICE_NO";
            rsInvoice = data.getResult(SQL);
            rsInvoice.first();
            
            Connection Conn=data.getConn(FinanceGlobal.FinURL);
            Statement Stmt=Conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsLink=Stmt.executeQuery("SELECT * FROM FINANCE.D_FIN_LC_LINK WHERE VOUCHER_NO='1' ");
            
            while(!rsInvoice.isAfterLast()) {
                InvoiceNo = rsInvoice.getString("INVOICE_NO");
                InvoiceDate = rsInvoice.getString("INVOICE_DATE");
                SQL = "SELECT A.VOUCHER_NO,A.BOOK_CODE,B.SUB_ACCOUNT_CODE,B.INVOICE_NO,B.INVOICE_DATE,SUM(B.AMOUNT) AS AMOUNT " +
                "FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_TYPE<>5 " +
                "AND B.SUB_ACCOUNT_CODE<>'' AND B.INVOICE_DATE='"+InvoiceDate+"' AND B.INVOICE_NO='"+InvoiceNo+"' " +
                "GROUP BY A.VOUCHER_NO " +
                "ORDER BY A.VOUCHER_DATE,A.VOUCHER_NO";
                rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                rsVoucher.first();
                if(rsVoucher.getRow()>0) {
                    while(!rsVoucher.isAfterLast()) {
                        String VoucherNo = rsVoucher.getString("VOUCHER_NO");
                        String VoucherDate = data.getStringValueFromDB("SELECT VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                        String BookCode = rsVoucher.getString("BOOK_CODE");
                        String PartyCode = rsVoucher.getString("SUB_ACCOUNT_CODE");
                        double Amount = rsVoucher.getDouble("AMOUNT");
                        String AgAlpha = clsSalesParty.getAgentAlpha(PartyCode);
                        if(data.IsRecordExist("SELECT * FROM D_FIN_LC_LINK WHERE AMOUNT="+Amount+" AND INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+PartyCode+"' AND VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL)) {
                            rsVoucher.next();
                            continue;
                        }
                        String AgSrNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM D_SAL_INVOICE_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND INVOICE_DATE='"+InvoiceDate+"' AND INVOICE_NO ='"+InvoiceNo+"' ");
                        if(AgSrNo.length()<4) {
                            AgSrNo = EITLERPGLOBAL.padLeftEx(AgSrNo, "0", 4);
                        } else if(AgSrNo.length()>4) {
                            AgSrNo = AgSrNo.substring(AgSrNo.length()-4);
                        }
                        String Y1Y2 = EITLERPGLOBAL.getFinYearStartDate(InvoiceDate).substring(2,4) + EITLERPGLOBAL.getFinYearEndDate(InvoiceDate).substring(2,4);
                        System.out.println(PartyCode+AgSrNo+Y1Y2+BookCode+"  "+EITLERPGLOBAL.padLeftEx(VoucherNo.substring(VoucherNo.length()-5), "0", 6)+VoucherDate.substring(8,10)+VoucherDate.substring(5,7)+VoucherDate.substring(2,4)+getAmount(Amount));
                        aFile.write(PartyCode+AgSrNo+Y1Y2+BookCode+"  "+EITLERPGLOBAL.padLeftEx(VoucherNo.substring(VoucherNo.length()-5), "0", 6)+VoucherDate.substring(8,10)+VoucherDate.substring(5,7)+VoucherDate.substring(2,4)+getAmount(Amount));
                        aFile.newLine();
                        rsLink.moveToInsertRow();
                        rsLink.updateInt("SR_NO", data.getIntValueFromDB("SELECT MAX(SR_NO) FROM D_FIN_LC_LINK ",FinanceGlobal.FinURL)+1);
                        rsLink.updateString("VOUCHER_NO", VoucherNo);
                        rsLink.updateString("INVOICE_NO", InvoiceNo);
                        rsLink.updateString("INVOICE_DATE", InvoiceDate);
                        rsLink.updateString("LINK_NO", clsSalesInvoice.getAgentAlphaSrNo(InvoiceNo, InvoiceDate));
                        rsLink.updateString("PARTY_CODE", PartyCode);
                        rsLink.updateDouble("AMOUNT", Amount);
                        rsLink.updateString("TRANSFER_DATE", EITLERPGLOBAL.getCurrentDateDB());
                        rsLink.insertRow();
                        
                        rsVoucher.next();
                    }
                }
                rsInvoice.next();
            }
            aFile.close();
        }catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    
    private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter from Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter To Date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtFile.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Select file path.");
            return false;
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdTransfer;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblSaveAs;
    private javax.swing.JLabel lblToDate;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    private String  getAmount(double amt) {
        String TrAmount = "";
        try {
            TrAmount  = new BigDecimal(amt).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
            StringTokenizer st = new StringTokenizer(TrAmount, ".");
            String Amount1 = st.nextToken();
            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
            TrAmount = Amount1 + Amount2;
            if(TrAmount.length()>12) {
                TrAmount=TrAmount.substring(0,12);
            } else {
                TrAmount=EITLERPGLOBAL.padLeft(12,TrAmount,"0");
            }
        } catch(Exception e) {
            e.printStackTrace();
            return TrAmount;
        }
        return TrAmount;
    }
}
