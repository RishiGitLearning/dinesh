/*
 * frmRptGRNInfo.java
 *
 * Created on April 16, 2008, 12:01 PM
 */

package EITLERP.Finance.ReportsUI;

/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import TReportWriter.*;
import java.util.*;

public class frmRptGRNInfo extends javax.swing.JApplet {
    
    private TReportEngine objEngine=new TReportEngine();
    private EITLComboModel cmbItemTypeModel=new EITLComboModel();
    int GRNType =0;
    double sumVouValue = 0.0;
    double sumGRNValue = 0.0;
    double sumGRNCenvateAmt = 0.0;
    double sumVouCenvateAmt = 0.0;
    double sumGRNFreightAmt = 0.0;
    double sumVouFreightAmt = 0.0;
    
    String strItem = "";
    TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    /** Initializes the applet frmRptGRNInfo */
    public void init() {
        setSize(504,270);
        initComponents();
        lblStatus.setVisible(false);
        Bar.setVisible(false);
        GenerateCombo();
        int ItemType = EITLERPGLOBAL.getComboCode(cmbItemType);
        if (ItemType == 1) {
            rbBothGRN.setVisible(true);
            rbSparesGRN.setVisible(true);
            rbStoresGRN.setVisible(true);
            rbBothGroup.setVisible(true);
            rbMatchedGrp.setVisible(true);
            rbUnmatchedGrp.setVisible(true);
        }
        else {
            rbBothGRN.setVisible(false);
            rbSparesGRN.setVisible(false);
            rbStoresGRN.setVisible(false);
            rbBothGroup.setVisible(false);
            rbMatchedGrp.setVisible(false);
            rbUnmatchedGrp.setVisible(false);
        }
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        btngrpGRN = new javax.swing.ButtonGroup();
        btngrpGroup = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cmdPreview = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        Bar = new javax.swing.JProgressBar();
        cmbItemType = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        rbStoresGRN = new javax.swing.JRadioButton();
        rbSparesGRN = new javax.swing.JRadioButton();
        rbBothGRN = new javax.swing.JRadioButton();
        rbMatchedGrp = new javax.swing.JRadioButton();
        rbUnmatchedGrp = new javax.swing.JRadioButton();
        rbBothGroup = new javax.swing.JRadioButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("GRN - PJV Link Report");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(9, 8, 230, 15);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(1, 2, 800, 30);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel2.setText("From Date:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(25, 100, 60, 20);

        txtFromDate.setColumns(10);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(85, 100, 90, 19);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel3.setText("To");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(190, 100, 20, 20);

        txtToDate.setColumns(10);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(220, 100, 90, 20);

        jLabel1.setText("GRN Period");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 80, 90, 15);

        cmdPreview.setText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(340, 200, 88, 25);

        lblStatus.setText("...");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(10, 190, 180, 15);

        Bar.setStringPainted(true);
        getContentPane().add(Bar);
        Bar.setBounds(10, 210, 180, 20);

        cmbItemType.setAutoscrolls(true);
        cmbItemType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemTypeActionPerformed(evt);
            }
        });

        getContentPane().add(cmbItemType);
        cmbItemType.setBounds(85, 42, 190, 24);

        jLabel10.setText("Item Type");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 50, 80, 15);

        rbStoresGRN.setText("Stores GRNs");
        btngrpGRN.add(rbStoresGRN);
        getContentPane().add(rbStoresGRN);
        rbStoresGRN.setBounds(10, 130, 110, 23);

        rbSparesGRN.setText("Spares GRNs");
        btngrpGRN.add(rbSparesGRN);
        getContentPane().add(rbSparesGRN);
        rbSparesGRN.setBounds(140, 130, 110, 23);

        rbBothGRN.setSelected(true);
        rbBothGRN.setText("Both Stores & Spares GRNs");
        btngrpGRN.add(rbBothGRN);
        getContentPane().add(rbBothGRN);
        rbBothGRN.setBounds(280, 130, 200, 23);

        rbMatchedGrp.setText("Matched Group");
        btngrpGroup.add(rbMatchedGrp);
        getContentPane().add(rbMatchedGrp);
        rbMatchedGrp.setBounds(10, 160, 120, 23);

        rbUnmatchedGrp.setText("Unmatched Group");
        btngrpGroup.add(rbUnmatchedGrp);
        getContentPane().add(rbUnmatchedGrp);
        rbUnmatchedGrp.setBounds(140, 160, 140, 23);

        rbBothGroup.setSelected(true);
        rbBothGroup.setText("Matched & Unmatched Group");
        btngrpGroup.add(rbBothGroup);
        getContentPane().add(rbBothGroup);
        rbBothGroup.setBounds(280, 160, 210, 23);

    }//GEN-END:initComponents
    
    private void cmbItemTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemTypeActionPerformed
        // TODO add your handling code here:
        int ItemType = EITLERPGLOBAL.getComboCode(cmbItemType);
        if (ItemType == 1) {
            rbBothGRN.setVisible(true);
            rbSparesGRN.setVisible(true);
            rbStoresGRN.setVisible(true);
            rbBothGroup.setVisible(true);
            rbMatchedGrp.setVisible(true);
            rbUnmatchedGrp.setVisible(true);
        }
        else {
            rbBothGRN.setVisible(false);
            rbSparesGRN.setVisible(false);
            rbStoresGRN.setVisible(false);
            rbBothGroup.setVisible(false);
            rbMatchedGrp.setVisible(false);
            rbUnmatchedGrp.setVisible(false);
        }
    }//GEN-LAST:event_cmbItemTypeActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        GRNType=EITLERPGLOBAL.getComboCode(cmbItemType);
        
        GenerateReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.ButtonGroup btngrpGRN;
    private javax.swing.ButtonGroup btngrpGroup;
    private javax.swing.JComboBox cmbItemType;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JRadioButton rbBothGRN;
    private javax.swing.JRadioButton rbBothGroup;
    private javax.swing.JRadioButton rbMatchedGrp;
    private javax.swing.JRadioButton rbSparesGRN;
    private javax.swing.JRadioButton rbStoresGRN;
    private javax.swing.JRadioButton rbUnmatchedGrp;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        try {
            
            cmbItemTypeModel=new EITLComboModel();
            cmbItemType.removeAll();
            cmbItemType.setModel(cmbItemTypeModel);
            
            ComboData objData=new ComboData();
            objData.Code=1;
            objData.Text="General";
            
            cmbItemTypeModel.addElement(objData);
            
            objData=new ComboData();
            objData.Code=2;
            objData.Text="Raw Material";
            
            cmbItemTypeModel.addElement(objData);
            
            objData=new ComboData();
            objData.Code=3;
            objData.Text="Job Work";
            
            cmbItemTypeModel.addElement(objData);
            
            
        }
        catch(Exception e) {
            
        }
    }
    
    private void GenerateReport() {
        
        new Thread() {
            
            public void run() {
                
                try {
                    sumVouValue = 0.0;
                    sumGRNValue = 0.0;
                    sumGRNCenvateAmt = 0.0;
                    sumVouCenvateAmt = 0.0;
                    sumGRNFreightAmt = 0.0;
                    sumVouFreightAmt = 0.0;
                    
                    objData=new TReportWriter.SimpleDataProvider.TTable();
                    
                    objData.AddColumn("DOCUMENT_TYPE");
                    objData.AddColumn("GRN_NO");
                    objData.AddColumn("GRN_DATE");
                    objData.AddColumn("GRN_VALUE");
                    objData.AddColumn("GRN_STORES_VALUE");
                    objData.AddColumn("GRN_SPARES_VALUE");
                    objData.AddColumn("GRN_CENVATE_AMT");
                    objData.AddColumn("GRN_FREIGHT_AMT");
                    objData.AddColumn("GRN_NET_AMT");
                    objData.AddColumn("SUPPLIER_CODE");
                    objData.AddColumn("SUPPLIER_NAME");
                    objData.AddColumn("VOUCHER_NO");
                    objData.AddColumn("VOUCHER_DATE");
                    objData.AddColumn("VOUCHER_VALUE");
                    objData.AddColumn("VOUCHER_STORES_VALUE");
                    objData.AddColumn("VOUCHER_SPARES_VALUE");
                    objData.AddColumn("VOUCHER_DIFFERENCE");
                    objData.AddColumn("VOUCHER_CENVATE_AMT");
                    objData.AddColumn("VOUCHER_FREIGHT_AMT");
                    objData.AddColumn("VOUCHER_NET_AMT");
                    objData.AddColumn("DIFFERENCE");
                    
                    objData.AddColumn("PO_NO");
                    
                    lblStatus.setVisible(true);
                    Bar.setVisible(true);
                    
                    if(GRNType == 1) {
                        GRNGeneral();
                    }
                    
                    if(GRNType == 2) {
                        GRNRawMaterial();
                    }
                    
                    if (GRNType == 3) {
                        GRNJobWork();
                    }
                    
                    lblStatus.setVisible(false);
                    Bar.setVisible(false);
                    
                    HashMap Parameters=new HashMap();
                    Parameters.put("FROM_DATE", txtFromDate.getText());
                    Parameters.put("TO_DATE", txtToDate.getText());
                    Parameters.put("S_VOUCHER_VALUE", Double.toString(EITLERPGLOBAL.round(sumVouValue,2)));
                    Parameters.put("S_GRN_VALUE",Double.toString(EITLERPGLOBAL.round(sumGRNValue,2)));
                    Parameters.put("S_GRN_CENVATE_AMT",Double.toString(EITLERPGLOBAL.round(sumGRNCenvateAmt,2)));
                    Parameters.put("S_VOU_CENVATE_AMT",Double.toString(EITLERPGLOBAL.round(sumVouCenvateAmt,2)));
                    if (GRNType == 1) {
                        Parameters.put("S_GRN_FREIGHT_AMT", Double.toString(EITLERPGLOBAL.round(sumGRNFreightAmt, 2)));
                        Parameters.put("S_VOU_FREIGHT_AMT", Double.toString(EITLERPGLOBAL.round(sumVouFreightAmt, 2)));
                        objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/GRNPJVLink_Gen.rpt",Parameters , objData);
                        //objEngine.PreviewReport("http://localhost:8080/SDMLERP/EITLERP/Reports/finance/GRNPJVLink1.rpt",Parameters , objData);
                    }
                    else {
                        objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/GRNPJVLink1.rpt",Parameters , objData);
                    }
                    //System.out.println("sumVouValue="+sumVouValue);
                    //System.out.println("sumGRNValue="+sumGRNValue);
                    
                    //objEngine.PreviewReport("http://localhost:8080/SDMLERP/EITLERP/Reports/finance/GRNPJVLink1.rpt",Parameters , objData);
                    
                }
                catch(Exception e) {
                    lblStatus.setVisible(false);
                    Bar.setVisible(false);
                    
                    e.printStackTrace();
                }
            };
        }.start();
        
    }
    
    private void GenerateItemQry(String Condition) {
        try {
            strItem=" AND (";
            String strQry = "SELECT CATEGORY_ID, CATEGORY_NAME, FROM_ITEM_ID, TO_ITEM_ID FROM D_COM_GRNPJV_ITEM_CATEGORY " + Condition;
            ResultSet rsTmp = null;
            rsTmp = data.getResult(strQry);
            if (rsTmp.getRow() > 0) {
                rsTmp.first();
                while (!rsTmp.isAfterLast()) {
                    String FromItemID = rsTmp.getString("FROM_ITEM_ID").trim();
                    String ToItemID = rsTmp.getString("TO_ITEM_ID").trim();
                    if (ToItemID.trim().equals("")) {
                        strItem = strItem + " ITEM_ID LIKE '"+FromItemID+"%' OR ";
                        
                    }
                    else {
                        strItem = strItem + " (ITEM_ID >= '"+FromItemID+"' AND ITEM_ID <= '" + ToItemID +"') OR ";
                    }
                    rsTmp.next();
                }
            }
            strItem = strItem.substring(0,strItem.lastIndexOf("OR"));
            strItem = strItem + ") ";
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void GRNGeneral() {
        //************************************ GRN GENERAL *************************************//
        //--------------------------------------------------------------------------------------//
        int Max=0;
        int Counter=0;
        ResultSet rsTmp;
        String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
        String NewGRNNo = "", GRN_No="";
        try {
                        
            Max=data.getIntValueFromDB("SELECT COUNT(*) AS THE_COUNT FROM D_INV_GRN_HEADER WHERE GRN_TYPE=1 AND GRN_DATE>='"+FromDate+"' AND GRN_DATE<='"+ToDate+"' AND APPROVED=1 AND CANCELLED=0  ");
            Bar.setMaximum(Max);
            Bar.setMinimum(0);
            Counter=0;
            String MainCode = " ", StoreMainCode = " ", SpareMainCode = " ";
            String strCondition = "";
            
            if (rbStoresGRN.isSelected() || rbBothGRN.isSelected()) {
                strCondition = " WHERE COMPANY_ID= " + EITLERPGLOBAL.gCompanyID + " AND MAIN_CATEGORY_ID=1 ";
                ResultSet rsMainCode = data.getResult("SELECT DISTINCT MAIN_ACCOUNT_CODE FROM D_COM_GRNPJV_ITEM_CATEGORY " + strCondition);
                if (rsMainCode.getRow()>0) {
                    rsMainCode.first();
                    StoreMainCode = " AND (";
                    
                    while (!rsMainCode.isAfterLast()) {
                        StoreMainCode = StoreMainCode + " MAIN_ACCOUNT_CODE LIKE '" + rsMainCode.getString("MAIN_ACCOUNT_CODE").trim() + "%' OR ";
                        rsMainCode.next();
                    }
                    StoreMainCode = StoreMainCode.substring(0,StoreMainCode.lastIndexOf("OR")) + ") ";
                    
                }
            }
            if (rbSparesGRN.isSelected() || rbBothGRN.isSelected()) {
                strCondition = " WHERE COMPANY_ID= " + EITLERPGLOBAL.gCompanyID + " AND MAIN_CATEGORY_ID=2 ";
                ResultSet rsMainCode = data.getResult("SELECT DISTINCT MAIN_ACCOUNT_CODE FROM D_COM_GRNPJV_ITEM_CATEGORY " + strCondition);
                if (rsMainCode.getRow()>0) {
                    rsMainCode.first();
                    SpareMainCode = " AND (";
                    
                    while (!rsMainCode.isAfterLast()) {
                        SpareMainCode = SpareMainCode + " MAIN_ACCOUNT_CODE LIKE '" + rsMainCode.getString("MAIN_ACCOUNT_CODE").trim() + "%' OR ";
                        rsMainCode.next();
                    }
                    SpareMainCode = SpareMainCode.substring(0,SpareMainCode.lastIndexOf("OR")) + ") ";
                    
                }
            }
            
            rsTmp=data.getResult("SELECT * FROM D_INV_GRN_HEADER WHERE GRN_TYPE=1 AND GRN_DATE>='"+FromDate+"' AND GRN_DATE<='"+ToDate+"'  AND APPROVED=1 AND CANCELLED=0 ");
            rsTmp.first();
            
            System.out.println("GRN Gen.");
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    GRN_No=rsTmp.getString("GRN_NO");
                    Counter++;
                    Bar.setValue(Counter);
                    
                    String GRNNo=rsTmp.getString("GRN_NO");
                    String GRNDate=EITLERPGLOBAL.formatDate(rsTmp.getString("GRN_DATE"));
                    String SupplierCode=rsTmp.getString("SUPP_ID");
                    String SupplierName=clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,SupplierCode);
                    String strStoresGRNQuery="";
                    String strSparesGRNQuery="";
                    
                    if (!SupplierCode.trim().equals("888888") && !SupplierCode.trim().equals("999999")) {
                        if ((rbStoresGRN.isSelected()) || (rbBothGRN.isSelected())) {
                            strCondition = " WHERE COMPANY_ID= " + EITLERPGLOBAL.gCompanyID + " AND MAIN_CATEGORY_ID=1 ";
                            GenerateItemQry(strCondition);
                            strStoresGRNQuery = "SELECT ROUND(SUM(LANDED_RATE*QTY),2) AS GRN_VALUE FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"' " + strItem;                            
                        }
                        if ((rbSparesGRN.isSelected()) || (rbBothGRN.isSelected())) {
                            strCondition = " WHERE COMPANY_ID= " + EITLERPGLOBAL.gCompanyID + " AND MAIN_CATEGORY_ID=2 ";
                            GenerateItemQry(strCondition);                            
                            strSparesGRNQuery = "SELECT ROUND(SUM(LANDED_RATE*QTY),2) AS GRN_VALUE FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"' " + strItem;
                        }
                        
                        double StoresGRNValue=data.getDoubleValueFromDB(strStoresGRNQuery);
                        double SparesGRNValue=data.getDoubleValueFromDB(strSparesGRNQuery);
                        double GRNValue=StoresGRNValue+SparesGRNValue;
                        
                        if(GRNValue>0) {
                            double GRNCenvateValue = data.getDoubleValueFromDB("SELECT ROUND(SUM(COLUMN_8_AMT),2) FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"' ");
                            if (GRNCenvateValue==0) {
                                GRNCenvateValue = data.getDoubleValueFromDB("SELECT ROUND(SUM(COLUMN_8_AMT),2) FROM D_INV_GRN_HEADER WHERE GRN_NO='"+GRNNo+"' ");
                            }
                            
                            GRNValue = GRNValue + GRNCenvateValue;
                            
                            int RowCounter=0;
                            lblStatus.setText("GRN "+GRNNo);
                            String strCond = "";
                            if (rbMatchedGrp.isSelected()) {
                                strCond = " AND A.APPROVED = 1 ";
                            }
                            else if (rbUnmatchedGrp.isSelected()) {
                                strCond = " AND A.APPROVED = 0 ";
                            }
                            else if (rbBothGroup.isSelected()) {
                                strCond = " ";
                            }
                            
                            String strSQL = "SELECT DISTINCT(A.VOUCHER_NO),A.VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_TYPE=1 AND B.MODULE_ID=7 AND A.CANCELLED=0 AND B.GRN_NO='"+GRNNo+"' AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" " + strCond;
                            ResultSet rsVoucher=data.getResult(strSQL,FinanceGlobal.FinURL);
                            
                            rsVoucher.first();
                            if(rsVoucher.getRow()>0) {
                                int cnt = 0;
                                while(!rsVoucher.isAfterLast()) {
                                    
                                    String VoucherNo=rsVoucher.getString("VOUCHER_NO");
                                    String VoucherDate=EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE"));
                                    RowCounter++;
                                    
                                    double VoucherValue=0;//data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE EFFECT='D' AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                                    double StoresValue = 0;
                                    double SparesValue = 0;
                                    if ((rbStoresGRN.isSelected()) || (rbBothGRN.isSelected())) {
                                        StoresValue = data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE EFFECT='D' "+ StoreMainCode +" AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                                    }
                                    if ((rbSparesGRN.isSelected()) || (rbBothGRN.isSelected())) {
                                        SparesValue = data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE EFFECT='D' "+ SpareMainCode +" AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                                    }
                                    
                                    VoucherValue = StoresValue + SparesValue;
                                    double DiffValue=VoucherValue-(StoresValue+SparesValue);
                                    
                                    int Approved=data.getIntValueFromDB("SELECT APPROVED FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                                    if(Approved==0) {
                                        VoucherValue=0;
                                        StoresValue=0;
                                        SparesValue=0;
                                        DiffValue=0;
                                    }
                                    
                                    String PONo=data.getStringValueFromDB("SELECT B.PO_NO FROM D_INV_GRN_DETAIL A,D_INV_MIR_DETAIL B WHERE A.MIR_NO=B.MIR_NO AND A.MIR_SR_NO=B.SR_NO AND A.MIR_NO<>''  AND A.GRN_NO='"+GRNNo+"'");
                                    //if (GRNValue > 100000) {
                                    TReportWriter.SimpleDataProvider.TRow objRow=new TReportWriter.SimpleDataProvider.TRow();
                                    objRow.setValue("DOCUMENT_TYPE", "GRN Gen");
                                    
                                    double GRN_Cenvate_Amt=0,GRN_Net_Amt=0;
                                    
                                    if(RowCounter>1) {
                                        objRow.setValue("GRN_NO","");
                                        objRow.setValue("GRN_DATE","0000-00-00");
                                        objRow.setValue("GRN_VALUE","0");
                                        objRow.setValue("GRN_STORES_VALUE","0");
                                        objRow.setValue("GRN_SPARES_VALUE","0");
                                        objRow.setValue("SUPPLIER_CODE","");
                                        objRow.setValue("SUPPLIER_NAME","");
                                        objRow.setValue("GRN_FREIGHT_AMT","0");
                                        
                                        GRN_Cenvate_Amt=0;
                                        GRN_Net_Amt=0;
                                        
                                        objRow.setValue("GRN_CENVATE_AMT",Double.toString(GRN_Cenvate_Amt));
                                        objRow.setValue("GRN_NET_AMT",Double.toString(GRN_Net_Amt));
                                    }
                                    else {
                                        objRow.setValue("GRN_NO",GRNNo);
                                        objRow.setValue("GRN_DATE",GRNDate);
                                        objRow.setValue("GRN_VALUE",Double.toString(GRNValue));
                                        objRow.setValue("GRN_STORES_VALUE",Double.toString(StoresGRNValue));
                                        objRow.setValue("GRN_SPARES_VALUE",Double.toString(SparesGRNValue));
                                        objRow.setValue("SUPPLIER_CODE",SupplierCode);
                                        objRow.setValue("SUPPLIER_NAME",SupplierName);
                                        double GRNFreightValue = data.getDoubleValueFromDB("SELECT ROUND(SUM(COLUMN_6_AMT),2) FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"' ");
                                        if (GRNFreightValue==0) {
                                            GRNFreightValue = data.getDoubleValueFromDB("SELECT ROUND(SUM(COLUMN_6_AMT),2) FROM D_INV_GRN_HEADER WHERE GRN_NO='"+GRNNo+"' ");
                                        }
                                        objRow.setValue("GRN_FREIGHT_AMT", Double.toString(GRNFreightValue));
                                        sumGRNFreightAmt += GRNFreightValue;
                                        GRN_Cenvate_Amt=GRNCenvateValue;
                                        GRN_Net_Amt=GRNValue - GRN_Cenvate_Amt;
                                        
                                        objRow.setValue("GRN_CENVATE_AMT",Double.toString(GRN_Cenvate_Amt));
                                        objRow.setValue("GRN_NET_AMT",Double.toString(GRN_Net_Amt));
                                        
                                        if (! NewGRNNo.trim().equals(GRN_No.trim())) {
                                            sumGRNValue += GRNValue;
                                            sumGRNCenvateAmt += GRN_Cenvate_Amt;
                                        }
                                        NewGRNNo = GRN_No;
                                    }
                                    objRow.setValue("VOUCHER_NO",VoucherNo);
                                    objRow.setValue("VOUCHER_DATE",VoucherDate);
                                    objRow.setValue("VOUCHER_VALUE",Double.toString(VoucherValue));
                                    objRow.setValue("VOUCHER_STORES_VALUE",Double.toString(StoresValue));
                                    objRow.setValue("VOUCHER_SPARES_VALUE",Double.toString(SparesValue));
                                    objRow.setValue("VOUCHER_DIFFERENCE",Double.toString(DiffValue));
                                    objRow.setValue("PO_NO",PONo);
                                    double Amount = 0;
                                    if (cnt == 0) {
                                        String sPONo = data.getStringValueFromDB("SELECT PO_NO FROM D_INV_GRN_DETAIL  WHERE GRN_NO='"+GRNNo+"' ");
//                                        String strQry = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B "+
//                                        " WHERE A.CANCELLED=0 AND A.APPROVED=1 AND A.VOUCHER_TYPE="+ FinanceGlobal.TYPE_CASH_VOUCHER + " " +
//                                        " AND A.VOUCHER_NO=B.VOUCHER_NO AND B.PO_NO='"+sPONo+"' AND B.GRN_NO='"+GRNNo+"' AND B.MODULE_ID=7 AND EFFECT='C' ";
//                                        Amount = data.getDoubleValueFromDB(strQry,FinanceGlobal.FinURL);
//                                        if (Amount == 0) {
                                            String strQry = "SELECT MIR_NO FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"' ";
                                            String MIRNo = data.getStringValueFromDB(strQry);
//                                            strQry = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B "+
//                                            " WHERE A.CANCELLED=0 AND A.APPROVED=1 AND A.VOUCHER_TYPE="+ FinanceGlobal.TYPE_CASH_VOUCHER + " " +
//                                            " AND A.VOUCHER_NO=B.VOUCHER_NO AND B.PO_NO='"+sPONo+"' AND B.GRN_NO='"+MIRNo+"' AND B.MODULE_ID=5 AND EFFECT='C' ";

                                            strQry = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B "+
                                            " WHERE A.CANCELLED=0 AND A.APPROVED=1  " +
                                            " AND A.VOUCHER_NO=B.VOUCHER_NO AND B.PO_NO='"+sPONo+"' AND B.GRN_NO='"+MIRNo+"' AND B.MODULE_ID=5 AND EFFECT='C' ";

                                            
                                            Amount  = data.getDoubleValueFromDB(strQry,FinanceGlobal.FinURL);
//                                        }
                                    }
                                    objRow.setValue("VOUCHER_FREIGHT_AMT", Double.toString(Amount));
                                    sumVouFreightAmt += Amount;
                                    sumVouValue += VoucherValue;
                                    
                                    double Vou_Cenvate_Amt=0,Vou_Net_Amt=0,Difference=0;
                                    String str="";
                                    str = "SELECT SUM(AMOUNT) FROM  D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO = '"+ VoucherNo +"' " +
                                    " AND MAIN_ACCOUNT_CODE IN ('421014','405021','421038','201193') AND EFFECT='C' GROUP BY VOUCHER_NO";

                                    Vou_Cenvate_Amt = data.getDoubleValueFromDB(str,FinanceGlobal.FinURL);
                                    Vou_Net_Amt = VoucherValue - Vou_Cenvate_Amt;
                                    
                                    objRow.setValue("VOUCHER_CENVATE_AMT", Double.toString(Vou_Cenvate_Amt));
                                    objRow.setValue("VOUCHER_NET_AMT",Double.toString(Vou_Net_Amt));
                                    
                                    Difference = GRN_Net_Amt - Vou_Net_Amt;
                                    objRow.setValue("DIFFERENCE", Double.toString(Difference));
                                    
                                    sumVouCenvateAmt += Vou_Cenvate_Amt;
                                    
                                    objData.AddRow(objRow);
                                    //}
                                    cnt++;
                                    rsVoucher.next();
                                }
                                
                            }
                            else {
                                System.out.println(GRNNo);
                                
                                String PONo=data.getStringValueFromDB("SELECT B.PO_NO FROM D_INV_GRN_DETAIL A,D_INV_MIR_DETAIL B WHERE A.MIR_NO=B.MIR_NO AND A.MIR_SR_NO=B.SR_NO AND A.MIR_NO<>''  AND A.GRN_NO='"+GRNNo+"'");
                                //if (GRNValue > 100000) {
                                TReportWriter.SimpleDataProvider.TRow objRow=new TReportWriter.SimpleDataProvider.TRow();
                                objRow.setValue("DOCUMENT_TYPE", "GRN Gen");
                                objRow.setValue("GRN_NO",GRNNo);
                                objRow.setValue("GRN_DATE",GRNDate);
                                objRow.setValue("GRN_VALUE",Double.toString(GRNValue));
                                objRow.setValue("GRN_STORES_VALUE",Double.toString(StoresGRNValue));
                                objRow.setValue("GRN_SPARES_VALUE",Double.toString(SparesGRNValue));
                                double GRNFreightValue = data.getDoubleValueFromDB("SELECT ROUND(SUM(COLUMN_6_AMT),2) FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"' ");
                                if (GRNFreightValue==0) {
                                    GRNFreightValue = data.getDoubleValueFromDB("SELECT ROUND(SUM(COLUMN_6_AMT),2) FROM D_INV_GRN_HEADER WHERE GRN_NO='"+GRNNo+"' ");
                                }
                                objRow.setValue("GRN_FREIGHT_AMT", Double.toString(GRNFreightValue));
                                sumGRNFreightAmt += GRNFreightValue;
                                
                                double GRN_Cenvate_Amt=0,GRN_Net_Amt=0;
                                
                                GRN_Cenvate_Amt=GRNCenvateValue;
                                GRN_Net_Amt=GRNValue - GRN_Cenvate_Amt;
                                
                                objRow.setValue("GRN_CENVATE_AMT",Double.toString(GRN_Cenvate_Amt));
                                objRow.setValue("GRN_NET_AMT",Double.toString(GRN_Net_Amt));
                                
                                objRow.setValue("SUPPLIER_CODE",SupplierCode);
                                objRow.setValue("SUPPLIER_NAME",SupplierName);
                                objRow.setValue("VOUCHER_NO","CASH VOUCHER");
                                objRow.setValue("VOUCHER_DATE","0000-00-00");
                                objRow.setValue("VOUCHER_VALUE","0");
                                objRow.setValue("VOUCHER_STORES_VALUE","0");
                                objRow.setValue("VOUCHER_SPARES_VALUE","0");
                                objRow.setValue("VOUCHER_DIFFERENCE","0");
                                String sPONo = data.getStringValueFromDB("SELECT PO_NO FROM D_INV_GRN_DETAIL  WHERE GRN_NO='"+GRNNo+"' ");
                                String strQry = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B "+
                                " WHERE A.CANCELLED=0 AND A.APPROVED=1 AND A.VOUCHER_TYPE="+ FinanceGlobal.TYPE_CASH_VOUCHER + " " +
                                " AND A.VOUCHER_NO=B.VOUCHER_NO AND B.PO_NO='"+sPONo+"' AND B.GRN_NO='"+GRNNo+"' AND B.MODULE_ID=7 AND EFFECT='C' ";
                                double Amount = data.getDoubleValueFromDB(strQry,FinanceGlobal.FinURL);
                                if (Amount == 0) {
                                    strQry = "SELECT MIR_NO FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"' ";
                                    String MIRNo = data.getStringValueFromDB(strQry);
                                    strQry = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B "+
                                    " WHERE A.CANCELLED=0 AND A.APPROVED=1 AND A.VOUCHER_TYPE="+ FinanceGlobal.TYPE_CASH_VOUCHER + " " +
                                    " AND A.VOUCHER_NO=B.VOUCHER_NO AND B.PO_NO='"+sPONo+"' AND B.GRN_NO='"+MIRNo+"' AND B.MODULE_ID=5 AND EFFECT='C' ";
                                    Amount  = data.getDoubleValueFromDB(strQry,FinanceGlobal.FinURL);
                                }
                                objRow.setValue("VOUCHER_FREIGHT_AMT", Double.toString(Amount));
                                sumVouFreightAmt += Amount;
                                
                                double Vou_Cenvate_Amt=0,Vou_Net_Amt=0,Difference=0;
                                
                                Vou_Cenvate_Amt = 0;
                                Vou_Net_Amt = 0 - Vou_Cenvate_Amt;
                                
                                objRow.setValue("VOUCHER_CENVATE_AMT", Double.toString(Vou_Cenvate_Amt));
                                objRow.setValue("VOUCHER_NET_AMT",Double.toString(Vou_Net_Amt));
                                
                                Difference = GRN_Net_Amt - Vou_Net_Amt;
                                objRow.setValue("DIFFERENCE", Double.toString(Difference));
                                
                                if (! NewGRNNo.trim().equals(GRN_No.trim())) {
                                    sumGRNValue += GRNValue;
                                    sumGRNCenvateAmt += GRN_Cenvate_Amt;
                                }
                                NewGRNNo = GRN_No;
        
                                objRow.setValue("PO_NO",PONo);
                                
                                objData.AddRow(objRow);
                                //}
                            }
                        }
                    }
                    rsTmp.next();
                }
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
        //================================== END OF GRN GENERAL ===================================//
    }
    
    private void GRNRawMaterial() {
        //************************************ GRN RAW MATERIAL *************************************//
        //--------------------------------------------------------------------------------------//
        int Max=0;
        int Counter=0;
        ResultSet rsTmp;
        String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
        if(java.sql.Date.valueOf(FromDate).before(java.sql.Date.valueOf("2009-10-01"))) {
            JOptionPane.showMessageDialog(this,"For Raw Material reports from date must be grater then or equals to 01/10/2009.");
            return;
        }
        String NewGRNNo = "", GRN_No="";
        Max=data.getIntValueFromDB("SELECT COUNT(*) FROM D_INV_GRN_HEADER WHERE GRN_TYPE=2 AND GRN_DATE>='"+FromDate+"' " +
        "AND GRN_DATE<='"+ToDate+"' AND PAYMENT_TYPE=0 AND CANCELLED=0  AND SUPP_ID<>'888888' AND SUPP_ID<>'999999' AND GRN_NO='R000534' ");
        Bar.setMaximum(Max);
        Bar.setMinimum(0);
        Counter=0;
        
        System.out.println("GRN Raw Material");
        try {
            rsTmp=data.getResult("SELECT * FROM D_INV_GRN_HEADER WHERE GRN_TYPE=2 AND GRN_DATE>='"+FromDate+"' " +
            "AND GRN_DATE<='"+ToDate+"'  AND PAYMENT_TYPE=0  AND CANCELLED=0  AND SUPP_ID<>'888888' AND SUPP_ID<>'999999' AND GRN_NO='R000534' ");
            rsTmp.first();
            NewGRNNo = "";
            GRN_No = "";
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    GRN_No = rsTmp.getString("GRN_NO");
                    
                    Counter++;
                    Bar.setValue(Counter);
                    
                    String GRNNo=rsTmp.getString("GRN_NO");
                    String GRNDate=EITLERPGLOBAL.formatDate(rsTmp.getString("GRN_DATE"));
                    String SupplierCode=rsTmp.getString("SUPP_ID");
                    String SupplierName=clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,SupplierCode);
                    double GRNValue=data.getDoubleValueFromDB("SELECT ROUND(SUM(LANDED_RATE*QTY),2) AS GRN_VALUE FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"'");
                    double GRNCenvateValue = data.getDoubleValueFromDB("SELECT ROUND(SUM(COLUMN_8_AMT),2) FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"' ");
                    GRNValue = GRNValue + GRNCenvateValue;
                    String PONo=data.getStringValueFromDB("SELECT B.PO_NO FROM D_INV_GRN_DETAIL A,D_INV_MIR_DETAIL B WHERE A.MIR_NO=B.MIR_NO AND A.MIR_SR_NO=B.SR_NO AND A.MIR_NO<>''  AND A.GRN_NO='"+GRNNo+"'");
                    if(GRNValue>0) {
                        lblStatus.setText("GRN : "+GRNNo);
                        
                        ResultSet rsVoucher=data.getResult("SELECT DISTINCT(A.VOUCHER_NO),A.VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                        "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.COMPANY_ID=B.COMPANY_ID AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_TYPE=1 " +
                        "AND B.MODULE_ID=8 AND B.GRN_NO='"+GRNNo+"' AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID,FinanceGlobal.FinURL);
                        rsVoucher.first();
                        if(rsVoucher.getRow()>0) {
                            while(!rsVoucher.isAfterLast()) {
                                String VoucherNo=rsVoucher.getString("VOUCHER_NO");
                                String VoucherDate=EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE"));
                                
                                double VoucherValue=data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE EFFECT='C' " +
                                "AND MAIN_ACCOUNT_CODE<>'' AND SUB_ACCOUNT_CODE<>'' AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                                
                                TReportWriter.SimpleDataProvider.TRow objRow=new TReportWriter.SimpleDataProvider.TRow();
                                objRow.setValue("DOCUMENT_TYPE", "GRN RM");
                                objRow.setValue("GRN_NO",GRNNo);
                                objRow.setValue("GRN_DATE",GRNDate);
                                objRow.setValue("GRN_VALUE",Double.toString(GRNValue));
                                
                                double GRN_Cenvate_Amt=0,GRN_Net_Amt=0;
                                
                                GRN_Cenvate_Amt=GRNCenvateValue;
                                GRN_Net_Amt=GRNValue - GRN_Cenvate_Amt;
                                
                                objRow.setValue("GRN_CENVATE_AMT",Double.toString(GRN_Cenvate_Amt));
                                objRow.setValue("GRN_NET_AMT",Double.toString(GRN_Net_Amt));
                                
                                objRow.setValue("SUPPLIER_CODE",SupplierCode);
                                objRow.setValue("SUPPLIER_NAME",SupplierName);
                                objRow.setValue("VOUCHER_NO",VoucherNo);
                                objRow.setValue("VOUCHER_DATE",VoucherDate);
                                objRow.setValue("VOUCHER_VALUE",Double.toString(VoucherValue));
                                
                                double Vou_Cenvate_Amt=0,Vou_Net_Amt=0,Difference=0;
                                String str="";
                                str = "SELECT SUM(AMOUNT) FROM  D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO = '"+ VoucherNo +"' " +
                                " AND MAIN_ACCOUNT_CODE IN ('403036') AND EFFECT='C' GROUP BY VOUCHER_NO";
                                Vou_Cenvate_Amt = data.getDoubleValueFromDB(str,FinanceGlobal.FinURL);
                                Vou_Net_Amt = VoucherValue - Vou_Cenvate_Amt;
                                
                                objRow.setValue("VOUCHER_CENVATE_AMT", Double.toString(Vou_Cenvate_Amt));
                                objRow.setValue("VOUCHER_NET_AMT",Double.toString(Vou_Net_Amt));
                                
                                Difference = GRN_Net_Amt - Vou_Net_Amt;
                                objRow.setValue("DIFFERENCE", Double.toString(Difference));
                                
                                
                                sumVouValue += VoucherValue;
                                sumVouCenvateAmt += Vou_Cenvate_Amt;
                                if (! NewGRNNo.trim().equals(GRN_No.trim())) {
                                    sumGRNValue += GRNValue;
                                    sumGRNCenvateAmt += GRN_Cenvate_Amt;
                                }
                                NewGRNNo = GRN_No;
                                objRow.setValue("PO_NO",PONo);
                                objData.AddRow(objRow);
                                rsVoucher.next();
                            }
                        }
                        else {
                            
                            System.out.println(GRNNo);
                            
                            TReportWriter.SimpleDataProvider.TRow objRow=new TReportWriter.SimpleDataProvider.TRow();
                            objRow.setValue("DOCUMENT_TYPE", "GRN RM");
                            objRow.setValue("GRN_NO",GRNNo);
                            objRow.setValue("GRN_DATE",GRNDate);
                            objRow.setValue("GRN_VALUE",Double.toString(GRNValue));
                            double GRN_Cenvate_Amt=0,GRN_Net_Amt=0;
                            
                            GRN_Cenvate_Amt=GRNCenvateValue;
                            GRN_Net_Amt=GRNValue - GRN_Cenvate_Amt;
                            
                            objRow.setValue("GRN_CENVATE_AMT",Double.toString(GRN_Cenvate_Amt));
                            objRow.setValue("GRN_NET_AMT",Double.toString(GRN_Net_Amt));
                            
                            objRow.setValue("SUPPLIER_CODE",SupplierCode);
                            objRow.setValue("SUPPLIER_NAME",SupplierName);
                            objRow.setValue("VOUCHER_NO","");
                            objRow.setValue("VOUCHER_DATE","0000-00-00");
                            objRow.setValue("VOUCHER_VALUE","0");
                            
                            double Vou_Cenvate_Amt=0,Vou_Net_Amt=0,Difference=0;
                            Vou_Cenvate_Amt = 0;
                            Vou_Net_Amt = 0 - Vou_Cenvate_Amt;
                            
                            objRow.setValue("VOUCHER_CENVATE_AMT", Double.toString(Vou_Cenvate_Amt));
                            objRow.setValue("VOUCHER_NET_AMT",Double.toString(Vou_Net_Amt));
                            
                            Difference = GRN_Net_Amt - Vou_Net_Amt;
                            objRow.setValue("DIFFERENCE", Double.toString(Difference));
                            
                            
                            if (! NewGRNNo.trim().equals(GRN_No.trim())) {
                                sumGRNValue += GRNValue;
                                sumGRNCenvateAmt += GRN_Cenvate_Amt;
                            }
                            NewGRNNo = GRN_No;
                            objRow.setValue("PO_NO",PONo);
                            objData.AddRow(objRow);
                        }
                    }
                    
                    rsTmp.next();
                }
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
        //================================== END OF GRN RAW MATERIAL ===================================//
    }
    
    private void GRNJobWork() {
        //************************************ JOB WORK *************************************//
        //--------------------------------------------------------------------------------------//
        int Max=0;
        int Counter=0;
        ResultSet rsTmp;
        String FromDate=EITLERPGLOBAL.formatDateDB(txtFromDate.getText());
        String ToDate=EITLERPGLOBAL.formatDateDB(txtToDate.getText());
        String NewGRNNo = "", GRN_No="";
        
        Max=data.getIntValueFromDB("SELECT COUNT(*) FROM D_INV_JOB_HEADER WHERE JOB_DATE>='"+FromDate+"' AND JOB_DATE<='"+ToDate+"'  AND PAYMENT_TYPE=0  AND APPROVED=1 AND CANCELLED=0");
        Bar.setMaximum(Max);
        Bar.setMinimum(0);
        Counter=0;
        
        System.out.println("Jobwork");
        try {
            rsTmp=data.getResult("SELECT * FROM D_INV_JOB_HEADER WHERE JOB_DATE>='"+FromDate+"' AND JOB_DATE<='"+ToDate+"'  AND PAYMENT_TYPE=0  AND APPROVED=1 AND CANCELLED=0");
            rsTmp.first();
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    GRN_No=rsTmp.getString("JOB_NO");
                    Counter++;
                    Bar.setValue(Counter);
                    
                    String GRNNo=rsTmp.getString("JOB_NO");
                    String GRNDate=EITLERPGLOBAL.formatDate(rsTmp.getString("JOB_DATE"));
                    String SupplierCode=rsTmp.getString("SUPP_ID");
                    String SupplierName=clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,SupplierCode);
                    double GRNValue=data.getDoubleValueFromDB("SELECT ROUND(SUM(LANDED_RATE*QTY),2) AS GRN_VALUE FROM D_INV_JOB_DETAIL WHERE JOB_NO='"+GRNNo+"'");
                    double GRNCenvateValue = data.getDoubleValueFromDB("SELECT ROUND(SUM(COLUMN_7_AMT),2) FROM D_INV_JOB_DETAIL WHERE JOB_NO='"+GRNNo+"' ");
                    GRNValue = GRNValue + GRNCenvateValue;
                    lblStatus.setText("Jobwork "+GRNNo);
                    
                    if(GRNValue>0) {
                        ResultSet rsVoucher=data.getResult("SELECT DISTINCT(A.VOUCHER_NO),A.VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_TYPE=1 AND A.APPROVED=1 AND A.CANCELLED=0 AND B.MODULE_ID=48 AND B.GRN_NO='"+GRNNo+"' AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID,FinanceGlobal.FinURL);
                        rsVoucher.first();
                        if(rsVoucher.getRow()>0) {
                            while(!rsVoucher.isAfterLast()) {
                                String VoucherNo=rsVoucher.getString("VOUCHER_NO");
                                String VoucherDate=EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE"));
                                double VoucherValue=data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE EFFECT='D' AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                                
                                TReportWriter.SimpleDataProvider.TRow objRow=new TReportWriter.SimpleDataProvider.TRow();
                                objRow.setValue("DOCUMENT_TYPE", "Jobwork");
                                objRow.setValue("GRN_NO",GRNNo);
                                objRow.setValue("GRN_DATE",GRNDate);
                                objRow.setValue("GRN_VALUE",Double.toString(GRNValue));
                                
                                double GRN_Cenvate_Amt=0,GRN_Net_Amt=0;
                                
                                GRN_Cenvate_Amt=GRNCenvateValue;
                                GRN_Net_Amt=GRNValue - GRN_Cenvate_Amt;
                                
                                objRow.setValue("GRN_CENVATE_AMT",Double.toString(GRN_Cenvate_Amt));
                                objRow.setValue("GRN_NET_AMT",Double.toString(GRN_Net_Amt));
                                
                                objRow.setValue("SUPPLIER_CODE",SupplierCode);
                                objRow.setValue("SUPPLIER_NAME",SupplierName);
                                objRow.setValue("VOUCHER_NO",VoucherNo);
                                objRow.setValue("VOUCHER_DATE",VoucherDate);
                                objRow.setValue("VOUCHER_VALUE",Double.toString(VoucherValue));
                                
                                double Vou_Cenvate_Amt=0,Vou_Net_Amt=0,Difference=0;
                                String str="";
                                str = "SELECT SUM(AMOUNT) FROM  D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO = '"+ VoucherNo +"' " +
                                " AND MAIN_ACCOUNT_CODE IN ('421014','405021','421038','201193') AND EFFECT='C' GROUP BY VOUCHER_NO";
                                Vou_Cenvate_Amt = data.getDoubleValueFromDB(str,FinanceGlobal.FinURL);
                                Vou_Net_Amt = VoucherValue - Vou_Cenvate_Amt;
                                
                                objRow.setValue("VOUCHER_CENVATE_AMT", Double.toString(Vou_Cenvate_Amt));
                                objRow.setValue("VOUCHER_NET_AMT",Double.toString(Vou_Net_Amt));
                                
                                Difference = GRN_Net_Amt - Vou_Net_Amt;
                                objRow.setValue("DIFFERENCE", Double.toString(Difference));
                                
                                sumVouValue += VoucherValue;
                                sumVouCenvateAmt += Vou_Cenvate_Amt;
                                if (! NewGRNNo.trim().equals(GRN_No.trim())) {
                                    sumGRNValue += GRNValue;
                                    sumGRNCenvateAmt += GRN_Cenvate_Amt;
                                }
                                NewGRNNo = GRN_No;
                                
                                objData.AddRow(objRow);
                                
                                rsVoucher.next();
                            }
                        }
                        else {
                            
                            System.out.println(GRNNo);
                            
                            TReportWriter.SimpleDataProvider.TRow objRow=new TReportWriter.SimpleDataProvider.TRow();
                            objRow.setValue("DOCUMENT_TYPE", "Jobwork");
                            objRow.setValue("GRN_NO",GRNNo);
                            objRow.setValue("GRN_DATE",GRNDate);
                            objRow.setValue("GRN_VALUE",Double.toString(GRNValue));
                            
                            double GRN_Cenvate_Amt=0,GRN_Net_Amt=0;
                            
                            GRN_Cenvate_Amt=GRNCenvateValue;
                            GRN_Net_Amt=GRNValue - GRN_Cenvate_Amt;
                            
                            objRow.setValue("GRN_CENVATE_AMT",Double.toString(GRN_Cenvate_Amt));
                            objRow.setValue("GRN_NET_AMT",Double.toString(GRN_Net_Amt));
                            
                            objRow.setValue("SUPPLIER_CODE",SupplierCode);
                            objRow.setValue("SUPPLIER_NAME",SupplierName);
                            objRow.setValue("VOUCHER_NO","");
                            objRow.setValue("VOUCHER_DATE","0000-00-00");
                            objRow.setValue("VOUCHER_VALUE","0");
                            
                            double Vou_Cenvate_Amt=0,Vou_Net_Amt=0,Difference=0;
                            Vou_Cenvate_Amt = 0;
                            Vou_Net_Amt = 0 - Vou_Cenvate_Amt;
                            
                            objRow.setValue("VOUCHER_CENVATE_AMT", Double.toString(Vou_Cenvate_Amt));
                            objRow.setValue("VOUCHER_NET_AMT",Double.toString(Vou_Net_Amt));
                            
                            Difference = GRN_Net_Amt - Vou_Net_Amt;
                            objRow.setValue("DIFFERENCE", Double.toString(Difference));
                            
                            if (! NewGRNNo.trim().equals(GRN_No.trim())) {
                                sumGRNValue += GRNValue;
                                sumGRNCenvateAmt += GRN_Cenvate_Amt;
                            }
                            NewGRNNo = GRN_No;
                            
                            objData.AddRow(objRow);
                        }
                    }
                    rsTmp.next();
                }
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
        //================================== END OF JOB WORK ===================================//
    }
}
