

package EITLERP.Finance.ReportsUI;


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;

public class frmRptGrossInterestCalculation extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbMonthModel;
    private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    /** Initializes the applet frmRptGRNInfo */
    public void init() {
        setSize(410,245);
        
        initComponents();
        
        GenerateCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblMonth = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        cmdPreview = new javax.swing.JButton();
        cmbMonth = new javax.swing.JComboBox();
        cmbReportType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("GROSS INTEREST CALCULATION");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(10, 10, 300, 14);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 400, 30);

        lblMonth.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMonth.setText("Month :");
        getContentPane().add(lblMonth);
        lblMonth.setBounds(0, 50, 90, 20);

        lblYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblYear.setText("Year :");
        getContentPane().add(lblYear);
        lblYear.setBounds(200, 50, 60, 20);

        txtYear.setColumns(10);
        getContentPane().add(txtYear);
        txtYear.setBounds(260, 50, 90, 20);

        cmdPreview.setText("Preview Report");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(110, 110, 130, 23);

        getContentPane().add(cmbMonth);
        cmbMonth.setBounds(100, 50, 90, 22);

        getContentPane().add(cmbReportType);
        cmbReportType.setBounds(100, 80, 90, 22);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Receipt Type :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 80, 90, 14);

    }//GEN-END:initComponents
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        GenerateReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbMonth;
    private javax.swing.JComboBox cmbReportType;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
    
    
    
    private void GenerateReport() {
        
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("SCHEME");
            objReportData.AddColumn("RECEIPT_NO");
            objReportData.AddColumn("LEGACY_NO");
            objReportData.AddColumn("RECEIPT_DATE");
            objReportData.AddColumn("DUE_DATE");
            objReportData.AddColumn("AMOUNT");
            objReportData.AddColumn("PARTY_CODE");
            objReportData.AddColumn("APPLICANT_NAME");
            objReportData.AddColumn("MAIN_CODE");
            objReportData.AddColumn("JAN");
            objReportData.AddColumn("JAN_INT");
            objReportData.AddColumn("FEB");
            objReportData.AddColumn("FEB_INT");
            objReportData.AddColumn("MAR");
            objReportData.AddColumn("MAR_INT");
            objReportData.AddColumn("APR");
            objReportData.AddColumn("APR_INT");
            objReportData.AddColumn("MAY");
            objReportData.AddColumn("MAY_INT");
            objReportData.AddColumn("JUN");
            objReportData.AddColumn("JUN_INT");
            objReportData.AddColumn("JUL");
            objReportData.AddColumn("JUL_INT");
            objReportData.AddColumn("AUG");
            objReportData.AddColumn("AUG_INT");
            objReportData.AddColumn("SEP");
            objReportData.AddColumn("SEP_INT");
            objReportData.AddColumn("OCT");
            objReportData.AddColumn("OCT_INT");
            objReportData.AddColumn("NOV");
            objReportData.AddColumn("NOV_INT");
            objReportData.AddColumn("DEC");
            objReportData.AddColumn("DEC_INT");
            objReportData.AddColumn("GROSS");
            objReportData.AddColumn("GROSS_INT");
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("SCHEME","");
            objOpeningRow.setValue("RECEIPT_NO","");
            objOpeningRow.setValue("LEGACY_NO","");
            objOpeningRow.setValue("RECEIPT_DATE","0000-00-00");
            objOpeningRow.setValue("DUE_DATE","0000-00-00");
            objOpeningRow.setValue("AMOUNT","");
            objOpeningRow.setValue("PARTY_CODE","");
            objOpeningRow.setValue("APPLICANT_NAME","");
            objOpeningRow.setValue("MAIN_CODE","");
            objOpeningRow.setValue("JAN","");
            objOpeningRow.setValue("JAN_INT","");
            objOpeningRow.setValue("FEB","");
            objOpeningRow.setValue("FEB_INT","");
            objOpeningRow.setValue("MAR","");
            objOpeningRow.setValue("MAR_INT","");
            objOpeningRow.setValue("APR","");
            objOpeningRow.setValue("APR_INT","");
            objOpeningRow.setValue("MAY","");
            objOpeningRow.setValue("MAY_INT","");
            objOpeningRow.setValue("JUN","");
            objOpeningRow.setValue("JUN_INT","");
            objOpeningRow.setValue("JUL","");
            objOpeningRow.setValue("JUL_INT","");
            objOpeningRow.setValue("AUG","");
            objOpeningRow.setValue("AUG_INT","");
            objOpeningRow.setValue("SEP","");
            objOpeningRow.setValue("SEP_INT","");
            objOpeningRow.setValue("OCT","");
            objOpeningRow.setValue("OCT_INT","");
            objOpeningRow.setValue("NOV","");
            objOpeningRow.setValue("NOV_INT","");
            objOpeningRow.setValue("DEC","");
            objOpeningRow.setValue("DEC_INT","");
            
            
            int nMonth = cmbMonth.getSelectedIndex() + 1;
            int type = cmbReportType.getSelectedIndex() + 1;
            
            String strSQL = "SELECT DMST.RECEIPT_NO,DMST.LEGACY_NO,DMST.RECEIPT_DATE,DMST.AMOUNT,DMST.PARTY_CODE,DMST.APPLICANT_NAME,DMST.MATURITY_DATE AS DUE_DATE, "+
            "CASE WHEN SMST.SCHEME_TYPE=1 THEN 'FD'  WHEN SMST.SCHEME_TYPE=2 THEN 'LD'  "+
            "WHEN SMST.SCHEME_TYPE=3 THEN 'CD' ELSE '' END SCHEME, "+
            "CASE WHEN SMST.SCHEME_TYPE=1 THEN SMST.DEPOSIT_MAIN_ACCOUNT_CODE "+
            "WHEN SMST.SCHEME_TYPE=2 THEN SMST.DEPOSIT_MAIN_ACCOUNT_CODE "+
            "WHEN SMST.SCHEME_TYPE=3 THEN IF(DMST.DEPOSITER_CATEGORY = 2,'115201','115160')  END MAIN_CODE, "+
            "DMST.EFFECTIVE_DATE,DMST.INT_CALC_DATE,DMST.INTEREST_RATE "+
            "FROM D_FD_DEPOSIT_MASTER DMST,D_FD_SCHEME_MASTER SMST "+
            "WHERE DMST.SCHEME_ID = SMST.SCHEME_ID "+
            "AND DMST.DEPOSIT_ENTRY_TYPE = '" + type + "' "+
            "AND MONTH(DMST.RECEIPT_DATE) = "+ nMonth +" "+
            "AND YEAR(DMST.RECEIPT_DATE) = "+ txtYear.getText().trim() + " "+
            "ORDER BY DMST.APPLICANT_NAME";
            
            ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsTmp.first();
            
            double gross=0.0;
            double gross_int=0.0;
            String FDLDintdate1="";
            String FDLDintdate2="";
            double ob =0.0;
            String tempob="";
            String tempobint="";
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("SCHEME",UtilFunctions.getString(rsTmp,"SCHEME",""));
                    objRow.setValue("RECEIPT_NO",UtilFunctions.getString(rsTmp,"RECEIPT_NO",""));
                    objRow.setValue("LEGACY_NO",UtilFunctions.getString(rsTmp,"LEGACY_NO",""));
                    objRow.setValue("RECEIPT_DATE", EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"RECEIPT_DATE","0000-00-00")));
                    objRow.setValue("DUE_DATE",UtilFunctions.getString(rsTmp,"DUE_DATE","0000-00-00"));
                    objRow.setValue("AMOUNT",UtilFunctions.getString(rsTmp,"AMOUNT",""));
                    objRow.setValue("PARTY_CODE",UtilFunctions.getString(rsTmp,"PARTY_CODE",""));
                    objRow.setValue("APPLICANT_NAME",UtilFunctions.getString(rsTmp,"APPLICANT_NAME",""));
                    
                    
                    String main_code = UtilFunctions.getString(rsTmp,"MAIN_CODE","");
                    String sub_code = UtilFunctions.getString(rsTmp,"PARTY_CODE","");
                    String on_date = data.getStringValueFromDB("SELECT LAST_DAY(CONCAT('" + txtYear.getText().trim() + "','-','"+nMonth+"-01')) FROM DUAL",FinanceGlobal.FinURL);
                    String scheme = UtilFunctions.getString(rsTmp,"SCHEME","");
                    String ReceiptNo = UtilFunctions.getString(rsTmp,"RECEIPT_NO","");
                    String eDate  = UtilFunctions.getString(rsTmp,"EFFECTIVE_DATE","0000-00-00");
                    String interestCalcDate = UtilFunctions.getString(rsTmp,"INT_CALC_DATE","0000-00-00");
                    String MaturityDate = UtilFunctions.getString(rsTmp,"DUE_DATE","0000-00-00");
                    double Amount = rsTmp.getDouble("AMOUNT");
                    double Rate = rsTmp.getDouble("INTEREST_RATE");
                    double interestAmount=0.0;
                    
                    
                    
                    int tmp=nMonth;
                    int tmpyear= EITLERPGLOBAL.FinYearFrom;
                    
                    
                    
                    System.out.println("--------------------------------------");
                    //end for loop 12 month
                    for(int i=1;i<=12;i++){
                        
                        String monthstart = data.getStringValueFromDB("SELECT CONCAT('" + tmpyear + "','-',LPAD('" + tmp + "',2,'0'),'-','01') FROM DUAL",FinanceGlobal.FinURL);
                        String monthend = data.getStringValueFromDB("SELECT LAST_DAY(CONCAT('" + tmpyear + "','-','" + tmp + "-01')) FROM DUAL",FinanceGlobal.FinURL);
                        FDLDintdate1= tmpyear + "-09-30";
                        FDLDintdate2= tmpyear + "-03-31";
                        
                        
                        if(scheme.equals("CD")) {
                            
                            System.out.println("start date = " + monthstart + "end date=" + monthend);
                            System.out.println("Receipt no " + ReceiptNo + "eDate=" + eDate + " " + "intDate" + interestCalcDate);
                            System.out.println("Maturity Date" + MaturityDate);
                            
                            
                            if(EITLERPGLOBAL.ConvertDate(interestCalcDate).after(EITLERPGLOBAL.ConvertDate(monthstart)) ) {
                                if(EITLERPGLOBAL.ConvertDate(interestCalcDate).before(EITLERPGLOBAL.ConvertDate(monthend))) {
                                    System.out.println("6 month Interest Calculation");
                                    interestCalcDate = clsCalcInterest.addMonthToDate(interestCalcDate,6);
                                    //eDate = clsCalcInterest.addMonthToDate(eDate,6);
                                }
                                
                            }
                            else{
                                if(EITLERPGLOBAL.ConvertDate(MaturityDate).after(EITLERPGLOBAL.ConvertDate(monthstart))) {
                                    if(EITLERPGLOBAL.ConvertDate(MaturityDate).before(EITLERPGLOBAL.ConvertDate(monthend))) {
                                    }
                                    System.out.println("maturity Interest Calculation");
                                    eDate = clsCalcInterest.addMonthToDate(eDate,6);
                                }
                            }
                            
                            
                        }
                        
                        //FD - LD INTEREST CALCULATION START
                        if(scheme.equals("FD") || scheme.equals("LD")) {
                            
                            // System.out.println("Receipt no " + ReceiptNo + "eDate=" + eDate + " " + "intDate" + interestCalcDate);
                            //  System.out.println("Maturity Date" + MaturityDate);
                            //  System.out.println("start date = " + monthstart + "end date=" + monthend);
                            
                            if((EITLERPGLOBAL.ConvertDate(FDLDintdate1).equals(EITLERPGLOBAL.ConvertDate(monthend)) || EITLERPGLOBAL.ConvertDate(FDLDintdate2).equals(EITLERPGLOBAL.ConvertDate(monthend)))){
                                //   System.out.println("interest calculation = ");
                                
                                //INTEREST CALCULATION
                                double partyInterest=0.0;
                                if(data.getIntValueFromDB("SELECT TAX_EX_FORM_RECEIVED FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"' ",FinanceGlobal.FinURL)==0) {
                                    partyInterest = clsDepositMaster.checkTDSAmount(sub_code);
                                }
                                long totalDays=1;
                                String SQLQuery = "SELECT * FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+ ReceiptNo +"' ";
                                if(data.IsRecordExist(SQLQuery,FinanceGlobal.FinURL)){
                                    //change Receipt Date for Date Difference if record already exits
                                    SQLQuery = "SELECT INTEREST_DAYS FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='" + ReceiptNo +"' ";
                                    ResultSet rsResult = data.getResult(SQLQuery,FinanceGlobal.FinURL);
                                    rsResult.first();
                                    
                                    while(!rsResult.isAfterLast()) {
                                        eDate = EITLERPGLOBAL.addDaysToDate(eDate, rsResult.getInt("INTEREST_DAYS"),"yyyy-MM-dd");
                                        rsResult.next();
                                    }
                                    rsResult.close();
                                }
                                totalDays = EITLERPGLOBAL.DateDiff(java.sql.Date.valueOf(eDate), java.sql.Date.valueOf(interestCalcDate)) +1;
                                if(java.sql.Date.valueOf(interestCalcDate).before(java.sql.Date.valueOf(MaturityDate)) && java.sql.Date.valueOf(eDate).compareTo(java.sql.Date.valueOf(MaturityDate))!=0) {
                                    GregorianCalendar cal = new GregorianCalendar();
                                    if(cal.isLeapYear(EITLERPGLOBAL.getCurrentFinYear()+1)) {
                                        interestAmount = EITLERPGLOBAL.round(((Amount * Rate * totalDays)/(366* 100)),2); //INTEREST AMOUNT = (AMOUNT * RATE)/100
                                    } else {
                                        interestAmount = EITLERPGLOBAL.round(((Amount * Rate * totalDays)/(365* 100)),2); //INTEREST AMOUNT = (AMOUNT * RATE)/100
                                    }
                                } else {
                                    //Counter--;
                                    //rsTmp.next();
                                    continue;
                                }
                                //END INTEREST CALCULATION
                                
                                //OPENING BALANCE
                                ob = clsAccount.getOpeningBalance(main_code,sub_code,on_date);
                                tempob=String.valueOf(ob);
                                tempobint = String.valueOf(ob + interestAmount);
                                gross += ob;
                                gross_int +=ob + interestAmount;
                                //END OPENING BALANCE
                            }
                            
                            
                            
                            
                            
                            //
                        }
                        //FD - LD INTEREST CALCULATION END
                        //INTEREST SAVE TO THE MONTH FIELD OF THE REPORT
                        if(tmp == 1){
                            objRow.setValue("JAN",tempob);
                            objRow.setValue("JAN_INT",tempobint);
                        }
                        if(tmp == 2){
                            objRow.setValue("FEB",tempob);
                            objRow.setValue("FEB_INT",tempobint);
                        }
                        if(tmp == 3){
                            objRow.setValue("MAR",tempob);
                            objRow.setValue("MAR_INT",tempobint);
                        }
                        if(tmp == 4){
                            objRow.setValue("APR",tempob);
                            objRow.setValue("APR_INT",tempobint);
                        }
                        if(tmp == 5){
                            objRow.setValue("MAY",tempob);
                            objRow.setValue("MAY_INT",tempobint);
                        }
                        if(tmp == 6){
                            objRow.setValue("JUN",tempob);
                            objRow.setValue("JUN_INT",tempobint);
                        }
                        if(tmp == 7){
                            objRow.setValue("JUL",tempob);
                            objRow.setValue("JUL_INT",tempobint);
                        }
                        if(tmp == 8){
                            objRow.setValue("AUG",tempob);
                            objRow.setValue("AUG_INT",tempobint);
                        }
                        if(tmp == 9){
                            objRow.setValue("SEP",tempob);
                            objRow.setValue("SEP_INT",tempobint);
                        }
                        if(tmp == 10){
                            objRow.setValue("OCT",tempob);
                            objRow.setValue("OCT_INT",tempobint);
                        }
                        if(tmp == 11){
                            objRow.setValue("NOV",tempob);
                            objRow.setValue("NOV_INT",tempobint);
                        }
                        if(tmp == 12){
                            objRow.setValue("DEC",tempob);
                            objRow.setValue("DEC_INT",tempobint);
                        }
                        
                        objRow.setValue("GROSS",String.valueOf(gross));
                        objRow.setValue("GROSS_INT",String.valueOf(gross_int));
                        interestAmount=0.0;
                        ob=0.0;
                        tempob="";
                        tempobint="";
                        tmp++;
                        if(tmp>12) {
                            tmp=1;
                            tmpyear++;
                        }
                    }//end for loop 12 month
                    
                    
                  /*  double partyInterest=0.0;
                    //FIXED INTEREST CALCULATION
                    if(scheme.equals("FD") || scheme.equals("LD")) {
                        //=============For Fixed Interest calculation==================//
                        if(data.getIntValueFromDB("SELECT TAX_EX_FORM_RECEIVED FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+rsTmp.getString("RECEIPT_NO")+"' ",FinanceGlobal.FinURL)==0) {
                            partyInterest = clsDepositMaster.checkTDSAmount(rsTmp.getString("PARTY_CODE"));
                        }
                        long totalDays=1;
                        String SQLQuery = "SELECT * FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+ ReceiptNo +"' ";
                        if(data.IsRecordExist(SQLQuery,FinanceGlobal.FinURL)){
                            //change Receipt Date for Date Difference if record already exits
                            SQLQuery = "SELECT INTEREST_DAYS FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='" + ReceiptNo +"' ";
                            ResultSet rsResult = data.getResult(SQLQuery,FinanceGlobal.FinURL);
                            rsResult.first();
                   
                            while(!rsResult.isAfterLast()) {
                                eDate = EITLERPGLOBAL.addDaysToDate(eDate, rsResult.getInt("INTEREST_DAYS"),"yyyy-MM-dd");
                                rsResult.next();
                            }
                            rsResult.close();
                        }
                        totalDays = EITLERPGLOBAL.DateDiff(java.sql.Date.valueOf(eDate), java.sql.Date.valueOf(interestCalcDate)) +1;
                        if(java.sql.Date.valueOf(interestCalcDate).before(java.sql.Date.valueOf(MaturityDate)) && java.sql.Date.valueOf(eDate).compareTo(java.sql.Date.valueOf(MaturityDate))!=0) {
                            GregorianCalendar cal = new GregorianCalendar();
                            if(cal.isLeapYear(EITLERPGLOBAL.getCurrentFinYear()+1)) {
                                interestAmount = EITLERPGLOBAL.round(((Amount * Rate * totalDays)/(366* 100)),2); //INTEREST AMOUNT = (AMOUNT * RATE)/100
                            } else {
                                interestAmount = EITLERPGLOBAL.round(((Amount * Rate * totalDays)/(365* 100)),2); //INTEREST AMOUNT = (AMOUNT * RATE)/100
                            }
                        } else {
                            //Counter--;
                            //rsTmp.next();
                            continue;
                        }
                    }
                    //=============End of Fixed Interest calculation==================//
                    //END CALCULATE INTEREST
                   */
                    
                    
                    //objRow.setValue("SEP_INT",String.valueOf(ob +interestAmount));
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                    gross=0.0;
                    gross_int=0.0;
                }
            }
            
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            //MONTH
            /*int Comp_ID = EITLERPGLOBAL.gCompanyID;
            String sDate;
            if(cmbMonth.getSelectedIndex()+1 >= 1 &&  cmbMonth.getSelectedIndex()+1 <= 9) {
                sDate = txtYear.getText().trim() + "-0" + Integer.toString(cmbMonth.getSelectedIndex()+1) + "-01";
            }
            else {
                sDate = txtYear.getText().trim() + "-" + Integer.toString(cmbMonth.getSelectedIndex()+1) + "-01";
            }*/
            //END MONTH
            //String LastDate = data.getStringValueFromDB("select last_day('"+ sDate +"') from dual");
            String Report_Type = "";
            
            if(type ==1){
                Report_Type="FRESH";
            }
            else{
                Report_Type="RENEWAL";
            }
            
            HashMap Parameters=new HashMap();
            Parameters.put("COMPANY_ID",Integer.toString(Comp_ID));
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_YEAR",String.valueOf(EITLERPGLOBAL.FinYearFrom));
            Parameters.put("TO_YEAR",String.valueOf(EITLERPGLOBAL.FinYearTo));
            Parameters.put("REPORT_TYPE",Report_Type);
            
            
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptGrossInterestCalculation.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
        
        
        
        
        
    }
    
    
    private void GenerateCombo() {
        
        //--- Generate Type Combo ------//
        ComboData aData=new ComboData();
        
        cmbMonthModel=new EITLComboModel();
        cmbMonth.removeAllItems();
        cmbMonth.setModel(cmbMonthModel);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="January";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="February";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=3;
        aData.Text="March";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=4;
        aData.Text="April";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=5;
        aData.Text="May";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=6;
        aData.Text="June";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=7;
        aData.Text="July";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=8;
        aData.Text="August";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=9;
        aData.Text="September";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=10;
        aData.Text="October";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=11;
        aData.Text="November";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=12;
        aData.Text="December";
        cmbMonthModel.addElement(aData);
        
        cmbReportTypeModel=new EITLComboModel();
        cmbReportType.removeAllItems();
        cmbReportType.setModel(cmbReportTypeModel);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="FRESH";
        cmbReportTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="RENEWAL";
        cmbReportTypeModel.addElement(aData);
        
        
        
    }
    
    private boolean Validate() {
        //Form level validations
        
        if(txtYear.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Year.");
            return false;
        } else if(txtYear.getText().trim().length() != 4 ) {
            
            JOptionPane.showMessageDialog(null,"Invalid Year in YYYY format.");
            return false;
        }
        
        
        return true;
    }
}
