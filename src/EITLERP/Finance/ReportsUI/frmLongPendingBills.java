/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EITLERP.Finance.ReportsUI;

import EITLERP.FeltSales.Reports.*;
import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLTableModel;
import EITLERP.JTextFieldHint;
import EITLERP.LOV;
import EITLERP.ReportRegister;
import EITLERP.clsSales_Party;
import EITLERP.data;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Dharmendra
 */
public class frmLongPendingBills extends javax.swing.JApplet {

    /**
     * Initializes the applet FrmWhStk
     */
    private EITLTableModel DataModel = new EITLTableModel();
    public EITLERP.FeltSales.Reports.clsExcelExporter exprt = new EITLERP.FeltSales.Reports.clsExcelExporter();

    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>

        /* Create and display the applet */
        initComponents();
        
        GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
        int scrwidth = gd.getDisplayMode().getWidth();
        int scrheight = gd.getDisplayMode().getHeight();
        //setSize(855, 380);
        setSize(scrwidth,scrheight);
        
        FormatGrid();
        txtPartyCode.requestFocus();
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        file1 = new javax.swing.JFileChooser();
        file2 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblPartyName = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 90, 1080, 390);

        jLabel1.setText("Party Code");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 50, 90, 20);

        txtPartyCode.setToolTipText("Press F1 key for search Party Code");
        txtPartyCode = new JTextFieldHint(new JTextField(),"Search by F1");
        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });
        getContentPane().add(txtPartyCode);
        txtPartyCode.setBounds(100, 50, 130, 30);

        jButton1.setText("Export to excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(700, 50, 140, 28);

        jButton2.setText("SHOW DATA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(540, 50, 130, 28);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 29));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Long Pending Bills");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(2, 4, 410, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 2, 1090, 29);
        getContentPane().add(lblPartyName);
        lblPartyName.setBounds(240, 50, 280, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        FormatGrid();
        try{
            String str="";
            String strCond="";
            if(!txtPartyCode.getText().equals("")){
                strCond+=" AND PARTY_CODE='"+txtPartyCode.getText().trim()+"' ";
            }
             /*
             str += "SELECT * FROM ( SELECT A.PARTY_CODE,A.PARTY_NAME,CHARGE_CODE,A.INVOICE_NO,A.INVOICE_DATE,ROUND(A.INVOICE_AMT,2) AS INVOICE_AMT ,DUE_DATE,DUE_30_DAYS,C.VALUE_DATE AS V_DATE ,COALESCE(C.AMOUNT,0) AS AMOUNT, ROUND(INVOICE_AMT - COALESCE(C.AMOUNT,0),2) AS SHORT_AMT,DATEDIFF(CURDATE(),A.INVOICE_DATE) AS VDATE_INV_DAYS,VOUCHER,PIECE_NO  FROM\n"
                    + "(\n"
                    + "SELECT CONCAT(INVOICE_NO,INVOICE_DATE,PARTY_CODE) AS UID,INVOICE_NO,INVOICE_DATE,PARTY_CODE,PIECE_NO,CASE WHEN COALESCE(DUE_DATE,'0000-00-00')='0000-00-00' THEN INVOICE_DATE ELSE DUE_DATE END AS DUE_DATE,SUBSTRING(PAYMENT_TERM_CODE,1,1) AS CHARGE_CODE,NET_AMOUNT AS INVOICE_AMT,PARTY_NAME , DATE_ADD(CASE WHEN COALESCE(DUE_DATE,'0000-00-00')='0000-00-00' THEN INVOICE_DATE ELSE DUE_DATE END, INTERVAL 30 DAY) AS DUE_30_DAYS FROM DINESHMILLS.D_SAL_INVOICE_HEADER \n"
                    + "WHERE INVOICE_DATE> '2001-04-01' \n" //2001-04-01
                    + "AND INVOICE_DATE <='2022-03-31' \n"
                    + " AND CANCELLED=0  AND INVOICE_TYPE =2 AND SUBSTRING(PAYMENT_TERM_CODE,1,1) IN (1,2,4,8)\n"
                    + " AND COALESCE(I_MATCHED,0)!=1  ) AS A \n"
                    + "LEFT JOIN \n"
                    + "(\n"
                    + "SELECT *  FROM PRODUCTION.FELT_INVOICE_PAYMENT_VOUCHER_DETAIL\n"
                    + ")\n"
                    + " AS C \n"
                    + " ON A.UID=C.UID ) AS PAY\n"
                    + "WHERE DUE_30_DAYS < CURDATE()\n"
                    + "AND SHORT_AMT >0\n"+strCond
                    + "ORDER BY PARTY_CODE,VDATE_INV_DAYS,INVOICE_DATE,INVOICE_NO";
                     */
            str += "SELECT * FROM ( SELECT A.PARTY_CODE,A.PARTY_NAME,CHARGE_CODE,A.INVOICE_NO,A.INVOICE_DATE,ROUND(A.INVOICE_AMT,2) AS INVOICE_AMT ,DUE_DATE,DUE_30_DAYS,C.VALUE_DATE AS V_DATE ,COALESCE(C.AMOUNT,0) AS AMOUNT, ROUND(INVOICE_AMT - COALESCE(C.AMOUNT,0),2) AS SHORT_AMT,DATEDIFF(CURDATE(),A.INVOICE_DATE) AS VDATE_INV_DAYS,VOUCHER,PIECE_NO,PARTY_STATUS  FROM\n"
                    + "(\n"
                    + "SELECT X.*,Y.PARTY_STATUS FROM\n"
                    + "(SELECT CONCAT(INVOICE_NO,INVOICE_DATE,PARTY_CODE) AS UID,INVOICE_NO,INVOICE_DATE,PARTY_CODE,PIECE_NO,CASE WHEN COALESCE(DUE_DATE,'0000-00-00')='0000-00-00' THEN INVOICE_DATE ELSE DUE_DATE END AS DUE_DATE,SUBSTRING(PAYMENT_TERM_CODE,1,1) AS CHARGE_CODE,NET_AMOUNT AS INVOICE_AMT,PARTY_NAME , DATE_ADD(CASE WHEN COALESCE(DUE_DATE,'0000-00-00')='0000-00-00' THEN INVOICE_DATE ELSE DUE_DATE END, INTERVAL 30 DAY) AS DUE_30_DAYS FROM DINESHMILLS.D_SAL_INVOICE_HEADER \n"
                    + "WHERE INVOICE_DATE>= '2001-04-01' \n"
                    + " AND CANCELLED=0  AND INVOICE_TYPE =2 AND SUBSTRING(PAYMENT_TERM_CODE,1,1) IN (1,2,4,8)\n"
                    + " AND COALESCE(I_MATCHED,0)!=1) X\n"
                    + " LEFT JOIN\n"
                    + " (SELECT PARTY_CODE,PARTY_NAME,DISPATCH_STATION,CASE WHEN COALESCE(PARTY_CLOSE_IND,0) =0  AND COALESCE(PARTY_CLOSE_INACTIVE_IND,0) =0 AND COALESCE(PARTY_MILL_CLOSED_IND,0) = 0 THEN 'ACTIVE' WHEN COALESCE(PARTY_CLOSE_IND,0) =0  AND COALESCE(PARTY_CLOSE_INACTIVE_IND,0) =1 AND COALESCE(PARTY_MILL_CLOSED_IND,0) = 0 THEN 'ACTIVE' WHEN COALESCE(PARTY_CLOSE_IND,0) =0  AND COALESCE(PARTY_CLOSE_INACTIVE_IND,0) =0 AND COALESCE(PARTY_MILL_CLOSED_IND,0) = 1 THEN 'ACTIVE' WHEN COALESCE(PARTY_CLOSE_IND,0) =1 AND COALESCE(PARTY_CLOSE_INACTIVE_IND,0) =1 AND COALESCE(PARTY_MILL_CLOSED_IND,0) = 0 THEN 'IN-ACTIVE' WHEN COALESCE(PARTY_CLOSE_IND,0) =1 AND COALESCE(PARTY_CLOSE_INACTIVE_IND,0) =0 AND COALESCE(PARTY_MILL_CLOSED_IND,0) = 1 THEN 'PERMANENTLY CLOSED' WHEN COALESCE(PARTY_CLOSE_IND,0) =1 AND COALESCE(PARTY_CLOSE_INACTIVE_IND,0) =0 AND COALESCE(PARTY_MILL_CLOSED_IND,0) = 2 THEN 'TEMPORARY CLOSED' WHEN COALESCE(PARTY_CLOSE_IND,0) =1 AND COALESCE(PARTY_CLOSE_INACTIVE_IND,0) =0 AND COALESCE(PARTY_MILL_CLOSED_IND,0) = 0 THEN 'PERMANENTLY CLOSED' WHEN COALESCE(PARTY_CLOSE_IND,0) =1 AND COALESCE(PARTY_CLOSE_INACTIVE_IND,0) =1 AND COALESCE(PARTY_MILL_CLOSED_IND,0) = 1 THEN 'PERMANENTLY CLOSED' END AS PARTY_STATUS FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE=210010 AND APPROVED=1 AND CANCELLED=0) Y\n"
                    + " ON X.PARTY_CODE=Y.PARTY_CODE) AS A \n"
                    + "LEFT JOIN \n"
                    + "(\n"
                    + "SELECT *  FROM PRODUCTION.FELT_INVOICE_PAYMENT_VOUCHER_DETAIL\n"
                    + ")\n"
                    + " AS C \n"
                    + " ON A.UID=C.UID ) AS PAY\n"
                    + "WHERE DUE_30_DAYS < CURDATE()\n"
                    + "AND SHORT_AMT >0\n"+strCond
                    + "ORDER BY PARTY_CODE,VDATE_INV_DAYS,INVOICE_DATE,INVOICE_NO";
            System.out.println(str);
            Connection connection = data.getConn();
            Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            System.out.println("Query : " + str);
            ResultSet resultSet = statement.executeQuery(str);
            int srNo = 0;
            double TotalInvoiceAmt = 0;
            while (resultSet.next()) {

                srNo++;
                int NewRow = srNo - 1;

                Object[] rowData = new Object[1];
                DataModel.addRow(rowData);

                DataModel.setValueByVariable("SrNo", srNo + "", NewRow);
                DataModel.setValueByVariable("PARTY_CODE", resultSet.getString("PARTY_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_NAME", resultSet.getString("PARTY_NAME"), NewRow);
                DataModel.setValueByVariable("INVOICE_NO", resultSet.getString("INVOICE_NO"), NewRow);
                DataModel.setValueByVariable("INVOICE_DATE",EITLERPGLOBAL.formatDate(resultSet.getString("INVOICE_DATE")) , NewRow);
                DataModel.setValueByVariable("DUE_DATE",EITLERPGLOBAL.formatDate(resultSet.getString("DUE_DATE")) , NewRow);
                DataModel.setValueByVariable("INVOICE_AMT", resultSet.getString("INVOICE_AMT"), NewRow);
                DataModel.setValueByVariable("AMOUNT", resultSet.getString("AMOUNT"), NewRow);
                DataModel.setValueByVariable("SHORT_AMT", resultSet.getString("SHORT_AMT"), NewRow);
                DataModel.setValueByVariable("VDATE_INV_DAYS", resultSet.getString("VDATE_INV_DAYS"), NewRow);
                DataModel.setValueByVariable("CHARGE_CODE", resultSet.getString("CHARGE_CODE"), NewRow);
                DataModel.setValueByVariable("PARTY_STATUS", resultSet.getString("PARTY_STATUS"), NewRow);
                
                
            }
            
            
        }catch(Exception e)
        {            
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try {
            File file = null;
            file1.setVisible(true);
            int returnVal = file1.showSaveDialog(this);
            if (returnVal == file1.APPROVE_OPTION) {
                file = file1.getSelectedFile();
            }
            file1.setVisible(false);

            exprt.fillData(Table, new File(file1.getSelectedFile().toString() + ".xls"), "WAREHOUSE-REPORT");

            JOptionPane.showMessageDialog(null, "Data saved at "
                    + file.toString() + " successfully ...", "Message",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        if (evt.getKeyCode() == 112) //F1 Key pressed
        {
            LOV aList = new LOV();

            aList.SQL = "SELECT PARTY_CODE,PARTY_NAME FROM DINESHMILLS.D_SAL_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE=210010";
            aList.ReturnCol = 1;
            aList.ShowReturnCol = true;
            aList.DefaultSearchOn = 2;

            if (aList.ShowLOV()) {
                txtPartyCode.setText(aList.ReturnVal);
                lblPartyName.setText(clsSales_Party.getPartyName(EITLERPGLOBAL.gCompanyID, aList.ReturnVal));

            }
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed

    private void FormatGrid() {
        try {
            DataModel = new EITLTableModel();
            Table.removeAll();

            Table.setModel(DataModel);
            Table.setAutoResizeMode(0);

            DataModel.addColumn("SrNo"); //0 - Read Only
            DataModel.addColumn("Party Code"); //0 - Read Only
            DataModel.addColumn("Party Name"); //1
            DataModel.addColumn("Inv No"); //5
            DataModel.addColumn("Inv Date"); //6
            DataModel.addColumn("Due Date"); //2
            DataModel.addColumn("Inv Amt"); //1
            DataModel.addColumn("Rece Amt"); //5
            DataModel.addColumn("Pending Amt"); //6
            DataModel.addColumn("Days"); //2
            DataModel.addColumn("Charge Cd"); //1
            DataModel.addColumn("Party Status"); //1
            
            
            DataModel.SetVariable(0, "SrNo"); //0 - Read Only
            DataModel.SetVariable(1, "PARTY_CODE"); //0 - Read Only
            DataModel.SetVariable(2, "PARTY_NAME"); //1
            DataModel.SetVariable(3, "INVOICE_NO"); //1
            DataModel.SetVariable(4, "INVOICE_DATE"); //1
            DataModel.SetVariable(5, "DUE_DATE"); //1
            DataModel.SetVariable(6, "INVOICE_AMT"); //1
            DataModel.SetVariable(7, "AMOUNT"); //1
            DataModel.SetVariable(8, "SHORT_AMT"); //1
            DataModel.SetVariable(9, "VDATE_INV_DAYS"); //1
            DataModel.SetVariable(10, "CHARGE_CODE"); //1
            DataModel.SetVariable(11, "PARTY_STATUS"); //1
            
            
            for(int i=0;i<DataModel.getColumnCount();i++)
            {
                    DataModel.SetReadOnly(i);
            }
            
            Table.getColumnModel().getColumn(0).setMaxWidth(40);
            Table.getColumnModel().getColumn(1).setMinWidth(50);
            Table.getColumnModel().getColumn(2).setMinWidth(50);
            Table.getColumnModel().getColumn(3).setMinWidth(100);
            Table.getColumnModel().getColumn(4).setMinWidth(100);
            Table.getColumnModel().getColumn(5).setMinWidth(100);
            Table.getColumnModel().getColumn(6).setMinWidth(100);
            Table.getColumnModel().getColumn(6).setMaxWidth(100);
            Table.getColumnModel().getColumn(7).setMinWidth(100);
            Table.getColumnModel().getColumn(8).setMinWidth(100);
            Table.getColumnModel().getColumn(9).setMinWidth(100);
            Table.getColumnModel().getColumn(10).setMinWidth(50);
            Table.getColumnModel().getColumn(11).setMinWidth(100);
            
        } catch (Exception e) {
            //e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFileChooser file1;
    private javax.swing.JFileChooser file2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPartyName;
    private javax.swing.JTextField txtPartyCode;
    // End of variables declaration//GEN-END:variables
}
