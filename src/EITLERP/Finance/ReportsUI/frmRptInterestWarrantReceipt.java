/*
 * frmRptGRNInfo.java
 *
 * Created on April 16, 2008, 12:01 PM
 */

package EITLERP.Finance.ReportsUI;

/**
 *
 * @author  root
 */
import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;

public class frmRptInterestWarrantReceipt extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    /** Initializes the applet frmRptGRNInfo */
    public void init() {
        setSize(450,264);
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromWarrantNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtToWarrantNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cmdPreview = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("INTEREST WARRANT RECEIPT");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(9, 8, 230, 15);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 2, 800, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("From Warrant no :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1, 70, 117, 20);

        txtFromWarrantNo.setColumns(10);
        getContentPane().add(txtFromWarrantNo);
        txtFromWarrantNo.setBounds(120, 72, 90, 19);

        jLabel3.setText("To warrant no:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(213, 70, 93, 20);

        txtToWarrantNo.setColumns(10);
        getContentPane().add(txtToWarrantNo);
        txtToWarrantNo.setBounds(306, 71, 90, 20);

        jLabel1.setText("Period");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(14, 46, 90, 15);

        cmdPreview.setText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(120, 120, 130, 25);

    }//GEN-END:initComponents
        
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if (!Validate()) {
            return;
        }
        GenerateReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdPreview;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtFromWarrantNo;
    private javax.swing.JTextField txtToWarrantNo;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        
        try{
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("RECEIPT_DATE");
            objReportData.AddColumn("AMOUNT");
            objReportData.AddColumn("DEPOSIT_PERIOD");
            objReportData.AddColumn("INTEREST_RATE");
            objReportData.AddColumn("INTEREST_FROM");
            objReportData.AddColumn("INTEREST_TO");            
            //objReportData.AddColumn("WRT");            
            objReportData.AddColumn("TITLE");
            objReportData.AddColumn("APPLICANT_NAME");
            objReportData.AddColumn("ADDRESS1");
            objReportData.AddColumn("ADDRESS2");
            objReportData.AddColumn("ADDRESS3");
            objReportData.AddColumn("CITY");
            objReportData.AddColumn("PINCODE");
            objReportData.AddColumn("RECEIPT_NO");
            objReportData.AddColumn("STATUS");
            objReportData.AddColumn("GROSS_INTEREST");
            objReportData.AddColumn("ITAX_RATE");
            objReportData.AddColumn("ITAX_DEDUCT");
            objReportData.AddColumn("NET_INTEREST");
            objReportData.AddColumn("WARRANT_NO");
            objReportData.AddColumn("PARTY_CODE");
            objReportData.AddColumn("STAR_INTEREST");
            objReportData.AddColumn("WORD_AMOUNT");
            objReportData.AddColumn("LAST_DATE");
            
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("RECEIPT_DATE","0000-00-00");
            objOpeningRow.setValue("AMOUNT","");
            objOpeningRow.setValue("DEPOSIT_PERIOD","");
            objOpeningRow.setValue("INTEREST_RATE","");
            objOpeningRow.setValue("INTEREST_FROM","");
            objOpeningRow.setValue("INTEREST_TO","");
            //objOpeningRow.setValue("WRT","");            
            objOpeningRow.setValue("TITLE","");
            objOpeningRow.setValue("APPLICANT_NAME","");
            objOpeningRow.setValue("ADDRESS1","");
            objOpeningRow.setValue("ADDRESS2","");
            objOpeningRow.setValue("ADDRESS3","");
            objOpeningRow.setValue("CITY","");
            objOpeningRow.setValue("PINCODE","");
            objOpeningRow.setValue("RECEIPT_NO","");
            objOpeningRow.setValue("STATUS","");
            objOpeningRow.setValue("GROSS_INTEREST","");
            objOpeningRow.setValue("ITAX_RATE","");
            objOpeningRow.setValue("ITAX_DEDUCT","");
            objOpeningRow.setValue("NET_INTEREST","");
            objOpeningRow.setValue("WARRANT_NO","");
            objOpeningRow.setValue("PARTY_CODE","");
            objOpeningRow.setValue("STAR_INTEREST","");
            objOpeningRow.setValue("WORD_AMOUNT","");
            objOpeningRow.setValue("MATURITY_DATE","0000-00-00");
            objOpeningRow.setValue("LAST_DATE","0000-00-00");
            
            
            String strSQL="SELECT DMST.LEGACY_NO,DMST.RECEIPT_DATE,DMST.AMOUNT,DMST.DEPOSIT_PERIOD,DMST.INTEREST_RATE,CDTL.WARRANT_DATE AS INTEREST_TO, "+
            "DMST.MATURITY_DATE,DMST.PARTY_CODE,DMST.TITLE,DMST.APPLICANT_NAME,DMST.ADDRESS1,DMST.ADDRESS2,DMST.ADDRESS3,DMST.CITY, "+
            "DMST.RECEIPT_NO,DMST.PINCODE, "+
            "CASE WHEN DMST.DEPOSITER_CATEGORY = 1 THEN 'E' WHEN DMST.DEPOSITER_CATEGORY = 2 THEN 'S' " +
            "WHEN DMST.DEPOSITER_CATEGORY = 3 THEN 'C'  WHEN DMST.DEPOSITER_CATEGORY = 4 THEN 'D' " +
            "WHEN DMST.DEPOSITER_CATEGORY = 5 THEN 'I' ELSE '' END STATUS, " +
            "CDTL.INTEREST_AMOUNT,CDTL.TDS_AMOUNT,CDTL.NET_INTEREST,CDTL.WARRANT_NO,CDTL.LEGACY_WARRANT_NO, "+
            "CASE WHEN SMST.SCHEME_TYPE=1 THEN 'FD'  WHEN SMST.SCHEME_TYPE=2 THEN 'LD' "+
            "WHEN SMST.SCHEME_TYPE=3 THEN 'CD' ELSE '' END SCHEME_TYPE, "+
            "CASE WHEN SMST.SCHEME_TYPE=1 THEN SMST.SCHEME_TYPE+5 WHEN SMST.SCHEME_TYPE=2 THEN SMST.SCHEME_TYPE " +
            "WHEN SMST.SCHEME_TYPE=3 THEN SMST.SCHEME_TYPE+10 ELSE 0 END AS SCHEME_ORDER, "+
            "LPAD(CDTL.NET_INTEREST,9,'*') AS STAR_INTEREST "+
            "FROM D_FD_DEPOSIT_MASTER DMST,D_FD_INT_CALC_DETAIL CDTL,D_FD_SCHEME_MASTER SMST "+
            "WHERE CDTL.RECEIPT_NO = DMST.RECEIPT_NO "+
            "AND DMST.COMPANY_ID = " + EITLERPGLOBAL.gCompanyID + " "+
            "AND CDTL.COMPANY_ID = " + EITLERPGLOBAL.gCompanyID + " "+
            "AND CDTL.WARRANT_NO>= '" + txtFromWarrantNo.getText().trim() + "' "+
            "AND CDTL.WARRANT_NO<= '" + txtToWarrantNo.getText().trim() + "' "+
            "AND DMST.SCHEME_ID = SMST.SCHEME_ID "+
            //"AND CDTL.LEGACY_WARRANT_NO IN (1040,1054,1069,1070,1071,1072,1122,1131,1208,1248,1269,1304,1320,1351,1362,1387,1436,1461,1499,1549,1152,1555,1617,1568) " +
            //"AND CDTL.WARRANT_DATE='2010-03-31' " +
            "ORDER BY SCHEME_ORDER,CDTL.LEGACY_WARRANT_NO,CDTL.WARRANT_NO";
            
            ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            if(rsTmp.getRow()>0){
                rsTmp.first();
                
                int Counter = 0;
                
                if(rsTmp.getRow()>0) {
                    while(!rsTmp.isAfterLast()) {
                        
                        objRow=objReportData.newRow();
                        
                        objRow.setValue("RECEIPT_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"RECEIPT_DATE","0000-00-00")).trim());
                        objRow.setValue("AMOUNT",UtilFunctions.getString(rsTmp,"AMOUNT","").trim());
                        objRow.setValue("DEPOSIT_PERIOD",UtilFunctions.getString(rsTmp,"DEPOSIT_PERIOD",""));
                        objRow.setValue("INTEREST_RATE",UtilFunctions.getString(rsTmp,"INTEREST_RATE",""));
                        String WarrantDate = UtilFunctions.getString(rsTmp,"INTEREST_TO","");
                        int SchemeOrder = UtilFunctions.getInt(rsTmp,"SCHEME_ORDER",0);
                        String MaturityDate = UtilFunctions.getString(rsTmp,"MATURITY_DATE","0000-00-00");
                        String InterestTo=MaturityDate;
                        if(java.sql.Date.valueOf(WarrantDate).compareTo(java.sql.Date.valueOf(MaturityDate))==0 && SchemeOrder!=13) {
                            WarrantDate = clsDepositMaster.deductDays(MaturityDate, 1);
                        }
                        objRow.setValue("INTEREST_TO",EITLERPGLOBAL.formatDate(WarrantDate));
                        //objRow.setValue("INTEREST_TO",EITLERPGLOBAL.formatDate("2011-03-31"));
                        objRow.setValue("TITLE",UtilFunctions.getString(rsTmp,"TITLE","").trim());
                        
                        objRow.setValue("APPLICANT_NAME",UtilFunctions.getString(rsTmp,"APPLICANT_NAME","").trim());
                        objRow.setValue("ADDRESS1",UtilFunctions.getString(rsTmp,"ADDRESS1","").trim());
                        objRow.setValue("ADDRESS2",UtilFunctions.getString(rsTmp,"ADDRESS2","").trim());
                        objRow.setValue("ADDRESS3",UtilFunctions.getString(rsTmp,"ADDRESS3","").trim());
                        objRow.setValue("CITY",UtilFunctions.getString(rsTmp,"CITY","").trim());
                        objRow.setValue("PINCODE",UtilFunctions.getString(rsTmp,"PINCODE","").trim());
                        String ReceiptNo = rsTmp.getString("RECEIPT_NO");
                        int SchemeType = data.getIntValueFromDB("SELECT B.SCHEME_TYPE FROM D_FD_DEPOSIT_MASTER A,D_FD_SCHEME_MASTER B WHERE A.SCHEME_ID=B.SCHEME_ID AND A.RECEIPT_NO='"+ReceiptNo+"' ",FinanceGlobal.FinURL);
                        if(UtilFunctions.getString(rsTmp,"LEGACY_NO","").trim().equals("")) {
                            objRow.setValue("RECEIPT_NO",UtilFunctions.getString(rsTmp,"RECEIPT_NO","").trim());
                        } else {
                            objRow.setValue("RECEIPT_NO",UtilFunctions.getString(rsTmp,"LEGACY_NO",""));
                        }
                        objRow.setValue("STATUS",UtilFunctions.getString(rsTmp,"STATUS","").trim());
                        objRow.setValue("PARTY_CODE",UtilFunctions.getString(rsTmp,"PARTY_CODE","").trim());
                        String PartyCode = UtilFunctions.getString(rsTmp,"PARTY_CODE","").trim();
                        if(ReceiptNo.equals("M025044") && PartyCode.equals("080831")) {
                            objRow.setValue("APPLICANT_NAME","BHAVESH HARISHCHANDRA TALATI");
                            objRow.setValue("PARTY_CODE","020932");
                        }
                        if(ReceiptNo.equals("M025045") && PartyCode.equals("080831")) {
                            objRow.setValue("APPLICANT_NAME","BHAVESH HARISHCHANDRA TALATI");
                            objRow.setValue("PARTY_CODE","020932");
                        }
                        double netInterest = 0.0;
                        double grossInterest = 0.0;
                        double TDSAmount = 0.0;
                        if(SchemeType == 3) {
                            double Amount=UtilFunctions.getDouble(rsTmp,"INTEREST_AMOUNT",0);
                            netInterest = data.getDoubleValueFromDB("SELECT SUM(A.NET_INTEREST) FROM D_FD_INT_CALC_DETAIL A, D_FD_INT_CALC_HEADER B WHERE A.RECEIPT_NO='"+ReceiptNo+"' AND A.PARTY_CODE='"+PartyCode+"' AND A.DOC_NO=B.DOC_NO AND B.TDS_ONLY=0",FinanceGlobal.FinURL);
                            grossInterest = data.getDoubleValueFromDB("SELECT SUM(A.INTEREST_AMOUNT) FROM D_FD_INT_CALC_DETAIL A, D_FD_INT_CALC_HEADER B WHERE A.RECEIPT_NO='"+ReceiptNo+"' AND A.PARTY_CODE='"+PartyCode+"' AND A.DOC_NO=B.DOC_NO AND B.TDS_ONLY=0",FinanceGlobal.FinURL);
                            TDSAmount = data.getDoubleValueFromDB("SELECT SUM(TDS_AMOUNT) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+ReceiptNo+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            netInterest = EITLERPGLOBAL.round(grossInterest - TDSAmount+Amount,2);
                            objRow.setValue("GROSS_INTEREST",Double.toString(grossInterest+Amount));
                            objRow.setValue("ITAX_DEDUCT",Double.toString(TDSAmount));
                            objRow.setValue("NET_INTEREST",Double.toString(grossInterest - TDSAmount+Amount));
                        } else {
                            netInterest = UtilFunctions.getDouble(rsTmp,"NET_INTEREST",0);
                            objRow.setValue("NET_INTEREST",Double.toString(netInterest));
                            objRow.setValue("GROSS_INTEREST",UtilFunctions.getString(rsTmp,"INTEREST_AMOUNT","").trim());
                            objRow.setValue("ITAX_DEDUCT",UtilFunctions.getString(rsTmp,"TDS_AMOUNT","").trim());
                        }
                        
                        objRow.setValue("WARRANT_NO",UtilFunctions.getString(rsTmp,"LEGACY_WARRANT_NO","").trim());
                        
                        objRow.setValue("STAR_INTEREST",UtilFunctions.getString(rsTmp,"STAR_INTEREST","").trim());
                        objRow.setValue("MATURITY_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"MATURITY_DATE","0000-00-00")));
                        
                        
                        // CALCULATE TAX PERCENTAGE
                        double TDSPercentage = 0;
                        try{
                            HashMap List=clsApprovalRules.getApprovalRules(EITLERPGLOBAL.gCompanyID, clsCalcInterest.ModuleID, "GET_TDS_PERCENTAGE", "PERCENTAGE", "0");
                            if(List.size()>0){
                                clsApprovalRules objRule=(clsApprovalRules)List.get(Integer.toString(1));
                                TDSPercentage = UtilFunctions.CDbl(objRule.getAttribute("RULE_OUTCOME").getString());
                            }
                            objRow.setValue("ITAX_RATE",String.valueOf(TDSPercentage));
                            //System.out.println("Percentage" + TDSPercentage);
                        }
                        catch(Exception e) {
                            e.printStackTrace();
                            System.out.println("Exception " + e);
                        }
                        //END TAX PERCENTAGE
                        
                        //CONVERT NUMBER TO WORD
                        NumWord num=new NumWord();
                        //String number = UtilFunctions.getString(rsTmp,"NET_INTEREST","").trim();
                        String number = Double.toString(netInterest);
                        String word = num.convertNumToWord(Double.parseDouble(number));
                        objRow.setValue("WORD_AMOUNT",word.toUpperCase() + " ");
                        objReportData.AddRow(objRow);
                        //END CONVERT NUMBER TO WORD
                        
                        //INTEREST FROM DATE
                        String FromDate = data.getStringValueFromDB("SELECT WARRANT_DATE FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+ReceiptNo+"' AND PARTY_CODE='"+PartyCode+"' AND WARRANT_DATE<'"+WarrantDate+"' AND WARRANT_NO<>'0000000' ORDER BY WARRANT_DATE DESC LIMIT 1",FinanceGlobal.FinURL);
                        if(FromDate.equals("")){
                            FromDate = data.getStringValueFromDB("SELECT EFFECTIVE_DATE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                        } else {
                            FromDate = EITLERPGLOBAL.addDaysToDate(FromDate, 1, "yyyy-MM-dd");
                        }
                        objRow.setValue("INTEREST_FROM",EITLERPGLOBAL.formatDate(FromDate));
                        //END INTEREST FROM DATE
                        
                        //LAST DATE
                        String tmp = EITLERPGLOBAL.addMonthToDate(UtilFunctions.getString(rsTmp,"MATURITY_DATE","0000-00-00")).substring(0,8) + "10";
                        objRow.setValue("LAST_DATE",EITLERPGLOBAL.formatDate(EITLERPGLOBAL.addMonthToDate(UtilFunctions.getString(rsTmp,"MATURITY_DATE","0000-00-00")).substring(0,8) + "10"));
                        //END LAST DATE
                         
                        rsTmp.next();
                    }
                    
                }
            }
            HashMap Parameters=new HashMap();
            
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            EITLERPGLOBAL.PAGE_BREAK = true;
          // objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptInterestWarrantReceipt.rpt",Parameters,objReportData);
           objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/rptInterestWarrantReceiptnew.rpt",Parameters,objReportData);
            //objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptInterestWarrantReceipt_for_march.rpt",Parameters,objReportData);
        }
        catch(Exception e){
            
        }
        
    }
    
    private boolean Validate() {
        //Form level validations
        
        if(txtFromWarrantNo.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter From Warrant No.");
            return false;
        }
        if(txtToWarrantNo.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter To Warrant No");
            return false;
        }
        return true;
    }
    
}
