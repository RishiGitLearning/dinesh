/*
 * frmrptOutStanding.java
 *
 * Created on February 17, 2008, 12:31 PM
 */

package EITLERP.Finance.ReportsUI;

/**
 *
 * @author  nisarg
 */
import EITLERP.*;
import EITLERP.Finance.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.io.*;
import java.sql.*;
import TReportWriter.*;
import EITLERP.Utils.SimpleDataProvider.*;
import EITLERP.Finance.Config.*;
import EITLERP.Finance.ReportsUI.*;

import org.apache.poi.xssf.usermodel.XSSFWorkbook;//
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

public class frmRptPartyOutStanding extends javax.swing.JApplet {
    
    
    private TReportEngine objEngine=new TReportEngine();
    
    /** Initializes the applet frmrptOutStanding */
    public void init() {
        setSize(450,540);
        initComponents();
        txtAsOnDate.setText(EITLERPGLOBAL.getCurrentDate());
        Bar.setVisible(false);
        lblStatus.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAsonDate = new javax.swing.JLabel();
        txtAsOnDate = new javax.swing.JTextField();
        cmdPreview = new javax.swing.JButton();
        lblMainCode = new javax.swing.JLabel();
        txtMainCode = new javax.swing.JTextField();
        Bar = new javax.swing.JProgressBar();
        NamePanel = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblSubCode = new javax.swing.JLabel();
        txtSubCode = new javax.swing.JTextField();
        lblMainCodeName = new javax.swing.JLabel();
        lblSubCodeName = new javax.swing.JLabel();
        cmdScheduleVICreditors = new javax.swing.JButton();
        cmdPreview1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        chkExcel = new javax.swing.JCheckBox();
        jButton6 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblAsonDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAsonDate.setText("As On Date :");
        getContentPane().add(lblAsonDate);
        lblAsonDate.setBounds(5, 58, 80, 15);
        getContentPane().add(txtAsOnDate);
        txtAsOnDate.setBounds(90, 56, 100, 19);

        cmdPreview.setText("Preview Report");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });
        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(250, 140, 180, 25);

        lblMainCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMainCode.setText("Main Code :");
        getContentPane().add(lblMainCode);
        lblMainCode.setBounds(5, 96, 80, 15);

        txtMainCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMainCodeFocusLost(evt);
            }
        });
        txtMainCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMainCodeKeyPressed(evt);
            }
        });
        getContentPane().add(txtMainCode);
        txtMainCode.setBounds(90, 93, 100, 19);
        getContentPane().add(Bar);
        Bar.setBounds(5, 165, 210, 20);

        NamePanel.setBackground(new java.awt.Color(0, 153, 204));
        NamePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NamePanel.setLayout(null);

        lblName.setText("PARTY OUTSTANDING STATEMENT");
        NamePanel.add(lblName);
        lblName.setBounds(9, 8, 230, 15);

        getContentPane().add(NamePanel);
        NamePanel.setBounds(1, 2, 800, 30);

        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblStatus.setText("-");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(6, 147, 210, 15);

        lblSubCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubCode.setText("Sub Code :");
        getContentPane().add(lblSubCode);
        lblSubCode.setBounds(5, 121, 80, 15);

        txtSubCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSubCodeFocusLost(evt);
            }
        });
        txtSubCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSubCodeKeyPressed(evt);
            }
        });
        getContentPane().add(txtSubCode);
        txtSubCode.setBounds(90, 118, 100, 19);

        lblMainCodeName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMainCodeName.setText("...");
        getContentPane().add(lblMainCodeName);
        lblMainCodeName.setBounds(195, 95, 195, 15);

        lblSubCodeName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSubCodeName.setText("...");
        getContentPane().add(lblSubCodeName);
        lblSubCodeName.setBounds(195, 120, 195, 15);

        cmdScheduleVICreditors.setText("Schedule VI");
        cmdScheduleVICreditors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdScheduleVICreditorsActionPerformed(evt);
            }
        });
        getContentPane().add(cmdScheduleVICreditors);
        cmdScheduleVICreditors.setBounds(250, 180, 180, 25);

        cmdPreview1.setText("Preview Report (OS Table Only)");
        cmdPreview1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdPreview1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreview1ActionPerformed(evt);
            }
        });
        getContentPane().add(cmdPreview1);
        cmdPreview1.setBounds(250, 260, 180, 30);

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel1.setText("SkipMatched");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 0, 130, 20);

        jButton3.setText("600000-609999");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(10, 20, 170, 30);

        jButton4.setText("610000-619999");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(10, 60, 170, 30);

        jButton2.setText("620000-629999");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(10, 100, 170, 30);

        jButton1.setText("700000-799999");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(10, 140, 170, 30);

        jButton5.setText("600000-799999(All)");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(10, 180, 170, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 210, 190, 220);

        chkExcel.setText("Data In Excel");
        getContentPane().add(chkExcel);
        chkExcel.setBounds(250, 300, 190, 20);

        jButton6.setText("jButton6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(370, 380, 94, 30);
    }// </editor-fold>//GEN-END:initComponents
    
    private void cmdScheduleVICreditorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdScheduleVICreditorsActionPerformed
        // TODO add your handling code here:
        if(!Validate()) {
            return;
        }
        
        new Thread() {
            public void run() {
                double AmountUpTo30Days=0, Amount31to60Days=0, Amount61to90Days=0, Amount91to180Days=0, AmountAbove180Days=0, ClosingBalance=0;
                String SQL="", MainCode="", PartyCode="", PartyName="", FromDate="", ToDate="",PONo="",PODate="",BillNo="", DueDate;
                ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
                int EntryNo=0,Max=0,Counter=0;
                HashMap tempList = new HashMap();
                HashMap ReportList = new HashMap();
                clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
                boolean PartyChange = false;
                TReportWriter.SimpleDataProvider.TTable objData = new TReportWriter.SimpleDataProvider.TTable();
                try {
                    // SET LAST CLOSING DATE & TO DATE
                    ToDate=EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
                    FromDate=EITLERPGLOBAL.FinFromDateDB;
                    SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
                    EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
                    // ------------------------------
                    
                    // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
                    
                    MainCode = txtMainCode.getText().trim();
                    PartyCode="";
                    String Condition="";
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }
                    
                    SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND ENTRY_NO="+ EntryNo + Condition +
                    " UNION " +
                    "SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' "+ Condition +" AND B.SUB_ACCOUNT_CODE<>'' " +
                    "AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY SUB_ACCOUNT_CODE ";
                    
                    rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsParty.last();
                    Max= rsParty.getRow();
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    Counter=0;
                    rsParty.first();
                    // --------------------------------------------------------------------------------------------------
                    objData = new TReportWriter.SimpleDataProvider.TTable();
                    objData.AddColumn("MAIN_ACCOUNT_CODE");
                    objData.AddColumn("SUB_ACCOUNT_CODE");
                    objData.AddColumn("PARTY_NAME");
                    objData.AddColumn("AMOUNT_UP_TO_30_DAYS");
                    objData.AddColumn("AMOUNT_31_TO_60_DAYS");
                    objData.AddColumn("AMOUNT_61_TO_90_DAYS");
                    objData.AddColumn("AMOUNT_91_TO_180_DAYS");
                    objData.AddColumn("AMOUNT_ABOVE_180_DAYS");
                    objData.AddColumn("CLOSING_BALANCE");
                    TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                    if(rsParty.getRow()>0) {
                        while(!rsParty.isAfterLast()) {
                            
                            Counter++;
                            
                            Bar.setValue(Counter);
                            Bar.repaint();
                            // GET PARTY NAME AND DISPLAY IT
                            PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                            lblStatus.setText("Party : "+PartyCode);
                            PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            
                            ClosingBalance = clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true);
                            if(ClosingBalance>=0) {
                                rsParty.next();
                                continue;
                            }
                            // -----------------------------
                            
                            // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES //,PO_DATE
                            SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " + //PO_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE
                            "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+") " +
                            "UNION " +
                            "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.APPROVED=1 AND A.CANCELLED=0 AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                            "AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"') " +
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            
                            rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsPO.first();
                            PONo="";
                            BillNo="";
                            PartyChange = false;
                            ClosingBalance=0;
                            AmountUpTo30Days=0;
                            Amount31to60Days=0;
                            Amount61to90Days=0;
                            Amount91to180Days=0;
                            AmountAbove180Days=0;
                            // ---------------------------------------------------------------------
                            
                            if(rsPO.getRow()>0) {
                                while(!rsPO.isAfterLast()) {
                                    
                                    // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                                    
                                    PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                                    BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                                    SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' " +
                                    "ORDER BY VOUCHER_DATE";
                                    rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsOpening.first();
                                    boolean calculateDueDate = true;
                                    if(rsOpening.getRow() > 0) {
                                        while(!rsOpening.isAfterLast()) {
                                            DueDate = "";
                                            int CompanyID = UtilFunctions.getInt(rsOpening, "SR_NO", 0);
                                            double Amount = UtilFunctions.getDouble(rsOpening, "AMOUNT", 0);
                                            calculateDueDate = true;
                                            if(clsVoucher.getVoucherType(UtilFunctions.getString(rsOpening, "VOUCHER_NO", "")) == FinanceGlobal.TYPE_PJV) {
                                                String VoucherDate = UtilFunctions.getString(rsOpening, "VOUCHER_DATE","0000-00-00");
                                                if(java.sql.Date.valueOf(VoucherDate).before(java.sql.Date.valueOf(clsDepositMaster.deductDays(ToDate,180)))) {
                                                    calculateDueDate= false;
                                                }
                                                if(calculateDueDate) {
                                                    String GRNNo = data.getStringValueFromDB("SELECT GRN_NO FROM D_FIN_VOUCHER_DETAIL WHERE " +
                                                    "EFFECT='C' AND MAIN_ACCOUNT_CODE='125019' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                                    "AND PO_NO='"+PONo+"' AND INVOICE_NO='"+BillNo+"' " +
                                                    "AND VOUCHER_NO='"+UtilFunctions.getString(rsOpening, "VOUCHER_NO", "")+"' ",FinanceGlobal.FinURL);
                                                    String InvoiceDate = "";
                                                    if(GRNNo.equals("") || GRNNo.equals(null)) {
                                                        InvoiceDate = data.getStringValueFromDB("SELECT INVOICE_DATE FROM D_FIN_VOUCHER_DETAIL WHERE " +
                                                        "EFFECT='C' AND MAIN_ACCOUNT_CODE='125019' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                                        "AND PO_NO='"+PONo+"' AND INVOICE_NO='"+BillNo+"' " +
                                                        "AND VOUCHER_NO='"+UtilFunctions.getString(rsOpening, "VOUCHER_NO", "")+"' ",FinanceGlobal.FinURL);
                                                        if(InvoiceDate.equals("")) {
                                                            JOptionPane.showMessageDialog(null,"Party Code: '"+PartyCode+"' Voucher No:'"+UtilFunctions.getString(rsVoucher, "VOUCHER_NO", "")+"' Reference Document not found.", "Reference Document Error", JOptionPane.ERROR_MESSAGE);
                                                            return;
                                                        }
                                                    }
                                                    if(GRNNo.startsWith("EX") || GRNNo.startsWith("BP")) {
                                                        DueDate = data.getStringValueFromDB("SELECT DOC_DATE FROM FINANCE.D_FIN_EXPENSE_TRANSACTION WHERE DOC_NO='"+GRNNo+"' ");
                                                    } else if(data.IsRecordExist("SELECT JOB_DATE FROM D_INV_JOB_HEADER WHERE JOB_NO='"+GRNNo+"' ", clsFinYear.getDBURL(CompanyID,EITLERPGLOBAL.FinYearFrom))) {
                                                        DueDate = data.getStringValueFromDB("SELECT JOB_DATE FROM D_INV_JOB_HEADER WHERE JOB_NO='"+GRNNo+"' ", clsFinYear.getDBURL(CompanyID,EITLERPGLOBAL.FinYearFrom));
                                                    } else if(!InvoiceDate.equals("")) {
                                                        DueDate = InvoiceDate;
                                                    } else {
                                                        DueDate = data.getStringValueFromDB("SELECT MIR_DATE FROM D_INV_MIR_HEADER WHERE MIR_NO IN (SELECT MIR_NO FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"')", clsFinYear.getDBURL(CompanyID,EITLERPGLOBAL.FinYearFrom));
                                                    }
                                                    if(DueDate.equals("") || DueDate.equals(null)) {
                                                        JOptionPane.showMessageDialog(null,"Due date (MIR DATE) not found.", "Due date not found", JOptionPane.ERROR_MESSAGE);
                                                        return;
                                                    }
                                                }
                                            } else {
                                                String VoucherDate = UtilFunctions.getString(rsOpening, "VOUCHER_DATE","0000-00-00");
                                                if(java.sql.Date.valueOf(VoucherDate).before(java.sql.Date.valueOf(clsDepositMaster.deductDays(ToDate,180)))) {
                                                    calculateDueDate= false;
                                                }
                                                DueDate = UtilFunctions.getString(rsOpening, "VOUCHER_DATE","0000-00-00");
                                            }
                                            
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                                Amount *= -1;
                                            }
                                            if(!calculateDueDate) {
                                                AmountAbove180Days += Amount;
                                            } else {
                                                int DaysDiff = EITLERPGLOBAL.getDayDifference(  UtilFunctions.getString(rsOpening, "VOUCHER_DATE","0000-00-00"),ToDate,"yyyy-MM-dd");
                                                if(DaysDiff<=30) {
                                                    AmountUpTo30Days+=Amount;
                                                } else if(DaysDiff>=31 && DaysDiff<=60) {
                                                    Amount31to60Days+=Amount;
                                                } else if(DaysDiff>=61 && DaysDiff<=90) {
                                                    Amount61to90Days+=Amount;
                                                } else if(DaysDiff>=91 && DaysDiff<=180) {
                                                    Amount91to180Days+=Amount;
                                                }
                                            }
                                            rsOpening.next();
                                        }
                                    }
                                    
                                    // ----------------------------------------------------------
                                    
                                    
                                    // NOW FETCH RECORD FROM VOUCHER TABLES
                                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                                    "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                    "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                                    "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                                    "ORDER BY A.VOUCHER_DATE ";
                                    rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow() > 0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            DueDate = "";
                                            int CompanyID = clsVoucher.getVoucherCompanyID(UtilFunctions.getString(rsVoucher, "VOUCHER_NO", ""));
                                            double Amount = UtilFunctions.getDouble(rsVoucher, "AMOUNT", 0);
                                            calculateDueDate = true;
                                            String VoucherDate = UtilFunctions.getString(rsVoucher, "VOUCHER_DATE","0000-00-00");
                                            if(java.sql.Date.valueOf(VoucherDate).before(java.sql.Date.valueOf(clsDepositMaster.deductDays(ToDate,180)))) {
                                                calculateDueDate= false;
                                            }
                                            
                                            if(clsVoucher.getVoucherType(UtilFunctions.getString(rsVoucher, "VOUCHER_NO", "")) == FinanceGlobal.TYPE_PJV) {
                                                if(calculateDueDate) {
                                                    String GRNNo = data.getStringValueFromDB("SELECT GRN_NO FROM D_FIN_VOUCHER_DETAIL WHERE EFFECT='C' " +
                                                    "AND MAIN_ACCOUNT_CODE='125019' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                                    "AND PO_NO='"+PONo+"' AND INVOICE_NO='"+BillNo+"' " +
                                                    "AND VOUCHER_NO='"+UtilFunctions.getString(rsVoucher, "VOUCHER_NO", "")+"' ",FinanceGlobal.FinURL);
                                                    String InvoiceDate="";
                                                    if(GRNNo.equals("") || GRNNo.equals(null)) {
                                                        InvoiceDate = data.getStringValueFromDB("SELECT INVOICE_DATE FROM D_FIN_VOUCHER_DETAIL WHERE " +
                                                        "EFFECT='C' AND MAIN_ACCOUNT_CODE='125019' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                                        "AND PO_NO='"+PONo+"' AND INVOICE_NO='"+BillNo+"' " +
                                                        "AND VOUCHER_NO='"+UtilFunctions.getString(rsVoucher, "VOUCHER_NO", "")+"' ",FinanceGlobal.FinURL);
                                                        if(InvoiceDate.equals("")) {
                                                            JOptionPane.showMessageDialog(null,"Party Code: '"+PartyCode+"' Voucher No:'"+UtilFunctions.getString(rsVoucher, "VOUCHER_NO", "")+"' Reference Document not found.", "Reference Document Error", JOptionPane.ERROR_MESSAGE);
                                                            return;
                                                        }
                                                    }
                                                    
                                                    if(GRNNo.startsWith("EX") || GRNNo.startsWith("BP")) {
                                                        DueDate = data.getStringValueFromDB("SELECT DOC_DATE FROM FINANCE.D_FIN_EXPENSE_TRANSACTION WHERE DOC_NO='"+GRNNo+"' ");
                                                    } else if(data.IsRecordExist("SELECT JOB_DATE FROM D_INV_JOB_HEADER WHERE JOB_NO='"+GRNNo+"' ", clsFinYear.getDBURL(CompanyID,EITLERPGLOBAL.FinYearFrom))) {
                                                        DueDate = data.getStringValueFromDB("SELECT JOB_DATE FROM D_INV_JOB_HEADER WHERE JOB_NO='"+GRNNo+"' ", clsFinYear.getDBURL(CompanyID,EITLERPGLOBAL.FinYearFrom));
                                                    } else if(!InvoiceDate.equals("")) {
                                                        DueDate = InvoiceDate;
                                                    } else {
                                                        DueDate = data.getStringValueFromDB("SELECT MIR_DATE FROM D_INV_MIR_HEADER WHERE MIR_NO IN (SELECT MIR_NO FROM D_INV_GRN_DETAIL WHERE GRN_NO='"+GRNNo+"')", clsFinYear.getDBURL(CompanyID,EITLERPGLOBAL.FinYearFrom));
                                                    }
                                                    if(DueDate.equals("") || DueDate.equals(null)) {
                                                        JOptionPane.showMessageDialog(null,"Due date (MIR DATE) not found.", "MIR DATE not found", JOptionPane.ERROR_MESSAGE);
                                                        return;
                                                    }
                                                }
                                            } else {
                                                DueDate = UtilFunctions.getString(rsVoucher, "VOUCHER_DATE","0000-00-00");
                                            }
                                            
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                                Amount *= -1;
                                            }
                                            if(!calculateDueDate) {
                                                AmountAbove180Days += Amount;
                                            } else {
                                                int DaysDiff = EITLERPGLOBAL.getDayDifference(UtilFunctions.getString(rsVoucher, "VOUCHER_DATE","0000-00-00") , ToDate,"yyyy-MM-dd");
                                                if(DaysDiff<=30) {
                                                    AmountUpTo30Days+=Amount;
                                                } else if(DaysDiff>=31 && DaysDiff<=60) {
                                                    Amount31to60Days+=Amount;
                                                } else if(DaysDiff>=61 && DaysDiff<=90) {
                                                    Amount61to90Days+=Amount;
                                                } else if(DaysDiff>=91 && DaysDiff<=180) {
                                                    Amount91to180Days+=Amount;
                                                }
                                            }
                                            rsVoucher.next();
                                        }
                                    }
                                    //-------------------------------------
                                    rsPO.next();
                                }
                            }
                            objRow=objData.newRow();
                            objRow.setValue("MAIN_ACCOUNT_CODE",MainCode);
                            objRow.setValue("SUB_ACCOUNT_CODE",PartyCode);
                            objRow.setValue("PARTY_NAME",PartyName);
                            objRow.setValue("AMOUNT_UP_TO_30_DAYS",Double.toString(AmountUpTo30Days));
                            objRow.setValue("AMOUNT_31_TO_60_DAYS",Double.toString(Amount31to60Days));
                            objRow.setValue("AMOUNT_61_TO_90_DAYS",Double.toString(Amount61to90Days));
                            objRow.setValue("AMOUNT_91_TO_180_DAYS",Double.toString(Amount91to180Days));
                            objRow.setValue("AMOUNT_ABOVE_180_DAYS",Double.toString(AmountAbove180Days));
                            objRow.setValue("CLOSING_BALANCE",Double.toString(Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode, ToDate,true))));
                            objData.AddRow(objRow);
                            //System.out.println("Party Code : " + PartyCode + " AmountUpTo30Days : " + AmountUpTo30Days + " Amount31to60Days : " + Amount31to60Days + " Amount61to90Days : " + Amount61to90Days + " Amount91to180Days : " + Amount91to180Days + " AmountAbove180Days : " + AmountAbove180Days);
                            rsParty.next();
                        }
                    }
                    
                } catch(Exception e) {
                    e.printStackTrace();
                    Bar.setVisible(false);
                    lblStatus.setVisible(false);
                }
                HashMap Parameters=new HashMap();
                Parameters.put("OUT_DATE",txtAsOnDate.getText().trim());
                Parameters.put("RUN_DATE",EITLERPGLOBAL.getCurrentDate());
                objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptScheduleVICreditors.rpt",Parameters,objData);
                Bar.setVisible(false);
                lblStatus.setVisible(false);
                
            };
        }.start();
    }//GEN-LAST:event_cmdScheduleVICreditorsActionPerformed
    
    private void txtMainCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMainCodeKeyPressed
        // TODO add your handling code here:
        try {
            if(evt.getKeyCode()==112) {
                LOV aList=new LOV();
                
                aList.SQL="SELECT MAIN_ACCOUNT_CODE,ACCOUNT_NAME FROM D_FIN_GL WHERE  APPROVED=1 ORDER BY ACCOUNT_NAME";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=2;
                aList.UseSpecifiedConn=true;
                aList.dbURL=FinanceGlobal.FinURL;
                
                if(aList.ShowLOV()) {
                    txtMainCode.setText(aList.ReturnVal);
                }
            }
        }
        catch(Exception e) {
        }
    }//GEN-LAST:event_txtMainCodeKeyPressed
    
    private void txtSubCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubCodeKeyPressed
        // TODO add your handling code here:
        String MainCode = txtMainCode.getText().trim();
        try {
            if(evt.getKeyCode()==112) {
                LOV aList=new LOV();
                
                aList.SQL="SELECT PARTY_CODE,PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE='"+MainCode+"' ORDER BY PARTY_NAME";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=2;
                aList.UseSpecifiedConn=true;
                aList.dbURL=FinanceGlobal.FinURL;
                
                if(aList.ShowLOV()) {
                    txtSubCode.setText(aList.ReturnVal);
                }
            }
        }
        catch(Exception e) {
        }
    }//GEN-LAST:event_txtSubCodeKeyPressed
    
    private void txtSubCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSubCodeFocusLost
        // TODO add your handling code here:
        if(!txtMainCode.getText().trim().equals("")) {
            lblSubCodeName.setText(clsAccount.getAccountName(txtMainCode.getText().trim(), txtSubCode.getText().trim()));
        } else {
            lblSubCodeName.setText("...");
        }
    }//GEN-LAST:event_txtSubCodeFocusLost
    
    private void txtMainCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMainCodeFocusLost
        // TODO add your handling code here:
        if(!txtMainCode.getText().trim().equals("")) {
            lblMainCodeName.setText(clsAccount.getAccountName(txtMainCode.getText().trim(), ""));
        } else {
            lblMainCodeName.setText("...");
        }
    }//GEN-LAST:event_txtMainCodeFocusLost
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if(!Validate()) {
            return;
        }
        
        new Thread() {
            
            public void run() {
                
                double CrAmount=0, DrAmount=0, ClosingBalance=0;
                String SQL="", MainCode="", PartyCode="", PartyName="", FromDate="", ToDate="",PONo="",PODate="",BillNo="";
                ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
                int EntryNo=0,Max=0,Counter=0;
                HashMap tempList = new HashMap();
                HashMap ReportList = new HashMap();
                clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
                boolean PartyChange = false;
                try {
                    String strCondition="";
                    if(!txtMainCode.getText().equals("")) {
                        strCondition=" WHERE MAIN_ACCOUNT_CODE='"+txtMainCode.getText().trim()+"' ";
                    }
                    if(!txtSubCode.getText().equals("")) {
                        strCondition=" AND PARTY_CODE='"+txtSubCode.getText().trim()+"' ";
                    }
                    
                    data.Execute("DELETE FROM TEMP_DATABASE.TMP_CR_OS "+strCondition);
                    // SET LAST CLOSING DATE & TO DATE
                    MainCode=txtMainCode.getText().trim();
                    ToDate=EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
                    FromDate=EITLERPGLOBAL.FinFromDateDB;
                    SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
                    EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    if(MainCode.equals("125019")){
                    FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
                    }else{
                        FromDate="1984-01-01";
                    }
                    // ------------------------------
                    
                    // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
                    
                    MainCode = txtMainCode.getText().trim();
                    PartyCode="";
                    String Condition="";
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }
                    
                    SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND ENTRY_NO="+ EntryNo + Condition +
                    " UNION " +
                    "SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' "+ Condition +" AND B.SUB_ACCOUNT_CODE<>'' " +
                    "AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY SUB_ACCOUNT_CODE ";
                    
                    rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsParty.last();
                    Max= rsParty.getRow();
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    Counter=0;
                    rsParty.first();
                    // --------------------------------------------------------------------------------------------------
                    
                    if(rsParty.getRow()>0) {
                        while(!rsParty.isAfterLast()) {
                            
                            Counter++;
                            
                            Bar.setValue(Counter);
                            Bar.repaint();
                            // GET PARTY NAME AND DISPLAY IT
                            PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                            lblStatus.setText("Party : "+PartyCode);
                            PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            // -----------------------------
                            //System.out.println(PartyCode);
                            // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES //,PO_DATE
                            if(MainCode.equals("125019")){
                            SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " + //PO_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE
                            "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+") " + //" AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "UNION " +
                            "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            "AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            //" AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' GROUP BY PO_NO  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }else{
                                SQL="(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            "AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            //" AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' GROUP BY PO_NO  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }
                            System.out.println(SQL);
                            rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsPO.first();
                            PONo="";
                            BillNo="";
                            PartyChange = false;
                            // ---------------------------------------------------------------------
                            
                            if(rsPO.getRow()>0) {
                                while(!rsPO.isAfterLast()) {
                                    
                                    // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                                    CrAmount=0;
                                    DrAmount=0;
                                    
                                    if(!PartyChange) {
                                        ClosingBalance = Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true));
                                        PartyChange=true;
                                    }
                                    
                                    PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                                    //int CompanyID = UtilFunctions.getInt(rsPO,"COMPANY_ID", 0);
                                    //PODate = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyID, EITLERPGLOBAL.FinYearFrom));
                                    BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                                    BillNo = BillNo.trim().replace("'","''");
                                    SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' ORDER BY VOUCHER_DATE";
                                    rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsOpening.first();
                                    
                                    if(rsOpening.getRow() > 0) {
                                        while(!rsOpening.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsOpening,"PO_DATE","0000-00-00"));//PODate
                                            ObjItem.setAttribute("PAY_TERM", UtilFunctions.getInt(rsOpening,"PAY_TERM",0));
                                            ObjItem.setAttribute("PAY_DAY", UtilFunctions.getInt(rsOpening,"PAY_DAY",0));
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsOpening,"BILL_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsOpening,"BILL_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsOpening,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsOpening,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsOpening,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsOpening,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsOpening,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsOpening,"EFFECT",""));
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // --------------------------------
                                            
                                            rsOpening.next();
                                            data.Execute("INSERT INTO TEMP_DATABASE.TMP_CR_OS "
+ "VALUES ("
+ " '"+ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("PARTY_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("PARTY_NAME").getString()+"', "
+ " '"+ObjItem.getAttribute("PO_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("PO_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("PAY_TERM").getString()+"', "
+ " '"+ObjItem.getAttribute("PAY_DAY").getString()+"', "
+ " '"+ObjItem.getAttribute("BILL_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("BILL_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("BOOK_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("VOUCHER_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("VOUCHER_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("LEGACY_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("LEGACY_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("EFFECT").getString()+"', "
+ " '"+ObjItem.getAttribute("CREDIT_AMOUNT").getVal()+"', "
+ " '"+ObjItem.getAttribute("DEBIT_AMOUNT").getVal()+"', "
+ " '"+ObjItem.getAttribute("CLOSING_BALANCE").getString()+"') "
);
                                        }
                                    }
                                    
                                    // ----------------------------------------------------------
                                    
                                    
                                    // NOW FETCH RECORD FROM VOUCHER TABLES
                                    
                                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                                    "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                    "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                                    "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                                    "ORDER BY A.VOUCHER_DATE ";
                                    rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow() > 0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00"));//PODate
                                            int CompanyId = UtilFunctions.getInt(rsVoucher,"REF_COMPANY_ID",0);
                                            int PayTerm = 0;
                                            int PayDays = 0;
                                            if(CompanyId!=0) {
                                                //PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                //PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM DINESHMILLS.D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ");
                                                PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM DINESHMILLS.D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ");
                                            }
                                            ObjItem.setAttribute("PAY_TERM", PayTerm);
                                            ObjItem.setAttribute("PAY_DAY", PayDays);
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsVoucher,"INVOICE_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsVoucher,"INVOICE_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsVoucher,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsVoucher,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsVoucher,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsVoucher,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsVoucher,"EFFECT",""));
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // ---------------------------------
                                            
                                            rsVoucher.next();
                                            
                                            data.Execute("INSERT INTO TEMP_DATABASE.TMP_CR_OS "
+ "VALUES ("
+ " '"+ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("PARTY_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("PARTY_NAME").getString()+"', "
+ " '"+ObjItem.getAttribute("PO_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("PO_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("PAY_TERM").getString()+"', "
+ " '"+ObjItem.getAttribute("PAY_DAY").getString()+"', "
+ " '"+ObjItem.getAttribute("BILL_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("BILL_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("BOOK_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("VOUCHER_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("VOUCHER_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("LEGACY_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("LEGACY_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("EFFECT").getString()+"', "
+ " '"+ObjItem.getAttribute("CREDIT_AMOUNT").getVal()+"', "
+ " '"+ObjItem.getAttribute("DEBIT_AMOUNT").getVal()+"', "
+ " '"+ObjItem.getAttribute("CLOSING_BALANCE").getString()+"') "
);
                                        }
                                    }
                                    //-------------------------------------
                                    
                                    if(EITLERPGLOBAL.round(CrAmount,2)!=EITLERPGLOBAL.round(DrAmount,2)) {
                                        ReportList = appendList(tempList,ReportList) ;
                                        tempList.clear();
                                    } else {
                                        tempList.clear();
                                    }
                                    
                                    rsPO.next();
                                }
                            }
                            rsParty.next();
                        }
                    }
                    if(ReportList.size() > 0) {
                        //generateTempTable(ReportList);
                        generateReport(ReportList,txtAsOnDate.getText().trim());
                        if(chkExcel.isSelected()){
                            generateTempTable(ReportList);
                            generateExcel();
                        }
                    }
                } catch(Exception e) {
                    e.printStackTrace();
                }
                
                Bar.setVisible(false);
                lblStatus.setVisible(false);
            };
        }.start();
        
    }//GEN-LAST:event_cmdPreviewActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!Validate()) {
            return;
        }
        
        new Thread() {
            
            public void run() {
                
                double CrAmount=0, DrAmount=0, ClosingBalance=0;
                String SQL="", MainCode="", PartyCode="", PartyName="", FromDate="", ToDate="",PONo="",PODate="",BillNo="";
                ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
                int EntryNo=0,Max=0,Counter=0;
                HashMap tempList = new HashMap();
                HashMap ReportList = new HashMap();
                clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
                boolean PartyChange = false;
                try {
                    
                    // SET LAST CLOSING DATE & TO DATE
                    MainCode=txtMainCode.getText().trim();
                    ToDate=EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
                    FromDate=EITLERPGLOBAL.FinFromDateDB;
                    SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
                    EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    if(MainCode.equals("125019")){
                    FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
                    }else{
                        FromDate="1984-01-01";
                    }
                    // ------------------------------
                    
                    // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
                    
                    MainCode = txtMainCode.getText().trim();
                    PartyCode="";
                    String Condition="";
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }else{
                        Condition= " AND SUB_ACCOUNT_CODE LIKE '7%' ";
                    }
                    
                    SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND ENTRY_NO="+ EntryNo + Condition +
                    " UNION " +
                    "SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' "+ Condition +" AND B.SUB_ACCOUNT_CODE<>'' " +
                    "AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY SUB_ACCOUNT_CODE ";
                    
                    rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsParty.last();
                    Max= rsParty.getRow();
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    Counter=0;
                    rsParty.first();
                    // --------------------------------------------------------------------------------------------------
                    
                    if(rsParty.getRow()>0) {
                        while(!rsParty.isAfterLast()) {
                            
                            Counter++;
                            
                            Bar.setValue(Counter);
                            Bar.repaint();
                            // GET PARTY NAME AND DISPLAY IT
                            PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                            lblStatus.setText("Party : "+PartyCode);
                            PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            // -----------------------------
                            
                            // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES //,PO_DATE
                            if(MainCode.equals("125019")){
                            SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " + //PO_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE
                            "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND (MATCHED=0 OR MATCHED IS NULL)) " + //" AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "UNION " +
                            "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }else{
                                SQL="(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }
                            System.out.println(SQL);
                            rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsPO.first();
                            PONo="";
                            BillNo="";
                            PartyChange = false;
                            // ---------------------------------------------------------------------
                            
                            if(rsPO.getRow()>0) {
                                while(!rsPO.isAfterLast()) {
                                    
                                    // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                                    CrAmount=0;
                                    DrAmount=0;
                                    
                                    if(!PartyChange) {
                                        ClosingBalance = Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true));
                                        PartyChange=true;
                                    }
                                    
                                    PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                                    //int CompanyID = UtilFunctions.getInt(rsPO,"COMPANY_ID", 0);
                                    //PODate = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyID, EITLERPGLOBAL.FinYearFrom));
                                    BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                                    SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' ORDER BY VOUCHER_DATE";
                                    rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsOpening.first();
                                    
                                    if(rsOpening.getRow() > 0) {
                                        while(!rsOpening.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsOpening,"PO_DATE","0000-00-00"));//PODate
                                            ObjItem.setAttribute("PAY_TERM", UtilFunctions.getInt(rsOpening,"PAY_TERM",0));
                                            ObjItem.setAttribute("PAY_DAY", UtilFunctions.getInt(rsOpening,"PAY_DAY",0));
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsOpening,"BILL_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsOpening,"BILL_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsOpening,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsOpening,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsOpening,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsOpening,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsOpening,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsOpening,"EFFECT",""));
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // --------------------------------
                                            
                                            rsOpening.next();
                                        }
                                    }
                                    
                                    // ----------------------------------------------------------
                                    
                                    
                                    // NOW FETCH RECORD FROM VOUCHER TABLES
                                    
                                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                                    "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                    "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                                    "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                                    "AND (B.MATCHED=0 OR B.MATCHED IS NULL) "+
                                    "ORDER BY A.VOUCHER_DATE ";
                                    rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow() > 0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00"));//PODate
                                            int CompanyId = UtilFunctions.getInt(rsVoucher,"REF_COMPANY_ID",0);
                                            int PayTerm = 0;
                                            int PayDays = 0;
                                            if(CompanyId!=0) {
                                                PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                            }
                                            ObjItem.setAttribute("PAY_TERM", PayTerm);
                                            ObjItem.setAttribute("PAY_DAY", PayDays);
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsVoucher,"INVOICE_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsVoucher,"INVOICE_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsVoucher,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsVoucher,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsVoucher,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsVoucher,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsVoucher,"EFFECT",""));
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // ---------------------------------
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    //-------------------------------------
                                    
                                    if(EITLERPGLOBAL.round(CrAmount,2)!=EITLERPGLOBAL.round(DrAmount,2)) {
                                        ReportList = appendList(tempList,ReportList) ;
                                        tempList.clear();
                                    } else {
                                        tempList.clear();
                                    }
                                    
                                    rsPO.next();
                                }
                            }
                            rsParty.next();
                        }
                    }
                    if(ReportList.size() > 0) {
                        generateReport(ReportList,txtAsOnDate.getText().trim());
                        if(chkExcel.isSelected()){
                            generateTempTable(ReportList);
                            generateExcel();
                        }
                    }
                } catch(Exception e) {
                    e.printStackTrace();
                }
                
                Bar.setVisible(false);
                lblStatus.setVisible(false);
            };
        }.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(!Validate()) {
            return;
        }
        
        new Thread() {
            
            public void run() {
                
                double CrAmount=0, DrAmount=0, ClosingBalance=0;
                String SQL="", MainCode="", PartyCode="", PartyName="", FromDate="", ToDate="",PONo="",PODate="",BillNo="";
                ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
                int EntryNo=0,Max=0,Counter=0;
                HashMap tempList = new HashMap();
                HashMap ReportList = new HashMap();
                clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
                boolean PartyChange = false;
                try {
                    
                    // SET LAST CLOSING DATE & TO DATE
                    MainCode=txtMainCode.getText().trim();
                    ToDate=EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
                    FromDate=EITLERPGLOBAL.FinFromDateDB;
                    SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
                    EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    if(MainCode.equals("125019")){
                    FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
                    }else{
                        FromDate="1984-01-01";
                    }
                    // ------------------------------
                    
                    // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
                    
                    MainCode = txtMainCode.getText().trim();
                    PartyCode="";
                    String Condition="";
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }else{
                        Condition= " AND SUB_ACCOUNT_CODE LIKE '61%' ";
                    }
                    
                    SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND ENTRY_NO="+ EntryNo + Condition +
                    " UNION " +
                    "SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' "+ Condition +" AND B.SUB_ACCOUNT_CODE<>'' " +
                    "AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY SUB_ACCOUNT_CODE ";
                    
                    rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsParty.last();
                    Max= rsParty.getRow();
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    Counter=0;
                    rsParty.first();
                    // --------------------------------------------------------------------------------------------------
                    
                    if(rsParty.getRow()>0) {
                        while(!rsParty.isAfterLast()) {
                            
                            Counter++;
                            
                            Bar.setValue(Counter);
                            Bar.repaint();
                            // GET PARTY NAME AND DISPLAY IT
                            PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                            lblStatus.setText("Party : "+PartyCode);
                            PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            // -----------------------------
                            System.out.println(PartyCode+" - "+PartyName);
                            
                            // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES //,PO_DATE
                            if(MainCode.equals("125019")){
                            SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " + //PO_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE
                            "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND (MATCHED=0 OR MATCHED IS NULL)) " + //" AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "UNION " +
                            "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }else{
                                SQL="(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }
                            System.out.println(SQL);
                            rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsPO.first();
                            PONo="";
                            BillNo="";
                            PartyChange = false;
                            // ---------------------------------------------------------------------
                            
                            if(rsPO.getRow()>0) {
                                while(!rsPO.isAfterLast()) {
                                    
                                    // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                                    CrAmount=0;
                                    DrAmount=0;
                                    
                                    if(!PartyChange) {
                                        ClosingBalance = Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true));
                                        PartyChange=true;
                                    }
                                    
                                    //PONo = UtilFunctions.getString(rsPO,"PO_NO", "");
                                    PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                                    //int CompanyID = UtilFunctions.getInt(rsPO,"COMPANY_ID", 0);
                                    //PODate = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyID, EITLERPGLOBAL.FinYearFrom));
                                    //BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "");
                                    BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                                    BillNo = BillNo.trim().replace("'","''");
                                    SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' AND (MATCHED=0 OR MATCHED IS NULL) ORDER BY VOUCHER_DATE";
                                    //System.out.println(SQL);
                                    rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsOpening.first();
                                    
                                    if(rsOpening.getRow() > 0) {
                                        while(!rsOpening.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsOpening,"PO_DATE","0000-00-00"));//PODate
                                            ObjItem.setAttribute("PAY_TERM", UtilFunctions.getInt(rsOpening,"PAY_TERM",0));
                                            ObjItem.setAttribute("PAY_DAY", UtilFunctions.getInt(rsOpening,"PAY_DAY",0));
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsOpening,"BILL_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsOpening,"BILL_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsOpening,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsOpening,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsOpening,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsOpening,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsOpening,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsOpening,"EFFECT",""));
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // --------------------------------
                                            
                                            rsOpening.next();
                                        }
                                    }
                                    
                                    // ----------------------------------------------------------
                                    
                                    
                                    // NOW FETCH RECORD FROM VOUCHER TABLES
                                    
                                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                                    "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                    "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                                    "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                                    "AND (B.MATCHED=0 OR B.MATCHED IS NULL) "+
                                    "ORDER BY A.VOUCHER_DATE ";
                                    rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow() > 0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00"));//PODate
                                            int CompanyId = UtilFunctions.getInt(rsVoucher,"REF_COMPANY_ID",0);
                                            int PayTerm = 0;
                                            int PayDays = 0;
                                            if(CompanyId!=0) {
                                                PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                            }
                                            ObjItem.setAttribute("PAY_TERM", PayTerm);
                                            ObjItem.setAttribute("PAY_DAY", PayDays);
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsVoucher,"INVOICE_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsVoucher,"INVOICE_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsVoucher,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsVoucher,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsVoucher,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsVoucher,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsVoucher,"EFFECT",""));
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // ---------------------------------
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    //-------------------------------------
                                    
                                    if(EITLERPGLOBAL.round(CrAmount,2)!=EITLERPGLOBAL.round(DrAmount,2)) {
                                        ReportList = appendList(tempList,ReportList) ;
                                        tempList.clear();
                                    } else {
                                        tempList.clear();
                                    }
                                    
                                    rsPO.next();
                                }
                            }
                            rsParty.next();
                        }
                    }
                    if(ReportList.size() > 0) {
                        generateReport(ReportList,txtAsOnDate.getText().trim());
                        if(chkExcel.isSelected()){
                            generateTempTable(ReportList);
                            generateExcel();
                        }
                    }
                } catch(Exception e) {
                    e.printStackTrace();
                }
                
                Bar.setVisible(false);
                lblStatus.setVisible(false);
            };
        }.start();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(!Validate()) {
            return;
        }
        
        new Thread() {
            
            public void run() {
                
                double CrAmount=0, DrAmount=0, ClosingBalance=0;
                String SQL="", MainCode="", PartyCode="", PartyName="", FromDate="", ToDate="",PONo="",PODate="",BillNo="";
                ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
                int EntryNo=0,Max=0,Counter=0;
                HashMap tempList = new HashMap();
                HashMap ReportList = new HashMap();
                clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
                boolean PartyChange = false;
                try {
                    
                    // SET LAST CLOSING DATE & TO DATE
                    MainCode=txtMainCode.getText().trim();
                    ToDate=EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
                    FromDate=EITLERPGLOBAL.FinFromDateDB;
                    SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
                    EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    if(MainCode.equals("125019")){
                    FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
                    }else{
                        FromDate="1984-01-01";
                    }
                    // ------------------------------
                    
                    // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
                    
                    MainCode = txtMainCode.getText().trim();
                    PartyCode="";
                    String Condition="";
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }else{
                        Condition= " AND SUB_ACCOUNT_CODE LIKE '60%' ";
                    }
                    
                    SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND ENTRY_NO="+ EntryNo + Condition +
                    " UNION " +
                    "SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' "+ Condition +" AND B.SUB_ACCOUNT_CODE<>'' " +
                    "AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY SUB_ACCOUNT_CODE ";
                    
                    rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsParty.last();
                    Max= rsParty.getRow();
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    Counter=0;
                    rsParty.first();
                    // --------------------------------------------------------------------------------------------------
                    
                    if(rsParty.getRow()>0) {
                        while(!rsParty.isAfterLast()) {
                            
                            Counter++;
                            
                            Bar.setValue(Counter);
                            Bar.repaint();
                            // GET PARTY NAME AND DISPLAY IT
                            PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                            lblStatus.setText("Party : "+PartyCode);
                            PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            // -----------------------------
                            
                            // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES //,PO_DATE
                            if(MainCode.equals("125019")){
                            SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " + //PO_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE
                            //"WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+") " + //" AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND (MATCHED=0 OR MATCHED IS NULL)) " + //" AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "UNION " +
                            "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }else{
                                SQL="(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }
                            rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsPO.first();
                            PONo="";
                            BillNo="";
                            PartyChange = false;
                            // ---------------------------------------------------------------------
                            
                            if(rsPO.getRow()>0) {
                                while(!rsPO.isAfterLast()) {
                                    
                                    // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                                    CrAmount=0;
                                    DrAmount=0;
                                    
                                    if(!PartyChange) {
                                        ClosingBalance = Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true));
                                        PartyChange=true;
                                    }
                                    
                                    PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                                    //int CompanyID = UtilFunctions.getInt(rsPO,"COMPANY_ID", 0);
                                    //PODate = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyID, EITLERPGLOBAL.FinYearFrom));
                                    BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                                    SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                    //"AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"'  ORDER BY VOUCHER_DATE";
                                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' AND (MATCHED=0 OR MATCHED IS NULL)  ORDER BY VOUCHER_DATE";
                                            
                                    rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsOpening.first();
                                    
                                    if(rsOpening.getRow() > 0) {
                                        while(!rsOpening.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsOpening,"PO_DATE","0000-00-00"));//PODate
                                            ObjItem.setAttribute("PAY_TERM", UtilFunctions.getInt(rsOpening,"PAY_TERM",0));
                                            ObjItem.setAttribute("PAY_DAY", UtilFunctions.getInt(rsOpening,"PAY_DAY",0));
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsOpening,"BILL_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsOpening,"BILL_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsOpening,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsOpening,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsOpening,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsOpening,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsOpening,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsOpening,"EFFECT",""));
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // --------------------------------
                                            
                                            rsOpening.next();
                                        }
                                    }
                                    
                                    // ----------------------------------------------------------
                                    
                                    
                                    // NOW FETCH RECORD FROM VOUCHER TABLES
                                    
                                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                                    "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                    "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                                    "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                                    "AND (B.MATCHED=0 OR B.MATCHED IS NULL) "+
                                    "ORDER BY A.VOUCHER_DATE ";
                                    rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow() > 0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00"));//PODate
                                            int CompanyId = UtilFunctions.getInt(rsVoucher,"REF_COMPANY_ID",0);
                                            int PayTerm = 0;
                                            int PayDays = 0;
                                            if(CompanyId!=0) {
                                                PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                            }
                                            ObjItem.setAttribute("PAY_TERM", PayTerm);
                                            ObjItem.setAttribute("PAY_DAY", PayDays);
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsVoucher,"INVOICE_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsVoucher,"INVOICE_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsVoucher,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsVoucher,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsVoucher,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsVoucher,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsVoucher,"EFFECT",""));
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // ---------------------------------
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    //-------------------------------------
                                    
                                    if(EITLERPGLOBAL.round(CrAmount,2)!=EITLERPGLOBAL.round(DrAmount,2)) {
                                        ReportList = appendList(tempList,ReportList) ;
                                        tempList.clear();
                                    } else {
                                        tempList.clear();
                                    }
                                    
                                    rsPO.next();
                                }
                            }
                            rsParty.next();
                        }
                    }
                    if(ReportList.size() > 0) {
                        generateReport(ReportList,txtAsOnDate.getText().trim());
                        if(chkExcel.isSelected()){
                            generateTempTable(ReportList);
                            generateExcel();
                        }
                    }
                } catch(Exception e) {
                    e.printStackTrace();
                }
                
                Bar.setVisible(false);
                lblStatus.setVisible(false);
            };
        }.start();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(!Validate()) {
            return;
        }
        
        new Thread() {
            
            public void run() {
                
                double CrAmount=0, DrAmount=0, ClosingBalance=0;
                String SQL="", MainCode="", PartyCode="", PartyName="", FromDate="", ToDate="",PONo="",PODate="",BillNo="";
                ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
                int EntryNo=0,Max=0,Counter=0;
                HashMap tempList = new HashMap();
                HashMap ReportList = new HashMap();
                clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
                boolean PartyChange = false;
                try {
                    
                    // SET LAST CLOSING DATE & TO DATE
                    MainCode=txtMainCode.getText().trim();
                    ToDate=EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
                    FromDate=EITLERPGLOBAL.FinFromDateDB;
                    SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
                    EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    if(MainCode.equals("125019")){
                    FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
                    }else{
                        FromDate="1984-01-01";
                    }
                    // ------------------------------
                    
                    // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
                    
                    MainCode = txtMainCode.getText().trim();
                    PartyCode="";
                    String Condition="";
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }else{
                        Condition= " AND SUB_ACCOUNT_CODE LIKE '62%' ";
                    }
                    
                    SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND ENTRY_NO="+ EntryNo + Condition +
                    " UNION " +
                    "SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' "+ Condition +" AND B.SUB_ACCOUNT_CODE<>'' " +
                    "AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY SUB_ACCOUNT_CODE ";
                    
                    rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsParty.last();
                    Max= rsParty.getRow();
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    Counter=0;
                    rsParty.first();
                    // --------------------------------------------------------------------------------------------------
                    
                    if(rsParty.getRow()>0) {
                        while(!rsParty.isAfterLast()) {
                            
                            Counter++;
                            
                            Bar.setValue(Counter);
                            Bar.repaint();
                            // GET PARTY NAME AND DISPLAY IT
                            PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                            lblStatus.setText("Party : "+PartyCode);
                            PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            // -----------------------------
                            
                            // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES //,PO_DATE
                            if(MainCode.equals("")){
                            SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " + //PO_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE
                            "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND (MATCHED=0 OR MATCHED IS NULL)) " + //" AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "UNION " +
                            "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }else{
                                SQL="(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }
                            rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsPO.first();
                            PONo="";
                            BillNo="";
                            PartyChange = false;
                            // ---------------------------------------------------------------------
                            
                            if(rsPO.getRow()>0) {
                                while(!rsPO.isAfterLast()) {
                                    
                                    // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                                    CrAmount=0;
                                    DrAmount=0;
                                    
                                    if(!PartyChange) {
                                        ClosingBalance = Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true));
                                        PartyChange=true;
                                    }
                                    
                                    PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                                    //int CompanyID = UtilFunctions.getInt(rsPO,"COMPANY_ID", 0);
                                    //PODate = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyID, EITLERPGLOBAL.FinYearFrom));
                                    BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                                    SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' AND (MATCHED=0 OR MATCHED IS NULL) ORDER BY VOUCHER_DATE";
                                    rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsOpening.first();
                                    
                                    if(rsOpening.getRow() > 0) {
                                        while(!rsOpening.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsOpening,"PO_DATE","0000-00-00"));//PODate
                                            ObjItem.setAttribute("PAY_TERM", UtilFunctions.getInt(rsOpening,"PAY_TERM",0));
                                            ObjItem.setAttribute("PAY_DAY", UtilFunctions.getInt(rsOpening,"PAY_DAY",0));
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsOpening,"BILL_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsOpening,"BILL_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsOpening,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsOpening,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsOpening,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsOpening,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsOpening,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsOpening,"EFFECT",""));
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // --------------------------------
                                            
                                            rsOpening.next();
                                        }
                                    }
                                    
                                    // ----------------------------------------------------------
                                    
                                    
                                    // NOW FETCH RECORD FROM VOUCHER TABLES
                                    
                                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                                    "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                    "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                                    "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                                    "AND (B.MATCHED=0 OR B.MATCHED IS NULL) "+
                                    "ORDER BY A.VOUCHER_DATE ";
                                    rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow() > 0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00"));//PODate
                                            int CompanyId = UtilFunctions.getInt(rsVoucher,"REF_COMPANY_ID",0);
                                            int PayTerm = 0;
                                            int PayDays = 0;
                                            if(CompanyId!=0) {
                                                PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                            }
                                            ObjItem.setAttribute("PAY_TERM", PayTerm);
                                            ObjItem.setAttribute("PAY_DAY", PayDays);
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsVoucher,"INVOICE_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsVoucher,"INVOICE_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsVoucher,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsVoucher,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsVoucher,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsVoucher,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsVoucher,"EFFECT",""));
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // ---------------------------------
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    //-------------------------------------
                                    
                                    if(EITLERPGLOBAL.round(CrAmount,2)!=EITLERPGLOBAL.round(DrAmount,2)) {
                                        ReportList = appendList(tempList,ReportList) ;
                                        tempList.clear();
                                    } else {
                                        tempList.clear();
                                    }
                                    
                                    rsPO.next();
                                }
                            }
                            rsParty.next();
                        }
                    }
                    if(ReportList.size() > 0) {
                        generateReport(ReportList,txtAsOnDate.getText().trim());
                        if(chkExcel.isSelected()){
                            generateTempTable(ReportList);
                            generateExcel();
                        }
                    }
                } catch(Exception e) {
                    e.printStackTrace();
                }
                
                Bar.setVisible(false);
                lblStatus.setVisible(false);
            };
        }.start();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmdPreview1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreview1ActionPerformed
                if(!Validate()) {
            return;
        }
        
        new Thread() {
            
            public void run() {
                
                double CrAmount=0, DrAmount=0, ClosingBalance=0;
                String SQL="", MainCode="", PartyCode="", PartyName="", FromDate="", ToDate="",PONo="",PODate="",BillNo="";
                ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
                int EntryNo=0,Max=0,Counter=0;
                HashMap tempList = new HashMap();
                HashMap ReportList = new HashMap();
                clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
                boolean PartyChange = false;
                try {
                    
                    // SET LAST CLOSING DATE & TO DATE
                    ToDate=EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
                    FromDate=EITLERPGLOBAL.FinFromDateDB;
                    SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
                    EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
                    // ------------------------------
                    
                    // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
                    
                    MainCode = txtMainCode.getText().trim();
                    PartyCode="";
                    String Condition="";
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }
                    
                    SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND ENTRY_NO="+ EntryNo + Condition;  
                    //" UNION " +
                    //"SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    //"WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' "+ Condition +" AND B.SUB_ACCOUNT_CODE<>'' " +
                    //"AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 "
                    //        + "ORDER BY SUB_ACCOUNT_CODE ";
                    
                    rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsParty.last();
                    Max= rsParty.getRow();
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    Counter=0;
                    rsParty.first();
                    // --------------------------------------------------------------------------------------------------
                    
                    if(rsParty.getRow()>0) {
                        while(!rsParty.isAfterLast()) {
                            
                            Counter++;
                            
                            Bar.setValue(Counter);
                            Bar.repaint();
                            // GET PARTY NAME AND DISPLAY IT
                            PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                            lblStatus.setText("Party : "+PartyCode);
                            PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            // -----------------------------
                            System.out.println(PartyCode);
                            // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES //,PO_DATE
                            SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " + //PO_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE
                            "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+") "; //+ //" AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            /*"UNION " +
                            "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            "AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            //" AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' GROUP BY PO_NO  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            */
                            rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsPO.first();
                            PONo="";
                            BillNo="";
                            PartyChange = false;
                            // ---------------------------------------------------------------------
                            
                            if(rsPO.getRow()>0) {
                                while(!rsPO.isAfterLast()) {
                                    
                                    // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                                    CrAmount=0;
                                    DrAmount=0;
                                    
                                    if(!PartyChange) {
                                        ClosingBalance = Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true));
                                        PartyChange=true;
                                    }
                                    
                                    PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                                    //int CompanyID = UtilFunctions.getInt(rsPO,"COMPANY_ID", 0);
                                    //PODate = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyID, EITLERPGLOBAL.FinYearFrom));
                                    BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                                    SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' ORDER BY VOUCHER_DATE";
                                    rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsOpening.first();
                                    
                                    if(rsOpening.getRow() > 0) {
                                        while(!rsOpening.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsOpening,"PO_DATE","0000-00-00"));//PODate
                                            ObjItem.setAttribute("PAY_TERM", UtilFunctions.getInt(rsOpening,"PAY_TERM",0));
                                            ObjItem.setAttribute("PAY_DAY", UtilFunctions.getInt(rsOpening,"PAY_DAY",0));
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsOpening,"BILL_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsOpening,"BILL_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsOpening,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsOpening,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsOpening,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsOpening,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsOpening,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsOpening,"EFFECT",""));
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // --------------------------------
                                            
                                            rsOpening.next();
                                        }
                                    }
                                    
                                    // ----------------------------------------------------------
                                    
                                    
                                    // NOW FETCH RECORD FROM VOUCHER TABLES
                                    /*
                                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                                    "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                    "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                                    "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                                    "ORDER BY A.VOUCHER_DATE ";
                                    rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow() > 0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00"));//PODate
                                            int CompanyId = UtilFunctions.getInt(rsVoucher,"REF_COMPANY_ID",0);
                                            int PayTerm = 0;
                                            int PayDays = 0;
                                            if(CompanyId!=0) {
                                                //PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                //PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM DINESHMILLS.D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ");
                                                PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM DINESHMILLS.D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ");
                                            }
                                            ObjItem.setAttribute("PAY_TERM", PayTerm);
                                            ObjItem.setAttribute("PAY_DAY", PayDays);
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsVoucher,"INVOICE_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsVoucher,"INVOICE_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsVoucher,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsVoucher,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsVoucher,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsVoucher,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsVoucher,"EFFECT",""));
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // ---------------------------------
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    //-------------------------------------
                                    */
                                    if(EITLERPGLOBAL.round(CrAmount,2)!=EITLERPGLOBAL.round(DrAmount,2)) {
                                        ReportList = appendList(tempList,ReportList) ;
                                        tempList.clear();
                                    } else {
                                        tempList.clear();
                                    }
                                    
                                    rsPO.next();
                                }
                            }
                            rsParty.next();
                        }
                    }
                    if(ReportList.size() > 0) {
                        generateReport(ReportList,txtAsOnDate.getText().trim());
                    }
                } catch(Exception e) {
                    e.printStackTrace();
                }
                
                Bar.setVisible(false);
                lblStatus.setVisible(false);
            };
        }.start();
        
    }//GEN-LAST:event_cmdPreview1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
if(!Validate()) {
            return;
        }
        
        new Thread() {
            
            public void run() {
                
                double CrAmount=0, DrAmount=0, ClosingBalance=0;
                String SQL="", MainCode="", PartyCode="", PartyName="", FromDate="", ToDate="",PONo="",PODate="",BillNo="";
                ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
                int EntryNo=0,Max=0,Counter=0;
                HashMap tempList = new HashMap();
                HashMap ReportList = new HashMap();
                clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
                boolean PartyChange = false;
                try {
                    String strCondition="";
                    if(!txtMainCode.getText().equals("")) {
                        strCondition=" WHERE MAIN_ACCOUNT_CODE='"+txtMainCode.getText().trim()+"' ";
                    }
                    if(!txtSubCode.getText().equals("")) {
                        strCondition=" AND PARTY_CODE='"+txtSubCode.getText().trim()+"' ";
                    }
                    
                    data.Execute("DELETE FROM TEMP_DATABASE.TMP_CR_OS "+strCondition);
                    
                    // SET LAST CLOSING DATE & TO DATE
                    MainCode=txtMainCode.getText().trim();
                    ToDate=EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
                    FromDate=EITLERPGLOBAL.FinFromDateDB;
                    SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
                    EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    if(MainCode.equals("125019")){
                    FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
                    }else{
                        FromDate="1984-01-01";
                    }
                    // ------------------------------
                    
                    // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
                    
                    MainCode = txtMainCode.getText().trim();
                    PartyCode="";
                    String Condition="";
                    if(!txtSubCode.getText().equals("")) {
                        Condition=" AND SUB_ACCOUNT_CODE='"+txtSubCode.getText()+"' ";
                    }else{
                        Condition= " ";
                    }
                    
                    SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND ENTRY_NO="+ EntryNo + Condition +
                    " UNION " +
                    "SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' "+ Condition +" AND B.SUB_ACCOUNT_CODE<>'' " +
                    "AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY SUB_ACCOUNT_CODE ";
                    
                    rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsParty.last();
                    Max= rsParty.getRow();
                    Bar.setVisible(true);
                    lblStatus.setVisible(true);
                    Bar.setMaximum(Max);
                    Bar.setMinimum(0);
                    Counter=0;
                    rsParty.first();
                    // --------------------------------------------------------------------------------------------------
                    
                    if(rsParty.getRow()>0) {
                        while(!rsParty.isAfterLast()) {
                            
                            Counter++;
                            
                            Bar.setValue(Counter);
                            Bar.repaint();
                            // GET PARTY NAME AND DISPLAY IT
                            PartyCode=rsParty.getString("SUB_ACCOUNT_CODE");
                            lblStatus.setText("Party : "+PartyCode);
                            PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                            // -----------------------------
                            System.out.println(PartyCode+" - "+PartyName);
                            
                            // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES //,PO_DATE
                            if(MainCode.equals("125019")){
                            SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " + //PO_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE
                            "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND (MATCHED=0 OR MATCHED IS NULL)) " + //" AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            "UNION " +
                            "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }else{
                                SQL="(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " + //B.PO_DATE,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                            //"AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +
                            " AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"' AND (B.MATCHED=0 OR B.MATCHED IS NULL)  ) " + // " AND PO_NO='RM000545FE' AND PO_DATE='2012-01-12') " +                            
                            "ORDER BY PO_DATE,PO_NO ";//,B.PO_DATE
                            }
                            //System.out.println(SQL);
                            rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsPO.first();
                            PONo="";
                            BillNo="";
                            PartyChange = false;
                            // ---------------------------------------------------------------------
                            
                            if(rsPO.getRow()>0) {
                                while(!rsPO.isAfterLast()) {
                                    
                                    // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                                    CrAmount=0;
                                    DrAmount=0;
                                    
                                    if(!PartyChange) {
                                        ClosingBalance = Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true));
                                        PartyChange=true;
                                    }
                                    
                                    //PONo = UtilFunctions.getString(rsPO,"PO_NO", "");
                                    PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                                    //int CompanyID = UtilFunctions.getInt(rsPO,"COMPANY_ID", 0);
                                    //PODate = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyID, EITLERPGLOBAL.FinYearFrom));
                                    //BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "");
                                    BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                                    BillNo = BillNo.trim().replace("'","''");
                                    SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' AND (MATCHED=0 OR MATCHED IS NULL) ORDER BY VOUCHER_DATE";
                                    //System.out.println(SQL);
                                    rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsOpening.first();
                                    
                                    if(rsOpening.getRow() > 0) {
                                        while(!rsOpening.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsOpening,"PO_DATE","0000-00-00"));//PODate
                                            ObjItem.setAttribute("PAY_TERM", UtilFunctions.getInt(rsOpening,"PAY_TERM",0));
                                            ObjItem.setAttribute("PAY_DAY", UtilFunctions.getInt(rsOpening,"PAY_DAY",0));
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsOpening,"BILL_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsOpening,"BILL_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsOpening,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsOpening,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsOpening,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsOpening,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsOpening,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsOpening,"EFFECT",""));
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // --------------------------------
                                            
                                            rsOpening.next();
                                            data.Execute("INSERT INTO TEMP_DATABASE.TMP_CR_OS "
+ "VALUES ("
+ " '"+ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("PARTY_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("PARTY_NAME").getString()+"', "
+ " '"+ObjItem.getAttribute("PO_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("PO_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("PAY_TERM").getString()+"', "
+ " '"+ObjItem.getAttribute("PAY_DAY").getString()+"', "
+ " '"+ObjItem.getAttribute("BILL_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("BILL_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("BOOK_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("VOUCHER_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("VOUCHER_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("LEGACY_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("LEGACY_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("EFFECT").getString()+"', "
+ " '"+ObjItem.getAttribute("CREDIT_AMOUNT").getVal()+"', "
+ " '"+ObjItem.getAttribute("DEBIT_AMOUNT").getVal()+"', "
+ " '"+ObjItem.getAttribute("CLOSING_BALANCE").getString()+"') "
);
                                        }
                                    }
                                    
                                    // ----------------------------------------------------------
                                    
                                    
                                    // NOW FETCH RECORD FROM VOUCHER TABLES
                                    
                                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                                    "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                    "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                                    "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                                    "AND (B.MATCHED=0 OR B.MATCHED IS NULL) "+
                                    "ORDER BY A.VOUCHER_DATE ";
                                    rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow() > 0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            // PREPARE TEMPARORY LIST OF RECORD
                                            ObjItem = new clsPartyOutstandingItems();
                                            ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                            ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                            ObjItem.setAttribute("PARTY_NAME", PartyName);
                                            ObjItem.setAttribute("PO_NO", PONo);
                                            ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00"));//PODate
                                            int CompanyId = UtilFunctions.getInt(rsVoucher,"REF_COMPANY_ID",0);
                                            int PayTerm = 0;
                                            int PayDays = 0;
                                            if(CompanyId!=0) {
                                                PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                                PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                            }
                                            ObjItem.setAttribute("PAY_TERM", PayTerm);
                                            ObjItem.setAttribute("PAY_DAY", PayDays);
                                            ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsVoucher,"INVOICE_NO",""));
                                            ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsVoucher,"INVOICE_DATE","0000-00-00"));
                                            ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsVoucher,"BOOK_CODE",""));
                                            ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsVoucher,"VOUCHER_NO",""));
                                            ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00"));
                                            ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsVoucher,"LEGACY_NO",""));
                                            ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsVoucher,"LEGACY_DATE","0000-00-00"));
                                            ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsVoucher,"EFFECT",""));
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("C")) {
                                                CrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                                ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                            }
                                            if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                                DrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                                ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                                ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                            }
                                            ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                            
                                            tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                            // ---------------------------------
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    //-------------------------------------
                                    
                                    if(EITLERPGLOBAL.round(CrAmount,2)!=EITLERPGLOBAL.round(DrAmount,2)) {
                                        ReportList = appendList(tempList,ReportList) ;
                                        tempList.clear();
                                    } else {
                                        tempList.clear();
                                    }
                                    
                                    rsPO.next();
                                    data.Execute("INSERT INTO TEMP_DATABASE.TMP_CR_OS "
+ "VALUES ("
+ " '"+ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("PARTY_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("PARTY_NAME").getString()+"', "
+ " '"+ObjItem.getAttribute("PO_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("PO_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("PAY_TERM").getString()+"', "
+ " '"+ObjItem.getAttribute("PAY_DAY").getString()+"', "
+ " '"+ObjItem.getAttribute("BILL_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("BILL_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("BOOK_CODE").getString()+"', "
+ " '"+ObjItem.getAttribute("VOUCHER_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("VOUCHER_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("LEGACY_NO").getString()+"', "
+ " '"+ObjItem.getAttribute("LEGACY_DATE").getString()+"', "
+ " '"+ObjItem.getAttribute("EFFECT").getString()+"', "
+ " '"+ObjItem.getAttribute("CREDIT_AMOUNT").getVal()+"', "
+ " '"+ObjItem.getAttribute("DEBIT_AMOUNT").getVal()+"', "
+ " '"+ObjItem.getAttribute("CLOSING_BALANCE").getString()+"') "
);
                                }
                            }
                            rsParty.next();
                        }
                    }
                    if(ReportList.size() > 0) {
                        generateReport(ReportList,txtAsOnDate.getText().trim());
                        if(chkExcel.isSelected()){
                            generateTempTable(ReportList);
                            generateExcel();
                        }
                    }
                } catch(Exception e) {
                    e.printStackTrace();
                }
                
                Bar.setVisible(false);
                lblStatus.setVisible(false);
            };
        }.start();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String SQL1="",SQL2="";
    ResultSet rs1=null,rs2=null;
    
        try{
            String voucherCr="";
            String mainCodeCr="";
            String subCodeCr="";
            String invNoCr="";
            String invDateCr="";
            double amtCr=0.00;    
            String voucherDr="";
            String mainCodeDr="";
            String subCodeDr="";
            String invNoDr="";
            String invDateDr="";
            double amtDr=0.00;    
         
            data.Execute("TRUNCATE FINANCE.TMP_CROUTSTANDING_CR_DR");
            
        SQL1="SELECT FD.VOUCHER_NO,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,INVOICE_NO,INVOICE_DATE,AMOUNT FROM FINANCE.D_FIN_VOUCHER_DETAIL FD,FINANCE.D_FIN_VOUCHER_HEADER FH WHERE \n" +
"FD.VOUCHER_NO=FH.VOUCHER_NO AND FH.APPROVED=1 AND FH.CANCELLED=0 AND MATCHED=0 AND MAIN_ACCOUNT_CODE='125019' AND "
                //+ "SUB_ACCOUNT_CODE='606051' AND "
                + "EFFECT='C' AND INVOICE_NO!='' ORDER BY SUB_ACCOUNT_CODE,INVOICE_NO,AMOUNT";
        rs1 = data.getResult(SQL1,FinanceGlobal.FinURL);
        rs1.first();
        if(rs1.getRow()>0) {
            while(!rs1.isAfterLast()) {
                mainCodeCr=rs1.getString("MAIN_ACCOUNT_CODE");
                subCodeCr=rs1.getString("SUB_ACCOUNT_CODE");
                voucherCr=rs1.getString("VOUCHER_NO");
                invNoCr=rs1.getString("INVOICE_NO");
                invDateCr=rs1.getString("INVOICE_DATE");
                amtCr=rs1.getDouble("AMOUNT");
            SQL2="SELECT FD.VOUCHER_NO,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,INVOICE_NO,INVOICE_DATE,AMOUNT FROM FINANCE.D_FIN_VOUCHER_DETAIL FD,FINANCE.D_FIN_VOUCHER_HEADER FH WHERE \n" +
                 "FD.VOUCHER_NO=FH.VOUCHER_NO AND FH.APPROVED=1 AND FH.CANCELLED=0 AND MATCHED=0 AND MAIN_ACCOUNT_CODE='125019' AND SUB_ACCOUNT_CODE='"+subCodeCr+"' AND EFFECT='D' AND INVOICE_NO!='' "
                + " AND INVOICE_NO='"+invNoCr+"' AND INVOICE_DATE='"+invDateCr+"' AND AMOUNT="+amtCr+" ORDER BY INVOICE_NO,AMOUNT";            
                //System.out.println(SQL2);
                rs2 = data.getResult(SQL2,FinanceGlobal.FinURL);                
                rs2.first(); 
                if(rs2.getRow()>0){
                    mainCodeDr=rs2.getString("MAIN_ACCOUNT_CODE");
                    subCodeDr=rs2.getString("SUB_ACCOUNT_CODE");
                    voucherDr=rs2.getString("VOUCHER_NO");
                invNoDr=rs2.getString("INVOICE_NO");
                invDateDr=rs2.getString("INVOICE_DATE");
                amtDr=rs2.getDouble("AMOUNT");
                   String strInsertSQL="INSERT INTO FINANCE.TMP_CROUTSTANDING_CR_DR(C_MAIN_CODE,C_SUB_CODE,"
                           + "C_INVOICE_NO,C_INVOICE_DATE,C_VOUCHER_NO,C_AMOUNT,D_AMOUNT,D_VOUCHER_NO,"
                           + "D_INVOICE_NO,D_INVOICE_DATE,D_SUB_CODE,D_MAIN_CODE) VALUES "
                           + "('"+mainCodeCr+"','"+subCodeCr+"','"+invNoCr+"','"+invDateCr+"','"+voucherCr+"' "
                           + ", '"+amtCr+"','"+amtDr+"','"+voucherDr+"','"+invNoDr+"','"+invDateDr+"' "
                           + ", '"+subCodeDr+"','"+mainCodeDr+"')";
                    System.out.println(strInsertSQL);
                   data.Execute(strInsertSQL,FinanceGlobal.FinURL);                
                    System.out.println(voucherCr+"-"+invNoCr+"-"+invDateCr+"-"+amtCr);   
                    System.out.println(voucherDr+"-"+invNoDr+"-"+invDateDr+"-"+amtDr);   
                    
                }
             rs1.next();
            }            
        }
        
    }catch(Exception e){
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton6ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private javax.swing.JPanel NamePanel;
    private javax.swing.JCheckBox chkExcel;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPreview1;
    private javax.swing.JButton cmdScheduleVICreditors;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAsonDate;
    private javax.swing.JLabel lblMainCode;
    private javax.swing.JLabel lblMainCodeName;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblSubCode;
    private javax.swing.JLabel lblSubCodeName;
    private javax.swing.JTextField txtAsOnDate;
    private javax.swing.JTextField txtMainCode;
    private javax.swing.JTextField txtSubCode;
    // End of variables declaration//GEN-END:variables
    
    private HashMap appendList(HashMap FromList,HashMap ToList) {
        clsPartyOutstandingItems ObjItem = null;
        try {
            if(FromList.size()>0) {
                for(int i=1;i<= FromList.size();i++) {
                    ObjItem = (clsPartyOutstandingItems)FromList.get(Integer.toString(i));
                    ToList.put(Integer.toString(ToList.size()+1), ObjItem);
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
            return ToList;
        }
        return ToList;
    }
    
    private void generateReport(HashMap ReportList,String AsOnDate) {
        try {
            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("MAIN_ACCOUNT_CODE");
            objData.AddColumn("PARTY_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("PO_NO");
            objData.AddColumn("PO_DATE");
            objData.AddColumn("PO_TERM");
            objData.AddColumn("PAY_DAY");
            objData.AddColumn("BILL_NO");
            objData.AddColumn("BILL_DATE");
            objData.AddColumn("BOOK_CODE");
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("LEGACY_NO");
            objData.AddColumn("LEGACY_DATE");
            objData.AddColumn("DEBIT_AMOUNT");
            objData.AddColumn("CREDIT_AMOUNT");
            objData.AddColumn("CLOSING_BALANCE");
            
            TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
            clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
            
            for(int i=1;i<=ReportList.size();i++) {
                ObjItem = (clsPartyOutstandingItems)ReportList.get(Integer.toString(i));
                objRow=objData.newRow();
                objRow.setValue("MAIN_ACCOUNT_CODE",ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString());
                objRow.setValue("PARTY_CODE",ObjItem.getAttribute("PARTY_CODE").getString());
                objRow.setValue("PARTY_NAME",ObjItem.getAttribute("PARTY_NAME").getString());
                objRow.setValue("PO_NO",ObjItem.getAttribute("PO_NO").getString());
                objRow.setValue("PO_DATE",EITLERPGLOBAL.formatDate(ObjItem.getAttribute("PO_DATE").getString()));
                objRow.setValue("PAY_TERM",Integer.toString(ObjItem.getAttribute("PAY_TERM").getInt()));
                objRow.setValue("PAY_DAY",Integer.toString(ObjItem.getAttribute("PAY_DAY").getInt()));
                objRow.setValue("BILL_NO",ObjItem.getAttribute("BILL_NO").getString());
                objRow.setValue("BILL_DATE",EITLERPGLOBAL.formatDate(ObjItem.getAttribute("BILL_DATE").getString()));
                objRow.setValue("BOOK_CODE",ObjItem.getAttribute("BOOK_CODE").getString());
                objRow.setValue("VOUCHER_NO",ObjItem.getAttribute("VOUCHER_NO").getString());
                objRow.setValue("VOUCHER_DATE",EITLERPGLOBAL.formatDate(ObjItem.getAttribute("VOUCHER_DATE").getString()));
                objRow.setValue("LEGACY_NO",ObjItem.getAttribute("LEGACY_NO").getString());
                objRow.setValue("LEGACY_DATE",EITLERPGLOBAL.formatDate(ObjItem.getAttribute("LEGACY_DATE").getString()));
                //System.out.println("Debit = " + Double.toString(ObjItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                //System.out.println("CREDIT = " + Double.toString(ObjItem.getAttribute("CREDIT_AMOUNT").getDouble()));
                objRow.setValue("DEBIT_AMOUNT",Double.toString(ObjItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                objRow.setValue("CREDIT_AMOUNT",Double.toString(ObjItem.getAttribute("CREDIT_AMOUNT").getDouble()));
                objRow.setValue("CLOSING_BALANCE",Double.toString(ObjItem.getAttribute("CLOSING_BALANCE").getDouble()));
                objData.AddRow(objRow);
            }
            
            HashMap Parameters=new HashMap();
            Parameters.put("OUT_DATE",AsOnDate);
            Parameters.put("RUN_DATE",EITLERPGLOBAL.getCurrentDate());
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptPartyOutStanding.rpt",Parameters,objData);
            
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    private boolean Validate() {
        
        String AsOnDate = EITLERPGLOBAL.formatDateDB(txtAsOnDate.getText().trim());
        if(!EITLERPGLOBAL.isDate(txtAsOnDate.getText().trim())) {
            JOptionPane.showMessageDialog(this,"Wrong Date...");
            return false;
        }
        
        if(java.sql.Date.valueOf(AsOnDate).before(java.sql.Date.valueOf("2009-12-31"))) {
            JOptionPane.showMessageDialog(this,"Outstanding can not be genarated before 31/12/2009...");
            return false;
        }
        
        if(txtMainCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Input Main Code...");
            return false;
        }
        
        return true;
    }
    
    public void PreviewPartyReport(String MainCode, String PartyCode) {
        
        
        double CrAmount=0, DrAmount=0, ClosingBalance=0;
        String SQL="", PartyName="", FromDate="", PONo="",PODate="",BillNo="",ToDate="";
        ResultSet rsParty = null, rsPO=null,rsOpening=null, rsVoucher=null;
        int EntryNo=0,Max=0,Counter=0;
        HashMap tempList = new HashMap();
        HashMap ReportList = new HashMap();
        clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
        boolean PartyChange = false;
        try {
            
            // SET LAST CLOSING DATE & TO DATE
            ToDate=EITLERPGLOBAL.getCurrentDateDB();
            FromDate=EITLERPGLOBAL.FinFromDateDB;
            SQL="SELECT ENTRY_NO FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+ToDate+"' ORDER BY ENTRY_DATE DESC";
            EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
            FromDate=data.getStringValueFromDB("SELECT ENTRY_DATE FROM D_FIN_OPENING_OUTSTANDING_HEADER WHERE ENTRY_NO="+EntryNo,FinanceGlobal.FinURL);
            // ------------------------------
            
            // COUNT PARTIES FOR OUTSTANDING , SET MAIN_ACCOUNT_CODE AND PARTY_CODE (IF EXISTS IN txtPartyCode)
            
            SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
            "AND ENTRY_NO="+ EntryNo + " AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
            " UNION " +
            "SELECT DISTINCT B.SUB_ACCOUNT_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
            "AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate +"' AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY SUB_ACCOUNT_CODE ";
            
            rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
            rsParty.first();
            // --------------------------------------------------------------------------------------------------
            
            if(rsParty.getRow()>0) {
                while(!rsParty.isAfterLast()) {
                    
                    Counter++;
                    
                    
                    // GET PARTY NAME AND DISPLAY IT
                    PartyName = data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                    // -----------------------------
                    
                    // GET PARTY'S PO USING UNION FROM OUTSTANDING DETAIL AND VOUCHER TABLES
                    SQL = "(SELECT DISTINCT PO_NO,BILL_NO AS BILL_NO,PO_DATE FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL " +
                    "WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+") " +
                    "UNION " +
                    "(SELECT DISTINCT B.PO_NO,B.INVOICE_NO AS BILL_NO,B.PO_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                    //"WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND MATCHED=0 " +
                    "AND A.VOUCHER_DATE >'"+FromDate+"' AND A.VOUCHER_DATE <='"+ToDate+"') " +
                    "ORDER BY PO_DATE,PO_NO ";
                    
                    rsPO = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsPO.first();
                    PONo="";
                    BillNo="";
                    PartyChange = false;
                    // ---------------------------------------------------------------------
                    
                    if(rsPO.getRow()>0) {
                        while(!rsPO.isAfterLast()) {
                            
                            // GET FIRST PO AND FETCH RECORD IN OUTSTANDING DETAIL TABLE
                            CrAmount=0;
                            DrAmount=0;
                            
                            if(!PartyChange) {
                                ClosingBalance = Math.abs(clsAccount.getClosingBalance(MainCode,PartyCode,ToDate,true));
                                PartyChange=true;
                            }
                            
                            PONo = UtilFunctions.getString(rsPO,"PO_NO", "").trim().replace("\\","\\\\");
                            BillNo = UtilFunctions.getString(rsPO,"BILL_NO", "").trim().replace("\\","\\\\");
                            BillNo = BillNo.replace("'","''");
                            SQL = "SELECT * FROM FINANCE.D_FIN_OPENING_OUTSTANDING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                            "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO="+EntryNo+" AND PO_NO='"+PONo+"' AND BILL_NO='"+BillNo+"' ORDER BY VOUCHER_DATE";
                            rsOpening = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsOpening.first();
                            
                            if(rsOpening.getRow() > 0) {
                                while(!rsOpening.isAfterLast()) {
                                    
                                    // PREPARE TEMPARORY LIST OF RECORD
                                    ObjItem = new clsPartyOutstandingItems();
                                    ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                    ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                    ObjItem.setAttribute("PARTY_NAME", PartyName);
                                    ObjItem.setAttribute("PO_NO", PONo);
                                    ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsOpening,"PO_DATE","0000-00-00"));
                                    ObjItem.setAttribute("PAY_TERM", UtilFunctions.getInt(rsOpening,"PAY_TERM",0));
                                    ObjItem.setAttribute("PAY_DAY", UtilFunctions.getInt(rsOpening,"PAY_DAY",0));
                                    ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsOpening,"BILL_NO",""));
                                    ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsOpening,"BILL_DATE","0000-00-00"));
                                    ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsOpening,"BOOK_CODE",""));
                                    ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsOpening,"VOUCHER_NO",""));
                                    ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsOpening,"VOUCHER_DATE","0000-00-00"));
                                    ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsOpening,"LEGACY_NO",""));
                                    ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsOpening,"LEGACY_DATE","0000-00-00"));
                                    ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsOpening,"EFFECT",""));
                                    if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("C")) {
                                        CrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                        ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                        ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                    }
                                    if(UtilFunctions.getString(rsOpening,"EFFECT","").equals("D")) {
                                        DrAmount+=UtilFunctions.getDouble(rsOpening,"AMOUNT",0);
                                        ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                        ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsOpening,"AMOUNT",0));
                                    }
                                    ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                    
                                    tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                    // --------------------------------
                                    
                                    rsOpening.next();
                                }
                            }
                            
                            // ----------------------------------------------------------
                            
                            
                            // NOW FETCH RECORD FROM VOUCHER TABLES
                            
                            SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.LEGACY_NO,A.LEGACY_DATE,B.SUB_ACCOUNT_CODE,B.PO_NO,B.PO_DATE,B.INVOICE_NO, " +
                            "B.INVOICE_DATE, B.EFFECT,B.AMOUNT,A.BOOK_CODE,B.REF_COMPANY_ID FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                            "WHERE B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>'"+FromDate+"' AND A.VOUCHER_DATE<='"+ToDate+"' " +
                            "AND B.PO_NO='"+PONo+"' AND B.INVOICE_NO='"+BillNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO=B.VOUCHER_NO " +
                            "ORDER BY A.VOUCHER_DATE ";
                            rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                            rsVoucher.first();
                            
                            if(rsVoucher.getRow() > 0) {
                                while(!rsVoucher.isAfterLast()) {
                                    
                                    // PREPARE TEMPARORY LIST OF RECORD
                                    ObjItem = new clsPartyOutstandingItems();
                                    ObjItem.setAttribute("MAIN_ACCOUNT_CODE", MainCode);
                                    ObjItem.setAttribute("PARTY_CODE", PartyCode);
                                    ObjItem.setAttribute("PARTY_NAME", PartyName);
                                    ObjItem.setAttribute("PO_NO", PONo);
                                    ObjItem.setAttribute("PO_DATE", UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00"));
                                    int CompanyId = UtilFunctions.getInt(rsVoucher,"REF_COMPANY_ID",0);
                                    int PayTerm = data.getIntValueFromDB("SELECT PAYMENT_CODE FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                    int PayDays = data.getIntValueFromDB("SELECT CR_DAYS FROM D_PUR_PO_HEADER WHERE PO_NO='"+PONo+"' ",clsFinYear.getDBURL(CompanyId,EITLERPGLOBAL.FinYearFrom));
                                    ObjItem.setAttribute("PAY_TERM", PayTerm);
                                    ObjItem.setAttribute("PAY_DAY", PayDays);
                                    ObjItem.setAttribute("BILL_NO", UtilFunctions.getString(rsVoucher,"INVOICE_NO",""));
                                    ObjItem.setAttribute("BILL_DATE", UtilFunctions.getString(rsVoucher,"INVOICE_DATE","0000-00-00"));
                                    ObjItem.setAttribute("BOOK_CODE", UtilFunctions.getString(rsVoucher,"BOOK_CODE",""));
                                    ObjItem.setAttribute("VOUCHER_NO", UtilFunctions.getString(rsVoucher,"VOUCHER_NO",""));
                                    ObjItem.setAttribute("VOUCHER_DATE", UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00"));
                                    ObjItem.setAttribute("LEGACY_NO", UtilFunctions.getString(rsVoucher,"LEGACY_NO",""));
                                    ObjItem.setAttribute("LEGACY_DATE", UtilFunctions.getString(rsVoucher,"LEGACY_DATE","0000-00-00"));
                                    ObjItem.setAttribute("EFFECT", UtilFunctions.getString(rsVoucher,"EFFECT",""));
                                    if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("C")) {
                                        CrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                        ObjItem.setAttribute("CREDIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                        ObjItem.setAttribute("DEBIT_AMOUNT", 0);
                                    }
                                    if(UtilFunctions.getString(rsVoucher,"EFFECT","").equals("D")) {
                                        DrAmount+=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                        ObjItem.setAttribute("CREDIT_AMOUNT", 0);
                                        ObjItem.setAttribute("DEBIT_AMOUNT", UtilFunctions.getDouble(rsVoucher,"AMOUNT",0));
                                    }
                                    ObjItem.setAttribute("CLOSING_BALANCE", ClosingBalance);
                                    
                                    tempList.put(Integer.toString(tempList.size()+1), ObjItem);
                                    // ---------------------------------
                                    
                                    rsVoucher.next();
                                }
                            }
                            //-------------------------------------
                            
                            if(CrAmount!=DrAmount) {
                                ReportList = appendList(tempList,ReportList) ;
                                tempList.clear();
                            } else {
                                tempList.clear();
                            }
                            
                            rsPO.next();
                        }
                    }
                    rsParty.next();
                }
            }
            if(ReportList.size() > 0) {
                generateReport(ReportList,EITLERPGLOBAL.formatDate(ToDate));
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void generateTempTable(HashMap ReportList){
      try{
          
            Connection connection = data.getConn();
            connection.setAutoCommit(false);
            Statement stmt = connection.createStatement();
            stmt.execute("DELETE FROM FINANCE.TMP_CROUTSTANDING");
            String query = "INSERT INTO FINANCE.TMP_CROUTSTANDING(MAIN_ACCOUNT_CODE,PARTY_CODE,PARTY_NAME,PO_NO,PO_DATE,PAY_TERM,PAY_DAY,BILL_NO,BILL_DATE,BOOK_CODE,VOUCHER_NO,VOUCHER_DATE,LEGACY_NO,LEGACY_DATE,DEBIT_AMOUNT,CREDIT_AMOUNT,CLOSING_BALANCE) "
                    + " VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ";
            PreparedStatement p = connection.prepareStatement(query);
            clsPartyOutstandingItems ObjItem = new clsPartyOutstandingItems();
            System.out.println("No of Record = " + ReportList.size());
            int i = 0;
            for (i = 1; i <= ReportList.size(); i++) {
                ObjItem = (clsPartyOutstandingItems)ReportList.get(Integer.toString(i));
                p.setString(1, ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString());
                p.setString(2, ObjItem.getAttribute("PARTY_CODE").getString());
                p.setString(3, ObjItem.getAttribute("PARTY_NAME").getString());
                p.setString(4, ObjItem.getAttribute("PO_NO").getString());
                p.setString(5, ObjItem.getAttribute("PO_DATE").getString());
                //System.out.println(Integer.toString(ObjItem.getAttribute("PAY_TERM").getInt()));
                
                p.setString(6, Integer.toString(ObjItem.getAttribute("PAY_TERM").getInt()));
                p.setString(7, Integer.toString(ObjItem.getAttribute("PAY_DAY").getInt()));
                p.setString(8, ObjItem.getAttribute("BILL_NO").getString());                
                p.setString(9, ObjItem.getAttribute("BILL_DATE").getString());
                p.setString(10, ObjItem.getAttribute("BOOK_CODE").getString());
                p.setString(11, ObjItem.getAttribute("VOUCHER_NO").getString());
                p.setString(12, ObjItem.getAttribute("VOUCHER_DATE").getString());
                p.setString(13, ObjItem.getAttribute("LEGACY_NO").getString());
                p.setString(14, ObjItem.getAttribute("LEGACY_DATE").getString());
                p.setString(15, Double.toString(ObjItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                p.setString(16, Double.toString(ObjItem.getAttribute("CREDIT_AMOUNT").getDouble()));
                p.setString(17, Double.toString(ObjItem.getAttribute("CLOSING_BALANCE").getDouble()));
                
                p.addBatch();
                //ReportList.remove(Integer.toString(i));
                if ((i + 1) % 1000 == 0) {
                    p.executeBatch();
                    connection.commit();
                }
            }
            p.executeBatch();
            connection.commit();
            
      }catch(Exception e){
          e.printStackTrace();
      }
  }
  
  public void generateExcel(){
      try {
          String SQL = "";
          ResultSet rsExcelData = null;
          SQL = "SELECT * FROM FINANCE.TMP_CROUTSTANDING";
          rsExcelData = data.getResult(SQL, FinanceGlobal.FinURL);
          rsExcelData.first();
//          XSSFWorkbook workbook = new XSSFWorkbook();
//          XSSFSheet spreadsheet = workbook.createSheet("Sheet1");
//          XSSFRow row = spreadsheet.createRow(1);
//          XSSFCell cell;
  
            Workbook workbook = new XSSFWorkbook();
            Sheet spreadsheet = workbook.createSheet("Sheet1");
            Row row = spreadsheet.createRow(0);
            Cell cell;
            cell = row.createCell(0);
            cell.setCellValue("MAIN_ACCOUNT_CODE");
            cell = row.createCell(1);
            cell.setCellValue("PARTY_CODE");
            cell = row.createCell(2);
            cell.setCellValue("PARTY_NAME");
            cell = row.createCell(3);
            cell.setCellValue("PO_NO");
            cell = row.createCell(4);
            cell.setCellValue("PO_DATE");
            cell = row.createCell(5);
            cell.setCellValue("PAY_TERM");
            cell = row.createCell(6);
            cell.setCellValue("PAY_DAY");
            cell = row.createCell(7);
            cell.setCellValue("BILL_NO");
            cell = row.createCell(8);
            cell.setCellValue("BILL_DATE");
            cell = row.createCell(9);
            cell.setCellValue("BOOK_CODE");
            cell = row.createCell(10);
            cell.setCellValue("VOUCHER_NUMBER");
            cell = row.createCell(11);
            cell.setCellValue("VOUCHER_DATE");
            cell = row.createCell(12);
            cell.setCellValue("LEGACY_NO");
            cell = row.createCell(13);
            cell.setCellValue("LEGACY_DATE");
            cell = row.createCell(14);
            cell.setCellValue("DEBIT_AMOUNT");
            cell = row.createCell(15);
            cell.setCellValue("CREDIT_AMOUNT");
            cell = row.createCell(16);
            cell.setCellValue("CLOSING_BALANCE");
            
            int i = 1;
          if (rsExcelData.getRow() > 0) {
              while (!rsExcelData.isAfterLast()) {
               row = spreadsheet.createRow(i);
                cell = row.createCell(0);
                cell.setCellValue(rsExcelData.getInt("MAIN_ACCOUNT_CODE"));
                cell = row.createCell(1);
                cell.setCellValue(rsExcelData.getString("PARTY_CODE"));
                cell = row.createCell(2);
                cell.setCellValue(rsExcelData.getString("PARTY_NAME"));
                cell = row.createCell(3);
                cell.setCellValue(rsExcelData.getString("PO_NO"));
                cell = row.createCell(4);
                cell.setCellValue(rsExcelData.getString("PO_DATE"));
                cell = row.createCell(5);
                cell.setCellValue(rsExcelData.getString("PAY_TERM"));
                cell = row.createCell(6);
                cell.setCellValue(rsExcelData.getString("PAY_DAY"));
                cell = row.createCell(7);
                cell.setCellValue(rsExcelData.getString("BILL_NO"));
                cell = row.createCell(8);
                cell.setCellValue(rsExcelData.getString("BILL_DATE"));
                cell = row.createCell(9);
                cell.setCellValue(rsExcelData.getString("BOOK_CODE"));
                cell = row.createCell(10);
                cell.setCellValue(rsExcelData.getString("VOUCHER_NO"));
                cell = row.createCell(11);
                cell.setCellValue(rsExcelData.getString("VOUCHER_DATE"));
                cell = row.createCell(12);
                cell.setCellValue(rsExcelData.getString("LEGACY_NO"));
                cell = row.createCell(13);
                cell.setCellValue(rsExcelData.getString("LEGACY_DATE"));
                cell = row.createCell(14);
                //cell.setCellValue(rsExcelData.getString("DEBIT_AMOUNT"));
                cell.setCellValue(rsExcelData.getDouble("DEBIT_AMOUNT"));
                cell = row.createCell(15);
                cell.setCellValue(rsExcelData.getDouble("CREDIT_AMOUNT"));
                cell = row.createCell(16);
                cell.setCellValue(rsExcelData.getDouble("CLOSING_BALANCE"));
                i++;
                rsExcelData.next();
              }
          }
          //FileOutputStream out = new FileOutputStream(new File(
          //          "CR_OS.xls"));
          FileOutputStream out = new FileOutputStream(new File(System.getProperty("user.home") + "/Desktop/CR_OS.xls"));
            workbook.write(out);
            out.close();
            System.out.println("File Successfully created");
            JOptionPane.showMessageDialog(null, "Data saved at "
                + "'" + System.getProperty("user.home") + "/Desktop/CR_OS.xls' successfully in PC", "Message",
                JOptionPane.INFORMATION_MESSAGE);
      } catch (Exception e) {
          e.printStackTrace();
      }
}
    
    
}
