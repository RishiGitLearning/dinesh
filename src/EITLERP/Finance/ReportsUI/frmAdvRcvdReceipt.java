/*
 * frmIndentsInfo.java
 *
 * Created on July 13, 2005, 10:47 AM
 */

package EITLERP.Finance.ReportsUI;

import EITLERP.*;
import EITLERP.Stores.*;
import EITLERP.Purchase.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import java.sql.*;
import java.net.*;
import java.text.DecimalFormat;
import EITLERP.Finance.*;
import TReportWriter.*;
import java.io.File;

/**
 *
 * @author  root
 */
public class frmAdvRcvdReceipt extends javax.swing.JApplet {
    
    private EITLTableModel DataModelI=new EITLTableModel();
    DecimalFormat dFormat=new DecimalFormat("###0.00");
    
    private EITLComboModel cmbDeptModel=new EITLComboModel();
    private EITLComboModel cmbApprovalModel=new EITLComboModel();
    public clsExcelExporter export = new clsExcelExporter();
    
    /** Initializes the applet frmIndentsInfo */
    public void init() {
        setSize(1000, 650);
        initComponents();
        GenerateCombo();
        FormatGridI();
        
        
        //EITLERPGLOBAL.setComboIndex(cmbBuyer,EITLERPGLOBAL.gUserID);
        txtRIA.setVisible(false);
        cmdPreview.setVisible(false);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ExporttoExcelFileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        cmdShowI = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableI = new javax.swing.JTable();
        cmdOpenI = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        txtRIA = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtMainAccountCode = new javax.swing.JTextField();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBookCode = new javax.swing.JTextField();
        lblMainAccountName = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 29));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Advance Received Receipt ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(2, 4, 410, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 2, 990, 29);

        jLabel2.setText("Main Account Code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 50, 140, 20);

        jTabbedPane1.setAutoscrolls(true);
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        cmdShowI.setText("Show List");
        cmdShowI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowIActionPerformed(evt);
            }
        });

        jPanel2.add(cmdShowI);
        cmdShowI.setBounds(810, 10, 118, 25);

        TableI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableI.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        TableI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableIMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(TableI);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(9, 48, 920, 320);

        cmdOpenI.setText("Open Document");
        cmdOpenI.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdOpenI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOpenIActionPerformed(evt);
            }
        });

        jPanel2.add(cmdOpenI);
        cmdOpenI.setBounds(360, 390, 120, 25);

        cmdPreview.setText("Preview Report");
        cmdPreview.setEnabled(false);
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        jPanel2.add(cmdPreview);
        cmdPreview.setBounds(180, 390, 162, 25);

        jPanel2.add(txtRIA);
        txtRIA.setBounds(30, 390, 130, 19);

        jButton1.setText("Export to Excel");
        jButton1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton1);
        jButton1.setBounds(490, 390, 120, 25);

        jTabbedPane1.addTab("Information", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(6, 139, 960, 510);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Pending Order Form");

        txtMainAccountCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMainAccountCodeFocusLost(evt);
            }
        });

        getContentPane().add(txtMainAccountCode);
        txtMainAccountCode.setBounds(170, 50, 100, 20);

        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(170, 80, 100, 20);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(310, 80, 100, 20);

        jLabel4.setText("From Date");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(80, 80, 80, 20);

        jLabel5.setText("To");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(280, 80, 20, 20);

        jLabel6.setText("Book Code");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(80, 110, 80, 20);

        getContentPane().add(txtBookCode);
        txtBookCode.setBounds(170, 110, 100, 20);

        lblMainAccountName.setText("...");
        getContentPane().add(lblMainAccountName);
        lblMainAccountName.setBounds(280, 50, 300, 20);

    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try{
        File file;        
        ExporttoExcelFileChooser.setDialogTitle("Enter Excel File Name");
        ExporttoExcelFileChooser.setFileSelectionMode(JFileChooser.APPROVE_OPTION);
        int returnVal = ExporttoExcelFileChooser.showSaveDialog(frmAdvRcvdReceipt.this);
        if ( returnVal == JFileChooser.APPROVE_OPTION) {
            file = ExporttoExcelFileChooser.getSelectedFile();
            export.fillData(TableI,new File(file+".xls"));
            JOptionPane.showMessageDialog(null," Excel File Saved at : "+ file+".xls","Message",JOptionPane.INFORMATION_MESSAGE);
        }   
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmdOpenIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOpenIActionPerformed
        try {
            if(TableI.getSelectedRow()>=0) {
                String DocNo=TableI.getValueAt(TableI.getSelectedRow(),1).toString();
                clsVoucher.OpenVoucher(DocNo, null);                
            }
            
        } catch(Exception e) {
            
        }
    }//GEN-LAST:event_cmdOpenIActionPerformed

    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        String strSQL = "";
        String Condition = "";
        ResultSet rsData = null;
        TReportEngine objEngine1=new TReportEngine();
        TReportWriter.SimpleDataProvider.TTable objData = new TReportWriter.SimpleDataProvider.TTable();
        
        try {
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("LEGACY_NO");
            objData.AddColumn("LEGACY_DATE");
            objData.AddColumn("BOOK_CODE");
            objData.AddColumn("SUB_ACCOUNT_CODE");
            objData.AddColumn("PARTY_NAME");
            objData.AddColumn("AMOUNT");
            
            
            strSQL = "SELECT A.VOUCHER_NO, A.LEGACY_NO,DATE_FORMAT(A.LEGACY_DATE,'%d/%m/%Y') AS LDATE,DATE_FORMAT(A.VOUCHER_DATE,'%d/%m/%Y') AS VDATE, B.MAIN_ACCOUNT_CODE, " +
            "B.SUB_ACCOUNT_CODE, B.EFFECT, B.AMOUNT,A.BOOK_CODE,B.SR_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim())+"' AND A.VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim())+"' AND A.VOUCHER_TYPE IN (6,7,8,9,12)  AND B.MAIN_ACCOUNT_CODE='"+txtMainAccountCode.getText().trim()+"' " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='C' AND B.INVOICE_NO ='' " +
            "AND B.MODULE_ID <>65 AND B.GRN_NO ='' AND (B.MATCHED=0 OR B.MATCHED IS NULL) " +
            "ORDER BY B.SUB_ACCOUNT_CODE,A.VOUCHER_DATE ";
            
            rsData = data.getResult(strSQL,FinanceGlobal.FinURL);
           // System.out.println(strSQL);
            rsData.first();
            TReportWriter.SimpleDataProvider.TRow objRow = null;
            if(rsData.getRow() > 0) {
                while(!rsData.isAfterLast()) {
                    objRow=objData.newRow();
                    String VoucherNo = UtilFunctions.getString(rsData, "VOUCHER_NO", "");
                    int VoucherSrNo = UtilFunctions.getInt(rsData, "SR_NO", 0);
                    String SubAccountCode = UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", "");
                    double Amount = UtilFunctions.getDouble(rsData, "AMOUNT", 0);
                    //Amount = clsAccount.get09AmountByVoucher(VoucherNo,MainCode,SubAccountCode,Amount);
                    if(Amount>0) {
                        String VoucherDate = UtilFunctions.getString(rsData, "VDATE", "");
                        objRow.setValue("VOUCHER_NO", UtilFunctions.getString(rsData, "VOUCHER_NO", ""));
                        objRow.setValue("VOUCHER_DATE", UtilFunctions.getString(rsData, "VDATE", ""));
                        objRow.setValue("LEGACY_NO", UtilFunctions.getString(rsData, "LEGACY_NO", ""));
                        if(!UtilFunctions.getString(rsData, "LDATE", "").equals("00/00/0000")) {
                            objRow.setValue("LEGACY_DATE", UtilFunctions.getString(rsData, "LDATE", ""));
                        } else {
                            objRow.setValue("LEGACY_DATE", "");
                        }
                        objRow.setValue("BOOK_CODE", UtilFunctions.getString(rsData, "BOOK_CODE", ""));
                        objRow.setValue("SUB_ACCOUNT_CODE", UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", ""));
                        objRow.setValue("PARTY_NAME", clsPartyMaster.getAccountName(txtMainAccountCode.getText().trim(), UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", "")));
                        objRow.setValue("AMOUNT", dFormat.format(Amount));
                        //objRow.setValue("AMOUNT", UtilFunctions.getDouble(rsData, "AMOUNT", 0)); 
                        objData.AddRow(objRow);
                    }
                    rsData.next();
                }
            }
            
            HashMap Parameters=new HashMap();
            /*
            if(!FromSubCode.equals("")) {
                Parameters.put("PARTY_NAME",FromSubCode +" - "+clsPartyMaster.getAccountName(MainCode.trim(), FromSubCode.trim()));
            } else {
                Parameters.put("PARTY_NAME",MainCode+" - "+clsPartyMaster.getAccountName(MainCode.trim(), ""));
            }
             */
            Parameters.put("MAIN_CODE_NAME",txtMainAccountCode.getText().trim()+" - "+lblMainAccountName.getText().trim());
            Parameters.put("FROM_DATE", txtFromDate.getText().trim());
            Parameters.put("TO_DATE", txtToDate.getText().trim());
            Parameters.put("SYS_DATE", EITLERPGLOBAL.getCurrentDate());
            //objEngine1.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptAdvanceReceivedReceiptAmount.rpt",Parameters,objData);
            objEngine1.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptAdvanceReceiptAmount1.rpt",Parameters,objData);
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdPreviewActionPerformed
        
    private void txtMainAccountCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMainAccountCodeFocusLost
        // TODO add your handling code here:        
        lblMainAccountName.setText(data.getStringValueFromDB("SELECT ACCOUNT_NAME FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE='"+txtMainAccountCode.getText().trim()+"' ",FinanceGlobal.FinURL));
    }//GEN-LAST:event_txtMainAccountCodeFocusLost
            
    /**
     *
     */
    private void TableIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableIMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()>=2) {
            if(TableI.getRowCount()>0) {
                txtRIA.setText((String)TableI.getValueAt(TableI.getSelectedRow(), 6));
                BigEdit bigEdit=new BigEdit();
                bigEdit.theText=txtRIA;
                bigEdit.ShowEdit();
            }
        }
    }//GEN-LAST:event_TableIMouseClicked
        
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked
        
    private void cmdShowIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowIActionPerformed
        // TODO add your handling code here:
        //PRODUCTION PROCESS SHOW LIST
        GenerateInformation();
    }//GEN-LAST:event_cmdShowIActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser ExporttoExcelFileChooser;
    private javax.swing.JTable TableI;
    private javax.swing.JButton cmdOpenI;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdShowI;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblMainAccountName;
    private javax.swing.JTextField txtBookCode;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtMainAccountCode;
    private javax.swing.JTextField txtRIA;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    
    private void GenerateCombo() {
        
        
    }
    
    
    private void FormatGridI() {
        DataModelI=new EITLTableModel();
        TableI.removeAll();
        TableI.setModel(DataModelI);
        
        TableI.setAutoResizeMode(TableI.AUTO_RESIZE_OFF);
        
        DataModelI.addColumn("Sr.");
        DataModelI.addColumn("Voucher No");
        DataModelI.addColumn("Voucher Date");
        DataModelI.addColumn("Value Date");        
        DataModelI.addColumn("Main A/C Code");
        DataModelI.addColumn("Party Code");        
        DataModelI.addColumn("Amount");
        DataModelI.addColumn("Book Code");        
        DataModelI.addColumn("Party Name");
        DataModelI.addColumn("Party GSTIN");
        DataModelI.addColumn("State GST");
        DataModelI.addColumn("Taxable Amt");
        DataModelI.addColumn("CGST Amt");
        DataModelI.addColumn("SGST Amt");
        DataModelI.addColumn("IGST Amt");
        DataModelI.addColumn("Legacy No");
        DataModelI.addColumn("Legacy Date");
        DataModelI.addColumn("Effect");
        DataModelI.addColumn("Exclude Adj");
        DataModelI.addColumn("Invoice No");
        DataModelI.addColumn("Invoice Date");
        
        
        DataModelI.TableReadOnly(true);
    }
    
    
    
    private void GenerateInformation() {
        String SelUserID="";
        String strSQL="";
        try{
            FormatGridI(); //clear existing content of table
            //SelUserID = txtpartycode.getText().toString();
            ResultSet rsTmp;
            //rsTmp=data.getResult("SELECT PIECE_NO FROM FELT_ORDER_MASTER WHERE PARTY_CD="+SelUserID+"");
            strSQL="";             
            strSQL+="SELECT A.VOUCHER_NO,A.VOUCHER_DATE, A.LEGACY_NO,DATE_FORMAT(A.LEGACY_DATE,'%d/%m/%Y') AS LDATE,DATE_FORMAT(A.VOUCHER_DATE,'%d/%m/%Y') AS VDATE, B.MAIN_ACCOUNT_CODE, B.SUB_ACCOUNT_CODE, B.EFFECT, B.AMOUNT,A.BOOK_CODE,B.SR_NO,A.EXCLUDE_IN_ADJ,B.INVOICE_NO,B.INVOICE_DATE FROM FINANCE.D_FIN_VOUCHER_HEADER A, FINANCE.D_FIN_VOUCHER_DETAIL B ";
            //strSQL+="WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE>='"+EITLERPGLOBAL.formatDateDB((txtFromDate.getText().trim()))+"' AND A.VOUCHER_DATE<='"+EITLERPGLOBAL.formatDateDB((txtToDate.getText().trim()))+"' AND A.VOUCHER_TYPE IN (6,7,8,9)  AND B.MAIN_ACCOUNT_CODE='"+txtMainAccountCode.getText().trim()+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='C' AND B.INVOICE_NO ='' ";
            strSQL+="WHERE A.VOUCHER_NO = B.VOUCHER_NO AND VALUE_DATE>='"+EITLERPGLOBAL.formatDateDB((txtFromDate.getText().trim()))+"' AND VALUE_DATE<='"+EITLERPGLOBAL.formatDateDB((txtToDate.getText().trim()))+"' AND A.VOUCHER_TYPE IN (6,7,8,9,12)  AND B.MAIN_ACCOUNT_CODE='"+txtMainAccountCode.getText().trim()+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='C' AND ( B.INVOICE_NO ='' OR B.INVOICE_DATE > '"+EITLERPGLOBAL.formatDateDB((txtToDate.getText().trim()))+"') ";
            strSQL+="AND B.MODULE_ID <>65 AND (B.GRN_NO ='' OR B.GRN_DATE > '"+EITLERPGLOBAL.formatDateDB((txtToDate.getText().trim()))+"') ";
            //AND (B.MATCHED=0 OR B.MATCHED IS NULL) ";
            if(!txtBookCode.getText().equals("")){
                strSQL+=" AND A.BOOK_CODE  IN ("+txtBookCode.getText().trim()+") ";
            }
            strSQL+=" ORDER BY B.SUB_ACCOUNT_CODE,A.VOUCHER_DATE ";
                    
            System.out.println(strSQL);
            rsTmp=data.getResult(strSQL);
            rsTmp.first();
            if(rsTmp.getRow()>0) {
                int cnt=0;
                while(!rsTmp.isAfterLast()) {
                    cnt++;
                    
                    Object[] rowData=new Object[28];
                    rowData[0]=Integer.toString(cnt);
                    rowData[1]=rsTmp.getString("VOUCHER_NO");
                    rowData[2]=EITLERPGLOBAL.formatDate(rsTmp.getString("VOUCHER_DATE"));
                    rowData[3]=rsTmp.getString("VDATE");                    
                    String MainAcCode=rsTmp.getString("MAIN_ACCOUNT_CODE");
                    rowData[4]=MainAcCode;
                    
                    rowData[5]=rsTmp.getString("SUB_ACCOUNT_CODE");
                    
                    double Amt=rsTmp.getDouble("AMOUNT");
                    rowData[6]=Double.toString(Amt);                    
                    rowData[7]=rsTmp.getString("BOOK_CODE");
                    
                    rowData[8]=clsPartyMaster.getAccountName(txtMainAccountCode.getText().trim(),rsTmp.getString("SUB_ACCOUNT_CODE"));
                    String GSTINno=data.getStringValueFromDB("SELECT GSTIN_NO FROM FINANCE.D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND PARTY_CODE='"+rsTmp.getString("SUB_ACCOUNT_CODE")+"'",FinanceGlobal.FinURL);
                    rowData[9]=GSTINno;
                    System.out.println(GSTINno.length());
                    String StateGSTCode=data.getStringValueFromDB("SELECT STATE_GST_CODE FROM FINANCE.D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND PARTY_CODE='"+rsTmp.getString("SUB_ACCOUNT_CODE")+"'",FinanceGlobal.FinURL);
                    //String StateGSTCode=data.getStringValueFromDB("SELECT CONCAT(A.STATE_GST_CODE,' - ',STATE_NAME) FROM (SELECT STATE_GST_CODE FROM FINANCE.D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND PARTY_CODE='"+rsTmp.getString("SUB_ACCOUNT_CODE")+"') A LEFT JOIN (SELECT STATE_NAME,STATE_GST_CODE FROM DINESHMILLS.D_SAL_STATE_MASTER ) B ON A.STATE_GST_CODE=B.STATE_GST_CODE",FinanceGlobal.FinURL);
                    rowData[10]=data.getStringValueFromDB("SELECT CONCAT(A.STATE_GST_CODE,' - ',STATE_NAME) FROM (SELECT STATE_GST_CODE FROM FINANCE.D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND PARTY_CODE='"+rsTmp.getString("SUB_ACCOUNT_CODE")+"') A LEFT JOIN (SELECT STATE_NAME,STATE_GST_CODE FROM DINESHMILLS.D_SAL_STATE_MASTER ) B ON A.STATE_GST_CODE=B.STATE_GST_CODE",FinanceGlobal.FinURL);
                    //if(GSTINno.length()==0){
                    if(StateGSTCode.length()==0){
                        rowData[11]="";
                        rowData[12]="";
                        rowData[13]="";                            
                        rowData[14]="";
                    }else{
                        if(StateGSTCode.equals("24")){
                        if(MainAcCode.equals("210010") || MainAcCode.equals("210072")){
                            double taxableAmt1=EITLERPGLOBAL.round((Amt/2.24),0);                            
                            double taxableAmt2=EITLERPGLOBAL.round((Amt/2.24),0);                            
                            double taxableAmt=EITLERPGLOBAL.round((Amt/1.12),0);
                            rowData[11]=Double.toString(taxableAmt1+taxableAmt2);
                            rowData[12]=Double.toString(EITLERPGLOBAL.round(taxableAmt*.06,0));
                            rowData[13]=Double.toString(EITLERPGLOBAL.round(taxableAmt*.06,0));
                            rowData[14]="";                            
                        }else{
                            double taxableAmt1=EITLERPGLOBAL.round((Amt/2.1),0);                            
                            double taxableAmt2=EITLERPGLOBAL.round((Amt/2.1),0);
                            double taxableAmt=EITLERPGLOBAL.round((Amt/1.05),0);
                            rowData[11]=Double.toString(taxableAmt1+taxableAmt2);
                            //rowData[15]=dFormat.format(Amt*.025);
                            rowData[12]=Double.toString(EITLERPGLOBAL.round(taxableAmt*.025,0));
                            rowData[13]=Double.toString(EITLERPGLOBAL.round(taxableAmt*.025,0));
                            rowData[14]="";                            
                        }                        
                    }else {
                        if(MainAcCode.equals("210010") || MainAcCode.equals("210072")){
                            double taxableAmt=EITLERPGLOBAL.round((Amt/1.12),0);                                                        
                            double IGST=EITLERPGLOBAL.round(taxableAmt*.12,0);
                            rowData[11]=Double.toString(Amt-IGST);                            
                            rowData[12]="";
                            rowData[13]="";
                            rowData[14]=Double.toString(IGST);
                        }else{
                            double taxableAmt=EITLERPGLOBAL.round((Amt/1.05),0);                            
                            double IGST=EITLERPGLOBAL.round(taxableAmt*.05,0);
                            rowData[11]=Double.toString(Amt-IGST);                            
                            rowData[12]="";
                            rowData[13]="";
                            rowData[14]=Double.toString(IGST);
                    }
                    }                        
                    }
                    rowData[15]=rsTmp.getString("LEGACY_NO");
                    rowData[16]=rsTmp.getString("LDATE");
                    rowData[17]=rsTmp.getString("EFFECT");
                    rowData[18]=Integer.toString(rsTmp.getInt("EXCLUDE_IN_ADJ"));
                    
                    rowData[19]=rsTmp.getString("INVOICE_NO");
                    rowData[20]=EITLERPGLOBAL.formatDate(rsTmp.getString("INVOICE_DATE"));
                    
                    
                    DataModelI.addRow(rowData);
                    //   System.out.println("rsTmp.getString('PIECE_NO')");
                    rsTmp.next();
                }
            }
        }
        catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    
    
}

