

package EITLERP.Finance.ReportsUI;


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import java.text.*;
import TReportWriter.*;

public class frmRptDepositRenewalJournalTR24 extends javax.swing.JApplet {
    
    private EITLComboModel cmbReceiptTypeModel;
    private EITLComboModel cmbReportTypeModel;
    private EITLComboModel cmbMonthModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    /** Initializes the applet frmRptGRNInfo */
    public void init() {
        setSize(424,264);
        initComponents();
        
        GenerateCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        cmdPreview = new javax.swing.JButton();
        cmbMonth = new javax.swing.JComboBox();
        cmdSummary = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel3.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.setText("TR-24 DEPOSIT INTEREST JOURNAL");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(10, 10, 310, 15);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 2, 800, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Month :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 70, 50, 20);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Year :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(190, 70, 40, 20);

        txtYear.setColumns(10);
        getContentPane().add(txtYear);
        txtYear.setBounds(240, 70, 90, 20);

        cmdPreview.setText("Preview Report");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPreview);
        cmdPreview.setBounds(40, 110, 130, 25);

        getContentPane().add(cmbMonth);
        cmbMonth.setBounds(70, 70, 90, 24);

        cmdSummary.setText("Summary");
        cmdSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSummaryActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSummary);
        cmdSummary.setBounds(200, 110, 100, 25);

    }//GEN-END:initComponents
    
    private void cmdSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSummaryActionPerformed
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        GenerateSummary();
        
    }//GEN-LAST:event_cmdSummaryActionPerformed
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        if ( ! Validate()) {
            return;
        }
        GenerateReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbMonth;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdSummary;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReport() {
        try {
            
            
            int nMonth = cmbMonth.getSelectedIndex() + 1;
            
            String strSQL = "";
            String strSQLNew = "";
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("SR_NO");
            objReportData.AddColumn("DATE");
            objReportData.AddColumn("REF_NO");
            objReportData.AddColumn("ACCOUNT_CODE");
            objReportData.AddColumn("PARTY_CODE");
            objReportData.AddColumn("RECEIPT_NO");
            objReportData.AddColumn("LEGACY_NO");
            objReportData.AddColumn("RECEIPT_DATE");
            objReportData.AddColumn("PARTY_NAME");
            objReportData.AddColumn("INT_ACCOUNT_CODE");
            objReportData.AddColumn("ACHEAD");
            objReportData.AddColumn("AMOUNT");
            
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            objOpeningRow.setValue("SR_NO","");
            objOpeningRow.setValue("DATE","");
            objOpeningRow.setValue("REF_NO","");
            objOpeningRow.setValue("ACCOUNT_CODE","");
            objOpeningRow.setValue("PARTY_CODE","");
            objOpeningRow.setValue("RECEIPT_NO","");
            objOpeningRow.setValue("LEGACY_NO","");
            objOpeningRow.setValue("RECEIPT_DATE","0000-00-00");
            objOpeningRow.setValue("PARTY_NAME","");
            objOpeningRow.setValue("INT_ACCOUNT_CODE","");
            objOpeningRow.setValue("ACHEAD","");
            objOpeningRow.setValue("AMOUNT","");
            
            
            strSQL="SELECT CDTL.WARRANT_DATE,CDTL.WARRANT_NO,CDTL.MAIN_ACCOUNT_CODE,CDTL.PARTY_CODE,CDTL.NET_INTEREST, " +
            "DMST.APPLICANT_NAME,DMST.RECEIPT_NO,DMST.LEGACY_NO,DMST.RECEIPT_DATE, " +
            "CASE SMST.SCHEME_TYPE " +
            "WHEN 1 THEN 'FD' WHEN 2 THEN 'LD' WHEN 3 THEN 'CD' END AS DEPOSIT_SCHEME, " +
            "SMST.INT_MAIN_ACCOUNT_CODE " +
            "FROM D_FD_INT_CALC_DETAIL CDTL,D_FD_DEPOSIT_MASTER DMST,D_FD_SCHEME_MASTER SMST " +
            "WHERE CDTL.PARTY_CODE=DMST.PARTY_CODE AND DMST.REJECTED = 0 AND DMST.CANCELLED=0 AND " +
            "DMST.APPROVED=1 AND CDTL.RECEIPT_NO = DMST.RECEIPT_NO " +
            "AND DMST.SCHEME_ID = SMST.SCHEME_ID AND DMST.COMPANY_ID= 2 " +
            "AND CDTL.WARRANT_DATE>=CONCAT('"+ txtYear.getText().trim() + "','-','"+ nMonth +"-01') " +
            "AND CDTL.WARRANT_DATE<=LAST_DAY(CONCAT('"+ txtYear.getText().trim() + "','-','"+ nMonth +"-01'))  "+
            "AND WARRANT_NO<>'0000000' ORDER BY CDTL.WARRANT_NO,CDTL.WARRANT_DATE";
            
            ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsTmp.first();
            int FinYear = EITLERPGLOBAL.getCurrentFinYear();
            String StartFinYear = Integer.toString(FinYear)+"-04-01";
            String EndFinYear = Integer.toString(FinYear+1)+"-03-31";
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("SR_NO",Integer.toString(Counter));
                    objRow.setValue("DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"WARRANT_DATE","0000-00-00")));
                    objRow.setValue("REF_NO",UtilFunctions.getString(rsTmp,"WARRANT_NO",""));
                    objRow.setValue("PARTY_CODE",UtilFunctions.getString(rsTmp,"PARTY_CODE",""));
                    String PartyCode = UtilFunctions.getString(rsTmp,"PARTY_CODE","");
                    objRow.setValue("RECEIPT_NO",UtilFunctions.getString(rsTmp,"DEPOSIT_SCHEME","") + UtilFunctions.getString(rsTmp,"RECEIPT_NO",""));
                    objRow.setValue("LEGACY_NO",UtilFunctions.getString(rsTmp,"LEGACY_NO",""));
                    objRow.setValue("RECEIPT_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"RECEIPT_DATE","0000-00-00")));
                    objRow.setValue("PARTY_NAME",UtilFunctions.getString(rsTmp,"APPLICANT_NAME",""));
                    objRow.setValue("INT_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"INT_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("ACHEAD","INT ON "+UtilFunctions.getString(rsTmp,"DEPOSIT_SCHEME",""));
                    if(rsTmp.getString("DEPOSIT_SCHEME").equals("CD")) {
                        String ReceiptNo = rsTmp.getString("RECEIPT_NO");
                        double netInterest = data.getDoubleValueFromDB("SELECT SUM(A.NET_INTEREST) AS TOTAL FROM D_FD_INT_CALC_DETAIL A, D_FD_INT_CALC_HEADER B WHERE A.RECEIPT_NO='"+ReceiptNo+"' AND A.PARTY_CODE='"+PartyCode+"' AND A.WARRANT_DATE>='"+StartFinYear+"' AND A.WARRANT_DATE<='"+EndFinYear+"' AND A.DOC_NO=B.DOC_NO AND B.TDS_ONLY=0",FinanceGlobal.FinURL);
                        //SELECT SUM(A.NET_INTEREST) AS TOTAL FROM D_FD_INT_CALC_DETAIL A, D_FD_INT_CALC_HEADER B WHERE A.RECEIPT_NO='"+ReceiptNo+"' AND A.PARTY_CODE='"+PartyCode+"' AND A.DOC_NO=B.DOC_NO AND B.TDS_ONLY=0
                        objRow.setValue("AMOUNT",Double.toString(netInterest));
                        String MainAccountCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+ReceiptNo+"'",FinanceGlobal.FinURL);
                        if(MainAccountCode.equals("115153")) {
                            MainAccountCode="115160";
                        } else if(MainAccountCode.equals("115177")) {
                            MainAccountCode="115201";
                        }
                        objRow.setValue("ACCOUNT_CODE",MainAccountCode);
                    } else {
                        objRow.setValue("ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE",""));
                        objRow.setValue("AMOUNT",UtilFunctions.getString(rsTmp,"NET_INTEREST",""));
                    }
                    
                    
                    objReportData.AddRow(objRow);
                    rsTmp.next();
                }
                
                
                int Comp_ID = EITLERPGLOBAL.gCompanyID;
                
                HashMap Parameters=new HashMap();
                //Parameters.put("COMPANY_ID",Integer.toString(Comp_ID));
                Parameters.put("MONTH",cmbMonth.getSelectedItem().toString().toUpperCase());
                Parameters.put("YEAR",txtYear.getText().trim());
                Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
                
                objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptDepositRenewalJournalTR24.rpt",Parameters,objReportData);
                
            }
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    private void GenerateSummary(){
        
        try {
            
            
            int nMonth = cmbMonth.getSelectedIndex() + 1;
            
            String strSQL = "";
            String strSQLNew = "";
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("DEPOSTI_SCHEME");
            objReportData.AddColumn("TOTAL_WARRANT");
            objReportData.AddColumn("DEBIT_AMOUNT");
            objReportData.AddColumn("CREDIT_AMOUNT");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("DEPOSTI_SCHEME","");
            objOpeningRow.setValue("TOTAL_WARRANT","");
            objOpeningRow.setValue("DEBIT_AMOUNT","");
            objOpeningRow.setValue("CREDIT_AMOUNT","");
            String StartMonth = txtYear.getText().trim()+"-"+ nMonth +"-01";
            String EndMonth = data.getStringValueFromDB("SELECT LAST_DAY('"+StartMonth+"') FROM DUAL",FinanceGlobal.FinURL);
            
            strSQL = "SELECT DMST.RECEIPT_NO,DMST.RECEIPT_DATE,CDTL.WARRANT_DATE,CDTL.WARRANT_NO,CDTL.MAIN_ACCOUNT_CODE, " +
            "CDTL.PARTY_CODE,CDTL.NET_INTEREST, DMST.APPLICANT_NAME, " +
            "CASE SMST.SCHEME_TYPE WHEN 1 THEN 'FD' WHEN 2 THEN 'LD' WHEN 3 THEN 'CD' END AS DEPOSIT_SCHEME, " +
            "SMST.INT_MAIN_ACCOUNT_CODE FROM D_FD_INT_CALC_DETAIL CDTL,D_FD_DEPOSIT_MASTER DMST,D_FD_SCHEME_MASTER SMST " +
            "WHERE CDTL.PARTY_CODE=DMST.PARTY_CODE AND DMST.REJECTED = 0 AND DMST.CANCELLED=0 AND DMST.APPROVED=1 " +
            "AND CDTL.RECEIPT_NO = DMST.RECEIPT_NO AND DMST.SCHEME_ID = SMST.SCHEME_ID AND DMST.COMPANY_ID= "+EITLERPGLOBAL.gCompanyID + " " +
            "AND CDTL.WARRANT_NO<>'0000000' AND CDTL.WARRANT_DATE>='"+StartMonth+"' AND CDTL.WARRANT_DATE<='"+EndMonth+"' ";
            
            /*strSQL="SELECT * "+
            "FROM(SELECT CDTL.WARRANT_DATE,CDTL.WARRANT_NO,CDTL.MAIN_ACCOUNT_CODE,CDTL.PARTY_CODE,CDTL.NET_INTEREST, "+
            "DMST.APPLICANT_NAME,DMST.RECEIPT_NO,DMST.RECEIPT_DATE, "+
            "CASE SMST.SCHEME_TYPE "+
            "WHEN 1 THEN 'FD' "+
            "WHEN 2 THEN 'LD' "+
            "WHEN 3 THEN 'CD' "+
            "END AS DEPOSIT_SCHEME, "+
            "SMST.INT_MAIN_ACCOUNT_CODE "+
            "FROM D_FD_INT_CALC_DETAIL CDTL,D_FD_DEPOSIT_MASTER DMST,D_FD_SCHEME_MASTER SMST "+
            "WHERE CDTL.PARTY_CODE=DMST.PARTY_CODE "+
            "AND DMST.REJECTED = 0 "+
            "AND DMST.CANCELLED=0 "+
            "AND DMST.APPROVED=1 "+
            "AND CDTL.RECEIPT_NO = DMST.RECEIPT_NO "+
            "AND DMST.SCHEME_ID = SMST.SCHEME_ID "+
            "AND DMST.COMPANY_ID= " + EITLERPGLOBAL.gCompanyID + " "+
            "AND CDTL.WARRANT_NO<>'0000000' " +
            "AND CDTL.WARRANT_DATE>=CONCAT('"+ txtYear.getText().trim() + "','-','"+ nMonth +"-01') "+
            "AND CDTL.WARRANT_DATE<=LAST_DAY(CONCAT('"+ txtYear.getText().trim() + "','-','"+ nMonth +"-01')) "+
            ") AS MAIN "+
            "UNION "+
            "SELECT * "+
            "FROM(SELECT CDTL.WARRANT_DATE,CDTL.WARRANT_NO,CDTL.MAIN_ACCOUNT_CODE,CDTL.PARTY_CODE,CDTL.NET_INTEREST, "+
            "DMST.APPLICANT_NAME,DMST.RECEIPT_NO,DMST.RECEIPT_DATE, "+
            "CASE SMST.SCHEME_TYPE "+
            "WHEN 1 THEN 'FD' "+
            "WHEN 2 THEN 'LD' "+
            "WHEN 3 THEN 'CD' "+
            "END AS DEPOSIT_SCHEME, "+
            "SMST.INT_MAIN_ACCOUNT_CODE "+
            "FROM D_FD_INT_CALC_DETAIL CDTL,D_FD_DEPOSIT_MASTER DMST,D_FD_SCHEME_MASTER SMST "+
            "WHERE CDTL.PARTY_CODE=DMST.PARTY_CODE "+
            "AND DMST.REJECTED = 0 "+
            "AND DMST.CANCELLED=0 "+
            "AND DMST.APPROVED=1 "+
            "AND CDTL.RECEIPT_NO = DMST.RECEIPT_NO "+
            "AND DMST.SCHEME_ID = SMST.SCHEME_ID "+
            "AND DMST.COMPANY_ID= " + EITLERPGLOBAL.gCompanyID + " "+
            "AND CDTL.WARRANT_NO<>'0000000' " +
            "AND CDTL.WARRANT_DATE>=CONCAT('"+ txtYear.getText().trim() + "','-','"+ nMonth +"-01') "+
            "AND CDTL.WARRANT_DATE<=LAST_DAY(CONCAT('"+ txtYear.getText().trim() + "','-','"+ nMonth +"-01')) "+
            ") AS MAIN";*/
            
            System.out.println("str= "+ strSQL);
            
            int FD=0;
            int LD=0;
            int CD=0;
            ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsTmp.first();
            
            int FDNoOfEntry = 0;
            int LDNoOfEntry = 0;
            int CDNoOfEntry = 0;
            
            double FDcrtotal = 0.0;
            double LDcrtotal = 0.0;
            double CDcrtotal = 0.0;
            
            double drtotal = 0.0;
            
            double TotalDAmount = 0.0;
            double TotalCAmount = 0.0;
            
            /*objRow.setValue("DEPOSTI_SCHEME","DEPOSIT-FIXED-PUBLICE");
            objRow.setValue("DEPOSTI_SCHEME","DEPOSIT-SHARE HOLDER");
            objRow.setValue("DEPOSTI_SCHEME","INT PAYABLE CD PUBLIC");
            objRow.setValue("DEPOSTI_SCHEME","INT ON FD");*/
            
            String StartFinYear = EITLERPGLOBAL.getCurrentFinYear()+"-04-01";
            String EndFinYear = (EITLERPGLOBAL.getCurrentFinYear()+1)+"-03-31";
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    
                    
                    objRow=objReportData.newRow();
                    
                    String ReceiptNo = rsTmp.getString("RECEIPT_NO");
                    String Type = rsTmp.getString("DEPOSIT_SCHEME");
                    String PartyCode = rsTmp.getString("PARTY_CODE");
                    
                    if(Type.equals("FD")) {
                        FDNoOfEntry++;
                        FDcrtotal += UtilFunctions.getDouble(rsTmp,"NET_INTEREST",0);
                        drtotal += UtilFunctions.getDouble(rsTmp,"NET_INTEREST",0);
                        FD=1;
                    }
                    else if(Type.equals("LD")){
                        LDNoOfEntry++;
                        LDcrtotal += UtilFunctions.getDouble(rsTmp,"NET_INTEREST",0);
                        drtotal += UtilFunctions.getDouble(rsTmp,"NET_INTEREST",0);
                        LD=1;
                    }
                    else if(Type.equals("CD")) {
                        //double netInterest = data.getDoubleValueFromDB("SELECT SUM(NET_INTEREST) FROM D_FD_INT_CALC_DETAIL WHERE RECEIPT_NO='"+ReceiptNo+"' AND WARRANT_DATE>='"+StartFinYear+"' AND WARRANT_DATE<='"+EndFinYear+"' ",FinanceGlobal.FinURL);
                        double netInterest = data.getDoubleValueFromDB("SELECT SUM(A.NET_INTEREST) AS TOTAL FROM D_FD_INT_CALC_DETAIL A, D_FD_INT_CALC_HEADER B WHERE A.RECEIPT_NO='"+ReceiptNo+"' AND A.PARTY_CODE='"+PartyCode+"' AND A.WARRANT_DATE>='"+StartFinYear+"' AND A.WARRANT_DATE<='"+EndFinYear+"' AND A.DOC_NO=B.DOC_NO AND B.TDS_ONLY=0",FinanceGlobal.FinURL);
                        CDNoOfEntry++;
                        CDcrtotal += netInterest;
                        drtotal += netInterest;
                        CD=1;
                    }
                    
                    rsTmp.next();
                }
                
                FDcrtotal= EITLERPGLOBAL.round(FDcrtotal, 2);
                LDcrtotal= EITLERPGLOBAL.round(LDcrtotal, 2);
                CDcrtotal= EITLERPGLOBAL.round(CDcrtotal, 2);
                
                drtotal= EITLERPGLOBAL.round(drtotal, 2);
                
                if(FD==0){
                    objRow=objReportData.newRow();
                    objRow.setValue("DEPOSTI_SCHEME","DEPOSIT-FIXED-PUBLICE");
                    objRow.setValue("TOTAL_WARRANT","0");
                    objRow.setValue("DEBIT_AMOUNT","0");
                    objRow.setValue("CREDIT_AMOUNT","0");
                    
                    objReportData.AddRow(objRow);
                }
                else {
                    objRow=objReportData.newRow();
                    objRow.setValue("DEPOSTI_SCHEME","DEPOSIT-FIXED-PUBLICE");
                    objRow.setValue("TOTAL_WARRANT",Integer.toString(FDNoOfEntry));
                    objRow.setValue("DEBIT_AMOUNT","0");
                    objRow.setValue("CREDIT_AMOUNT",Double.toString(FDcrtotal));
                    
                    objReportData.AddRow(objRow);
                }
                if(LD==0){
                    objRow=objReportData.newRow();
                    objRow.setValue("DEPOSTI_SCHEME","DEPOSIT-SHARE HOLDER");
                    objRow.setValue("TOTAL_WARRANT","0");
                    objRow.setValue("DEBIT_AMOUNT","0");
                    objRow.setValue("CREDIT_AMOUNT","0");
                    
                    objReportData.AddRow(objRow);
                }
                else {
                    objRow=objReportData.newRow();
                    objRow.setValue("DEPOSTI_SCHEME","DEPOSIT-SHARE HOLDER");
                    objRow.setValue("TOTAL_WARRANT",Integer.toString(LDNoOfEntry));
                    objRow.setValue("DEBIT_AMOUNT","0");
                    objRow.setValue("CREDIT_AMOUNT",Double.toString(LDcrtotal));
                    
                    objReportData.AddRow(objRow);
                }
                if(CD==0){
                    objRow=objReportData.newRow();
                    objRow.setValue("DEPOSTI_SCHEME","INT PAYABLE CD PUBLIC");
                    objRow.setValue("TOTAL_WARRANT","0");
                    objRow.setValue("DEBIT_AMOUNT","0");
                    objRow.setValue("CREDIT_AMOUNT","0");
                    
                    objReportData.AddRow(objRow);
                }
                else {
                    objRow=objReportData.newRow();
                    objRow.setValue("DEPOSTI_SCHEME","INT PAYABLE CD PUBLIC");
                    objRow.setValue("TOTAL_WARRANT",Integer.toString(CDNoOfEntry));
                    objRow.setValue("DEBIT_AMOUNT","0");
                    objRow.setValue("CREDIT_AMOUNT",Double.toString(CDcrtotal));
                    
                    objReportData.AddRow(objRow);
                }
                //rsTmp.last();
                objRow=objReportData.newRow();
                objRow.setValue("DEPOSTI_SCHEME","INT ON FD");
                objRow.setValue("TOTAL_WARRANT",Integer.toString(FDNoOfEntry+LDNoOfEntry+CDNoOfEntry));
                objRow.setValue("DEBIT_AMOUNT",Double.toString(drtotal));
                objRow.setValue("CREDIT_AMOUNT","0");
                
                objReportData.AddRow(objRow);
                
                int Comp_ID = EITLERPGLOBAL.gCompanyID;
                
                HashMap Parameters=new HashMap();
                //Parameters.put("COMPANY_ID",Integer.toString(Comp_ID));
                Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
                Parameters.put("DIFF",String.valueOf((FDcrtotal + LDcrtotal + CDcrtotal - drtotal)));
                
                
                objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/finance/rptDepositRenewalJournalTR24Summary.rpt",Parameters,objReportData);
                
            }
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
        
    }
    
    
    
    private boolean Validate() {
        //Form level validations
        
        if(txtYear.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Year");
            return false;
        } else if(txtYear.getText().trim().length() != 4 ) {
            
            JOptionPane.showMessageDialog(null,"Invalid Year in YYYY format.");
            return false;
        }
        
        return true;
    }
    
    private void GenerateCombo() {
        
        //--- Generate Type Combo ------//
        ComboData aData=new ComboData();
        
        cmbMonthModel=new EITLComboModel();
        cmbMonth.removeAllItems();
        cmbMonth.setModel(cmbMonthModel);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="January";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="February";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=3;
        aData.Text="March";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=4;
        aData.Text="April";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=5;
        aData.Text="May";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=6;
        aData.Text="June";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=7;
        aData.Text="July";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=8;
        aData.Text="August";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=9;
        aData.Text="September";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=10;
        aData.Text="October";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=11;
        aData.Text="November";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=12;
        aData.Text="December";
        cmbMonthModel.addElement(aData);
        
    }
    
}
