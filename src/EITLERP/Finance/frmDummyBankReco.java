/*
 * frmItemCriteria.java
 *
 * Created on May 28, 2005, 3:04 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  root
 */
import java.util.*;
import javax.swing.*;
import java.awt.*;
import EITLERP.*;
import java.sql.*;

public class frmDummyBankReco extends javax.swing.JApplet {
    
    
    private EITLComboModel cmbBookCodeModel=new EITLComboModel();
    private EITLComboModel cmbEffectModel=new EITLComboModel();
    private EITLTableCellRenderer RowFormat=new EITLTableCellRenderer();
    private EITLTableCellRenderer CellAlign=new EITLTableCellRenderer();
    private EITLTableCellRenderer ColumnColor=new EITLTableCellRenderer();
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
    private clsDummyBankReco ObjDummyBankReco = new clsDummyBankReco();
    int EditMode = 0;
    int currentRecord=-1;
    //private boolean SavePressed = true;
    
    //    int currentRecord = -1;
    /** Initializes the applet frmItemCriteria */
    public void init() {
        initComponents();
        GenerateCombo();
        FormatGrid();
        GenerateGrid("");
        opgNone.setSelected(true);
        setSize(675, 560);
        txtVoucherDate.requestFocus();
        setFields();
        SetMenuForRights();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblVoucherDate = new javax.swing.JLabel();
        txtVoucherDate = new javax.swing.JTextField();
        lblBookName = new javax.swing.JLabel();
        lblBookCode = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        lblEffect = new javax.swing.JLabel();
        txtEffect = new javax.swing.JTextField();
        lblAccountDate = new javax.swing.JLabel();
        txtAccountDate = new javax.swing.JTextField();
        txtBookName = new javax.swing.JTextField();
        lblRemarks = new javax.swing.JLabel();
        txtRemarks = new javax.swing.JTextField();
        cmdFromRemarksBig = new javax.swing.JButton();
        cmbBookCode = new javax.swing.JComboBox();
        lblAccountDate1 = new javax.swing.JLabel();
        txtChequeNo = new javax.swing.JTextField();
        lblAccountDate2 = new javax.swing.JLabel();
        txtChequeDate = new javax.swing.JTextField();
        opgCredit = new javax.swing.JRadioButton();
        opgDebit = new javax.swing.JRadioButton();
        opgNone = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdAdd = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        cmdClear = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        cmdSearch = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DUMMY VOUCHER ENTRY FOR BANK RECONCILIATION");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(7, 10, 360, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(2, 2, 660, 35);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        lblVoucherDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblVoucherDate.setText("Voucher Date :");
        jPanel2.add(lblVoucherDate);
        lblVoucherDate.setBounds(5, 30, 100, 20);

        txtVoucherDate.setNextFocusableComponent(txtAmount);
        txtVoucherDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtVoucherDateFocusGained(evt);
            }
        });

        jPanel2.add(txtVoucherDate);
        txtVoucherDate.setBounds(110, 30, 155, 20);

        lblBookName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBookName.setText("Book Name :");
        jPanel2.add(lblBookName);
        lblBookName.setBounds(275, 5, 95, 20);

        lblBookCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBookCode.setText("Book Code :");
        jPanel2.add(lblBookCode);
        lblBookCode.setBounds(5, 5, 100, 20);

        lblAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmount.setText("Amount :");
        jPanel2.add(lblAmount);
        lblAmount.setBounds(275, 30, 95, 20);

        txtAmount.setNextFocusableComponent(txtAccountDate);
        txtAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAmountFocusGained(evt);
            }
        });

        jPanel2.add(txtAmount);
        txtAmount.setBounds(375, 30, 170, 20);

        lblEffect.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEffect.setText("Effect :");
        jPanel2.add(lblEffect);
        lblEffect.setBounds(275, 55, 95, 20);

        txtEffect.setNextFocusableComponent(txtChequeNo);
        txtEffect.setEnabled(false);
        txtEffect.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEffectFocusGained(evt);
            }
        });

        jPanel2.add(txtEffect);
        txtEffect.setBounds(375, 55, 60, 20);

        lblAccountDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountDate.setText("Account Date :");
        jPanel2.add(lblAccountDate);
        lblAccountDate.setBounds(5, 57, 100, 20);

        txtAccountDate.setNextFocusableComponent(txtEffect);
        txtAccountDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAccountDateFocusGained(evt);
            }
        });

        jPanel2.add(txtAccountDate);
        txtAccountDate.setBounds(110, 55, 155, 20);

        txtBookName.setEditable(false);
        jPanel2.add(txtBookName);
        txtBookName.setBounds(375, 5, 250, 20);

        lblRemarks.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRemarks.setText("Remarks :");
        jPanel2.add(lblRemarks);
        lblRemarks.setBounds(5, 125, 100, 20);

        txtRemarks.setNextFocusableComponent(cmdAdd);
        txtRemarks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRemarksFocusGained(evt);
            }
        });

        jPanel2.add(txtRemarks);
        txtRemarks.setBounds(110, 125, 450, 20);

        cmdFromRemarksBig.setText("...");
        cmdFromRemarksBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFromRemarksBigActionPerformed(evt);
            }
        });

        jPanel2.add(cmdFromRemarksBig);
        cmdFromRemarksBig.setBounds(580, 125, 33, 20);

        cmbBookCode.setNextFocusableComponent(txtVoucherDate);
        cmbBookCode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbBookCodeItemStateChanged(evt);
            }
        });

        jPanel2.add(cmbBookCode);
        cmbBookCode.setBounds(110, 5, 155, 20);

        lblAccountDate1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountDate1.setText("Cheque No :");
        jPanel2.add(lblAccountDate1);
        lblAccountDate1.setBounds(5, 80, 100, 20);

        txtChequeNo.setNextFocusableComponent(txtChequeDate);
        jPanel2.add(txtChequeNo);
        txtChequeNo.setBounds(110, 80, 155, 20);

        lblAccountDate2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountDate2.setText("Cheque Date :");
        jPanel2.add(lblAccountDate2);
        lblAccountDate2.setBounds(275, 80, 95, 20);

        txtChequeDate.setNextFocusableComponent(txtRemarks);
        jPanel2.add(txtChequeDate);
        txtChequeDate.setBounds(375, 80, 135, 20);

        opgCredit.setText(" Credit");
        buttonGroup1.add(opgCredit);
        opgCredit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                opgCreditItemStateChanged(evt);
            }
        });

        jPanel2.add(opgCredit);
        opgCredit.setBounds(110, 105, 67, 15);

        opgDebit.setText(" Debit");
        buttonGroup1.add(opgDebit);
        opgDebit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                opgDebitItemStateChanged(evt);
            }
        });

        jPanel2.add(opgDebit);
        opgDebit.setBounds(240, 105, 63, 15);

        opgNone.setSelected(true);
        opgNone.setText(" None");
        buttonGroup1.add(opgNone);
        opgNone.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                opgNoneItemStateChanged(evt);
            }
        });

        jPanel2.add(opgNone);
        opgNone.setBounds(390, 105, 63, 15);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(7, 41, 644, 155);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(9, 232, 643, 300);

        cmdAdd.setText("Add");
        cmdAdd.setNextFocusableComponent(txtVoucherDate);
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        getContentPane().add(cmdAdd);
        cmdAdd.setBounds(385, 200, 85, 25);

        cmdEdit.setText("Edit");
        cmdEdit.setNextFocusableComponent(cmdSave);
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        getContentPane().add(cmdEdit);
        cmdEdit.setBounds(475, 200, 85, 25);

        cmdSave.setText("Save");
        cmdSave.setNextFocusableComponent(txtVoucherDate);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSave);
        cmdSave.setBounds(564, 200, 85, 25);

        lblMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMessage.setText("...");
        lblMessage.setBorder(new javax.swing.border.EtchedBorder());
        getContentPane().add(lblMessage);
        lblMessage.setBounds(11, 540, 537, 20);

        cmdClear.setText("Clear");
        cmdClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearActionPerformed(evt);
            }
        });

        getContentPane().add(cmdClear);
        cmdClear.setBounds(295, 200, 85, 25);

        lblSearch.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSearch.setText("Search :");
        getContentPane().add(lblSearch);
        lblSearch.setBounds(10, 200, 60, 20);

        getContentPane().add(txtSearch);
        txtSearch.setBounds(80, 200, 100, 20);

        cmdSearch.setText("Go");
        cmdSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSearchActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSearch);
        cmdSearch.setBounds(190, 200, 60, 20);

    }//GEN-END:initComponents
    
    private void opgNoneItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_opgNoneItemStateChanged
        // TODO add your handling code here:
        try {
            if(opgNone.isSelected()) {
                if(cmbBookCode.getSelectedIndex()!=0) {
                    txtBookName.setText(clsBook.getBookName(EITLERPGLOBAL.gCompanyID, cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex())));
                    HashMap List=new HashMap();
                    FormatGrid();
                    List = ObjDummyBankReco.getBankRecoList(cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex()),""); 
                    for(int i=1;i<=List.size();i++) {
                        Object[] rowData=new Object[14];
                        clsDummyBankReco ObjItem=(clsDummyBankReco)List.get(Integer.toString(i));
                        rowData[0]=Integer.toString(ObjItem.getAttribute("SR_NO").getInt());
                        rowData[1]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("VOUCHER_DATE").getString());
                        rowData[2]=ObjItem.getAttribute("BOOK_CODE").getString();
                        rowData[3]=ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                        rowData[4]=Double.toString(ObjItem.getAttribute("AMOUNT").getDouble());
                        rowData[5]=ObjItem.getAttribute("EFFECT").getString();
                        rowData[6]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("ACCOUNT_DATE").getString());
                        rowData[7]=ObjItem.getAttribute("CHEQUE_NO").getString();
                        rowData[8]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("CHEQUE_DATE").getString());
                        rowData[9]=ObjItem.getAttribute("REMARKS").getString();
                        rowData[10]=ObjItem.getAttribute("CREATED_BY").getString();
                        rowData[11]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("CREATED_DATE").getString()));
                        rowData[12]=ObjItem.getAttribute("MODIFIED_BY").getString();
                        rowData[13]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("MODIFIED_DATE").getString()));
                        DataModel.addRow(rowData);
                    }
                    cmdAdd.setEnabled(false);
                    cmdEdit.setEnabled(false);
                    cmdSave.setEnabled(false);
                    txtEffect.setText("");
                } else {
                    txtBookName.setText("...");
                    opgNone.setSelected(true);
                    opgCredit.setSelected(false);
                    opgDebit.setSelected(false);
                }
                
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_opgNoneItemStateChanged
    
    private void opgDebitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_opgDebitItemStateChanged
        // TODO add your handling code here:
        try {
            if(opgDebit.isSelected()) {
                if(cmbBookCode.getSelectedIndex()!=0) {
                    txtBookName.setText(clsBook.getBookName(EITLERPGLOBAL.gCompanyID, cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex())));
                    HashMap List=new HashMap();
                    FormatGrid();
                    List = ObjDummyBankReco.getBankRecoList(cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex()),"D"); 
                    for(int i=1;i<=List.size();i++) {
                        Object[] rowData=new Object[14];
                        clsDummyBankReco ObjItem=(clsDummyBankReco)List.get(Integer.toString(i));
                        rowData[0]=Integer.toString(ObjItem.getAttribute("SR_NO").getInt());
                        rowData[1]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("VOUCHER_DATE").getString());
                        rowData[2]=ObjItem.getAttribute("BOOK_CODE").getString();
                        rowData[3]=ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                        rowData[4]=Double.toString(ObjItem.getAttribute("AMOUNT").getDouble());
                        rowData[5]=ObjItem.getAttribute("EFFECT").getString();
                        rowData[6]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("ACCOUNT_DATE").getString());
                        rowData[7]=ObjItem.getAttribute("CHEQUE_NO").getString();
                        rowData[8]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("CHEQUE_DATE").getString());
                        rowData[9]=ObjItem.getAttribute("REMARKS").getString();
                        rowData[10]=ObjItem.getAttribute("CREATED_BY").getString();
                        rowData[11]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("CREATED_DATE").getString()));
                        rowData[12]=ObjItem.getAttribute("MODIFIED_BY").getString();
                        rowData[13]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("MODIFIED_DATE").getString()));
                        DataModel.addRow(rowData);
                    }
                    cmdAdd.setEnabled(true);
                    cmdEdit.setEnabled(true);
                    cmdSave.setEnabled(true);
                    txtEffect.setText("D");
                } else {
                    txtBookName.setText("...");
                    opgNone.setSelected(true);
                    opgCredit.setSelected(false);
                    opgDebit.setSelected(false);
                }
                
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_opgDebitItemStateChanged
    
    private void opgCreditItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_opgCreditItemStateChanged
        // TODO add your handling code here:
        try {
            if(opgCredit.isSelected()) {
                if(cmbBookCode.getSelectedIndex()!=0) {
                    txtBookName.setText(clsBook.getBookName(EITLERPGLOBAL.gCompanyID, cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex())));
                    HashMap List=new HashMap();
                    FormatGrid();
                    List = ObjDummyBankReco.getBankRecoList(cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex()),"C"); 
                    for(int i=1;i<=List.size();i++) {
                        Object[] rowData=new Object[14];
                        clsDummyBankReco ObjItem=(clsDummyBankReco)List.get(Integer.toString(i));
                        rowData[0]=Integer.toString(ObjItem.getAttribute("SR_NO").getInt());
                        rowData[1]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("VOUCHER_DATE").getString());
                        rowData[2]=ObjItem.getAttribute("BOOK_CODE").getString();
                        rowData[3]=ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                        rowData[4]=Double.toString(ObjItem.getAttribute("AMOUNT").getDouble());
                        rowData[5]=ObjItem.getAttribute("EFFECT").getString();
                        rowData[6]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("ACCOUNT_DATE").getString());
                        rowData[7]=ObjItem.getAttribute("CHEQUE_NO").getString();
                        rowData[8]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("CHEQUE_DATE").getString());
                        rowData[9]=ObjItem.getAttribute("REMARKS").getString();
                        rowData[10]=ObjItem.getAttribute("CREATED_BY").getString();
                        rowData[11]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("CREATED_DATE").getString()));
                        rowData[12]=ObjItem.getAttribute("MODIFIED_BY").getString();
                        rowData[13]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("MODIFIED_DATE").getString()));
                        DataModel.addRow(rowData);
                    }
                    cmdAdd.setEnabled(true);
                    cmdEdit.setEnabled(true);
                    cmdSave.setEnabled(true);
                    txtEffect.setText("C");
                } else {
                    txtBookName.setText("...");
                    opgNone.setSelected(true);
                    opgCredit.setSelected(false);
                    opgDebit.setSelected(false);
                }
                
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_opgCreditItemStateChanged
    
    private void cmdSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSearchActionPerformed
        // TODO add your handling code here:
        searchWithin(' ');
    }//GEN-LAST:event_cmdSearchActionPerformed
    
    private void txtRemarksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRemarksFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Enter Remarks.....");
    }//GEN-LAST:event_txtRemarksFocusGained
    
    private void cmbBookCodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBookCodeItemStateChanged
        // TODO add your handling code here:
        try {
            if(cmbBookCode.getSelectedIndex()!=0) {
                txtBookName.setText(clsBook.getBookName(EITLERPGLOBAL.gCompanyID, cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex())));
                HashMap List=new HashMap();
                FormatGrid();
                List = ObjDummyBankReco.getBankRecoList(cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex()), "");
                for(int i=1;i<=List.size();i++) {
                    Object[] rowData=new Object[14];
                    clsDummyBankReco ObjItem=(clsDummyBankReco)List.get(Integer.toString(i));
                    rowData[0]=Integer.toString(ObjItem.getAttribute("SR_NO").getInt());
                    rowData[1]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("VOUCHER_DATE").getString());
                    rowData[2]=ObjItem.getAttribute("BOOK_CODE").getString();
                    rowData[3]=ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                    rowData[4]=Double.toString(ObjItem.getAttribute("AMOUNT").getDouble());
                    rowData[5]=ObjItem.getAttribute("EFFECT").getString();
                    rowData[6]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("ACCOUNT_DATE").getString());
                    rowData[7]=ObjItem.getAttribute("CHEQUE_NO").getString();
                    rowData[8]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("CHEQUE_DATE").getString());
                    rowData[9]=ObjItem.getAttribute("REMARKS").getString();
                    rowData[10]=ObjItem.getAttribute("CREATED_BY").getString();
                    rowData[11]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("CREATED_DATE").getString()));
                    rowData[12]=ObjItem.getAttribute("MODIFIED_BY").getString();
                    rowData[13]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("MODIFIED_DATE").getString()));
                    DataModel.addRow(rowData);
                }
            } else {
                txtBookName.setText("...");
            }
            opgNone.setSelected(true);
            opgCredit.setSelected(false);
            opgDebit.setSelected(false);
            cmdSave.setEnabled(false);
            cmdEdit.setEnabled(false);
            cmdAdd.setEnabled(false);
        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbBookCodeItemStateChanged
    
    private void cmdFromRemarksBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFromRemarksBigActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtRemarks;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_cmdFromRemarksBigActionPerformed
    
    private void txtEffectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEffectFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Enter Effect either C or D.");
    }//GEN-LAST:event_txtEffectFocusGained
    
    private void cmdClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearActionPerformed
        // TODO add your handling code here:
        setFields();
    }//GEN-LAST:event_cmdClearActionPerformed
    
    private void txtAccountDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAccountDateFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Enter Account Date in DD/MM/YYYY format.");
    }//GEN-LAST:event_txtAccountDateFocusGained
    
    private void txtAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAmountFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Enter Amount ....");
    }//GEN-LAST:event_txtAmountFocusGained
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        if(cmdSave.getText().equals("Save")) {
            ObjDummyBankReco.ItemRecord.clear();
            String Effect = "";
            if(opgCredit.isSelected()) {
                Effect = "C";
            } else if(opgDebit.isSelected()) {
                Effect = "D";
            } 
            for(int i=0 ; i<Table.getRowCount();i++) {
                clsDummyBankReco ObjItem = new clsDummyBankReco();
                System.out.println(Table.getValueAt(i,0).toString() + " " + Table.getValueAt(i,1).toString() +" " + Table.getValueAt(i,2).toString());
                ObjItem.setAttribute("SR_NO",Integer.parseInt(DataModel.getValueByVariable("SR_NO",i)));
                ObjItem.setAttribute("VOUCHER_DATE",DataModel.getValueByVariable("VOUCHER_DATE",i));
                ObjItem.setAttribute("BOOK_CODE",DataModel.getValueByVariable("BOOK_CODE",i));
                ObjItem.setAttribute("MAIN_ACCOUNT_CODE",DataModel.getValueByVariable("MAIN_ACCOUNT_CODE",i));
                ObjItem.setAttribute("AMOUNT",Double.parseDouble(DataModel.getValueByVariable("AMOUNT",i)));
                ObjItem.setAttribute("EFFECT",DataModel.getValueByVariable("EFFECT",i));
                ObjItem.setAttribute("ACCOUNT_DATE",DataModel.getValueByVariable("ACCOUNT_DATE",i));
                ObjItem.setAttribute("CHEQUE_NO",DataModel.getValueByVariable("CHEQUE_NO",i));
                ObjItem.setAttribute("CHEQUE_DATE",DataModel.getValueByVariable("CHEQUE_DATE",i));
                ObjItem.setAttribute("REMARKS",DataModel.getValueByVariable("REMARKS",i));
                ObjItem.setAttribute("CREATED_BY",DataModel.getValueByVariable("CREATED_BY",i));
                ObjItem.setAttribute("CREATED_DATE",DataModel.getValueByVariable("CREATED_DATE",i));
                ObjItem.setAttribute("MODIFIED_BY",DataModel.getValueByVariable("MODIFIED_BY",i));
                ObjItem.setAttribute("MODIFIED_DATE",DataModel.getValueByVariable("MODIFIED_DATE",i));
                ObjDummyBankReco.ItemRecord.put(Integer.toString(i+1), ObjItem);
            }
            if(!ObjDummyBankReco.Insert(cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex()),Effect)) {
                JOptionPane.showMessageDialog(null,"Error :: " + ObjDummyBankReco.LastError);
            }
            setFields();
            FormatGrid();
            GenerateGrid(Effect);
        } else if(cmdSave.getText().equals("Done")) {
            if(!Validate()){
                return;
            }
            DataModel.setValueByVariable("SR_NO",Integer.toString(currentRecord+1) ,currentRecord);
            DataModel.setValueByVariable("VOUCHER_DATE",txtVoucherDate.getText() ,currentRecord);
            DataModel.setValueByVariable("BOOK_CODE",cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex()) ,currentRecord);
            DataModel.setValueByVariable("MAIN_ACCOUNT_CODE",clsBook.getBookMainCode(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.getCombostrCode(cmbBookCode)),currentRecord);
            DataModel.setValueByVariable("AMOUNT",txtAmount.getText().trim() ,currentRecord);
            DataModel.setValueByVariable("EFFECT",txtEffect.getText().trim(),currentRecord);
            DataModel.setValueByVariable("ACCOUNT_DATE",txtAccountDate.getText().trim() ,currentRecord);
            DataModel.setValueByVariable("CHEQUE_NO",txtChequeNo.getText().trim() ,currentRecord);
            DataModel.setValueByVariable("CHEQUE_DATE",txtChequeDate.getText().trim() ,currentRecord);
            DataModel.setValueByVariable("REMARKS",txtRemarks.getText().trim(),currentRecord);
            DataModel.setValueByVariable("MODIFIED_BY",EITLERPGLOBAL.gLoginID, currentRecord);
            DataModel.setValueByVariable("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDate(),currentRecord);
            
            cmdAdd.setEnabled(true);
            cmdEdit.setEnabled(true);
            cmdClear.setEnabled(true);
            cmbBookCode.setEnabled(true);
            txtVoucherDate.setEnabled(true);
            txtAmount.setEnabled(true);
            txtEffect.setEnabled(false);
            txtChequeDate.setEnabled(true);
            txtChequeNo.setEnabled(true);
            txtRemarks.setEnabled(true);
            txtVoucherDate.requestFocus();
            cmdSave.setText("Save");
            currentRecord=-1;
            setFields();
        }
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void txtVoucherDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVoucherDateFocusGained
        // TODO add your handling code here:
        lblMessage.setText("Enter Voucher Date in DD/MM/YYYY format.");
    }//GEN-LAST:event_txtVoucherDateFocusGained
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        if(Table.getSelectedRow()>=0 && Table.getRowCount()>0) {
            cmdSave.setText("Done");
            cmdAdd.setEnabled(false);
            cmdEdit.setEnabled(false);
            cmdClear.setEnabled(false);
            cmbBookCode.setEnabled(false);
            int SrNo = Integer.parseInt(DataModel.getValueByVariable("SR_NO", Table.getSelectedRow()));
            currentRecord = Table.getSelectedRow();
            txtVoucherDate.setText(DataModel.getValueByVariable("VOUCHER_DATE", Table.getSelectedRow()));
            txtAmount.setText(DataModel.getValueByVariable("AMOUNT", Table.getSelectedRow()));
            txtEffect.setText(DataModel.getValueByVariable("EFFECT", Table.getSelectedRow()));
            txtAccountDate.setText(DataModel.getValueByVariable("ACCOUNT_DATE", Table.getSelectedRow()));
            txtChequeNo.setText(DataModel.getValueByVariable("CHEQUE_NO", Table.getSelectedRow()));
            txtChequeDate.setText(DataModel.getValueByVariable("CHEQUE_DATE", Table.getSelectedRow()));
            txtRemarks.setText(DataModel.getValueByVariable("REMARKS", Table.getSelectedRow()));
            txtVoucherDate.setEnabled(false);
            txtAmount.setEnabled(false);
            txtEffect.setEnabled(false);
            txtRemarks.setEnabled(false);
            txtChequeNo.setEnabled(false);
            txtChequeDate.setEnabled(false);
            txtAccountDate.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null,"Select Row...");
        }
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        // TODO add your handling code here:
        EditMode=EITLERPGLOBAL.ADD;
        if(!Validate()) {
            EditMode=0;
            return;
        }
        int SrNo = DataModel.getRowCount()+1;
        Object[] rowData=new Object[14];
        rowData[0]=Integer.toString(SrNo);
        rowData[1]=txtVoucherDate.getText().trim();
        rowData[2]=EITLERPGLOBAL.getCombostrCode(cmbBookCode);
        rowData[3]=clsBook.getBookMainCode(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.getCombostrCode(cmbBookCode)); // Main Code
        rowData[4]=txtAmount.getText().trim();
        rowData[5]=txtEffect.getText().trim().toUpperCase();
        if(EditMode==EITLERPGLOBAL.ADD) {
            rowData[6]="";
        }
        if(EditMode==EITLERPGLOBAL.EDIT) {
            rowData[6]=txtAccountDate.getText().trim();
        }
        rowData[7]=txtChequeNo.getText().trim();
        rowData[8]=txtChequeDate.getText().trim();
        rowData[9]=txtRemarks.getText().trim();
        if(EditMode==EITLERPGLOBAL.ADD) {
            rowData[10]=EITLERPGLOBAL.gLoginID;
            rowData[11]=EITLERPGLOBAL.getCurrentDate();
        } else {
            rowData[10]="";
            rowData[11]="";
        }
        if(EditMode==EITLERPGLOBAL.EDIT) {
            rowData[12]=EITLERPGLOBAL.gLoginID;
            rowData[13]=EITLERPGLOBAL.getCurrentDate();
        } else {
            rowData[12]="";
            rowData[13]="";
        }
        DataModel.addRow(rowData);
        setFields();
        EditMode=0;
    }//GEN-LAST:event_cmdAddActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbBookCode;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdClear;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdFromRemarksBig;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccountDate;
    private javax.swing.JLabel lblAccountDate1;
    private javax.swing.JLabel lblAccountDate2;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblBookCode;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblEffect;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblRemarks;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblVoucherDate;
    private javax.swing.JRadioButton opgCredit;
    private javax.swing.JRadioButton opgDebit;
    private javax.swing.JRadioButton opgNone;
    private javax.swing.JTextField txtAccountDate;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtChequeDate;
    private javax.swing.JTextField txtChequeNo;
    private javax.swing.JTextField txtEffect;
    private javax.swing.JTextField txtRemarks;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtVoucherDate;
    // End of variables declaration//GEN-END:variables
    
    
    private void FormatGrid() {
        EITLTableCellRenderer cellRender=new EITLTableCellRenderer();
        cellRender.setHorizontalAlignment(JLabel.RIGHT);
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        DataModel.addColumn("Sr.No.");//0
        DataModel.addColumn("Vourhcer Date");//1
        DataModel.addColumn("Book Code");//2
        DataModel.addColumn("Main Code");//3
        DataModel.addColumn("Amount");//4
        DataModel.addColumn("Effect");//5
        DataModel.addColumn("Account Date");//6
        DataModel.addColumn("Cheque No");//7
        DataModel.addColumn("Cheque Date");//8
        DataModel.addColumn("Remarks");//9
        DataModel.addColumn("Created By");//10
        DataModel.addColumn("Created Date");//11
        DataModel.addColumn("Modified By");//12
        DataModel.addColumn("Modified Date");//13
        
        
        DataModel.SetVariable(0,"SR_NO");
        DataModel.SetVariable(1,"VOUCHER_DATE");
        DataModel.SetVariable(2,"BOOK_CODE");
        DataModel.SetVariable(3,"MAIN_ACCOUNT_CODE");
        DataModel.SetVariable(4,"AMOUNT");
        DataModel.SetVariable(5,"EFFECT");
        DataModel.SetVariable(6,"ACCOUNT_DATE");
        DataModel.SetVariable(7,"CHEQUE_NO");
        DataModel.SetVariable(8,"CHEQUE_DATE");
        DataModel.SetVariable(9,"REMARKS");
        DataModel.SetVariable(10,"CREATED_BY");
        DataModel.SetVariable(11,"CREATED_DATE");
        DataModel.SetVariable(12,"MODIFIED_BY");
        DataModel.SetVariable(13,"MODIFIED_DATE");
        
        
        
        Table.getColumnModel().getColumn(0).setPreferredWidth(50);
        Table.getColumnModel().getColumn(1).setPreferredWidth(80);
        Table.getColumnModel().getColumn(2).setPreferredWidth(80);
        Table.getColumnModel().getColumn(3).setPreferredWidth(100);
        Table.getColumnModel().getColumn(4).setPreferredWidth(100);
        Table.getColumnModel().getColumn(5).setPreferredWidth(40);
        Table.getColumnModel().getColumn(6).setPreferredWidth(100);
        Table.getColumnModel().getColumn(7).setPreferredWidth(100);
        Table.getColumnModel().getColumn(8).setPreferredWidth(100);
        Table.getColumnModel().getColumn(9).setPreferredWidth(100);
        Table.getColumnModel().getColumn(10).setPreferredWidth(100);
        Table.getColumnModel().getColumn(11).setPreferredWidth(100);
        Table.getColumnModel().getColumn(12).setPreferredWidth(100);
        Table.getColumnModel().getColumn(13).setPreferredWidth(100);
        
        //DataModel.SetNumeric(5,true);
        DataModel.TableReadOnly(true);
        Table.getColumnModel().getColumn(4).setCellRenderer(cellRender);
        
        RowFormat=new EITLTableCellRenderer();
        for(int j=0;j<Table.getColumnCount();j++) {
            Table.getColumnModel().getColumn(j).setCellRenderer(RowFormat);
        }
        
        CellAlign.setHorizontalAlignment(JLabel.RIGHT);
        Table.getColumnModel().getColumn(DataModel.getColFromVariable("AMOUNT")).setCellRenderer(CellAlign);
    }
    
    private void setFields() {
        txtVoucherDate.setText("");
        txtBookName.setText("");
        txtAmount.setText("");
        if(opgCredit.isSelected()) {
            txtEffect.setText("C");
        } else if(opgDebit.isSelected()) {
            txtEffect.setText("D");
        }
        
        txtAccountDate.setText("");
        txtRemarks.setText("");
        txtChequeDate.setText("");
        txtChequeNo.setText("");
    }
    
    private void GenerateGrid(String Effect) {
        try {
            if(cmbBookCode.getSelectedIndex()!=0) {
                txtBookName.setText(clsBook.getBookName(EITLERPGLOBAL.gCompanyID, cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex())));
                HashMap List=new HashMap();
                FormatGrid();
                List = ObjDummyBankReco.getBankRecoList(cmbBookCodeModel.getstrCode(cmbBookCode.getSelectedIndex()),Effect);
                for(int i=1;i<=List.size();i++) {
                    Object[] rowData=new Object[14];
                    clsDummyBankReco ObjItem=(clsDummyBankReco)List.get(Integer.toString(i));
                    rowData[0]=Integer.toString(ObjItem.getAttribute("SR_NO").getInt());
                    rowData[1]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("VOUCHER_DATE").getString());
                    rowData[2]=ObjItem.getAttribute("BOOK_CODE").getString();
                    rowData[3]=ObjItem.getAttribute("MAIN_ACCOUNT_CODE").getString();
                    rowData[4]=Double.toString(ObjItem.getAttribute("AMOUNT").getDouble());
                    rowData[5]=ObjItem.getAttribute("EFFECT").getString();
                    rowData[6]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("ACCOUNT_DATE").getString());
                    rowData[7]=ObjItem.getAttribute("CHEQUE_NO").getString();
                    rowData[8]=EITLERPGLOBAL.formatDate(ObjItem.getAttribute("CHEQUE_DATE").getString());
                    rowData[9]=ObjItem.getAttribute("REMARKS").getString();
                    rowData[10]=ObjItem.getAttribute("CREATED_BY").getString();
                    rowData[11]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("CREATED_DATE").getString()));
                    rowData[12]=ObjItem.getAttribute("MODIFIED_BY").getString();
                    rowData[13]=EITLERPGLOBAL.formatDate((ObjItem.getAttribute("MODIFIED_DATE").getString()));
                    DataModel.addRow(rowData);
                }
            } else {
                txtBookName.setText("...");
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private boolean Validate() {
        if(txtVoucherDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Insert Voucher Date.");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtVoucherDate.getText().trim())) {
            JOptionPane.showMessageDialog(null,"Insert Voucher Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(!txtAccountDate.getText().trim().equals("")) {
                if(!EITLERPGLOBAL.isDate(txtAccountDate.getText().trim())) {
                    JOptionPane.showMessageDialog(null,"Insert Account Date in DD/MM/YYYY format.");
                    return false;
                }
            } else {
                JOptionPane.showMessageDialog(null,"Insert Account Date.");
                return false;
            }
        }
        
        if(!txtEffect.getText().trim().equals("C")) {
            if(!txtEffect.getText().trim().equals("D")) {
                JOptionPane.showMessageDialog(null,"Invalid Effect.");
                return false;
            }
        }
        
        if(txtAmount.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Insert Amount.");
            return false;
        }
        
        if(Double.parseDouble(txtAmount.getText().trim())<=0) {
            JOptionPane.showMessageDialog(null,"Insert proper value in recommended monthly consumption field.");
            return false;
        }
        
        if(txtEffect.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Insert Effect.");
            return false;
        }
        
        if(!txtEffect.getText().trim().toUpperCase().equals("C") &&  !txtEffect.getText().trim().toUpperCase().equals("D")) {
            JOptionPane.showMessageDialog(null,"Insert Effect either C or D.");
            return false;
        }
        
        return true;
    }
    
    private void updateSrNo() {
        for(int i=0 ; i<Table.getRowCount();i++) {
            System.out.println(Table.getValueAt(i, 0).toString());
            Table.setValueAt(Integer.toString(i+1), i, 0);
        }
    }
    
    private void SetMenuForRights() {
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 1189,11891)) {
            cmdAdd.setEnabled(true);
        } else {
            cmdAdd.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 1189,11892)) {
            cmdEdit.setEnabled(true);
        } else {
            cmdEdit.setEnabled(false);
        }
        
        
        //        // --- Remove Rights --
        //        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, MenuID,RemoveRights)) {
        //            cmdRemove.setEnabled(true);
        //        } else {
        //            cmdRemove.setEnabled(false);
        //        }
        
        // --- Save Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 1189,11893)) {
            cmdSave.setEnabled(true);
        } else {
            cmdSave.setEnabled(false);
        }
    }
    
    private void GenerateCombo() {
        try {
            cmbBookCodeModel=new EITLComboModel();
            cmbBookCode.removeAllItems();
            cmbBookCode.setModel(cmbBookCodeModel);
            
            String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE=1";
            ResultSet rsBook = data.getResult(SQL,FinanceGlobal.FinURL);
            rsBook.first();
            ComboData aData=new ComboData();
            aData.strCode="0";
            aData.Text="Select Book Code";
            cmbBookCodeModel.addElement(aData);
            while(!rsBook.isAfterLast()) {
                aData=new ComboData();
                aData.strCode=UtilFunctions.getString(rsBook,"BOOK_CODE","");
                aData.Text=UtilFunctions.getString(rsBook,"BOOK_CODE","");
                cmbBookCodeModel.addElement(aData);
                rsBook.next();
            }
            
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    private void searchWithin(char recentKey) {
        try {
            RowFormat.removeBackColors();
            CellAlign.removeBackColors();
            
            Table.repaint();
            
            String searchString=txtSearch.getText();
            
            if(!searchString.trim().equals("")) {
                
                
                if(recentKey!=' ') {
                    searchString=searchString+recentKey;
                }
                
                searchString=searchString.toLowerCase();
                
                int currentCol=Table.getSelectedColumn();
                
                for(int i=0;i<=Table.getRowCount()-1;i++) {
                    
                    if(Table.getValueAt(i,currentCol).toString().trim().toLowerCase().indexOf(searchString)!=-1) {
                        
                        Table.changeSelection(i, currentCol, false,false);
                        
                        RowFormat.setBackColor(i, currentCol, Color.YELLOW);
                        
                        if(currentCol==DataModel.getColFromVariable("AMOUNT")) {
                            CellAlign.setBackColor(i, currentCol, Color.YELLOW);
                        }
                    }
                }
                Table.repaint();
            }
        }
        catch(Exception e) {
            
        }
    }
    
}
