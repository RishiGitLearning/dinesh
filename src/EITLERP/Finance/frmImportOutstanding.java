/*
 * Import.java
 *
 * Created on August 12, 2007, 3:17 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  root
 */
import java.sql.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import java.net.*;
import java.util.*;
import EITLERP.*;
import EITLERP.Stores.*;
import TReportWriter.*;
import TReportWriter.SimpleDataProvider.*;
import EITLERP.Sales.*;
import EITLERP.data.*;

public class frmImportOutstanding extends javax.swing.JApplet {
    
    public String CloneURL="jdbc:mysql://localhost:3306/DINESHMILLS";
    public int DefaultFinHierarchy=777;
    //public int DefaultFinHierarchy=621;
    public int DefaultCompanyID=2;
    
    /** Initializes the applet Import */
    public void init() {
        setSize(550,300);
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        cmdStart = new javax.swing.JButton();
        BAR = new javax.swing.JProgressBar();
        lblDisplay = new javax.swing.JLabel();
        cmdPo_No = new javax.swing.JButton();
        cmdDetail = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        cmdFindVoucherNo060708 = new javax.swing.JButton();
        cmdFindVoucherNo0809 = new javax.swing.JButton();
        cmdUpdateVouchers = new javax.swing.JButton();
        cmdFindMisMatch = new javax.swing.JButton();
        cmdImportInOutstanding = new javax.swing.JButton();
        cmdFileToData = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cmdFindDum = new javax.swing.JButton();
        cmdUpdateSrno = new javax.swing.JButton();
        cmdFindOther = new javax.swing.JButton();
        cmdFind09Adj = new javax.swing.JButton();
        cmdFind09Voucher = new javax.swing.JButton();
        cmdFindAdjVoucher = new javax.swing.JButton();
        cmdOSBalance = new javax.swing.JButton();
        cmdSameLink = new javax.swing.JButton();
        cmdCheckVoucher = new javax.swing.JButton();
        cmdPostVoucher = new javax.swing.JButton();
        cmdDecVoucher = new javax.swing.JButton();
        cmdDecInv = new javax.swing.JButton();
        cmdOSVoucher = new javax.swing.JButton();
        cmdUpdateRec = new javax.swing.JButton();
        cmdDebitNote = new javax.swing.JButton();
        cmdFinddebitVoucher = new javax.swing.JButton();
        cmdtmp = new javax.swing.JButton();
        cmdCorrectVoucher = new javax.swing.JButton();
        cmdFind09inos = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jLabel1.setText("Import From ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(12, 18, 90, 15);

        txtFile.setText("/root/Desktop/stg_os.txt");
        getContentPane().add(txtFile);
        txtFile.setBounds(96, 17, 340, 19);

        cmdStart.setText("Start");
        cmdStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStartActionPerformed(evt);
            }
        });

        getContentPane().add(cmdStart);
        cmdStart.setBounds(10, 80, 110, 20);

        getContentPane().add(BAR);
        BAR.setBounds(200, 40, 270, 14);

        lblDisplay.setText(".....");
        getContentPane().add(lblDisplay);
        lblDisplay.setBounds(10, 60, 110, 15);

        cmdPo_No.setText("Print PO No");
        cmdPo_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPo_NoActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPo_No);
        cmdPo_No.setBounds(10, 105, 110, 20);

        cmdDetail.setText("INSERT INTO DETAIL");
        cmdDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDetailActionPerformed(evt);
            }
        });

        getContentPane().add(cmdDetail);
        cmdDetail.setBounds(120, 80, 165, 20);

        jButton1.setText("FIND PO DATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(130, 105, 165, 20);

        cmdFindVoucherNo060708.setText("Find Vou 060708");
        cmdFindVoucherNo060708.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFindVoucherNo060708ActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFindVoucherNo060708);
        cmdFindVoucherNo060708.setBounds(290, 80, 155, 20);

        cmdFindVoucherNo0809.setText("Find Voucher 0809");
        cmdFindVoucherNo0809.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFindVoucherNo0809ActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFindVoucherNo0809);
        cmdFindVoucherNo0809.setBounds(300, 105, 155, 20);

        cmdUpdateVouchers.setText("Update Vouchers");
        cmdUpdateVouchers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateVouchersActionPerformed(evt);
            }
        });

        getContentPane().add(cmdUpdateVouchers);
        cmdUpdateVouchers.setBounds(10, 130, 140, 20);

        cmdFindMisMatch.setText("Find MisMatch");
        cmdFindMisMatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFindMisMatchActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFindMisMatch);
        cmdFindMisMatch.setBounds(160, 130, 140, 20);

        cmdImportInOutstanding.setText("Import in Outstanding");
        cmdImportInOutstanding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdImportInOutstandingActionPerformed(evt);
            }
        });

        getContentPane().add(cmdImportInOutstanding);
        cmdImportInOutstanding.setBounds(130, 155, 180, 20);

        cmdFileToData.setText("FileToData");
        cmdFileToData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFileToDataActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFileToData);
        cmdFileToData.setBounds(10, 155, 110, 20);

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(310, 130, 88, 20);

        cmdFindDum.setText("Find Dum");
        cmdFindDum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFindDumActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFindDum);
        cmdFindDum.setBounds(320, 155, 150, 20);

        cmdUpdateSrno.setText("Sr no");
        cmdUpdateSrno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateSrnoActionPerformed(evt);
            }
        });

        getContentPane().add(cmdUpdateSrno);
        cmdUpdateSrno.setBounds(160, 180, 66, 20);

        cmdFindOther.setText("Find Other");
        cmdFindOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFindOtherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFindOther);
        cmdFindOther.setBounds(320, 180, 150, 20);

        cmdFind09Adj.setText("FIND 09 ADJ");
        cmdFind09Adj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFind09AdjActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFind09Adj);
        cmdFind09Adj.setBounds(10, 180, 120, 20);

        cmdFind09Voucher.setText("FIND 09 Voucher");
        cmdFind09Voucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFind09VoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFind09Voucher);
        cmdFind09Voucher.setBounds(10, 205, 150, 20);

        cmdFindAdjVoucher.setText("Find Adj. Vou.");
        cmdFindAdjVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFindAdjVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFindAdjVoucher);
        cmdFindAdjVoucher.setBounds(170, 205, 140, 20);

        cmdOSBalance.setText("os_balance_match");
        cmdOSBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOSBalanceActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOSBalance);
        cmdOSBalance.setBounds(320, 205, 150, 20);

        cmdSameLink.setText("Same Link");
        cmdSameLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSameLinkActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSameLink);
        cmdSameLink.setBounds(10, 225, 140, 20);

        cmdCheckVoucher.setText("Check Voucher");
        cmdCheckVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCheckVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCheckVoucher);
        cmdCheckVoucher.setBounds(170, 225, 130, 20);

        cmdPostVoucher.setText("Post Voucher");
        cmdPostVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPostVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPostVoucher);
        cmdPostVoucher.setBounds(350, 230, 120, 20);

        cmdDecVoucher.setText("Find dec vou");
        cmdDecVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDecVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdDecVoucher);
        cmdDecVoucher.setBounds(10, 245, 130, 20);

        cmdDecInv.setText("Find dec inv");
        cmdDecInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDecInvActionPerformed(evt);
            }
        });

        getContentPane().add(cmdDecInv);
        cmdDecInv.setBounds(170, 245, 130, 20);

        cmdOSVoucher.setText("Find OS vou");
        cmdOSVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOSVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOSVoucher);
        cmdOSVoucher.setBounds(350, 250, 120, 20);

        cmdUpdateRec.setText("update rec");
        cmdUpdateRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateRecActionPerformed(evt);
            }
        });

        getContentPane().add(cmdUpdateRec);
        cmdUpdateRec.setBounds(10, 270, 110, 20);

        cmdDebitNote.setText("DEBIT NOTE");
        cmdDebitNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDebitNoteActionPerformed(evt);
            }
        });

        getContentPane().add(cmdDebitNote);
        cmdDebitNote.setBounds(170, 270, 110, 20);

        cmdFinddebitVoucher.setText("find debit");
        cmdFinddebitVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFinddebitVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFinddebitVoucher);
        cmdFinddebitVoucher.setBounds(350, 270, 120, 20);

        cmdtmp.setText("TMP");
        cmdtmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtmpActionPerformed(evt);
            }
        });

        getContentPane().add(cmdtmp);
        cmdtmp.setBounds(30, 300, 60, 20);

        cmdCorrectVoucher.setText("CORRECT VOUCHER");
        cmdCorrectVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCorrectVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCorrectVoucher);
        cmdCorrectVoucher.setBounds(100, 300, 170, 25);

        cmdFind09inos.setText("FIND 09 in os");
        cmdFind09inos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFind09inosActionPerformed(evt);
            }
        });

        getContentPane().add(cmdFind09inos);
        cmdFind09inos.setBounds(289, 300, 150, 25);

    }//GEN-END:initComponents
    
    private void cmdFind09inosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFind09inosActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT A.VOUCHER_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE<='2011-02-28' AND A.VOUCHER_TYPE IN (6,7,8,9,12)  " +
            "AND B.MAIN_ACCOUNT_CODE='210027' AND A.APPROVED=1 AND A.CANCELLED=0 " +
            "AND A.EXCLUDE_IN_ADJ =0 AND B.EFFECT='C' AND B.INVOICE_NO ='' " +
            "AND B.MODULE_ID <>65 AND B.GRN_NO ='' AND (B.MATCHED=0 OR B.MATCHED IS NULL) " +
            "ORDER BY B.SUB_ACCOUNT_CODE,A.VOUCHER_DATE ";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            rsData.first();
            while(!rsData.isAfterLast()) {
                String VoucherNo = rsData.getString("VOUCHER_NO");
                SQL = "SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND VOUCHER_NO='"+VoucherNo+"' ";
                if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    System.out.println("VoucherNo : " + VoucherNo);
                }
                rsData.next();
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdFind09inosActionPerformed
    
    private void cmdCorrectVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCorrectVoucherActionPerformed
        // TODO add your handling code here:
        try {
            String VoucherNo = "SJ100110526";
            String VoucherNo1 = VoucherNo.substring(0,6);
            String VoucherNo2 = VoucherNo.substring(6);
            int iVoucherNo = Integer.parseInt(VoucherNo2);
            int EntryNo=2,InvoiceType=1;
            ResultSet rsData = data.getResult("SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' ORDER BY SR_NO",FinanceGlobal.FinURL);
            rsData.first();
            int Counter=0;
            while(!rsData.isAfterLast()) {
                Counter++;
                int SrNo = rsData.getInt("SR_NO");
                if(Counter!=1) {
                    iVoucherNo++;
                    String NewVoucherNo = VoucherNo1+EITLERPGLOBAL.padLeftEx(Integer.toString(iVoucherNo), "0", 5);
                    data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET VOUCHER_NO='"+NewVoucherNo+"' " +
                    "WHERE SR_NO="+SrNo+" AND ENTRY_NO=2 AND INVOICE_TYPE=1",FinanceGlobal.FinURL);
                }
                rsData.next();
            }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_cmdCorrectVoucherActionPerformed
    
    private void cmdtmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtmpActionPerformed
        // TODO add your handling code here:
        /*try {
            String SQL = "SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 " +
            "AND VOUCHER_NO LIKE 'OP%' AND BOOK_CODE='01' AND VOUCHER_DATE>='2006-04-01' AND VOUCHER_DATE<='2010-03-31' ORDER BY VOUCHER_DATE DESC";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            rsData.first();
            while(!rsData.isAfterLast()) {
                String VoucherNo = rsData.getString("VOUCHER_NO");
                String VoucherDate = rsData.getString("VOUCHER_DATE");
                String PartyCode = rsData.getString("SUB_ACCOUNT_CODE");
                String Effect = rsData.getString("EFFECT");
                double Amount = rsData.getDouble("AMOUNT");
                String SJNo = "";
                SQL= "SELECT DISTINCT(A.VOUCHER_NO) FROM D_FIN_VOUCHER_DETAIL B, D_FIN_VOUCHER_HEADER A WHERE A.VOUCHER_NO=B.VOUCHER_NO " +
                "AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='D' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                "AND B.MAIN_ACCOUNT_CODE='210027' AND A.VOUCHER_DATE='"+VoucherDate+"' AND B.AMOUNT="+Amount+" AND (A.VOUCHER_NO LIKE 'SJ%' OR A.VOUCHER_NO LIKE 'MSJ%') ";
                if(data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    SQL= "SELECT DISTINCT(A.VOUCHER_NO) FROM D_FIN_VOUCHER_DETAIL B, D_FIN_VOUCHER_HEADER A WHERE A.VOUCHER_NO=B.VOUCHER_NO " +
                    "AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='D' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                    "AND B.AMOUNT="+Amount+" AND (A.VOUCHER_NO LIKE 'SJ%' OR A.VOUCHER_NO LIKE 'MSJ%') AND B.MAIN_ACCOUNT_CODE='210027' AND A.VOUCHER_DATE='"+VoucherDate+"'";
                    SJNo = data.getStringValueFromDB(SQL,FinanceGlobal.FinURL);
                    System.out.println("FOUND :  VoucherNo = " + VoucherNo + " SJNo = " + SJNo +" Voucher Date : " + VoucherDate);
                    String InvoiceNo = data.getStringValueFromDB("SELECT INVOICE_NO FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+SJNo+"' AND EFFECT='D' AND SUB_ACCOUNT_CODE<>'' ",FinanceGlobal.FinURL);
                    String InvoiceDate = data.getStringValueFromDB("SELECT INVOICE_DATE FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+SJNo+"' AND EFFECT='D' AND SUB_ACCOUNT_CODE<>'' ",FinanceGlobal.FinURL);
                    data.Execute("UPDATE D_FIN_VOUCHER_DETAIL SET INVOICE_NO='', INVOICE_DATE='0000-00-00' WHERE VOUCHER_NO='"+SJNo+"'",FinanceGlobal.FinURL);
                    data.Execute("UPDATE D_FIN_VOUCHER_DETAIL_EX SET INVOICE_NO='', INVOICE_DATE='0000-00-00' WHERE VOUCHER_NO='"+SJNo+"'",FinanceGlobal.FinURL);
                    data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET CHANGED=1 WHERE VOUCHER_NO='"+SJNo+"'",FinanceGlobal.FinURL);
         
                    data.Execute("UPDATE D_FIN_VOUCHER_DETAIL SET INVOICE_NO='"+InvoiceNo+"', INVOICE_DATE='"+InvoiceDate+"' WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                    data.Execute("UPDATE D_FIN_VOUCHER_DETAIL_EX SET INVOICE_NO='"+InvoiceNo+"', INVOICE_DATE='"+InvoiceDate+"' WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                    data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET CHANGED=1,VOUCHER_TYPE="+FinanceGlobal.TYPE_SALES_JOURNAL+" WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                } else {
                    System.out.println("NOT FOUND :  VoucherNo = " + VoucherNo + " SJNo = " + SJNo + " Voucher Date : " + VoucherDate);
                }
                rsData.next();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }*/
        
        /*try {
            String SQL = "SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 " +
            "AND VOUCHER_NO LIKE 'OP%' AND VOUCHER_DATE<='2010-03-31' ORDER BY VOUCHER_DATE DESC";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            rsData.first();
            while(!rsData.isAfterLast()) {
                String VoucherNo = rsData.getString("VOUCHER_NO");
                String VoucherDate = rsData.getString("VOUCHER_DATE");
                String PartyCode = rsData.getString("SUB_ACCOUNT_CODE");
                String Effect = rsData.getString("EFFECT");
                double Amount = rsData.getDouble("AMOUNT");
         
                if(data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE='210010' " +
                "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND EFFECT='"+Effect+"' ",FinanceGlobal.FinURL)) {
                    data.Execute("UPDATE D_FIN_VOUCHER_DETAIL_EX SET MAIN_ACCOUNT_CODE='210027' " +
                    "WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE='210010' " +
                    "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND EFFECT='"+Effect+"' ",FinanceGlobal.FinURL);
                    data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET CHANGED=1 WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                } else {
                    System.out.println("Not Found : " + VoucherNo);
                }
                rsData.next();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }*/
        /*try {
            String SQL = "SELECT * FROM D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=1 AND PAYMENT_TERM_CODE LIKE '9%' AND INVOICE_DATE>='2011-03-01' AND INVOICE_DATE<='2011-03-31' " +
            "AND APPROVED=1 AND CANCELLED=0 ORDER BY INVOICE_DATE ";
            ResultSet rsData = data.getResult(SQL);
            rsData.first();
            while(!rsData.isAfterLast()) {
                String InvoiceNo = rsData.getString("INVOICE_NO");
                String InvoiceDate = rsData.getString("INVOICE_DATE");
                SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SUB_ACCOUNT_CODE,B.AMOUNT FROM D_FIN_VOUCHER_DETAIL B, D_FIN_VOUCHER_HEADER A " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.EFFECT='D' AND B.INVOICE_NO='"+InvoiceNo+"' " +
                "AND B.INVOICE_DATE='"+InvoiceDate+"' AND A.VOUCHER_TYPE="+FinanceGlobal.TYPE_SALES_JOURNAL;
                ResultSet rsSJ = data.getResult(SQL,FinanceGlobal.FinURL);
                rsSJ.first();
                if(rsSJ.getRow() > 0) {
                    String VoucherNo = rsSJ.getString("VOUCHER_NO");
                    String VoucherDate = rsSJ.getString("VOUCHER_DATE");
                    String PartyCode = rsSJ.getString("SUB_ACCOUNT_CODE");
                    double Amount = rsSJ.getDouble("AMOUNT");
                    
                    SQL = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_DETAIL B, D_FIN_VOUCHER_HEADER A " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.EFFECT='C' AND A.VOUCHER_TYPE<>"+FinanceGlobal.TYPE_SALES_JOURNAL+ " " +
                    "AND B.INVOICE_NO='"+InvoiceNo+"' AND B.INVOICE_DATE='"+InvoiceDate+"' ";
                    double creditAmount=data.getDoubleValueFromDB(SQL, FinanceGlobal.FinURL);
                    
                    if(Amount!=creditAmount) {
                        System.out.println("VoucherNo : " + VoucherNo + " Amount : " + Amount + " creditAmount : " + creditAmount);
                    }
                }
                rsData.next();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }*/
        try {
            String SQL = "SELECT VOUCHER_NO FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=2 " +
            "AND VOUCHER_NO LIKE 'OP%'AND BOOK_CODE IN (31,33,34,35,36,37,52,54,56,58) AND EFFECT='D' ";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            rsData.first();
            while(!rsData.isAfterLast()) {
                String VoucherNo = rsData.getString("VOUCHER_NO");
                data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET VOUCHER_TYPE='"+FinanceGlobal.TYPE_PAYMENT+"',CHANGED=1 WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                rsData.next();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdtmpActionPerformed
    
    private void cmdFinddebitVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFinddebitVoucherActionPerformed
        // TODO add your handling code here:
        int counter=0;
        try {
            Connection objConn=data.getConn("jdbc:mysql://200.0.0.227:3306/FINANCE");
            Statement stmt = objConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rsDebit = stmt.executeQuery("SELECT * FROM D_FIN_DEBITNOTE_RECEIPT_MAPPING LIMIT 1");
            //ResultSet rsTmp = data.getResult("SELECT * FROM TEMP_TABLE WHERE TDATE<='2010-03-31' ORDER BY TDATE",FinanceGlobal.FinURL);
            //ResultSet rsTmp = data.getResult("SELECT * FROM TEMP_TABLE WHERE TDATE>='2010-04-01' AND TDATE<='2011-02-28' ORDER BY TDATE",FinanceGlobal.FinURL);
            ResultSet rsTmp = data.getResult("SELECT * FROM TEMP_TABLE WHERE TDATE>='2011-03-01' ORDER BY TDATE",FinanceGlobal.FinURL);
            rsTmp.first();
            
            while(!rsTmp.isAfterLast()) {
                String PartyCode = rsTmp.getString("PARTY_CODE");
                String LinkNo = rsTmp.getString("LINK_NO");
                String vDate = rsTmp.getString("TDATE");
                double Amount = rsTmp.getDouble("AMOUNT");
                
                /*String SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO LIKE 'OP%' " +
                "AND B.MAIN_ACCOUNT_CODE='210027' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                "AND A.VOUCHER_DATE='"+vDate+"' AND B.EFFECT='D' AND A.BOOK_CODE IN ('12','16') " +
                "AND B.AMOUNT="+Amount;*/
                String SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO LIKE 'M%' " +
                "AND B.MAIN_ACCOUNT_CODE='210027' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                "AND A.VOUCHER_DATE='"+vDate+"' AND B.EFFECT='D' AND A.BOOK_CODE IN ('12','16') " +
                "AND B.AMOUNT="+Amount;
                ResultSet rsParty = data.getResult(SQL,FinanceGlobal.FinURL);
                rsParty.first();
                rsParty.last();
                int NoOfRecord = rsParty.getRow();
                boolean post = false;
                if(NoOfRecord==1) {
                    post=true;
                } else if(NoOfRecord>1) {
                    post=true;
                    System.out.println("Multiple found ::: PartyCode ~" + PartyCode + "~ vDate ~" + EITLERPGLOBAL.formatDate(vDate) + "~ Amount ~" + Amount +"~ LINK NO ~" + LinkNo );
                } else if(NoOfRecord==0) {
                    post=false;
                    System.out.println("not found ::: PartyCode ~" + PartyCode + "~ vDate ~" + EITLERPGLOBAL.formatDate(vDate) + "~ Amount ~" + Amount +"~ LINK NO ~" + LinkNo );
                }
                if(!post) {
                    rsTmp.next();
                    continue;
                }
                int PartyRecordCounter = 0;
                rsParty.first();
                if(rsParty.getRow()>0) {
                    while(!rsParty.isAfterLast()) {
                        counter++;
                        String VoucherNo = rsParty.getString("VOUCHER_NO");
                        String VoucherDate = rsParty.getString("VOUCHER_DATE");
                        /*if(!data.IsRecordExist("SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND SUB_ACCOUNT_CODE='"+PartyCode +"' AND VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL)) {
                            System.out.println("FOUND 1 BUT NOT IN O/S : PartyCode ~" + PartyCode + "~ vDate ~" + EITLERPGLOBAL.formatDate(vDate) + "~ Amount ~" + Amount +"~ LINK NO ~" + LinkNo + "~ Voucher No ~" + rsParty.getString("VOUCHER_NO") + "~ Voucher Date ~" + EITLERPGLOBAL.formatDate(rsParty.getString("VOUCHER_DATE")));
                            rsParty.next();
                            continue;
                        }*/
                        PartyRecordCounter++;
                        if(PartyRecordCounter>1) {
                            rsParty.next();
                            continue;
                        }
                        //System.out.println("FOUND 1 IN O/S : PartyCode : " + PartyCode + " vDate : " + vDate + " Amount : " + Amount +" LINK NO : " + LinkNo + " Voucher No : " + rsParty.getString("VOUCHER_NO") + " Voucher Date : " + rsParty.getString("VOUCHER_DATE"));
                        rsDebit.moveToInsertRow();
                        rsDebit.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                        rsDebit.updateInt("SR_NO",1);
                        rsDebit.updateString("DEBITNOTE_VOUCHER_NO",VoucherNo);
                        rsDebit.updateString("RECEIPT_VOUCHER_NO","");
                        rsDebit.updateString("INVOICE_NO","");
                        rsDebit.updateString("INVOICE_DATE","0000-00-00");
                        rsDebit.updateString("INVOICE_DUE_DATE","0000-00-00");
                        rsDebit.updateString("VALUE_DATE",VoucherDate);
                        rsDebit.updateInt("DAYS",0);
                        rsDebit.updateInt("APPROVED",1);
                        rsDebit.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDebit.updateDouble("DEBIT_NOTE_AMOUNT",Amount);
                        rsDebit.updateBoolean("CHANGED",true);
                        rsDebit.updateInt("CANCELLED",0);
                        rsDebit.insertRow(); 
                        rsParty.next();
                    }
                }
                rsTmp.next();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdFinddebitVoucherActionPerformed
    
    private void cmdDebitNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDebitNoteActionPerformed
        // TODO add your handling code here:
        int Counter=0;
        try {
            boolean Done=false;
            
            ResultSet rsTmp=null;
            
            Connection objConn=data.getConn("jdbc:mysql://200.0.0.227:3306/FINANCE");
            Statement stmt = objConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            Statement stDel = objConn.createStatement();
            
            stDel.execute("DELETE FROM TEMP_TABLE");
            
            rsTmp = stmt.executeQuery("SELECT * FROM TEMP_TABLE ");
            int Pointer=0;
            
            BufferedReader aFile=new BufferedReader(new FileReader(new File("/root/Desktop/OSFNL.TXT")));
            
            while(!Done) {
                Counter=data.getIntValueFromDB("SELECT COUNT(*) FROM TEMP_TABLE ",FinanceGlobal.FinURL)+1;
                
                String FileRecord=aFile.readLine();
                Pointer=0;
                System.out.println(Counter+ " ");
                String Type = FileRecord.substring(Pointer, Pointer+3).trim();Pointer+=3;
                String LinkNo = FileRecord.substring(Pointer, Pointer+11).trim();Pointer+=11;
                double Amount = Double.parseDouble(FileRecord.substring(Pointer, Pointer+10).trim());Pointer+=10;
                String PartyCode = FileRecord.substring(Pointer, Pointer+6).trim();Pointer+=6;
                String DocDate = EITLERPGLOBAL.formatDateDB(FileRecord.substring(Pointer, Pointer+10).trim());Pointer+=10;
                rsTmp.moveToInsertRow();
                rsTmp.updateInt("SR_NO",Counter);
                rsTmp.updateString("LINK_NO",LinkNo);
                rsTmp.updateDouble("AMOUNT", Amount);
                rsTmp.updateString("PARTY_CODE", PartyCode);
                rsTmp.updateString("TDATE", DocDate);
                rsTmp.insertRow();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdDebitNoteActionPerformed
    
    private void cmdUpdateRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateRecActionPerformed
        // TODO add your handling code here:
        try {
            String strSQL="SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND EFFECT='D' " +
            "AND MAIN_ACCOUNT_CODE='210027' AND BOOK_CODE='01' ORDER BY SUB_ACCOUNT_CODE,VOUCHER_DATE ";
            ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsTmp.first();
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    String VoucherNo = rsTmp.getString("VOUCHER_NO");
                    String VoucherDate = rsTmp.getString("VOUCHER_DATE");
                    String PartyCode = rsTmp.getString("SUB_ACCOUNT_CODE");
                    int SrNo = rsTmp.getInt("SR_NO");
                    String InvoiceNo = "";
                    String InvoiceDate = "";
                    String ChargeCode = "";
                    int VoucherType = clsVoucher.getVoucherType(VoucherNo);
                    if(VoucherType == FinanceGlobal.TYPE_SALES_JOURNAL) {
                        strSQL = "SELECT INVOICE_NO FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE='210027' " +
                        "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND EFFECT='D' ";
                        InvoiceNo = data.getStringValueFromDB(strSQL,FinanceGlobal.FinURL);
                        strSQL = "SELECT INVOICE_DATE FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE='210027' " +
                        "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND EFFECT='D' ";
                        InvoiceDate = data.getStringValueFromDB(strSQL,FinanceGlobal.FinURL);
                        ChargeCode = clsSalesInvoice.getInvoiceChargeCode(InvoiceNo, InvoiceDate);
                        if(!InvoiceNo.equals("") && !InvoiceDate.equals("")) {
                            //if(ChargeCode.startsWith("2") || ChargeCode.startsWith("8")) {
                            System.out.println("VoucherNo : " + VoucherNo + " InvoiceNo : " + InvoiceNo + " InvoiceDate : " + InvoiceDate + " ChargeCode : " + ChargeCode);
                            strSQL = "UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET INVOICE_NO='"+InvoiceNo+"', INVOICE_DATE='"+InvoiceDate+"',CHARGE_CODE='"+ChargeCode+"' WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND EFFECT='D' " +
                            "AND MAIN_ACCOUNT_CODE='210027' AND SUB_ACCOUNT_CODE='"+ PartyCode +"' AND SR_NO="+SrNo;
                            data.Execute(strSQL,FinanceGlobal.FinURL);
                            //}
                        }
                    }
                    rsTmp.next();
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdUpdateRecActionPerformed
    
    private void cmdOSVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOSVoucherActionPerformed
        // TODO add your handling code here:
        try {
            int InvoiceType = 2;
            String strSQL="SELECT VOUCHER_NO,VOUCHER_DATE,SUB_ACCOUNT_CODE " +
            "FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=1 AND INVOICE_TYPE=" +InvoiceType+" " +
            "AND EFFECT='D' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='812081' AND VOUCHER_NO='OP100217091002778' " +
            "AND (MATCHED=0 OR MATCHED IS NULL) " +
            "GROUP BY VOUCHER_NO,SUB_ACCOUNT_CODE " +
            "ORDER BY SUB_ACCOUNT_CODE,VOUCHER_DATE ";
            
            ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsTmp.first();
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    String DebitNo=UtilFunctions.getString(rsTmp,"VOUCHER_NO","");
                    String PartyCode=UtilFunctions.getString(rsTmp,"SUB_ACCOUNT_CODE","");
                    double DebitAmount = 0;
                    double AdjustedAmount = 0;
                    String InvoiceNo = data.getStringValueFromDB("SELECT INVOICE_NO FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+DebitNo+"' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                    String InvoiceDate = data.getStringValueFromDB("SELECT INVOICE_DATE FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+DebitNo+"' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                    if(clsVoucher.getVoucherType(DebitNo)==FinanceGlobal.TYPE_SALES_JOURNAL) {
                        strSQL = "SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+DebitNo+"' AND EFFECT='D' " +
                        "AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND INVOICE_NO='"+InvoiceNo+"' " +
                        "AND INVOICE_DATE='"+InvoiceDate+"'";
                        DebitAmount = data.getDoubleValueFromDB(strSQL,FinanceGlobal.FinURL);
                        
                        strSQL = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                        "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='210010' " +
                        "AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='C' " +
                        "AND B.INVOICE_NO='"+InvoiceNo+"' AND B.INVOICE_DATE='"+InvoiceDate+"' " +
                        "AND A.APPROVED=1 AND A.CANCELLED=0 ";
                        AdjustedAmount = data.getDoubleValueFromDB(strSQL,FinanceGlobal.FinURL);
                    } else {
                        strSQL = "SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+DebitNo+"' AND EFFECT='D' " +
                        "AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' ";
                        DebitAmount = data.getDoubleValueFromDB(strSQL,FinanceGlobal.FinURL);
                        
                        strSQL = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                        "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.GRN_NO='"+DebitNo+"' AND B.MAIN_ACCOUNT_CODE='210010' " +
                        "AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='C' AND A.APPROVED=1 AND A.CANCELLED=0 ";
                        AdjustedAmount = data.getDoubleValueFromDB(strSQL,FinanceGlobal.FinURL);
                    }
                    
                    if(AdjustedAmount>0) {
                        
                        ResultSet rsCredit = null;
                        if(clsVoucher.getVoucherType(DebitNo)==FinanceGlobal.TYPE_SALES_JOURNAL) {
                            strSQL = "SELECT A.VOUCHER_DATE,A.VOUCHER_NO,B.SR_NO,B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO " +
                            "AND B.MAIN_ACCOUNT_CODE='210010' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='C' " +
                            "AND B.INVOICE_DATE = '"+InvoiceDate+"' AND B.INVOICE_NO ='"+InvoiceNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO NOT LIKE 'OP%' " +
                            "ORDER BY A.VOUCHER_DATE ";
                            rsCredit = data.getResult(strSQL,FinanceGlobal.FinURL);
                        } else {
                            strSQL = "SELECT A.VOUCHER_DATE,A.VOUCHER_NO,B.SR_NO,B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.GRN_NO='"+DebitNo+"' AND B.MAIN_ACCOUNT_CODE='210010' " +
                            "AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='C' AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO NOT LIKE 'OP%' ";
                            rsCredit = data.getResult(strSQL,FinanceGlobal.FinURL);
                        }
                        if(rsCredit.getRow() > 0) {
                            while(!rsCredit.isAfterLast()) {
                                String ReceiptNo = rsCredit.getString("VOUCHER_NO");
                                String ReceiptDate = rsCredit.getString("VOUCHER_DATE");
                                int vSrNo = rsCredit.getInt("SR_NO");
                                double vAmount = rsCredit.getInt("AMOUNT");
                                
                                if(java.sql.Date.valueOf(ReceiptDate).before(java.sql.Date.valueOf("2010-04-01"))) {
                                    System.out.println("DebitNo : " + DebitNo + " ReceiptNo : " + ReceiptNo);
                                }
                                rsCredit.next();
                            }
                        }
                    }
                    rsTmp.next();
                }
            }
            
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdOSVoucherActionPerformed
    
    private void cmdDecInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDecInvActionPerformed
        // TODO add your handling code here:
        int Counter = 0 ;
        int FCounter = 0 ;
        int F1Counter = 0 ;
        int MFCounter = 0 ;
        int NFCounter = 0 ;
        try {
            
            String SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SUB_ACCOUNT_CODE,SUM(B.AMOUNT) AS AMOUNT,B.INVOICE_NO,B.INVOICE_DATE " +
            "FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B, DINESHMILLS.D_SAL_INVOICE_HEADER C " +
            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_DATE>='2011-02-28' AND B.MAIN_ACCOUNT_CODE='210027' AND B.EFFECT='D' " +
            "AND A.VOUCHER_TYPE=5 AND A.APPROVED=1 AND A.CANCELLED=0 " +
            "AND B.INVOICE_NO=C.INVOICE_NO AND B.INVOICE_DATE=C.INVOICE_DATE AND C.PAYMENT_TERM_CODE NOT LIKE '9%' " +
            "AND C.INVOICE_DATE>'2011-02-28' " +
            "GROUP BY B.VOUCHER_NO,B.SUB_ACCOUNT_CODE " +
            "ORDER BY B.SUB_ACCOUNT_CODE,A.VOUCHER_DATE";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            while(!rsData.isAfterLast()) {
                String VoucherNo = rsData.getString("VOUCHER_NO");
                String VoucherDate = rsData.getString("VOUCHER_DATE");
                String PartyCode = rsData.getString("SUB_ACCOUNT_CODE");
                double Amount = rsData.getDouble("AMOUNT");
                String InvoiceNo = rsData.getString("INVOICE_NO");
                String InvoiceDate = rsData.getString("INVOICE_DATE");
                
                SQL = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.MAIN_ACCOUNT_CODE='210027' " +
                "AND B.EFFECT='C' AND A.APPROVED=1 AND A.CANCELLED=0 AND B.INVOICE_NO='"+InvoiceNo+"' AND B.INVOICE_DATE='"+InvoiceDate+"' " +
                "AND A.VOUCHER_NO NOT LIKE 'OP%' ";
                double CreditAmount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
                if(CreditAmount>0) {
                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SR_NO,B.INVOICE_NO,B.INVOICE_DATE,B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, " +
                    "D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                    "AND B.MAIN_ACCOUNT_CODE='210027' AND B.EFFECT='C' AND B.INVOICE_NO='"+InvoiceNo+"' AND B.INVOICE_DATE='"+InvoiceDate+"' " +
                    "AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_NO NOT LIKE 'OP%' ";
                    ResultSet rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsVoucher.first();
                    while(!rsVoucher.isAfterLast()) {
                        String CreditNo = rsVoucher.getString("VOUCHER_NO");
                        String CreditDate = rsVoucher.getString("VOUCHER_DATE");
                        int SrNo = rsVoucher.getInt("SR_NO");
                        String GRNNo = rsVoucher.getString("INVOICE_NO");
                        String GRNDate = rsVoucher.getString("INVOICE_DATE");
                        double vAmount = rsVoucher.getDouble("AMOUNT");
                        if(java.sql.Date.valueOf(CreditDate).before(java.sql.Date.valueOf("2010-04-01"))) {
                            System.out.println("Debit No : " + VoucherNo + " Credit No : " + CreditNo + " Sr. No. : " + SrNo + " Amount : " + vAmount);
                        }
                        rsVoucher.next();
                    }
                }
                rsData.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** FINISHED ***");
    }//GEN-LAST:event_cmdDecInvActionPerformed
    
    private void cmdDecVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDecVoucherActionPerformed
        // TODO add your handling code here:
        int Counter = 0 ;
        int FCounter = 0 ;
        int F1Counter = 0 ;
        int MFCounter = 0 ;
        int NFCounter = 0 ;
        try {
            
            /*String SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SUB_ACCOUNT_CODE,SUM(B.AMOUNT) AS AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_DATE>'2011-05-10' AND B.MAIN_ACCOUNT_CODE='210027' AND B.EFFECT='D' " +
            "AND A.VOUCHER_TYPE<>5 AND A.APPROVED=1 AND A.CANCELLED=0 " +
            "GROUP BY A.VOUCHER_NO,B.SUB_ACCOUNT_CODE " +
            "ORDER BY A.VOUCHER_DATE ";*/
            String SQL = "SELECT VOUCHER_NO,VOUCHER_DATE,SUB_ACCOUNT_CODE,AMOUNT FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL " +
            "WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND MAIN_ACCOUNT_CODE='210027' AND EFFECT='D' AND VOUCHER_DATE>='2010-04-16' " +
            "AND BOOK_CODE<>'01' ORDER BY VOUCHER_DATE ";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            while(!rsData.isAfterLast()) {
                String VoucherNo = rsData.getString("VOUCHER_NO");
                String VoucherDate = rsData.getString("VOUCHER_DATE");
                String PartyCode = rsData.getString("SUB_ACCOUNT_CODE");
                double Amount = rsData.getDouble("AMOUNT");
                
                SQL = "SELECT SUM(B.AMOUNT) FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.MAIN_ACCOUNT_CODE='210027' " +
                "AND B.EFFECT='C' AND A.APPROVED=1 AND A.CANCELLED=0 AND B.GRN_NO='"+VoucherNo+"' AND A.VOUCHER_NO NOT LIKE 'OP%' AND VOUCHER_DATE<='2011-02-28' ";
                double CreditAmount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
                if(CreditAmount>0) {
                    SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SR_NO,B.GRN_NO,B.GRN_DATE,B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, " +
                    "D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                    "AND B.MAIN_ACCOUNT_CODE='210027' AND B.EFFECT='C' AND B.GRN_NO='"+VoucherNo+"' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                    "AND A.VOUCHER_NO NOT LIKE 'OP%' AND VOUCHER_DATE<='2011-02-28' ";
                    ResultSet rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                    rsVoucher.first();
                    while(!rsVoucher.isAfterLast()) {
                        String CreditNo = rsVoucher.getString("VOUCHER_NO");
                        String CreditDate = rsVoucher.getString("VOUCHER_DATE");
                        int SrNo = rsVoucher.getInt("SR_NO");
                        String GRNNo = rsVoucher.getString("GRN_NO");
                        String GRNDate = rsVoucher.getString("GRN_DATE");
                        double vAmount = rsVoucher.getDouble("AMOUNT");
                        if(!data.IsRecordExist("SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND VOUCHER_NO='"+CreditNo+"' ",FinanceGlobal.FinURL)) {
                            System.out.println("Debit No : " + VoucherNo + " Credit No : " + CreditNo + " DOES NOT EXISTS.");
                        }
                        if(java.sql.Date.valueOf(CreditDate).before(java.sql.Date.valueOf("2010-04-01"))) {
                            System.out.println("Debit No : " + VoucherNo + " Credit No : " + CreditNo + " Sr. No. : " + SrNo + " Amount : " + vAmount);
                        }
                        rsVoucher.next();
                    }
                }
                rsData.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** FINISHED ***");
    }//GEN-LAST:event_cmdDecVoucherActionPerformed
    
    private void cmdPostVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPostVoucherActionPerformed
        // TODO add your handling code here:
        try {
            /*String SQL = "SELECT SR_NO,SUB_ACCOUNT_CODE,BOOK_CODE,VOUCHER_DATE,LINK_NO, " +
            "SUBSTRING(LINK_NO,1,4) AS LINK ,SUBSTRING(LINK_NO,6,4) AS YR1,SUBSTRING(LINK_NO,11) AS YR2, " +
            "LEGACY_NO,AMOUNT,EFFECT,VOUCHER_DATE FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 " +
            "AND INVOICE_TYPE=1 AND VOUCHER_NO='' AND VOUCHER_DATE<='2010-03-31' " +
            "ORDER BY VOUCHER_DATE,SR_NO";*/
            
            /*String SQL = "SELECT SR_NO,SUB_ACCOUNT_CODE,BOOK_CODE,VOUCHER_DATE,LINK_NO, " +
            "SUBSTRING(LINK_NO,1,4) AS LINK ,SUBSTRING(LINK_NO,6,4) AS YR1,SUBSTRING(LINK_NO,11) AS YR2, " +
            "LEGACY_NO,AMOUNT,EFFECT FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 " +
            "AND INVOICE_TYPE=1 AND VOUCHER_NO='' AND VOUCHER_DATE>='2010-04-01' AND BOOK_CODE='88' " +
            "ORDER BY VOUCHER_DATE,SR_NO ";*/
            
            String SQL = "SELECT SR_NO,SUB_ACCOUNT_CODE,BOOK_CODE,VOUCHER_DATE,LINK_NO, " +
            "SUBSTRING(LINK_NO,1,4) AS LINK ,SUBSTRING(LINK_NO,6,4) AS YR1,SUBSTRING(LINK_NO,11) AS YR2, " +
            "LEGACY_NO,AMOUNT,EFFECT FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 " +
            "AND INVOICE_TYPE=1 AND VOUCHER_NO='' AND VOUCHER_DATE>='2010-03-31' AND SR_NO IN (3127,4874) " +
            "ORDER BY VOUCHER_DATE,SR_NO ";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            
            while(!rsData.isAfterLast()) {
                int SrNo = rsData.getInt("SR_NO");
                String PartyCode  = rsData.getString("SUB_ACCOUNT_CODE");
                String BookCode  = rsData.getString("BOOK_CODE");
                String LinkNo = rsData.getString("LINK_NO");
                String YR1 = rsData.getString("YR1");
                String YR2 = rsData.getString("YR2");
                String LegacyNo = rsData.getString("LEGACY_NO");
                double Amount = rsData.getDouble("AMOUNT");
                String Effect = rsData.getString("EFFECT");
                String VoucherDate = rsData.getString("VOUCHER_DATE");
                //FOR BOOK CODE 88 VOUCHERS AFTER 01/04/2010 ONLY START
                int iYR1 = Integer.parseInt(YR1);
                int iYR2 = Integer.parseInt(YR2);
                String newVoucherDate = "";
                if(iYR1 > iYR2) {
                    newVoucherDate = YR1+"-03-31";
                } else {
                    newVoucherDate = YR2+"-03-31";
                }
                //FOR BOOK CODE 88 VOUCHERS AFTER 01/04/2010 ONLY START
                
                //FOR VOUCHERS BEFORE 01/04/2010 ONLY START
                //String newVoucherDate = VoucherDate;
                //FOR VOUCHERS BEFORE 01/04/2010 ONLY END
                
                if(java.sql.Date.valueOf(newVoucherDate).before(java.sql.Date.valueOf("2010-04-01"))) {
                    String NewVoucherNo = "OP"+newVoucherDate.substring(2,4)+"0331"+BookCode+"1"+LegacyNo;
                    int VNo = 1;
                    String newEffect = "";
                    while(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+NewVoucherNo+"' ",FinanceGlobal.FinURL)) {
                        VNo++;
                        NewVoucherNo = "OP"+newVoucherDate.substring(2,4)+"0331"+BookCode+Integer.toString(VNo)+LegacyNo;
                    }
                    if(Effect.equals("C")) {
                        newEffect="D";
                    } else {
                        newEffect="C";
                    }
                    try {
                        clsVoucher objVoucher = new clsVoucher();
                        Connection Conn=data.getConn(FinanceGlobal.FinURL);
                        Statement Stmt=Conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        ResultSet rsResultSet=Stmt.executeQuery("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID=2 AND VOUCHER_TYPE="+FinanceGlobal.TYPE_JOURNAL+" LIMIT 1");
                        rsResultSet.first();
                        rsResultSet.moveToInsertRow();
                        rsResultSet.updateLong("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                        rsResultSet.updateString("VOUCHER_NO",NewVoucherNo);
                        rsResultSet.updateInt("VOUCHER_TYPE",FinanceGlobal.TYPE_JOURNAL);
                        rsResultSet.updateString("VOUCHER_DATE", newVoucherDate);
                        rsResultSet.updateString("BOOK_CODE",BookCode);
                        rsResultSet.updateString("CHEQUE_NO","");
                        rsResultSet.updateString("CHEQUE_DATE","0000-00-00");
                        rsResultSet.updateString("REALIZATION_DATE","0000-00-00");
                        rsResultSet.updateString("BANK_NAME","");
                        rsResultSet.updateString("ST_CATEGORY","");
                        rsResultSet.updateString("REMARKS","");
                        rsResultSet.updateLong("HIERARCHY_ID",0);
                        rsResultSet.updateString("CREATED_BY","Admin"); //EITLERPGLOBAL.gLoginID
                        rsResultSet.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsResultSet.updateString("MODIFIED_BY","");
                        rsResultSet.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsResultSet.updateBoolean("CHANGED",true);
                        rsResultSet.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsResultSet.updateBoolean("APPROVED",true);
                        rsResultSet.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsResultSet.updateBoolean("REJECTED",false);
                        rsResultSet.updateString("REJECTED_DATE","0000-00-00");
                        rsResultSet.updateBoolean("CANCELLED",false);
                        rsResultSet.updateDouble("CHEQUE_AMOUNT",0);
                        rsResultSet.updateInt("PAYMENT_MODE",0);
                        rsResultSet.updateString("LEGACY_NO","");
                        rsResultSet.updateString("LINK_NO","");
                        rsResultSet.updateString("LEGACY_DATE","0000-00-00");
                        rsResultSet.updateInt("EXCLUDE_IN_ADJ",1);
                        rsResultSet.updateString("CUSTOMER_BANK","");
                        rsResultSet.insertRow();
                        
                        Statement detailStmt=Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        ResultSet rsDetail = detailStmt.executeQuery("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='1'");
                        
                        rsDetail.moveToInsertRow();
                        rsDetail.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                        rsDetail.updateString("VOUCHER_NO",NewVoucherNo);
                        rsDetail.updateInt("SR_NO",1);
                        rsDetail.updateString("EFFECT",Effect);
                        rsDetail.updateInt("ACCOUNT_ID",1);
                        rsDetail.updateString("MAIN_ACCOUNT_CODE","210027");
                        rsDetail.updateString("SUB_ACCOUNT_CODE",PartyCode);
                        rsDetail.updateDouble("AMOUNT",Amount);
                        rsDetail.updateDouble("APPLICABLE_AMOUNT",0);
                        rsDetail.updateDouble("PERCENTAGE",0);
                        rsDetail.updateString("REMARKS",LinkNo);
                        rsDetail.updateString("CREATED_BY","Admin");
                        rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDetail.updateString("MODIFIED_BY","");
                        rsDetail.updateString("MODIFIED_DATE","0000-00-00");
                        rsDetail.updateBoolean("CHANGED",true);
                        rsDetail.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDetail.updateInt("CANCELLED",0);
                        rsDetail.updateString("PO_NO","");
                        rsDetail.updateString("PO_DATE","0000-00-00");
                        rsDetail.updateString("INVOICE_NO","");
                        rsDetail.updateString("INVOICE_DATE","0000-00-00");
                        rsDetail.updateString("VALUE_DATE",newVoucherDate);
                        rsDetail.updateString("GRN_NO","");
                        rsDetail.updateString("GRN_DATE","0000-00-00");
                        rsDetail.updateInt("MODULE_ID",0);
                        rsDetail.updateDouble("INVOICE_AMOUNT",0);
                        rsDetail.updateInt("IS_DEDUCTION",0);
                        rsDetail.updateInt("REF_COMPANY_ID",0);
                        rsDetail.updateString("LINK_NO",LinkNo);
                        rsDetail.updateInt("MATCHED",0);
                        rsDetail.updateString("MATCHED_DATE","0000-00-00");
                        rsDetail.updateInt("REF_SR_NO",0);
                        rsDetail.insertRow();
                        
                        rsDetail.moveToInsertRow();
                        rsDetail.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                        rsDetail.updateString("VOUCHER_NO",NewVoucherNo);
                        rsDetail.updateInt("SR_NO",2);
                        rsDetail.updateString("EFFECT",newEffect);
                        rsDetail.updateInt("ACCOUNT_ID",1);
                        rsDetail.updateString("MAIN_ACCOUNT_CODE","010410");
                        rsDetail.updateString("SUB_ACCOUNT_CODE","");
                        rsDetail.updateDouble("AMOUNT",Amount);
                        rsDetail.updateDouble("APPLICABLE_AMOUNT",0);
                        rsDetail.updateDouble("PERCENTAGE",0);
                        rsDetail.updateString("REMARKS",LinkNo);
                        rsDetail.updateString("CREATED_BY","Admin");
                        rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDetail.updateString("MODIFIED_BY","");
                        rsDetail.updateString("MODIFIED_DATE","0000-00-00");
                        rsDetail.updateBoolean("CHANGED",true);
                        rsDetail.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDetail.updateInt("CANCELLED",0);
                        rsDetail.updateString("PO_NO","");
                        rsDetail.updateString("PO_DATE","0000-00-00");
                        rsDetail.updateString("INVOICE_NO","");
                        rsDetail.updateString("INVOICE_DATE","0000-00-00");
                        rsDetail.updateString("VALUE_DATE",newVoucherDate);
                        rsDetail.updateString("GRN_NO","");
                        rsDetail.updateString("GRN_DATE","0000-00-00");
                        rsDetail.updateInt("MODULE_ID",0);
                        rsDetail.updateDouble("INVOICE_AMOUNT",0);
                        rsDetail.updateInt("IS_DEDUCTION",0);
                        rsDetail.updateInt("REF_COMPANY_ID",0);
                        rsDetail.updateString("LINK_NO",LinkNo);
                        rsDetail.updateInt("MATCHED",0);
                        rsDetail.updateString("MATCHED_DATE","0000-00-00");
                        rsDetail.updateInt("REF_SR_NO",0);
                        rsDetail.insertRow();
                        
                        Statement detailExStmt=Conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        ResultSet rsDetailEx = detailExStmt.executeQuery("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='1'");
                        
                        rsDetailEx.moveToInsertRow();
                        rsDetailEx.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                        rsDetailEx.updateString("VOUCHER_NO",NewVoucherNo);
                        rsDetailEx.updateInt("SR_NO",1);
                        rsDetailEx.updateString("EFFECT",Effect);
                        rsDetailEx.updateInt("ACCOUNT_ID",1);
                        rsDetailEx.updateString("MAIN_ACCOUNT_CODE","210027");
                        rsDetailEx.updateString("SUB_ACCOUNT_CODE",PartyCode);
                        rsDetailEx.updateDouble("AMOUNT",Amount);
                        rsDetailEx.updateDouble("APPLICABLE_AMOUNT",0);
                        rsDetailEx.updateDouble("PERCENTAGE",0);
                        rsDetailEx.updateString("REMARKS",LinkNo);
                        rsDetailEx.updateString("CREATED_BY","Admin");
                        rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDetailEx.updateString("MODIFIED_BY","");
                        rsDetailEx.updateString("MODIFIED_DATE","0000-00-00");
                        rsDetailEx.updateBoolean("CHANGED",true);
                        rsDetailEx.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDetailEx.updateInt("CANCELLED",0);
                        rsDetailEx.updateInt("BLOCK_NO",1);
                        rsDetailEx.updateString("PO_NO","");
                        rsDetailEx.updateString("PO_DATE","0000-00-00");
                        rsDetailEx.updateString("INVOICE_NO","");
                        rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                        rsDetailEx.updateString("VALUE_DATE",newVoucherDate);
                        rsDetailEx.updateString("GRN_NO","");
                        rsDetailEx.updateString("GRN_DATE","0000-00-00");
                        rsDetailEx.updateInt("MODULE_ID",0);
                        rsDetailEx.updateDouble("INVOICE_AMOUNT",0);
                        rsDetailEx.updateInt("IS_DEDUCTION",0);
                        rsDetailEx.updateInt("REF_COMPANY_ID",0);
                        rsDetailEx.updateString("LINK_NO",LinkNo);
                        rsDetailEx.updateInt("MATCHED",0);
                        rsDetailEx.updateString("MATCHED_DATE","0000-00-00");
                        rsDetailEx.updateInt("REF_SR_NO",0);
                        rsDetailEx.insertRow();
                        
                        rsDetailEx.moveToInsertRow();
                        rsDetailEx.updateInt("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                        rsDetailEx.updateString("VOUCHER_NO",NewVoucherNo);
                        rsDetailEx.updateInt("SR_NO",2);
                        rsDetailEx.updateString("EFFECT",newEffect);
                        rsDetailEx.updateInt("ACCOUNT_ID",1);
                        rsDetailEx.updateString("MAIN_ACCOUNT_CODE","010410");
                        rsDetailEx.updateString("SUB_ACCOUNT_CODE","");
                        rsDetailEx.updateDouble("AMOUNT",Amount);
                        rsDetailEx.updateDouble("APPLICABLE_AMOUNT",0);
                        rsDetailEx.updateDouble("PERCENTAGE",0);
                        rsDetailEx.updateString("REMARKS",LinkNo);
                        rsDetailEx.updateString("CREATED_BY","Admin");
                        rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDetailEx.updateString("MODIFIED_BY","");
                        rsDetailEx.updateString("MODIFIED_DATE","0000-00-00");
                        rsDetailEx.updateBoolean("CHANGED",true);
                        rsDetailEx.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                        rsDetailEx.updateInt("CANCELLED",0);
                        rsDetailEx.updateInt("BLOCK_NO",1);
                        rsDetailEx.updateString("PO_NO","");
                        rsDetailEx.updateString("PO_DATE","0000-00-00");
                        rsDetailEx.updateString("INVOICE_NO","");
                        rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                        rsDetailEx.updateString("VALUE_DATE",newVoucherDate);
                        rsDetailEx.updateString("GRN_NO","");
                        rsDetailEx.updateString("GRN_DATE","0000-00-00");
                        rsDetailEx.updateInt("MODULE_ID",0);
                        rsDetailEx.updateDouble("INVOICE_AMOUNT",0);
                        rsDetailEx.updateInt("IS_DEDUCTION",0);
                        rsDetailEx.updateInt("REF_COMPANY_ID",0);
                        rsDetailEx.updateString("LINK_NO",LinkNo);
                        rsDetailEx.updateInt("MATCHED",0);
                        rsDetailEx.updateString("MATCHED_DATE","0000-00-00");
                        rsDetailEx.updateInt("REF_SR_NO",0);
                        rsDetailEx.insertRow();
                        System.out.println("Voucher No : " + NewVoucherNo + " posted properly.");
                    } catch (Exception e) {
                        System.out.println("Voucher No : " + NewVoucherNo + " not posted properly." + " PartyCode : " + PartyCode + " Sr No : " + SrNo);
                        e.printStackTrace();
                    }
                    data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET VOUCHER_NO='"+NewVoucherNo+"' ,VOUCHER_DATE='"+newVoucherDate+"' " +
                    "WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND MAIN_ACCOUNT_CODE='210027' " +
                    "AND SR_NO="+SrNo,FinanceGlobal.FinURL);
                }
                rsData.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdPostVoucherActionPerformed
    
    private void cmdCheckVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCheckVoucherActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2 AND VOUCHER_NO<>'' " +
            "AND VOUCHER_DATE<='2010-03-31' AND SUB_ACCOUNT_CODE='831279' " +
            "ORDER BY SUB_ACCOUNT_CODE,VOUCHER_DATE ";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            while(!rsData.isAfterLast()) {
                String VoucherNo = rsData.getString("VOUCHER_NO");
                String VoucherDate = rsData.getString("VOUCHER_DATE");
                double Amount = rsData.getDouble("AMOUNT");
                String MainCode = rsData.getString("MAIN_ACCOUNT_CODE");
                String PartyCode = rsData.getString("SUB_ACCOUNT_CODE");
                String Effect = rsData.getString("EFFECT");
                String BookCode = rsData.getString("BOOK_CODE");
                
                SQL = "SELECT A.VOUCHER_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO " +
                "AND A.VOUCHER_NO='"+VoucherNo+"' AND A.VOUCHER_DATE='"+VoucherDate+"' AND B.MAIN_ACCOUNT_CODE='210010' " +
                "AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='"+Effect+"' AND A.BOOK_CODE='"+BookCode+"' ";
                
                if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    System.out.println("VoucherNo : " + VoucherNo + " VoucherDate : " + " Amount : " + Amount + " PartyCode : " + PartyCode + " Effect : " + Effect + " Book Code : " + BookCode);
                }
                
                rsData.next();
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdCheckVoucherActionPerformed
    
    private void cmdSameLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSameLinkActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT DISTINCT A.SUB_ACCOUNT_CODE FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL A " +
            "WHERE A.INVOICE_TYPE=2 " +
            "GROUP BY  A.LINK_NO,A.EFFECT " +
            "HAVING (SELECT COUNT(LINK_NO) FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2 " +
            "AND LINK_NO=A.LINK_NO AND SUB_ACCOUNT_CODE=A.SUB_ACCOUNT_CODE)>1 " +
            "ORDER BY A.SUB_ACCOUNT_CODE,A.LINK_NO,A.EFFECT ";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            while(!rsData.isAfterLast()) {
                String PartyCode = rsData.getString("SUB_ACCOUNT_CODE");
                
                SQL = "SELECT A.LINK_NO,A.EFFECT,SUM(A.AMOUNT) AS AMOUNT,A.VOUCHER_NO, " +
                "A.VOUCHER_DATE,A.BOOK_CODE,A.C_BOOK_CODE " +
                "FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL A WHERE A.INVOICE_TYPE=2 AND A.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                "GROUP BY A.LINK_NO,A.EFFECT " +
                "HAVING (SELECT COUNT(LINK_NO) FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2 " +
                "AND LINK_NO=A.LINK_NO AND SUB_ACCOUNT_CODE='"+PartyCode+"') > 1 " +
                "ORDER BY A.SUB_ACCOUNT_CODE,A.LINK_NO,A.EFFECT ";
                
                ResultSet rsCLink = data.getResult(SQL,FinanceGlobal.FinURL);
                while(!rsCLink.isAfterLast()) {
                    String cLinkNo = rsCLink.getString("LINK_NO");
                    String cEffect = rsCLink.getString("EFFECT");
                    double cAmount = rsCLink.getDouble("AMOUNT");
                    String cVoucherNo = rsCLink.getString("VOUCHER_NO");
                    String cVoucherDate = rsCLink.getString("VOUCHER_DATE");
                    String cBookCode = rsCLink.getString("BOOK_CODE");
                    String ccBookCode = rsCLink.getString("C_BOOK_CODE");
                    if(cEffect.equals("C") && cVoucherNo.startsWith("OP")) {
                        SQL = "SELECT COUNT(*) FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2 " +
                        "AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND LINK_NO='"+cLinkNo+"' " +
                        "AND EFFECT='D' AND (TRIM(VOUCHER_NO) LIKE 'OP%') ";
                        int Count = data.getIntValueFromDB(SQL, FinanceGlobal.FinURL);
                        if(Count!=0) {
                            if(Count==1) {
                                SQL = "SELECT LINK_NO,EFFECT,AMOUNT,VOUCHER_NO, VOUCHER_DATE,BOOK_CODE,C_BOOK_CODE " +
                                "FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2 " +
                                "AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND LINK_NO='"+cLinkNo+"' " +
                                "AND EFFECT='D' AND (TRIM(VOUCHER_NO) LIKE 'OP%' ) "; //OR TRIM(VOUCHER_NO='')
                                ResultSet rsDLink = data.getResult(SQL,FinanceGlobal.FinURL);
                                String dLinkNo = rsDLink.getString("LINK_NO");
                                String dEffect = rsDLink.getString("EFFECT");
                                double dAmount = rsDLink.getDouble("AMOUNT");
                                String dVoucherNo = rsDLink.getString("VOUCHER_NO");
                                String dVoucherDate = rsDLink.getString("VOUCHER_DATE");
                                String dBookCode = rsDLink.getString("BOOK_CODE");
                                String dcBookCode = rsDLink.getString("C_BOOK_CODE");
                                if(clsVoucher.getVoucherType(dVoucherNo)!=FinanceGlobal.TYPE_SALES_JOURNAL && clsVoucher.getVoucherType(dVoucherNo)!=FinanceGlobal.TYPE_DEBIT_NOTE && cAmount>dAmount) {
                                    if(java.sql.Date.valueOf(cVoucherDate).before(java.sql.Date.valueOf("2010-04-01")) && dVoucherNo.startsWith("OP") && dBookCode.equals("89")) {
                                        double newCAmount = EITLERPGLOBAL.round(cAmount - dAmount,2);
                                        if(!cVoucherNo.equals("")){
                                            
                                            int RecordCount = data.getIntValueFromDB("SELECT COUNT(*) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+cVoucherNo+"' ",FinanceGlobal.FinURL);
                                            if(RecordCount==2) {
                                                SQL = "DELETE FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+dVoucherNo+"' ";
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                SQL = "DELETE FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+dVoucherNo+"' ";
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                SQL = "DELETE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+dVoucherNo+"' ";
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                SQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET AMOUNT = "+newCAmount+" " +
                                                "WHERE VOUCHER_NO='"+cVoucherNo+"' ";
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                SQL = "UPDATE D_FIN_VOUCHER_DETAIL SET AMOUNT = "+newCAmount+" " +
                                                "WHERE VOUCHER_NO='"+cVoucherNo+"' ";
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                //SQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET AMOUNT = "+newCAmount+" " +
                                                //"WHERE VOUCHER_NO='"+cVoucherNo+"' AND LINK_NO LIKE '%"+cLinkNo.substring(0,4)+"%' AND AMOUNT="+cAmount;
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                //SQL = "UPDATE D_FIN_VOUCHER_DETAIL SET AMOUNT = "+newCAmount+" " +
                                                //"WHERE VOUCHER_NO='"+cVoucherNo+"' AND LINK_NO LIKE '%"+cLinkNo.substring(0,4)+"%' AND AMOUNT="+cAmount;
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                SQL = "UPDATE D_FIN_VOUCHER_HEADER SET CHANGED=1 " +
                                                "WHERE VOUCHER_NO='"+cVoucherNo+"' ";
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                SQL = "DELETE FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2 AND EFFECT='D' " +
                                                "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND LINK_NO='"+dLinkNo+"' AND VOUCHER_NO='"+dVoucherNo+"' AND AMOUNT="+dAmount;
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                                
                                                SQL = "UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET AMOUNT= "+ newCAmount + " " +
                                                "WHERE INVOICE_TYPE=2 AND EFFECT='C' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND LINK_NO='"+cLinkNo+"' AND AMOUNT="+cAmount;
                                                //data.Execute(SQL,FinanceGlobal.FinURL);
                                            }
                                            System.out.println("Record found : " + " Party Code : " + PartyCode + " cLinkNo : " + cLinkNo + " cBookCode : " + cBookCode + " cVoucherNo : " + cVoucherNo + " cVoucherDate : " + cVoucherDate + " cAmount : " + cAmount + " RECORD : " + RecordCount );
                                            System.out.println("Record found : " + " Party Code : " + PartyCode + " dLinkNo : " + dLinkNo + " dBookCode : " + dBookCode + " dVoucherNo : " + dVoucherNo + " dVoucherDate : " + dVoucherDate + " dAmount : " + dAmount);
                                        } else {
                                            //System.out.println("credit voucher not found : " + " Party Code : " + PartyCode + " cLinkNo : " + cLinkNo + " cBookCode : " + cBookCode + " cVoucherNo : credit voucher not found. cVoucherDate : " + cVoucherDate + " cAmount : " + cAmount);
                                        }
                                    } else {
                                        if(cAmount>dAmount) {
                                            System.out.println("voucher date after 01/04/2010 : " + " Party Code : " + PartyCode + " cLinkNo : " + cLinkNo + " voucher date after 01/04/2010." );
                                        }
                                    }
                                    
                                } else {
                                    //System.out.println("Record not valid : " + " Party Code : " + PartyCode + " Voucher Type : " + clsVoucher.getVoucherType(dVoucherNo) + " cAmount : " + cAmount + " dAmount : " + dAmount);
                                }
                                
                            } else {
                                //System.out.println("Multiple record found : " + " Party Code : " + PartyCode + " LinkNo : " + cLinkNo + " BookCode : " + cBookCode);
                            }
                        } else {
                            //System.out.println("Debit record not found : " + " Party Code : " + PartyCode + " LinkNo : " + cLinkNo + " BookCode : " + cBookCode);
                        }
                    }
                    
                    rsCLink.next();
                }
                rsData.next();
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdSameLinkActionPerformed
    
    private void cmdOSBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOSBalanceActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT DISTINCT SUB_ACCOUNT_CODE FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL " +
            "WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 ORDER BY SUB_ACCOUNT_CODE";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            while(!rsData.isAfterLast()) {
                String PartyCode = rsData.getString("SUB_ACCOUNT_CODE");
                double CAmount = 0;
                double DAmount = 0;
                double LedgerAmount = 0;
                SQL = "SELECT SUM(AMOUNT) FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND EFFECT='C' " +
                "AND SUB_ACCOUNT_CODE='"+PartyCode+"' ";
                CAmount = EITLERPGLOBAL.round(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL),2);
                SQL = "SELECT SUM(AMOUNT) FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND EFFECT='D' " +
                "AND SUB_ACCOUNT_CODE='"+PartyCode+"' ";
                DAmount = EITLERPGLOBAL.round(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL),2);
                
                LedgerAmount = EITLERPGLOBAL.round(clsAccount.getClosingBalance("210027", PartyCode, "2011-02-28", true),2);
                
                if(Math.abs(EITLERPGLOBAL.round((DAmount - CAmount),2)) != Math.abs(EITLERPGLOBAL.round(LedgerAmount,2))) {
                    double Diff = Math.abs(EITLERPGLOBAL.round((DAmount - CAmount),2)) - Math.abs(EITLERPGLOBAL.round(LedgerAmount,2));
                    String Msg = "Party Code : " + PartyCode + " Credit : " + EITLERPGLOBAL.round(CAmount,2) + " " +
                    "Debit : " + EITLERPGLOBAL.round(DAmount,2) + " Net Amount : " + EITLERPGLOBAL.round((DAmount - CAmount),2) + " " +
                    "Ledger Amount : " + EITLERPGLOBAL.round(LedgerAmount,2)+" Diff : " + EITLERPGLOBAL.round(Diff,2);
                    System.out.println(Msg);
                }
                rsData.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdOSBalanceActionPerformed
    
    private void cmdFindAdjVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFindAdjVoucherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdFindAdjVoucherActionPerformed
    
    private void cmdFind09VoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFind09VoucherActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE, A.LEGACY_NO,DATE_FORMAT(A.LEGACY_DATE,'%d/%m/%Y') AS LDATE,DATE_FORMAT(A.VOUCHER_DATE,'%d/%m/%Y') AS VDATE, B.MAIN_ACCOUNT_CODE, " +
            "B.SUB_ACCOUNT_CODE, B.EFFECT, SUM(B.AMOUNT) AMOUNT ,A.BOOK_CODE,B.SR_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_TYPE IN (6,7,8,9,12)  AND B.MAIN_ACCOUNT_CODE='210010' " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 AND A.EXCLUDE_IN_ADJ =0 AND B.EFFECT='C' AND B.INVOICE_NO ='' " + //
            "AND B.MODULE_ID <>65 AND B.GRN_NO ='' AND A.VOUCHER_DATE>='2006-04-01' AND A.VOUCHER_DATE<='2010-03-31' " +
            "GROUP BY A.VOUCHER_NO,SUB_ACCOUNT_CODE " +
            "ORDER BY B.SUB_ACCOUNT_CODE,A.VOUCHER_DATE ";
            ResultSet rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
            
            while(!rsVoucher.isAfterLast()) {
                String VoucherNo = UtilFunctions.getString(rsVoucher, "VOUCHER_NO", "");
                String VoucherDate = UtilFunctions.getString(rsVoucher, "VOUCHER_DATE","0000-00-00");
                int VoucherSrNo = UtilFunctions.getInt(rsVoucher, "SR_NO", 0);
                String SubAccountCode = UtilFunctions.getString(rsVoucher, "SUB_ACCOUNT_CODE", "");
                double Amount = UtilFunctions.getDouble(rsVoucher, "AMOUNT", 0);
                
                SQL = "SELECT A.VOUCHER_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO LIKE 'OP%' " +
                "AND B.MAIN_ACCOUNT_CODE='210010' AND B.SUB_ACCOUNT_CODE='"+SubAccountCode+"' AND A.VOUCHER_DATE='"+VoucherDate+"' AND B.AMOUNT="+Amount;
                
                if(data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    SQL = "SELECT A.VOUCHER_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO LIKE 'OP%' " +
                    "AND B.MAIN_ACCOUNT_CODE='210010' AND B.SUB_ACCOUNT_CODE='"+SubAccountCode+"' AND A.VOUCHER_DATE='"+VoucherDate+"' AND B.AMOUNT="+Amount+" AND EXCLUDE_IN_ADJ=1 ";
                    String oVoucherNo = data.getStringValueFromDB(SQL,FinanceGlobal.FinURL);
                    //data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET EXCLUDE_IN_ADJ=1,CHANGED=1 WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                    //data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET EXCLUDE_IN_ADJ=0,CHANGED=1 WHERE VOUCHER_NO='"+oVoucherNo+"'",FinanceGlobal.FinURL);
                    //System.out.println("old Voucher No : " + VoucherNo + " new Voucher No : " + oVoucherNo + " VoucherDate : " + VoucherDate + " Amount : " + Amount);
                } else {
                    System.out.println("not found : old Voucher No : " + VoucherNo + " VoucherDate : " + VoucherDate + " Amount : " + Amount);
                }
                
                rsVoucher.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdFind09VoucherActionPerformed
    
    private void cmdFind09AdjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFind09AdjActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT INVOICE_NO,INVOICE_DATE,PARTY_CODE FROM D_SAL_INVOICE_HEADER WHERE INVOICE_DATE>='2011-01-07' " +
            "AND INVOICE_TYPE=2 AND APPROVED=1 AND CANCELLED=0 AND PAYMENT_TERM_CODE LIKE '9%' " + //AND INVOICE_NO='F002309' AND INVOICE_DATE='2010-12-30'
            "ORDER BY INVOICE_DATE,PARTY_CODE ";
            ResultSet rsInvoice = data.getResult(SQL);
            while(!rsInvoice.isAfterLast()) {
                String InvoiceNo = rsInvoice.getString("INVOICE_NO");
                String InvoiceDate = rsInvoice.getString("INVOICE_DATE");
                String PartyCode = rsInvoice.getString("PARTY_CODE");
                String SJVoucherNo = data.getStringValueFromDB("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_DETAIL WHERE INVOICE_NO='"+InvoiceNo+"' " +
                "AND INVOICE_DATE='"+InvoiceDate+"' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND EFFECT='D'",FinanceGlobal.FinURL);
                double SJAmount = data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE INVOICE_NO='"+InvoiceNo+"' " +
                "AND INVOICE_DATE='"+InvoiceDate+"' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND EFFECT='D'",FinanceGlobal.FinURL);
                
                SQL = "SELECT VOUCHER_NO,SR_NO,AMOUNT FROM D_FIN_VOUCHER_DETAIL WHERE INVOICE_NO='"+InvoiceNo+"' " +
                "AND INVOICE_DATE='"+InvoiceDate+"' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                "AND EFFECT='C' AND VOUCHER_NO NOT LIKE 'SJ%' ";
                ResultSet rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                if(rsVoucher.getRow()>0){
                    while(!rsVoucher.isAfterLast()) {
                        String VoucherNo = rsVoucher.getString("VOUCHER_NO");
                        int SrNo = rsVoucher.getInt("SR_NO");
                        double vAmount = rsVoucher.getDouble("AMOUNT");
                        double TAmount = 0;
                        String VoucherDate = data.getStringValueFromDB("SELECT VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                        int vEX = data.getIntValueFromDB("SELECT EXCLUDE_IN_ADJ FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                        SQL = "SELECT '"+VoucherDate+"' FROM DUAL WHERE '"+VoucherDate+"' BETWEEN '2006-04-01' AND '2010-03-31'";
                        if(data.IsRecordExist(SQL)) {
                            TAmount = TAmount + vAmount;
                            SQL = "SELECT B.* FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                            "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO LIKE 'OP%' AND A.VOUCHER_DATE='"+VoucherDate+"' " +
                            "AND B.MAIN_ACCOUNT_CODE='210010' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.AMOUNT="+vAmount+" " +
                            "AND A.APPROVED=1 AND A.CANCELLED=0";
                            if(data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                                SQL = "SELECT B.VOUCHER_NO,B.SR_NO,B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO LIKE 'OP%' AND A.VOUCHER_DATE='"+VoucherDate+"' " +
                                "AND B.MAIN_ACCOUNT_CODE='210010' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.AMOUNT="+vAmount+" " +
                                "AND A.APPROVED=1 AND A.CANCELLED=0";
                                ResultSet rsOPData = data.getResult(SQL,FinanceGlobal.FinURL);
                                while(!rsOPData.isAfterLast()) {
                                    String oVoucherNo = rsOPData.getString("VOUCHER_NO");
                                    int oEX = data.getIntValueFromDB("SELECT EXCLUDE_IN_ADJ FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+oVoucherNo+"' ",FinanceGlobal.FinURL);
                                    String Msg = "InvoiceNo : "+ InvoiceNo + " InvoiceDate : " + InvoiceDate + " PartyCode : " + PartyCode +" " +
                                    "OLD VoucherNo : " + VoucherNo + " old Ex : "+ vEX +" NEW VoucherNo : " + oVoucherNo +" new Ex : "+ oEX + " Amount : " + vAmount;
                                    System.out.println(Msg);
                                    
                                    SQL = "UPDATE D_FIN_VOUCHER_DETAIL SET INVOICE_NO='',INVOICE_DATE='0000-00-00'," +
                                    "GRN_NO='',GRN_DATE='0000-00-00', MODULE_ID=0 " +
                                    "WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='C' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND AMOUNT="+vAmount+" ";
                                    //data.Execute(SQL,FinanceGlobal.FinURL);
                                    
                                    SQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET INVOICE_NO='',INVOICE_DATE='0000-00-00'," +
                                    "GRN_NO='',GRN_DATE='0000-00-00', MODULE_ID=0 " +
                                    "WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='C' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND AMOUNT="+vAmount+" ";
                                    //data.Execute(SQL,FinanceGlobal.FinURL);
                                    
                                    SQL = "UPDATE D_FIN_VOUCHER_HEADER SET CHANGED=1,EXCLUDE_IN_ADJ=1 WHERE VOUCHER_NO='"+VoucherNo+"' ";
                                    //data.Execute(SQL,FinanceGlobal.FinURL);
                                    
                                    SQL = "UPDATE D_FIN_VOUCHER_DETAIL SET INVOICE_NO='"+InvoiceNo+"',INVOICE_DATE='"+InvoiceDate+"'," +
                                    "GRN_NO='"+InvoiceNo+"',GRN_DATE='"+InvoiceDate+"', MODULE_ID=80 " +
                                    "WHERE VOUCHER_NO='"+oVoucherNo+"' AND EFFECT='C' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND AMOUNT="+vAmount+" ";
                                    //data.Execute(SQL,FinanceGlobal.FinURL);
                                    
                                    SQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET INVOICE_NO='"+InvoiceNo+"',INVOICE_DATE='"+InvoiceDate+"'," +
                                    "GRN_NO='"+InvoiceNo+"',GRN_DATE='"+InvoiceDate+"', MODULE_ID=80 " +
                                    "WHERE VOUCHER_NO='"+oVoucherNo+"' AND EFFECT='C' AND MAIN_ACCOUNT_CODE='210010' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND AMOUNT="+vAmount+" ";
                                    //data.Execute(SQL,FinanceGlobal.FinURL);
                                    
                                    SQL = "UPDATE D_FIN_VOUCHER_HEADER SET CHANGED=1,EXCLUDE_IN_ADJ=0 WHERE VOUCHER_NO='"+oVoucherNo+"' ";
                                    //data.Execute(SQL,FinanceGlobal.FinURL);
                                    
                                    rsOPData.next();
                                }
                            } else {
                                String Msg = "Not Found : InvoiceNo : "+ InvoiceNo + " InvoiceDate : " + InvoiceDate + " PartyCode : " + PartyCode +" " +
                                "OLD VoucherNo : " + VoucherNo + " Amount : " + vAmount + " OLD VOUCHER DATE : " + VoucherDate;
                                System.out.println(Msg);
                            }
                        }
                        rsVoucher.next();
                    }
                } else {
                    String Msg = "No record : InvoiceNo : "+ InvoiceNo + " InvoiceDate : " + InvoiceDate + " PartyCode : " + PartyCode  ;
                }
                
                rsInvoice.next();
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_cmdFind09AdjActionPerformed
    
    private void cmdFindOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFindOtherActionPerformed
        // TODO add your handling code here:
        int Counter = 0 ;
        int FCounter = 0 ;
        int F1Counter = 0 ;
        int MFCounter = 0 ;
        int NFCounter = 0 ;
        try {
            
            String SQL = "SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2 " +
            "AND VOUCHER_DATE>='2010-04-01' AND VOUCHER_NO='' AND BOOK_CODE<>'89' " +
            "ORDER BY SUB_ACCOUNT_CODE,VOUCHER_DATE";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            while(!rsData.isAfterLast()) {
                String TrDate = rsData.getString("VOUCHER_DATE");
                String BookCode=rsData.getString("BOOK_CODE");
                String RefNo = rsData.getString("LEGACY_NO");
                String LinkNo = rsData.getString("LINK_NO");
                String PartyCode = rsData.getString("SUB_ACCOUNT_CODE");
                String Effect = rsData.getString("EFFECT");
                double Amount = EITLERPGLOBAL.round(rsData.getDouble("AMOUNT"),2);
                
                SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SR_NO,B.GRN_NO,B.GRN_DATE FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE>='2010-04-01' AND A.VOUCHER_DATE<='2010-11-30' " +
                "AND B.MAIN_ACCOUNT_CODE='210010' AND  B.EFFECT='"+Effect+"' AND B.AMOUNT="+Amount; //AND A.BOOK_CODE='"+BookCode+"'
                
                ResultSet rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                rsVoucher.first();
                rsVoucher.last();
                int Count = rsVoucher.getRow();
                rsVoucher.first();
                if(Count==1) {
                    String VoucherNo = rsVoucher.getString("VOUCHER_NO");
                    String VoucherDate = rsVoucher.getString("VOUCHER_DATE");
                    String GRNDate = rsVoucher.getString("GRN_DATE");
                    String BC = data.getStringValueFromDB("SELECT BOOK_CODE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                    if(java.sql.Date.valueOf(GRNDate).after(java.sql.Date.valueOf("2010-11-30")) || GRNDate.equals("0000-00-00")) {
                        FCounter++;
                        System.out.println("F : PartyCode : " + PartyCode + " LinkNo : " + LinkNo + " Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Voucher No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("VOUCHER_NO")," ",20) + " Voucher Date : " + EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE")) + " Amount : " + Amount);
                    } else {
                        F1Counter++;
                    }
                } else if (Count>1) {
                    //System.out.println("Multiple Voucher Found : RefNo : " + RefNo + " LinkNo : " + LinkNo + " PartyCode : " + PartyCode + " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate));
                    //MULTIPLE FOUND
                    MFCounter++;
                    while(!rsVoucher.isAfterLast()) {
                        String VoucherNo = rsVoucher.getString("VOUCHER_NO");
                        String VoucherDate = rsVoucher.getString("VOUCHER_DATE");
                        String GRNDate = rsVoucher.getString("GRN_DATE");
                        String BC = data.getStringValueFromDB("SELECT BOOK_CODE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        if(java.sql.Date.valueOf(GRNDate).after(java.sql.Date.valueOf("2010-11-30")) || GRNDate.equals("0000-00-00")) {
                            System.out.println("MF : PartyCode : " + PartyCode + " LinkNo : " + LinkNo + " Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Voucher No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("VOUCHER_NO")," ",20) + " Voucher Date : " + EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE")) + " Voucher Sr No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("SR_NO")," ",3) +  " Amount : " + Amount);
                        }
                        rsVoucher.next();
                    }
                } else {
                    // VOUCHER NOT FOUND
                    NFCounter++;
                    System.out.println("NF : PartyCode : " + PartyCode + " LinkNo : " + LinkNo +" Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Amount : " + Amount);
                    
                }
                
                rsData.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("TOTAL : " + Counter + " F : " + FCounter +" F1 : " + F1Counter + " MF : " + MFCounter + " NF : " + NFCounter);
        System.out.println("*** FINISHED ***");
    }//GEN-LAST:event_cmdFindOtherActionPerformed
    
    private void cmdUpdateSrnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateSrnoActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=3 ORDER BY SR_NO ";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            rsData.first();
            int Counter = 0;
            while(!rsData.isAfterLast()) {
                Counter++;
                int SrNo = rsData.getInt("SR_NO");
                //data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET SR_NO="+Counter+" WHERE INVOICE_TYPE=3 AND SR_NO="+SrNo,FinanceGlobal.FinURL);
                rsData.next();
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdUpdateSrnoActionPerformed
    
    private void cmdFindDumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFindDumActionPerformed
        // TODO add your handling code here:
        ResultSet rsOutStanding = null, rsVoucher = null, rsOpeningDetail=null;
        String TrDate = "",RefNo="",PartyCode="",LegacyNo="",LegacyDate="",BookCode="",MainAccountCode="210010",LinkNo="",Effect="",YR1="",YR2="";
        double Amount = 0;
        int Counter = 0 ;
        int FCounter = 0 ;
        int F1Counter = 0 ;
        int MFCounter = 0 ;
        int NFCounter = 0 ;
        try {
            rsOutStanding= data.getResult("SELECT * FROM D_FIN_DR_OUTSTANDING_OPENING " +
            "WHERE TR_DATE>='2010-04-01' AND BOOK_CODE='89' " +
            //"WHERE TR_DATE>='2006-04-01' AND TR_DATE<='2007-03-31' " +
            "ORDER BY PARTY_CD,TR_DATE",FinanceGlobal.FinURL); //AND TR_DATE<='2010-03-31'
            while(!rsOutStanding.isAfterLast()) {
                if(rsOutStanding.getString("REC_TYPE").equals("1")) {
                    Effect = "D";
                } else {
                    Effect = "C";
                }
                Counter++;
                TrDate = rsOutStanding.getString("TR_DATE");
                BookCode=rsOutStanding.getString("BOOK_CODE");
                RefNo = rsOutStanding.getString("REF_NUM");
                LinkNo = rsOutStanding.getString("LINK_NO");
                YR1 = rsOutStanding.getString("YR1");
                YR2 = rsOutStanding.getString("YR2");
                LegacyNo = "M" + TrDate.substring(2,4)+TrDate.substring(5,7)+TrDate.substring(8,10)+BookCode;
                PartyCode = rsOutStanding.getString("PARTY_CD");
                Amount = EITLERPGLOBAL.round(rsOutStanding.getDouble("AMOUNT"),2);
                
                String SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SR_NO,GRN_NO,GRN_DATE FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE='"+TrDate+"' " + //AND A.VOUCHER_NO LIKE '"+LegacyNo+"%"+RefNo+"'
                "AND B.MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND  B.EFFECT='"+Effect+"' AND B.AMOUNT="+Amount; //AND A.BOOK_CODE='"+BookCode+"'
                
                rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                rsVoucher.first();
                rsVoucher.last();
                int Count = rsVoucher.getRow();
                rsVoucher.first();
                if(Count==1) {
                    //VOUCHER FOUND
                    String VoucherNo = rsVoucher.getString("VOUCHER_NO");
                    String VoucherDate = rsVoucher.getString("VOUCHER_DATE");
                    String GRNDate = rsVoucher.getString("GRN_DATE");
                    String BC = data.getStringValueFromDB("SELECT BOOK_CODE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                    
                    if(java.sql.Date.valueOf(GRNDate).after(java.sql.Date.valueOf("2010-11-30")) || GRNDate.equals("0000-00-00")) {
                        FCounter++;
                        System.out.println("F : PartyCode : " + PartyCode + " LinkNo : " + LinkNo + " Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Voucher No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("VOUCHER_NO")," ",20) + " Voucher Date : " + EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE")) + " Amount : " + Amount);
                    } else {
                        F1Counter++;
                    }
                    
                    /*data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET VOUCHER_NO='"+VoucherNo+"',VOUCHER_DATE='"+VoucherDate+"',BOOK_CODE='"+BC+"' " +
                    "WHERE INVOICE_TYPE=2 AND BOOK_CODE='"+BookCode+"' AND LEGACY_NO='"+RefNo+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND AMOUNT="+Amount+" " +
                    "AND LINK_NO LIKE '"+LinkNo+"%' AND VOUCHER_NO='' AND VOUCHER_DATE='"+TrDate+"' ",FinanceGlobal.FinURL);*/
                } else if (Count>1) {
                    //System.out.println("Multiple Voucher Found : RefNo : " + RefNo + " LinkNo : " + LinkNo + " PartyCode : " + PartyCode + " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate));
                    //MULTIPLE FOUND
                    MFCounter++;
                    while(!rsVoucher.isAfterLast()) {
                        System.out.println("MF : PartyCode : " + PartyCode + " LinkNo : " + LinkNo + " Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Voucher No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("VOUCHER_NO")," ",20) + " Voucher Date : " + EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE")) + " Voucher Sr No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("SR_NO")," ",3) +  " Amount : " + Amount);
                        rsVoucher.next();
                    }
                } else {
                    // VOUCHER NOT FOUND
                    NFCounter++;
                    System.out.println("NF : PartyCode : " + PartyCode + " LinkNo : " + LinkNo + " YR1 : "+ YR1 + " YR2 : "+ YR2 +" Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Amount : " + Amount);
                    
                }
                rsOutStanding.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("TOTAL : " + Counter + " F : " + FCounter +" F1 : " + F1Counter + " MF : " + MFCounter + " NF : " + NFCounter);
        System.out.println("*** FINISHED ***");
    }//GEN-LAST:event_cmdFindDumActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int Counter=0;
        int Counter1=0;
        int Counter11=0;
        int Counter0=0;
        try {
            String SQL = "";
            SQL = "SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO=2 AND INVOICE_TYPE=1 AND VOUCHER_NO<>'' " +
            "AND VOUCHER_DATE>='2010-11-24' ORDER BY VOUCHER_DATE,SR_NO";
            //"AND VOUCHER_DATE>='2010-04-01' AND VOUCHER_DATE<='2010-11-30' ORDER BY VOUCHER_DATE";
            //"AND VOUCHER_DATE>='2010-04-01' AND VOUCHER_DATE<='2010-11-30' ORDER BY VOUCHER_DATE";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            
            while(!rsData.isAfterLast()) {
                String VoucherNo = rsData.getString("VOUCHER_NO");
                String VoucherDate = rsData.getString("VOUCHER_DATE");
                String MainCode = rsData.getString("MAIN_ACCOUNT_CODE");
                String SubCode = rsData.getString("SUB_ACCOUNT_CODE");
                String BookCode = rsData.getString("BOOK_CODE");
                String Effect = rsData.getString("EFFECT");
                double Amount = rsData.getDouble("AMOUNT");
                SQL = "SELECT COUNT(*) FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO " +
                "AND A.VOUCHER_NO='"+VoucherNo+"' AND B.EFFECT='"+Effect+"' AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+SubCode+"' " +
                "AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount+" AND B.MATCHED=1 AND B.MATCHED_DATE='2011-02-28' "; //AND A.VOUCHER_NO LIKE 'OP%'
                int Count = data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                Counter++;
                if(Count==1) {
                    Counter1++;
                    System.out.println(" 1 : "+ "Voucher No : " + VoucherNo + " MainCode : " + MainCode + " SubCode : " + SubCode + " BookCode : " + BookCode + " Effect : " + Effect + " Amount : " + Amount);
                    SQL = "UPDATE D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                    "SET B.MATCHED=0,B.MATCHED_DATE='0000-00-00' " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO='"+VoucherNo+"' " +
                    "AND B.EFFECT='"+Effect+"' AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND B.SUB_ACCOUNT_CODE='"+SubCode+"' " +
                    "AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount+" " +
                    "AND B.MATCHED=1 AND B.MATCHED_DATE='2011-02-28' "; //AND A.VOUCHER_NO LIKE 'OP%'
                    data.Execute(SQL,FinanceGlobal.FinURL);
                    SQL = "UPDATE D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B " +
                    "SET B.MATCHED=0,B.MATCHED_DATE='0000-00-00' " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO='"+VoucherNo+"' " +
                    "AND B.EFFECT='"+Effect+"' AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND B.SUB_ACCOUNT_CODE='"+SubCode+"' " +
                    "AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount+" " +
                    "AND B.MATCHED=1 AND B.MATCHED_DATE='2011-02-28' "; //AND A.VOUCHER_NO LIKE 'OP%'
                    data.Execute(SQL,FinanceGlobal.FinURL);
                    SQL = "UPDATE D_FIN_VOUCHER_HEADER SET CHANGED=1,CHANGED_DATE=CURDATE() WHERE VOUCHER_NO='"+VoucherNo+"' ";
                    data.Execute(SQL,FinanceGlobal.FinURL);
                } else if(Count>1) {
                    Counter11++;
                    System.out.println(" >1 : "+ "Voucher No : " + VoucherNo + " MainCode : " + MainCode + " SubCode : " + SubCode + " BookCode : " + BookCode + " Effect : " + Effect + " Amount : " + Amount);
                    
                    SQL = "SELECT SR_NO FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO " +
                    "AND A.VOUCHER_NO='"+VoucherNo+"' AND B.EFFECT='"+Effect+"' AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+SubCode+"' " +
                    "AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount+" AND B.MATCHED=1 AND B.MATCHED_DATE='2011-02-28' "; //AND A.VOUCHER_NO LIKE 'OP%'
                    int SrNo = data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    
                    SQL = "UPDATE D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                    "SET B.MATCHED=0,B.MATCHED_DATE='0000-00-00' " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO='"+VoucherNo+"' " +
                    "AND B.EFFECT='"+Effect+"' AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND B.SUB_ACCOUNT_CODE='"+SubCode+"' " +
                    "AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount+" AND B.SR_NO="+SrNo+" " +
                    "AND B.MATCHED=1 AND B.MATCHED_DATE='2011-02-28' "; //AND A.VOUCHER_NO LIKE 'OP%'
                    data.Execute(SQL,FinanceGlobal.FinURL);
                    
                    SQL = "SELECT SR_NO FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B WHERE A.VOUCHER_NO=B.VOUCHER_NO " +
                    "AND A.VOUCHER_NO='"+VoucherNo+"' AND B.EFFECT='"+Effect+"' AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+SubCode+"' " +
                    "AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount+" AND B.MATCHED=1 AND B.MATCHED_DATE='2011-02-28' "; //AND A.VOUCHER_NO LIKE 'OP%'
                    SrNo = data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    
                    SQL = "UPDATE D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL_EX B " +
                    "SET B.MATCHED=0,B.MATCHED_DATE='0000-00-00' " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_NO='"+VoucherNo+"' " +
                    "AND B.EFFECT='"+Effect+"' AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                    "AND B.SUB_ACCOUNT_CODE='"+SubCode+"' " +
                    "AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount+" " +
                    "AND B.SR_NO="+SrNo+" AND B.MATCHED=1 AND B.MATCHED_DATE='2011-02-28' "; //AND A.VOUCHER_NO LIKE 'OP%'
                    data.Execute(SQL,FinanceGlobal.FinURL);
                    SQL = "UPDATE D_FIN_VOUCHER_HEADER SET CHANGED=1,CHANGED_DATE=CURDATE() WHERE VOUCHER_NO='"+VoucherNo+"' ";
                    data.Execute(SQL,FinanceGlobal.FinURL);
                } else {
                    Counter0++;
                    System.out.println(" 0 : "+ "Voucher No : " + VoucherNo + " MainCode : " + MainCode + " SubCode : " + SubCode + " BookCode : " + BookCode + " Effect : " + Effect + " Amount : " + Amount);
                }
                rsData.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("Counter = " + Counter + " Counter1 = " + Counter1 + " Counter11 = " + Counter11 + " Counter0 = " + Counter0);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void cmdFileToDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFileToDataActionPerformed
        // TODO add your handling code here:
        boolean Done = false;
        try {
            BufferedReader aFile=new BufferedReader(new FileReader(new File("/root/Desktop/os_sales/M0910.TXT")));
            int Pointer=0;
            int Counter=0;
            while(!Done) {
                String FileRecord=aFile.readLine();
                Pointer=0;
                Counter++;
                
                String PartyCode = FileRecord.substring(Pointer, Pointer+6).trim(); Pointer+=6;
                String LinkNo = FileRecord.substring(Pointer, Pointer+4).trim(); Pointer+=4;
                String LegacyNo = FileRecord.substring(Pointer, Pointer+6).trim(); Pointer+=6;
                
                String LegacyDate = EITLERPGLOBAL.formatDateDB(FileRecord.substring(Pointer, Pointer+10).trim()); Pointer+=10;
                String BookCode = FileRecord.substring(Pointer, Pointer+2).trim(); Pointer+=2;
                String Effect = FileRecord.substring(Pointer, Pointer+1).trim(); Pointer+=1;
                double Amount = Double.parseDouble(FileRecord.substring(Pointer, Pointer+14).trim()); Pointer+=14;
                String VoucherNo = FileRecord.substring(Pointer, Pointer+20).trim(); Pointer+=20;
                String Remark = FileRecord.substring(Pointer, Pointer+5).trim(); Pointer+=5;
                String SQL = "SELECT COUNT(*) FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2 AND MAIN_ACCOUNT_CODE='210010' " +
                "AND SUB_ACCOUNT_CODE='" + PartyCode + "' AND LINK_NO LIKE '"+LinkNo+"%' AND LEGACY_NO='"+LegacyNo+"' AND BOOK_CODE='"+BookCode+"' " +
                "AND EFFECT='"+Effect+"' AND AMOUNT="+Amount+" AND VOUCHER_NO='' AND SR_NO>2834";
                if(data.getIntValueFromDB(SQL,FinanceGlobal.FinURL) == 1) {
                    String VoucherDate = data.getStringValueFromDB("SELECT VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                    String BookCode1 = data.getStringValueFromDB("SELECT BOOK_CODE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                    /*data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET VOUCHER_NO='"+VoucherNo+"', VOUCHER_DATE='"+VoucherDate+"',BOOK_CODE='"+BookCode1+"' " +
                    "WHERE INVOICE_TYPE=2 AND MAIN_ACCOUNT_CODE='210010' " +
                    "AND SUB_ACCOUNT_CODE='" + PartyCode + "' AND LINK_NO LIKE '"+LinkNo+"%' AND LEGACY_NO='"+LegacyNo+"' AND BOOK_CODE='"+BookCode+"' " +
                    "AND EFFECT='"+Effect+"' AND AMOUNT="+Amount+" AND VOUCHER_NO='' AND SR_NO>2834 ",FinanceGlobal.FinURL);*/
                    System.out.println("FOUND ::: Inserting Record No:-" + Counter + " Pointer = " + Pointer);
                } else if(data.getIntValueFromDB(SQL,FinanceGlobal.FinURL) == 0) {
                    System.out.println("NOT FOUND ::: Inserting Record No:-" + Counter + " Pointer = " + Pointer);
                } else {
                    System.out.println("MULTIPLE FOUND ::: Inserting Record No:-" + Counter + " Pointer = " + Pointer);
                }
                
            }
        } catch(Exception e) {
            Done=true;
        }
    }//GEN-LAST:event_cmdFileToDataActionPerformed
    
    private void cmdImportInOutstandingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdImportInOutstandingActionPerformed
        // TODO add your handling code here:
        ImportToOutstanding();
    }//GEN-LAST:event_cmdImportInOutstandingActionPerformed
    
    private void ImportToOutstanding() {
        try {
            
            String VoucherDate = "",SubAccountCode="",LegacyNo="",LegacyDate="",BookCode="",MainAccountCode="210027",LinkNo="",Effect="",ChargeCode="";
            String InvoiceNo = "",YR1="",YR2="",VoucherNo="",InvoiceDate="",BaleNo="",LrNo="",OBCNo="";
            double Amount = 0;
            int CompanyID=2,EntryNo=2,InvoiceType=1,SrNo=0;
            Connection objConn=null;
            Statement Stmt = null;
            ResultSet rsOutStanding = null, rsVoucher = null, rsOpeningDetail=null;
            //data.Execute("DELETE FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=2",FinanceGlobal.FinURL);
            objConn = data.getConn(FinanceGlobal.FinURL);
            Stmt = objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rsOpeningDetail=Stmt.executeQuery("SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=1 LIMIT 1");
            rsOpeningDetail.first();
            
            
            rsOutStanding= data.getResult("SELECT * FROM D_FIN_DR_OUTSTANDING_OPENING " +
            //"WHERE TR_DATE<='2006-03-31' ORDER BY TR_DATE",FinanceGlobal.FinURL);
            //"WHERE TR_DATE>='2009-04-01' AND TR_DATE<='2010-03-31' ORDER BY TR_DATE",FinanceGlobal.FinURL);
            "WHERE TR_DATE>='2010-04-01' AND TR_DATE<='2011-02-28' ORDER BY TR_DATE",FinanceGlobal.FinURL);
            rsOutStanding.first();
            
            while(!rsOutStanding.isAfterLast()) {
                SrNo = data.getIntValueFromDB("SELECT MAX(SR_NO) FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=1 ",FinanceGlobal.FinURL)+1;
                SubAccountCode = rsOutStanding.getString("PARTY_CD");
                BookCode = rsOutStanding.getString("BOOK_CODE");
                ChargeCode = rsOutStanding.getString("CH_CD");
                YR1 = rsOutStanding.getString("YR1");
                YR2 = rsOutStanding.getString("YR2");
                if(Integer.parseInt(YR1)>50) {
                    YR1 = "19"+YR1;
                } else {
                    YR1 = "20"+YR1;
                }
                if(Integer.parseInt(YR2)>50) {
                    YR2 = "19"+YR2;
                } else {
                    YR2 = "20"+YR2;
                }
                LinkNo = rsOutStanding.getString("LINK_NO") + "/" + YR1 + "/" + YR2;
                
                InvoiceNo = "";
                InvoiceDate = "";
                
                if(rsOutStanding.getString("REC_TYPE").equals("1")) {
                    Effect = "D";
                } else {
                    Effect = "C";
                }
                
                VoucherDate = rsOutStanding.getString("TR_DATE");
                String TrDate = rsOutStanding.getString("TR_DATE");
                Amount = EITLERPGLOBAL.round(rsOutStanding.getDouble("AMOUNT"),2);
                
                String SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SR_NO FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+SubAccountCode+"' AND A.VOUCHER_DATE='"+VoucherDate+"' "+ //AND A.VOUCHER_NO LIKE 'OP%'
                "AND B.MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND  B.EFFECT='"+Effect+"' AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount;
                rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                rsVoucher.first();
                rsVoucher.last();
                int Count = rsVoucher.getRow();
                rsVoucher.first();
                VoucherNo = "";
                VoucherDate = "";
                if(rsVoucher.getRow()>0) {
                    VoucherNo = rsVoucher.getString("VOUCHER_NO");
                    VoucherDate = rsVoucher.getString("VOUCHER_DATE");
                }
                
                LegacyNo = rsOutStanding.getString("REF_NUM");
                BaleNo = rsOutStanding.getString("BALE_NO").trim();
                if(BaleNo.equals("000000")) {
                    BaleNo = "";
                }
                LrNo = rsOutStanding.getString("LR_AL").trim() + rsOutStanding.getString("LR_NUM").trim();
                if(LrNo.equals("000000")) {
                    LrNo = "";
                }
                OBCNo = "";
                if(VoucherDate.equals("")) {
                    VoucherDate=TrDate;
                }
                rsOpeningDetail.moveToInsertRow();
                rsOpeningDetail.updateInt("COMPANY_ID",CompanyID);
                rsOpeningDetail.updateInt("ENTRY_NO",2);
                rsOpeningDetail.updateInt("SR_NO",SrNo);
                rsOpeningDetail.updateInt("INVOICE_TYPE",InvoiceType);
                rsOpeningDetail.updateString("MAIN_ACCOUNT_CODE",MainAccountCode);
                rsOpeningDetail.updateString("SUB_ACCOUNT_CODE",SubAccountCode);
                rsOpeningDetail.updateString("BOOK_CODE",BookCode);
                rsOpeningDetail.updateString("CHARGE_CODE",ChargeCode);
                rsOpeningDetail.updateString("INVOICE_NO",InvoiceNo);
                rsOpeningDetail.updateString("INVOICE_DATE",InvoiceDate);
                rsOpeningDetail.updateString("LINK_NO",LinkNo);
                rsOpeningDetail.updateString("VOUCHER_NO",VoucherNo);
                rsOpeningDetail.updateString("VOUCHER_DATE",VoucherDate);
                rsOpeningDetail.updateString("LEGACY_NO",LegacyNo);
                rsOpeningDetail.updateDouble("AMOUNT",Amount);
                rsOpeningDetail.updateString("EFFECT",Effect);
                rsOpeningDetail.updateString("C_BOOK_CODE",BookCode);
                rsOpeningDetail.updateString("BALE_NO",BaleNo);
                rsOpeningDetail.updateString("LR_NO",LrNo);
                rsOpeningDetail.updateString("OBC_NO",OBCNo);
                rsOpeningDetail.updateBoolean("MATCHED",false);
                rsOpeningDetail.updateString("MATCHED_DATE","0000-00-00");
                rsOpeningDetail.updateString("CREATED_BY","Admin");
                rsOpeningDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                rsOpeningDetail.updateBoolean("CHANGED",true);
                rsOpeningDetail.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                rsOpeningDetail.insertRow();
                frmImportOutstanding.callFinalizestage();
                rsOutStanding.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** FINISHED ***");
    }
    private void cmdFindMisMatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFindMisMatchActionPerformed
        // TODO add your handling code here:
        FindMisMatchbyvoucher();
        
    }//GEN-LAST:event_cmdFindMisMatchActionPerformed
    
    private void cmdUpdateVouchersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateVouchersActionPerformed
        // TODO add your handling code here:
        ResultSet rsVoucher = null;
        String VoucherNo = "",VoucherDate = "",PONo = "",PODate = "",BillNo = "",BillDate = "",SQL = "";
        int Counter=0;
        try {
            SQL = "SELECT * FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE PO_DATE>='2006-04-01' ORDER BY PO_DATE";
            //rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
            rsVoucher.first();
            while(!rsVoucher.isAfterLast()) {
                VoucherNo = UtilFunctions.getString(rsVoucher,"VOUCHER_NO", "");
                VoucherDate = UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00");
                PONo = UtilFunctions.getString(rsVoucher,"PO_NO", "");
                PODate = UtilFunctions.getString(rsVoucher,"PO_DATE","0000-00-00");
                BillNo = UtilFunctions.getString(rsVoucher,"BILL_NO", "");
                BillDate = UtilFunctions.getString(rsVoucher,"BILL_DATE","0000-00-00");
                
                SQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET PO_NO='"+PONo+"', PO_DATE='"+PODate+"', INVOICE_NO='"+BillNo+"', " +
                "INVOICE_DATE='"+BillDate+"' WHERE VOUCHER_NO='"+VoucherNo+"' ";
                //data.Execute(SQL,FinanceGlobal.FinURL);
                
                SQL = "UPDATE D_FIN_VOUCHER_DETAIL_H SET PO_NO='"+PONo+"', PO_DATE='"+PODate+"', INVOICE_NO='"+BillNo+"', " +
                "INVOICE_DATE='"+BillDate+"' WHERE VOUCHER_NO='"+VoucherNo+"' ";
                //data.Execute(SQL,FinanceGlobal.FinURL);
                
                SQL = "UPDATE D_FIN_VOUCHER_DETAIL SET PO_NO='"+PONo+"', PO_DATE='"+PODate+"', INVOICE_NO='"+BillNo+"', " +
                "INVOICE_DATE='"+BillDate+"' WHERE VOUCHER_NO='"+VoucherNo+"'";
                //data.Execute(SQL,FinanceGlobal.FinURL);
                
                rsVoucher.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        
        System.out.println("The End...");
    }//GEN-LAST:event_cmdUpdateVouchersActionPerformed
    
    private void cmdFindVoucherNo0809ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFindVoucherNo0809ActionPerformed
        // TODO add your handling code here:
        ResultSet rsRecord = null;
        String pVoucherNo = "",VoucherDate = "", LegacyNo="",LegacyDate="",LNO="",LDate="",NewLDate="",BookCode="",NewBookCode="";
        String PONo = "",PODate="",BillNo="",BillDate="", NewVoucherNo="", NewVoucherDate="";
        String MainAccountCode="",PartyCode = "",Effect="";
        int Counter=0,FoundCounter = 0,NotFoundCounter = 0,SrNo=0;
        double Amount=0;
        try {
            String SQL = "SELECT MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE, PO_NO,PO_DATE,PAY_DAYS,BILL_NO,BILL_DATE, " +
            "BOOK_CODE,VOUCHER_NO,VOUCHER_DATE,LEGACY_NO,LEGACY_DATE, " +
            "AMOUNT,EFFECT,SR_NO " +
            "FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE PO_DATE>='2008-04-01' AND PO_DATE<='2009-12-31' " +
            "ORDER BY PO_DATE ";
            
            //rsRecord = data.getResult(SQL,FinanceGlobal.FinURL);
            rsRecord.first();
            
            while(!rsRecord.isAfterLast()) {
                LNO = rsRecord.getString("LEGACY_NO");
                LDate = rsRecord.getString("LEGACY_DATE");
                BookCode = rsRecord.getString("BOOK_CODE");
                PONo = rsRecord.getString("PO_NO");
                PODate = rsRecord.getString("PO_DATE");
                MainAccountCode = rsRecord.getString("MAIN_ACCOUNT_CODE");
                PartyCode = rsRecord.getString("SUB_ACCOUNT_CODE");
                Effect = rsRecord.getString("EFFECT");
                Amount = rsRecord.getDouble("AMOUNT");
                SrNo = rsRecord.getInt("SR_NO");
                Counter++;
                
                SQL = "SELECT A.VOUCHER_NO FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                "WHERE B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.MAIN_ACCOUNT_CODE='125019' AND A.VOUCHER_NO=B.VOUCHER_NO " +
                "AND B.PO_NO='"+PONo+"' AND B.AMOUNT="+Amount+" AND B.EFFECT='" + Effect + "' " +
                "AND A.APPROVED=1 AND A.CANCELLED=0 AND A.VOUCHER_DATE <='2009-12-31'"; // AND IS_DEDUCTION<>1
                
                
                if(data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    NewVoucherNo = data.getStringValueFromDB(SQL,FinanceGlobal.FinURL);
                    NewVoucherDate = data.getStringValueFromDB("SELECT VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO ='"+NewVoucherNo +"'",FinanceGlobal.FinURL);
                    NewBookCode = data.getStringValueFromDB("SELECT BOOK_CODE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO ='"+NewVoucherNo +"'",FinanceGlobal.FinURL);
                    
                    SQL = "UPDATE D_FIN_OPENING_OUTSTANDING_DETAIL SET VOUCHER_NO='"+NewVoucherNo+"' , VOUCHER_DATE='"+ NewVoucherDate +"', " +
                    "BOOK_CODE='"+NewBookCode+"', C_BOOK_CODE='"+BookCode+"' WHERE SR_NO="+SrNo+" ";
                    //data.Execute(SQL,FinanceGlobal.FinURL);
                    
                    FoundCounter++;
                    /*System.out.println("Record = " + Counter + " Found : VoucherNo = " +  NewVoucherNo + " PONo = "+ PONo +
                    " PO DATE = " + PODate + " Main Code = " + MainAccountCode +  " PartyCode = " + PartyCode);*/
                } else {
                    SQL = "UPDATE D_FIN_OPENING_OUTSTANDING_DETAIL SET VOUCHER_NO='' , VOUCHER_DATE='0000-00-00' " +
                    "WHERE SR_NO="+SrNo+" ";
                    //data.Execute(SQL,FinanceGlobal.FinURL);
                    
                    System.out.println("Record = " + Counter + " Not Found : Main Code = " + MainAccountCode + " PartyCode = " + PartyCode
                    + " Ref No = " + LNO + " Ref Date = " + EITLERPGLOBAL.formatDate(LDate) + " BookCode = " + BookCode
                    + " PONo = "+ PONo + " PO DATE = " + EITLERPGLOBAL.formatDate(PODate) + " Amount = " + Amount);
                    NotFoundCounter++;
                }
                rsRecord.next();
            }
            System.out.println("Total Record = "+ Counter + " Found Record = " + FoundCounter + " Not Found Record = " + NotFoundCounter);
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdFindVoucherNo0809ActionPerformed
    
    private void cmdFindVoucherNo060708ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFindVoucherNo060708ActionPerformed
        // TODO add your handling code here:
        ResultSet rsRecord = null;
        String pVoucherNo = "",VoucherDate = "", LegacyNo="",LegacyDate="",LNO="",LDate="",NewLDate="",BookCode="";
        String PONo = "",PODate="",BillNo="",BillDate="", NewVoucherNo="", NewVoucherDate="",Qry="";
        String MainAccountCode="",PartyCode = "";
        int Counter=0,FoundCounter = 0,NotFoundCounter = 0, EntryNo=0,SrNo=0, CompanyId=0;
        
        try {
            
            String SQL = "SELECT MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE, PO_NO,PO_DATE,PAY_DAYS,BILL_NO,BILL_DATE, " +
            "BOOK_CODE,VOUCHER_NO,VOUCHER_DATE,LEGACY_NO,LPAD(LEGACY_NO,6,0) AS L_NO,LEGACY_DATE, " +
            "DATE_FORMAT(LEGACY_DATE,'%y%m%d') AS L_DATE,AMOUNT,EFFECT, " +
            "DATE_FORMAT(LEGACY_DATE,'%d/%m/%Y') AS NEW_L_DATE, ENTRY_NO, SR_NO, COMPANY_ID " +
            "FROM D_FIN_OPENING_OUTSTANDING_DETAIL WHERE PO_DATE>='2007-04-01' AND PO_DATE<='2008-03-31' " +
            "ORDER BY PO_DATE ";
            
            //rsRecord = data.getResult(SQL,FinanceGlobal.FinURL);
            rsRecord.first();
            
            while(!rsRecord.isAfterLast()) {
                LNO = rsRecord.getString("L_NO");
                LDate = rsRecord.getString("L_DATE");
                NewLDate = rsRecord.getString("NEW_L_DATE");
                BookCode = rsRecord.getString("BOOK_CODE");
                pVoucherNo = "M"+LDate+BookCode;
                PONo = rsRecord.getString("PO_NO");
                PODate = rsRecord.getString("PO_DATE");
                MainAccountCode = rsRecord.getString("MAIN_ACCOUNT_CODE");
                PartyCode = rsRecord.getString("SUB_ACCOUNT_CODE");
                EntryNo = rsRecord.getInt("ENTRY_NO");
                SrNo = rsRecord.getInt("SR_NO");
                CompanyId= rsRecord.getInt("COMPANY_ID");
                BillNo = rsRecord.getString("BILL_NO");
                BillDate = rsRecord.getString("BILL_DATE");
                Counter++;
                //SQL = "SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO LIKE '"+pVoucherNo+"%"+LNO+"'";
                SQL = "SELECT * FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO LIKE '"+pVoucherNo+"%"+LNO+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                "AND B.MAIN_ACCOUNT_CODE='125019' AND A.VOUCHER_NO=B.VOUCHER_NO";
                if(data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    NewVoucherNo = data.getStringValueFromDB("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO LIKE '"+pVoucherNo+"%"+LNO+"'",FinanceGlobal.FinURL);
                    NewVoucherDate = data.getStringValueFromDB("SELECT VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO LIKE '"+pVoucherNo+"%"+LNO+"'",FinanceGlobal.FinURL);
                    
                    /*data.Execute("UPDATE D_FIN_VOUCHER_DETAIL SET PO_NO='"+PONo+"', PO_DATE='"+PODate+"' , INVOICE_NO='"+BillNo+"' , INVOICE_DATE ='"+BillDate+"' " +
                    "WHERE VOUCHER_NO ='"+NewVoucherNo+"'",FinanceGlobal.FinURL);*/
                    /*data.Execute("UPDATE D_FIN_VOUCHER_DETAIL_EX SET PO_NO='"+PONo+"', PO_DATE='"+PODate+"' , INVOICE_NO='"+BillNo+"' , INVOICE_DATE ='"+BillDate+"' " +
                    "WHERE VOUCHER_NO ='"+NewVoucherNo+"'",FinanceGlobal.FinURL);*/
                    
                    Qry =  "UPDATE D_FIN_OPENING_OUTSTANDING_DETAIL "+
                    "SET VOUCHER_NO ='"+NewVoucherNo+"' , VOUCHER_DATE ='"+NewVoucherDate+"'  "+
                    "WHERE PO_NO='"+PONo+"' AND PO_DATE='"+PODate+"' "+
                    "AND MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' "+
                    "AND ENTRY_NO = "+EntryNo+ " AND COMPANY_ID= "+CompanyId+ " AND SR_NO= "+SrNo;
                    
                    //data.Execute(Qry, FinanceGlobal.FinURL);
                    
                    FoundCounter++;
                    System.out.println("Record = " + Counter + " Found : VoucherNo = " +  NewVoucherNo + " PONo = "+ PONo +
                    " PO DATE = " + PODate + " Main Code = " + MainAccountCode +  " PartyCode = " + PartyCode);
                } else {
                    Qry = "UPDATE D_FIN_OPENING_OUTSTANDING_DETAIL SET VOUCHER_NO='', VOUCHER_DATE='0000-00-00' " +
                    "WHERE PO_NO='"+PONo+"' AND PO_DATE='"+PODate+"' "+
                    "AND MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' "+
                    "AND ENTRY_NO = "+EntryNo+ " AND COMPANY_ID= "+CompanyId+ " AND SR_NO= "+SrNo;
                    //data.Execute(Qry, FinanceGlobal.FinURL);
                    /*System.out.println("Record = " + Counter + " Not Found : Main Code = " + MainAccountCode + " PartyCode = " + PartyCode
                    + " Ref No = " + LNO + " Ref Date = " + NewLDate + " BookCode = " + BookCode
                    + " PONo = "+ PONo + " PO DATE = " + EITLERPGLOBAL.formatDate(PODate)); */
                    NotFoundCounter++;
                }
                rsRecord.next();
            }
            System.out.println("Total Record = "+ Counter + " Found Record = " + FoundCounter + " Not Found Record = " + NotFoundCounter);
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdFindVoucherNo060708ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //FindPODate();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDetailActionPerformed
        // TODO add your handling code here:
        InsertIntoDetail();
    }//GEN-LAST:event_cmdDetailActionPerformed
    
    private void cmdPo_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPo_NoActionPerformed
        // TODO add your handling code here:
        //Print_PO();
        /*ResultSet rsOutStanding = null;
        int SrNo = 0;
        int s_no=0;
        try {
            rsOutStanding = data.getResult("SELECT * FROM D_FIN_OPENING_OUTSTANDING_DETAIL ORDER BY PO_DATE",FinanceGlobal.FinURL);
            while(!rsOutStanding.isAfterLast()) {
                SrNo++;
                s_no = rsOutStanding.getInt("SR_NO");
                data.Execute("UPDATE D_FIN_OPENING_OUTSTANDING_DETAIL SET SR_NO="+SrNo+ " WHERE SR_NO="+s_no,FinanceGlobal.FinURL);
                rsOutStanding.next();
            }
        } catch(Exception e) {
         
        }*/
        
    }//GEN-LAST:event_cmdPo_NoActionPerformed
    
    private void cmdStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStartActionPerformed
        // TODO add your handling code here:
        ImportData();
    }//GEN-LAST:event_cmdStartActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar BAR;
    private javax.swing.JButton cmdCheckVoucher;
    private javax.swing.JButton cmdCorrectVoucher;
    private javax.swing.JButton cmdDebitNote;
    private javax.swing.JButton cmdDecInv;
    private javax.swing.JButton cmdDecVoucher;
    private javax.swing.JButton cmdDetail;
    private javax.swing.JButton cmdFileToData;
    private javax.swing.JButton cmdFind09Adj;
    private javax.swing.JButton cmdFind09Voucher;
    private javax.swing.JButton cmdFind09inos;
    private javax.swing.JButton cmdFindAdjVoucher;
    private javax.swing.JButton cmdFindDum;
    private javax.swing.JButton cmdFindMisMatch;
    private javax.swing.JButton cmdFindOther;
    private javax.swing.JButton cmdFindVoucherNo060708;
    private javax.swing.JButton cmdFindVoucherNo0809;
    private javax.swing.JButton cmdFinddebitVoucher;
    private javax.swing.JButton cmdImportInOutstanding;
    private javax.swing.JButton cmdOSBalance;
    private javax.swing.JButton cmdOSVoucher;
    private javax.swing.JButton cmdPo_No;
    private javax.swing.JButton cmdPostVoucher;
    private javax.swing.JButton cmdSameLink;
    private javax.swing.JButton cmdStart;
    private javax.swing.JButton cmdUpdateRec;
    private javax.swing.JButton cmdUpdateSrno;
    private javax.swing.JButton cmdUpdateVouchers;
    private javax.swing.JButton cmdtmp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblDisplay;
    private javax.swing.JTextField txtFile;
    // End of variables declaration//GEN-END:variables
    
    private void FindMisMatchbyvoucher() {
        ResultSet rsOutStanding = null, rsVoucher = null, rsOpeningDetail=null;
        String TrDate = "",RefNo="",PartyCode="",LegacyNo="",LegacyDate="",BookCode="",MainAccountCode="210072",LinkNo="",Effect="",YR1="",YR2="";
        double Amount = 0;
        int Counter = 0 ;
        int FCounter = 0 ;
        int MFCounter = 0 ;
        int NFCounter = 0 ;
        try {
            rsOutStanding= data.getResult("SELECT * FROM D_FIN_DR_OUTSTANDING_OPENING " +
            "WHERE TR_DATE>='2010-04-01' " +
            //"WHERE TR_DATE>='2006-04-01' AND TR_DATE<='2007-03-31' " +
            "ORDER BY PARTY_CD",FinanceGlobal.FinURL); //AND TR_DATE<='2010-03-31'
            while(!rsOutStanding.isAfterLast()) {
                if(rsOutStanding.getString("REC_TYPE").equals("1")) {
                    Effect = "D";
                } else {
                    Effect = "C";
                }
                Counter++;
                TrDate = rsOutStanding.getString("TR_DATE");
                BookCode=rsOutStanding.getString("BOOK_CODE");
                RefNo = rsOutStanding.getString("REF_NUM");
                LinkNo = rsOutStanding.getString("LINK_NO");
                YR1 = rsOutStanding.getString("YR1");
                YR2 = rsOutStanding.getString("YR2");
                LegacyNo = "M" + TrDate.substring(2,4)+TrDate.substring(5,7)+TrDate.substring(8,10)+BookCode;
                PartyCode = rsOutStanding.getString("PARTY_CD");
                Amount = EITLERPGLOBAL.round(rsOutStanding.getDouble("AMOUNT"),2);
                String SQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.SR_NO FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND A.VOUCHER_DATE='"+TrDate+"' " + //AND A.VOUCHER_NO LIKE '"+LegacyNo+"%"+RefNo+"'
                "AND B.MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND  B.EFFECT='"+Effect+"' AND A.BOOK_CODE='"+BookCode+"' AND B.AMOUNT="+Amount;
                rsVoucher = data.getResult(SQL,FinanceGlobal.FinURL);
                rsVoucher.first();
                rsVoucher.last();
                int Count = rsVoucher.getRow();
                rsVoucher.first();
                if(Count==1) {
                    //VOUCHER FOUND
                    FCounter++;
                    //System.out.println("F : PartyCode : " + PartyCode + " LinkNo : " + LinkNo + " Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Voucher No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("VOUCHER_NO")," ",20) + " Voucher Date : " + EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE")) + " Amount : " + Amount);
                } else if (Count>1) {
                    //System.out.println("Multiple Voucher Found : RefNo : " + RefNo + " LinkNo : " + LinkNo + " PartyCode : " + PartyCode + " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate));
                    //MULTIPLE FOUND
                    MFCounter++;
                    /*while(!rsVoucher.isAfterLast()) {
                        System.out.println("MF : PartyCode : " + PartyCode + " LinkNo : " + LinkNo + " Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Voucher No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("VOUCHER_NO")," ",20) + " Voucher Date : " + EITLERPGLOBAL.formatDate(rsVoucher.getString("VOUCHER_DATE")) + " Voucher Sr No : " + EITLERPGLOBAL.padLeftEx(rsVoucher.getString("SR_NO")," ",3) +  " Amount : " + Amount);
                        rsVoucher.next();
                    }*/
                } else {
                    // VOUCHER NOT FOUND
                    NFCounter++;
                    //System.out.println("NF : PartyCode : " + PartyCode + " LinkNo : " + LinkNo + " YR1 : "+ YR1 + " YR2 : "+ YR2 +" Legacy No : " + RefNo +  " Legacy Date : " + EITLERPGLOBAL.formatDate(TrDate) + " Book Code : " + BookCode + " Effect : " + Effect + " Amount : " + Amount);
                    
                }
                rsOutStanding.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.println("*** FINISHED ***");
    }
    
    
    
    private void InsertIntoDetail() {
        
        String PONo = "",PODate="",PartyCode="",MainAccountCode="", BillNo="", BillDate="", BookCode="", LegacyNo="", LegacyDate="",POAL="",NewPONo="";
        int SrNo = 0, CompanyID = 0, PayDays=0,PayTerm=0, RT=0;
        double Amount=0;
        String URLF="jdbc:mysql://200.0.0.227:3306/FINANCE";
        String URLB="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
        String URLA="jdbc:mysql://200.0.0.227:3306/DINESHMILLSA";
        
        Connection objConn = null;
        Statement Stmt = null;
        ResultSet rsOutStanding = null, rsVoucher = null, rsOpeningDetail=null;
        
        
        try {
            
            //data.Execute("DELETE FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=3 ",FinanceGlobal.FinURL);
            
            objConn = data.getConn(FinanceGlobal.FinURL);
            Stmt = objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rsOpeningDetail=Stmt.executeQuery("SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE INVOICE_TYPE=3 LIMIT 1");
            rsOpeningDetail.first();
            
            rsOutStanding= data.getResult("SELECT * FROM D_FIN_OUTSTANDING_OPENING ORDER BY TR_DATE",FinanceGlobal.FinURL);
            rsOutStanding.first();
            
            while(!rsOutStanding.isAfterLast()) {
                
                CompanyID = 0;
                Amount = 0;
                PayDays = 0;
                PayTerm=0;
                RT=0;
                //----------------------------------------------------------------------
                
                RT = rsOutStanding.getInt("RT");
                PONo = rsOutStanding.getString("PO_NO");
                PODate = rsOutStanding.getString("PO_DATE");
                POAL = rsOutStanding.getString("PO_AL");
                MainAccountCode = rsOutStanding.getString("ACC_CODE").trim();
                PartyCode = rsOutStanding.getString("PRT_CODE").trim();
                Amount = rsOutStanding.getDouble("TR_AMT");
                PayDays = rsOutStanding.getInt("PAY_DAYS");
                PayTerm = rsOutStanding.getInt("PAY_TERM");
                BillNo = rsOutStanding.getString("BILL_AL").trim() +rsOutStanding.getString("BILL_NO").trim();
                BillDate = rsOutStanding.getString("BILL_DT");
                BookCode = rsOutStanding.getString("TR_CODE");
                LegacyNo = rsOutStanding.getString("TR_REF");
                LegacyDate = rsOutStanding.getString("TR_DATE");
                //GENETRATE PO NO
                if(PartyCode.equals("701071")) {
                    System.out.println();
                }
                /*if(po_no.trim().equals("999999")) {
                    String qry="SELECT PO_NO FROM D_FIN_VOUCHER_DETAIL WHERE SUB_ACCOUNT_CODE='"+party_code+"' AND AMOUNT = "+amount+" AND VOUCHER_TYPE="+ 1 + " AND EFFECT='C' AND IS_DEDUCTION<>1 ";
                    new_po_no =data.getStringValueFromDB(qry,URLF);
                } else {*/
                
                if(!PONo.trim().equals("999999")) {
                    if(POAL.equals("B ")) {
                        NewPONo = "B" + PONo.substring(1);
                    } else if(POAL.equals("W ")) {
                        NewPONo = "W" + PONo.substring(0);
                    } else if(POAL.equals("I ")) {
                        NewPONo = "I/" + PONo.substring(0);
                    } else if(POAL.equals("P ")) {
                        NewPONo = "P" + PONo.substring(0);
                    } else if(POAL.equals("D ")) {
                        NewPONo = "D-" + PONo.substring(0);
                    } else if(POAL.equals("S ")) {
                        NewPONo = "S/" + PONo.substring(1);
                    } else if(POAL.trim().equals("RM")) {
                        NewPONo = "RM" + PONo.substring(0);
                    } else if(POAL.trim().equals("CA")) {
                        NewPONo = "CA0" + PONo.substring(1);
                    } else if(POAL.equals("G ")) {
                        NewPONo = PONo.substring(0,1) + "0" + PONo.substring(1);
                    } else if(POAL.equals("A ")) {
                        NewPONo = "A" + PONo.substring(1);
                    } else if(POAL.trim().equals("CP")) {
                        NewPONo = "A" + "0" + PONo.substring(1);
                    } else if(POAL.trim().equals("") || POAL.trim().equals(null)) {
                        NewPONo = PONo.trim();
                    } else {
                        NewPONo = PONo.trim();
                    }
                } else {
                    rsOutStanding.next();
                    continue;
                }
                
                //}
                
                //----------------------------------------------------------------------
                //FIND PO_NO, PO_DATE
                
                //FIND VOUCHER_NO VOUCHER_DATE
                String Qry = "";
                String VoucherNo = "";
                String VoucherDate = "0000-00-00";
                String tmpPONo = "";
                if(!NewPONo.equals("")) {
                    Qry = "SELECT A.VOUCHER_NO AS V_NO, A.VOUCHER_DATE AS V_DATE, B.REF_COMPANY_ID AS C_ID, B.PO_NO, B.PO_DATE  FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B "+
                    "WHERE B.PO_NO LIKE '" + NewPONo + "%' AND B.SUB_ACCOUNT_CODE='"+ PartyCode +"' AND A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_DATE <='2009-12-31' AND B.AMOUNT="+Amount + " " +
                    "AND A.APPROVED=1 AND A.CANCELLED=0";
                    
                    rsVoucher = data.getResult(Qry,URLF);
                    rsVoucher.first();
                    if(rsVoucher.getRow() > 0) {
                        if(!rsVoucher.isAfterLast()) {
                            VoucherNo = rsVoucher.getString("V_NO");
                            VoucherDate = rsVoucher.getString("V_DATE");
                            CompanyID = rsVoucher.getInt("C_ID");
                            tmpPONo = rsVoucher.getString("PO_NO");
                            if(PODate.equals("")) {
                                PODate = rsVoucher.getString("PO_DATE");
                            }
                        }
                    }
                }
                //END OF VOUCHER_NO VOUCHER_DATE
                
                if(PODate.equals("")) {
                    PODate= "0000-00-00";
                }
                
                if(CompanyID==0) {
                    CompanyID=2;
                }
                if(!tmpPONo.equals("")) {
                    NewPONo = tmpPONo;
                }
                //SrNo++;
                SrNo = data.getIntValueFromDB("SELECT MAX(SR_NO) FROM D_FIN_OPENING_OUTSTANDING_DETAIL ",FinanceGlobal.FinURL) + 1;
                
                rsOpeningDetail.moveToInsertRow();
                rsOpeningDetail.updateInt("COMPANY_ID", CompanyID);
                rsOpeningDetail.updateInt("ENTRY_NO", 1);
                rsOpeningDetail.updateInt("SR_NO",SrNo);
                rsOpeningDetail.updateString("MAIN_ACCOUNT_CODE",MainAccountCode);
                rsOpeningDetail.updateString("SUB_ACCOUNT_CODE",PartyCode);
                rsOpeningDetail.updateString("PO_NO",NewPONo);
                rsOpeningDetail.updateString("PO_DATE",PODate);
                rsOpeningDetail.updateInt("PAY_DAYS",PayDays);
                rsOpeningDetail.updateInt("PAY_TERM",PayTerm);
                rsOpeningDetail.updateString("BILL_NO",BillNo);
                rsOpeningDetail.updateString("BILL_DATE",BillDate);
                rsOpeningDetail.updateString("VOUCHER_NO",VoucherNo);
                rsOpeningDetail.updateString("VOUCHER_DATE",VoucherDate);
                rsOpeningDetail.updateString("LEGACY_NO",LegacyNo);
                rsOpeningDetail.updateString("LEGACY_DATE",LegacyDate);
                rsOpeningDetail.updateDouble("AMOUNT",Amount);
                if (RT==1) {
                    rsOpeningDetail.updateString("EFFECT","D");
                }
                else if (RT==2) {
                    rsOpeningDetail.updateString("EFFECT","C");
                }
                
                rsOpeningDetail.updateString("BOOK_CODE",BookCode);
                rsOpeningDetail.updateString("CREATED_BY","Admin");
                rsOpeningDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                rsOpeningDetail.updateString("MODIFIED_BY","Admin");
                rsOpeningDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                rsOpeningDetail.updateBoolean("CHANGED",true);
                rsOpeningDetail.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                rsOpeningDetail.insertRow();
                rsOutStanding.next();
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void ImportData() {
        boolean Done=false;
        long Counter=0;
        ResultSet rsTmp=null;
        try {
            Connection objConn=data.getConn("jdbc:mysql://200.0.0.227:3306/FINANCE");
            Statement stmt = objConn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            Statement stDel = objConn.createStatement();
            
            if(!stDel.execute("DELETE FROM D_FIN_DR_OUTSTANDING_OPENING")) {
                System.out.println("All Record Delete from D_FIN_OUTSTANDING_OPENING");
            } else {
                System.out.println("Record Not  Delete from D_FIN_DR_OUTSTANDING_OPENING");
            }
            
            rsTmp = stmt.executeQuery("SELECT * FROM D_FIN_DR_OUTSTANDING_OPENING ");
            int Pointer=0;
            
            BufferedReader aFile = new BufferedReader(new FileReader(new File(txtFile.getText())));
            
            while(!Done) {
                Counter++;
                
                String FileRecord=aFile.readLine();
                Pointer=0;
                System.out.print(Counter+ " ");
                if(Counter==381) {
                    boolean halt=true;
                }
                rsTmp.moveToInsertRow();
                rsTmp.updateLong("SR_NO",Counter);
                rsTmp.updateInt("REC_TYPE",Integer.parseInt(FileRecord.substring(Pointer, Pointer+2))); Pointer+=2;
                rsTmp.updateString("PARTY_CD",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                rsTmp.updateString("LINK_NO",FileRecord.substring(Pointer,Pointer+4)); Pointer+=4;
                rsTmp.updateString("YR1",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("YR2",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                
                String TrDate = FileRecord.substring(Pointer+4,Pointer+6)+"-"+FileRecord.substring(Pointer+2,Pointer+4)+"-"+FileRecord.substring(Pointer,Pointer+2);
                if(Integer.parseInt(FileRecord.substring(Pointer+4,Pointer+6))<50) {
                    TrDate = "20"+FileRecord.substring(Pointer+4,Pointer+6)+"-"+FileRecord.substring(Pointer+2,Pointer+4)+"-"+FileRecord.substring(Pointer,Pointer+2);
                } else {
                    TrDate = "19"+FileRecord.substring(Pointer+4,Pointer+6)+"-"+FileRecord.substring(Pointer+2,Pointer+4)+"-"+FileRecord.substring(Pointer,Pointer+2);
                }
                rsTmp.updateString("TR_DATE",TrDate); Pointer+=6;
                
                String Amount=FileRecord.substring(Pointer,Pointer+10)+"."+FileRecord.substring(Pointer+10,Pointer+12);
                rsTmp.updateDouble("AMOUNT",Double.parseDouble(Amount)); Pointer+=12;
                
                rsTmp.updateString("BOOK_CODE",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                
                rsTmp.updateString("REF_AL",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("REF_NUM",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                rsTmp.updateString("DATE_1",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                
                rsTmp.updateString("CH_CD",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("IND",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("RT_DOC",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("BILL_AL",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("BN_NUM",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                rsTmp.updateString("BN_IN",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("RT_IN",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("ER_FL",FileRecord.substring(Pointer,Pointer+1)); Pointer+=1;
                
                rsTmp.updateString("TRN_CD",FileRecord.substring(Pointer,Pointer+3)); Pointer+=3;
                rsTmp.updateString("BALE_NO",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                rsTmp.updateString("DISP_IND",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("LR_AL",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                rsTmp.updateString("LR_NUM",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                rsTmp.updateString("FIL",FileRecord.substring(Pointer,Pointer+1)); Pointer+=1;
                rsTmp.insertRow();
                
                frmImportOutstanding.callFinalizestage();
                System.out.println("Inserting Record No:-" + Counter + " Pointer = " + Pointer);
            }
        } catch(Exception e) {
            //e.printStackTrace();
            Done=true;
        }
        System.out.println("*** Fineshed *** ");
    }
    
    private void FindPODate() {
        String po_no ="";
        String po_date_223="0000-00-00";
        String po_date_local="0000-00-00";
        String URLF="jdbc:mysql://200.0.0.227:3306/FINANCE";
        String URLB="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
        String URLA="jdbc:mysql://200.0.0.227:3306/DINESHMILLSA";
        Statement stmt = null;
        ResultSet rsData = null;
        int Found = 0;
        int NotFound = 0;
        int CompanyID = 0;
        int SrNo = 0;
        try {
            rsData = data.getResult("SELECT * FROM D_FIN_OPENING_OUTSTANDING_DETAIL ORDER BY SR_NO",FinanceGlobal.FinURL);
            rsData.first();
            while(!rsData.isAfterLast()) {
                SrNo++;
                po_no = rsData.getString("PO_NO");
                
                po_date_223 = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+po_no+"' AND APPROVED=1 AND CANCELLED=0 ",URLB);
                if(po_date_223.equals("") || po_date_223.equals("0000-00-00")) {
                    po_date_223 = data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+po_no+"' AND APPROVED=1 AND CANCELLED=0 ",URLA);
                }
                po_date_local = rsData.getString("PO_DATE");//data.getStringValueFromDB("SELECT PO_DATE FROM D_PUR_PO_HEADER WHERE PO_NO='"+po_no+"'",FinanceGlobal.FinURL);
                if(po_date_223.equals(po_date_local)) {
                    Found++;
                } else {
                    NotFound++;
                    System.out.println("Record No "+ SrNo +" not found PO_NO = " + po_no + " PO_DATE_223 = "+po_date_223+" PO_DATE_LOCAL = " + po_date_local);
                }
                rsData.next();
            }
        } catch(Exception e) {
        }
        System.out.println("Record Found "+ Found +". Record Not Fount " + NotFound);
    }
    
    private void Print_PO(){
        try {
            ResultSet rs;
            String URL="jdbc:mysql://localhost:3306/FINANCE";
            rs = data.getResult("SELECT * FROM D_FIN_OUTSTANDING_OPENING",URL);
            String po_no ="";
            String po_al ="";
            String new_po_no="",party_code="",amount="",ref_no="";
            String tmp = "",qry="";
            rs.first();
            int cnt = 1;
            while(!rs.isAfterLast()) {
                po_no = rs.getString("PO_NO");
                po_al = rs.getString("PO_AL");
                party_code=rs.getString("PRT_CODE").trim();
                amount=rs.getString("TR_AMT").trim();
                
                if(po_no.trim().equals("999999")) {
                    
                    qry="SELECT PO_NO FROM D_FIN_VOUCHER_DETAIL WHERE SUB_ACCOUNT_CODE='"+party_code+"' AND AMOUNT = '"+amount+"'  ";
                    new_po_no =data.getStringValueFromDB(qry,URL);
                    
                    System.out.println("CNT:-"+ cnt + "~"  + po_al + "~" +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                }
                else {
                    if(po_al.trim().equals("B")) {
                        new_po_no = "B" + po_no.substring(1);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~" +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("W")) {
                        new_po_no = "W" + po_no.substring(0);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("I")) {
                        new_po_no = "I/" + po_no.substring(0);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("P")) {
                        new_po_no = "P" + po_no.substring(0);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("D")) {
                        new_po_no = "D-" + po_no.substring(0);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("S")) {
                        new_po_no = "S/" + po_no.substring(0);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("RM")) {
                        new_po_no = "RM" + po_no.substring(0);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("CA")) {
                        new_po_no = "CA" + po_no.substring(1);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("G")) {
                        new_po_no = po_no.substring(0,1) + "0" + po_no.substring(1);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("A")) {
                        new_po_no = "A" + po_no.substring(0);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals("CP")) {
                        new_po_no = "A" + "0" + po_no.substring(1);
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else if(po_al.trim().equals(" ") || po_al.trim().equals(null)) {
                        new_po_no = po_no.trim();
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                    else {
                        new_po_no = po_no.trim();
                        System.out.println("CNT:-"+ cnt + "~" + po_al + "~"  +po_no + "~" + new_po_no + "~" + party_code + "~" + amount);
                    }
                }
                
                
                cnt++;
                rs.next();
            }
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    public static void callFinalizestage() {
        long i=0;
        long l=0;
        for(i=0;i<100000;i++) {
            l=i;
        }
    }
}
