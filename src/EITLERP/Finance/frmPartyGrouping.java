/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  nitin
 */
/*<APPLET CODE=frmInward.class HEIGHT=500 WIDTH=665></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import javax.swing.text.*;
import EITLERP.Utils.*;
import java.sql.*;
import java.net.*;
import EITLERP.*;


public class frmPartyGrouping extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsPartyGrouping objPartyGrouping;
    private EITLTableModel DataModelSubParty;
    private EITLComboModel cmbTypeModel;
    
    private int SelHierarchyID=0; //Selected Hierarchy
    private int lnFromID=0;
    private String SelPrefix=""; //Selected Prefix
    private String SelSuffix=""; //Selected Prefix
    private int FFNo=0;
    
    private boolean Updating=false;
    
    private String theDocNo="";
    
    private boolean IsGenerating=false;
    private EITLComboModel cmbHierarchyModel;
    /** Creates new form frmTemplate */
    
    
    public void init() {
        System.gc();
        setSize(773,525);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        GenerateCombos();
        objPartyGrouping=new clsPartyGrouping();
        
        SetMenuForRights();
        
        if(getName().equals("Link")) {
            
        }
        else {
            if(objPartyGrouping.LoadData(EITLERPGLOBAL.gCompanyID)) {
                objPartyGrouping.MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while loading data. Error is "+objPartyGrouping.LastError);
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        txtAuditRemarks = new javax.swing.JTextField();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        Header = new javax.swing.JTabbedPane();
        Tab1 = new javax.swing.JPanel();
        lblGroupMainParty = new javax.swing.JLabel();
        txtGroupMainParty = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableSubParty = new javax.swing.JTable();
        cmdAdd = new javax.swing.JButton();
        cmdRemove = new javax.swing.JButton();
        lblGroupSubCodeList = new javax.swing.JLabel();
        txtGroupSubParty = new javax.swing.JTextField();
        lblGroupSubParty = new javax.swing.JLabel();
        lblGroupSubPartyName = new javax.swing.JLabel();
        lblSelectType = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        lblGroupMainPartyName = new javax.swing.JLabel();
        cmdGroupRemove = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();

        txtAuditRemarks.setEnabled(false);

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 650, 40);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("PARTY GROUPING");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 650, 25);

        Tab1.setLayout(null);

        Tab1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        lblGroupMainParty.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGroupMainParty.setText("Group Main Party :");
        lblGroupMainParty.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Tab1.add(lblGroupMainParty);
        lblGroupMainParty.setBounds(5, 40, 120, 15);

        txtGroupMainParty.setName("PARTY_ID");
        txtGroupMainParty.setEnabled(false);
        txtGroupMainParty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGroupMainPartyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGroupMainPartyFocusLost(evt);
            }
        });
        txtGroupMainParty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGroupMainPartyKeyPressed(evt);
            }
        });

        Tab1.add(txtGroupMainParty);
        txtGroupMainParty.setBounds(130, 40, 120, 20);

        TableSubParty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TableSubParty);

        Tab1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 180, 500, 150);

        cmdAdd.setMnemonic('A');
        cmdAdd.setText("Add ");
        cmdAdd.setEnabled(false);
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        Tab1.add(cmdAdd);
        cmdAdd.setBounds(10, 110, 100, 25);

        cmdRemove.setMnemonic('L');
        cmdRemove.setText("Remove");
        cmdRemove.setEnabled(false);
        cmdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveActionPerformed(evt);
            }
        });

        Tab1.add(cmdRemove);
        cmdRemove.setBounds(130, 110, 100, 25);

        lblGroupSubCodeList.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGroupSubCodeList.setText("Sub Party List :");
        lblGroupSubCodeList.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Tab1.add(lblGroupSubCodeList);
        lblGroupSubCodeList.setBounds(10, 150, 120, 15);

        txtGroupSubParty.setName("PARTY_ID");
        txtGroupSubParty.setEnabled(false);
        txtGroupSubParty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGroupSubPartyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGroupSubPartyFocusLost(evt);
            }
        });
        txtGroupSubParty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGroupSubPartyKeyPressed(evt);
            }
        });

        Tab1.add(txtGroupSubParty);
        txtGroupSubParty.setBounds(130, 70, 120, 20);

        lblGroupSubParty.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGroupSubParty.setText("Group Sub Party :");
        lblGroupSubParty.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Tab1.add(lblGroupSubParty);
        lblGroupSubParty.setBounds(5, 70, 120, 15);

        lblGroupSubPartyName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGroupSubPartyName.setText("...");
        lblGroupSubPartyName.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Tab1.add(lblGroupSubPartyName);
        lblGroupSubPartyName.setBounds(260, 70, 370, 20);

        lblSelectType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSelectType.setText("Select Type :");
        Tab1.add(lblSelectType);
        lblSelectType.setBounds(5, 10, 120, 15);

        cmbType.setEnabled(false);
        cmbType.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTypeFocusGained(evt);
            }
        });

        Tab1.add(cmbType);
        cmbType.setBounds(130, 10, 180, 24);

        lblGroupMainPartyName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGroupMainPartyName.setText("...");
        Tab1.add(lblGroupMainPartyName);
        lblGroupMainPartyName.setBounds(260, 40, 370, 20);

        cmdGroupRemove.setMnemonic('L');
        cmdGroupRemove.setText("Remove Group");
        cmdGroupRemove.setEnabled(false);
        cmdGroupRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGroupRemoveActionPerformed(evt);
            }
        });

        Tab1.add(cmdGroupRemove);
        cmdGroupRemove.setBounds(400, 10, 160, 25);

        Header.addTab("Policy Party Grouping", Tab1);

        getContentPane().add(Header);
        Header.setBounds(0, 70, 650, 400);
        Header.getAccessibleContext().setAccessibleName("Scheme Details");
        Header.getAccessibleContext().setAccessibleDescription("Scheme Details");

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 470, 650, 22);

    }//GEN-END:initComponents

    private void cmdGroupRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGroupRemoveActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(this,"Are you sure you want to DELETE this Group record ?","Confirmation",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
            if(JOptionPane.showConfirmDialog(this,"Are you definitely sure to DELETE this Group record ?","Confirmation",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
                if(objPartyGrouping.GroupDelete()) {
                    Cancel();
                    objPartyGrouping.LoadData(EITLERPGLOBAL.gCompanyID);
                    MoveLast();
                    DisplayData();
                }
                else {
                    JOptionPane.showMessageDialog(null,"Error occured while deleting. Error is"+objPartyGrouping.LastError);
                }
            }
        }
    }//GEN-LAST:event_cmdGroupRemoveActionPerformed
    
    private void cmbTypeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTypeFocusGained
        // TODO add your handling code here:
        ShowMessage("Select Invoice Type");
    }//GEN-LAST:event_cmbTypeFocusGained
    
    private void txtGroupSubPartyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGroupSubPartyFocusLost
        // TODO add your handling code here:
        try {
            String SQL = "SELECT PARTY_CODE,PARTY_NAME FROM FINANCE.D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE = '"+ EITLERPGLOBAL.getCombostrCode(cmbType) +"' " +
            "AND APPROVED = 1 AND CANCELLED = 0 AND PARTY_CODE='"+txtGroupMainParty.getText().trim()+"' ";
            if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Wrong party entered in group main party");
                txtGroupSubParty.setText("");
                txtGroupMainParty.requestFocus();
                return;
            }
            if(!txtGroupSubParty.getText().trim().equals("")) {
                lblGroupSubPartyName.setText(clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType),txtGroupSubParty.getText().trim()));
            }
        } catch(Exception e) {
            
        }
    }//GEN-LAST:event_txtGroupSubPartyFocusLost
    
    private void txtGroupSubPartyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupSubPartyKeyPressed
        // TODO add your handling code here:
        try {
            if(EditMode==EITLERPGLOBAL.ADD || EditMode==EITLERPGLOBAL.EDIT) {
                if(evt.getKeyCode()==112) {
                    LOV aList=new LOV();
                    if(EITLERPGLOBAL.getCombostrCode(cmbType).equals("")) {
                        JOptionPane.showMessageDialog(null,"Please Select Invoice Type.");
                        return;
                    }
                    aList.SQL="SELECT PARTY_CODE,PARTY_NAME FROM FINANCE.D_FIN_PARTY_MASTER " +
                    "WHERE MAIN_ACCOUNT_CODE = '"+ EITLERPGLOBAL.getCombostrCode(cmbType) +"' AND APPROVED = 1 AND CANCELLED = 0 " +
                    "AND PARTY_CODE<>'"+txtGroupMainParty.getText().trim()+"' " +
                    "ORDER BY PARTY_CODE";
                    aList.ReturnCol=1;
                    aList.ShowReturnCol=true;
                    aList.DefaultSearchOn=2;
                    aList.UseSpecifiedConn=true;
                    aList.dbURL=FinanceGlobal.FinURL;
                    if(aList.ShowLOV()) {
                        txtGroupSubParty.setText(aList.ReturnVal);
                        lblGroupSubPartyName.setText(clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType),aList.ReturnVal));
                    }
                }
            }
        } catch(Exception e) {
            
        }
    }//GEN-LAST:event_txtGroupSubPartyKeyPressed
    
    private void txtGroupSubPartyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGroupSubPartyFocusGained
        // TODO add your handling code here:
        ShowMessage("Press F1 for Party List...");
    }//GEN-LAST:event_txtGroupSubPartyFocusGained
    
    private void txtGroupMainPartyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGroupMainPartyFocusGained
        // TODO add your handling code here:
        ShowMessage("Press F1 for Party List...");
    }//GEN-LAST:event_txtGroupMainPartyFocusGained
    
    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        // TODO add your handling code here:
        try {
            
            if(EITLERPGLOBAL.getComboCode(cmbType)==0) {
                JOptionPane.showMessageDialog(null,"Select Invoice Type.");
                return;
            }
            
            if(txtGroupMainParty.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null,"Please Insert Group Main Party.");
                return;
            } else if(data.IsRecordExist("SELECT PARTY_CODE FROM D_FIN_PARTY_MASTER WEHRE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE='"+EITLERPGLOBAL.getCombostrCode(cmbType)+"' AND PARTY_CODE='"+txtGroupMainParty.getText().trim()+"' ",FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Wrong Group Main Party Code.");
                return;
            }
            
            if(txtGroupSubParty.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null,"Please Insert Group Sub Party.");
                return;
            } else if(data.IsRecordExist("SELECT PARTY_CODE FROM D_FIN_PARTY_MASTER WEHRE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE='"+EITLERPGLOBAL.getCombostrCode(cmbType)+"' AND PARTY_CODE='"+txtGroupSubParty.getText().trim()+"' ",FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Wrong Group Main Party Code.");
                return;
            }
            
//            if(txtGroupMainParty.getText().trim().equals(txtGroupSubParty.getText().trim())) {
//                JOptionPane.showMessageDialog(null,"Group Main Party and Group Sub Party can not samne.");
//                return;
//            }
            
            String GroupMainParty = txtGroupMainParty.getText().trim();
            String GroupSubParty = txtGroupSubParty.getText().trim();
            int InvoiceType = EITLERPGLOBAL.getComboCode(cmbType);
            for(int i=0;i<TableSubParty.getRowCount();i++) {
                if(GroupSubParty.equals(DataModelSubParty.getValueByVariable("GROUP_SUB_PARTY",i))) {
                    JOptionPane.showMessageDialog(null,"Sub Party Code already exists.");
                    return;
                }
                if(!GroupMainParty.equals(DataModelSubParty.getValueByVariable("GROUP_MAIN_PARTY",i))) {
                    JOptionPane.showMessageDialog(null,"Different Group Main Party not allowed.");
                    return;
                }
            }
            
            Updating=true;
            Object[] rowData=new Object[5];
            rowData[0]=Integer.toString(TableSubParty.getRowCount()+1);
            rowData[1]=txtGroupMainParty.getText().trim();
            rowData[2]=clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType),txtGroupMainParty.getText().trim());
            rowData[3]=txtGroupSubParty.getText().trim();
            rowData[4]=clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType),txtGroupSubParty.getText().trim());
            DataModelSubParty.addRow(rowData);
            
            if(TableSubParty.getRowCount()>1) {
                int NewRow=TableSubParty.getRowCount()-1;
            }
            Updating=false;
            
            TableSubParty.changeSelection(TableSubParty.getRowCount()-1, 1, false,false);
            txtGroupSubParty.setText("");
            txtGroupSubParty.requestFocus();
        } catch(Exception e) {
        }
    }//GEN-LAST:event_cmdAddActionPerformed
    
    private void cmdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveActionPerformed
        // TODO add your handling code here:
        try {
            if(TableSubParty.getRowCount()>0) {
                DataModelSubParty.removeRow(TableSubParty.getSelectedRow());
                UpdateSrNo();
            }
        } catch(Exception e) {
        }
    }//GEN-LAST:event_cmdRemoveActionPerformed
    
    private void UpdateSrNo() {
        int SrCol=DataModelSubParty.getColFromVariable("SR_NO");
        
        for(int i=0;i<TableSubParty.getRowCount();i++) {
            TableSubParty.setValueAt(Integer.toString(i+1), i, SrCol);
        }
    }
    
    private void txtGroupMainPartyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGroupMainPartyFocusLost
        // TODO add your handling code here:
        try {
            if(!txtGroupMainParty.getText().trim().equals("")) {
                lblGroupMainPartyName.setText(clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType),txtGroupMainParty.getText().trim()));
            }
        } catch(Exception e) {
        }
    }//GEN-LAST:event_txtGroupMainPartyFocusLost
    
    private void txtGroupMainPartyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupMainPartyKeyPressed
        // TODO add your handling code here:
        try {
            if(EditMode==EITLERPGLOBAL.ADD || EditMode==EITLERPGLOBAL.EDIT) {
                if(evt.getKeyCode()==112) {
                    LOV aList=new LOV();
                    if(EITLERPGLOBAL.getCombostrCode(cmbType).equals("")) {
                        JOptionPane.showMessageDialog(null,"Please Select Invoice Type.");
                        return;
                    }
                    aList.SQL="SELECT PARTY_CODE,PARTY_NAME FROM FINANCE.D_FIN_PARTY_MASTER " +
                    "WHERE MAIN_ACCOUNT_CODE = '"+ EITLERPGLOBAL.getCombostrCode(cmbType) +"' AND APPROVED = 1 AND CANCELLED = 0 " +
                    "ORDER BY PARTY_CODE";
                    aList.ReturnCol=1;
                    aList.ShowReturnCol=true;
                    aList.DefaultSearchOn=2;
                    aList.UseSpecifiedConn=true;
                    aList.dbURL=FinanceGlobal.FinURL;
                    if(aList.ShowLOV()) {
                        txtGroupMainParty.setText(aList.ReturnVal);
                        lblGroupMainPartyName.setText(clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType),aList.ReturnVal));
                    }
                }
            }
        } catch(Exception e) {
        }
    }//GEN-LAST:event_txtGroupMainPartyKeyPressed
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        objPartyGrouping.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        Delete();
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Header;
    private javax.swing.JPanel Tab1;
    private javax.swing.JTable TableSubParty;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdGroupRemove;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdTop;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGroupMainParty;
    private javax.swing.JLabel lblGroupMainPartyName;
    private javax.swing.JLabel lblGroupSubCodeList;
    private javax.swing.JLabel lblGroupSubParty;
    private javax.swing.JLabel lblGroupSubPartyName;
    private javax.swing.JLabel lblSelectType;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAuditRemarks;
    private javax.swing.JTextField txtGroupMainParty;
    private javax.swing.JTextField txtGroupSubParty;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    
    private void SetFields(boolean pStat) {
        if(EditMode==EITLERPGLOBAL.ADD) {
            txtGroupMainParty.setEnabled(pStat);
            cmbType.setEnabled(pStat);
        } else {
            txtGroupMainParty.setEnabled(false);
            cmbType.setEnabled(false);
        }
        
        txtGroupSubParty.setEnabled(pStat);
        cmdAdd.setEnabled(pStat);
        cmdRemove.setEnabled(pStat);
        cmdGroupRemove.setEnabled(pStat);
        TableSubParty.setEnabled(pStat);
        
        SetupApproval();
    }
    
    private void ClearFields() {
        txtGroupMainParty.setText("");
        txtGroupSubParty.setText("");
        EITLERPGLOBAL.setComboIndex(cmbType,0);
        FormatSubParty();
        //FormatGridA();
        //FormatGridHS();
    }
    private void Delete() {
        if(JOptionPane.showConfirmDialog(this,"Are you sure you want to delete this record ?","Confirmation",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
            if(objPartyGrouping.Delete()) { 
                objPartyGrouping.LoadData(EITLERPGLOBAL.gCompanyID);
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while deleting. Error is"+objPartyGrouping.LastError);
            }
        }
    }
    //Didplay data on the Screen
    private void DisplayData() {
        try {
            ClearFields();
            txtGroupMainParty.setText(objPartyGrouping.getAttribute("GROUP_MAIN_PARTY").getString());
            
            String theTitle="POLICY PARTY GROUPING - "+txtGroupMainParty.getText();
            lblTitle.setText(theTitle);
            EITLERPGLOBAL.setComboIndex(cmbType,objPartyGrouping.getAttribute("INVOICE_TYPE").getInt());
            lblGroupMainPartyName.setText(clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType),objPartyGrouping.getAttribute("GROUP_MAIN_PARTY").getString()));
            //========= Display Line Items =============//
            
            FormatSubParty();
            for(int i=1;i<=objPartyGrouping.colSubPartyGroup.size();i++) {
                //Insert New Row
                Object[] rowData=new Object[1];
                DataModelSubParty.addRow(rowData);
                int NewRow=TableSubParty.getRowCount()-1;
                
                clsPartyGroupingDetail ObjItem=(clsPartyGroupingDetail)objPartyGrouping.colSubPartyGroup.get(Integer.toString(i));
                
                DataModelSubParty.setValueByVariable("SR_NO",Integer.toString(ObjItem.getAttribute("SR_NO").getInt()),NewRow);
                DataModelSubParty.setValueByVariable("GROUP_MAIN_PARTY",ObjItem.getAttribute("GROUP_MAIN_PARTY").getString(),NewRow);
                DataModelSubParty.setValueByVariable("GROUP_MAIN_PARTY_NAME",clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType), ObjItem.getAttribute("GROUP_MAIN_PARTY").getString()),NewRow);
                DataModelSubParty.setValueByVariable("GROUP_SUB_PARTY",ObjItem.getAttribute("GROUP_SUB_PARTY").getString(),NewRow);
                DataModelSubParty.setValueByVariable("GROUP_SUB_PARTY_NAME",clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbType), ObjItem.getAttribute("GROUP_SUB_PARTY").getString()),NewRow);
            }
            
            if(EditMode==0) {
                DataModelSubParty.TableReadOnly(true);
                
            }
            //=========================================//
            
            ShowMessage("Ready");
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    //Sets data to the Class Object
    private void SetData() {
        
        objPartyGrouping.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
        objPartyGrouping.setAttribute("GROUP_MAIN_PARTY",txtGroupMainParty.getText());
        objPartyGrouping.setAttribute("INVOICE_TYPE",EITLERPGLOBAL.getComboCode(cmbType));
        //-------------------------------------------------//
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            objPartyGrouping.setAttribute("CREATED_BY",EITLERPGLOBAL.gLoginID);
            objPartyGrouping.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDate());
        }
        else {
            objPartyGrouping.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gLoginID);
            objPartyGrouping.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDate());
        }
        
        //======= Set Line part ============
        objPartyGrouping.colSubPartyGroup.clear();
        
        for(int i=0;i<TableSubParty.getRowCount();i++) {
            clsPartyGroupingDetail objPartyGroupingDetail=new clsPartyGroupingDetail();
            objPartyGroupingDetail.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
            objPartyGroupingDetail.setAttribute("SR_NO",i+1);
            objPartyGroupingDetail.setAttribute("INVOICE_TYPE",EITLERPGLOBAL.getComboCode(cmbType));
            objPartyGroupingDetail.setAttribute("GROUP_MAIN_PARTY",txtGroupMainParty.getText());
            objPartyGroupingDetail.setAttribute("GROUP_SUB_PARTY",DataModelSubParty.getValueByVariable("GROUP_SUB_PARTY",i));
            objPartyGrouping.colSubPartyGroup.put(Integer.toString(objPartyGrouping.colSubPartyGroup.size()+1), objPartyGroupingDetail);
        }
    }
    
    
    private void SetMenuForRights() {
        
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12171)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12172)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12173)) {
            
            cmdDelete.setEnabled(true);
        }
        else {
            
            cmdDelete.setEnabled(false);
        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12174)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
        
    }
    
    private void Add() {
        EditMode=EITLERPGLOBAL.ADD;
        DisableToolbar();
        SetFields(true);
        ClearFields();
        txtGroupMainParty.requestFocus();
    }
    
    private void Edit() {
        EditMode=EITLERPGLOBAL.EDIT;
        DisableToolbar();
        SetFields(true);
        txtGroupSubParty.requestFocus();
    }
    
    private boolean Validate() {
        //** Validations **//
        try {
            if(EITLERPGLOBAL.getComboCode(cmbType)==0) {
                JOptionPane.showMessageDialog(null,"Select Invoice Type.");
                return false;
            }
            
            if(txtGroupMainParty.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null,"Please Insert Group Main Party.");
                return false;
            } else if(data.IsRecordExist("SELECT PARTY_CODE FROM D_FIN_PARTY_MASTER WEHRE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE='"+EITLERPGLOBAL.getCombostrCode(cmbType)+"' AND PARTY_CODE='"+txtGroupMainParty.getText().trim()+"' ",FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Wrong Group Main Party Code.");
                return false;
            }
            
            if(TableSubParty.getRowCount()==0) {
                JOptionPane.showMessageDialog(null,"Enter at least one row.");
                return false;
            }
            
            if(EditMode==EITLERPGLOBAL.ADD) {
                if(data.IsRecordExist("SELECT * FROM D_FIN_PARTY_GROUPING_HEADER WHERE GROUP_MAIN_PARTY='"+txtGroupMainParty.getText().trim()+"' ",FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,"Group main party already exists. \nYou can update it but can not enter again.");
                    return false;
                }
                
                if(data.IsRecordExist("SELECT * FROM D_FIN_PARTY_GROUPING_DETAIL WHERE GROUP_SUB_PARTY='"+txtGroupMainParty.getText().trim()+"' ",FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,"Group main party already exists as sub party against in other document. \nYou can not enter as main party.");
                    return false;
                }
            }
            
            for(int i=0;i<TableSubParty.getRowCount();i++) {
                if(data.IsRecordExist("SELECT * FROM D_FIN_PARTY_GROUPING_DETAIL WHERE GROUP_SUB_PARTY='"+DataModelSubParty.getValueByVariable("GROUP_SUB_PARTY",i)+"' AND GROUP_MAIN_PARTY<>'"+txtGroupMainParty.getText().trim()+"' ",FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,DataModelSubParty.getValueByVariable("GROUP_SUB_PARTY",i) + " :: party already exists as sub party of other group.");
                    return false;
                }
            }
            
        } catch(Exception e) {
            
        }
        return true;
    }
    
    private void Save() {
        
        //EITLERPGLOBAL.ChangeCursorToWait(this);
        
        //** Validations **//
        if(!Validate()){
            return;
        }
        
        SetData();
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(objPartyGrouping.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+objPartyGrouping.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(objPartyGrouping.Update()) {
                //Nothing to do
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+objPartyGrouping.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
        
        
    }
    
    private void Cancel() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Find() {
        
        Loader ObjLoader=new Loader(this,"EITLERP.Finance.frmPartyGroupingFind",true);
        frmPartyGroupingFind ObjReturn= (frmPartyGroupingFind) ObjLoader.getObj();
        
        if(ObjReturn.Cancelled==false) {
            if(!objPartyGrouping.Filter(ObjReturn.strQuery,EITLERPGLOBAL.gCompanyID)) {
                JOptionPane.showMessageDialog(null,"No records found.");
            }
            MoveFirst();
        }
        
    }
    
    private void MoveFirst() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objPartyGrouping.MoveFirst();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MovePrevious() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objPartyGrouping.MovePrevious();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveNext() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objPartyGrouping.MoveNext();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveLast() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objPartyGrouping.MoveLast();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    public void FindEx(int pCompanyID,int pDocNo) {
        objPartyGrouping.Filter(" WHERE PARENT_PARTY_ID="+pDocNo,pCompanyID);
        objPartyGrouping.MoveFirst();
        DisplayData();
    }
    
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    private void FormatSubParty() {
        try {
            
            DataModelSubParty=new EITLTableModel();
            
            EITLTableCellRenderer cellRender=new EITLTableCellRenderer();
            cellRender.setHorizontalAlignment(JLabel.RIGHT);
            
            TableSubParty.removeAll();
            TableSubParty.setModel(DataModelSubParty);
            
            TableColumnModel ColModel=TableSubParty.getColumnModel();
            TableSubParty.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            //Add the columns
            DataModelSubParty.addColumn("Sr."); //0 Read Only
            DataModelSubParty.addColumn("Group Main Party"); //1
            DataModelSubParty.addColumn("Group Main Party Name"); //2
            DataModelSubParty.addColumn("Group Sub Party"); //1
            DataModelSubParty.addColumn("Group Sub Party Name"); //2
            
            DataModelSubParty.SetVariable(0,"SR_NO"); //0 - Read Only
            DataModelSubParty.SetVariable(1,"GROUP_MAIN_PARTY"); //1
            DataModelSubParty.SetVariable(2,"GROUP_MAIN_PARTY_NAME"); //2
            DataModelSubParty.SetVariable(3,"GROUP_SUB_PARTY"); //1
            DataModelSubParty.SetVariable(4,"GROUP_SUB_PARTY_NAME"); //2
            
            DataModelSubParty.TableReadOnly(true);
            Updating=false;
            //Table formatting completed
            
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void GenerateCombos() {
        //Generates Combo Boxes
        
        cmbTypeModel=new EITLComboModel();
        cmbType.removeAllItems();
        cmbType.setModel(cmbTypeModel);
        
        ComboData aData = new ComboData();
        aData.Code=0;
        aData.strCode="";
        aData.Text="Select Type";
        cmbTypeModel.addElement(aData);
        
        aData = new ComboData();
        aData.Code=1;
        aData.strCode="210027";
        aData.Text="Suiting";
        cmbTypeModel.addElement(aData);
        
        aData = new ComboData();
        aData.Code=2;
        aData.strCode="210010";
        aData.Text="Felt";
        cmbTypeModel.addElement(aData);
        
        aData = new ComboData();
        aData.Code=3;
        aData.strCode="210072";
        aData.Text="Filter";
        cmbTypeModel.addElement(aData);
    }
    
    private void FormatGridA() {
    }
    
    private void FormatGridHS() {
    }
    
    private void SetupApproval() {
    }
    
    private void GenerateFromCombo() {
    }
    
    private void GenerateRejectedUserCombo() {
    }
    
    private void EnableApproval() {
    }
    
    
}
