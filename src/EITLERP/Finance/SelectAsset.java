 /*
  * SelectMIR.java
  *
  * Created on May 12, 2004, 11:11 AM
  */

package EITLERP.Finance;

/**
 *
 * @author  nrpithva
 */
/*<APPLET CODE=SelectMIR.Class HEIGHT=400 WIDTH=700></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import EITLERP.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;

public class SelectAsset extends javax.swing.JApplet {
    
    private EITLTableModel DataModel;
    private EITLTableCellRenderer Rend=new EITLTableCellRenderer();
    
    public boolean Cancelled=true;
    public HashMap colSelItems=new HashMap();
    private JDialog aDialog;
    public int ModuleID=0;
    private String SelAssetNo="";
    public boolean AllItems=false;
    public boolean CopyHeader=true;
    public clsFASSale ObjAsset;
    
    
    private int SelDeptID=0;
    
    public SelectAsset() {
        System.gc();
        initComponents();
        FormatGrid();
        
        
        
        txtAssetNo.requestFocus();
    }
    
    /** Initializes the applet SelectMIR */
    public void init() {
        System.gc();
        initComponents();
        FormatGrid();
        
        
        
        txtAssetNo.requestFocus();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmdShow = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        cmdOK = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdSelectAll = new javax.swing.JButton();
        cmdClearAll = new javax.swing.JButton();
        txtAssetNo = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel1.setText("Select  Asset Number from the List");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 240, 15);

        jLabel2.setDisplayedMnemonic('M');
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setLabelFor(txtAssetNo);
        jLabel2.setText("Asset No : ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(14, 40, 80, 20);

        cmdShow.setMnemonic('S');
        cmdShow.setText("Show Items");
        cmdShow.setNextFocusableComponent(Table);
        cmdShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShow);
        cmdShow.setBounds(220, 40, 110, 22);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setNextFocusableComponent(cmdSelectAll);
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(12, 90, 660, 218);

        jPanel4.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jPanel4);
        jPanel4.setBounds(8, 70, 662, 6);

        cmdOK.setMnemonic('O');
        cmdOK.setText("OK");
        cmdOK.setNextFocusableComponent(cmdCancel);
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOK);
        cmdOK.setBounds(502, 360, 78, 25);

        cmdCancel.setMnemonic('C');
        cmdCancel.setText("Cancel");
        cmdCancel.setNextFocusableComponent(cmdOK);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(586, 360, 79, 25);

        cmdSelectAll.setMnemonic('A');
        cmdSelectAll.setText("Select All");
        cmdSelectAll.setNextFocusableComponent(cmdClearAll);
        cmdSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSelectAll);
        cmdSelectAll.setBounds(16, 362, 106, 25);

        cmdClearAll.setMnemonic('L');
        cmdClearAll.setText("Clear All");
        cmdClearAll.setNextFocusableComponent(cmdOK);
        cmdClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdClearAll);
        cmdClearAll.setBounds(134, 362, 102, 25);

        txtAssetNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAssetNoKeyPressed(evt);
            }
        });

        getContentPane().add(txtAssetNo);
        txtAssetNo.setBounds(100, 40, 106, 21);

    }//GEN-END:initComponents
    
    private void txtAssetNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAssetNoKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            
            
           /* aList.SQL = "SELECT DISTINCT(A.ASSET_NO) AS ASSET_NO,A.ASSET_DATE,B.SR_NO FROM " +
            "D_FAS_MASTER_HEADER A,D_FAS_MASTER_DETAIL B " +
            "WHERE A.ASSET_NO = B.ASSET_NO " +
            "AND A.COMPANY_ID = B.COMPANY_ID AND A.COMPANY_ID="+EITLERPGLOBAL.gCompanyID;*/
            
//            aList.SQL= "SELECT DISTINCT(A.ASSET_NO) AS ASSET_NO,A.ASSET_DATE,B.SR_NO,A.ITEM_ID,C.ITEM_DESCRIPTION "+
//            "FROM FINANCE.D_FAS_MASTER_HEADER A,FINANCE.D_FAS_MASTER_DETAIL B,D_INV_ITEM_MASTER C  "+
//            "WHERE A.COMPANY_ID= B.COMPANY_ID "+
//            "AND A.ASSET_NO = B.ASSET_NO  "+
//            "AND A.ITEM_ID = C.ITEM_ID "+
//            "AND A.COMPANY_ID = C.COMPANY_ID "+
//            "AND A.COMPANY_ID= '"+EITLERPGLOBAL.gCompanyID+"'  "+
//            "AND A.APPROVED  = 1  "+
//            "AND A.CANCELLED = 0 AND ASSET_STATUS = ''   "+
//            "ORDER BY A.ASSET_NO,B.SR_NO ";
            
            aList.SQL = "SELECT DISTINCT(A.ASSET_NO) AS ASSET_NO,A.ASSET_DATE,B.SR_NO,B.ITEM_ID " +
            ",IFNULL(C.ITEM_DESCRIPTION,A.ITEM_DESC) AS ITEM_DESCRIPTION " +
            "FROM FINANCE.D_FAS_MASTER_HEADER A,FINANCE.D_FAS_MASTER_DETAIL B " +
            "LEFT JOIN DINESHMILLS.D_INV_ITEM_MASTER C ON (B.ITEM_ID = C.ITEM_ID) " +
            "WHERE A.COMPANY_ID= B.COMPANY_ID " +
            "AND A.ASSET_NO = B.ASSET_NO  " +
            "AND A.COMPANY_ID= '"  +EITLERPGLOBAL.gCompanyID +  "'  " +
            "AND A.APPROVED  = 1 AND A.CANCELLED = 0 AND B.ASSET_STATUS = '' " + // AND A.ASSET_TYPE = 1
            "ORDER BY A.ASSET_NO,B.SR_NO ";
            
            //aList.dbURL = FinanceGlobal.FinURL;
            // aList.UseSpecifiedConn = true;
            aList.ReturnCol=1;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=1;
            
            if(aList.ShowLOV()) {
                txtAssetNo.setText(aList.ReturnVal);
            }
        }
    }//GEN-LAST:event_txtAssetNoKeyPressed
    
    private void cmdClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearAllActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<Table.getRowCount();i++) {
            DataModel.setValueAt(Boolean.valueOf(false), i, 0);
        }
    }//GEN-LAST:event_cmdClearAllActionPerformed
    
    private void cmdSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectAllActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<Table.getRowCount();i++) {
            DataModel.setValueAt(Boolean.valueOf(true), i, 0);
        }
    }//GEN-LAST:event_cmdSelectAllActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancelled=true;
        aDialog.dispose();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        // TODO add your handling code here:
        if(Table.getRowCount()<=0) {
            Cancelled=true;
        }
        else {
            SetList();
            Cancelled=false;
        }
        aDialog.dispose();
    }//GEN-LAST:event_cmdOKActionPerformed
    
    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:
        SelAssetNo=txtAssetNo.getText();
        String docStatus = "";
        docStatus=clsFASSale.getDocStatus(EITLERPGLOBAL.gCompanyID, SelAssetNo);
        
        if(!docStatus.trim().equals("")) {
            JOptionPane.showMessageDialog(null,docStatus);
            return;
        }
        FormatGrid();
        GenerateGrid();
        
        if(Table.getRowCount()==0&&docStatus.trim().equals("")) {
            JOptionPane.showMessageDialog(null,"No pending items found");
        }
    }//GEN-LAST:event_cmdShowActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdClearAll;
    private javax.swing.JButton cmdOK;
    private javax.swing.JButton cmdSelectAll;
    private javax.swing.JButton cmdShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAssetNo;
    // End of variables declaration//GEN-END:variables
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        
        Table.removeAll();
        
        Table.setModel(DataModel);
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        for(int i=1;i<=6;i++) {
            DataModel.SetReadOnly(i);
        }
        
        //Add Columns to it
        DataModel.addColumn(""); //0 Selection
        DataModel.addColumn("Sr.");//1
        DataModel.addColumn("Asset No");//2
        DataModel.addColumn("Item ID");//3
        DataModel.addColumn("Item Name");//4
        DataModel.addColumn("Year");//5
        DataModel.addColumn("Dept ID");//6
        DataModel.addColumn("Dept Name");//7
        DataModel.addColumn("Amount");//8
        
        DataModel.SetVariable(0,"CHECK"); //0 READ ONLY
        DataModel.SetVariable(1,"SR_NO"); //1 READ ONLY
        DataModel.SetVariable(2,"ASSET_NO"); //2 READ ONLY
        DataModel.SetVariable(3,"ITEM_ID"); //3 READ ONLY
        DataModel.SetVariable(4,"ITEM_DESCRIPTION"); //4 READ ONLY
        DataModel.SetVariable(7,"YEAR"); // 5 READ ONLY
        DataModel.SetVariable(5,"DEPT_ID"); //6 READ ONLY  HIDDEN
        DataModel.SetVariable(6,"DEPT_NAME"); //7 READ ONLY
        DataModel.SetVariable(8,"AMOUNT"); //8 READ ONLY
        
        
        
        Rend.setCustomComponent(0,"CheckBox");
        Table.getColumnModel().getColumn(0).setCellRenderer(Rend);
        Table.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(new JCheckBox()));
    }
    
    private void SetList() {
        
        int SrNo=0;
        HashMap List=new HashMap();
        
        colSelItems.clear();
        String AssetNo=txtAssetNo.getText();
        
        //========= Get the MR Object =============//
        clsFASSale tmpObj=new clsFASSale();
        ObjAsset=(clsFASSale)tmpObj.getObject(EITLERPGLOBAL.gCompanyID, AssetNo);
        
       // CopyHeader=chkCopyHeader.isSelected();
        //===========================================//
        int srno = 0;
        for(int j=0;j<Table.getRowCount();j++) {
            //boolean t = DataModel.getBoolValueByVariable("CHECK",j);
            
            if( DataModel.getBoolValueByVariable("CHECK",j))
            {
                srno =  Integer.parseInt(DataModel.getValueByVariable("SR_NO", j));
                List=clsFASSale.getAssetItemList(EITLERPGLOBAL.gCompanyID, AssetNo,srno); 
                
                
                clsFASMasterItem ObjItem=(clsFASMasterItem)List.get(Integer.toString(srno));
                colSelItems.put(Integer.toString(colSelItems.size()+1),ObjItem);
            }
           // System.out.println("test " + t);
        }
        
       // List=clsFASSale.getAssetItemList(EITLERPGLOBAL.gCompanyID, AssetNo);
        //Scan the Table to get selected items
        
        /*for(int i=1;i<=List.size();i++) {
            
            clsFASMasterItem ObjItem=(clsFASMasterItem)List.get(Integer.toString(i));
            SrNo=(int)ObjItem.getAttribute("SR_NO").getVal();
            
            //Search in the table for SrNo.
            for(int j=0;j<Table.getRowCount();j++) {
                if(Integer.parseInt(Table.getValueAt(j, 1).toString())==SrNo) {
                    if(Table.getValueAt(j,0).toString().equals("true")) {
                        //Selected Item
                        colSelItems.put(Integer.toString(colSelItems.size()+1),ObjItem);
                    }
                }
            }
        }
         **/
        
    }
    
    private void GenerateGrid() {
        HashMap List=new HashMap();
        String AssetNo=txtAssetNo.getText();
        
        if(!AssetNo.equals("")) {
            
            List=clsFASSale.getAssetItemList(EITLERPGLOBAL.gCompanyID, AssetNo);
            
            for(int i=1;i<=List.size();i++) {
                clsFASMasterItem ObjItem=(clsFASMasterItem)List.get(Integer.toString(i));
                
                Object[] rowData=new Object[9];
                
                String lItemID = (String)ObjItem.getAttribute("ITEM_ID").getObj();
                String ItemName = ""; 
                rowData[0]=Boolean.valueOf(true); //By default not selected
                rowData[1]=Integer.toString((int)ObjItem.getAttribute("SR_NO").getVal());
                rowData[2]=(String)ObjItem.getAttribute("ASSET_NO").getObj();
                rowData[3]=lItemID;//(String)ObjItem.getAttribute("ITEM_ID").getObj();
               
                if(lItemID.substring(0,2).equals("DI"))
                {
                  ItemName = data.getStringValueFromDB("SELECT ITEM_DESC FROM D_FAS_MASTER_HEADER WHERE ASSET_TYPE = '2'  AND ITEM_ID = '" + lItemID + "' ",FinanceGlobal.FinURL);
                  rowData[4]=ItemName;
                }
                else
                {    
                  ItemName=clsItem.getItemName(EITLERPGLOBAL.gCompanyID, (String)ObjItem.getAttribute("ITEM_ID").getObj());
                  rowData[4]=ItemName;
                }
                //rowData[4]=ItemName;//clsItem.getItemName(EITLERPGLOBAL.gCompanyID,(String)ObjItem.getAttribute("ITEM_ID").getObj());
                rowData[5]=(String)ObjItem.getAttribute("YEAR").getObj();
                rowData[6]=Integer.toString((int)ObjItem.getAttribute("DEPT_ID").getVal());
                rowData[7]=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,Integer.toString((int)ObjItem.getAttribute("DEPT_ID").getVal()));
                rowData[8]=Double.toString((double)ObjItem.getAttribute("AMOUNT").getVal());
                DataModel.addRow(rowData);
                DataModel.SetUserObject(Table.getRowCount()-1, ObjItem);
            }
        }
        
    }
    
    //Recurses through the hierarchy of classes
    //until it finds Frame
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    public boolean ShowList() {
        try {
            FormatGrid();
            
            setSize(700,430);
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"Select Asset No",true);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(false);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            aDialog.show();
        }
        catch(Exception e) {
        }
        return !Cancelled;
    }
    
    
    
}
