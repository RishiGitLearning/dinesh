/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  nitin
 */
/*<APPLET CODE=frmInward.class HEIGHT=500 WIDTH=665></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import javax.swing.text.*;
import EITLERP.Utils.*;
import java.sql.*;
import java.net.*;
import EITLERP.*;


public class frmPartyMaster extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsPartyMaster objParty;
    
    private boolean Updating=false;
    
    private String theDocNo="";
    
    private EITLTableModel DataModelA;
    private EITLTableModel DataModelHS;
    
    private EITLComboModel cmbHierarchyModel;
    private EITLComboModel cmbToModel;
    
    private int SelHierarchyID=0;
    private int lnFromID=0;

    private boolean IsGenerating=false;

    public frmPendingApprovals frmPA;
    
    /** Creates new form frmTemplate */
    public frmPartyMaster() {

        setSize(668,467);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        
        GenerateCombos();
        objParty=new clsPartyMaster();
        SetMenuForRights();

        if(getName().equals("Link")) {
            
        }
        else {
                
        if(objParty.LoadData(EITLERPGLOBAL.gCompanyID)) {
            objParty.MoveFirst();
            DisplayData();
            SetMenuForRights();
        }
        else {
            JOptionPane.showMessageDialog(null,"Error occured while loading data. Error is "+objParty.LastError);
        }
        
        }        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        javax.swing.JLabel lblPhone;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        Header = new javax.swing.JTabbedPane();
        Panel1 = new javax.swing.JPanel();
        jTextArea2 = new javax.swing.JTextArea();
        lblAccountCode = new javax.swing.JLabel();
        txtLedgerCode = new javax.swing.JTextField();
        txtPartyCode = new javax.swing.JTextField();
        lblSubCode = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextArea3 = new javax.swing.JTextArea();
        lblAccountCode2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        lblAccountCode3 = new javax.swing.JLabel();
        lblAccountID = new javax.swing.JLabel();
        txtPartyID = new javax.swing.JTextField();
        txtPartyName = new javax.swing.JTextField();
        lblAccountName = new javax.swing.JLabel();
        lblAccountName1 = new javax.swing.JLabel();
        txtRemarks = new javax.swing.JTextField();
        lblCreditDays = new javax.swing.JLabel();
        txtCreditDays = new javax.swing.JTextField();
        txtCreditLimit = new javax.swing.JTextField();
        lblCreditLimit = new javax.swing.JLabel();
        lblDebitLimit = new javax.swing.JLabel();
        txtDebitLimit = new javax.swing.JTextField();
        txtLedgerName = new javax.swing.JTextField();
        lblSubCode1 = new javax.swing.JLabel();
        txtShortName = new javax.swing.JTextField();
        lblSubCode2 = new javax.swing.JLabel();
        txtShCode = new javax.swing.JTextField();
        Panel3 = new javax.swing.JPanel();
        lblDebitLimit1 = new javax.swing.JLabel();
        lblEccDate1 = new javax.swing.JLabel();
        lblCreditLimit1 = new javax.swing.JLabel();
        lblCreditDays1 = new javax.swing.JLabel();
        lblPartyID1 = new javax.swing.JLabel();
        txtServiceTaxNo = new javax.swing.JTextField();
        txtServiceTaxDate = new javax.swing.JTextField();
        txtSSIDate = new javax.swing.JTextField();
        txtSSINo = new javax.swing.JTextField();
        lblTinDate1 = new javax.swing.JLabel();
        lblTinNo1 = new javax.swing.JLabel();
        txtESINo = new javax.swing.JTextField();
        txtESIDate = new javax.swing.JTextField();
        txtTinNo = new javax.swing.JTextField();
        lblTinNo = new javax.swing.JLabel();
        lblTinDate = new javax.swing.JLabel();
        txtTinDate = new javax.swing.JTextField();
        lblCstNo = new javax.swing.JLabel();
        txtCSTNo = new javax.swing.JTextField();
        lblCstDate = new javax.swing.JLabel();
        txtCSTDate = new javax.swing.JTextField();
        cmbSSICategory = new javax.swing.JComboBox();
        lblEccNO = new javax.swing.JLabel();
        txtECCNo = new javax.swing.JTextField();
        lblEccDate = new javax.swing.JLabel();
        txtECCDate = new javax.swing.JTextField();
        lblPanNo = new javax.swing.JLabel();
        txtPANNo = new javax.swing.JTextField();
        lblPanDate = new javax.swing.JLabel();
        txtPANDate = new javax.swing.JTextField();
        Panel4 = new javax.swing.JPanel();
        lblCountry = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblPincode = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtPincode = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        txtEMail = new javax.swing.JTextField();
        lblEMail = new javax.swing.JLabel();
        lblMobile = new javax.swing.JLabel();
        lblFax = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        txtFax = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        Tab2 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        cmbHierarchy = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtFromRemarks = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        OpgApprove = new javax.swing.JRadioButton();
        OpgFinal = new javax.swing.JRadioButton();
        OpgReject = new javax.swing.JRadioButton();
        OpgHold = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        cmbSendTo = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        txtToRemarks = new javax.swing.JTextField();
        cmdBack2 = new javax.swing.JButton();
        cmdFromRemarksBig = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableA = new javax.swing.JTable();
        lblDocumentHistory = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableHS = new javax.swing.JTable();
        cmdViewHistory = new javax.swing.JButton();
        cmdNormalView = new javax.swing.JButton();
        cmdPreviewA = new javax.swing.JButton();
        cmdShowRemarks = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        txtAuditRemarks = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" PARTY MASTER");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 666, 25);

        Panel1.setLayout(null);

        Panel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Panel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Panel1MouseClicked(evt);
            }
        });

        Panel1.add(jTextArea2);
        jTextArea2.setBounds(177, 29, 0, 15);

        lblAccountCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountCode.setText("Ledger Code :");
        Panel1.add(lblAccountCode);
        lblAccountCode.setBounds(10, 159, 100, 15);

        txtLedgerCode.setBackground(new java.awt.Color(255, 255, 153));
        txtLedgerCode.setName("MAIN_ACCOUNT_CODE");
        txtLedgerCode.setEnabled(false);
        txtLedgerCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLedgerCodeFocusLost(evt);
            }
        });
        txtLedgerCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLedgerCodeKeyPressed(evt);
            }
        });

        Panel1.add(txtLedgerCode);
        txtLedgerCode.setBounds(120, 156, 125, 19);

        txtPartyCode.setName("PARTY_CODE");
        txtPartyCode.setEnabled(false);
        Panel1.add(txtPartyCode);
        txtPartyCode.setBounds(120, 53, 125, 19);

        lblSubCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubCode.setText("Party Code :");
        Panel1.add(lblSubCode);
        lblSubCode.setBounds(10, 55, 100, 15);

        jPanel2.setLayout(null);

        jPanel2.add(jTextArea3);
        jTextArea3.setBounds(177, 29, 0, 15);

        lblAccountCode2.setText("Account Code");
        jPanel2.add(lblAccountCode2);
        lblAccountCode2.setBounds(15, 20, 90, 15);

        jPanel2.add(jTextField3);
        jTextField3.setBounds(119, 18, 80, 19);

        jPanel2.add(jTextField4);
        jTextField4.setBounds(119, 49, 80, 19);

        lblAccountCode3.setText("Account Code");
        jPanel2.add(lblAccountCode3);
        lblAccountCode3.setBounds(15, 51, 90, 15);

        Panel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 0, 0);

        lblAccountID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountID.setText("Party ID :");
        Panel1.add(lblAccountID);
        lblAccountID.setBounds(10, 21, 100, 15);

        txtPartyID.setName("PARTY_ID");
        txtPartyID.setEnabled(false);
        Panel1.add(txtPartyID);
        txtPartyID.setBounds(120, 18, 125, 19);

        txtPartyName.setName("PARTY_NAME");
        txtPartyName.setEnabled(false);
        Panel1.add(txtPartyName);
        txtPartyName.setBounds(120, 77, 505, 19);

        lblAccountName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountName.setText("Party Name :");
        Panel1.add(lblAccountName);
        lblAccountName.setBounds(10, 78, 100, 15);

        lblAccountName1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountName1.setText("Remarks :");
        Panel1.add(lblAccountName1);
        lblAccountName1.setBounds(10, 285, 100, 15);

        txtRemarks.setName("DESCRIPTION");
        txtRemarks.setEnabled(false);
        Panel1.add(txtRemarks);
        txtRemarks.setBounds(120, 282, 475, 19);

        lblCreditDays.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreditDays.setText("Credit Days :");
        Panel1.add(lblCreditDays);
        lblCreditDays.setBounds(10, 194, 100, 15);

        txtCreditDays.setName("CREDIT_DAYS");
        txtCreditDays.setEnabled(false);
        Panel1.add(txtCreditDays);
        txtCreditDays.setBounds(120, 191, 125, 19);

        txtCreditLimit.setName("CREDIT_LIMIT");
        txtCreditLimit.setEnabled(false);
        Panel1.add(txtCreditLimit);
        txtCreditLimit.setBounds(120, 219, 125, 19);

        lblCreditLimit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreditLimit.setText("Credit Limit :");
        Panel1.add(lblCreditLimit);
        lblCreditLimit.setBounds(10, 222, 100, 15);

        lblDebitLimit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDebitLimit.setText("Debit Limit :");
        Panel1.add(lblDebitLimit);
        lblDebitLimit.setBounds(10, 249, 100, 15);

        txtDebitLimit.setName("DEBIT_LIMIT");
        txtDebitLimit.setEnabled(false);
        Panel1.add(txtDebitLimit);
        txtDebitLimit.setBounds(120, 247, 125, 19);

        txtLedgerName.setName("ACCOUNT_NAME");
        txtLedgerName.setEnabled(false);
        Panel1.add(txtLedgerName);
        txtLedgerName.setBounds(250, 156, 375, 19);

        lblSubCode1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubCode1.setText("Short Name :");
        Panel1.add(lblSubCode1);
        lblSubCode1.setBounds(10, 105, 100, 15);

        txtShortName.setName("PARTY_CODE");
        txtShortName.setEnabled(false);
        Panel1.add(txtShortName);
        txtShortName.setBounds(120, 103, 505, 19);

        lblSubCode2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubCode2.setText("Sch. Code :");
        Panel1.add(lblSubCode2);
        lblSubCode2.setBounds(10, 130, 100, 15);

        txtShCode.setName("PARTY_CODE");
        txtShCode.setEnabled(false);
        Panel1.add(txtShCode);
        txtShCode.setBounds(120, 128, 125, 19);

        Header.addTab("Party Details", Panel1);

        Panel3.setLayout(null);

        Panel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        lblDebitLimit1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDebitLimit1.setText("SSI No :");
        Panel3.add(lblDebitLimit1);
        lblDebitLimit1.setBounds(10, 74, 100, 15);

        lblEccDate1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEccDate1.setText("Date :");
        Panel3.add(lblEccDate1);
        lblEccDate1.setBounds(370, 74, 50, 15);

        lblCreditLimit1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreditLimit1.setText("SSI Catagory :");
        Panel3.add(lblCreditLimit1);
        lblCreditLimit1.setBounds(10, 108, 100, 15);

        lblCreditDays1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreditDays1.setText("Date :");
        Panel3.add(lblCreditDays1);
        lblCreditDays1.setBounds(370, 140, 50, 15);

        lblPartyID1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPartyID1.setText("Service Tax No :");
        Panel3.add(lblPartyID1);
        lblPartyID1.setBounds(10, 142, 100, 15);

        txtServiceTaxNo.setName("SERVICE_TAX_NO");
        txtServiceTaxNo.setEnabled(false);
        Panel3.add(txtServiceTaxNo);
        txtServiceTaxNo.setBounds(120, 139, 250, 19);

        txtServiceTaxDate.setName("SERVICE_TAX_DATE");
        txtServiceTaxDate.setEnabled(false);
        Panel3.add(txtServiceTaxDate);
        txtServiceTaxDate.setBounds(425, 138, 100, 19);

        txtSSIDate.setName("SSI_DATE");
        txtSSIDate.setEnabled(false);
        Panel3.add(txtSSIDate);
        txtSSIDate.setBounds(425, 73, 100, 19);

        txtSSINo.setName("SSI_NO");
        txtSSINo.setEnabled(false);
        Panel3.add(txtSSINo);
        txtSSINo.setBounds(120, 72, 250, 19);

        lblTinDate1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTinDate1.setText("Date :");
        Panel3.add(lblTinDate1);
        lblTinDate1.setBounds(370, 172, 50, 15);

        lblTinNo1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTinNo1.setText("ESI No :");
        Panel3.add(lblTinNo1);
        lblTinNo1.setBounds(10, 171, 100, 15);

        txtESINo.setName("ESI_NO");
        txtESINo.setEnabled(false);
        Panel3.add(txtESINo);
        txtESINo.setBounds(120, 169, 250, 19);

        txtESIDate.setName("ESI_DATE");
        txtESIDate.setEnabled(false);
        Panel3.add(txtESIDate);
        txtESIDate.setBounds(425, 171, 100, 19);

        txtTinNo.setName("TIN_NO");
        txtTinNo.setEnabled(false);
        Panel3.add(txtTinNo);
        txtTinNo.setBounds(120, 19, 250, 19);

        lblTinNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTinNo.setText("TIN No :");
        Panel3.add(lblTinNo);
        lblTinNo.setBounds(10, 21, 100, 15);

        lblTinDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTinDate.setText("Date :");
        Panel3.add(lblTinDate);
        lblTinDate.setBounds(370, 20, 50, 15);

        txtTinDate.setName("TIN_DATE");
        txtTinDate.setEnabled(false);
        Panel3.add(txtTinDate);
        txtTinDate.setBounds(425, 20, 100, 19);

        lblCstNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCstNo.setText("CST No :");
        Panel3.add(lblCstNo);
        lblCstNo.setBounds(10, 46, 100, 15);

        txtCSTNo.setName("CST_NO");
        txtCSTNo.setEnabled(false);
        Panel3.add(txtCSTNo);
        txtCSTNo.setBounds(120, 44, 250, 19);

        lblCstDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCstDate.setText("Date :");
        Panel3.add(lblCstDate);
        lblCstDate.setBounds(370, 46, 50, 15);

        txtCSTDate.setName("CST_DATE");
        txtCSTDate.setEnabled(false);
        Panel3.add(txtCSTDate);
        txtCSTDate.setBounds(425, 45, 100, 19);

        cmbSSICategory.setName("SSI_CATEGORY");
        cmbSSICategory.setEnabled(false);
        Panel3.add(cmbSSICategory);
        cmbSSICategory.setBounds(120, 103, 250, 24);

        lblEccNO.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEccNO.setText("ECC No :");
        Panel3.add(lblEccNO);
        lblEccNO.setBounds(10, 200, 100, 15);

        txtECCNo.setName("ECC_NO");
        txtECCNo.setEnabled(false);
        Panel3.add(txtECCNo);
        txtECCNo.setBounds(120, 197, 250, 19);

        lblEccDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEccDate.setText("Date :");
        Panel3.add(lblEccDate);
        lblEccDate.setBounds(370, 200, 50, 15);

        txtECCDate.setName("ECC_DATE");
        txtECCDate.setEnabled(false);
        Panel3.add(txtECCDate);
        txtECCDate.setBounds(425, 200, 100, 19);

        lblPanNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPanNo.setText("PAN No :");
        Panel3.add(lblPanNo);
        lblPanNo.setBounds(10, 230, 100, 15);

        txtPANNo.setName("ECC_NO");
        txtPANNo.setEnabled(false);
        Panel3.add(txtPANNo);
        txtPANNo.setBounds(120, 230, 250, 19);

        lblPanDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPanDate.setText("Date :");
        Panel3.add(lblPanDate);
        lblPanDate.setBounds(370, 230, 50, 15);

        txtPANDate.setName("ECC_DATE");
        txtPANDate.setEnabled(false);
        Panel3.add(txtPANDate);
        txtPANDate.setBounds(425, 230, 100, 19);

        Header.addTab("Tax Details", Panel3);

        Panel4.setLayout(null);

        Panel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        lblCountry.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCountry.setText("Country :");
        Panel4.add(lblCountry);
        lblCountry.setBounds(10, 158, 90, 15);

        lblState.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblState.setText("State :");
        Panel4.add(lblState);
        lblState.setBounds(10, 127, 90, 15);

        lblPincode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPincode.setText("Pin Code :");
        Panel4.add(lblPincode);
        lblPincode.setBounds(310, 98, 70, 15);

        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity.setText("City :");
        Panel4.add(lblCity);
        lblCity.setBounds(10, 99, 90, 15);

        lblAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAddress.setText("Address :");
        Panel4.add(lblAddress);
        lblAddress.setBounds(10, 25, 90, 15);

        txtCity.setName("CITY");
        txtCity.setEnabled(false);
        Panel4.add(txtCity);
        txtCity.setBounds(105, 96, 160, 19);

        txtPincode.setName("PINCODE");
        txtPincode.setEnabled(false);
        Panel4.add(txtPincode);
        txtPincode.setBounds(386, 96, 110, 19);

        txtState.setName("STATE");
        txtState.setEnabled(false);
        Panel4.add(txtState);
        txtState.setBounds(105, 125, 160, 19);

        txtCountry.setName("COUNTRY");
        txtCountry.setEnabled(false);
        Panel4.add(txtCountry);
        txtCountry.setBounds(105, 156, 150, 19);

        txtEMail.setName("EMAIL");
        txtEMail.setEnabled(false);
        Panel4.add(txtEMail);
        txtEMail.setBounds(105, 245, 390, 19);

        lblEMail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEMail.setText("E-Mail :");
        Panel4.add(lblEMail);
        lblEMail.setBounds(10, 247, 90, 15);

        lblMobile.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMobile.setText("Mobile :");
        Panel4.add(lblMobile);
        lblMobile.setBounds(10, 220, 90, 15);

        lblFax.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFax.setText("Fax :");
        Panel4.add(lblFax);
        lblFax.setBounds(305, 189, 30, 15);

        lblPhone.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPhone.setText("Phone :");
        Panel4.add(lblPhone);
        lblPhone.setBounds(10, 190, 90, 15);

        txtPhone.setName("PHONE");
        txtPhone.setEnabled(false);
        Panel4.add(txtPhone);
        txtPhone.setBounds(105, 188, 190, 19);

        txtFax.setName("FAX");
        txtFax.setEnabled(false);
        Panel4.add(txtFax);
        txtFax.setBounds(338, 188, 160, 19);

        txtMobile.setName("MOBILE");
        txtMobile.setEnabled(false);
        Panel4.add(txtMobile);
        txtMobile.setBounds(105, 218, 150, 19);

        txtAddress.setName("ADDRESS");
        txtAddress.setEnabled(false);
        jScrollPane1.setViewportView(txtAddress);

        Panel4.add(jScrollPane1);
        jScrollPane1.setBounds(105, 23, 390, 60);

        Header.addTab("Contact Details", Panel4);

        Tab2.setLayout(null);

        Tab2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Hierarchy :");
        Tab2.add(jLabel31);
        jLabel31.setBounds(10, 18, 90, 15);

        cmbHierarchy.setEnabled(false);
        cmbHierarchy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbHierarchyItemStateChanged(evt);
            }
        });

        Tab2.add(cmbHierarchy);
        cmbHierarchy.setBounds(110, 14, 184, 24);

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("From :");
        Tab2.add(jLabel32);
        jLabel32.setBounds(10, 52, 90, 15);

        txtFrom.setBackground(new java.awt.Color(204, 204, 204));
        Tab2.add(txtFrom);
        txtFrom.setBounds(110, 50, 182, 19);

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Remarks :");
        Tab2.add(jLabel35);
        jLabel35.setBounds(10, 82, 90, 15);

        txtFromRemarks.setBackground(new java.awt.Color(204, 204, 204));
        txtFromRemarks.setEnabled(false);
        Tab2.add(txtFromRemarks);
        txtFromRemarks.setBounds(110, 78, 468, 19);

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Your Action :");
        Tab2.add(jLabel36);
        jLabel36.setBounds(10, 120, 90, 15);

        jPanel7.setLayout(null);

        jPanel7.setBorder(new javax.swing.border.EtchedBorder());
        OpgApprove.setText("Approve & Forward");
        buttonGroup1.add(OpgApprove);
        OpgApprove.setEnabled(false);
        OpgApprove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgApproveMouseClicked(evt);
            }
        });

        jPanel7.add(OpgApprove);
        OpgApprove.setBounds(6, 6, 171, 23);

        OpgFinal.setText("Final Approve");
        buttonGroup1.add(OpgFinal);
        OpgFinal.setEnabled(false);
        OpgFinal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgFinalMouseClicked(evt);
            }
        });

        jPanel7.add(OpgFinal);
        OpgFinal.setBounds(6, 32, 136, 20);

        OpgReject.setText("Reject");
        buttonGroup1.add(OpgReject);
        OpgReject.setEnabled(false);
        OpgReject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgRejectMouseClicked(evt);
            }
        });

        jPanel7.add(OpgReject);
        OpgReject.setBounds(6, 54, 136, 20);

        OpgHold.setSelected(true);
        OpgHold.setText("Hold Document");
        buttonGroup1.add(OpgHold);
        OpgHold.setEnabled(false);
        jPanel7.add(OpgHold);
        OpgHold.setBounds(6, 76, 136, 20);

        Tab2.add(jPanel7);
        jPanel7.setBounds(110, 120, 182, 100);

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Send To :");
        Tab2.add(jLabel33);
        jLabel33.setBounds(10, 232, 90, 15);

        cmbSendTo.setEnabled(false);
        Tab2.add(cmbSendTo);
        cmbSendTo.setBounds(110, 228, 184, 24);

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Remarks :");
        Tab2.add(jLabel34);
        jLabel34.setBounds(10, 264, 90, 15);

        txtToRemarks.setEnabled(false);
        Tab2.add(txtToRemarks);
        txtToRemarks.setBounds(110, 260, 516, 19);

        cmdBack2.setText("<< Back");
        Tab2.add(cmdBack2);
        cmdBack2.setBounds(534, 350, 102, 25);

        cmdFromRemarksBig.setText("...");
        cmdFromRemarksBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFromRemarksBigActionPerformed(evt);
            }
        });

        Tab2.add(cmdFromRemarksBig);
        cmdFromRemarksBig.setBounds(585, 77, 33, 21);

        Header.addTab("Approval", Tab2);

        jPanel6.setLayout(null);

        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel26.setText("Document Approval Status");
        jPanel6.add(jLabel26);
        jLabel26.setBounds(12, 10, 242, 15);

        TableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TableA);

        jPanel6.add(jScrollPane2);
        jScrollPane2.setBounds(12, 40, 614, 144);

        lblDocumentHistory.setText("Document Update History");
        jPanel6.add(lblDocumentHistory);
        lblDocumentHistory.setBounds(13, 191, 182, 15);

        TableHS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TableHS);

        jPanel6.add(jScrollPane3);
        jScrollPane3.setBounds(13, 207, 473, 148);

        cmdViewHistory.setText("View Revisions");
        cmdViewHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdViewHistoryActionPerformed(evt);
            }
        });

        jPanel6.add(cmdViewHistory);
        cmdViewHistory.setBounds(498, 242, 132, 24);

        cmdNormalView.setText("Back to Normal");
        cmdNormalView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNormalViewActionPerformed(evt);
            }
        });

        jPanel6.add(cmdNormalView);
        cmdNormalView.setBounds(498, 273, 132, 24);

        cmdPreviewA.setText("Preview Report");
        jPanel6.add(cmdPreviewA);
        cmdPreviewA.setBounds(498, 209, 132, 24);

        cmdShowRemarks.setText("Show Remarks");
        cmdShowRemarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowRemarksActionPerformed(evt);
            }
        });

        jPanel6.add(cmdShowRemarks);
        cmdShowRemarks.setBounds(498, 305, 132, 24);

        Header.addTab("Status", jPanel6);

        getContentPane().add(Header);
        Header.setBounds(2, 66, 654, 370);
        Header.getAccessibleContext().setAccessibleName("Account Details");
        Header.getAccessibleContext().setAccessibleDescription("Account Details");

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(1, 271, 650, 22);

        txtAuditRemarks.setEnabled(false);
        getContentPane().add(txtAuditRemarks);
        txtAuditRemarks.setBounds(525, 461, 129, 19);

    }//GEN-END:initComponents

    private void txtLedgerCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLedgerCodeFocusLost
        // TODO add your handling code here:
        txtLedgerName.setText(clsAccount.getAccountName(txtLedgerCode.getText(),""));
    }//GEN-LAST:event_txtLedgerCodeFocusLost

    private void txtLedgerCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLedgerCodeKeyPressed
        // TODO add your handling code here:
        try
        {

            if(evt.getKeyCode()==112)
            {
                        LOV aList=new LOV();
                        
                        aList.SQL="SELECT MAIN_ACCOUNT_CODE,ACCOUNT_NAME FROM D_FIN_GL ORDER BY ACCOUNT_NAME";
                        aList.ReturnCol=1;
                        aList.ShowReturnCol=true;
                        aList.DefaultSearchOn=2;
                        aList.UseSpecifiedConn=true;
                        aList.dbURL=FinanceGlobal.FinURL;
                        
                        if(aList.ShowLOV()) {
                            txtLedgerCode.setText(aList.ReturnVal);
                            txtLedgerName.setText(clsAccount.getAccountName(txtLedgerCode.getText(),""));
                        }
                
            }
            
        }
        catch(Exception e)
        {
            
        }
        
    }//GEN-LAST:event_txtLedgerCodeKeyPressed

    private void Panel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Panel1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Panel1MouseClicked
        
    private void cmdShowRemarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowRemarksActionPerformed
        // TODO add your handling code here:
        if(TableHS.getRowCount()>0&&TableHS.getSelectedRow()>=0) {
            txtAuditRemarks.setText((String)TableHS.getValueAt(TableHS.getSelectedRow(),4));
            BigEdit bigEdit=new BigEdit();
            bigEdit.theText=txtAuditRemarks;
            bigEdit.ShowEdit();
        }
        
    }//GEN-LAST:event_cmdShowRemarksActionPerformed
    
    private void cmdNormalViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNormalViewActionPerformed
        // TODO add your handling code here:
        objParty.LoadData(EITLERPGLOBAL.gCompanyID);
        MoveFirst();
    }//GEN-LAST:event_cmdNormalViewActionPerformed
    
    private void cmdViewHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdViewHistoryActionPerformed
        // TODO add your handling code here:
        objParty.ShowHistory(EITLERPGLOBAL.gCompanyID, objParty.getAttribute("PARTY_ID").getInt());
        MoveFirst();
    }//GEN-LAST:event_cmdViewHistoryActionPerformed
    
    private void OpgRejectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgRejectMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(false);
        OpgHold.setSelected(false);
        
        GenerateRejectedUserCombo();
        cmbSendTo.setEnabled(true);
        
    }//GEN-LAST:event_OpgRejectMouseClicked
    
    private void OpgFinalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgFinalMouseClicked
        // TODO add your handling code here:
        if(!OpgFinal.isEnabled()) {
            OpgHold.setSelected(true);
        }
        
    }//GEN-LAST:event_OpgFinalMouseClicked
    
    private void OpgApproveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgApproveMouseClicked
        // TODO add your handling code here:
        SetupApproval();
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            GenerateRejectedUserCombo();
            if(ApprovalFlow.IsOnceRejectedDoc(EITLERPGLOBAL.gCompanyID,clsPartyMaster.ModuleID , Integer.toString(objParty.getAttribute("PARTY_ID").getInt()),FinanceGlobal.FinURL)) {
                cmbSendTo.setEnabled(true);
            }
            else {
                cmbSendTo.setEnabled(false);
            }
        }
        
        if(cmbSendTo.getItemCount()<=0) {
            GenerateFromCombo();
        }
        
    }//GEN-LAST:event_OpgApproveMouseClicked
    
    private void cmdFromRemarksBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFromRemarksBigActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtFromRemarks;
        bigEdit.ShowEdit();
        
    }//GEN-LAST:event_cmdFromRemarksBigActionPerformed
    
    private void cmbHierarchyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHierarchyItemStateChanged
        // TODO add your handling code here:
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        GenerateFromCombo();
        
        
        if(clsHierarchy.CanSkip((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        }
        else {
            
            cmbSendTo.setEnabled(false);
        }
        
        if(clsHierarchy.CanFinalApprove((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        }
        else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }
        
    }//GEN-LAST:event_cmbHierarchyItemStateChanged
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        objParty.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
            Delete();
        }
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Header;
    private javax.swing.JRadioButton OpgApprove;
    private javax.swing.JRadioButton OpgFinal;
    private javax.swing.JRadioButton OpgHold;
    private javax.swing.JRadioButton OpgReject;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Panel3;
    private javax.swing.JPanel Panel4;
    private javax.swing.JPanel Tab2;
    private javax.swing.JTable TableA;
    private javax.swing.JTable TableHS;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cmbHierarchy;
    private javax.swing.JComboBox cmbSSICategory;
    private javax.swing.JComboBox cmbSendTo;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdBack2;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdFromRemarksBig;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdNormalView;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPreviewA;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdShowRemarks;
    private javax.swing.JButton cmdTop;
    private javax.swing.JButton cmdViewHistory;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lblAccountCode;
    private javax.swing.JLabel lblAccountCode2;
    private javax.swing.JLabel lblAccountCode3;
    private javax.swing.JLabel lblAccountID;
    private javax.swing.JLabel lblAccountName;
    private javax.swing.JLabel lblAccountName1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblCreditDays;
    private javax.swing.JLabel lblCreditDays1;
    private javax.swing.JLabel lblCreditLimit;
    private javax.swing.JLabel lblCreditLimit1;
    private javax.swing.JLabel lblCstDate;
    private javax.swing.JLabel lblCstNo;
    private javax.swing.JLabel lblDebitLimit;
    private javax.swing.JLabel lblDebitLimit1;
    private javax.swing.JLabel lblDocumentHistory;
    private javax.swing.JLabel lblEMail;
    private javax.swing.JLabel lblEccDate;
    private javax.swing.JLabel lblEccDate1;
    private javax.swing.JLabel lblEccNO;
    private javax.swing.JLabel lblFax;
    private javax.swing.JLabel lblMobile;
    private javax.swing.JLabel lblPanDate;
    private javax.swing.JLabel lblPanNo;
    private javax.swing.JLabel lblPartyID1;
    private javax.swing.JLabel lblPincode;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblSubCode;
    private javax.swing.JLabel lblSubCode1;
    private javax.swing.JLabel lblSubCode2;
    private javax.swing.JLabel lblTinDate;
    private javax.swing.JLabel lblTinDate1;
    private javax.swing.JLabel lblTinNo;
    private javax.swing.JLabel lblTinNo1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtAuditRemarks;
    private javax.swing.JTextField txtCSTDate;
    private javax.swing.JTextField txtCSTNo;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtCreditDays;
    private javax.swing.JTextField txtCreditLimit;
    private javax.swing.JTextField txtDebitLimit;
    private javax.swing.JTextField txtECCDate;
    private javax.swing.JTextField txtECCNo;
    private javax.swing.JTextField txtEMail;
    private javax.swing.JTextField txtESIDate;
    private javax.swing.JTextField txtESINo;
    private javax.swing.JTextField txtFax;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtFromRemarks;
    private javax.swing.JTextField txtLedgerCode;
    private javax.swing.JTextField txtLedgerName;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtPANDate;
    private javax.swing.JTextField txtPANNo;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtPartyID;
    private javax.swing.JTextField txtPartyName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPincode;
    private javax.swing.JTextField txtRemarks;
    private javax.swing.JTextField txtSSIDate;
    private javax.swing.JTextField txtSSINo;
    private javax.swing.JTextField txtServiceTaxDate;
    private javax.swing.JTextField txtServiceTaxNo;
    private javax.swing.JTextField txtShCode;
    private javax.swing.JTextField txtShortName;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtTinDate;
    private javax.swing.JTextField txtTinNo;
    private javax.swing.JTextField txtToRemarks;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    
    private void SetFields(boolean pStat) {
        
        txtShortName.setEnabled(pStat);
        txtShCode.setEnabled(pStat);
        
        txtPartyCode.setEnabled(pStat);
        txtPartyName.setEnabled(pStat);
        txtLedgerCode.setEnabled(pStat);
        txtCreditDays.setEnabled(pStat);
        txtCreditLimit.setEnabled(pStat);
        txtDebitLimit.setEnabled(pStat);
        txtTinNo.setEnabled(pStat);
        txtTinDate.setEnabled(pStat);
        txtCSTNo.setEnabled(pStat);
        txtCSTDate.setEnabled(pStat);
        txtSSINo.setEnabled(pStat);
        txtSSIDate.setEnabled(pStat);
        cmbSSICategory.setEnabled(pStat);
        txtServiceTaxNo.setEnabled(pStat);
        txtServiceTaxDate.setEnabled(pStat);
        txtESINo.setEnabled(pStat);
        txtESIDate.setEnabled(pStat);
        txtECCNo.setEnabled(pStat);
        txtECCDate.setEnabled(pStat);
        txtPANDate.setEnabled(pStat);
        txtPANNo.setEnabled(pStat);
        txtAddress.setEnabled(pStat);
        txtCity.setEnabled(pStat);
        txtPincode.setEnabled(pStat);
        txtState.setEnabled(pStat);
        txtCountry.setEnabled(pStat);
        txtPhone.setEnabled(pStat);
        txtFax.setEnabled(pStat);
        txtMobile.setEnabled(pStat);
        txtEMail.setEnabled(pStat);
        txtRemarks.setEnabled(pStat);
        
        OpgApprove.setEnabled(pStat);
        OpgFinal.setEnabled(pStat);
        OpgReject.setEnabled(pStat);
        OpgHold.setEnabled(pStat);
        txtToRemarks.setEnabled(pStat);
    }
    
    private void ClearFields() {

        txtPartyID.setText("");
        txtPartyCode.setText("");
        txtPartyName.setText("");
        txtLedgerCode.setText("");
        txtLedgerName.setText("");
        txtShCode.setText("");
        txtShortName.setText("");
        
        txtCreditDays.setText("");
        txtCreditLimit.setText("");
        txtDebitLimit.setText("");
        txtTinNo.setText("");
        txtTinDate.setText("");
        txtCSTNo.setText("");
        txtCSTDate.setText("");
        txtSSINo.setText("");
        txtSSIDate.setText("");
        txtServiceTaxNo.setText("");
        txtServiceTaxDate.setText("");
        txtESINo.setText("");
        txtESIDate.setText("");
        txtECCNo.setText("");
        txtECCDate.setText("");
        txtPANNo.setText("");
        txtPANDate.setText("");
        txtAddress.setText("");
        txtCity.setText("");
        txtPincode.setText("");
        txtState.setText("");
        txtCountry.setText("");
        txtPhone.setText("");
        txtFax.setText("");
        txtMobile.setText("");
        txtEMail.setText("");
        txtRemarks.setText("");
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        
        //=========== Color Indication ===============//
        try {
            if(EditMode==0) {
                if(objParty.getAttribute("APPROVED").getInt()==1) {
                    lblTitle.setBackground(Color.BLUE);
                }
                
                if(objParty.getAttribute("APPROVED").getInt()!=1) {
                    lblTitle.setBackground(Color.GRAY);
                }
                
                if(objParty.getAttribute("CANCELLED").getInt()==1) {
                    lblTitle.setBackground(Color.RED);
                }
                
                
            }
        }
        catch(Exception c) {
            
        }
        //============================================//
        
        
        //========= Authority Delegation Check =====================//
        if(EITLERPGLOBAL.gAuthorityUserID!=EITLERPGLOBAL.gUserID) {
            int ModuleID=clsPartyMaster.ModuleID;
            
            if(clsAuthority.IsAuthorityGiven(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.gUserID,EITLERPGLOBAL.gAuthorityUserID,ModuleID)) {
                EITLERPGLOBAL.gNewUserID=EITLERPGLOBAL.gAuthorityUserID;
            }
            else {
                EITLERPGLOBAL.gNewUserID=EITLERPGLOBAL.gUserID;
            }
        }
        //==========================================================//
        
        
        ClearFields();
        
        
        txtPartyID.setText(Integer.toString(objParty.getAttribute("PARTY_ID").getInt()));
        txtPartyCode.setText(objParty.getAttribute("PARTY_CODE").getString());
        lblTitle.setText("PARTY MASTER -"+txtPartyCode.getText());
        txtPartyName.setText(objParty.getAttribute("PARTY_NAME").getString());
        txtLedgerCode.setText(objParty.getAttribute("MAIN_ACCOUNT_CODE").getString());
        txtLedgerName.setText(clsAccount.getAccountName( txtLedgerCode.getText(),""));
        
        txtShortName.setText(objParty.getAttribute("SH_NAME").getString());
        txtShCode.setText(objParty.getAttribute("SH_CODE").getString());
        
        txtCreditDays.setText(Double.toString(objParty.getAttribute("CREDIT_DAYS").getDouble()));
        txtCreditLimit.setText(Double.toString(objParty.getAttribute("CREDIT_LIMIT").getDouble()));
        txtDebitLimit.setText(Double.toString(objParty.getAttribute("DEBIT_LIMIT").getDouble()));
        
        txtTinNo.setText(objParty.getAttribute("TIN_NO").getString());
        txtTinDate.setText(objParty.getAttribute("TIN_DATE").getString());
        
        txtCSTNo.setText(objParty.getAttribute("CST_NO").getString());
        txtCSTDate.setText(objParty.getAttribute("CST_DATE").getString());
        
        txtSSINo.setText(objParty.getAttribute("SSI_NO").getString());
        txtSSIDate.setText(objParty.getAttribute("SSI_DATE").getString());
        
        EITLERPGLOBAL.setComboIndex(cmbSSICategory,objParty.getAttribute("SSI_CATEGORY").getString());
        
        txtServiceTaxNo.setText(objParty.getAttribute("SERVICE_TAX_NO").getString());
        txtServiceTaxDate.setText(objParty.getAttribute("SERVICE_TAX_DATE").getString());
        
        txtESINo.setText(objParty.getAttribute("ESI_NO").getString());
        txtESIDate.setText(objParty.getAttribute("ESI_DATE").getString());
        
        txtECCNo.setText(objParty.getAttribute("ECC_NO").getString());
        txtECCDate.setText(objParty.getAttribute("ECC_DATE").getString());
        
        txtPANNo.setText(objParty.getAttribute("PAN_NO").getString());
        txtPANDate.setText(objParty.getAttribute("PAN_DATE").getString());
        
        txtAddress.setText(objParty.getAttribute("ADDRESS").getString());
        txtCity.setText(objParty.getAttribute("CITY").getString());
        txtPincode.setText(objParty.getAttribute("PINCODE").getString());
        txtCountry.setText(objParty.getAttribute("COUNTRY").getString());
        txtState.setText(objParty.getAttribute("STATE").getString());
        txtPhone.setText(objParty.getAttribute("PHONE").getString());
        txtFax.setText(objParty.getAttribute("FAX").getString());
        txtMobile.setText(objParty.getAttribute("MOBILE").getString());
        txtEMail.setText(objParty.getAttribute("EMAIL").getString());
        txtRemarks.setText(objParty.getAttribute("REMARKS").getString());
        
        
        //************ Misc. Display *****************//
        txtToRemarks.setText("");
        SetupApproval();
        
        EITLERPGLOBAL.setComboIndex(cmbHierarchy,objParty.getAttribute("HIERARCHY_ID").getInt());
        
        
        //======== Generating Grid for Document Approval Flow ========//
        FormatGridA();
        HashMap List=new HashMap();
        String DocNo=Integer.toString(objParty.getAttribute("PARTY_ID").getInt());
        List=ApprovalFlow.getDocumentFlow(EITLERPGLOBAL.gCompanyID, clsPartyMaster.ModuleID , DocNo);
        for(int i=1;i<=List.size();i++) {
            clsDocFlow ObjFlow=(clsDocFlow)List.get(Integer.toString(i));
            Object[] rowData=new Object[7];
            
            rowData[0]=Integer.toString(i);
            rowData[1]=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(int)ObjFlow.getAttribute("USER_ID").getVal());
            rowData[2]=(String)ObjFlow.getAttribute("STATUS").getObj();
            rowData[3]=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID, (int)ObjFlow.getAttribute("DEPT_ID").getVal());
            rowData[4]=EITLERPGLOBAL.formatDate((String)ObjFlow.getAttribute("RECEIVED_DATE").getObj());
            rowData[5]=EITLERPGLOBAL.formatDate((String)ObjFlow.getAttribute("ACTION_DATE").getObj());
            rowData[6]=(String)ObjFlow.getAttribute("REMARKS").getObj();
            
            DataModelA.addRow(rowData);
        }
        //============================================================//
        
        
        //=========================== Audit Trail ===========================//
        FormatGridHS();
        
        HashMap History=clsPartyMaster.getHistoryList(EITLERPGLOBAL.gCompanyID, objParty.getAttribute("PARTY_ID").getInt());
        for(int i=1;i<=History.size();i++) {
            clsPartyMaster ObjHistory=(clsPartyMaster)History.get(Integer.toString(i));
            Object[] rowData=new Object[5];
            
            rowData[0]=Integer.toString((int)ObjHistory.getAttribute("REVISION_NO").getVal());
            rowData[1]=ObjHistory.getAttribute("UPDATED_BY").getString();
            rowData[2]=ObjHistory.getAttribute("ENTRY_DATE").getString();
            
            String ApprovalStatus="";
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("A")) {
                ApprovalStatus="Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("F")) {
                ApprovalStatus="Final Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("W")) {
                ApprovalStatus="Waiting";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("R")) {
                ApprovalStatus="Rejected";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("P")) {
                ApprovalStatus="Pending";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("C")) {
                ApprovalStatus="Skiped";
            }
            
            rowData[3]=ApprovalStatus;
            rowData[4]=(String)ObjHistory.getAttribute("APPROVER_REMARKS").getObj();
            
            DataModelHS.addRow(rowData);
        }
        //=========================== Audit Trail Over ===========================//
        
        //********************************************//
        
    }
    
    //Sets data to the Class Object
    private void SetData() {
        
        objParty.setAttribute("SH_NAME",txtShortName.getText());
        objParty.setAttribute("SH_CODE",txtShCode.getText());
        
        objParty.setAttribute("PARTY_CODE",txtPartyCode.getText());
        objParty.setAttribute("PARTY_NAME",txtPartyName.getText());
        objParty.setAttribute("MAIN_ACCOUNT_CODE",txtLedgerCode.getText());
        
        objParty.setAttribute("CREDIT_DAYS",UtilFunctions.CDbl(txtCreditDays.getText()));
        objParty.setAttribute("CREDIT_LIMIT",UtilFunctions.CDbl(txtCreditLimit.getText()));
        objParty.setAttribute("DEBIT_LIMIT",UtilFunctions.CDbl(txtDebitLimit.getText()));
        
        objParty.setAttribute("TIN_NO",txtTinNo.getText());
        objParty.setAttribute("TIN_DATE",txtTinDate.getText());
        
        objParty.setAttribute("CST_NO",txtCSTNo.getText());
        objParty.setAttribute("CST_DATE",txtCSTDate.getText());
        
        objParty.setAttribute("SSI_NO",txtSSINo.getText());
        objParty.setAttribute("SSI_DATE",txtSSIDate.getText());
        
        objParty.setAttribute("SSI_CATEGORY",EITLERPGLOBAL.getCombostrCode(cmbSSICategory));
        
        objParty.setAttribute("SERVICE_TAX_NO",txtServiceTaxNo.getText());
        objParty.setAttribute("SERVICE_TAX_DATE",txtServiceTaxDate.getText());
        
        objParty.setAttribute("ESI_NO",txtESINo.getText());
        objParty.setAttribute("ESI_DATE",txtESIDate.getText());
        
        objParty.setAttribute("ECC_NO",txtECCNo.getText());
        objParty.setAttribute("ECC_DATE",txtECCDate.getText());
        
        objParty.setAttribute("PAN_NO",txtPANNo.getText());
        objParty.setAttribute("PAN_DATE",txtPANDate.getText());
        
        objParty.setAttribute("ADDRESS",txtAddress.getText());
        objParty.setAttribute("CITY",txtCity.getText());
        objParty.setAttribute("PINCODE",txtPincode.getText());
        objParty.setAttribute("COUNTRY",txtCountry.getText());
        objParty.setAttribute("STATE",txtState.getText());
        objParty.setAttribute("PHONE",txtPhone.getText());
        objParty.setAttribute("FAX",txtFax.getText());
        objParty.setAttribute("MOBILE",txtMobile.getText());
        objParty.setAttribute("EMAIL",txtEMail.getText());
        objParty.setAttribute("REMARKS",txtRemarks.getText());
        
        //----- Update Approval Specific Fields -----------//
        objParty.setAttribute("HIERARCHY_ID",EITLERPGLOBAL.getComboCode(cmbHierarchy));
        objParty.setAttribute("FROM",EITLERPGLOBAL.gNewUserID);
        objParty.setAttribute("TO",EITLERPGLOBAL.getComboCode(cmbSendTo));
        objParty.setAttribute("FROM_REMARKS",txtToRemarks.getText());
        
        if(OpgApprove.isSelected()) {
            objParty.setAttribute("APPROVAL_STATUS","A");
        }
        
        if(OpgFinal.isSelected()) {
            objParty.setAttribute("APPROVAL_STATUS","F");
        }
        
        if(OpgReject.isSelected()) {
            objParty.setAttribute("APPROVAL_STATUS","R");
            objParty.setAttribute("SEND_DOC_TO",EITLERPGLOBAL.getComboCode(cmbSendTo));
        }
        
        if(OpgHold.isSelected()) {
            objParty.setAttribute("APPROVAL_STATUS","H");
        }
        //-------------------------------------------------//
        
    }
    
    
    private void SetMenuForRights() {
        
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,10481)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        //if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,152)) {
        cmdEdit.setEnabled(true);
        //}
        //else {
        //cmdEdit.setEnabled(false);
        //}
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,10483)) {
            cmdDelete.setEnabled(true);
        }
        else {
            cmdDelete.setEnabled(false);
        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,10484)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
        
    }
    
    private void Add() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        EditMode=EITLERPGLOBAL.ADD;
        SetFields(true);
        DisableToolbar();
        ClearFields();
        SetupApproval();
    }
    
    private void Edit() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        int PartyID=objParty.getAttribute("PARTY_ID").getInt();
        String PartyCode=objParty.getAttribute("PARTY_CODE").getString();
        String lDocNo=Integer.toString(PartyID);
        
        if(objParty.IsEditable(EITLERPGLOBAL.gCompanyID, PartyID, EITLERPGLOBAL.gNewUserID,PartyCode)) {
            
            EITLERPGLOBAL.ChangeCursorToWait(this);
            
            EditMode=EITLERPGLOBAL.EDIT;
            //---New Change ---//
            GenerateCombos();
            DisplayData();
            SetupApproval();
            //----------------//
            
            if(ApprovalFlow.IsCreator(clsPartyMaster.ModuleID ,lDocNo)||clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,10482)) {
                SetFields(true);
            }
            else {
                EnableApproval();
            }
            
            
            SetupApproval();
            DisableToolbar();
            txtPartyCode.requestFocus();
            
            EITLERPGLOBAL.ChangeCursorToDefault(this);
        }
        else {
            JOptionPane.showMessageDialog(null,"You cannot edit this record. It is either approved/rejected or waiting approval for other user");
        }
        
        
    }
    
    private void Delete() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        if(objParty.Delete(EITLERPGLOBAL.gNewUserID)) {
            MoveLast();
        }
    }
    
    private void Save() {
        
        EITLERPGLOBAL.ChangeCursorToWait(this);
        
        SetData();
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(objParty.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+objParty.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(objParty.Update()) {
                //Nothing to do
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+objParty.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
        
        try {
            frmPA.RefreshView();
        }catch(Exception e){}
        
    }
    
    private void Cancel() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Find() {
        Loader ObjLoader=new Loader(this,"EITLERP.Finance.frmPartyFind",true);
        EITLERP.Finance.frmPartyFind ObjReturn= (EITLERP.Finance.frmPartyFind) ObjLoader.getObj();
         
        if(ObjReturn.Cancelled==false) {
            if(!objParty.Filter(ObjReturn.strQuery,EITLERPGLOBAL.gCompanyID)) {
                JOptionPane.showMessageDialog(null,"No records found.");
            }
            MoveFirst();
        }
    }
    
    private void MoveFirst() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objParty.MoveFirst();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MovePrevious() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objParty.MovePrevious();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveNext() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objParty.MoveNext();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveLast() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objParty.MoveLast();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    public void FindEx(int pCompanyID,int pDocNo,String PartyCode) {
        objParty.Filter(" WHERE PARTY_ID="+pDocNo+" AND PARTY_CODE='"+PartyCode+"' ",pCompanyID);
        objParty.MoveFirst();
        DisplayData();
    }
    
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    private void FormatGridA() {
        DataModelA=new EITLTableModel();
        
        TableA.removeAll();
        TableA.setModel(DataModelA);
        
        //Set the table Readonly
        DataModelA.TableReadOnly(true);
        
        //Add the columns
        DataModelA.addColumn("Sr.");
        DataModelA.addColumn("User");
        DataModelA.addColumn("Status");
        DataModelA.addColumn("Department");
        DataModelA.addColumn("Received Date");
        DataModelA.addColumn("Action Date");
        DataModelA.addColumn("Remarks");
        
        TableA.setAutoResizeMode(TableA.AUTO_RESIZE_OFF);
        
    }
    
    
    private void FormatGridHS() {
        DataModelHS=new EITLTableModel();
        
        TableHS.removeAll();
        TableHS.setModel(DataModelHS);
        
        //Set the table Readonly
        DataModelHS.TableReadOnly(true);
        
        //Add the columns
        DataModelHS.addColumn("Rev No.");
        DataModelHS.addColumn("User");
        DataModelHS.addColumn("Date");
        DataModelHS.addColumn("Status");
        DataModelHS.addColumn("Remarks");
        
        TableHS.setAutoResizeMode(TableHS.AUTO_RESIZE_OFF);
    }
    
    
    private void SetupApproval() {
        
        /*if(cmbHierarchy.getItemCount()>1) {
            cmbHierarchy.setEnabled(true);
        }*/
        //In Edit Mode Hierarchy Should be disabled
        if(EditMode==EITLERPGLOBAL.ADD) {
            cmbHierarchy.setEnabled(true);
        }
        else {
            cmbHierarchy.setEnabled(false);
        }
        
        //Set Default Hierarchy ID for User
        int DefaultID=clsHierarchy.getDefaultHierarchy((int)EITLERPGLOBAL.gCompanyID);
        EITLERPGLOBAL.setComboIndex(cmbHierarchy,DefaultID);
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            lnFromID=(int)EITLERPGLOBAL.gNewUserID;
            txtFrom.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID));
            txtFromRemarks.setText("Creator of Document");
        }
        else {
            
            int FromUserID=ApprovalFlow.getFromID((int)EITLERPGLOBAL.gCompanyID, clsPartyMaster.ModuleID , Integer.toString(objParty.getAttribute("PARTY_ID").getInt()));
            lnFromID=FromUserID;
            String strFromUser=clsUser.getUserName(EITLERPGLOBAL.gCompanyID, FromUserID);
            String strFromRemarks=ApprovalFlow.getFromRemarks( (int)EITLERPGLOBAL.gCompanyID,clsPartyMaster.ModuleID ,FromUserID,Integer.toString(objParty.getAttribute("PARTY_ID").getInt()));
            
            txtFrom.setText(strFromUser);
            txtFromRemarks.setText(strFromRemarks);
        }
        
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        GenerateFromCombo();
        
        if(clsHierarchy.CanSkip((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        }
        else {
            cmbSendTo.setEnabled(false);
        }
        
        if(clsHierarchy.CanFinalApprove((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        }
        else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            cmbHierarchy.setEnabled(false);
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            txtPartyCode.setEnabled(false);
            txtPartyName.setEnabled(false);
            txtLedgerCode.setEnabled(false);
        }
        
        if(EditMode==0) {
            cmbHierarchy.setEnabled(false);
            txtFrom.setEnabled(false);
            txtFromRemarks.setEnabled(false);
            OpgApprove.setEnabled(false);
            OpgFinal.setEnabled(false);
            OpgReject.setEnabled(false);
            cmbSendTo.setEnabled(false);
            txtToRemarks.setEnabled(false);
        }
        
    }
    
    
    private void GenerateFromCombo() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        
        try {
            if(EditMode==EITLERPGLOBAL.ADD) {
                //----- Generate cmbType ------- //
                cmbToModel=new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);
                
                List=clsHierarchy.getUserList((int)EITLERPGLOBAL.gCompanyID,SelHierarchyID,EITLERPGLOBAL.gNewUserID);
                for(int i=1;i<=List.size();i++) {
                    clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
                    ComboData aData=new ComboData();
                    aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
                    
                    if(ObjUser.getAttribute("USER_ID").getVal()==EITLERPGLOBAL.gNewUserID) {
                        //Exclude Current User
                    }
                    else {
                        cmbToModel.addElement(aData);
                    }
                }
                //------------------------------ //
            }
            else {
                //----- Generate cmbType ------- //
                cmbToModel=new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);
                
                
                List=ApprovalFlow.getRemainingUsers((int)EITLERPGLOBAL.gCompanyID, clsPartyMaster.ModuleID ,Integer.toString(objParty.getAttribute("PARTY_ID").getInt()));
                for(int i=1;i<=List.size();i++) {
                    clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
                    ComboData aData=new ComboData();
                    aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
                    cmbToModel.addElement(aData);
                }
                //------------------------------ //
            }
        }
        catch(Exception e)
        {}
        
    }
    
    private void GenerateRejectedUserCombo() {
        HashMap List=new HashMap();
        HashMap DeptList=new HashMap();
        HashMap DeptUsers=new HashMap();
        
        //----- Generate cmbType ------- //
        cmbToModel=new EITLComboModel();
        cmbSendTo.removeAllItems();
        cmbSendTo.setModel(cmbToModel);
        
        
        //Now Add other hierarchy Users
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        
        List=clsHierarchy.getUserList((int)EITLERPGLOBAL.gCompanyID,SelHierarchyID,EITLERPGLOBAL.gNewUserID,true);
        for(int i=1;i<=List.size();i++) {
            clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
            aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
            
            
            /// NEW CODE ///
            boolean IncludeUser=false;
            //Decide to include user or not
            if(EditMode==EITLERPGLOBAL.EDIT) {
                if(OpgApprove.isSelected()) {
                    IncludeUser=ApprovalFlow.IncludeUserInApproval(EITLERPGLOBAL.gCompanyID,clsPartyMaster.ModuleID , Integer.toString(objParty.getAttribute("PARTY_ID").getInt()), ObjUser.getAttribute("USER_ID").getInt(), EITLERPGLOBAL.gNewUserID);
                }
                
                if(OpgReject.isSelected()) {
                    IncludeUser=ApprovalFlow.IncludeUserInRejection(EITLERPGLOBAL.gCompanyID, clsPartyMaster.ModuleID, Integer.toString(objParty.getAttribute("PARTY_ID").getInt()), ObjUser.getAttribute("USER_ID").getInt() , EITLERPGLOBAL.gNewUserID);
                }
                
                if(IncludeUser&&(( ObjUser.getAttribute("USER_ID").getInt())!=EITLERPGLOBAL.gNewUserID)) {
                    cmbToModel.addElement(aData);
                }
            }
            else {
                if((ObjUser.getAttribute("USER_ID").getInt())!=EITLERPGLOBAL.gNewUserID) {
                    cmbToModel.addElement(aData);
                }
            }
            /// END NEW CODE ///
            
            
            
        }
        //------------------------------ //
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            int Creator=ApprovalFlow.getCreator(EITLERPGLOBAL.gCompanyID, clsPartyMaster.ModuleID , Integer.toString(objParty.getAttribute("PARTY_ID").getInt()));
            EITLERPGLOBAL.setComboIndex(cmbSendTo,Creator);
        }
        
    }
    
    
    private void GenerateCombos() {
        try {
            //Generates Combo Boxes
            HashMap List=new HashMap();
            String strCondition="";
            ResultSet rsTmp;
            
            cmbHierarchyModel=new EITLComboModel();
            cmbHierarchy.removeAllItems();
            cmbHierarchy.setModel(cmbHierarchyModel);
            
            List=clsHierarchy.getListEx(" WHERE D_COM_HIERARCHY.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+clsPartyMaster.ModuleID);
            
            if(EditMode==EITLERPGLOBAL.EDIT) {
                List=clsHierarchy.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+clsPartyMaster.ModuleID );
            }
            for(int i=1;i<=List.size();i++) {
                clsHierarchy ObjHierarchy=(clsHierarchy) List.get(Integer.toString(i));
                ComboData aData=new ComboData();
                aData.Code=(int) ObjHierarchy.getAttribute("HIERARCHY_ID").getVal();
                aData.Text=(String)ObjHierarchy.getAttribute("HIERARCHY_NAME").getObj();
                cmbHierarchyModel.addElement(aData);
            }
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void EnableApproval() {
        cmbSendTo.setEnabled(true);
        OpgApprove.setEnabled(true);
        OpgFinal.setEnabled(true);
        OpgReject.setEnabled(true);
        OpgHold.setEnabled(true);
        txtToRemarks.setEnabled(true);
        SetupApproval();
        
        //========== Setting Up Header Fields ================//
        String FieldName="";
        int SelHierarchy=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        
        for(int i=0;i<Panel1.getComponentCount()-1;i++) {
            if(Panel1.getComponent(i).getName()!=null) {
                
                FieldName=Panel1.getComponent(i).getName();
                if(clsHierarchy.CanEditField(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, SelHierarchy, "H", FieldName)) {
                    
                    Panel1.getComponent(i).setEnabled(true);
                }
            }
        }

        
        for(int i=0;i<Panel3.getComponentCount()-1;i++) {
            if(Panel3.getComponent(i).getName()!=null) {
                
                FieldName=Panel3.getComponent(i).getName();
                if(clsHierarchy.CanEditField(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, SelHierarchy, "H", FieldName)) {
                    
                    Panel3.getComponent(i).setEnabled(true);
                }
            }
        }
        
        for(int i=0;i<Panel4.getComponentCount()-1;i++) {
            if(Panel4.getComponent(i).getName()!=null) {
                
                FieldName=Panel4.getComponent(i).getName();
                if(clsHierarchy.CanEditField(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, SelHierarchy, "H", FieldName)) {
                    
                    Panel4.getComponent(i).setEnabled(true);
                }
            }
        }
        //=============== Header Fields Setup Complete =================//
    }
    
}
