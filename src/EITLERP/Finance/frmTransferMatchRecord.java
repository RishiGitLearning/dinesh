/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */

package EITLERP.Finance;

/**
 *
 * @author  root
 */

import EITLERP.*;
import java.sql.*;
import javax.swing.*;
import EITLERP.Finance.UtilFunctions;
import EITLERP.Sales.clsSalesInvoice;

public class frmTransferMatchRecord extends javax.swing.JApplet {
    
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLComboModel cmbInvoiceTypeModel;
    private EITLComboModel cmbMonthModel;
    private EITLTableCellRenderer Rend=new EITLTableCellRenderer();
    // public boolean Cancelled=true;
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(620,490);
        initComponents();
        GenerateCombo();
        FormatGrid();
        if(EITLERPGLOBAL.gUserID!=1 && EITLERPGLOBAL.gUserID!=17) {
            cmdShowList.setEnabled(false);
            cmdSave.setEnabled(false);
        }
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTranferDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdShowList = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbInvoiceType = new javax.swing.JComboBox();
        lblMonth = new javax.swing.JLabel();
        cmbMonth = new javax.swing.JComboBox();
        lblYear = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        lblYear1 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        txtPartyName = new javax.swing.JTextField();
        cmdSelectAll = new javax.swing.JButton();
        cmdClearAll = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" Transfer Match Record");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 666, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Transfer Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 130, 100, 20);

        txtTranferDate.setEditable(false);
        getContentPane().add(txtTranferDate);
        txtTranferDate.setBounds(120, 130, 100, 20);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 174, 610, 240);

        cmdShowList.setText("Generate");
        cmdShowList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowListActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShowList);
        cmdShowList.setBounds(420, 144, 110, 25);

        cmdSave.setText("Transfer");
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSave);
        cmdSave.setBounds(442, 421, 90, 25);

        lblStatus.setForeground(new java.awt.Color(51, 153, 255));
        lblStatus.setText("Status");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(10, 460, 280, 20);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Invoice Type :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 40, 100, 20);

        cmbInvoiceType.setNextFocusableComponent(txtPartyCode);
        cmbInvoiceType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbInvoiceTypeItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbInvoiceType);
        cmbInvoiceType.setBounds(120, 40, 180, 20);

        lblMonth.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMonth.setText("Month :");
        getContentPane().add(lblMonth);
        lblMonth.setBounds(10, 100, 100, 20);

        cmbMonth.setNextFocusableComponent(txtYear);
        getContentPane().add(cmbMonth);
        cmbMonth.setBounds(120, 100, 180, 20);

        lblYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblYear.setText("Year :");
        getContentPane().add(lblYear);
        lblYear.setBounds(290, 100, 50, 20);

        txtYear.setColumns(10);
        txtYear.setNextFocusableComponent(cmdShowList);
        txtYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtYearFocusLost(evt);
            }
        });

        getContentPane().add(txtYear);
        txtYear.setBounds(350, 100, 90, 20);

        lblYear1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblYear1.setText("Party Code :");
        getContentPane().add(lblYear1);
        lblYear1.setBounds(10, 70, 100, 20);

        txtPartyCode.setColumns(10);
        txtPartyCode.setNextFocusableComponent(cmbMonth);
        txtPartyCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPartyCodeFocusLost(evt);
            }
        });
        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });

        getContentPane().add(txtPartyCode);
        txtPartyCode.setBounds(120, 70, 90, 20);

        txtPartyName.setColumns(10);
        txtPartyName.setEditable(false);
        getContentPane().add(txtPartyName);
        txtPartyName.setBounds(220, 70, 280, 20);

        cmdSelectAll.setMnemonic('A');
        cmdSelectAll.setText("Select All");
        cmdSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSelectAll);
        cmdSelectAll.setBounds(16, 425, 106, 25);

        cmdClearAll.setMnemonic('L');
        cmdClearAll.setText("Clear All");
        cmdClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdClearAll);
        cmdClearAll.setBounds(134, 425, 102, 25);

    }//GEN-END:initComponents
    
    private void cmbInvoiceTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbInvoiceTypeItemStateChanged
        // TODO add your handling code here:
        if(EITLERPGLOBAL.getCombostrCode(cmbInvoiceType).equals("0")) {
            txtPartyCode.setText("");
            txtPartyName.setText("");
            cmbMonth.setSelectedIndex(0);
            txtYear.setText("");
            txtTranferDate.setText("");
            FormatGrid();
        }
    }//GEN-LAST:event_cmbInvoiceTypeItemStateChanged
    
    private void txtPartyCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartyCodeFocusLost
        // TODO add your handling code here:
        if(!EITLERPGLOBAL.getCombostrCode(cmbInvoiceType).equals("0")) {
            txtPartyName.setText(clsAccount.getAccountName(EITLERPGLOBAL.getCombostrCode(cmbInvoiceType), txtPartyCode.getText().trim()));
        } else {
            txtPartyName.setText(" ");
        }
    }//GEN-LAST:event_txtPartyCodeFocusLost
    
    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        // TODO add your handling code here:
        
        String MainCode  = EITLERPGLOBAL.getCombostrCode(cmbInvoiceType);
        try {
            if(evt.getKeyCode()==112) {
                LOV aList=new LOV();
                
                aList.SQL="SELECT PARTY_CODE,PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE='"+MainCode+"' ORDER BY PARTY_NAME";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=2;
                aList.UseSpecifiedConn=true;
                aList.dbURL=FinanceGlobal.FinURL;
                
                if(aList.ShowLOV()) {
                    txtPartyCode.setText(aList.ReturnVal);
                    txtPartyName.setText(clsAccount.getAccountName(MainCode, aList.ReturnVal));
                }
            }
        }
        catch(Exception e) {
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed
    
    private void cmdClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearAllActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<Table.getRowCount();i++) {
            DataModel.setValueAt(Boolean.valueOf(false), i, 0);
        }
    }//GEN-LAST:event_cmdClearAllActionPerformed
    
    private void cmdSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectAllActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<Table.getRowCount();i++) {
            DataModel.setValueAt(Boolean.valueOf(true), i, 0);
        }
    }//GEN-LAST:event_cmdSelectAllActionPerformed
    
    private void txtYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYearFocusLost
        // TODO add your handling code here:
        try {
            int Month = cmbMonth.getSelectedIndex();
            String StartDate = txtYear.getText().trim()+"-"+ EITLERPGLOBAL.padLeftEx(Integer.toString(Month),"0", 2)+"-01";
            txtTranferDate.setText(EITLERPGLOBAL.formatDate(clsDepositMaster.deductDays(StartDate, 1)));
            
        }
        catch(Exception e) {
            txtTranferDate.setText("");
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtYearFocusLost
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        if(Table.getRowCount()<0) {
            JOptionPane.showMessageDialog(this,"No Record...");
            return;
        }
        new Thread() {
            public void run() {
                try {
                    int InvoiceType=0;
                    String TransferDate = EITLERPGLOBAL.formatDateDB(txtTranferDate.getText().trim());
                    String SQL="SELECT ENTRY_NO FROM D_FIN_DR_OPENING_OUTSTANDING_HEADER WHERE ENTRY_DATE<='"+TransferDate+"' ORDER BY ENTRY_DATE DESC";
                    int EntryNo=data.getIntValueFromDB(SQL,FinanceGlobal.FinURL);
                    String MainCode = EITLERPGLOBAL.getCombostrCode(cmbInvoiceType);
                    if(MainCode.equals("210027")) {
                        InvoiceType=1;
                    } else if(MainCode.equals("210010")) {
                        InvoiceType=2;
                    } else if(MainCode.equals("210072")) {
                        InvoiceType=3;
                    }
                    String PartyCode = txtPartyCode.getText().trim();
                    String strSQL = "";
                    cmdSave.setEnabled(false);
                    for(int i=0;i<Table.getRowCount();i++) {
                        String VoucherNo = DataModel.getValueByVariable("VOUCHER_NO", i);
                        lblStatus.setText("Updating Voucher No.: "+VoucherNo);
                        if( DataModel.getBoolValueByVariable("CHECK",i)) {
                            String InvoiceNo = DataModel.getValueByVariable("INVOICE_NO", i);
                            String InvoiceDate = EITLERPGLOBAL.formatDateDB(DataModel.getValueByVariable("INVOICE_DATE", i));
                            String MatchedDate = EITLERPGLOBAL.formatDateDB(DataModel.getValueByVariable("MATCHED_DATE", i));
                            if(clsVoucher.getVoucherType(VoucherNo)==FinanceGlobal.TYPE_SALES_JOURNAL) {
                                strSQL = "UPDATE D_FIN_VOUCHER_DETAIL SET MATCHED=1,MATCHED_DATE='"+TransferDate+"' " +
                                "WHERE EFFECT='D' AND MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                "AND INVOICE_DATE='"+InvoiceDate+"' AND INVOICE_NO ='"+InvoiceNo+"' AND VOUCHER_NO='"+VoucherNo+"' " +
                                "AND MATCHED_DATE='"+MatchedDate+"'";
                                data.Execute(strSQL, FinanceGlobal.FinURL);
                                
                                strSQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET MATCHED=1,MATCHED_DATE='"+TransferDate+"' " +
                                "WHERE EFFECT='D' AND MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                "AND INVOICE_DATE='"+InvoiceDate+"' AND INVOICE_NO ='"+InvoiceNo+"' AND VOUCHER_NO='"+VoucherNo+"' " +
                                "AND MATCHED_DATE='"+MatchedDate+"'";
                                data.Execute(strSQL, FinanceGlobal.FinURL);
                                
                                strSQL = "UPDATE D_FIN_VOUCHER_DETAIL SET MATCHED=1, MATCHED_DATE='"+TransferDate+"' WHERE EFFECT='C' " +
                                "AND MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                "AND INVOICE_DATE='"+InvoiceDate+"' AND INVOICE_NO ='"+InvoiceNo+"' AND MATCHED_DATE='"+MatchedDate+"'";
                                data.Execute(strSQL,FinanceGlobal.FinURL);
                                
                                strSQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET MATCHED=1, MATCHED_DATE='"+TransferDate+"' WHERE EFFECT='C' " +
                                "AND MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                "AND INVOICE_DATE='"+InvoiceDate+"' AND INVOICE_NO ='"+InvoiceNo+"' AND MATCHED_DATE='"+MatchedDate+"'";
                                data.Execute(strSQL,FinanceGlobal.FinURL);
                                
                                if(data.IsRecordExist("SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO="+ EntryNo + " AND VOUCHER_NO='"+VoucherNo+"' AND MATCHED=1 AND EFFECT='D' AND MATCHED_DATE='"+MatchedDate+"' ",FinanceGlobal.FinURL)) {
                                    data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET MATCHED=1, MATCHED_DATE='"+TransferDate+"' WHERE ENTRY_NO="+ EntryNo + " AND VOUCHER_NO='"+VoucherNo+"' AND MATCHED=1 AND EFFECT='D' AND MATCHED_DATE='"+MatchedDate+"' ",FinanceGlobal.FinURL);
                                }
                            } else {
                                strSQL = "UPDATE D_FIN_VOUCHER_DETAIL SET MATCHED=1, MATCHED_DATE='"+TransferDate+"' " +
                                "WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND MATCHED_DATE='"+MatchedDate+"'";
                                data.Execute(strSQL,FinanceGlobal.FinURL);
                                
                                strSQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET MATCHED=1, MATCHED_DATE='"+TransferDate+"' " +
                                "WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                "AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND MATCHED_DATE='"+MatchedDate+"'";
                                data.Execute(strSQL,FinanceGlobal.FinURL);
                                
                                strSQL = "UPDATE D_FIN_VOUCHER_DETAIL SET MATCHED=1, MATCHED_DATE='"+TransferDate+"' WHERE EFFECT='C' " +
                                "AND MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                "AND GRN_NO='"+VoucherNo+"' AND MATCHED_DATE='"+MatchedDate+"' ";
                                data.Execute(strSQL,FinanceGlobal.FinURL);
                                
                                strSQL = "UPDATE D_FIN_VOUCHER_DETAIL_EX SET MATCHED=1, MATCHED_DATE='"+TransferDate+"' WHERE EFFECT='C' " +
                                "AND MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' " +
                                "AND GRN_NO='"+VoucherNo+"' AND MATCHED_DATE='"+MatchedDate+"' ";
                                data.Execute(strSQL,FinanceGlobal.FinURL);
                                if(data.IsRecordExist("SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE ENTRY_NO="+ EntryNo + " AND VOUCHER_NO='"+VoucherNo+"' AND MATCHED=1 AND EFFECT='D' AND MATCHED_DATE='"+MatchedDate+"' ",FinanceGlobal.FinURL)) {
                                    data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET MATCHED=1, MATCHED_DATE='"+TransferDate+"' WHERE ENTRY_NO="+ EntryNo + " AND VOUCHER_NO='"+VoucherNo+"' AND MATCHED=1 AND EFFECT='D' AND MATCHED_DATE='"+MatchedDate+"' ",FinanceGlobal.FinURL);
                                }
                            }
                            
                            ResultSet rsCredit = null;
                            if(clsVoucher.getVoucherType(VoucherNo)==FinanceGlobal.TYPE_SALES_JOURNAL) {
                                strSQL = "SELECT A.VOUCHER_NO,B.SR_NO,B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.VOUCHER_NO=B.VOUCHER_NO " +
                                "AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='C' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                                "AND B.INVOICE_DATE = '"+InvoiceDate+"' AND B.INVOICE_NO ='"+InvoiceNo+"' " +
                                "ORDER BY A.VOUCHER_DATE ";
                                rsCredit = data.getResult(strSQL,FinanceGlobal.FinURL);
                                rsCredit.first();
                            } else {
                                strSQL = "SELECT A.VOUCHER_NO,B.SR_NO,B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND A.APPROVED=1 AND A.CANCELLED=0 AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' " +
                                "AND B.SUB_ACCOUNT_CODE='"+PartyCode+"' AND B.EFFECT='C' AND B.GRN_NO='"+VoucherNo+"' ";
                                rsCredit = data.getResult(strSQL,FinanceGlobal.FinURL);
                                rsCredit.first();
                            }
                            
                            if(rsCredit.getRow()>0) {
                                while(!rsCredit.isAfterLast()) {
                                    String ReceiptNo = rsCredit.getString("VOUCHER_NO");
                                    int vSrNo = rsCredit.getInt("SR_NO");
                                    double vAmount = rsCredit.getInt("AMOUNT");
                                    if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE VOUCHER_NO='"+ReceiptNo+"' AND EFFECT='C' AND ENTRY_NO=" + EntryNo + " AND MATCHED=1 AND MATCHED_DATE='"+MatchedDate+"' AND AMOUNT>="+vAmount+" AND INVOICE_TYPE="+InvoiceType,FinanceGlobal.FinURL)) {
                                        int CountRecord = data.getIntValueFromDB("SELECT COUNT(*) FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE VOUCHER_NO='"+ReceiptNo+"' AND EFFECT='C' AND ENTRY_NO=" + EntryNo + " AND MATCHED=1 AND MATCHED_DATE='"+MatchedDate+"' AND AMOUNT>="+vAmount + " AND INVOICE_TYPE="+InvoiceType +" ORDER BY AMOUNT ",FinanceGlobal.FinURL);
                                        int SrNo = data.getIntValueFromDB("SELECT SR_NO FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE VOUCHER_NO='"+ReceiptNo+"' AND EFFECT='C' AND ENTRY_NO=" + EntryNo + " AND MATCHED=1 AND MATCHED_DATE='"+MatchedDate+"' AND AMOUNT>="+vAmount + " AND INVOICE_TYPE="+InvoiceType +" ORDER BY AMOUNT ",FinanceGlobal.FinURL);
                                        data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET MATCHED_DATE='"+TransferDate+"' WHERE INVOICE_TYPE="+InvoiceType+" AND EFFECT='C' AND ENTRY_NO="+ EntryNo + " AND MATCHED=1 AND MATCHED_DATE='"+MatchedDate+"' AND SR_NO="+SrNo,FinanceGlobal.FinURL);
                                    }
                                    rsCredit.next();
                                }
                            }
                        }
                    }
                    cmdSave.setEnabled(true);
                    lblStatus.setText("Ready");
                } catch(Exception e) {
                    cmdSave.setEnabled(true);
                    e.printStackTrace();
                }
            };
        }.start();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdShowListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowListActionPerformed
        // TODO add your handling code here:
        
        if(!Validate()) {
            return;
        }
        
        // int InvoiceType = cmbInvoiceType.getSelectedIndex();
        
        new Thread() {
            
            public void run() {
                try {
                    
                    
                    cmdShowList.setEnabled(false);
                    String TranserDate = EITLERPGLOBAL.formatDateDB(txtTranferDate.getText().trim());
                    String  cInvoiceType  = EITLERPGLOBAL.getCombostrCode(cmbInvoiceType);
                    String InvoiceNo = "", InvoiceDate = "" ,GRNNo = "";
                    String MatchStartDate = txtYear.getText().trim()+"-"+ EITLERPGLOBAL.padLeftEx(Integer.toString(cmbMonth.getSelectedIndex()),"0", 2)+"-01";
                    String MatchEndDate =   txtYear.getText().trim()+"-"+ EITLERPGLOBAL.padLeftEx(Integer.toString(cmbMonth.getSelectedIndex()),"0", 2)+"-12";
                    String strSQL = "SELECT A.VOUCHER_NO,A.VOUCHER_DATE,A.VOUCHER_TYPE,B.INVOICE_NO,B.INVOICE_DATE,B.AMOUNT,B.MATCHED_DATE "+
                    "FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.EFFECT='D' AND B.MAIN_ACCOUNT_CODE= '"+cInvoiceType+"'  " +
                    "AND B.SUB_ACCOUNT_CODE='" + txtPartyCode.getText().trim() + "' AND A.VOUCHER_DATE<='" + TranserDate + "' AND B.MATCHED=1 " +
                    "AND B.MATCHED_DATE>='" + MatchStartDate + "' AND B.MATCHED_DATE<='" + MatchEndDate + "' ORDER BY A.VOUCHER_DATE,A.VOUCHER_NO " ;
                    
                    System.out.println(strSQL) ;
                    
                    
                    //lblStatus.setText("Fetching Records ... ");
                    ResultSet rsCredit = null;
                    ResultSet rsDebit=data.getResult(strSQL,FinanceGlobal.FinURL);
                    rsDebit.first();
                    
                    
                    
                    if(rsDebit.getRow()>0) {
                        FormatGrid();
                        while(!rsDebit.isAfterLast()) {
                            InvoiceNo = "";
                            InvoiceDate = "";
                            GRNNo = "";
                            String DVocuherNo = UtilFunctions.getString(rsDebit,"VOUCHER_NO","");
                            int DVoucherType  = UtilFunctions.getInt(rsDebit,"VOUCHER_TYPE",0);
                            String LinkNo = "";
                            if (DVoucherType == FinanceGlobal.TYPE_SALES_JOURNAL) {
                                InvoiceNo = UtilFunctions.getString(rsDebit,"INVOICE_NO","");
                                InvoiceDate = UtilFunctions.getString(rsDebit,"INVOICE_DATE","0000-00-00");
                                
                                strSQL  = "SELECT A.VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+cInvoiceType+"' " +
                                "AND B.SUB_ACCOUNT_CODE='" + txtPartyCode.getText().trim() + "' AND B.EFFECT='C' " +
                                "AND B.INVOICE_DATE = '" + InvoiceDate + "' AND B.INVOICE_NO ='" + InvoiceNo + "' " +
                                "AND A.APPROVED=1 AND A.CANCELLED=0 ORDER BY A.VOUCHER_DATE ";
                                LinkNo = clsSalesInvoice.getAgentAlphaSrNo(InvoiceNo, InvoiceDate);
                            }
                            else {
                                strSQL  = "SELECT A.VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.GRN_NO= '" +  DVocuherNo +"' AND B.MAIN_ACCOUNT_CODE='"+cInvoiceType+"' " +
                                "AND B.SUB_ACCOUNT_CODE='" + txtPartyCode.getText().trim() + "' AND B.EFFECT='C' AND A.APPROVED=1 AND A.CANCELLED=0 " +
                                "ORDER BY A.VOUCHER_DATE ";
                                LinkNo = data.getStringValueFromDB("SELECT LINK_NO FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+DVocuherNo+"' AND MAIN_ACCOUNT_CODE='"+cInvoiceType+"' " +
                                "AND SUB_ACCOUNT_CODE='" + txtPartyCode.getText().trim() + "' ",FinanceGlobal.FinURL);
                            }
                            rsCredit = data.getResult(strSQL,FinanceGlobal.FinURL);
                            rsCredit.first();
                            boolean found = false;
                            if(rsCredit.getRow()>0) {
                                while(!rsCredit.isAfterLast()) {
                                    //condition
                                    if(java.sql.Date.valueOf(rsCredit.getString("VOUCHER_DATE")).after(java.sql.Date.valueOf(TranserDate))){
                                        found = true;
                                        
                                        break;
                                    }
                                    rsCredit.next();
                                }
                            }
                            if (found) {
                                rsDebit.next();
                                continue;
                            }
                            Object[] rowData=new Object[1];
                            DataModel.addRow(rowData);
                            
                            int NewRow=Table.getRowCount()-1;
                            //lblStatus.setText("Generating Table "+NewRow);
                            
                            DataModel.setValueByVariable("CHECK",Boolean.valueOf(false), NewRow);
                            DataModel.setValueByVariable("SR_NO",Integer.toString(NewRow+1), NewRow);
                            DataModel.setValueByVariable("VOUCHER_NO",DVocuherNo,NewRow);
                            DataModel.setValueByVariable("VOUCHER_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsDebit,"VOUCHER_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("LINK_NO",LinkNo,NewRow);
                            DataModel.setValueByVariable("AMOUNT",Double.toString(UtilFunctions.getDouble(rsDebit,"AMOUNT",0)),NewRow);
                            DataModel.setValueByVariable("INVOICE_NO",UtilFunctions.getString(rsDebit,"INVOICE_NO",""),NewRow);
                            DataModel.setValueByVariable("INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsDebit,"INVOICE_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("MATCHED_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsDebit,"MATCHED_DATE","0000-00-00")),NewRow);
                            rsDebit.next();
                        }
                    }
                    cmdShowList.setEnabled(true);
                    lblStatus.setText("Ready ");
                } catch(Exception e) {
                    cmdShowList.setEnabled(true);
                    lblStatus.setText("Ready ");
                    e.printStackTrace();
                }
            };
        }.start();
    }//GEN-LAST:event_cmdShowListActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JComboBox cmbInvoiceType;
    private javax.swing.JComboBox cmbMonth;
    private javax.swing.JButton cmdClearAll;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdSelectAll;
    private javax.swing.JButton cmdShowList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblYear;
    private javax.swing.JLabel lblYear1;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtPartyName;
    private javax.swing.JTextField txtTranferDate;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
    
    
    private void FormatGrid() {
        try {
            DataModel=new EITLTableModel();
            Table.removeAll();
            
            Table.setModel(DataModel);
            Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn(" ");//0
            DataModel.addColumn("Sr."); //1 - Read Only
            DataModel.addColumn("Voucher No."); //2
            DataModel.addColumn("Voucher Date"); //3
            DataModel.addColumn("Link No"); //3
            DataModel.addColumn("Amount"); //4
            DataModel.addColumn("Invoice No."); //5
            DataModel.addColumn("Invoice Date"); //6
            DataModel.addColumn("Match Date"); //7
            
            
            DataModel.SetVariable(0,"CHECK"); //0
            DataModel.SetVariable(1,"SR_NO"); //1 - Read Only
            DataModel.SetVariable(2,"VOUCHER_NO"); //2 - Read Only
            DataModel.SetVariable(3,"VOUCHER_DATE"); //3 - Read Only
            DataModel.SetVariable(4,"LINK_NO");
            DataModel.SetVariable(5,"AMOUNT"); //4 - Read Only
            DataModel.SetVariable(6,"INVOICE_NO"); //5 - Read Only
            DataModel.SetVariable(7,"INVOICE_DATE"); //6 - Read Only
            DataModel.SetVariable(8,"MATCHED_DATE"); //7 - Read Only
            
            
            DataModel.TableReadOnly(false);
            DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);
            DataModel.SetReadOnly(7);
            DataModel.SetReadOnly(8);
            //
            //            Table.getColumnModel().getColumn(0).setMaxWidth(50);
            //            Table.getColumnModel().getColumn(1).setMaxWidth(100);
            //            Table.getColumnModel().getColumn(2).setMaxWidth(100);
            //            Table.getColumnModel().getColumn(2).setMinWidth(80);
            //            Table.getColumnModel().getColumn(3).setMaxWidth(90);
            //            Table.getColumnModel().getColumn(4).setMaxWidth(90);
            
            Rend.setCustomComponent(0,"CheckBox");
            Table.getColumnModel().getColumn(0).setCellRenderer(Rend);
            Table.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(new JCheckBox()));
        } catch(Exception e) {
            e.printStackTrace();
        }
        //Table formatting completed
    }
    
    private void GenerateCombo() {
        //--- Generate Type Combo ------//
        cmbInvoiceTypeModel= new EITLComboModel();
        
        
        cmbInvoiceTypeModel=new EITLComboModel();
        cmbInvoiceType.removeAllItems();
        cmbInvoiceType.setModel(cmbInvoiceTypeModel);
        
        ComboData aData=new ComboData();
        aData.strCode="0";
        aData.Text="- Select Type -";
        cmbInvoiceTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.strCode="210010";
        aData.Text="Felt";
        cmbInvoiceTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.strCode="210072";
        aData.Text="Filter";
        cmbInvoiceTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.strCode="210027";
        aData.Text="Suiting";
        cmbInvoiceTypeModel.addElement(aData);
        
        aData=new ComboData();
        
        cmbMonthModel=new EITLComboModel();
        cmbMonth.removeAllItems();
        cmbMonth.setModel(cmbMonthModel);
        
        aData=new ComboData();
        aData.Code=0;
        aData.Text="- Select Month -";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="January";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="February";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=3;
        aData.Text="March";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=4;
        aData.Text="April";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=5;
        aData.Text="May";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=6;
        aData.Text="June";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=7;
        aData.Text="July";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=8;
        aData.Text="August";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=9;
        aData.Text="September";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=10;
        aData.Text="October";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=11;
        aData.Text="November";
        cmbMonthModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=12;
        aData.Text="December";
        cmbMonthModel.addElement(aData);
        
        //===============================//
        
    }
    private boolean Validate() {
        //Form level validations
        
        if(EITLERPGLOBAL.getCombostrCode(cmbInvoiceType).equals("0")) {
            JOptionPane.showMessageDialog(null,"Please Select Invoice Type.");
            return false;
        }
        if(txtPartyCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Party Code.");
            return false;
        }
        if(EITLERPGLOBAL.getComboCode(cmbMonth) == 0) {
            JOptionPane.showMessageDialog(null,"Please Select Month");
            return false;
        }
        
        if(txtYear.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Year");
            return false;
        } else if(!EITLERPGLOBAL.IsNumber(txtYear.getText().trim())) {
            JOptionPane.showMessageDialog(null,"Invalid Year in YYYY format.");
            return false;
        } else if (txtYear.getText().trim().length() != 4) {
            JOptionPane.showMessageDialog(null,"Invalid Year in YYYY format.");
            return false;
        }
        if(txtTranferDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Wrong Transfer Date ");
            return false;
        }
        
        if(!txtPartyCode.getText().trim().equals("")) {
            if(!data.IsRecordExist("SELECT * FROM D_FIN_PARTY_MASTER WHERE APPROVED = 1 AND CANCELLED = 0 AND MAIN_ACCOUNT_CODE = '"+EITLERPGLOBAL.getCombostrCode(cmbInvoiceType)+"' AND PARTY_CODE = '"+txtPartyCode.getText().trim()+"'",FinanceGlobal.FinURL)){
                JOptionPane.showMessageDialog(null,"Invalid Party Code.");
                return false;
            }
            
        }
        
        
        
        return true;
    }
}
