/*
 * frmDepositRefund.java
 *
 * Created on November 15, 2008, 1:04 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  Mrugesh Thaker
 */
/*<APPLET CODE=frmInward.class HEIGHT=500 WIDTH=665></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import javax.swing.text.*;
import EITLERP.Utils.*;
import java.sql.*;
import java.net.*;
import EITLERP.*;

public class frmSalesDepositTransfer extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsSalesDepositTransfer objSalesDepositTransfer;
    
    private boolean Updating=false;
    
    private String theDocNo="";
    private EITLTableModel DataModelL;
    private EITLTableModel DataModelA;
    private EITLTableModel DataModelHS;
    
    private EITLComboModel cmbHierarchyModel;
    private EITLComboModel cmbToModel;
    
    private EITLComboModel cmbSchemeIDModelFrom;
    private EITLComboModel cmbSchemeIDModelTo;
    
    private String SelPrefix=""; //Selected Prefix
    private String SelSuffix=""; //Selected Prefix
    private int FFNo=0;
    
    private int SelHierarchyID=0;
    private int lnFromID=0;
    
    private boolean IsGenerating=false;
    
    public frmPendingApprovals frmPA;
    
    /** Creates new form frmTemplate */
    public frmSalesDepositTransfer() {
        
        setSize(668,535);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        
        GenerateCombos();
        
        objSalesDepositTransfer = new clsSalesDepositTransfer();
        
        SetMenuForRights();
        
        if(getName().equals("Link")) {
            
        }
        else {
            if(objSalesDepositTransfer.LoadData(EITLERPGLOBAL.gCompanyID)) {
                objSalesDepositTransfer.MoveLast();
                DisplayData();
                SetMenuForRights();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while loading data. Error is "+objSalesDepositTransfer.LastError);
            }
        }
        ShowMessage("Ready...");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        Header = new javax.swing.JTabbedPane();
        Panel1 = new javax.swing.JPanel();
        txtDocDate = new javax.swing.JTextField();
        lblDocDate = new javax.swing.JLabel();
        lblDocNo = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        cmdNext1 = new javax.swing.JButton();
        lblPartyCode = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        lblPartyName = new javax.swing.JLabel();
        txtPartyName = new javax.swing.JTextField();
        lblToPartyCode = new javax.swing.JLabel();
        txtToPartyCode = new javax.swing.JTextField();
        lblToPartyName = new javax.swing.JLabel();
        txtToPartyName = new javax.swing.JTextField();
        lblPartyMainCode = new javax.swing.JLabel();
        lblRemarks = new javax.swing.JLabel();
        txtRemarks = new javax.swing.JTextField();
        txtPartyMainCode = new javax.swing.JTextField();
        lblToPartyMainCode = new javax.swing.JLabel();
        txtToPartyMainCode = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableL = new javax.swing.JTable();
        Tab2 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        cmbHierarchy = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtFromRemarks = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        OpgApprove = new javax.swing.JRadioButton();
        OpgFinal = new javax.swing.JRadioButton();
        OpgReject = new javax.swing.JRadioButton();
        OpgHold = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        cmbSendTo = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        txtToRemarks = new javax.swing.JTextField();
        cmdBack1 = new javax.swing.JButton();
        cmdFromRemarksBig = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableA = new javax.swing.JTable();
        lblDocumentHistory = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableHS = new javax.swing.JTable();
        cmdViewHistory = new javax.swing.JButton();
        cmdNormalView = new javax.swing.JButton();
        cmdPreviewA = new javax.swing.JButton();
        cmdShowRemarks = new javax.swing.JButton();
        txtAuditRemarks = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" Sales Deposit Scheme Transfer");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 666, 25);

        Panel1.setLayout(null);

        Panel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        txtDocDate.setName("PARTY_CODE");
        txtDocDate.setEnabled(false);
        Panel1.add(txtDocDate);
        txtDocDate.setBounds(415, 20, 120, 19);

        lblDocDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocDate.setText("Doc Date :");
        Panel1.add(lblDocDate);
        lblDocDate.setBounds(305, 20, 105, 15);

        lblDocNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocNo.setText("Doc No. :");
        Panel1.add(lblDocNo);
        lblDocNo.setBounds(5, 20, 85, 15);

        txtDocNo.setEditable(false);
        txtDocNo.setName("PARTY_ID");
        txtDocNo.setNextFocusableComponent(txtDocDate);
        txtDocNo.setEnabled(false);
        Panel1.add(txtDocNo);
        txtDocNo.setBounds(100, 20, 120, 19);

        cmdNext1.setText("Next>>");
        cmdNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNext1ActionPerformed(evt);
            }
        });

        Panel1.add(cmdNext1);
        cmdNext1.setBounds(530, 340, 102, 25);

        lblPartyCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPartyCode.setText("Party Code :");
        lblPartyCode.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        Panel1.add(lblPartyCode);
        lblPartyCode.setBounds(5, 50, 85, 15);

        txtPartyCode.setName("PARTY_CODE");
        txtPartyCode.setEnabled(false);
        txtPartyCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPartyCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPartyCodeFocusLost(evt);
            }
        });
        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });

        Panel1.add(txtPartyCode);
        txtPartyCode.setBounds(100, 50, 120, 19);

        lblPartyName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPartyName.setText("Party Name :");
        lblPartyName.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        Panel1.add(lblPartyName);
        lblPartyName.setBounds(5, 80, 85, 15);

        txtPartyName.setEditable(false);
        txtPartyName.setFont(new java.awt.Font("Dialog", 1, 12));
        txtPartyName.setName("PARTY_CODE");
        txtPartyName.setEnabled(false);
        Panel1.add(txtPartyName);
        txtPartyName.setBounds(100, 80, 200, 19);

        lblToPartyCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToPartyCode.setText("To Party Code :");
        Panel1.add(lblToPartyCode);
        lblToPartyCode.setBounds(305, 50, 105, 15);

        txtToPartyCode.setEnabled(false);
        txtToPartyCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToPartyCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtToPartyCodeFocusLost(evt);
            }
        });
        txtToPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtToPartyCodeKeyPressed(evt);
            }
        });

        Panel1.add(txtToPartyCode);
        txtToPartyCode.setBounds(415, 50, 120, 19);

        lblToPartyName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToPartyName.setText("To Party Name :");
        Panel1.add(lblToPartyName);
        lblToPartyName.setBounds(305, 80, 105, 15);

        txtToPartyName.setEditable(false);
        txtToPartyName.setFont(new java.awt.Font("Dialog", 1, 12));
        txtToPartyName.setEnabled(false);
        Panel1.add(txtToPartyName);
        txtToPartyName.setBounds(415, 80, 200, 19);

        lblPartyMainCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPartyMainCode.setText("Main Code :");
        Panel1.add(lblPartyMainCode);
        lblPartyMainCode.setBounds(5, 110, 85, 15);

        lblRemarks.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRemarks.setText("Remarks :");
        Panel1.add(lblRemarks);
        lblRemarks.setBounds(5, 140, 85, 15);

        txtRemarks.setEnabled(false);
        txtRemarks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRemarksFocusGained(evt);
            }
        });

        Panel1.add(txtRemarks);
        txtRemarks.setBounds(100, 140, 510, 19);

        txtPartyMainCode.setEditable(false);
        txtPartyMainCode.setEnabled(false);
        Panel1.add(txtPartyMainCode);
        txtPartyMainCode.setBounds(100, 110, 120, 19);

        lblToPartyMainCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToPartyMainCode.setText("Main Code :");
        Panel1.add(lblToPartyMainCode);
        lblToPartyMainCode.setBounds(320, 110, 90, 15);

        txtToPartyMainCode.setEnabled(false);
        txtToPartyMainCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToPartyMainCodeFocusGained(evt);
            }
        });

        Panel1.add(txtToPartyMainCode);
        txtToPartyMainCode.setBounds(415, 110, 120, 19);

        jLabel1.setText("<html> <b> <font color='RED'> Table display deposit information till this document final approved.</font></b></html>");
        Panel1.add(jLabel1);
        jLabel1.setBounds(10, 170, 620, 15);

        TableL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableL.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(TableL);

        Panel1.add(jScrollPane4);
        jScrollPane4.setBounds(10, 190, 620, 140);

        Header.addTab("Header", Panel1);

        Tab2.setLayout(null);

        Tab2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Hierarchy :");
        Tab2.add(jLabel31);
        jLabel31.setBounds(15, 18, 65, 15);

        cmbHierarchy.setNextFocusableComponent(txtFrom);
        cmbHierarchy.setEnabled(false);
        cmbHierarchy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbHierarchyItemStateChanged(evt);
            }
        });
        cmbHierarchy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbHierarchyFocusGained(evt);
            }
        });

        Tab2.add(cmbHierarchy);
        cmbHierarchy.setBounds(86, 14, 184, 24);

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("From :");
        Tab2.add(jLabel32);
        jLabel32.setBounds(43, 52, 40, 15);

        txtFrom.setBackground(new java.awt.Color(204, 204, 204));
        txtFrom.setNextFocusableComponent(txtFromRemarks);
        Tab2.add(txtFrom);
        txtFrom.setBounds(86, 50, 182, 19);

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Remarks :");
        Tab2.add(jLabel35);
        jLabel35.setBounds(19, 80, 65, 15);

        txtFromRemarks.setBackground(new java.awt.Color(204, 204, 204));
        txtFromRemarks.setNextFocusableComponent(cmdFromRemarksBig);
        txtFromRemarks.setEnabled(false);
        Tab2.add(txtFromRemarks);
        txtFromRemarks.setBounds(86, 78, 468, 19);

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Your Action :");
        Tab2.add(jLabel36);
        jLabel36.setBounds(5, 120, 80, 15);

        jPanel7.setLayout(null);

        jPanel7.setBorder(new javax.swing.border.EtchedBorder());
        OpgApprove.setText("Approve & Forward");
        buttonGroup1.add(OpgApprove);
        OpgApprove.setNextFocusableComponent(OpgFinal);
        OpgApprove.setEnabled(false);
        OpgApprove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgApproveMouseClicked(evt);
            }
        });

        jPanel7.add(OpgApprove);
        OpgApprove.setBounds(6, 6, 171, 23);

        OpgFinal.setText("Final Approve");
        buttonGroup1.add(OpgFinal);
        OpgFinal.setNextFocusableComponent(OpgReject);
        OpgFinal.setEnabled(false);
        OpgFinal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgFinalMouseClicked(evt);
            }
        });

        jPanel7.add(OpgFinal);
        OpgFinal.setBounds(6, 32, 136, 20);

        OpgReject.setText("Reject");
        buttonGroup1.add(OpgReject);
        OpgReject.setNextFocusableComponent(OpgHold);
        OpgReject.setEnabled(false);
        OpgReject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgRejectMouseClicked(evt);
            }
        });

        jPanel7.add(OpgReject);
        OpgReject.setBounds(6, 54, 136, 20);

        OpgHold.setSelected(true);
        OpgHold.setText("Hold Document");
        buttonGroup1.add(OpgHold);
        OpgHold.setNextFocusableComponent(cmbSendTo);
        OpgHold.setEnabled(false);
        jPanel7.add(OpgHold);
        OpgHold.setBounds(6, 76, 136, 20);

        Tab2.add(jPanel7);
        jPanel7.setBounds(88, 120, 182, 100);

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Send To :");
        Tab2.add(jLabel33);
        jLabel33.setBounds(25, 232, 60, 15);

        cmbSendTo.setNextFocusableComponent(txtToRemarks);
        cmbSendTo.setEnabled(false);
        cmbSendTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbSendToFocusGained(evt);
            }
        });

        Tab2.add(cmbSendTo);
        cmbSendTo.setBounds(88, 228, 184, 24);

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Remarks :");
        Tab2.add(jLabel34);
        jLabel34.setBounds(20, 264, 65, 15);

        txtToRemarks.setNextFocusableComponent(cmdBack1);
        txtToRemarks.setEnabled(false);
        txtToRemarks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToRemarksFocusGained(evt);
            }
        });

        Tab2.add(txtToRemarks);
        txtToRemarks.setBounds(88, 260, 516, 19);

        cmdBack1.setText("<< Back");
        cmdBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBack1ActionPerformed(evt);
            }
        });

        Tab2.add(cmdBack1);
        cmdBack1.setBounds(520, 320, 102, 25);

        cmdFromRemarksBig.setText("...");
        cmdFromRemarksBig.setNextFocusableComponent(OpgApprove);
        cmdFromRemarksBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFromRemarksBigActionPerformed(evt);
            }
        });

        Tab2.add(cmdFromRemarksBig);
        cmdFromRemarksBig.setBounds(559, 77, 33, 21);

        Header.addTab("Approval", Tab2);

        jPanel6.setLayout(null);

        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel26.setText("Document Approval Status");
        jPanel6.add(jLabel26);
        jLabel26.setBounds(12, 10, 242, 14);

        TableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TableA);

        jPanel6.add(jScrollPane2);
        jScrollPane2.setBounds(12, 40, 614, 144);

        lblDocumentHistory.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblDocumentHistory.setText("Document Update History");
        jPanel6.add(lblDocumentHistory);
        lblDocumentHistory.setBounds(13, 191, 182, 14);

        TableHS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TableHS);

        jPanel6.add(jScrollPane3);
        jScrollPane3.setBounds(13, 207, 473, 148);

        cmdViewHistory.setText("View Revisions");
        cmdViewHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdViewHistoryActionPerformed(evt);
            }
        });

        jPanel6.add(cmdViewHistory);
        cmdViewHistory.setBounds(498, 242, 132, 24);

        cmdNormalView.setText("Back to Normal");
        cmdNormalView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNormalViewActionPerformed(evt);
            }
        });

        jPanel6.add(cmdNormalView);
        cmdNormalView.setBounds(498, 273, 132, 24);

        cmdPreviewA.setText("Preview Report");
        jPanel6.add(cmdPreviewA);
        cmdPreviewA.setBounds(498, 209, 132, 24);

        cmdShowRemarks.setText("Show Remarks");
        cmdShowRemarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowRemarksActionPerformed(evt);
            }
        });

        jPanel6.add(cmdShowRemarks);
        cmdShowRemarks.setBounds(498, 305, 132, 24);

        txtAuditRemarks.setEnabled(false);
        jPanel6.add(txtAuditRemarks);
        txtAuditRemarks.setBounds(500, 340, 129, 19);

        Header.addTab("Status", jPanel6);

        getContentPane().add(Header);
        Header.setBounds(2, 66, 654, 400);
        Header.getAccessibleContext().setAccessibleName("Header");
        Header.getAccessibleContext().setAccessibleDescription("Header");

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(4, 470, 650, 23);

    }//GEN-END:initComponents

    private void txtRemarksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRemarksFocusGained
        // TODO add your handling code here:
        lblStatus.setText("Enter Remarks.");
    }//GEN-LAST:event_txtRemarksFocusGained

    private void txtToPartyMainCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToPartyMainCodeFocusGained
        // TODO add your handling code here:
        lblStatus.setText("Enter Main Code");
    }//GEN-LAST:event_txtToPartyMainCodeFocusGained

    private void txtToPartyCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToPartyCodeFocusGained
        // TODO add your handling code here:
        lblStatus.setText("Press F1");
    }//GEN-LAST:event_txtToPartyCodeFocusGained

    private void txtPartyCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartyCodeFocusGained
        // TODO add your handling code here:
        lblStatus.setText("Press F1");
    }//GEN-LAST:event_txtPartyCodeFocusGained
    
    private void txtToPartyCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToPartyCodeFocusLost
        // TODO add your handling code here:
        if(!txtToPartyCode.getText().trim().equals("")) {
            txtToPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE IN ('132642','132635','132714','132666') AND PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
            txtToPartyMainCode.setText(data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FD_SALES_DEPOSIT_MASTER WHERE PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
        } else {
            txtToPartyCode.setText("");
            txtToPartyName.setText("");
            txtToPartyMainCode.setText("");
        }
    }//GEN-LAST:event_txtToPartyCodeFocusLost
    
    private void txtToPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtToPartyCodeKeyPressed
        // TODO add your handling code here:
        if(EditMode==EITLERPGLOBAL.ADD || EditMode==EITLERPGLOBAL.EDIT) {
            if(evt.getKeyCode()==112) {//F1 Key pressed
                LOV aList=new LOV();
                
                aList.SQL="SELECT DISTINCT PARTY_CODE,PARTY_NAME "+
                " FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE IN ('132642','132635','132714','132666') "+
                " ORDER BY PARTY_CODE ";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=2;
                aList.UseSpecifiedConn=true;
                aList.dbURL=FinanceGlobal.FinURL;
                
                if(aList.ShowLOV()) {
                    txtToPartyCode.setText(aList.ReturnVal);
                    txtToPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
                    txtToPartyMainCode.setText(data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FD_SALES_DEPOSIT_MASTER WHERE PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
                } else {
                    txtToPartyCode.setText("");
                    txtToPartyName.setText("");
                    txtToPartyMainCode.setText("");
                }
            }
        }
    }//GEN-LAST:event_txtToPartyCodeKeyPressed
    
    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        // TODO add your handling code here:
        if(EditMode==EITLERPGLOBAL.ADD || EditMode==EITLERPGLOBAL.EDIT) {
            if(evt.getKeyCode()==112) {//F1 Key pressed
                LOV aList=new LOV();
                
                aList.SQL="SELECT DISTINCT PARTY_CODE,PARTY_NAME "+
                " FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE IN ('132642','132635','132714','132666') "+
                " ORDER BY PARTY_CODE ";
                aList.ReturnCol=1;
                aList.ShowReturnCol=true;
                aList.DefaultSearchOn=2;
                aList.UseSpecifiedConn=true;
                aList.dbURL=FinanceGlobal.FinURL;
                
                if(aList.ShowLOV()) {
                    txtPartyCode.setText(aList.ReturnVal);
                    txtPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
                    txtPartyMainCode.setText(data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FD_SALES_DEPOSIT_MASTER WHERE PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
                    GenerateGrid();
                } else {
                    txtPartyCode.setText("");
                    txtPartyName.setText("");
                    txtPartyMainCode.setText("");
                }
            }
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed
    
    private void txtPartyCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartyCodeFocusLost
        // TODO add your handling code here:
        if(!txtPartyCode.getText().trim().equals("")) {
            txtPartyName.setText(data.getStringValueFromDB("SELECT PARTY_NAME FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE IN ('132642','132635','132714','132666') AND PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
            txtPartyMainCode.setText(data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FD_SALES_DEPOSIT_MASTER WHERE PARTY_CODE='"+txtPartyCode.getText().trim()+"' ",FinanceGlobal.FinURL));
            GenerateGrid();
        } else {
            txtPartyCode.setText("");
            txtPartyName.setText("");
            txtPartyMainCode.setText("");
        }
    }//GEN-LAST:event_txtPartyCodeFocusLost
    
    private void txtToRemarksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToRemarksFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter extra Remarks for further Approval person hints ............");
    }//GEN-LAST:event_txtToRemarksFocusGained
    
    private void cmbSendToFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbSendToFocusGained
        // TODO add your handling code here:
        ShowMessage("Select Users list from selection for further approval hierarchy ............");
    }//GEN-LAST:event_cmbSendToFocusGained
    
    private void cmbHierarchyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbHierarchyFocusGained
        // TODO add your handling code here:
        ShowMessage("Select Hierarchy from given list for Approval ............");
    }//GEN-LAST:event_cmbHierarchyFocusGained
    
    private void cmdBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBack1ActionPerformed
        // TODO add your handling code here:
        Header.setSelectedIndex(0);
    }//GEN-LAST:event_cmdBack1ActionPerformed
    
    private void cmdNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNext1ActionPerformed
        // TODO add your handling code here:
        Header.setSelectedIndex(1);
    }//GEN-LAST:event_cmdNext1ActionPerformed
    
    private void cmdShowRemarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowRemarksActionPerformed
        // TODO add your handling code here:
        if(TableHS.getRowCount()>0&&TableHS.getSelectedRow()>=0) {
            txtAuditRemarks.setText((String)TableHS.getValueAt(TableHS.getSelectedRow(),4));
            BigEdit bigEdit=new BigEdit();
            bigEdit.theText=txtAuditRemarks;
            bigEdit.ShowEdit();
        }
    }//GEN-LAST:event_cmdShowRemarksActionPerformed
    
    private void cmdNormalViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNormalViewActionPerformed
        // TODO add your handling code here:
        objSalesDepositTransfer.LoadData(EITLERPGLOBAL.gCompanyID);
        MoveFirst();
    }//GEN-LAST:event_cmdNormalViewActionPerformed
    
    private void cmdViewHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdViewHistoryActionPerformed
        // TODO add your handling code here:
        objSalesDepositTransfer.ShowHistory(EITLERPGLOBAL.gCompanyID, objSalesDepositTransfer.getAttribute("DOC_NO").toString());
        MoveFirst();
    }//GEN-LAST:event_cmdViewHistoryActionPerformed
    
    private void OpgRejectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgRejectMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(false);
        OpgHold.setSelected(false);
        
        GenerateRejectedUserCombo();
        cmbSendTo.setEnabled(true);
    }//GEN-LAST:event_OpgRejectMouseClicked
    
    private void OpgFinalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgFinalMouseClicked
        // TODO add your handling code here:
        if(!OpgFinal.isEnabled()) {
            OpgHold.setSelected(true);
        }
    }//GEN-LAST:event_OpgFinalMouseClicked
    
    private void OpgApproveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgApproveMouseClicked
        // TODO add your handling code here:
        SetupApproval();
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            GenerateRejectedUserCombo();
            if(ApprovalFlow.IsOnceRejectedDoc(EITLERPGLOBAL.gCompanyID,clsSalesDepositTransfer.ModuleID , txtDocNo.getText())) {
                //objSalesDepositTransfer.getAttribute("DOC_NO").toString()
                cmbSendTo.setEnabled(true);
            }
            else {
                cmbSendTo.setEnabled(false);
            }
        }
        
        if(cmbSendTo.getItemCount()<=0) {
            GenerateFromCombo();
        }
    }//GEN-LAST:event_OpgApproveMouseClicked
    
    private void cmdFromRemarksBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFromRemarksBigActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtFromRemarks;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_cmdFromRemarksBigActionPerformed
    
    private void cmbHierarchyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHierarchyItemStateChanged
        // TODO add your handling code here:
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        GenerateFromCombo();
        
        if(clsHierarchy.CanSkip((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        } else {
            cmbSendTo.setEnabled(false);
        }
        
        if(clsHierarchy.CanFinalApprove((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        } else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }
    }//GEN-LAST:event_cmbHierarchyItemStateChanged
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        objSalesDepositTransfer.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
            //Delete();
        }
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Header;
    private javax.swing.JRadioButton OpgApprove;
    private javax.swing.JRadioButton OpgFinal;
    private javax.swing.JRadioButton OpgHold;
    private javax.swing.JRadioButton OpgReject;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Tab2;
    private javax.swing.JTable TableA;
    private javax.swing.JTable TableHS;
    private javax.swing.JTable TableL;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cmbHierarchy;
    private javax.swing.JComboBox cmbSendTo;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdBack1;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdFromRemarksBig;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdNext1;
    private javax.swing.JButton cmdNormalView;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPreviewA;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdShowRemarks;
    private javax.swing.JButton cmdTop;
    private javax.swing.JButton cmdViewHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblDocDate;
    private javax.swing.JLabel lblDocNo;
    private javax.swing.JLabel lblDocumentHistory;
    private javax.swing.JLabel lblPartyCode;
    private javax.swing.JLabel lblPartyMainCode;
    private javax.swing.JLabel lblPartyName;
    private javax.swing.JLabel lblRemarks;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblToPartyCode;
    private javax.swing.JLabel lblToPartyMainCode;
    private javax.swing.JLabel lblToPartyName;
    private javax.swing.JTextField txtAuditRemarks;
    private javax.swing.JTextField txtDocDate;
    private javax.swing.JTextField txtDocNo;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtFromRemarks;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtPartyMainCode;
    private javax.swing.JTextField txtPartyName;
    private javax.swing.JTextField txtRemarks;
    private javax.swing.JTextField txtToPartyCode;
    private javax.swing.JTextField txtToPartyMainCode;
    private javax.swing.JTextField txtToPartyName;
    private javax.swing.JTextField txtToRemarks;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    private void SetFields(boolean pStat) {
        txtDocDate.setEnabled(pStat);
        txtPartyCode.setEnabled(pStat);
        txtToPartyCode.setEnabled(pStat);
        txtToPartyMainCode.setEnabled(pStat);
        txtRemarks.setEnabled(pStat);
        OpgApprove.setEnabled(pStat);
        OpgFinal.setEnabled(pStat);
        OpgReject.setEnabled(pStat);
        OpgHold.setEnabled(pStat);
        txtToRemarks.setEnabled(pStat);
    }
    
    private void ClearFields() {
        txtDocNo.setText("");
        txtDocDate.setText("");
        txtPartyCode.setText("");
        txtPartyName.setText("");
        txtPartyMainCode.setText("");
        txtToPartyCode.setText("");
        txtToPartyName.setText("");
        txtToPartyMainCode.setText("");
        txtRemarks.setText("");
        GenerateCombos();
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        
        //=========== Color Indication ===============//
        try {
            if(EditMode==0) {
                if(objSalesDepositTransfer.getAttribute("APPROVED").getInt()==1) {
                    lblTitle.setBackground(Color.BLUE);
                }
                
                if(objSalesDepositTransfer.getAttribute("APPROVED").getInt()!=1) {
                    lblTitle.setBackground(Color.GRAY);
                }
                
                if(objSalesDepositTransfer.getAttribute("CANCELLED").getInt()==1) {
                    lblTitle.setBackground(Color.RED);
                }
            }
        }
        catch(Exception e) {
        }
        //============================================//
        
        ClearFields();
        
        txtDocNo.setText(objSalesDepositTransfer.getAttribute("DOC_NO").getString());
        txtDocDate.setText(EITLERPGLOBAL.formatDate(objSalesDepositTransfer.getAttribute("DOC_DATE").getString()));
        txtPartyCode.setText(objSalesDepositTransfer.getAttribute("PARTY_CODE").getString());
        txtPartyName.setText(objSalesDepositTransfer.getAttribute("PARTY_NAME").getString());
        txtPartyMainCode.setText(objSalesDepositTransfer.getAttribute("MAIN_ACCOUNT_CODE").getString());
        txtToPartyCode.setText(objSalesDepositTransfer.getAttribute("TO_PARTY_CODE").getString());
        txtToPartyName.setText(objSalesDepositTransfer.getAttribute("TO_PARTY_NAME").getString());
        txtToPartyMainCode.setText(objSalesDepositTransfer.getAttribute("TO_MAIN_ACCOUNT_CODE").getString());
        txtRemarks.setText(objSalesDepositTransfer.getAttribute("REMARKS").getString());
        GenerateGrid();
        SetupApproval();
        
        EITLERPGLOBAL.setComboIndex(cmbHierarchy,objSalesDepositTransfer.getAttribute("HIERARCHY_ID").getString());
        
        //======== Generating Grid for Document Approval Flow ========//
        FormatGridA();
        HashMap List=new HashMap();
        String DocNo=objSalesDepositTransfer.getAttribute("DOC_NO").getString();
        List=ApprovalFlow.getDocumentFlow(EITLERPGLOBAL.gCompanyID, clsSalesDepositTransfer.ModuleID , DocNo);
        for(int i=1;i<=List.size();i++) {
            clsDocFlow ObjFlow=(clsDocFlow)List.get(Integer.toString(i));
            Object[] rowData=new Object[7];
            
            rowData[0]=Integer.toString(i);
            rowData[1]=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(int)ObjFlow.getAttribute("USER_ID").getVal());
            rowData[2]=ObjFlow.getAttribute("STATUS").getString();
            rowData[3]=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID, (int)ObjFlow.getAttribute("DEPT_ID").getVal());
            rowData[4]=EITLERPGLOBAL.formatDate((String)ObjFlow.getAttribute("RECEIVED_DATE").getObj());
            rowData[5]=EITLERPGLOBAL.formatDate((String)ObjFlow.getAttribute("ACTION_DATE").getObj());
            rowData[6]=(String)ObjFlow.getAttribute("REMARKS").getObj();
            
            DataModelA.addRow(rowData);
        }
        //============================================================//
        
        //=========================== Audit Trail ===========================//
        FormatGridHS();
        
        HashMap History=clsSalesDepositTransfer.getHistoryList(EITLERPGLOBAL.gCompanyID, objSalesDepositTransfer.getAttribute("DOC_NO").getString());
        for(int i=1;i<=History.size();i++) {
            clsSalesDepositTransfer ObjHistory=(clsSalesDepositTransfer)History.get(Integer.toString(i));
            Object[] rowData=new Object[5];
            
            rowData[0]=Integer.toString((int)ObjHistory.getAttribute("REVISION_NO").getVal());
            rowData[1]=ObjHistory.getAttribute("UPDATED_BY").getString();
            rowData[2]=ObjHistory.getAttribute("ENTRY_DATE").getString();
            
            String ApprovalStatus="";
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("A")) {
                ApprovalStatus="Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("F")) {
                ApprovalStatus="Final Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("W")) {
                ApprovalStatus="Waiting";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("R")) {
                ApprovalStatus="Rejected";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("P")) {
                ApprovalStatus="Pending";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("C")) {
                ApprovalStatus="Skiped";
            }
            
            rowData[3]=ApprovalStatus;
            rowData[4]=(String)ObjHistory.getAttribute("APPROVER_REMARKS").getObj();
            
            DataModelHS.addRow(rowData);
        }
        //=========================== Audit Trail Over ===========================//
    }
    
    //Sets data to the Class Object
    private void SetData() {
        objSalesDepositTransfer.setAttribute("FFNO",FFNo);
        objSalesDepositTransfer.setAttribute("DOC_NO",txtDocNo.getText());
        objSalesDepositTransfer.setAttribute("DOC_DATE",txtDocDate.getText());
        objSalesDepositTransfer.setAttribute("PARTY_CODE",txtPartyCode.getText());
        objSalesDepositTransfer.setAttribute("PARTY_NAME",txtPartyName.getText());
        objSalesDepositTransfer.setAttribute("MAIN_ACCOUNT_CODE",txtPartyMainCode.getText());
        objSalesDepositTransfer.setAttribute("TO_PARTY_CODE",txtToPartyCode.getText());
        objSalesDepositTransfer.setAttribute("TO_PARTY_NAME",txtToPartyName.getText());
        objSalesDepositTransfer.setAttribute("TO_MAIN_ACCOUNT_CODE",txtToPartyMainCode.getText());
        objSalesDepositTransfer.setAttribute("REMARKS",txtRemarks.getText().trim());
        
        //----- Update Approval Specific Fields -----------//
        objSalesDepositTransfer.setAttribute("HIERARCHY_ID",EITLERPGLOBAL.getComboCode(cmbHierarchy));
        objSalesDepositTransfer.setAttribute("FROM",EITLERPGLOBAL.gNewUserID);
        objSalesDepositTransfer.setAttribute("TO",EITLERPGLOBAL.getComboCode(cmbSendTo));
        objSalesDepositTransfer.setAttribute("FROM_REMARKS",txtToRemarks.getText());
        
        if(OpgApprove.isSelected()) {
            objSalesDepositTransfer.setAttribute("APPROVAL_STATUS","A");
        }
        
        if(OpgFinal.isSelected()) {
            objSalesDepositTransfer.setAttribute("APPROVAL_STATUS","F");
        }
        
        if(OpgReject.isSelected()) {
            objSalesDepositTransfer.setAttribute("APPROVAL_STATUS","R");
            objSalesDepositTransfer.setAttribute("REJECTED_REMARKS",txtToRemarks.getText());
            objSalesDepositTransfer.setAttribute("SEND_DOC_TO",EITLERPGLOBAL.getComboCode(cmbSendTo));
        }
        
        if(OpgHold.isSelected()) {
            objSalesDepositTransfer.setAttribute("APPROVAL_STATUS","H");
        }
        
        if(EditMode == EITLERPGLOBAL.ADD) {
            objSalesDepositTransfer.setAttribute("CREATED_BY",EITLERPGLOBAL.gLoginID);
            objSalesDepositTransfer.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDate());
        } else {
            objSalesDepositTransfer.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gLoginID);
            objSalesDepositTransfer.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDate());
        }
        //-------------------------------------------------//
    }
    
    private void SetMenuForRights() {
        
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12161)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12162)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12163)) {
            cmdDelete.setEnabled(true);
        }
        else {
            cmdDelete.setEnabled(false);
        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12164)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
    }
    
    private void Add() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        //Now Generate new document no.
        SelectFirstFree aList=new SelectFirstFree();
        aList.ModuleID=clsSalesDepositTransfer.ModuleID;
        
        if(aList.ShowList()) {
            EditMode=EITLERPGLOBAL.ADD;
            SetFields(true);
            DisableToolbar();
            ClearFields();
            SelPrefix=aList.Prefix; //Selected Prefix;
            SelSuffix=aList.Suffix;
            FFNo = aList.FirstFreeNo;
            SetupApproval();
            //Display newly generated document no.
            txtDocNo.setText(clsFirstFree.getNextFreeNo(EITLERPGLOBAL.gCompanyID, clsSalesDepositTransfer.ModuleID , FFNo,  false));
            txtDocDate.setText(EITLERPGLOBAL.getCurrentDate());
            txtPartyCode.requestFocus();
            
            lblTitle.setText("DEPOSIT TRANSFER - " + txtDocNo.getText());
            lblTitle.setBackground(Color.BLUE);
        }
        else {
            JOptionPane.showMessageDialog(null,"You must select doucment number prefix. If no prefixes found in the list, Please do entry in First Free Nos.");
        }
    }
    
    private void Edit() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        String DocNo=objSalesDepositTransfer.getAttribute("DOC_NO").getString();
        
        if(objSalesDepositTransfer.IsEditable(EITLERPGLOBAL.gCompanyID, DocNo, EITLERPGLOBAL.gNewUserID)) {
            
            EITLERPGLOBAL.ChangeCursorToWait(this);
            
            EditMode=EITLERPGLOBAL.EDIT;
            //---New Change ---//
            GenerateCombos();
            DisplayData();
            SetupApproval();
            //----------------//
            
            if(ApprovalFlow.IsCreator(clsSalesDepositTransfer.ModuleID ,DocNo)||clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 1216,12162)) {
                SetFields(true);
            }
            else {
                EnableApproval();
            }
            
            SetupApproval();
            DisableToolbar();
        }
        else {
            JOptionPane.showMessageDialog(null,"You cannot edit this record. It is either approved/rejected or waiting approval for other user");
        }
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Delete() {
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        if(objSalesDepositTransfer.Delete(EITLERPGLOBAL.gNewUserID)) {
            MoveLast();
        }
    }
    
    private void Save() {
        
        EITLERPGLOBAL.ChangeCursorToWait(this);
        if(!Validate()) {
            return;
        }
        
        SetData();
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(objSalesDepositTransfer.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+objSalesDepositTransfer.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(objSalesDepositTransfer.Update()) {
                //Nothing to do
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+objSalesDepositTransfer.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
        
        ShowMessage("Ready...");
        try {
            frmPA.RefreshView();
        }
        catch(Exception e){}
    }
    
    private void Cancel() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
        ShowMessage("Ready...");
    }
    
    private void Find() {
        Loader ObjLoader=new Loader(this,"EITLERP.Finance.frmSalesDepositSchemeTransferFind",true);
        frmSalesDepositSchemeTransferFind ObjReturn= (frmSalesDepositSchemeTransferFind) ObjLoader.getObj();
        
        if(ObjReturn.Cancelled==false) {
            if(!objSalesDepositTransfer.Filter(ObjReturn.strQuery,EITLERPGLOBAL.gCompanyID)) {
                JOptionPane.showMessageDialog(null,"No records found.");
            }
            MoveFirst();
        }
    }
    
    public void FindEx(int pCompanyID, String pDocNo) {
        objSalesDepositTransfer.Filter(" WHERE COMPANY_ID="+pCompanyID+" AND DOC_NO='"+pDocNo+"' ", pCompanyID);
        objSalesDepositTransfer.MoveFirst();
        DisplayData();
    }
    
    private void MoveFirst() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objSalesDepositTransfer.MoveFirst();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MovePrevious() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objSalesDepositTransfer.MovePrevious();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveNext() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objSalesDepositTransfer.MoveNext();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveLast() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objSalesDepositTransfer.MoveLast();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    private void FormatGrid() {
        DataModelL=new EITLTableModel();
        TableL.removeAll();
        TableL.setModel(DataModelL);
        
        //Set the table Readonly
        DataModelL.TableReadOnly(true);
        
        //Add the columns
        DataModelL.addColumn("Sr.");
        DataModelL.addColumn("Receipt No.");
        DataModelL.addColumn("Receipt Date");
        DataModelL.addColumn("Effective Date");
        DataModelL.addColumn("Main Account Code");
        DataModelL.addColumn("Interest Main Code");
        DataModelL.addColumn("Interest Rate");
        DataModelL.addColumn("Amount");
        
        TableColumnModel ColModel=TableL.getColumnModel();
        TableL.setAutoResizeMode(TableL.AUTO_RESIZE_OFF);
    }
    
    private void GenerateGrid() {
        int Srno=0;
        try {
            FormatGrid();
            ResultSet rsReceipt = data.getResult("SELECT RECEIPT_NO,RECEIPT_DATE,EFFECTIVE_DATE,MAIN_ACCOUNT_CODE,INTEREST_MAIN_CODE,INTEREST_RATE,AMOUNT FROM D_FD_SALES_DEPOSIT_MASTER WHERE PARTY_CODE='"+txtPartyCode.getText().trim()+"' AND DEPOSIT_STATUS=0 AND APPROVED=1 AND CANCELLED=0",FinanceGlobal.FinURL);
            rsReceipt.first();
            if(rsReceipt.getRow()>0) {
                while(!rsReceipt.isAfterLast()) {
                    Srno++;
                    Object[] rowData=new Object[8];
                    rowData[0]=Integer.toString(Srno);
                    rowData[1]=UtilFunctions.getString(rsReceipt,"RECEIPT_NO","");
                    rowData[2]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsReceipt,"RECEIPT_DATE","0000-00-00"));
                    rowData[3]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsReceipt,"EFFECTIVE_DATE","0000-00-00"));
                    rowData[4]=UtilFunctions.getString(rsReceipt,"MAIN_ACCOUNT_CODE","");
                    rowData[5]=UtilFunctions.getString(rsReceipt,"INTEREST_MAIN_CODE","");
                    rowData[6]=Double.toString(UtilFunctions.getDouble(rsReceipt,"INTEREST_RATE",0));
                    rowData[7]=Double.toString(UtilFunctions.getDouble(rsReceipt,"AMOUNT",0));

                    DataModelL.addRow(rowData);
                    rsReceipt.next();
                }
            }
            DataModelL.TableReadOnly(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void FormatGridA() {
        DataModelA=new EITLTableModel();
        
        TableA.removeAll();
        TableA.setModel(DataModelA);
        
        //Set the table Readonly
        DataModelA.TableReadOnly(true);
        
        //Add the columns
        DataModelA.addColumn("Sr.");
        DataModelA.addColumn("User");
        DataModelA.addColumn("Status");
        DataModelA.addColumn("Department");
        DataModelA.addColumn("Received Date");
        DataModelA.addColumn("Action Date");
        DataModelA.addColumn("Remarks");
        
        TableA.setAutoResizeMode(TableA.AUTO_RESIZE_OFF);
    }
    
    private void FormatGridHS() {
        DataModelHS=new EITLTableModel();
        
        TableHS.removeAll();
        TableHS.setModel(DataModelHS);
        
        //Set the table Readonly
        DataModelHS.TableReadOnly(true);
        
        //Add the columns
        DataModelHS.addColumn("Rev No.");
        DataModelHS.addColumn("User");
        DataModelHS.addColumn("Date");
        DataModelHS.addColumn("Status");
        DataModelHS.addColumn("Remarks");
        
        TableHS.setAutoResizeMode(TableHS.AUTO_RESIZE_OFF);
    }
    
    private void SetupApproval() {
        
        if(cmbHierarchy.getItemCount()>1) {
            cmbHierarchy.setEnabled(true);
        }
        
        //Set Default Hierarchy ID for User
        int DefaultID=clsHierarchy.getDefaultHierarchy((int)EITLERPGLOBAL.gCompanyID);
        EITLERPGLOBAL.setComboIndex(cmbHierarchy,DefaultID);
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            lnFromID=(int)EITLERPGLOBAL.gNewUserID;
            txtFrom.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID));
            txtFromRemarks.setText("Creator of Document");
        }
        else {
            
            int FromUserID=ApprovalFlow.getFromID((int)EITLERPGLOBAL.gCompanyID, clsSalesDepositTransfer.ModuleID , objSalesDepositTransfer.getAttribute("DOC_NO").toString());
            lnFromID=FromUserID;
            String strFromUser=clsUser.getUserName(EITLERPGLOBAL.gCompanyID, FromUserID);
            String strFromRemarks=ApprovalFlow.getFromRemarks( (int)EITLERPGLOBAL.gCompanyID,clsSalesDepositTransfer.ModuleID ,FromUserID,objSalesDepositTransfer.getAttribute("DOC_NO").toString());
            EITLERPGLOBAL.setComboIndex(cmbHierarchy,objSalesDepositTransfer.getAttribute("HIERARCHY_ID").getInt());
            txtFrom.setText(strFromUser);
            txtFromRemarks.setText(strFromRemarks);
        }
        
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        GenerateFromCombo();
        
        if(clsHierarchy.CanSkip((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        } else {
            cmbSendTo.setEnabled(false);
        }
        
        if(clsHierarchy.CanFinalApprove((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        } else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            cmbHierarchy.setEnabled(false);
        }
        
        if(EditMode==0) {
            cmbHierarchy.setEnabled(false);
            txtFrom.setEnabled(false);
            txtFromRemarks.setEnabled(false);
            OpgApprove.setEnabled(false);
            OpgFinal.setEnabled(false);
            OpgReject.setEnabled(false);
            cmbSendTo.setEnabled(false);
            txtToRemarks.setEnabled(false);
        }
    }
    
    private void GenerateFromCombo() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        
        try {
            if(EditMode==EITLERPGLOBAL.ADD) {
                //----- Generate cmbType ------- //
                cmbToModel=new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);
                
                List=clsHierarchy.getUserList((int)EITLERPGLOBAL.gCompanyID,SelHierarchyID,EITLERPGLOBAL.gNewUserID);
                for(int i=1;i<=List.size();i++) {
                    clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
                    ComboData aData=new ComboData();
                    aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
                    
                    if(ObjUser.getAttribute("USER_ID").getVal()==EITLERPGLOBAL.gNewUserID) {
                        //Exclude Current User
                    }
                    else {
                        cmbToModel.addElement(aData);
                    }
                }
                //------------------------------ //
            }
            else {
                //----- Generate cmbType ------- //
                cmbToModel=new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);
                
                List=ApprovalFlow.getRemainingUsers((int)EITLERPGLOBAL.gCompanyID, clsSalesDepositTransfer.ModuleID ,objSalesDepositTransfer.getAttribute("DOC_NO").toString());
                for(int i=1;i<=List.size();i++) {
                    clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
                    ComboData aData=new ComboData();
                    aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
                    cmbToModel.addElement(aData);
                }
                //------------------------------ //
            }
        }
        catch(Exception e) {
        }
    }
    
    private void GenerateRejectedUserCombo() {
        HashMap List=new HashMap();
        HashMap DeptList=new HashMap();
        HashMap DeptUsers=new HashMap();
        
        //----- Generate cmbType ------- //
        cmbToModel=new EITLComboModel();
        cmbSendTo.removeAllItems();
        cmbSendTo.setModel(cmbToModel);
        
        //Now Add other hierarchy Users
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        
        List=clsHierarchy.getUserList((int)EITLERPGLOBAL.gCompanyID,SelHierarchyID,EITLERPGLOBAL.gNewUserID,true);
        for(int i=1;i<=List.size();i++) {
            clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
            aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
            
            /// NEW CODE ///
            boolean IncludeUser=false;
            //Decide to include user or not
            if(EditMode==EITLERPGLOBAL.EDIT) {
                if(OpgApprove.isSelected()) {
                    IncludeUser=ApprovalFlow.IncludeUserInApproval(EITLERPGLOBAL.gCompanyID, clsSalesDepositTransfer.ModuleID , objSalesDepositTransfer.getAttribute("DOC_NO").getString(), ObjUser.getAttribute("USER_ID").getInt(), EITLERPGLOBAL.gNewUserID);
                }
                
                if(OpgReject.isSelected()) {
                    IncludeUser=ApprovalFlow.IncludeUserInRejection(EITLERPGLOBAL.gCompanyID, clsSalesDepositTransfer.ModuleID, objSalesDepositTransfer.getAttribute("DOC_NO").getString(), ObjUser.getAttribute("USER_ID").getInt() , EITLERPGLOBAL.gNewUserID);
                }
                
                if(IncludeUser&&(( ObjUser.getAttribute("USER_ID").getInt())!=EITLERPGLOBAL.gNewUserID)) {
                    cmbToModel.addElement(aData);
                }
            }
            else {
                if((ObjUser.getAttribute("USER_ID").getInt())!=EITLERPGLOBAL.gNewUserID) {
                    cmbToModel.addElement(aData);
                }
            }
            /// END NEW CODE ///
        }
        //------------------------------ //
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            int Creator=ApprovalFlow.getCreator(EITLERPGLOBAL.gCompanyID, clsSalesDepositTransfer.ModuleID , objSalesDepositTransfer.getAttribute("DOC_NO").getString());
            EITLERPGLOBAL.setComboIndex(cmbSendTo,Creator);
        }
    }
    
    private void GenerateCombos() {
        try {
            //Generates Combo Boxes
            HashMap List=new HashMap();
            String strCondition="";
            
            cmbHierarchyModel=new EITLComboModel();
            cmbHierarchy.removeAllItems();
            cmbHierarchy.setModel(cmbHierarchyModel);
            
            List=clsHierarchy.getListEx(" WHERE D_COM_HIERARCHY.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+clsSalesDepositTransfer.ModuleID);
            
            if(EditMode==EITLERPGLOBAL.EDIT) {
                List=clsHierarchy.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+clsSalesDepositTransfer.ModuleID );
            }
            for(int i=1;i<=List.size();i++) {
                clsHierarchy ObjHierarchy=(clsHierarchy) List.get(Integer.toString(i));
                ComboData aData=new ComboData();
                aData.Code=(int) ObjHierarchy.getAttribute("HIERARCHY_ID").getVal();
                aData.Text=(String)ObjHierarchy.getAttribute("HIERARCHY_NAME").getObj();
                cmbHierarchyModel.addElement(aData);
            }
        }
        catch(Exception e) {
        }
    }
    
    private void EnableApproval() {
        cmbSendTo.setEnabled(true);
        OpgApprove.setEnabled(true);
        OpgFinal.setEnabled(true);
        OpgReject.setEnabled(true);
        OpgHold.setEnabled(true);
        txtToRemarks.setEnabled(true);
        SetupApproval();
        
        //========== Setting Up Header Fields ================//
        String FieldName="";
        int SelHierarchy=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        
        for(int i=0;i<Panel1.getComponentCount()-1;i++) {
            if(Panel1.getComponent(i).getName()!=null) {
                
                FieldName=Panel1.getComponent(i).getName();
                if(clsHierarchy.CanEditField(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, SelHierarchy, "H", FieldName)) {
                    
                    Panel1.getComponent(i).setEnabled(true);
                }
            }
        }
        //=============== Header Fields Setup Complete =================//
    }
    
    private boolean Validate() {
        if(txtPartyCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Party Code.");
            return false;
        }
        if(txtToPartyCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter To Party Code.");
            return false;
        } else if(!data.IsRecordExist("SELECT * FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+txtToPartyCode.getText().trim()+"' AND MAIN_ACCOUNT_CODE='"+txtToPartyMainCode.getText().trim()+"' AND APPROVED=1 AND CANCELLED=0 ",FinanceGlobal.FinURL)) {
            JOptionPane.showMessageDialog(null,"To Party Code with To main code does not exists in finance party master.");
            return false;
        }
        
        if(txtPartyCode.getText().trim().equals(txtToPartyCode.getText().trim())) {
            JOptionPane.showMessageDialog(null,"Party Code and To party code are same.");
            return false;
        }
        
        if(!data.IsRecordExist("SELECT * FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE IN ('132642','132666') AND MAIN_ACCOUNT_CODE='"+txtPartyMainCode.getText().trim()+"' AND SUB_ACCOUNT_CODE=''",FinanceGlobal.FinURL)) {
            JOptionPane.showMessageDialog(null,"Allowed parties with main code : 132642,132666");
            return false;
        }
        
        if(TableL.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(null,"No receipt(s) for party.");
            return false;
        }
        
        if(!data.IsRecordExist("SELECT * FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE IN ('132642','132666') AND MAIN_ACCOUNT_CODE='"+txtToPartyMainCode.getText().trim()+"' AND SUB_ACCOUNT_CODE=''",FinanceGlobal.FinURL)) {
            JOptionPane.showMessageDialog(null,"Allowed parties with main code : 132642,132666");
            return false;
        }
        
        if(txtRemarks.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please insert Remarks.");
            return false;
        } 
        
        if(OpgReject.isSelected()) {
            if(txtToRemarks.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null,"Please Enter Remarks for rejection.");
                return false;
            }
        }
        
        if(!OpgReject.isSelected()) {
            if(!txtDocDate.getText().trim().substring(3,5).equals("03")) {
                int Result = clsVoucher.ValidateVoucherEntry(EditMode,EITLERPGLOBAL.formatDateDB(txtDocDate.getText().trim()));
                if(Result==EITLERPGLOBAL.ADD) {
                    JOptionPane.showMessageDialog(this,"Month is Closed. \nYou can not create voucher(s).");
                    return false;
                } else if(Result==EITLERPGLOBAL.EDIT) {
                    JOptionPane.showMessageDialog(this,"Month is Closed. \nYou can not Approve / Final Approve voucher(s).\n Either you have to cancel voucher or change voucher date.");
                    return false;
                }
            }
        }
        return true;
    }
}
