/*
 * frmSelectionPaymentVoucher.java
 *
 * Created on September 28, 2007, 12:01 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  root
 */
import EITLERP.*;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.event.*;
import javax.swing.text.*;
import java.util.*;
import java.awt.Frame;
import java.awt.*;
import java.sql.*;


public class frmExpenseList extends javax.swing.JApplet {

    private EITLTableModel DataModel=new EITLTableModel();
    private JDialog aDialog;
    public boolean Cancelled=false;
    public clsVoucher objSelectedItem=new clsVoucher();
    public HashMap SelectedItems=new HashMap();
    public String ExpesneID="";
    

    
    /** Initializes the applet frmSelectionPaymentVoucher */
    public void init() {
        setSize(682,403);
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        Tab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtExpenseID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmdShow = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        lblTitle.setBackground(new java.awt.Color(0, 153, 204));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" EXPENSE HISTORY");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 1, 666, 25);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(9, 66, 620, 210);

        cmdClose.setText("Close");
        cmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCloseActionPerformed(evt);
            }
        });

        jPanel2.add(cmdClose);
        cmdClose.setBounds(532, 288, 100, 25);

        jLabel1.setText("Expense Code ");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(12, 12, 100, 15);

        jPanel2.add(txtExpenseID);
        txtExpenseID.setBounds(105, 10, 120, 19);

        jLabel2.setText(".");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(106, 36, 390, 15);

        cmdShow.setText("Show");
        cmdShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowActionPerformed(evt);
            }
        });

        jPanel2.add(cmdShow);
        cmdShow.setBounds(231, 10, 68, 20);

        Tab.addTab("History Information", jPanel2);

        getContentPane().add(Tab);
        Tab.setBounds(3, 32, 650, 350);

    }//GEN-END:initComponents

    private void cmdShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowActionPerformed
        // TODO add your handling code here:
        ExpesneID=txtExpenseID.getText();
        GenerateGrid();
    }//GEN-LAST:event_cmdShowActionPerformed

    private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed
        // TODO add your handling code here:
        Cancelled=true;
        aDialog.dispose();
    }//GEN-LAST:event_cmdCloseActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JTable Table;
    private javax.swing.JButton cmdClose;
    private javax.swing.JButton cmdShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtExpenseID;
    // End of variables declaration//GEN-END:variables

    private void FormatGrid() {
        try {
            
            DataModel=new EITLTableModel();
            Table.removeAll();
            
            Table.setModel(DataModel);
            TableColumnModel ColModel=Table.getColumnModel();
            Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("Sr."); //0 - Read Only
            DataModel.addColumn("Doc No."); //1
            DataModel.addColumn("Doc Date"); //2 //Read Only
            DataModel.addColumn("From Date"); //3
            DataModel.addColumn("To Date"); //3
            DataModel.addColumn("Invoice No."); //4
            DataModel.addColumn("Invoice Date"); //5
            DataModel.addColumn("Invoice Amount"); //6
            DataModel.addColumn("Party Name"); //7
            
            DataModel.SetVariable(0,"SR_NO"); //0 - Read Only
            DataModel.SetVariable(1,"DOC_NO"); //1
            DataModel.SetVariable(2,"DOC_DATE"); //2 //Read Only
            DataModel.SetVariable(3,"FROM_DATE"); //2 //Read Only
            DataModel.SetVariable(4,"TO_DATE"); //2 //Read Only
            DataModel.SetVariable(5,"INVOICE_NO"); //2 //Read Only
            DataModel.SetVariable(6,"INVOICE_DATE"); //2 //Read Only
            DataModel.SetVariable(7,"INVOICE_AMOUNT"); //2 //Read Only
            DataModel.SetVariable(8,"PARTY_NAME"); //2 //Read Only
            
            DataModel.TableReadOnly(true);
            
        }
        catch(Exception e) {
            
        }
        
    }

    private void GenerateGrid() {
        try {

            int Counter=0;
            
            FormatGrid();
            
            ResultSet rsTmp=data.getResult("SELECT * FROM D_FIN_EXPENSE_TRANSACTION WHERE APPROVED=1 AND CANCELLED=0 AND EXPENSE_ID='"+ExpesneID+"' ORDER BY DOC_DATE DESC ",FinanceGlobal.FinURL);
            rsTmp.first();
            
            if(rsTmp.getRow()>0)
            {
            while(!rsTmp.isAfterLast())
            {
            
                Counter++;
                
                Object[] rowData=new Object[9];
                
                rowData[0]=Integer.toString(Counter);
                rowData[1]=UtilFunctions.getString(rsTmp,"DOC_NO","");
                rowData[2]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"DOC_DATE","0000-00-00"));
                rowData[3]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"FROM_DATE","0000-00-00"));
                rowData[4]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"TO_DATE","0000-00-00"));
                rowData[5]=UtilFunctions.getString(rsTmp,"INVOICE_NO","");
                rowData[6]=EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00"));
                rowData[7]=Double.toString(UtilFunctions.getDouble(rsTmp,"INVOICE_AMOUNT",0));
                rowData[8]=UtilFunctions.getString(rsTmp,"PARTY_NAME","");
                
                DataModel.addRow(rowData);
                
                rsTmp.next();
            }
            }
        }
        catch(Exception e) {
            
        }
        
    }

    public boolean ShowDialog() {
        try {
            
            setSize(682,403);
            initComponents();
            
            GenerateGrid();
            
            Frame f=findParentFrame(this);
            
            aDialog=new JDialog(f,"Expense History",true);
            
            aDialog.getContentPane().add("Center",this);
            Dimension appletSize = this.getSize();
            aDialog.setSize(appletSize);
            aDialog.setResizable(false);
            
            //Place it to center of the screen
            Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
            aDialog.setLocation((int)(screenSize.width-appletSize.getWidth())/2,(int)(screenSize.height-appletSize.getHeight())/2);
            
            aDialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE);
            aDialog.show();
        }
        catch(Exception e) {
        }
        return !Cancelled;
    }

    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
}
