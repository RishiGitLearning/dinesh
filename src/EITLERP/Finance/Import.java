/*
 * Import.java
 *
 * Created on August 12, 2007, 3:17 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  root
 */
import java.sql.*;
import java.util.*;
import java.io.*;
import EITLERP.*;
import EITLERP.Stores.*;
import TReportWriter.*;
import TReportWriter.SimpleDataProvider.*;
import EITLERP.Sales.*;


public class Import extends javax.swing.JApplet {
    
    public String CloneURL="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
    public int DefaultFinHierarchy=777;
    //public int DefaultFinHierarchy=621;
    public int DefaultCompanyID=2;
    
    /** Initializes the applet Import */
    public void init() {
        setSize(300,200);
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        cmdStart = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        cmdStart1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtFile1 = new javax.swing.JTextField();
        cmdStart2 = new javax.swing.JButton();
        cmdStart3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        cmdImportBalances = new javax.swing.JButton();
        BAR = new javax.swing.JProgressBar();
        jButton7 = new javax.swing.JButton();
        cmdDeleteOBCInvoiceEntry = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        cmdImportSJTR = new javax.swing.JButton();
        cmdDFintoLFin = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        cmdAdvAmt = new javax.swing.JButton();
        cmdTemp = new javax.swing.JButton();
        cmdtempadj = new javax.swing.JButton();
        txtDebitVoucher = new javax.swing.JTextField();
        txtPartyCode = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        txtCreditVoucher = new javax.swing.JTextField();
        txtSrNo = new javax.swing.JTextField();
        group_code = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jLabel1.setText("Import From ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(12, 18, 90, 15);

        txtFile.setText("/home/eitlerp/SUB1003.TXT");
        getContentPane().add(txtFile);
        txtFile.setBounds(96, 17, 280, 19);

        cmdStart.setText("Start");
        cmdStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStartActionPerformed(evt);
            }
        });

        getContentPane().add(cmdStart);
        cmdStart.setBounds(30, 70, 110, 25);

        lblStatus.setText("----------");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(32, 123, 220, 15);

        cmdStart1.setText("Post GRN Gen.");
        cmdStart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStart1ActionPerformed(evt);
            }
        });

        getContentPane().add(cmdStart1);
        cmdStart1.setBounds(200, 130, 150, 25);

        jLabel2.setText("GRN");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 220, 70, 15);

        getContentPane().add(txtFile1);
        txtFile1.setBounds(90, 220, 100, 19);

        cmdStart2.setText("Post GRN Row");
        cmdStart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStart2ActionPerformed(evt);
            }
        });

        getContentPane().add(cmdStart2);
        cmdStart2.setBounds(390, 120, 150, 25);

        cmdStart3.setText("Post Jobwork");
        cmdStart3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStart3ActionPerformed(evt);
            }
        });

        getContentPane().add(cmdStart3);
        cmdStart3.setBounds(10, 150, 150, 25);

        jButton1.setText("Import TR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(10, 180, 140, 25);

        jButton2.setText("Match TR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(300, 180, 120, 25);

        jButton3.setText("Post It");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(10, 240, 74, 25);

        jButton4.setText("Print Ledger");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(200, 60, 120, 25);

        jButton5.setText("Import Party");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton5);
        jButton5.setBounds(200, 90, 180, 25);

        cmdImportBalances.setText("Import Balances");
        cmdImportBalances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdImportBalancesActionPerformed(evt);
            }
        });
        cmdImportBalances.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                cmdImportBalancesComponentHidden(evt);
            }
        });

        getContentPane().add(cmdImportBalances);
        cmdImportBalances.setBounds(240, 210, 150, 25);

        getContentPane().add(BAR);
        BAR.setBounds(19, 48, 148, 14);

        jButton7.setText("Post Party");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton7);
        jButton7.setBounds(340, 240, 150, 25);

        cmdDeleteOBCInvoiceEntry.setText("Delete OBC Invoice Entry");
        cmdDeleteOBCInvoiceEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteOBCInvoiceEntryActionPerformed(evt);
            }
        });

        getContentPane().add(cmdDeleteOBCInvoiceEntry);
        cmdDeleteOBCInvoiceEntry.setBounds(110, 240, 201, 25);

        jButton9.setText("jButton9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton9);
        jButton9.setBounds(420, 90, 88, 25);

        jButton10.setText("jButton10");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton10);
        jButton10.setBounds(190, 180, 96, 25);

        jButton11.setText("Approve SJs");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton11);
        jButton11.setBounds(430, 180, 109, 25);

        jButton12.setText("Invoice Check");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton12);
        jButton12.setBounds(420, 60, 120, 25);

        cmdImportSJTR.setText("Import SJ TR");
        cmdImportSJTR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdImportSJTRActionPerformed(evt);
            }
        });

        getContentPane().add(cmdImportSJTR);
        cmdImportSJTR.setBounds(410, 210, 140, 25);

        cmdDFintoLFin.setText("D_Fin_to_L_Fin");
        cmdDFintoLFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDFintoLFinActionPerformed(evt);
            }
        });

        getContentPane().add(cmdDFintoLFin);
        cmdDFintoLFin.setBounds(30, 270, 201, 25);

        jButton6.setText("jButton6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton6);
        jButton6.setBounds(320, 270, 88, 25);

        cmdAdvAmt.setText("ADV_AMT");
        cmdAdvAmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAdvAmtActionPerformed(evt);
            }
        });

        getContentPane().add(cmdAdvAmt);
        cmdAdvAmt.setBounds(420, 270, 110, 25);

        cmdTemp.setText("TEMP");
        cmdTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTempActionPerformed(evt);
            }
        });

        getContentPane().add(cmdTemp);
        cmdTemp.setBounds(240, 270, 67, 25);

        cmdtempadj.setText("temp_adj");
        cmdtempadj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtempadjActionPerformed(evt);
            }
        });

        getContentPane().add(cmdtempadj);
        cmdtempadj.setBounds(350, 330, 170, 25);

        getContentPane().add(txtDebitVoucher);
        txtDebitVoucher.setBounds(20, 300, 110, 19);

        getContentPane().add(txtPartyCode);
        txtPartyCode.setBounds(430, 300, 90, 19);

        getContentPane().add(txtAmount);
        txtAmount.setBounds(260, 300, 110, 19);

        getContentPane().add(txtCreditVoucher);
        txtCreditVoucher.setBounds(140, 300, 110, 19);

        getContentPane().add(txtSrNo);
        txtSrNo.setBounds(380, 300, 40, 19);

        group_code.setText("group");
        group_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                group_codeActionPerformed(evt);
            }
        });

        getContentPane().add(group_code);
        group_code.setBounds(50, 340, 71, 25);

    }//GEN-END:initComponents

    private void cmdImportBalancesComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cmdImportBalancesComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdImportBalancesComponentHidden
    
    private void group_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_group_codeActionPerformed
        // TODO add your handling code here:
        boolean Done=false;
        
        try {
            BufferedReader aFile=new BufferedReader(new FileReader(new File("/root/Desktop/gp.csv")));
            while(!Done) {
                
                String FileRecord=aFile.readLine();
                String[] ArrRecord=FileRecord.split(",");
                String GroupCode = ArrRecord[0];
                String GroupName = ArrRecord[1];
                String  SQL = "INSERT INTO D_FIN_GROUP_MASTER " +
                "(COMPANY_ID,GROUP_CODE,GROUP_NAME,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,CHANGED,CHANGED_DATE) " +
                "VALUES " +
                "(2,'"+GroupCode+"','"+GroupName+"','Admin','2011-07-01','Admin','2011-07-01',1,'2011-07-01')";
                data.Execute(SQL,FinanceGlobal.FinURL);
            }
        }catch(Exception e){
            Done=true;
            e.printStackTrace();
        }
        System.out.println("*** Finished ***");
    }//GEN-LAST:event_group_codeActionPerformed
    
    private void cmdtempadjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtempadjActionPerformed
        // TODO add your handling code here:
        if(clsVoucher.getVoucherType(txtCreditVoucher.getText().trim())==FinanceGlobal.TYPE_RECEIPT) {
            new clsDrAdjustment().AdjustReceiptAmount(2, txtDebitVoucher.getText().trim(), txtCreditVoucher.getText().trim(), Double.parseDouble(txtAmount.getText().trim()),Integer.parseInt(txtSrNo.getText().trim()),txtPartyCode.getText().trim());
        }
        
        if(clsVoucher.getVoucherType(txtCreditVoucher.getText().trim())==FinanceGlobal.TYPE_JOURNAL) {
            new clsDrAdjustment().AdjustJournalAmount(2, txtDebitVoucher.getText().trim(), txtCreditVoucher.getText().trim(), Double.parseDouble(txtAmount.getText().trim()),Integer.parseInt(txtSrNo.getText().trim()),txtPartyCode.getText().trim());
        }
        /*ResultSet rsData = data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND MAIN_ACCOUNT_CODE IN ('210027') ",FinanceGlobal.FinURL);
        while(!rsData.isAfterLast()) {
            String MainCode = rsData.getString("MAIN_ACCOUNT_CODE");
            String SubCode = rsData.getString("SUB_ACCOUNT_CODE");
            //String GRNNo = rsData.getString("GRN_NO");
            double AdjustAmount = rsData.getDouble("AMOUNT");
            while(AdjustAmount>0) {
                if(clsVoucher.getVoucherType(GRNNo) > 0) {
                    int GRNVoucherType = clsVoucher.getVoucherType(GRNNo);
                    String strSQL = "SELECT B.SR_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE = '"+MainCode+"' " +
                    "AND B.SUB_ACCOUNT_CODE='"+SubCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='C' " +
                    "AND (B.INVOICE_NO ='' OR B.INVOICE_NO LIKE 'DUM%') AND B.GRN_NO ='' " +
                    "AND B.MODULE_ID <>"+clsVoucher.DebitNoteModuleID+" " +
                    "AND A.VOUCHER_NO='"+GRNNo+"' " +
                    "ORDER BY B.SR_NO ";
                    int VoucherSrNo = data.getIntValueFromDB(strSQL,FinanceGlobal.FinURL);
         
                    strSQL = "SELECT B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                    "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE = '"+MainCode+"' " +
                    "AND B.SUB_ACCOUNT_CODE='"+SubCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='C' " +
                    "AND (B.INVOICE_NO ='' OR B.INVOICE_NO LIKE 'DUM%') AND B.GRN_NO ='' AND B.MODULE_ID <>"+clsVoucher.DebitNoteModuleID+" " +
                    "AND A.VOUCHER_NO='"+GRNNo+"' AND B.SR_NO="+VoucherSrNo;
                    double AmountCanAdjust =  data.getDoubleValueFromDB(strSQL,FinanceGlobal.FinURL);
         
                    if(AdjustAmount > AmountCanAdjust) {
                        if(GRNVoucherType==FinanceGlobal.TYPE_RECEIPT || GRNVoucherType == FinanceGlobal.TYPE_CASH_RECEIPT_VOUCHER
                        || GRNVoucherType==FinanceGlobal.TYPE_CREDIT_NOTE) {
                            new clsDrAdjustment().AdjustReceiptAmount(2, VoucherNo, GRNNo, AmountCanAdjust,VoucherSrNo,SubCode);
                        }
                        if(GRNVoucherType==FinanceGlobal.TYPE_JOURNAL) {
                            new clsDrAdjustment().AdjustJournalAmount(2, VoucherNo, GRNNo, AmountCanAdjust,VoucherSrNo,SubCode);
                        }
                        AdjustAmount = AdjustAmount - AmountCanAdjust;
                    } else {
                        if(GRNVoucherType==FinanceGlobal.TYPE_RECEIPT || GRNVoucherType == FinanceGlobal.TYPE_CASH_RECEIPT_VOUCHER
                        || GRNVoucherType==FinanceGlobal.TYPE_CREDIT_NOTE) {
                            new clsDrAdjustment().AdjustReceiptAmount(2, VoucherNo, GRNNo, AdjustAmount,VoucherSrNo,SubCode);
                        }
                        if(GRNVoucherType==FinanceGlobal.TYPE_JOURNAL) {
                            new clsDrAdjustment().AdjustJournalAmount(2, VoucherNo, GRNNo, AdjustAmount,VoucherSrNo,SubCode);
                        }
                        AdjustAmount = 0;
                    }
                }
            }
            rsData.next();
        }*/
    }//GEN-LAST:event_cmdtempadjActionPerformed
    
    private void cmdTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTempActionPerformed
        // TODO add your handling code here:
        
            /*ResultSet rsData = data.getResult("SELECT * FROM D_FD_SALES_DEPOSIT_MASTER WHERE ",FinanceGlobal.FinURL);
            int Counter = 0;
            while(!rsData.isAfterLast()) {
                String PartyCode = rsData.getString("PARTY_CODE");
                data.Execute("DELETE FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='125019' AND PARTY_CODE='"+PartyCode+"' ",FinanceGlobal.FinURL);
                data.Execute("UPDATE D_FIN_PARTY_MASTER SET MAIN_ACCOUNT_CODE='125019' WHERE PARTY_CODE='"+PartyCode+"' AND TRIM(MAIN_ACCOUNT_CODE)='' ",FinanceGlobal.FinURL);
                System.out.println(Counter);
                rsData.next();
            }*/
        
        
            /*BufferedReader aFile=new BufferedReader(new FileReader(new File("/root/Desktop/SUITING.TXT")));
            boolean Done=false;
            ResultSet rsData = null;
            int Pointer=0;
            while(!Done) {
                try {
                    String FileRecord=aFile.readLine();
                    Pointer=0;
                    String PartyCode ="", VoucherNo = "",VoucherDate= "",LinkNo="";
                    double Amount = 0;
                    PartyCode = FileRecord.substring(Pointer,Pointer+6);
                    Pointer+=6;
                    VoucherNo = FileRecord.substring(Pointer,Pointer+20).trim();Pointer+=20;
                    VoucherDate =  FileRecord.substring(Pointer,Pointer+4)+"-"+FileRecord.substring(Pointer+4,Pointer+6) +"-"+FileRecord.substring(Pointer+6,Pointer+8);
                    Pointer+=8;
                    Amount = Double.parseDouble(FileRecord.substring(Pointer,Pointer+13).trim());
                    Pointer+=13;
                    LinkNo = FileRecord.substring(Pointer,Pointer+12);
                    Pointer+=12;
                    data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET EXCLUDE_IN_ADJ=0, CHANGED=1, CHANGED_DATE=CURDATE() WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                } catch(Exception c){
                    Done=true;
                }
            }*/
        try {
            ResultSet rsData1 = data.getResult("SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT,B.INVOICE_NO,B.GRN_NO,B.MAIN_ACCOUNT_CODE,B.SUB_ACCOUNT_CODE " +
            "FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_TYPE IN (6,7,8,9,12) AND B.MAIN_ACCOUNT_CODE IN ('210010') " +
            "AND A.VOUCHER_NO NOT LIKE 'M%' AND B.GRN_NO<>'' " +
            "AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='D' AND A.VOUCHER_TYPE=9 AND A.VOUCHER_DATE>='2010-04-01' " +
            "AND A.VOUCHER_DATE<='2010-12-31' " +
            "ORDER BY A.VOUCHER_DATE ",FinanceGlobal.FinURL);
            int Counter=0;
            while(!rsData1.isAfterLast()) {
                String VoucherNo = rsData1.getString("VOUCHER_NO");
                String VoucherDate = rsData1.getString("VOUCHER_DATE");
                String GRNNo = rsData1.getString("GRN_NO");
                double Amount = rsData1.getDouble("AMOUNT");
                String MainCode = rsData1.getString("MAIN_ACCOUNT_CODE");
                String SubCode = rsData1.getString("SUB_ACCOUNT_CODE");
                
                if(data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+GRNNo+"' AND EXCLUDE_IN_ADJ=0 ",FinanceGlobal.FinURL)) {
                    if(data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+GRNNo+"' AND GRN_NO='"+VoucherNo+"' AND EFFECT='C' AND AMOUNT="+Amount,FinanceGlobal.FinURL)) {
                        rsData1.next();
                        continue;
                    }
                    
                    /*if(data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+GRNNo+"' AND EFFECT='C' AND AMOUNT="+Amount,FinanceGlobal.FinURL)) {
                        rsData1.next();
                        continue;
                    }*/
                    
                    //Counter++;
                    //System.out.println("GRNNo = " + GRNNo);
                    
                    //====================
                    
                    double CreditVoucherAmount = data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+GRNNo+"' AND EFFECT='C' ",FinanceGlobal.FinURL);
                    double againstInvoice = data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+GRNNo+"' AND EFFECT='C' AND MODULE_ID=80",FinanceGlobal.FinURL);
                    double ImportAmount = data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE GRN_NO='"+GRNNo+"' AND EFFECT='D' ",FinanceGlobal.FinURL);
                    if((CreditVoucherAmount - againstInvoice - ImportAmount) < 0 ) {
                        Counter++;
                        System.out.println("Debit Voucher No : "+ VoucherNo +" Credit Voucher No : " + GRNNo + " Main Code : " + MainCode + " Sub Code : " + SubCode +" Credit Amount : " + CreditVoucherAmount + " Against Invoice : " + againstInvoice + " Import Amount : " + ImportAmount + EITLERPGLOBAL.padLeftEx(" Diff : ", " ", 7) + (CreditVoucherAmount - againstInvoice - ImportAmount) );
                    }
                    //                    ResultSet rsData = data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND MAIN_ACCOUNT_CODE IN ('210027','210010','210072') ",FinanceGlobal.FinURL);
                    //                    while(!rsData.isAfterLast()) {
                    //                        String MainCode = rsData.getString("MAIN_ACCOUNT_CODE");
                    //                        String SubCode = rsData.getString("SUB_ACCOUNT_CODE");
                    //String GRNNo = rsData.getString("GRN_NO");
                      /*double AdjustAmount = rsData1.getDouble("AMOUNT");
                        while(AdjustAmount>0) {
                            if(clsVoucher.getVoucherType(GRNNo) > 0) {
                                int GRNVoucherType = clsVoucher.getVoucherType(GRNNo);
                                String strSQL = "SELECT B.SR_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE = '"+MainCode+"' " +
                                "AND B.SUB_ACCOUNT_CODE='"+SubCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='C' " +
                                "AND (B.INVOICE_NO ='' OR B.INVOICE_NO LIKE 'DUM%') AND B.GRN_NO ='' " +
                                "AND B.MODULE_ID <>"+clsVoucher.DebitNoteModuleID+" " +
                                "AND A.VOUCHER_NO='"+GRNNo+"' " +
                                "ORDER BY B.SR_NO ";
                                int VoucherSrNo = data.getIntValueFromDB(strSQL,FinanceGlobal.FinURL);
                                if(VoucherSrNo==0) {
                                    System.out.println("Voucher No : " + VoucherNo + " GRN No : " + GRNNo + " PROBLEM == .");
                                    AdjustAmount = 0;
                                    continue;
                                }
                                strSQL = "SELECT B.AMOUNT FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE = '"+MainCode+"' " +
                                "AND B.SUB_ACCOUNT_CODE='"+SubCode+"' AND A.APPROVED=1 AND A.CANCELLED=0 AND B.EFFECT='C' " +
                                "AND (B.INVOICE_NO ='' OR B.INVOICE_NO LIKE 'DUM%') AND B.GRN_NO ='' AND B.MODULE_ID <>"+clsVoucher.DebitNoteModuleID+" " +
                                "AND A.VOUCHER_NO='"+GRNNo+"' AND B.SR_NO="+VoucherSrNo;
                                double AmountCanAdjust =  data.getDoubleValueFromDB(strSQL,FinanceGlobal.FinURL);
                       
                                if(AdjustAmount > AmountCanAdjust) {
                                    if(GRNVoucherType==FinanceGlobal.TYPE_RECEIPT || GRNVoucherType == FinanceGlobal.TYPE_CASH_RECEIPT_VOUCHER
                                    || GRNVoucherType==FinanceGlobal.TYPE_CREDIT_NOTE) {
                                        new clsDrAdjustment().AdjustReceiptAmount(2, VoucherNo, GRNNo, AmountCanAdjust,VoucherSrNo,SubCode);
                                    }
                                    if(GRNVoucherType==FinanceGlobal.TYPE_JOURNAL) {
                                        new clsDrAdjustment().AdjustJournalAmount(2, VoucherNo, GRNNo, AmountCanAdjust,VoucherSrNo,SubCode);
                                    }
                                    AdjustAmount = AdjustAmount - AmountCanAdjust;
                                } else {
                                    if(GRNVoucherType==FinanceGlobal.TYPE_RECEIPT || GRNVoucherType == FinanceGlobal.TYPE_CASH_RECEIPT_VOUCHER
                                    || GRNVoucherType==FinanceGlobal.TYPE_CREDIT_NOTE) {
                                        new clsDrAdjustment().AdjustReceiptAmount(2, VoucherNo, GRNNo, AdjustAmount,VoucherSrNo,SubCode);
                                    }
                                    if(GRNVoucherType==FinanceGlobal.TYPE_JOURNAL) {
                                        new clsDrAdjustment().AdjustJournalAmount(2, VoucherNo, GRNNo, AdjustAmount,VoucherSrNo,SubCode);
                                    }
                                    AdjustAmount = 0;
                                }
                            }
                        }*/
                    //                        rsData.next();
                    //                    }
                }
                //=====================
                rsData1.next();
            }
            System.out.println("Counter : " + Counter);
        } catch(Exception e) {
        }
        System.out.println("*********** Finished ***********");
    }//GEN-LAST:event_cmdTempActionPerformed
    
    private void cmdAdvAmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAdvAmtActionPerformed
        // TODO add your handling code here:
        ResultSet rsData=null;
        String SQL="";
        try {
            SQL = "SELECT A.VOUCHER_NO, A.VOUCHER_DATE, B.MAIN_ACCOUNT_CODE, " +
            "B.SUB_ACCOUNT_CODE, B.EFFECT, B.AMOUNT,A.BOOK_CODE,B.SR_NO FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
            "WHERE A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_DATE<='2010-03-31' " +
            "AND A.VOUCHER_TYPE IN (6,7,8,9,12)  AND B.MAIN_ACCOUNT_CODE='210010' AND A.APPROVED=1 AND A.CANCELLED=0 " +
            //"AND B.SUB_ACCOUNT_CODE='826118' " +
            "AND A.EXCLUDE_IN_ADJ =0 AND B.EFFECT='C' AND B.INVOICE_NO ='' AND B.MODULE_ID <>65 AND B.GRN_NO='' " +
            "ORDER BY B.SUB_ACCOUNT_CODE,A.VOUCHER_DATE ";
            rsData = data.getResult(SQL, FinanceGlobal.FinURL);
            rsData.first();
            int Counter=0;
            System.out.println("Sr. No."+"~"+"Voucher No"+"~"+"Voucher Date"+"~"+"Main Code"+"~"+"Party Code"+"~"+"Effect"+"~"+"Amount"+"~"+"Book Code");
            while(!rsData.isAfterLast()) {
                String VoucherNo = UtilFunctions.getString(rsData, "VOUCHER_NO", "");
                String VoucherDate = UtilFunctions.getString(rsData, "VOUCHER_DATE","0000-00-00");
                String SubAccountCode = UtilFunctions.getString(rsData, "SUB_ACCOUNT_CODE", "");
                String MainCode = UtilFunctions.getString(rsData, "MAIN_ACCOUNT_CODE", "");
                String Effect = UtilFunctions.getString(rsData, "EFFECT", "");
                double Amount = UtilFunctions.getDouble(rsData, "AMOUNT", 0);
                String BookCode = UtilFunctions.getString(rsData, "BOOK_CODE", "");
                Amount = clsAccount.get09AmountByVoucher(VoucherNo,MainCode,SubAccountCode,Amount);
                
                if(Amount>0) {
                    Counter++;
                    System.out.println(Counter+"~"+VoucherNo+"~"+EITLERPGLOBAL.formatDate(VoucherDate)+"~"+MainCode+"~"+SubAccountCode+"~"+Effect+"~"+Amount+"~"+BookCode);
                }
                rsData.next();
            }
        } catch(Exception e) {
            
        }
    }//GEN-LAST:event_cmdAdvAmtActionPerformed
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT * FROM D_FIN_DR_OPENING_OUTSTANDING_DETAIL WHERE VOUCHER_NO<>'' ORDER BY SR_NO";
            
            ResultSet rsdata = data.getResult(SQL,FinanceGlobal.FinURL);
            rsdata.first();
            while(!rsdata.isAfterLast()) {
                String SrNo = rsdata.getString("SR_NO");
                int InvoiceType = rsdata.getInt("INVOICE_TYPE");
                int EntryNo = rsdata.getInt("ENTRY_NO");
                int CompanyID = rsdata.getInt("COMPANY_ID");
                String VoucherNo = rsdata.getString("VOUCHER_NO");
                String BookCode = data.getStringValueFromDB("SELECT BOOK_CODE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"' ",FinanceGlobal.FinURL);
                data.Execute("UPDATE D_FIN_DR_OPENING_OUTSTANDING_DETAIL SET BOOK_CODE='"+BookCode+"' WHERE SR_NO="+SrNo+" " +
                "AND INVOICE_TYPE="+InvoiceType+" AND ENTRY_NO="+EntryNo+" AND COMPANY_ID="+CompanyID+" ",FinanceGlobal.FinURL);
                rsdata.next();
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void cmdDFintoLFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDFintoLFinActionPerformed
        // TODO add your handling code here:
        insertDFINToLFIN();
    }//GEN-LAST:event_cmdDFintoLFinActionPerformed
    
    private void cmdImportSJTRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdImportSJTRActionPerformed
        // TODO add your handling code here:
        //migrateSJTR();
        migrateSJTR1();
    }//GEN-LAST:event_cmdImportSJTRActionPerformed
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        new Thread() {
            
            public void run() {
                try {
                    
                    clsSalesInvoice objInvoice=new clsSalesInvoice();
                    
                    //objInvoice.PostSJTypeFilter(2, "B000214");
                    
                    
                    //ResultSet rsInvoice=data.getResult("SELECT INVOICE_NO FROM D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=1");
                    //ResultSet rsInvoice=data.getResult("SELECT INVOICE_NO FROM D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=2");
                    //                    ResultSet rsInvoice=data.getResult("SELECT INVOICE_NO FROM D_SAL_INVOICE_HEADER WHERE INVOICE_TYPE=3");
                    //                    rsInvoice.first();
                    //
                    //                    while(!rsInvoice.isAfterLast()) {
                    //                        String InvoiceNo=rsInvoice.getString("INVOICE_NO");
                    //                        //objInvoice.PostSJTypeSuiting(EITLERPGLOBAL.gCompanyID, InvoiceNo); //INVOICE_TYPE = 1
                    //                        //objInvoice.PostSJTypeFelt(EITLERPGLOBAL.gCompanyID, InvoiceNo); //INVOICE_TYPE = 2
                    //                        objInvoice.PostSJTypeFilter(EITLERPGLOBAL.gCompanyID, InvoiceNo); //INVOICE_TYPE = 3
                    //                        lblStatus.setText("Posted "+InvoiceNo);
                    //                        rsInvoice.next();
                    //                    }
                    //
                    //                    lblStatus.setText("Done ...");
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
        
        
    }//GEN-LAST:event_jButton12ActionPerformed
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        finalApproveSJ(135);
    }//GEN-LAST:event_jButton11ActionPerformed
    
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try {
            
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File("/data/transfer/n_tb_1apr08.txt")));
            
            String strSQL="SELECT A.MAIN_ACCOUNT_CODE,ACCOUNT_NAME,IF(EFFECT='D',AMOUNT,0) AS DEBIT,IF(EFFECT='C',AMOUNT,0) AS CREDIT ";
            strSQL+="FROM D_FIN_OPENING_DETAIL A ";
            strSQL+="LEFT JOIN D_FIN_GL B ON (A.MAIN_ACCOUNT_CODE=B.MAIN_ACCOUNT_CODE) ";
            strSQL+="WHERE ENTRY_NO=2 AND A.SUB_ACCOUNT_CODE='' ORDER BY MAIN_ACCOUNT_CODE";
            
            
            ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsTmp.first();
            
            while(!rsTmp.isAfterLast()) {
                
                aFile.write(rsTmp.getString("MAIN_ACCOUNT_CODE")+","+rsTmp.getString("ACCOUNT_NAME")+","+rsTmp.getDouble("DEBIT")+","+rsTmp.getString("CREDIT"));
                aFile.newLine();
                rsTmp.next();
            }
            
            aFile.close();
            
            System.out.println("Done");
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File("/data/transfer/sub_tb_1apr08.txt")));
            
            String strSQL="SELECT A.MAIN_ACCOUNT_CODE,A.SUB_ACCOUNT_CODE,PARTY_NAME,IF(EFFECT='D',AMOUNT,0) AS DEBIT,IF(EFFECT='C',AMOUNT,0) AS CREDIT ";
            strSQL+="FROM D_FIN_OPENING_DETAIL A ";
            strSQL+="LEFT JOIN D_FIN_PARTY_MASTER  B ON (A.MAIN_ACCOUNT_CODE=B.MAIN_ACCOUNT_CODE AND A.SUB_ACCOUNT_CODE=B.PARTY_CODE) ";
            strSQL+="WHERE ENTRY_NO=2 AND A.SUB_ACCOUNT_CODE<>'' ORDER BY MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE ";
            
            
            ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
            rsTmp.first();
            
            while(!rsTmp.isAfterLast()) {
                
                aFile.write(rsTmp.getString("MAIN_ACCOUNT_CODE")+","+rsTmp.getString("SUB_ACCOUNT_CODE")+","+rsTmp.getString("PARTY_NAME")+","+rsTmp.getDouble("DEBIT")+","+rsTmp.getString("CREDIT"));
                aFile.newLine();
                rsTmp.next();
            }
            
            aFile.close();
            
            System.out.println("Done");
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton9ActionPerformed
    
    private void cmdDeleteOBCInvoiceEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteOBCInvoiceEntryActionPerformed
        // TODO add your handling code here:
        try {
            String SQL = "SELECT * FROM D_FIN_OBC WHERE DOC_DATE>='2010-11-01' AND APPROVED=1 AND CANCELLED=0";
            ResultSet rsData = data.getResult(SQL,FinanceGlobal.FinURL);
            while(!rsData.isAfterLast()) {
                String DocNo = rsData.getString("DOC_NO");
                if(!data.IsRecordExist("SELECT B.* FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
                "WHERE A.VOUCHER_NO=B.VOUCHER_NO AND B.GRN_NO='"+DocNo+"' ",FinanceGlobal.FinURL)) {
                    System.out.println("Doc No : " + DocNo);
                }
                rsData.next();
            }
        } catch(Exception e) {
            
        }
        /*new Thread() {
            public void run() {
                try {
                    String DocNo="";
                    ResultSet rsOBCData = null;
         
         
                    String Qry = "SELECT DOC_NO FROM D_FIN_OBC_INVOICE_HEADER WHERE DOC_DATE>='2008-04-01' AND DOC_DATE<='2009-03-31'";
                    rsOBCData = data.getResult(Qry,FinanceGlobal.FinURL);
                    while(!rsOBCData.isAfterLast()) {
                        DocNo = rsOBCData.getString("DOC_NO");
                        lblStatus.setText("Deleting Doc = "+DocNo);
         
                        Qry = "DELETE FROM D_COM_DOC_DATA WHERE DOC_NO='"+DocNo+"'";
                        data.Execute(Qry);
         
                        Qry = "DELETE FROM D_FIN_OBC_INVOICE_DETAIL_H WHERE DOC_NO='"+DocNo+"'";
                        data.Execute(Qry,FinanceGlobal.FinURL);
         
                        Qry = "DELETE FROM D_FIN_OBC_INVOICE_DETAIL WHERE DOC_NO='"+DocNo+"'";
                        data.Execute(Qry,FinanceGlobal.FinURL);
         
                        Qry = "DELETE FROM D_FIN_OBC_INVOICE_HEADER_H WHERE DOC_NO='"+DocNo+"'";
                        data.Execute(Qry,FinanceGlobal.FinURL);
         
                        Qry = "DELETE FROM D_FIN_OBC_INVOICE_HEADER WHERE DOC_NO='"+DocNo+"'";
                        data.Execute(Qry,FinanceGlobal.FinURL);
         
                        rsOBCData.next();
                    }
                    lblStatus.setText("Done");
                }
                catch(Exception e) {
                }
            };
        }.start();*/
    }//GEN-LAST:event_cmdDeleteOBCInvoiceEntryActionPerformed
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        clsSupplier objSupp=new clsSupplier();
        objSupp.AddPartyToExternalDB("616319", "jdbc:mysql://200.0.0.227:3306/DINESHMILLSA");
    }//GEN-LAST:event_jButton7ActionPerformed
    
    private void cmdImportBalancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdImportBalancesActionPerformed
        // TODO add your handling code here:
        try {
            // Following  2 steps require to run for posing opening balance for Nominal only UPDATE line example as given below for UpdateOpening() function for  Company ID & Entry No. hard coded (It is very importent).
            // eg. String strSQL="INSERT INTO D_FIN_OPENING_DETAIL (COMPANY_ID,ENTRY_NO,SR_NO,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,EFFECT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,CHANGED,CHANGED_DATE) VALUES(2,3,"+Counter+",'"+MainAccountCode+"','"+SubAccountCode+"',"+OpeningBalance+",'"+Effect+"','admin',CURDATE(),'admin',CURDATE(),1,CURDATE())";
            // NOTE : You have to comment Sub ledger if Condition Block (set of lines) eg. below in UpdateOpening(). that is step 2.
            // if(rsGL.getRow()>0) {
            
           ImportGLBalancesEx();//1 step for nominal ledger
            UpdateOpening(); // 2 step
            
            // Following  2 steps require to run for posing opening balance for Subsidery Ledger, only UPDATE line example as given below for UpdateOpening() function for  Company ID & Entry No. hard coded (It is very importent).
            // eg. String strSQL="INSERT INTO D_FIN_OPENING_DETAIL (COMPANY_ID,ENTRY_NO,SR_NO,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,EFFECT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,CHANGED,CHANGED_DATE) VALUES(2,3,"+Counter+",'"+MainAccountCode+"','"+SubAccountCode+"',"+OpeningBalance+",'"+Effect+"','admin',CURDATE(),'admin',CURDATE(),1,CURDATE())";
            // NOTE : You have to comment Nominal GL ledger if Condition Block (set of lines) eg. below in UpdateOpening(). that is step 2.
            // if(rsGL.getRow()>0) {
            
            
            ImportSubLedgerBalancesEx();// Step 1 for subsidery ledger
            UpdateOpening(); // 2 step
            
            /*ImportGLBalances();
            UpdateOpening();*/
            //CompareBalances();
            
            //compareMismatchedParties();
            
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_cmdImportBalancesActionPerformed
    private void ImportPartiesNew() {
        new Thread() {
            public void run(){
                boolean Done=false;
                long Counter=0;
                try {
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM D_FIN_PARTY_MASTER");
                    int Pointer=0;
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    aFile.readLine();
                    aFile.readLine();
                    int SrNo = 0;
                    while(!Done) {
                        //Counter++;
                        lblStatus.setText(Long.toString(Counter));
                        try {
                            String FileRecord=aFile.readLine();
                            HashMap record=EITLERPGLOBAL.Split(FileRecord,"~");
                            Pointer=0;
                            String MainCode = record.get("4").toString();
                            String PartyCode = record.get("5").toString();
                            if (! data.IsRecordExist("SELECT * FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+PartyCode+"' AND MAIN_ACCOUNT_CODE='"+MainCode+"'",FinanceGlobal.FinURL)) {
                                SrNo++;
                                System.out.println("Counter =" + SrNo + " Main Code : " + MainCode + " Sub Code : " + PartyCode);
                                rsTmp.moveToInsertRow();
                                rsTmp.updateInt("COMPANY_ID",2);
                                Counter = data.getLongValueFromDB("SELECT MAX(PARTY_ID)+1 AS PARTY_ID FROM D_FIN_PARTY_MASTER", FinanceGlobal.FinURL);
                                rsTmp.updateLong("PARTY_ID",Counter);
                                rsTmp.updateString("MAIN_ACCOUNT_CODE",record.get("4").toString());
                                rsTmp.updateString("PARTY_CODE",record.get("5").toString());
                                rsTmp.updateString("PARTY_NAME",record.get("6").toString());
                                rsTmp.updateString("SH_NAME",record.get("7").toString());
                                rsTmp.updateString("SH_CODE",record.get("14").toString());
                                rsTmp.updateDouble("CREDIT_DAYS",UtilFunctions.CDbl(record.get("13").toString()));
                                rsTmp.updateDouble("CREDIT_LIMIT",0);
                                rsTmp.updateString("CREATED_BY", "admin");
                                rsTmp.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                rsTmp.updateString("MODIFIED_BY", "admin");
                                rsTmp.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                rsTmp.updateInt("CHANGED", 1);
                                rsTmp.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                rsTmp.updateInt("APPROVED", 1);
                                rsTmp.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                //rsTmp.updateDouble("CLOSING_BALANCE",UtilFunctions.CDbl(record.get("27").toString())/100);
                                //rsTmp.updateString("CLOSING_EFFECT",record.get("28").toString());
                                rsTmp.updateInt("CANCELLED",0);
                                rsTmp.insertRow();
                            }
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                        }
                    }
                }
                catch(Exception e) {
                }
            };
        }.start();
    }
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        try {
            //clsSupplier objSupplier=new clsSupplier();
            
            //objSupplier.Filter(" WHERE SUPPLIER_CODE IN='620219','619677','619680','609148','608139'");
            //objSupplier.Filter(" WHERE SUPPLIER_CODE='608139'");
            //objSupplier.PostParty("");
            
            //ImportSalesParties();
            ImportPartiesNew();
            
        }
        catch(Exception e) {
            
        }
        
        
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //PrintLedger();
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        PostGRNVoucher();
        //ImportAddresses();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        MatchTR();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //MigrateVouchersType3();
        //ImportVoucher();
        
        //MigrateVouchersMainCode_TR_wise();
        MigrateVouchersMainCode_TR_wise();
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cmdStart3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStart3ActionPerformed
        // TODO add your handling code here:
        PostJobWorkVouchers();
    }//GEN-LAST:event_cmdStart3ActionPerformed
    
    private void cmdStart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStart2ActionPerformed
        // TODO add your handling code here:
        PostGRNRawVouchers();
    }//GEN-LAST:event_cmdStart2ActionPerformed
    
    private void cmdStart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStart1ActionPerformed
        // TODO add your handling code here:
        PostGRNVouchers();
    }//GEN-LAST:event_cmdStart1ActionPerformed
    
    private void cmdStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStartActionPerformed
        // TODO add your handling code here:
        
        //ImportGLEx();
        //ImportPartiesEx();
        //ImportExpenseHeader();
        //ImportExpenseDetail();
        //ImportVoucher();
        ImportGLBalances(); //1 step
        //UpdateOpening(); // 2 step
        ImportSubLedgerBalances();
        //FindDuplicatateParties();
        //UpdateHierarchyInfo();
        //checkMissingParty();
    }//GEN-LAST:event_cmdStartActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar BAR;
    private javax.swing.JButton cmdAdvAmt;
    private javax.swing.JButton cmdDFintoLFin;
    private javax.swing.JButton cmdDeleteOBCInvoiceEntry;
    private javax.swing.JButton cmdImportBalances;
    private javax.swing.JButton cmdImportSJTR;
    private javax.swing.JButton cmdStart;
    private javax.swing.JButton cmdStart1;
    private javax.swing.JButton cmdStart2;
    private javax.swing.JButton cmdStart3;
    private javax.swing.JButton cmdTemp;
    private javax.swing.JButton cmdtempadj;
    private javax.swing.JButton group_code;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCreditVoucher;
    private javax.swing.JTextField txtDebitVoucher;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFile1;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtSrNo;
    // End of variables declaration//GEN-END:variables
    
    private void ImportVoucher() {
        new Thread() {
            public void run(){
                boolean Done=false;
                long Counter=0;
                
                try {
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM TR LIMIT 1");
                    int Pointer=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    while(!Done) {
                        Counter++;
                        lblStatus.setText(Long.toString(Counter));
                        try {
                            if(Counter>50000) {
                                lblStatus.setText("Reopening ResultSet");
                                rsTmp.close();
                                System.gc();
                                rsTmp=stTemp.executeQuery("SELECT * FROM TR LIMIT 1");
                            }
                            String FileRecord=aFile.readLine();
                            if(FileRecord.length()>=128) {
                                Pointer=0;
                                
                                rsTmp.moveToInsertRow();
                                rsTmp.updateString("TR_REC_TYP",FileRecord.substring(Pointer, Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_INVAGSR",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                                rsTmp.updateString("TR_DIVCODE",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_BOOK_CD",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_DT_YY",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_DT_MM",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_DT_DD",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_REF_AL",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_REF_NO",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                                rsTmp.updateString("TRMAINCODE",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                                rsTmp.updateString("TRSUBCODE",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                                rsTmp.updateString("TR_CHEQ_NO",FileRecord.substring(Pointer,Pointer+8)); Pointer+=8;
                                rsTmp.updateString("TR_REF_SR",FileRecord.substring(Pointer,Pointer+4)); Pointer+=4;
                                rsTmp.updateString("TRCHQBILDT",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                                rsTmp.updateString("TR_DESC",FileRecord.substring(Pointer,Pointer+25)); Pointer+=25;
                                rsTmp.updateString("TR_SALESTAX",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_AMT",FileRecord.substring(Pointer,Pointer+11)); Pointer+=11;
                                rsTmp.updateString("TR_AMT_SIG",FileRecord.substring(Pointer,Pointer+1)); Pointer+=1;
                                rsTmp.updateString("TRALLOC_CD",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                                rsTmp.updateString("TR_PO_AL",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_PO_NO",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                                rsTmp.updateString("TR_PO_FLG",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_BILL_AL",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_BILL_NO",FileRecord.substring(Pointer,Pointer+6)); Pointer+=6;
                                rsTmp.updateString("TR_PO_FL",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                rsTmp.updateString("TR_YY1YY2",FileRecord.substring(Pointer,Pointer+4)); Pointer+=4;
                                rsTmp.updateString("TR_DIR_IND",FileRecord.substring(Pointer,Pointer+1)); Pointer+=1;
                                rsTmp.updateString("TRAN_CODE",FileRecord.substring(Pointer,Pointer+2)); Pointer+=2;
                                //rsTmp.updateString("EXT",FileRecord.substring(Pointer,Pointer+1));
                                rsTmp.insertRow();
                            }
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                        }
                    }
                    lblStatus.setText("Done");
                }
                catch(Exception e) {
                }
            };
        }.start();
    }
    
    private void ImportParties() {
        new Thread() {
            public void run(){
                boolean Done=false;
                long Counter=0;
                
                try {
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM D_FIN_PARTY_MASTER");
                    int Pointer=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    aFile.readLine();
                    aFile.readLine();
                    
                    while(!Done) {
                        
                        Counter++;
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            
                            HashMap record=EITLERPGLOBAL.Split(FileRecord,",");
                            
                            Pointer=0;
                            
                            rsTmp.moveToInsertRow();
                            rsTmp.updateInt("COMPANY_ID",1);
                            rsTmp.updateLong("PARTY_ID",Counter);
                            rsTmp.updateString("MAIN_ACCOUNT_CODE",record.get("4").toString());
                            rsTmp.updateString("PARTY_CODE",record.get("5").toString());
                            rsTmp.updateString("PARTY_NAME",record.get("6").toString());
                            rsTmp.updateString("SH_NAME",record.get("7").toString());
                            rsTmp.updateString("SH_CODE",record.get("14").toString());
                            rsTmp.updateDouble("CREDIT_DAYS",UtilFunctions.CDbl(record.get("13").toString()));
                            rsTmp.updateDouble("CREDIT_LIMIT",0);
                            rsTmp.updateDouble("CLOSING_BALANCE",UtilFunctions.CDbl(record.get("27").toString())/100);
                            rsTmp.updateString("CLOSING_EFFECT",record.get("28").toString());
                            rsTmp.updateInt("CANCELLED",0);
                            
                            rsTmp.insertRow();
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                        }
                    }
                } catch(Exception e) {
                }
            };
        }.start();
    }
    
    private void ImportGL() {
        new Thread() {
            public void run(){
                boolean Done=false;
                long Counter=0;
                
                try {
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM D_FIN_GL");
                    int Pointer=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    aFile.readLine();
                    aFile.readLine();
                    
                    while(!Done) {
                        
                        Counter++;
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            
                            HashMap record=EITLERPGLOBAL.Split(FileRecord,",");
                            
                            Pointer=0;
                            
                            rsTmp.moveToInsertRow();
                            rsTmp.updateInt("COMPANY_ID",1);
                            rsTmp.updateLong("ACCOUNT_ID",Counter);
                            rsTmp.updateString("MAIN_ACCOUNT_CODE",record.get("4").toString());
                            rsTmp.updateString("SUB_ACCOUNT_CODE",record.get("5").toString());
                            rsTmp.updateString("ACCOUNT_NAME",record.get("6").toString());
                            rsTmp.updateString("SH_NAME",record.get("7").toString());
                            rsTmp.updateString("SH_CODE",record.get("14").toString());
                            rsTmp.updateDouble("CLOSING_BALANCE",UtilFunctions.CDbl(record.get("27").toString())/100);
                            rsTmp.updateString("CLOSING_EFFECT",record.get("28").toString());
                            rsTmp.updateInt("CANCELLED",0);
                            rsTmp.insertRow();
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                        }
                    }
                }
                catch(Exception e) {
                }
            };
        }.start();
    }
    
    private void UpdateOpening() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                
                try {
                    ResultSet rsGL = null;
                    
                    /*rsGL=data.getResult("SELECT * FROM D_FIN_GL ORDER BY MAIN_ACCOUNT_CODE ",FinanceGlobal.FinURL);
                    rsGL.first();
                     
                    if(rsGL.getRow()>0) {
                        while(!rsGL.isAfterLast()) {
                            String MainAccountCode=rsGL.getString("MAIN_ACCOUNT_CODE");
                            String SubAccountCode=rsGL.getString("SUB_ACCOUNT_CODE");
                            double OpeningBalance=rsGL.getDouble("CLOSING_BALANCE");
                            String Effect=rsGL.getString("CLOSING_EFFECT");
                            //Counter++;
                            if(SubAccountCode.equals("000000")) {
                                SubAccountCode="";
                            }
                            Counter=(data.getIntValueFromDB("SELECT MAX(SR_NO) FROM FINANCE.D_FIN_OPENING_DETAIL WHERE ENTRY_NO=5",FinanceGlobal.FinURL) +1) ;
                            lblStatus.setText(" "+Counter);
                            // Following query second parameter is ENTRY_NO - MUST BE CHECK BEFORE RUN THIS PROGRAM
                            String strSQL="INSERT INTO D_FIN_OPENING_DETAIL (COMPANY_ID,ENTRY_NO,SR_NO,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,EFFECT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,CHANGED,CHANGED_DATE) VALUES(2,5,"+Counter+",'"+MainAccountCode+"','"+SubAccountCode+"',"+OpeningBalance+",'"+Effect+"','admin',CURDATE(),'admin',CURDATE(),1,CURDATE())";
                     
                            data.Execute(strSQL,FinanceGlobal.FinURL);
                     
                            rsGL.next();
                        }
                    }*/
                    
                    
                    
                    rsGL=data.getResult("SELECT * FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 ORDER BY MAIN_ACCOUNT_CODE,PARTY_CODE",FinanceGlobal.FinURL);
                    rsGL.first();
                    
                    if(rsGL.getRow()>0) {
                        while(!rsGL.isAfterLast()) {
                            String MainAccountCode=rsGL.getString("MAIN_ACCOUNT_CODE");
                            String SubAccountCode=rsGL.getString("PARTY_CODE");
                            double OpeningBalance=rsGL.getDouble("CLOSING_BALANCE");
                            String Effect=rsGL.getString("CLOSING_EFFECT");
                            //Counter++;
                            if(SubAccountCode.equals("000000")) {
                                SubAccountCode="";
                            }
                            Counter=(data.getIntValueFromDB("SELECT MAX(SR_NO) FROM FINANCE.D_FIN_OPENING_DETAIL WHERE ENTRY_NO=5",FinanceGlobal.FinURL) +1 );
                            lblStatus.setText(" "+Counter);
                            
                            String strSQL="INSERT INTO D_FIN_OPENING_DETAIL (COMPANY_ID,ENTRY_NO,SR_NO,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,EFFECT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,CHANGED,CHANGED_DATE) VALUES(2,5,"+Counter+",'"+MainAccountCode+"','"+SubAccountCode+"',"+OpeningBalance+",'"+Effect+"','admin',CURDATE(),'admin',CURDATE(),1,CURDATE())";
                            
                            data.Execute(strSQL,FinanceGlobal.FinURL);
                            
                            rsGL.next();
                        }
                    }
                    
                }
                catch(Exception e) {
                }
            };
        }.start();
    }
    
    private void PostGRNVouchers() {
        new Thread() {
            
            public void run() {
                try {
                    
                    int VoucherNo=0;
                    
                    clsGRNGen objGRN=new clsGRNGen();
                    objGRN.LoadData(EITLERPGLOBAL.gCompanyID);
                    
                    //String strSQL="SELECT * FROM D_INV_GRN_HEADER WHERE GRN_NO='A726660' GRN_TYPE=1 AND GRN_DATE>='2007-12-01' AND GRN_NO NOT IN (SELECT GRN_NO FROM FINANCE.D_FIN_VOUCHER_DETAIL WHERE COMPANY_ID=3 AND MODULE_ID=7 )";
                    String strSQL="SELECT * FROM D_INV_GRN_HEADER WHERE GRN_NO='"+txtFile.getText()+"'";
                    ResultSet rsTmp=data.getResult(strSQL,CloneURL);
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {
                            String DocNo=rsTmp.getString("GRN_NO");
                            
                            if(!data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_DETAIL WHERE GRN_NO='"+DocNo+"' AND MODULE_ID=7",FinanceGlobal.FinURL)) {
                                
                                System.out.println("GRN No. "+DocNo);
                                
                                VoucherNo++;
                                
                                String newVoucherNo="PJ"+EITLERPGLOBAL.Replicate("0", 6- Integer.toString(VoucherNo).length())+Integer.toString(VoucherNo);
                                
                                boolean Done=false;
                                
                                while(!Done) {
                                    if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+newVoucherNo+"'",FinanceGlobal.FinURL)) {
                                        VoucherNo++;
                                        newVoucherNo="PJ"+EITLERPGLOBAL.Replicate("0", 6- Integer.toString(VoucherNo).length())+Integer.toString(VoucherNo);
                                    }
                                    else {
                                        Done=true;
                                    }
                                }
                                
                                lblStatus.setText("Posting "+DocNo);
                                
                                objGRN.setAttribute("FIN_HIERARCHY_ID",DefaultFinHierarchy); //Diptesh Fixed Hierarchy
                                objGRN.PostVoucher(DocNo,1,"");
                                
                                //                                if(!objGRN.IsPostingNecessary(DocNo,1,""))
                                //                                {
                                //                                    System.out.println("GRN Gen. "+DocNo);
                                //                                }
                                
                            }
                            rsTmp.next();
                        }
                        
                    }
                    
                }
                catch(Exception e) {
                    
                }
                
                lblStatus.setText("Done");
            };
        }.start();
    }
    
    private void PostGRNVoucher() {
        new Thread() {
            
            public void run() {
                try {
                    
                    clsGRNGen objGRN=new clsGRNGen();
                    objGRN.LoadData(1);
                    
                    String DocNo="A753510";
                    
                    objGRN.setAttribute("FIN_HIERARCHY_ID",DefaultFinHierarchy); //Diptesh Fixed Hierarchy
                    objGRN.PostVoucher(DocNo,1,"");
                    
                }
                catch(Exception e) {
                    
                }
                
                lblStatus.setText("Done");
            };
        }.start();
    }
    
    private void ImportGLEx() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                long LineNo=0;
                
                try {
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM D_FIN_GL");
                    int Pointer=0;
                    
                    Counter=data.getLongValueFromDB("SELECT MAX(ACCOUNT_ID) AS ACCOUNT_ID FROM D_FIN_GL", FinanceGlobal.FinURL);
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    //aFile.readLine();
                    //aFile.readLine();
                    
                    while(!Done) {
                        
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            
                            LineNo++;
                            
                            Pointer=8;
                            
                            String MainAccountCode=FileRecord.substring(Pointer, Pointer+6);
                            
                            lblStatus.setText(MainAccountCode);
                            
                            Pointer+=108;
                            
                            //Closing Balances,
                            double Closing1=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect1=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing2=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect2=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing3=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect3=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing4=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect4=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing5=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect5=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing6=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect6=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing7=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect7=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing8=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect8=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing9=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect9=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing10=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect10=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing11=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect11=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            double Closing12=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                            String Effect12=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                            
                            
                            if(data.IsRecordExist("SELECT * FROM D_FIN_GL WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"'",FinanceGlobal.FinURL)) {
                                
                                //Update only balance
                                data.Execute("UPDATE D_FIN_GL SET CLOSING_BALANCE="+Closing3+",CLOSING_EFFECT='"+Effect3+"' WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"'",FinanceGlobal.FinURL);
                            }
                            else {
                                
                                Counter++;
                                Pointer=8;
                                
                                rsTmp.moveToInsertRow();
                                rsTmp.updateInt("COMPANY_ID",2);
                                rsTmp.updateLong("ACCOUNT_ID",Counter);
                                rsTmp.updateString("MAIN_ACCOUNT_CODE",FileRecord.substring(Pointer, Pointer+6));Pointer+=6;
                                rsTmp.updateString("SUB_ACCOUNT_CODE",FileRecord.substring(Pointer,Pointer+6));Pointer+=6;
                                rsTmp.updateString("ACCOUNT_NAME",FileRecord.substring(Pointer,Pointer+36));Pointer+=36;
                                rsTmp.updateString("SH_NAME",FileRecord.substring(Pointer,Pointer+12));Pointer+=12;
                                
                                //Skip Other Fields
                                Pointer+=34;
                                
                                rsTmp.updateString("SH_CODE",FileRecord.substring(Pointer,Pointer+6));Pointer+=6;
                                
                                //Skip Other Fields
                                Pointer+=8;
                                
                                rsTmp.updateDouble("CLOSING_BALANCE",Closing3);
                                rsTmp.updateString("CLOSING_EFFECT",Effect3);
                                rsTmp.updateInt("CANCELLED",0);
                                rsTmp.insertRow();
                            }
                        }
                        catch(Exception c){
                            System.out.println("Last Line No. "+LineNo);
                            c.printStackTrace();
                            Done=true;
                            lblStatus.setText("Done");
                        }
                    }
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    private void MigrateVouchersMainCode_TR_wise() {
        new Thread() {
            
            public void run() {
                try {
                    
                    ResultSet rsVoucher,rsDates;
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stHeader=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsHeader=stHeader.executeQuery("SELECT * FROM L_FIN_VOUCHER_HEADER LIMIT 1");
                    
                    Statement stDetail=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetail=stDetail.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL LIMIT 1");
                    
                    Statement stDetailEx=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetailEx=stDetailEx.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL_EX LIMIT 1");
                    
                    
                    //(3) Creating Entries for Bank/Cash Books - Allocation code is to be search from Book Master
                    String strQry = "";
                    //                    strQry = "SELECT * FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE=3 AND BOOK_CODE NOT IN ('01','02','04','09','10','11','67','26') ";
                    
                    //book code for fixed deposit system
                    //strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD NOT IN ('22','39') ";
                    
                    //BOOK CODE FOR RECEIPT VOUCHER & SALES VOUCHER
                    //strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD NOT IN ('02','14','21','25','45') ";
                    
                    //book code for dealer deposit -- 13266,132642,132635,133155,133203,133162,133179
                    strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD NOT IN ('21') "; //
                    
                    
                    ResultSet rsBook=data.getResult(strQry,FinanceGlobal.FinURL);
                    rsBook.first();
                    
                    if(rsBook.getRow()>0) {
                        while(!rsBook.isAfterLast()) {
                            String BookCode=rsBook.getString("BOOK_CODE").trim();
                            //String BookMainCode=rsBook.getString("MAIN_ACCOUNT_CODE");
                            String Day="";
                            String Month="";
                            String Year="";
                            int VoucherType = 0;
                            int ModuleId = 0;
                            
                            if (BookCode.trim().equals("30")) {
                                VoucherType = 8;
                                ModuleId = 83;
                            }
                            else if ((BookCode.trim().equals("12")) || (BookCode.trim().equals("16")) || (BookCode.trim().equals("17")) || (BookCode.trim().equals("18"))) {
                                VoucherType = 3;
                                ModuleId = 65;
                            }
                            else if ((BookCode.trim().equals("13")) || (BookCode.trim().equals("14")) || (BookCode.trim().equals("15"))) {
                                VoucherType = 7;
                                ModuleId = 70;
                            }
                            else if ((BookCode.trim().equals("02")) || (BookCode.trim().equals("10"))) {
                                VoucherType = 5;
                                ModuleId = 68;
                            }
                            else if ((BookCode.trim().equals("21")) || (BookCode.trim().equals("25")) || (BookCode.trim().equals("45")) || (BookCode.trim().equals("18"))) {
                                VoucherType = 9;
                                ModuleId = 89;
                            }
                            else if ((BookCode.trim().equals("31")) || (BookCode.trim().equals("33")) || (BookCode.trim().equals("36")) || (BookCode.trim().equals("37")) ||
                            (BookCode.trim().equals("52")) || (BookCode.trim().equals("54")) || (BookCode.trim().equals("55")) || (BookCode.trim().equals("56")) || (BookCode.trim().equals("58"))) {
                                VoucherType = 6;
                                ModuleId = 69;
                            }
                            else if ((BookCode.trim().equals("22")) || (BookCode.trim().equals("24")) || (BookCode.trim().equals("39"))) {
                                VoucherType=9;
                                ModuleId=89;
                            }
                            else if ((BookCode.trim().equals("81"))) {
                                VoucherType=2;
                                ModuleId=66;
                            }
                            
                            //Find Distinct Dates
                            rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' ",FinanceGlobal.FinURL);
                            //rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD=31 AND TR_REF_NO='000055' AND TR_DT_YY='08' AND TR_DT_MM='05' AND TR_DT_DD='07'",FinanceGlobal.FinURL);
                            
                            rsDates.first();
                            
                            if(rsDates.getRow()>0) {
                                while(!rsDates.isAfterLast()) {
                                    Day=rsDates.getString("TR_DT_DD");
                                    Month=rsDates.getString("TR_DT_MM");
                                    Year=rsDates.getString("TR_DT_YY");
                                    
                                    String SerialNo = "1";
                                    String OldRefNo = "";
                                    String OldStatus = "";
                                    String Status = "";
                                    String MainCode="";
                                    String SubCode="";
                                    double Total_Amount=0;
                                    String Effect="";
                                    String NewVoucherNo="";
                                    String GRNNo="";
                                    
                                    
                                    //Find Vouchers of this book
                                    //rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN('210010','210027','210072','210034')  " ,FinanceGlobal.FinURL);
                                    
                                    // Voucher for DD
                                    rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' " ,FinanceGlobal.FinURL);
                                    
                                    //VOUCHER FOR FD
                                    //rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN('115012','115029','115036','115218','115225','115160','115201','115153','115177','115232','115249','127176') " ,FinanceGlobal.FinURL);
                                    
                                    rsVoucher.first();
                                    OldRefNo=rsVoucher.getString("TR_REF_NO");
                                    
                                    if(rsVoucher.getRow()>0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            String RefNo=rsVoucher.getString("TR_REF_NO");
                                            OldRefNo = RefNo;
                                            
                                            ResultSet rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE<>TRALLOC_CD ORDER BY TR_AMT_SIG ",FinanceGlobal.FinURL);
                                            rsDoc.first();
                                            Status = rsDoc.getString("TR_AMT_SIG");
                                            //OldStatus = Status;
                                            
                                            int SrNo=0;
                                            
                                            int BlockNo=0;
                                            Total_Amount = 0;
                                            
                                            while(!rsDoc.isAfterLast()) {
                                                
                                                boolean InvalidEntry=false;
                                                
                                                if ((RefNo.trim().equals(OldRefNo.trim())) && (! (Status.trim().equals(OldStatus.trim())))) {
                                                    SerialNo = "1";
                                                }
                                                else {
                                                    
                                                    NewVoucherNo = "M"+Month+Day+BookCode+SerialNo+RefNo;
                                                    if (data.IsRecordExist("SELECT * FROM L_FIN_VOUCHER_HEADER WHERE COMPANY_ID='2' AND VOUCHER_NO='"+ NewVoucherNo +"'",FinanceGlobal.FinURL)) {
                                                        Status = rsDoc.getString("TR_AMT_SIG");
                                                        if (!(Status.trim().equals(OldStatus.trim()))) {
                                                            //*********** Do Opposite Entry **********//
                                                            SrNo++;
                                                            
                                                            rsDetail.moveToInsertRow();
                                                            rsDetail.updateInt("COMPANY_ID", 2);
                                                            rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                            rsDetail.updateInt("SR_NO",SrNo);
                                                            
                                                            
                                                            MainCode=rsDoc.getString("TRALLOC_CD"); //Find Allocation code here
                                                            if (MainCode.trim().equals("")) {
                                                                MainCode = "000000";
                                                            }
                                                            SubCode="";
                                                            
                                                            if(Effect.equals("C")) {
                                                                Effect="D";
                                                            }
                                                            else {
                                                                Effect="C";
                                                            }
                                                            
                                                            if (MainCode.trim().equals("000000")) {
                                                                MainCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_CODE = '"+ BookCode +"' ",FinanceGlobal.FinURL);
                                                            }
                                                            
                                                            rsDetail.updateString("EFFECT",Effect);
                                                            rsDetail.updateDouble("AMOUNT",Total_Amount);
                                                            rsDetail.updateInt("ACCOUNT_ID",0);
                                                            rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                            rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                            rsDetail.updateString("REMARKS","");
                                                            rsDetail.updateString("CREATED_BY","admin");
                                                            rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                            rsDetail.updateString("MODIFIED_BY","admin");
                                                            rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                            rsDetail.updateInt("CANCELLED",0);
                                                            rsDetail.updateInt("CHANGED",1);
                                                            rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                            rsDetail.updateString("PO_NO","");
                                                            rsDetail.updateString("PO_DATE","0000-00-00");
                                                            rsDetail.updateString("INVOICE_NO","");
                                                            rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                            
                                                            GRNNo = rsDoc.getString("TR_REF_AL").trim() + rsDoc.getString("TR_REF_NO").trim();
                                                            rsDetail.updateString("GRN_NO",GRNNo);
                                                            rsDetail.updateString("GRN_DATE","0000-00-00");
                                                            rsDetail.updateInt("MODULE_ID",ModuleId);
                                                            rsDetail.updateInt("REF_COMPANY_ID",2);
                                                            
                                                            try {
                                                                rsDetail.insertRow();
                                                            }
                                                            catch(Exception s){}
                                                            
                                                            Total_Amount = 0;
                                                            SerialNo = "2";
                                                        }
                                                    }
                                                    else {
                                                        SerialNo = "1";
                                                    }
                                                    
                                                    
                                                }
                                                //There would be only single Entry for this
                                                
                                                NewVoucherNo="M"+Month+Day+BookCode+SerialNo+RefNo;
                                                
                                                if (data.IsRecordExist("SELECT * FROM L_FIN_VOUCHER_HEADER WHERE COMPANY_ID='2' AND VOUCHER_NO='"+ NewVoucherNo +"'",FinanceGlobal.FinURL)) {
                                                    if (!(Status.trim().equals(OldStatus.trim()))) {
                                                        int srno = Integer.parseInt(SerialNo) + 1;
                                                        SerialNo += Integer.toString(srno);
                                                        NewVoucherNo="M"+Month+Day+BookCode+SerialNo+RefNo;
                                                    }
                                                }
                                                
                                                lblStatus.setText("Inserting "+NewVoucherNo);
                                                
                                                if(rsDoc.getString("TRALLOC_CD").trim().equals("000000")) {
                                                    System.out.println("No Allocation Code defined. Voucher No. "+RefNo+" Book Code"+BookCode+" Date: "+Day+"/"+Month+"/"+Year);
                                                }
                                                
                                                if(!InvalidEntry) {
                                                    
                                                    OldStatus = Status;
                                                    OldRefNo = RefNo;
                                                    
                                                    //*************************   Create Voucher Header   *******************************//
                                                    rsHeader.moveToInsertRow();
                                                    rsHeader.updateInt("COMPANY_ID",2);
                                                    rsHeader.updateString("VOUCHER_NO",NewVoucherNo);
                                                    rsHeader.updateString("BOOK_CODE",BookCode);
                                                    rsHeader.updateString("CHEQUE_NO",rsDoc.getString("TR_CHEQ_NO"));
                                                    
                                                    String ChequeDate=rsDoc.getString("TRCHQBILDT");
                                                    
                                                    if((!ChequeDate.trim().equals(""))&&(!ChequeDate.trim().equals("000000"))) {
                                                        ChequeDate="20"+ChequeDate.substring(4)+"-"+ChequeDate.substring(2,4)+"-"+ChequeDate.substring(0,2);
                                                        
                                                        rsHeader.updateString("CHEQUE_DATE",ChequeDate);
                                                    }
                                                    else {
                                                        rsHeader.updateString("CHEQUE_DATE","0000-00-00");
                                                    }
                                                    
                                                    String VoucherDate="20"+rsDoc.getString("TR_DT_YY")+"-"+rsDoc.getString("TR_DT_MM")+"-"+rsDoc.getString("TR_DT_DD");
                                                    
                                                    rsHeader.updateString("VOUCHER_DATE",VoucherDate);
                                                    rsHeader.updateString("BANK_NAME", "");
                                                    rsHeader.updateString("ST_CATEGORY",rsDoc.getString("TR_SALESTAX"));
                                                    rsHeader.updateInt("APPROVED",1);
                                                    rsHeader.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("REJECTED",0);
                                                    rsHeader.updateString("REJECTED_DATE","0000-00-00");
                                                    rsHeader.updateString("REJECTED_REMARKS","");
                                                    rsHeader.updateString("CREATED_BY","admin");
                                                    rsHeader.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateString("MODIFIED_BY","admin");
                                                    rsHeader.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("HIERARCHY_ID",0);
                                                    rsHeader.updateInt("CHANGED",1);
                                                    rsHeader.updateInt("VOUCHER_TYPE",VoucherType);
                                                    rsHeader.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("CANCELLED",0);
                                                    rsHeader.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    
                                                    
                                                    try {
                                                        rsHeader.insertRow();
                                                    }
                                                    catch(Exception s) {
                                                        //s.printStackTrace();
                                                    }
                                                    // ************************* End of Header ********************************//
                                                    
                                                    
                                                    //******************* Creating Voucher Detail Records ************************//
                                                    //                                                rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE<>TRALLOC_CD",FinanceGlobal.FinURL);
                                                    //                                                rsDoc.first();
                                                    
                                                    SrNo++;
                                                    BlockNo++;
                                                    
                                                    rsDetail.moveToInsertRow();
                                                    rsDetail.updateInt("COMPANY_ID", 2);
                                                    rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetail.updateInt("SR_NO",SrNo);
                                                    rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    
                                                    MainCode=rsDoc.getString("TRMAINCODE");
                                                    SubCode=rsDoc.getString("TRSUBCODE");
                                                    double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                    Effect=rsDoc.getString("TR_AMT_SIG");
                                                    Total_Amount = Total_Amount + Amount;
                                                    
                                                    if(SubCode.equals("000000")) {
                                                        SubCode="";
                                                    }
                                                    
                                                    rsDetail.updateDouble("AMOUNT",Amount);
                                                    rsDetail.updateInt("ACCOUNT_ID",0);
                                                    rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetail.updateString("CREATED_BY","admin");
                                                    rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("MODIFIED_BY","admin");
                                                    rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateInt("CANCELLED",0);
                                                    rsDetail.updateInt("CHANGED",1);
                                                    rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    String sPONO= rsDoc.getString("TR_PO_NO");
                                                    String sInvoiceNo = rsDoc.getString("TR_BILL_NO");
                                                    if(sPONO.trim().equals("000000")) {
                                                        rsDetail.updateString("PO_NO","");
                                                    } else {
                                                        rsDetail.updateString("PO_NO",sPONO);
                                                    }
                                                    
                                                    rsDetail.updateString("PO_DATE","0000-00-00");
                                                    
                                                    String Agent_srno = rsDoc.getString("TR_INVAGSR");
                                                    int agsr_no = Integer.parseInt(Agent_srno);
                                                    String Agent_alpha = data.getStringValueFromDB("SELECT AREA_ID FROM D_SAL_PARTY_MASTER WHERE PARTY_CODE='"+SubCode+"' ");
                                                    Agent_alpha = Agent_alpha + "/" + agsr_no;
                                                    String InvoiceNo = clsSalesInvoice.getInvoiceNo(Agent_alpha);
                                                    String InvoiceDate = clsSalesInvoice.getInvoiceDate(2,InvoiceNo);
                                                    if(InvoiceDate.trim().equals("")) {
                                                        InvoiceDate="0000-00-00";
                                                    }
                                                    if(sInvoiceNo.trim().equals("000000")) {
                                                        rsDetail.updateString("INVOICE_NO",InvoiceNo);
                                                        rsDetail.updateString("INVOICE_DATE",InvoiceDate);
                                                    } else {
                                                        if (sInvoiceNo.trim().equals("")) {
                                                            rsDetail.updateString("INVOICE_NO",InvoiceNo);
                                                            rsDetail.updateString("INVOICE_DATE",InvoiceDate);
                                                        }
                                                        else {
                                                            rsDetail.updateString("INVOICE_NO",sInvoiceNo);
                                                            rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                        }
                                                    }
                                                    
                                                    GRNNo = rsDoc.getString("TR_REF_AL").trim() + rsDoc.getString("TR_REF_NO").trim();
                                                    rsDetail.updateString("GRN_NO",GRNNo);
                                                    rsDetail.updateString("GRN_DATE","0000-00-00");
                                                    rsDetail.updateInt("MODULE_ID",ModuleId);
                                                    rsDetail.updateInt("REF_COMPANY_ID",2);
                                                    
                                                    try {
                                                        rsDetail.insertRow();
                                                    }
                                                    catch(Exception s) {
                                                        s.printStackTrace();
                                                    }
                                                    
                                                    
                                                    rsDetailEx.moveToInsertRow();
                                                    rsDetailEx.updateInt("COMPANY_ID", 2);
                                                    rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetailEx.updateInt("SR_NO",SrNo);
                                                    rsDetailEx.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    rsDetailEx.updateDouble("AMOUNT",Amount);
                                                    rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                    rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetailEx.updateString("CREATED_BY","admin");
                                                    rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("MODIFIED_BY","admin");
                                                    rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateInt("CANCELLED",0);
                                                    rsDetailEx.updateInt("CHANGED",1);
                                                    rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    sPONO= rsDoc.getString("TR_PO_NO");
                                                    sInvoiceNo = rsDoc.getString("TR_BILL_NO");
                                                    if(sPONO.trim().equals("000000")) {
                                                        rsDetailEx.updateString("PO_NO","");
                                                    } else {
                                                        rsDetailEx.updateString("PO_NO",sPONO);
                                                    }
                                                    
                                                    rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                    
                                                    Agent_srno = rsDoc.getString("TR_INVAGSR");
                                                    agsr_no = Integer.parseInt(Agent_srno);
                                                    Agent_alpha = data.getStringValueFromDB("SELECT AREA_ID FROM D_SAL_PARTY_MASTER WHERE PARTY_CODE='"+SubCode+"' ");
                                                    Agent_alpha = Agent_alpha + "/" + agsr_no;
                                                    InvoiceNo = clsSalesInvoice.getInvoiceNo(Agent_alpha);
                                                    InvoiceDate = clsSalesInvoice.getInvoiceDate(2,InvoiceNo);
                                                    if(InvoiceDate.trim().equals("")) {
                                                        InvoiceDate="0000-00-00";
                                                    }
                                                    
                                                    if(sInvoiceNo.trim().equals("000000")) {
                                                        rsDetailEx.updateString("INVOICE_NO",InvoiceNo);
                                                        rsDetailEx.updateString("INVOICE_DATE",InvoiceDate);
                                                    } else {
                                                        if (sInvoiceNo.trim().equals("")) {
                                                            rsDetailEx.updateString("INVOICE_NO",InvoiceNo);
                                                            rsDetailEx.updateString("INVOICE_DATE",InvoiceDate);
                                                        }
                                                        else {
                                                            rsDetailEx.updateString("INVOICE_NO",sInvoiceNo);
                                                            rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                        }
                                                    }
                                                    
                                                    GRNNo = rsDoc.getString("TR_REF_AL").trim() + rsDoc.getString("TR_REF_NO").trim();
                                                    rsDetailEx.updateString("GRN_NO",GRNNo);
                                                    rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                    rsDetailEx.updateInt("MODULE_ID",ModuleId);
                                                    rsDetailEx.updateInt("REF_COMPANY_ID",2);
                                                    rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                    
                                                    try {
                                                        rsDetailEx.insertRow();
                                                    }
                                                    catch(Exception s){
                                                        s.printStackTrace();
                                                    }
                                                    
                                                    MainCode=rsDoc.getString("TRALLOC_CD");
                                                    
                                                    //*********** Do Opposite Entry **********//
                                                    SrNo++;
                                                    
                                                    
                                                    if (MainCode.trim().equals("")) {
                                                        MainCode = "000000";
                                                    }
                                                    SubCode="";
                                                    
                                                    if(Effect.equals("C")) {
                                                        Effect="D";
                                                    }
                                                    else {
                                                        Effect="C";
                                                    }
                                                    
                                                    if (MainCode.trim().equals("000000")) {
                                                        MainCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_CODE = '"+ BookCode +"' ",FinanceGlobal.FinURL);
                                                    }
                                                    
                                                    
                                                    rsDetailEx.moveToInsertRow();
                                                    rsDetailEx.updateInt("COMPANY_ID", 2);
                                                    rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                    rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetailEx.updateInt("SR_NO",SrNo);
                                                    rsDetailEx.updateString("EFFECT",Effect);
                                                    rsDetailEx.updateDouble("AMOUNT",Amount);
                                                    rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                    rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetailEx.updateString("CREATED_BY","admin");
                                                    rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("MODIFIED_BY","admin");
                                                    rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateInt("CANCELLED",0);
                                                    rsDetailEx.updateInt("CHANGED",1);
                                                    rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                    rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                    rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                    rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                    rsDetailEx.updateString("GRN_NO","");
                                                    rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                    rsDetailEx.updateInt("MODULE_ID",ModuleId);
                                                    rsDetailEx.updateInt("REF_COMPANY_ID",2);
                                                    
                                                    try {
                                                        rsDetailEx.insertRow();
                                                    }
                                                    catch(Exception s) {
                                                        s.printStackTrace();
                                                    }
                                                    
                                                    if(Effect.equals("C")) {
                                                        Effect="D";
                                                    }
                                                    else {
                                                        Effect="C";
                                                    }
                                                    
                                                    rsDoc.next();
                                                }
                                                
                                                
                                                //****************************************************************************//
                                            }
                                            
                                            rsVoucher.next();
                                            
                                            //*********** Do Opposite Entry **********//
                                            SrNo++;
                                            
                                            rsDetail.moveToInsertRow();
                                            rsDetail.updateInt("COMPANY_ID", 2);
                                            rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                            rsDetail.updateInt("SR_NO",SrNo);
                                            
                                            
                                            //MainCode=rsDoc.getString("TRALLOC_CD"); //Find Allocation code here
                                            if (MainCode.trim().equals("")) {
                                                MainCode = "000000";
                                            }
                                            
                                            SubCode="";
                                            
                                            if(Effect.equals("C")) {
                                                Effect="D";
                                            }
                                            else {
                                                Effect="C";
                                            }
                                            
                                            if (MainCode.trim().equals("000000")) {
                                                MainCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_CODE = '"+ BookCode +"' ",FinanceGlobal.FinURL);
                                            }
                                            
                                            rsDetail.updateString("EFFECT",Effect);
                                            rsDetail.updateDouble("AMOUNT",Total_Amount);
                                            rsDetail.updateInt("ACCOUNT_ID",0);
                                            rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                            rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                            rsDetail.updateString("REMARKS","");
                                            rsDetail.updateString("CREATED_BY","admin");
                                            rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsDetail.updateString("MODIFIED_BY","admin");
                                            rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsDetail.updateInt("CANCELLED",0);
                                            rsDetail.updateInt("CHANGED",1);
                                            rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                            rsDetail.updateString("PO_NO","");
                                            rsDetail.updateString("PO_DATE","0000-00-00");
                                            rsDetail.updateString("INVOICE_NO","");
                                            rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                            rsDetail.updateString("GRN_NO","");
                                            rsDetail.updateString("GRN_DATE","0000-00-00");
                                            rsDetail.updateInt("MODULE_ID",ModuleId);
                                            rsDetail.updateInt("REF_COMPANY_ID",2);
                                            
                                            try {
                                                rsDetail.insertRow();
                                            }
                                            catch(Exception s){
                                                s.printStackTrace();
                                            }
                                        }
                                    }
                                    rsDates.next();
                                }
                            }
                            rsBook.next();
                        }
                    }
                    
                    lblStatus.setText("Completed...");
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
    }
    
    private void ImportPartiesEx() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                long LineNo=0;
                String FileRecord="";
                
                try {
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM D_FIN_PARTY_MASTER");
                    int Pointer=0;
                    
                    Counter=data.getLongValueFromDB("SELECT MAX(PARTY_ID) AS PARTY_ID FROM D_FIN_PARTY_MASTER", FinanceGlobal.FinURL);
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    //aFile.readLine();
                    //aFile.readLine();
                    
                    while(!Done) {
                        
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            FileRecord=aFile.readLine();
                            
                            LineNo++;
                            
                            if(FileRecord.length()>108&&FileRecord!=null) {
                                Pointer=8;
                                
                                String MainAccountCode=FileRecord.substring(Pointer, Pointer+6);Pointer+=6;
                                String SubAccountCode=FileRecord.substring(Pointer, Pointer+6);
                                
                                lblStatus.setText(MainAccountCode+" "+SubAccountCode);
                                
                                Pointer=8;
                                Pointer+=108;
                                
                                
                                
                                //Closing Balances,
                                double Closing1=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect1=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing2=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect2=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing3=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect3=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing4=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect4=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing5=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect5=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing6=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect6=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing7=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect7=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing8=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect8=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing9=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect9=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing10=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect10=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing11=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect11=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                double Closing12=UtilFunctions.CDbl(FileRecord.substring(Pointer,Pointer+13))/100;Pointer+=13;
                                String Effect12=FileRecord.substring(Pointer,Pointer+1);Pointer+=1;
                                
                                
                                if(data.IsRecordExist("SELECT * FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND PARTY_CODE='"+SubAccountCode+"'",FinanceGlobal.FinURL)) {
                                    
                                    //Update only balance
                                    data.Execute("UPDATE D_FIN_PARTY_MASTER SET CLOSING_BALANCE="+Closing3+",CLOSING_EFFECT='"+Effect3+"' WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND PARTY_CODE='"+SubAccountCode+"' ",FinanceGlobal.FinURL);
                                }
                                else {
                                    
                                    Counter++;
                                    Pointer=8;
                                    
                                    rsTmp.moveToInsertRow();
                                    rsTmp.updateInt("COMPANY_ID",2);
                                    rsTmp.updateLong("PARTY_ID",Counter);
                                    rsTmp.updateString("MAIN_ACCOUNT_CODE",FileRecord.substring(Pointer, Pointer+6));Pointer+=6;
                                    rsTmp.updateString("PARTY_CODE",FileRecord.substring(Pointer,Pointer+6));Pointer+=6;
                                    rsTmp.updateString("PARTY_NAME",FileRecord.substring(Pointer,Pointer+36));Pointer+=36;
                                    rsTmp.updateString("SH_NAME",FileRecord.substring(Pointer,Pointer+12));Pointer+=12;
                                    
                                    //Skip Other Fields
                                    Pointer+=34;
                                    
                                    rsTmp.updateString("SH_CODE",FileRecord.substring(Pointer,Pointer+6));Pointer+=6;
                                    
                                    //Skip Other Fields
                                    Pointer+=8;
                                    
                                    rsTmp.updateDouble("CLOSING_BALANCE",Closing3);
                                    rsTmp.updateString("CLOSING_EFFECT",Effect3);
                                    rsTmp.updateInt("CANCELLED",0);
                                    rsTmp.insertRow();
                                    
                                }
                                
                            }
                        }
                        catch(Exception c){
                            System.out.println("Last Line No. "+LineNo);
                            c.printStackTrace();
                            Done=true;
                            lblStatus.setText("Done");
                        }
                    }
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    private void PostGRNRawVouchers() {
        new Thread() {
            
            public void run() {
                try {
                    
                    int VoucherNo=0;
                    
                    clsGRN objGRN=new clsGRN();
                    objGRN.LoadData(EITLERPGLOBAL.gCompanyID);
                    
                    String strSQL="SELECT * FROM D_INV_GRN_HEADER WHERE GRN_TYPE=2 AND GRN_DATE>='2007-12-01' AND GRN_NO NOT IN (SELECT GRN_NO FROM FINANCE.D_FIN_VOUCHER_DETAIL WHERE COMPANY_ID=3 AND MODULE_ID=8)";
                    
                    ResultSet rsTmp=data.getResult(strSQL,CloneURL);
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {
                            String DocNo=rsTmp.getString("GRN_NO");
                            
                            if(!data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_DETAIL WHERE GRN_NO='"+DocNo+"' AND MODULE_ID=8",FinanceGlobal.FinURL)) {
                                
                                VoucherNo++;
                                
                                String newVoucherNo="PJ"+EITLERPGLOBAL.Replicate("0", 6- Integer.toString(VoucherNo).length())+Integer.toString(VoucherNo);
                                
                                boolean Done=false;
                                
                                while(!Done) {
                                    if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+newVoucherNo+"'",FinanceGlobal.FinURL)) {
                                        VoucherNo++;
                                        newVoucherNo="PJ"+EITLERPGLOBAL.Replicate("0", 6- Integer.toString(VoucherNo).length())+Integer.toString(VoucherNo);
                                    }
                                    else {
                                        Done=true;
                                    }
                                }
                                
                                lblStatus.setText("Posting "+DocNo);
                                
                                objGRN.setAttribute("FIN_HIERARCHY_ID",DefaultFinHierarchy); //Diptesh Fixed Hierarchy
                                objGRN.PostVoucher(DocNo,2,"");
                                
                                //                                if(!objGRN.IsPostingNecessary(DocNo,2,"")) {
                                //                                    System.out.println("GRN Raw "+DocNo);
                                //                                }
                                
                                
                            }
                            rsTmp.next();
                        }
                        
                    }
                    
                }
                catch(Exception e) {
                    
                }
                
                lblStatus.setText("Done");
            };
        }.start();
    }
    
    private void PostJobWorkVouchers() {
        new Thread() {
            
            public void run() {
                try {
                    
                    int VoucherNo=0;
                    
                    clsJobwork objGRN=new clsJobwork();
                    objGRN.LoadData(EITLERPGLOBAL.gCompanyID);
                    
                    String strSQL="SELECT * FROM D_INV_JOB_HEADER WHERE JOB_DATE>='2007-12-01' AND JOB_NO NOT IN (SELECT GRN_NO FROM FINANCE.D_FIN_VOUCHER_DETAIL WHERE COMPANY_ID=3 AND MODULE_ID=48)";
                    
                    ResultSet rsTmp=data.getResult(strSQL,CloneURL);
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {
                            String DocNo=rsTmp.getString("JOB_NO");
                            
                            if(!data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_DETAIL WHERE GRN_NO='"+DocNo+"' AND MODULE_ID=48",FinanceGlobal.FinURL)) {
                                
                                VoucherNo++;
                                
                                String newVoucherNo="PJ"+EITLERPGLOBAL.Replicate("0", 6- Integer.toString(VoucherNo).length())+Integer.toString(VoucherNo);
                                
                                boolean Done=false;
                                
                                while(!Done) {
                                    if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+newVoucherNo+"'",FinanceGlobal.FinURL)) {
                                        VoucherNo++;
                                        newVoucherNo="PJ"+EITLERPGLOBAL.Replicate("0", 6- Integer.toString(VoucherNo).length())+Integer.toString(VoucherNo);
                                    }
                                    else {
                                        Done=true;
                                    }
                                }
                                
                                lblStatus.setText("Posting "+DocNo);
                                
                                objGRN.setAttribute("FIN_HIERARCHY_ID",DefaultFinHierarchy); //Diptesh Fixed Hierarchy
                                objGRN.PostVoucher(DocNo,1,"");
                                
                                //                                if(!objGRN.IsPostingNecessary(DocNo,1,"")) {
                                //                                    System.out.println("Jobwork "+DocNo);
                                //                                }
                                
                            }
                            rsTmp.next();
                        }
                        
                    }
                    
                }
                catch(Exception e) {
                    
                }
                
                lblStatus.setText("Done");
            };
        }.start();
    }
    
    
    private void ImportExpenseHeader() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                
                try {
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM D_FIN_EXPENSE_MASTER");
                    int Pointer=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    aFile.readLine();
                    
                    while(!Done) {
                        
                        Counter++;
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            
                            HashMap record=EITLERPGLOBAL.Split(FileRecord,",");
                            
                            Pointer=0;
                            
                            rsTmp.moveToInsertRow();
                            rsTmp.updateInt("COMPANY_ID",2);
                            rsTmp.updateString("EXPENSE_ID",record.get("2").toString() );
                            rsTmp.updateString("MAIN_ACCOUNT_CODE",record.get("1").toString());
                            rsTmp.updateInt("EXPENSE_TYPE",0);
                            rsTmp.updateString("EXPENSE_DESCRIPTION",record.get("3").toString());
                            rsTmp.updateDouble("MAX_AMOUNT",UtilFunctions.CDbl(record.get("4").toString()));
                            rsTmp.updateString("CREATED_BY","admin");
                            rsTmp.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateString("MODIFIED_BY","admin");
                            rsTmp.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateInt("CHANGED",1);
                            rsTmp.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateInt("APPROVED",1);
                            rsTmp.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateInt("REJECTED",0);
                            rsTmp.updateString("REJECTED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateString("REJECTED_REMARKS","");
                            rsTmp.updateInt("HIERARCHY_ID",0);
                            rsTmp.updateInt("CANCELLED",0);
                            
                            rsTmp.insertRow();
                        }
                        catch(java.sql.SQLException s) {
                            //Do NOthing
                            s.printStackTrace();
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                        }
                        
                    }
                    
                    
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    private void ImportExpenseDetail() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                
                try {
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM D_FIN_EXPENSE_TRANSACTION");
                    int Pointer=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    aFile.readLine();
                    
                    while(!Done) {
                        
                        Counter++;
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            
                            HashMap record=EITLERPGLOBAL.Split(FileRecord,",");
                            
                            Pointer=0;
                            
                            //record.get("3").toString()
                            rsTmp.moveToInsertRow();
                            rsTmp.updateInt("COMPANY_ID",2);
                            rsTmp.updateString("DOC_NO",record.get("1").toString()+"-"+record.get("2").toString());
                            rsTmp.updateString("DOC_DATE",EITLERPGLOBAL.formatDateDB2(record.get("9").toString()));
                            rsTmp.updateString("EXPENSE_ID",record.get("3").toString());
                            rsTmp.updateString("EXPENSE_DATE",EITLERPGLOBAL.formatDateDB2(record.get("9").toString()));
                            rsTmp.updateString("FROM_DATE",EITLERPGLOBAL.formatDateDB2(record.get("5").toString()));
                            rsTmp.updateString("TO_DATE",EITLERPGLOBAL.formatDateDB2(record.get("6").toString()));
                            rsTmp.updateString("INVOICE_NO","");
                            rsTmp.updateString("INVOICE_DATE","0000-00-00");
                            rsTmp.updateDouble("INVOICE_AMOUNT",UtilFunctions.CDbl(record.get("7").toString()));
                            rsTmp.updateString("FROM_READING",record.get("14").toString());
                            rsTmp.updateString("TO_READING",record.get("15").toString());
                            rsTmp.updateString("EXPENSE_DESCRIPTION","");
                            rsTmp.updateString("PARTY_NAME","");
                            rsTmp.updateString("ADDRESS","");
                            rsTmp.updateString("CITY","");
                            rsTmp.updateString("PINCODE","");
                            rsTmp.updateString("REF_DOC_NO","");
                            rsTmp.updateString("REF_DOC_DATE","0000-00-00");
                            rsTmp.updateInt("MODULE_ID",0);
                            rsTmp.updateString("CREATED_BY","admin");
                            rsTmp.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateString("MODIFIED_BY","admin");
                            rsTmp.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateInt("CHANGED",1);
                            rsTmp.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateInt("APPROVED",1);
                            rsTmp.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateInt("REJECTED",0);
                            rsTmp.updateString("REJECTED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsTmp.updateString("REJECTED_REMARKS","");
                            rsTmp.updateInt("HIERARCHY_ID",0);
                            rsTmp.updateInt("CANCELLED",0);
                            
                            rsTmp.insertRow();
                        }
                        catch(java.sql.SQLException s) {
                            //Do NOthing
                            s.printStackTrace();
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                        }
                        
                    }
                    
                    
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    
    private void MigrateVouchersType1() {
        new Thread() {
            
            public void run() {
                try {
                    
                    ResultSet rsVoucher,rsDates;
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stHeader=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsHeader=stHeader.executeQuery("SELECT * FROM L_FIN_VOUCHER_HEADER LIMIT 1");
                    
                    Statement stDetail=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetail=stDetail.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL LIMIT 1");
                    
                    Statement stDetailEx=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetailEx=stDetailEx.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL_EX LIMIT 1");
                    
                    
                    //(1) Creating Entries for Bank/Cash Books - Allocation code is to be search from Book Master
                    ResultSet rsBook=data.getResult("SELECT * FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE=1 AND BOOK_CODE NOT IN ('01','02','04','09','10','11','67') ",FinanceGlobal.FinURL);
                    rsBook.first();
                    
                    if(rsBook.getRow()>0) {
                        while(!rsBook.isAfterLast()) {
                            String BookCode=rsBook.getString("BOOK_CODE");
                            String BookMainCode=rsBook.getString("MAIN_ACCOUNT_CODE");
                            String Day="";
                            String Month="";
                            String Year="";
                            
                            //Find Distinct Dates
                            rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' ",FinanceGlobal.FinURL);
                            rsDates.first();
                            
                            if(rsDates.getRow()>0) {
                                while(!rsDates.isAfterLast()) {
                                    Day=rsDates.getString("TR_DT_DD");
                                    Month=rsDates.getString("TR_DT_MM");
                                    Year=rsDates.getString("TR_DT_YY");
                                    
                                    
                                    //Find Vouchers of this book
                                    rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN ('210010','210027','210072') " ,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow()>0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            String RefNo=rsVoucher.getString("TR_REF_NO");
                                            
                                            
                                            //*** Insert Header First. Access First Record and do the entry ***//
                                            ResultSet rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            rsDoc.first();
                                            
                                            //There would be only single Entry for this
                                            String NewVoucherNo="M"+Month+Day+BookCode+RefNo;
                                            
                                            lblStatus.setText("Inserting "+NewVoucherNo);
                                            
                                            //*************************   Create Voucher Header   *******************************//
                                            rsHeader.moveToInsertRow();
                                            rsHeader.updateInt("COMPANY_ID",2);
                                            rsHeader.updateString("VOUCHER_NO",NewVoucherNo);
                                            rsHeader.updateString("BOOK_CODE",BookCode);
                                            rsHeader.updateString("CHEQUE_NO",rsDoc.getString("TR_CHEQ_NO"));
                                            
                                            String ChequeDate=rsDoc.getString("TRCHQBILDT");
                                            
                                            if((!ChequeDate.trim().equals(""))&&(!ChequeDate.trim().equals("000000"))) {
                                                ChequeDate="20"+ChequeDate.substring(4)+"-"+ChequeDate.substring(2,4)+"-"+ChequeDate.substring(0,2);
                                                
                                                rsHeader.updateString("CHEQUE_DATE",ChequeDate);
                                            }
                                            else {
                                                rsHeader.updateString("CHEQUE_DATE","0000-00-00");
                                            }
                                            
                                            String VoucherDate="20"+rsDoc.getString("TR_DT_YY")+"-"+rsDoc.getString("TR_DT_MM")+"-"+rsDoc.getString("TR_DT_DD");
                                            
                                            rsHeader.updateString("VOUCHER_DATE",VoucherDate);
                                            rsHeader.updateString("BANK_NAME", "");
                                            rsHeader.updateString("ST_CATEGORY",rsDoc.getString("TR_SALESTAX"));
                                            rsHeader.updateInt("APPROVED",1);
                                            rsHeader.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsHeader.updateInt("REJECTED",0);
                                            rsHeader.updateString("REJECTED_DATE","0000-00-00");
                                            rsHeader.updateString("REJECTED_REMARKS","");
                                            rsHeader.updateString("CREATED_BY","admin");
                                            rsHeader.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsHeader.updateString("MODIFIED_BY","admin");
                                            rsHeader.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsHeader.updateInt("HIERARCHY_ID",0);
                                            rsHeader.updateInt("CHANGED",1);
                                            rsHeader.updateInt("VOUCHER_TYPE",1);
                                            rsHeader.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsHeader.updateInt("CANCELLED",0);
                                            rsHeader.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                            
                                            try {
                                                rsHeader.insertRow();
                                            }
                                            catch(Exception s)
                                            { s.printStackTrace(); }
                                            // ************************* End of Header ********************************//
                                            
                                            
                                            
                                            int SrNo=0;
                                            int BlockNo=0;
                                            
                                            //******************* Creating Voucher Detail Records ************************//
                                            rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            rsDoc.first();
                                            
                                            while(!rsDoc.isAfterLast()) {
                                                SrNo++;
                                                BlockNo++;
                                                
                                                rsDetail.moveToInsertRow();
                                                rsDetail.updateInt("COMPANY_ID", 2);
                                                rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                rsDetail.updateInt("SR_NO",SrNo);
                                                rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                
                                                String MainCode=rsDoc.getString("TRMAINCODE");
                                                String SubCode=rsDoc.getString("TRSUBCODE");
                                                double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                String Effect=rsDoc.getString("TR_AMT_SIG");
                                                
                                                
                                                if(SubCode.equals("000000")) {
                                                    SubCode="";
                                                }
                                                
                                                rsDetail.updateDouble("AMOUNT",Amount);
                                                rsDetail.updateInt("ACCOUNT_ID",0);
                                                rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                rsDetail.updateString("CREATED_BY","admin");
                                                rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateString("MODIFIED_BY","admin");
                                                rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateInt("CANCELLED",0);
                                                rsDetail.updateInt("CHANGED",1);
                                                rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                rsDetail.updateString("PO_DATE","0000-00-00");
                                                rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                rsDetail.updateString("GRN_NO","");
                                                rsDetail.updateString("GRN_DATE","0000-00-00");
                                                rsDetail.updateInt("MODULE_ID",0);
                                                
                                                try {
                                                    rsDetail.insertRow();
                                                }
                                                catch(Exception s)
                                                { s.printStackTrace(); }
                                                
                                                
                                                rsDetailEx.moveToInsertRow();
                                                rsDetailEx.updateInt("COMPANY_ID", 2);
                                                rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                rsDetailEx.updateInt("SR_NO",SrNo);
                                                rsDetailEx.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                rsDetailEx.updateDouble("AMOUNT",Amount);
                                                rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                rsDetailEx.updateString("CREATED_BY","admin");
                                                rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateString("MODIFIED_BY","admin");
                                                rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateInt("CANCELLED",0);
                                                rsDetailEx.updateInt("CHANGED",1);
                                                rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                rsDetailEx.updateString("GRN_NO","");
                                                rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                rsDetailEx.updateInt("MODULE_ID",0);
                                                rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                
                                                try {
                                                    rsDetailEx.insertRow();
                                                }
                                                catch(Exception s){ s.printStackTrace(); }
                                                
                                                
                                                //*********** Do Opposite Entry **********//
                                                SrNo++;
                                                
                                                rsDetail.moveToInsertRow();
                                                rsDetail.updateInt("COMPANY_ID", 2);
                                                rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                rsDetail.updateInt("SR_NO",SrNo);
                                                
                                                
                                                MainCode=BookMainCode; //As for '01' Book Type opposite code is main code defined in the Book Master
                                                
                                                SubCode="";
                                                
                                                if(Effect.equals("C")) {
                                                    Effect="D";
                                                }
                                                else {
                                                    Effect="C";
                                                }
                                                
                                                rsDetail.updateString("EFFECT",Effect);
                                                rsDetail.updateDouble("AMOUNT",Amount);
                                                rsDetail.updateInt("ACCOUNT_ID",0);
                                                rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                rsDetail.updateString("CREATED_BY","admin");
                                                rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateString("MODIFIED_BY","admin");
                                                rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateInt("CANCELLED",0);
                                                rsDetail.updateInt("CHANGED",1);
                                                rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                rsDetail.updateString("PO_DATE","0000-00-00");
                                                rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                rsDetail.updateString("GRN_NO","");
                                                rsDetail.updateString("GRN_DATE","0000-00-00");
                                                rsDetail.updateInt("MODULE_ID",0);
                                                
                                                try {
                                                    rsDetail.insertRow();
                                                }
                                                catch(Exception s){}
                                                
                                                
                                                
                                                rsDetailEx.moveToInsertRow();
                                                rsDetailEx.updateInt("COMPANY_ID", 2);
                                                rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                rsDetailEx.updateInt("SR_NO",SrNo);
                                                rsDetailEx.updateString("EFFECT",Effect);
                                                rsDetailEx.updateDouble("AMOUNT",Amount);
                                                rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                rsDetailEx.updateString("CREATED_BY","admin");
                                                rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateString("MODIFIED_BY","admin");
                                                rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateInt("CANCELLED",0);
                                                rsDetailEx.updateInt("CHANGED",1);
                                                rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                rsDetailEx.updateString("GRN_NO","");
                                                rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                rsDetailEx.updateInt("MODULE_ID",0);
                                                
                                                try {
                                                    rsDetailEx.insertRow();
                                                }
                                                catch(Exception s) {
                                                    s.printStackTrace();
                                                }
                                                
                                                rsDoc.next();
                                            }
                                            //****************************************************************************//
                                            
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    
                                    
                                    rsDates.next();
                                }
                            }
                            
                            rsBook.next();
                        }
                    }
                    
                    
                    lblStatus.setText("Completed...");
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
        
    }
    
    
    
    
    private void MigrateVouchersType2() {
        new Thread() {
            
            public void run() {
                try {
                    
                    ResultSet rsVoucher,rsDates;
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stHeader=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsHeader=stHeader.executeQuery("SELECT * FROM D_FIN_VOUCHER_HEADER LIMIT 1");
                    
                    Statement stDetail=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetail=stHeader.executeQuery("SELECT * FROM D_FIN_VOUCHER_DETAIL LIMIT 1");
                    
                    Statement stDetailEx=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetailEx=stHeader.executeQuery("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX LIMIT 1");
                    
                    
                    //(2) Creating Entries for Journals Books - Both entries are available
                    ResultSet rsBook=data.getResult("SELECT * FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE=2 AND BOOK_CODE NOT IN ('01','02','04','09','10','11','67','26') ",FinanceGlobal.FinURL);
                    rsBook.first();
                    
                    if(rsBook.getRow()>0) {
                        while(!rsBook.isAfterLast()) {
                            String BookCode=rsBook.getString("BOOK_CODE");
                            String BookMainCode=rsBook.getString("MAIN_ACCOUNT_CODE");
                            String Day="";
                            String Month="";
                            String Year="";
                            
                            //Find Distinct Dates
                            rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000'",FinanceGlobal.FinURL);
                            rsDates.first();
                            
                            if(rsDates.getRow()>0) {
                                while(!rsDates.isAfterLast()) {
                                    Day=rsDates.getString("TR_DT_DD");
                                    Month=rsDates.getString("TR_DT_MM");
                                    Year=rsDates.getString("TR_DT_YY");
                                    
                                    
                                    //Find Vouchers of this book
                                    rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'" ,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow()>0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            String RefNo=rsVoucher.getString("TR_REF_NO");
                                            
                                            ResultSet rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            
                                            //More Processing...
                                            int DrCount=0;
                                            int CrCount=0;
                                            double DrTotal=0;
                                            double CrTotal=0;
                                            boolean InvalidEntry=false;
                                            
                                            DrCount=data.getIntValueFromDB("SELECT COUNT(*) FROM TR WHERE TR_AMT_SIG='D' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            CrCount=data.getIntValueFromDB("SELECT COUNT(*) FROM TR WHERE TR_AMT_SIG='C' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            
                                            DrTotal=data.getDoubleValueFromDB("SELECT SUM((AMOUNT/100)) FROM TR WHERE TR_AMT_SIG='D' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            CrTotal=data.getDoubleValueFromDB("SELECT SUM((AMOUNT/100)) FROM TR WHERE TR_AMT_SIG='C' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            
                                            
                                            if(DrTotal!=CrTotal) {
                                                System.out.println("Credit/Debit Total doesn't match ... Voucher No."+RefNo+" Book Code "+BookCode+" Date: "+Day+"/"+Month+"/"+Year);
                                                InvalidEntry=true;
                                            }
                                            
                                            //Debit and Credit Entries are similar but having more than 1 entries. Cannot handle such entries
                                            if(DrCount>1&&CrCount>1&&(DrCount!=CrCount)) {
                                                System.out.println("Multiple Cr/Dr Entries. ... Voucher No."+RefNo+" Book Code "+BookCode+" Date: "+Day+"/"+Month+"/"+Year);
                                                InvalidEntry=true;
                                            }
                                            
                                            //Debit and Credit Entries are similar but having more than 1 entries
                                            if(DrCount>1&&CrCount>1&&(DrCount==CrCount)) {
                                                ResultSet rsTmp=data.getResult("SELECT * FROM TR WHERE TR_AMT_SIG='D' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                                rsTmp.first();
                                                
                                                if(rsTmp.getRow()>0) {
                                                    while(!rsTmp.isAfterLast()) {
                                                        if(!data.IsRecordExist("SELECT * FROM TR WHERE TR_AMT_SIG='C' AND AMOUNT="+rsTmp.getDouble("AMOUNT")+" AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL)) {
                                                            InvalidEntry=true;
                                                        }
                                                        rsTmp.next();
                                                    }
                                                }
                                            }
                                            
                                            if(!InvalidEntry) {
                                                
                                                //There would be only single Entry for this
                                                String NewVoucherNo="M"+Month+Day+BookCode+RefNo;
                                                
                                                lblStatus.setText("Inserting "+NewVoucherNo);
                                                
                                                
                                                //*************************   Create Voucher Header   *******************************//
                                                rsHeader.moveToInsertRow();
                                                rsHeader.updateInt("COMPANY_ID",2);
                                                rsHeader.updateString("VOUCHER_NO",NewVoucherNo);
                                                rsHeader.updateString("BOOK_CODE",BookCode);
                                                rsHeader.updateString("CHEQUE_NO",rsDoc.getString("TR_CHEQ_NO"));
                                                
                                                String ChequeDate=rsDoc.getString("TRCHQBILDT");
                                                
                                                if((!ChequeDate.trim().equals(""))&&(!ChequeDate.trim().equals("000000"))) {
                                                    ChequeDate="20"+ChequeDate.substring(4)+"-"+ChequeDate.substring(2,4)+"-"+ChequeDate.substring(0,2);
                                                    
                                                    rsHeader.updateString("CHEQUE_DATE",ChequeDate);
                                                }
                                                else {
                                                    rsHeader.updateString("CHEQUE_DATE","0000-00-00");
                                                }
                                                
                                                String VoucherDate="20"+rsDoc.getString("TR_DT_YY")+"-"+rsDoc.getString("TR_DT_MM")+"-"+rsDoc.getString("TR_DT_DD");
                                                
                                                rsHeader.updateString("VOUCHER_DATE",VoucherDate);
                                                rsHeader.updateString("BANK_NAME", "");
                                                rsHeader.updateString("ST_CATEGORY",rsDoc.getString("TR_SALESTAX"));
                                                rsHeader.updateInt("APPROVED",1);
                                                rsHeader.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsHeader.updateInt("REJECTED",0);
                                                rsHeader.updateString("REJECTED_DATE","0000-00-00");
                                                rsHeader.updateString("REJECTED_REMARKS","");
                                                rsHeader.updateString("CREATED_BY","admin");
                                                rsHeader.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsHeader.updateString("MODIFIED_BY","admin");
                                                rsHeader.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsHeader.updateInt("HIERARCHY_ID",0);
                                                rsHeader.updateInt("CHANGED",1);
                                                rsHeader.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsHeader.updateInt("CANCELLED",0);
                                                rsHeader.updateInt("VOUCHER_TYPE",FinanceGlobal.TYPE_JOURNAL);
                                                rsHeader.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                
                                                try {
                                                    rsHeader.insertRow();
                                                }
                                                catch(Exception s)
                                                {}
                                                // ************************* End of Header ********************************//
                                                
                                                
                                                
                                                
                                                //############################# (2) DEBIT ENTRIES MULTIPLE, CREDIT ENTRY SINGLE #########################################
                                                if(DrCount>CrCount) {
                                                    //Find Multiple Credit Entries First
                                                    rsDoc=data.getResult("SELECT * FROM TR WHERE TR_AMT_SIG='D' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                                    
                                                    int ExSrNo=0;
                                                    int SrNo=0;
                                                    int BlockNo=0;
                                                    rsDoc.first();
                                                    
                                                    while(!rsDoc.isAfterLast()) {
                                                        
                                                        SrNo++;
                                                        ExSrNo++;
                                                        BlockNo++;
                                                        
                                                        rsDetail.moveToInsertRow();
                                                        rsDetail.updateInt("COMPANY_ID", 2);
                                                        rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                        rsDetail.updateInt("SR_NO",SrNo);
                                                        rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                        
                                                        String MainCode=rsDoc.getString("TRMAINCODE");
                                                        String SubCode=rsDoc.getString("TRSUBCODE");
                                                        double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                        String Effect=rsDoc.getString("TR_AMT_SIG");
                                                        
                                                        
                                                        if(SubCode.equals("000000")) {
                                                            SubCode="";
                                                        }
                                                        
                                                        rsDetail.updateDouble("AMOUNT",Amount);
                                                        rsDetail.updateInt("ACCOUNT_ID",0);
                                                        rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                        rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                        rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                        rsDetail.updateString("CREATED_BY","admin");
                                                        rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetail.updateString("MODIFIED_BY","admin");
                                                        rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetail.updateInt("CANCELLED",0);
                                                        rsDetail.updateInt("CHANGED",1);
                                                        rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                        rsDetail.updateString("PO_DATE","0000-00-00");
                                                        rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                        rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                        rsDetail.updateString("GRN_NO","");
                                                        rsDetail.updateString("GRN_DATE","0000-00-00");
                                                        rsDetail.updateInt("MODULE_ID",0);
                                                        
                                                        try {
                                                            rsDetail.insertRow();
                                                        }
                                                        catch(Exception s)
                                                        {}
                                                        
                                                        //Find the Opposite Debit Entry
                                                        ResultSet rsDocOpp=data.getResult("SELECT * FROM TR WHERE TR_AMT_SIG='C' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                                        
                                                        
                                                        //(1)***************************** Splitted Entries. Entry #1 **********************************//
                                                        rsDetailEx.moveToInsertRow();
                                                        rsDetailEx.updateInt("COMPANY_ID", 2);
                                                        rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                        rsDetailEx.updateInt("SR_NO",ExSrNo);
                                                        rsDetailEx.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                        rsDetailEx.updateDouble("AMOUNT",Amount);
                                                        rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                        rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                        rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                        rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                        rsDetailEx.updateString("CREATED_BY","admin");
                                                        rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateString("MODIFIED_BY","admin");
                                                        rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateInt("CANCELLED",0);
                                                        rsDetailEx.updateInt("CHANGED",1);
                                                        rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                        rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                        rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                        rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                        rsDetailEx.updateString("GRN_NO","");
                                                        rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                        rsDetailEx.updateInt("MODULE_ID",0);
                                                        rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                        
                                                        try {
                                                            rsDetailEx.insertRow();
                                                        }
                                                        catch(Exception s){}
                                                        //===================================================================================//
                                                        
                                                        
                                                        
                                                        //(2)****************** Splitted Entries. Entry #2 ********************************//
                                                        ExSrNo++;
                                                        rsDetailEx.moveToInsertRow();
                                                        rsDetailEx.updateInt("COMPANY_ID", 2);
                                                        rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                        rsDetailEx.updateInt("SR_NO",ExSrNo);
                                                        rsDetailEx.updateString("EFFECT",rsDocOpp.getString("TR_AMT_SIG"));
                                                        rsDetailEx.updateDouble("AMOUNT",Amount);
                                                        rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                        rsDetailEx.updateString("MAIN_ACCOUNT_CODE", rsDocOpp.getString("TRMAINCODE"));
                                                        rsDetailEx.updateString("SUB_ACCOUNT_CODE",rsDocOpp.getString("TRSUBCODE"));
                                                        rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                        rsDetailEx.updateString("CREATED_BY","admin");
                                                        rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateString("MODIFIED_BY","admin");
                                                        rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateInt("CANCELLED",0);
                                                        rsDetailEx.updateInt("CHANGED",1);
                                                        rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                        rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                        rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                        rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                        rsDetailEx.updateString("GRN_NO","");
                                                        rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                        rsDetailEx.updateInt("MODULE_ID",0);
                                                        rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                        
                                                        try {
                                                            rsDetailEx.insertRow();
                                                        }
                                                        catch(Exception s){}
                                                        //************************ Splitted Entries Completed **********************************//
                                                        //**************************************************************************************//
                                                        
                                                        rsDoc.next();
                                                    }
                                                    
                                                    
                                                    
                                                    
                                                    //!!!! ENTRING SINGLE CREDIT ENTRY
                                                    rsDoc=data.getResult("SELECT * FROM TR WHERE TR_AMT_SIG='C' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                                    
                                                    SrNo++;
                                                    BlockNo++;
                                                    
                                                    rsDetail.moveToInsertRow();
                                                    rsDetail.updateInt("COMPANY_ID", 2);
                                                    rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetail.updateInt("SR_NO",SrNo);
                                                    rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    
                                                    String MainCode=rsDoc.getString("TRMAINCODE");
                                                    String SubCode=rsDoc.getString("TRSUBCODE");
                                                    double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                    String Effect=rsDoc.getString("TR_AMT_SIG");
                                                    
                                                    
                                                    if(SubCode.equals("000000")) {
                                                        SubCode="";
                                                    }
                                                    
                                                    rsDetail.updateDouble("AMOUNT",Amount);
                                                    rsDetail.updateInt("ACCOUNT_ID",0);
                                                    rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetail.updateString("CREATED_BY","admin");
                                                    rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("MODIFIED_BY","admin");
                                                    rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateInt("CANCELLED",0);
                                                    rsDetail.updateInt("CHANGED",1);
                                                    rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                    rsDetail.updateString("PO_DATE","0000-00-00");
                                                    rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                    rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                    rsDetail.updateString("GRN_NO","");
                                                    rsDetail.updateString("GRN_DATE","0000-00-00");
                                                    rsDetail.updateInt("MODULE_ID",0);
                                                    
                                                    try {
                                                        rsDetail.insertRow();
                                                    }
                                                    catch(Exception s)
                                                    {}
                                                    
                                                    
                                                }
                                                //############################### CASE (1) COMPLETED ###########################################//
                                                
                                                
                                                
                                                
                                                
                                                //############################# (2) CREDIT ENTRIES MULTIPLE, DEBIT ENTRY SINGLE #########################################
                                                if((CrCount>DrCount)||(CrCount==DrCount)) {
                                                    //Find Multiple Credit Entries First
                                                    rsDoc=data.getResult("SELECT * FROM TR WHERE TR_AMT_SIG='C' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                                    
                                                    int ExSrNo=0;
                                                    int SrNo=0;
                                                    int BlockNo=0;
                                                    rsDoc.first();
                                                    
                                                    while(!rsDoc.isAfterLast()) {
                                                        
                                                        SrNo++;
                                                        ExSrNo++;
                                                        BlockNo++;
                                                        
                                                        rsDetail.moveToInsertRow();
                                                        rsDetail.updateInt("COMPANY_ID", 2);
                                                        rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                        rsDetail.updateInt("SR_NO",SrNo);
                                                        rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                        
                                                        String MainCode=rsDoc.getString("TRMAINCODE");
                                                        String SubCode=rsDoc.getString("TRSUBCODE");
                                                        double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                        String Effect=rsDoc.getString("TR_AMT_SIG");
                                                        
                                                        
                                                        if(SubCode.equals("000000")) {
                                                            SubCode="";
                                                        }
                                                        
                                                        rsDetail.updateDouble("AMOUNT",Amount);
                                                        rsDetail.updateInt("ACCOUNT_ID",0);
                                                        rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                        rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                        rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                        rsDetail.updateString("CREATED_BY","admin");
                                                        rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetail.updateString("MODIFIED_BY","admin");
                                                        rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetail.updateInt("CANCELLED",0);
                                                        rsDetail.updateInt("CHANGED",1);
                                                        rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                        rsDetail.updateString("PO_DATE","0000-00-00");
                                                        rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                        rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                        rsDetail.updateString("GRN_NO","");
                                                        rsDetail.updateString("GRN_DATE","0000-00-00");
                                                        rsDetail.updateInt("MODULE_ID",0);
                                                        
                                                        try {
                                                            rsDetail.insertRow();
                                                        }
                                                        catch(Exception s)
                                                        {}
                                                        
                                                        //Find the Opposite Debit Entry
                                                        ResultSet rsDocOpp=data.getResult("SELECT * FROM TR WHERE TR_AMT_SIG='D' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                                        
                                                        
                                                        //(1)***************************** Splitted Entries. Entry #1 **********************************//
                                                        rsDetailEx.moveToInsertRow();
                                                        rsDetailEx.updateInt("COMPANY_ID", 2);
                                                        rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                        rsDetailEx.updateInt("SR_NO",ExSrNo);
                                                        rsDetailEx.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                        rsDetailEx.updateDouble("AMOUNT",Amount);
                                                        rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                        rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                        rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                        rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                        rsDetailEx.updateString("CREATED_BY","admin");
                                                        rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateString("MODIFIED_BY","admin");
                                                        rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateInt("CANCELLED",0);
                                                        rsDetailEx.updateInt("CHANGED",1);
                                                        rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                        rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                        rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                        rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                        rsDetailEx.updateString("GRN_NO","");
                                                        rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                        rsDetailEx.updateInt("MODULE_ID",0);
                                                        rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                        
                                                        try {
                                                            rsDetailEx.insertRow();
                                                        }
                                                        catch(Exception s){}
                                                        //===================================================================================//
                                                        
                                                        
                                                        
                                                        //(2)****************** Splitted Entries. Entry #2 ********************************//
                                                        ExSrNo++;
                                                        rsDetailEx.moveToInsertRow();
                                                        rsDetailEx.updateInt("COMPANY_ID", 2);
                                                        rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                        rsDetailEx.updateInt("SR_NO",ExSrNo);
                                                        rsDetailEx.updateString("EFFECT",rsDocOpp.getString("TR_AMT_SIG"));
                                                        rsDetailEx.updateDouble("AMOUNT",Amount);
                                                        rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                        rsDetailEx.updateString("MAIN_ACCOUNT_CODE", rsDocOpp.getString("TRMAINCODE"));
                                                        rsDetailEx.updateString("SUB_ACCOUNT_CODE",rsDocOpp.getString("TRSUBCODE"));
                                                        rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                        rsDetailEx.updateString("CREATED_BY","admin");
                                                        rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateString("MODIFIED_BY","admin");
                                                        rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateInt("CANCELLED",0);
                                                        rsDetailEx.updateInt("CHANGED",1);
                                                        rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                        rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                        rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                        rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                        rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                        rsDetailEx.updateString("GRN_NO","");
                                                        rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                        rsDetailEx.updateInt("MODULE_ID",0);
                                                        rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                        
                                                        try {
                                                            rsDetailEx.insertRow();
                                                        }
                                                        catch(Exception s){}
                                                        //************************ Splitted Entries Completed **********************************//
                                                        //**************************************************************************************//
                                                        
                                                        rsDoc.next();
                                                    }
                                                    
                                                    
                                                    
                                                    
                                                    //!!!! ENTRING SINGLE DEBIT ENTRY
                                                    rsDoc=data.getResult("SELECT * FROM TR WHERE TR_AMT_SIG='D' AND TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                                    
                                                    SrNo++;
                                                    BlockNo++;
                                                    
                                                    rsDetail.moveToInsertRow();
                                                    rsDetail.updateInt("COMPANY_ID", 2);
                                                    rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetail.updateInt("SR_NO",SrNo);
                                                    rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    
                                                    String MainCode=rsDoc.getString("TRMAINCODE");
                                                    String SubCode=rsDoc.getString("TRSUBCODE");
                                                    double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                    String Effect=rsDoc.getString("TR_AMT_SIG");
                                                    
                                                    
                                                    if(SubCode.equals("000000")) {
                                                        SubCode="";
                                                    }
                                                    
                                                    rsDetail.updateDouble("AMOUNT",Amount);
                                                    rsDetail.updateInt("ACCOUNT_ID",0);
                                                    rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetail.updateString("CREATED_BY","admin");
                                                    rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("MODIFIED_BY","admin");
                                                    rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateInt("CANCELLED",0);
                                                    rsDetail.updateInt("CHANGED",1);
                                                    rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                    rsDetail.updateString("PO_DATE","0000-00-00");
                                                    rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                    rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                    rsDetail.updateString("GRN_NO","");
                                                    rsDetail.updateString("GRN_DATE","0000-00-00");
                                                    rsDetail.updateInt("MODULE_ID",0);
                                                    
                                                    try {
                                                        rsDetail.insertRow();
                                                    }
                                                    catch(Exception s)
                                                    {}
                                                    
                                                    
                                                }
                                                //############################### CASE (2) COMPLETED ###########################################//
                                                
                                            }
                                            rsVoucher.next();
                                        }
                                    }
                                    
                                    
                                    rsDates.next();
                                }
                            }
                            
                            rsBook.next();
                        }
                    }
                    
                    
                    lblStatus.setText("Completed...");
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
        
    }
    
    public void MatchTR() {
        try {
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File("/root/Desktop/TRMatchDetailed.txt")));
            BufferedWriter bFile=new BufferedWriter(new FileWriter(new File("/root/Desktop/TRMatchBrief.txt")));
            
            
            String strSQL="";
            HashMap Suppliers=new HashMap();
            String BrdURL="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
            String AnkURL="jdbc:mysql://200.0.0.227:3306/DINESHMILLSA";
            ResultSet rsTmp;
            
            strSQL="SELECT DISTINCT(SUPP_ID) AS SUPP_ID ";
            strSQL+="FROM ";
            strSQL+="D_INV_GRN_HEADER A, ";
            strSQL+="D_INV_GRN_DETAIL B ";
            strSQL+="WHERE A.GRN_NO=B.GRN_NO AND ";
            strSQL+="A.GRN_TYPE=B.GRN_TYPE AND ";
            strSQL+="A.APPROVED=1 AND ";
            strSQL+="A.CANCELLED=0 AND ";
            strSQL+="A.GRN_DATE>='2008-01-01' AND A.GRN_DATE<='2008-03-31' AND ";
            strSQL+="A.GRN_NO IN ";
            strSQL+="(SELECT GRN_NO FROM D_INV_GRN_DETAIL WHERE ";
            strSQL+="(ITEM_ID LIKE '1%') OR (ITEM_ID LIKE '2%')  OR (ITEM_ID LIKE '3%')  OR ";
            strSQL+="(ITEM_ID LIKE '5%')  OR (ITEM_ID LIKE '6%') OR (ITEM_ID LIKE '7%')  OR ";
            strSQL+="(ITEM_ID LIKE '8%') OR (ITEM_ID LIKE '90%') OR (ITEM_ID LIKE '95%') OR ";
            strSQL+="(ITEM_ID LIKE '91%') OR (ITEM_ID LIKE '92%') OR (ITEM_ID LIKE '93%') OR (ITEM_ID LIKE '4%') OR (ITEM_ID LIKE '94%') ) AND ";
            strSQL+="A.SUPP_ID<>'888888' AND A.SUPP_ID<>'999999'";
            
            //Baroda
            ResultSet rsSupp=data.getResult(strSQL,BrdURL);
            rsSupp.first();
            
            while(!rsSupp.isAfterLast()) {
                Suppliers.put(rsSupp.getString("SUPP_ID").trim(), rsSupp.getString("SUPP_ID").trim());
                rsSupp.next();
            }
            
            bFile.newLine();bFile.write("Supplier Code"+",Supplier Name,"+"GRN Value"+","+"TR Value");
            
            
            strSQL="SELECT DISTINCT(SUPP_ID) AS SUPP_ID ";
            strSQL+="FROM ";
            strSQL+="D_INV_GRN_HEADER A, ";
            strSQL+="D_INV_GRN_DETAIL B ";
            strSQL+="WHERE A.GRN_NO=B.GRN_NO AND ";
            strSQL+="A.GRN_TYPE=B.GRN_TYPE AND ";
            strSQL+="A.APPROVED=1 AND ";
            strSQL+="A.CANCELLED=0 AND ";
            strSQL+="A.GRN_DATE>='2008-01-01' AND A.GRN_DATE<='2008-03-31' AND ";
            strSQL+="A.GRN_NO IN ";
            strSQL+="(SELECT GRN_NO FROM D_INV_GRN_DETAIL WHERE ";
            strSQL+="(ITEM_ID LIKE '10%') OR (ITEM_ID LIKE '20%')  OR (ITEM_ID LIKE '30%')  OR ";
            strSQL+="(ITEM_ID LIKE '40%')  OR (ITEM_ID LIKE '50%') OR (ITEM_ID LIKE '60%')  OR ";
            strSQL+="(ITEM_ID LIKE '70%') OR (ITEM_ID LIKE '95%') OR (ITEM_ID LIKE '96%') OR ";
            strSQL+="(ITEM_ID LIKE '98%') OR (ITEM_ID LIKE '80%') OR (ITEM_ID LIKE '81%') ) AND ";
            strSQL+="A.SUPP_ID<>'888888' AND A.SUPP_ID<>'999999'";
            
            //Ankleshwar
            rsSupp=data.getResult(strSQL,AnkURL);
            rsSupp.first();
            
            while(!rsSupp.isAfterLast()) {
                Suppliers.put(rsSupp.getString("SUPP_ID").trim(), rsSupp.getString("SUPP_ID").trim());
                rsSupp.next();
            }
            
            
            Iterator supp= Suppliers.keySet().iterator();
            
            while(supp.hasNext()) {
                double GRNValue=0;
                String SuppCode=(String)supp.next();
                String SuppName=clsSupplier.getSupplierName(2,SuppCode);
                
                if(SuppName.trim().equals("")) {
                    SuppName=clsSupplier.getSupplierName(3,SuppCode);
                }
                
                //We have Supplier Code
                
                aFile.newLine();aFile.write("   ");
                aFile.newLine();aFile.write(" *************************************************** ");
                aFile.newLine();aFile.write(" SUPPLIER CODE : "+SuppCode+" "+SuppName);
                aFile.newLine();aFile.write(" List of GRN (Baroda and Ankleshwar) ");
                aFile.newLine();aFile.write(" ----------------------------------------------------- ");
                aFile.newLine();aFile.write(" ");
                
                //Get GRN Total of Baroda
                strSQL="SELECT A.GRN_NO,A.GRN_DATE,SUM(B.LANDED_RATE*B.QTY) AS GRN_VALUE ";
                strSQL+="FROM ";
                strSQL+="D_INV_GRN_HEADER A, ";
                strSQL+="D_INV_GRN_DETAIL B  ";
                strSQL+="WHERE A.GRN_NO=B.GRN_NO AND ";
                strSQL+="A.GRN_TYPE=B.GRN_TYPE AND ";
                strSQL+="A.APPROVED=1 AND ";
                strSQL+="A.CANCELLED=0 AND ";
                strSQL+="A.GRN_DATE>='2008-01-01' AND A.GRN_DATE<='2008-03-31' AND ";
                strSQL+="A.GRN_NO IN ";
                strSQL+="(SELECT GRN_NO FROM D_INV_GRN_DETAIL WHERE ";
                strSQL+="(ITEM_ID LIKE '1%') OR (ITEM_ID LIKE '2%')  OR (ITEM_ID LIKE '3%')  OR ";
                strSQL+="(ITEM_ID LIKE '5%')  OR (ITEM_ID LIKE '6%') OR (ITEM_ID LIKE '7%')  OR ";
                strSQL+="(ITEM_ID LIKE '8%') OR (ITEM_ID LIKE '90%') OR (ITEM_ID LIKE '95%') OR ";
                strSQL+="(ITEM_ID LIKE '91%') OR (ITEM_ID LIKE '92%') OR (ITEM_ID LIKE '93%') OR (ITEM_ID LIKE '4%') OR (ITEM_ID LIKE '94%') ) ";
                strSQL+="AND A.SUPP_ID='"+SuppCode+"' ";
                strSQL+="GROUP BY A.GRN_NO,A.GRN_TYPE ";
                strSQL+="ORDER BY A.GRN_DATE ";
                
                rsTmp=data.getResult(strSQL,BrdURL);
                rsTmp.first();
                if(rsTmp.getRow()>0) {
                    while(!rsTmp.isAfterLast()) {
                        aFile.newLine();aFile.write(rsTmp.getString("GRN_NO")+"  "+EITLERPGLOBAL.formatDate(rsTmp.getString("GRN_DATE"))+"  "+EITLERPGLOBAL.round(rsTmp.getDouble("GRN_VALUE"),2));
                        GRNValue+=EITLERPGLOBAL.round(rsTmp.getDouble("GRN_VALUE"),2);
                        rsTmp.next();
                    }
                }
                
                //Get GRN Total of Baroda
                strSQL="SELECT A.GRN_NO,A.GRN_DATE,SUM(B.LANDED_RATE*B.QTY) AS VALUE ";
                strSQL+="FROM ";
                strSQL+="D_INV_GRN_HEADER A, ";
                strSQL+="D_INV_GRN_DETAIL B  ";
                strSQL+="WHERE A.GRN_NO=B.GRN_NO AND ";
                strSQL+="A.GRN_TYPE=B.GRN_TYPE AND ";
                strSQL+="A.APPROVED=1 AND ";
                strSQL+="A.CANCELLED=0 AND ";
                strSQL+="A.GRN_DATE>='2008-01-01' AND A.GRN_DATE<='2008-03-31' AND ";
                strSQL+="A.GRN_NO IN ";
                strSQL+="(SELECT GRN_NO FROM D_INV_GRN_DETAIL WHERE ";
                strSQL+="(ITEM_ID LIKE '10%') OR (ITEM_ID LIKE '20%')  OR (ITEM_ID LIKE '30%')  OR ";
                strSQL+="(ITEM_ID LIKE '40%')  OR (ITEM_ID LIKE '50%') OR (ITEM_ID LIKE '60%')  OR ";
                strSQL+="(ITEM_ID LIKE '70%') OR (ITEM_ID LIKE '95%') OR (ITEM_ID LIKE '96%') OR ";
                strSQL+="(ITEM_ID LIKE '98%') OR (ITEM_ID LIKE '80%') OR (ITEM_ID LIKE '81%') ) ";
                strSQL+="AND A.SUPP_ID='"+SuppCode+"' ";
                strSQL+="GROUP BY A.GRN_NO,A.GRN_TYPE ";
                strSQL+="ORDER BY A.GRN_DATE ";
                
                rsTmp=data.getResult(strSQL,AnkURL);
                rsTmp.first();
                if(rsTmp.getRow()>0) {
                    System.out.println(" ");
                    while(!rsTmp.isAfterLast()) {
                        aFile.newLine();aFile.write(rsTmp.getString("GRN_NO")+"  "+EITLERPGLOBAL.formatDate(rsTmp.getString("GRN_DATE"))+"  "+EITLERPGLOBAL.round(rsTmp.getDouble("VALUE"),2));
                        GRNValue+=EITLERPGLOBAL.round(UtilFunctions.getDouble(rsTmp,"VALUE", 0),2);
                        rsTmp.next();
                    }
                }
                
                aFile.newLine();aFile.write(" ----------------------------------------------------- ");
                aFile.newLine();aFile.write("        GRN Total :: "+EITLERPGLOBAL.round(GRNValue,2));
                aFile.newLine();aFile.write(" ----------------------------------------------------- ");
                aFile.newLine();aFile.write(" ");
                aFile.newLine();aFile.write(" ----------------------------------------------------- ");
                aFile.newLine();aFile.write(" List of FINANCE TR ");
                aFile.newLine();aFile.write(" ----------------------------------------------------- ");
                
                double TRValue=0;
                
                //Find the Finance Data
                strSQL="SELECT * FROM FINANCE.TR WHERE TRSUBCODE='"+SuppCode+"' AND TR_AMT_SIG='C' ";
                rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
                rsTmp.first();
                if(rsTmp.getRow()>0) {
                    while(!rsTmp.isAfterLast()) {
                        
                        String AllocationCode=rsTmp.getString("TRALLOC_CD");
                        
                        if(AllocationCode.equals("405021")||AllocationCode.equals("421014")||AllocationCode.equals("450203")||AllocationCode.equals("450605")) {
                            aFile.newLine();aFile.write(" "+rsTmp.getString("TR_BOOK_CD")+" "+rsTmp.getString("TR_REF_NO")+" "+rsTmp.getString("TR_DT_DD")+"-"+rsTmp.getString("TR_DT_MM")+"-"+rsTmp.getString("TR_DT_YY")+"   "+EITLERPGLOBAL.round(UtilFunctions.CDbl(rsTmp.getString("TR_AMT"))/100,2));
                            TRValue+=EITLERPGLOBAL.round(UtilFunctions.CDbl(rsTmp.getString("TR_AMT"))/100,2);
                        }
                        rsTmp.next();
                    }
                }
                
                aFile.newLine();aFile.write(" ----------------------------------------------------- ");
                aFile.newLine();aFile.write("        TR Total :: "+EITLERPGLOBAL.round(TRValue,2));
                aFile.newLine();aFile.write(" **************************************************** ");
                aFile.newLine();aFile.write(" ");
                
                bFile.newLine();bFile.write(SuppCode+","+SuppName+","+EITLERPGLOBAL.round(GRNValue,2)+","+EITLERPGLOBAL.round(TRValue,2));
                
            }
            
            
            System.out.println("Completed...");
            
            aFile.close();
            bFile.close();
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    /*private void PrintLedger() {
     
        try {
            TReportEngine objEngine=new TReportEngine();
     
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
     
            objData.AddColumn("VOUCHER_NO");
            objData.AddColumn("VOUCHER_DATE");
            objData.AddColumn("BOOK_CODE");
            objData.AddColumn("CHEQUE_NO");
            objData.AddColumn("CHEQUE_DATE");
            objData.AddColumn("INVOICE_NO");
            objData.AddColumn("INVOICE_DATE");
            objData.AddColumn("PO_NO");
            objData.AddColumn("PO_DATE");
            objData.AddColumn("GRN_NO");
            objData.AddColumn("GRN_DATE");
            objData.AddColumn("REMARKS");
            objData.AddColumn("DEBIT_AMOUNT");
            objData.AddColumn("CREDIT_AMOUNT");
     
     
     
            HashMap List=clsAccount.getLedger("","610144", "2007-11-01", "2008-12-31",false);
     
            for(int i=1;i<=List.size();i++) {
                clsVoucher objItem=(clsVoucher)List.get(Integer.toString(i));
     
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
     
                objRow.setValue("VOUCHER_NO", objItem.getAttribute("VOUCHER_NO").getString());
                objRow.setValue("VOUCHER_DATE", objItem.getAttribute("VOUCHER_DATE").getString());
                objRow.setValue("BOOK_CODE", objItem.getAttribute("BOOK_CODE").getString());
                objRow.setValue("CHEQUE_NO", objItem.getAttribute("CHEQUE_NO").getString());
                objRow.setValue("CHEQUE_DATE", objItem.getAttribute("CHEQUE_DATE").getString());
                objRow.setValue("INVOICE_NO", objItem.getAttribute("INVOICE_NO").getString());
                objRow.setValue("INVOICE_DATE", objItem.getAttribute("INVOICE_DATE").getString());
                objRow.setValue("PO_NO", objItem.getAttribute("PO_NO").getString());
                objRow.setValue("PO_DATE", objItem.getAttribute("PO_DATE").getString());
                objRow.setValue("GRN_NO", objItem.getAttribute("GRN_NO").getString());
                objRow.setValue("GRN_DATE", objItem.getAttribute("GRN_DATE").getString());
                objRow.setValue("REMARKS", objItem.getAttribute("REMARKS").getString());
                objRow.setValue("DEBIT_AMOUNT", Double.toString(objItem.getAttribute("DEBIT_AMOUNT").getDouble()));
                objRow.setValue("CREDIT_AMOUNT", Double.toString(objItem.getAttribute("CREDIT_AMOUNT").getDouble()));
     
                objData.AddRow(objRow);
            }
     
     
            HashMap Parameters=new HashMap();
     
     
            objEngine.PreviewReport("http://200.0.0.227:8080/SDMLERP/EITLERP/Reports/finance/rptCreditorsLedger.rpt",Parameters,objData);
     
     
     
        }
        catch(Exception e) {
     
        }
    }*/
    
    
    
    
    private void ImportPartiesFromSupplierMaster() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                long LineNo=0;
                String FileRecord="";
                String BarodaURL="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
                String AnkURL="jdbc:mysql://200.0.0.227:3306/DINESHMILLSA";
                
                try {
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsTmp=stTemp.executeQuery("SELECT * FROM D_FIN_PARTY_MASTER");
                    int Pointer=0;
                    
                    Counter=data.getLongValueFromDB("SELECT MAX(PARTY_ID) AS PARTY_ID FROM D_FIN_PARTY_MASTER", FinanceGlobal.FinURL);
                    
                    ResultSet rsSupp=data.getResult("SELECT * FROM D_COM_SUPP_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND SUPPLIER_CODE NOT IN (SELECT PARTY_CODE FROM FINANCE.D_FIN_PARTY_MASTER) AND SUPPLIER_CODE NOT LIKE 'U%'",AnkURL);
                    rsSupp.first();
                    
                    if(rsSupp.getRow()>0) {
                        while(!rsSupp.isAfterLast()) {
                            Counter++;
                            rsTmp.moveToInsertRow();
                            rsTmp.updateInt("COMPANY_ID",3);
                            rsTmp.updateString("PARTY_CODE",rsSupp.getString("SUPPLIER_CODE"));
                            rsTmp.updateString("MAIN_ACCOUNT_CODE","");
                            rsTmp.updateLong("PARTY_ID",Counter);
                            rsTmp.updateString("PARTY_NAME",rsSupp.getString("SUPP_NAME"));
                            rsTmp.updateString("SH_NAME","");
                            rsTmp.updateString("REMARKS","");
                            rsTmp.updateString("SH_CODE","");
                            rsTmp.updateDouble("CREDIT_DAYS",0);
                            rsTmp.updateDouble("CREDIT_LIMIT",0);
                            rsTmp.updateDouble("DEBIT_LIMIT",0);
                            rsTmp.updateString("TIN_NO",rsSupp.getString("GST_NO"));
                            rsTmp.updateString("TIN_DATE",rsSupp.getString("GST_DATE"));
                            rsTmp.updateString("CST_NO",rsSupp.getString("CST_NO"));
                            rsTmp.updateString("CST_DATE",rsSupp.getString("CST_DATE"));
                            rsTmp.updateString("ECC_NO",rsSupp.getString("ECC_NO"));
                            rsTmp.updateString("ECC_DATE",rsSupp.getString("ECC_DATE"));
                            rsTmp.updateString("SERVICE_TAX_NO",rsSupp.getString("SERVICETAX_NO"));
                            rsTmp.updateString("SERVICE_TAX_DATE",rsSupp.getString("SERVICETAX_DATE"));
                            rsTmp.updateString("SSI_NO",rsSupp.getString("SSIREG_NO"));
                            rsTmp.updateString("SSI_DATE",rsSupp.getString("SSIREG_DATE"));
                            rsTmp.updateString("ESI_NO",rsSupp.getString("ESIREG_NO"));
                            rsTmp.updateString("ESI_DATE",rsSupp.getString("ESIREG_DATE"));
                            rsTmp.updateString("ADDRESS","");
                            rsTmp.updateString("CITY","");
                            rsTmp.updateString("PINCODE","");
                            rsTmp.updateString("STATE","");
                            rsTmp.updateString("COUNTRY","");
                            rsTmp.updateString("PHONE","");
                            rsTmp.updateString("FAX","");
                            rsTmp.updateString("MOBILE","");
                            rsTmp.updateString("EMAIL","");
                            rsTmp.updateString("URL","");
                            rsTmp.updateInt("APPROVED",1);
                            rsTmp.updateString("APPROVED_DATE","0000-00-00");
                            rsTmp.updateInt("REJECTED",0);
                            rsTmp.updateString("REJECTED_DATE","0000-00-00");
                            rsTmp.updateString("REJECTED_REMARKS","");
                            rsTmp.updateString("REJECTED_DATE","0000-00-00");
                            rsTmp.updateInt("HIERARCHY_ID",0);
                            rsTmp.updateInt("CANCELLED",0);
                            rsTmp.updateInt("BLOCKED",0);
                            rsTmp.updateString("PAN_NO","");
                            rsTmp.updateString("PAN_DATE","0000-00-00");
                            rsTmp.updateInt("CHANGED",0);
                            rsTmp.updateString("CHANGED_DATE","0000-00-00");
                            rsTmp.updateString("CREATED_BY","Admin");
                            rsTmp.updateString("CREATED_DATE","0000-00-00");
                            rsTmp.updateString("MODIFIED_BY","Admin");
                            rsTmp.updateString("MODIFIED_DATE","0000-00-00");
                            rsTmp.updateDouble("CLOSING_BALANCE",0);
                            rsTmp.updateString("CLOSING_EFFECT","D");
                            rsTmp.insertRow();
                            
                            
                            rsSupp.next();
                        }
                    }
                    
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    
    private void ImportAddresses() {
        
        new Thread() {
            
            public void run(){
                String BarodaURL="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
                
                try {
                    
                    ResultSet rsTmp=data.getResult("SELECT * FROM D_FIN_PARTY_MASTER ",FinanceGlobal.FinURL);
                    rsTmp.first();
                    
                    while(!rsTmp.isAfterLast()) {
                        String SuppCode=rsTmp.getString("PARTY_CODE");
                        lblStatus.setText(SuppCode);
                        
                        String Address=data.getStringValueFromDB("SELECT CONCAT(ADD1,' ',ADD2,' ',ADD3) FROM D_COM_SUPP_MASTER WHERE SUPPLIER_CODE='"+SuppCode+"'",BarodaURL);
                        String City=data.getStringValueFromDB("SELECT CITY FROM D_COM_SUPP_MASTER WHERE SUPPLIER_CODE='"+SuppCode+"'",BarodaURL);
                        
                        data.Execute("UPDATE D_FIN_PARTY_MASTER SET ADDRESS='"+Address+"',CITY='"+City+"' WHERE PARTY_CODE='"+SuppCode+"'",FinanceGlobal.FinURL);
                        
                        
                        rsTmp.next();
                    }
                    
                    lblStatus.setText("Done");
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    
    private void MigrateVouchersType3() {
        new Thread() {
            
            public void run() {
                try {
                    
                    ResultSet rsVoucher,rsDates;
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stHeader=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsHeader=stHeader.executeQuery("SELECT * FROM L_FIN_VOUCHER_HEADER LIMIT 1");
                    
                    Statement stDetail=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetail=stDetail.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL LIMIT 1");
                    
                    Statement stDetailEx=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetailEx=stDetailEx.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL_EX LIMIT 1");
                    
                    
                    //(3) Creating Entries for Bank/Cash Books - Allocation code is to be search from Book Master
                    ResultSet rsBook=data.getResult("SELECT * FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE=3 AND BOOK_CODE NOT IN ('01','02','04','09','10','11','67','26') ",FinanceGlobal.FinURL);
                    rsBook.first();
                    
                    if(rsBook.getRow()>0) {
                        while(!rsBook.isAfterLast()) {
                            String BookCode=rsBook.getString("BOOK_CODE");
                            String BookMainCode=rsBook.getString("MAIN_ACCOUNT_CODE");
                            String Day="";
                            String Month="";
                            String Year="";
                            
                            //Find Distinct Dates
                            rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000'",FinanceGlobal.FinURL);
                            rsDates.first();
                            
                            if(rsDates.getRow()>0) {
                                while(!rsDates.isAfterLast()) {
                                    Day=rsDates.getString("TR_DT_DD");
                                    Month=rsDates.getString("TR_DT_MM");
                                    Year=rsDates.getString("TR_DT_YY");
                                    
                                    
                                    //Find Vouchers of this book
                                    rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN('210010','210027','210072') " ,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow()>0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            String RefNo=rsVoucher.getString("TR_REF_NO");
                                            
                                            ResultSet rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE<>TRALLOC_CD",FinanceGlobal.FinURL);
                                            rsDoc.first();
                                            
                                            boolean InvalidEntry=false;
                                            
                                            if(rsDoc.getString("TRALLOC_CD").trim().equals("000000")) {
                                                System.out.println("No Allocation Code defined. Voucher No. "+RefNo+" Book Code"+BookCode+" Date: "+Day+"/"+Month+"/"+Year);
                                            }
                                            
                                            if(!InvalidEntry) {
                                                
                                                
                                                //There would be only single Entry for this
                                                String NewVoucherNo="M"+Month+Day+BookCode+RefNo;
                                                
                                                lblStatus.setText("Inserting "+NewVoucherNo);
                                                
                                                //*************************   Create Voucher Header   *******************************//
                                                rsHeader.moveToInsertRow();
                                                rsHeader.updateInt("COMPANY_ID",2);
                                                rsHeader.updateString("VOUCHER_NO",NewVoucherNo);
                                                rsHeader.updateString("BOOK_CODE",BookCode);
                                                rsHeader.updateString("CHEQUE_NO",rsDoc.getString("TR_CHEQ_NO"));
                                                
                                                String ChequeDate=rsDoc.getString("TRCHQBILDT");
                                                
                                                if((!ChequeDate.trim().equals(""))&&(!ChequeDate.trim().equals("000000"))) {
                                                    ChequeDate="20"+ChequeDate.substring(4)+"-"+ChequeDate.substring(2,4)+"-"+ChequeDate.substring(0,2);
                                                    
                                                    rsHeader.updateString("CHEQUE_DATE",ChequeDate);
                                                }
                                                else {
                                                    rsHeader.updateString("CHEQUE_DATE","0000-00-00");
                                                }
                                                
                                                String VoucherDate="20"+rsDoc.getString("TR_DT_YY")+"-"+rsDoc.getString("TR_DT_MM")+"-"+rsDoc.getString("TR_DT_DD");
                                                
                                                rsHeader.updateString("VOUCHER_DATE",VoucherDate);
                                                rsHeader.updateString("BANK_NAME", "");
                                                rsHeader.updateString("ST_CATEGORY",rsDoc.getString("TR_SALESTAX"));
                                                rsHeader.updateInt("APPROVED",1);
                                                rsHeader.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsHeader.updateInt("REJECTED",0);
                                                rsHeader.updateString("REJECTED_DATE","0000-00-00");
                                                rsHeader.updateString("REJECTED_REMARKS","");
                                                rsHeader.updateString("CREATED_BY","admin");
                                                rsHeader.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsHeader.updateString("MODIFIED_BY","admin");
                                                rsHeader.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsHeader.updateInt("HIERARCHY_ID",0);
                                                rsHeader.updateInt("CHANGED",1);
                                                rsHeader.updateInt("VOUCHER_TYPE",1);
                                                rsHeader.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsHeader.updateInt("CANCELLED",0);
                                                rsHeader.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                
                                                try {
                                                    rsHeader.insertRow();
                                                }
                                                catch(Exception s)
                                                {}
                                                // ************************* End of Header ********************************//
                                                
                                                
                                                
                                                
                                                
                                                //******************* Creating Voucher Detail Records ************************//
                                                rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE<>TRALLOC_CD",FinanceGlobal.FinURL);
                                                rsDoc.first();
                                                int SrNo=0;
                                                int BlockNo=0;
                                                
                                                
                                                while(!rsDoc.isAfterLast()) {
                                                    
                                                    SrNo++;
                                                    BlockNo++;
                                                    
                                                    rsDetail.moveToInsertRow();
                                                    rsDetail.updateInt("COMPANY_ID", 2);
                                                    rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetail.updateInt("SR_NO",SrNo);
                                                    rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    
                                                    String MainCode=rsDoc.getString("TRMAINCODE");
                                                    String SubCode=rsDoc.getString("TRSUBCODE");
                                                    double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                    String Effect=rsDoc.getString("TR_AMT_SIG");
                                                    
                                                    
                                                    if(SubCode.equals("000000")) {
                                                        SubCode="";
                                                    }
                                                    
                                                    rsDetail.updateDouble("AMOUNT",Amount);
                                                    rsDetail.updateInt("ACCOUNT_ID",0);
                                                    rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetail.updateString("CREATED_BY","admin");
                                                    rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("MODIFIED_BY","admin");
                                                    rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateInt("CANCELLED",0);
                                                    rsDetail.updateInt("CHANGED",1);
                                                    rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                    rsDetail.updateString("PO_DATE","0000-00-00");
                                                    rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                    rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                    rsDetail.updateString("GRN_NO","");
                                                    rsDetail.updateString("GRN_DATE","0000-00-00");
                                                    rsDetail.updateInt("MODULE_ID",0);
                                                    
                                                    try {
                                                        rsDetail.insertRow();
                                                    }
                                                    catch(Exception s)
                                                    {}
                                                    
                                                    
                                                    rsDetailEx.moveToInsertRow();
                                                    rsDetailEx.updateInt("COMPANY_ID", 2);
                                                    rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetailEx.updateInt("SR_NO",SrNo);
                                                    rsDetailEx.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    rsDetailEx.updateDouble("AMOUNT",Amount);
                                                    rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                    rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetailEx.updateString("CREATED_BY","admin");
                                                    rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("MODIFIED_BY","admin");
                                                    rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateInt("CANCELLED",0);
                                                    rsDetailEx.updateInt("CHANGED",1);
                                                    rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                    rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                    rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                    rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                    rsDetailEx.updateString("GRN_NO","");
                                                    rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                    rsDetailEx.updateInt("MODULE_ID",0);
                                                    rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                    
                                                    try {
                                                        rsDetailEx.insertRow();
                                                    }
                                                    catch(Exception s){}
                                                    
                                                    
                                                    //*********** Do Opposite Entry **********//
                                                    SrNo++;
                                                    
                                                    rsDetail.moveToInsertRow();
                                                    rsDetail.updateInt("COMPANY_ID", 2);
                                                    rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetail.updateInt("SR_NO",SrNo);
                                                    
                                                    
                                                    MainCode=rsDoc.getString("TRALLOC_CD"); //Find Allocation code here
                                                    
                                                    SubCode="";
                                                    
                                                    if(Effect.equals("C")) {
                                                        Effect="D";
                                                    }
                                                    else {
                                                        Effect="C";
                                                    }
                                                    
                                                    rsDetail.updateString("EFFECT",Effect);
                                                    rsDetail.updateDouble("AMOUNT",Amount);
                                                    rsDetail.updateInt("ACCOUNT_ID",0);
                                                    rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetail.updateString("CREATED_BY","admin");
                                                    rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("MODIFIED_BY","admin");
                                                    rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateInt("CANCELLED",0);
                                                    rsDetail.updateInt("CHANGED",1);
                                                    rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                    rsDetail.updateString("PO_DATE","0000-00-00");
                                                    rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                    rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                    rsDetail.updateString("GRN_NO","");
                                                    rsDetail.updateString("GRN_DATE","0000-00-00");
                                                    rsDetail.updateInt("MODULE_ID",0);
                                                    
                                                    try {
                                                        rsDetail.insertRow();
                                                    }
                                                    catch(Exception s){}
                                                    
                                                    
                                                    
                                                    rsDetailEx.moveToInsertRow();
                                                    rsDetailEx.updateInt("COMPANY_ID", 2);
                                                    rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                    rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetailEx.updateInt("SR_NO",SrNo);
                                                    rsDetailEx.updateString("EFFECT",Effect);
                                                    rsDetailEx.updateDouble("AMOUNT",Amount);
                                                    rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                    rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetailEx.updateString("CREATED_BY","admin");
                                                    rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("MODIFIED_BY","admin");
                                                    rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateInt("CANCELLED",0);
                                                    rsDetailEx.updateInt("CHANGED",1);
                                                    rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                    rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                    rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                    rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                    rsDetailEx.updateString("GRN_NO","");
                                                    rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                    rsDetailEx.updateInt("MODULE_ID",0);
                                                    
                                                    try {
                                                        rsDetailEx.insertRow();
                                                    }
                                                    catch(Exception s)
                                                    {}
                                                    
                                                    rsDoc.next();
                                                }
                                                //****************************************************************************//
                                            }
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    
                                    
                                    rsDates.next();
                                }
                            }
                            
                            rsBook.next();
                        }
                    }
                    
                    
                    lblStatus.setText("Completed...");
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
        
    }
    
    
    private void ImportSubLedgerBalances() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                long LineNo=0;
                
                try {
                    
                    
                    data.Execute("UPDATE D_FIN_PARTY_MASTER SET CLOSING_BALANCE=0,CLOSING_EFFECT='D'",FinanceGlobal.FinURL);
                    data.Execute("UPDATE D_FIN_GL SET CLOSING_BALANCE=0,CLOSING_EFFECT='D'",FinanceGlobal.FinURL);
                    
                    Counter=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    //aFile.readLine();
                    //aFile.readLine();
                    
                    while(!Done) {
                        
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            String[] ArrRecord=FileRecord.split(",");
                            
                            
                            String MainAccountCode=ArrRecord[3];
                            String SubAccountCode=ArrRecord[4];
                            
                            lblStatus.setText(SubAccountCode);
                            
                            try {
                                //Closing Balance of March
                                double Closing3=UtilFunctions.CDbl(ArrRecord[20])/100;
                                String Effect3=ArrRecord[21];
                                
                                
                                //Update only balance
                                if(data.IsRecordExist("SELECT * FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND PARTY_CODE='"+SubAccountCode+"'",FinanceGlobal.FinURL)) {
                                    data.Execute("UPDATE D_FIN_PARTY_MASTER SET CLOSING_BALANCE="+Closing3+",CLOSING_EFFECT='"+Effect3+"' WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND PARTY_CODE='"+SubAccountCode+"'",FinanceGlobal.FinURL);
                                }
                                else {
                                    data.Execute("UPDATE D_FIN_PARTY_MASTER SET CLOSING_BALANCE="+Closing3+",CLOSING_EFFECT='"+Effect3+"' WHERE PARTY_CODE='"+SubAccountCode+"'",FinanceGlobal.FinURL);
                                }
                            }
                            catch(Exception t){}
                            
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                            //lblStatus.setText("Done");
                        }
                    }
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    private void ImportGLBalances() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                long LineNo=0;
                
                try {
                    
                    
                    Counter=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    //aFile.readLine();
                    //aFile.readLine();
                    data.Execute("UPDATE D_FIN_GL SET CLOSING_BALANCE="+0+",CLOSING_EFFECT='D' ",FinanceGlobal.FinURL);
                    
                    while(!Done) {
                        
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            String[] ArrRecord=FileRecord.split(",");
                            
                            
                            String MainAccountCode=ArrRecord[3];
                            
                            lblStatus.setText(MainAccountCode);
                            
                            
                            //Closing Balance of March
                            double Closing3=UtilFunctions.CDbl(ArrRecord[20])/100;
                            String Effect3=ArrRecord[21];
                            
                            //Update only balance
                            data.Execute("UPDATE D_FIN_GL SET CLOSING_BALANCE="+Closing3+",CLOSING_EFFECT='"+Effect3+"' WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND SUB_ACCOUNT_CODE=''",FinanceGlobal.FinURL);
                            
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                            lblStatus.setText("Done");
                        }
                    }
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    
    private void FindDuplicatateParties() {
        try {
            ResultSet rsTmp=data.getResult("SELECT DISTINCT(PARTY_CODE) FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE=''",FinanceGlobal.FinURL);
            rsTmp.first();
            
            while(!rsTmp.isAfterLast()) {
                String PartyCode=rsTmp.getString("PARTY_CODE");
                
                if(data.getIntValueFromDB("SELECT COUNT(*) FROM D_FIN_PARTY_MASTER WHERE PARTY_CODE='"+PartyCode+"'",FinanceGlobal.FinURL)>1) {
                    System.out.println(PartyCode);
                }
                
                rsTmp.next();
            }
            
            
            System.out.println("Done");
            
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void UpdateHierarchyInfo() {
        
        new Thread() {
            
            public void run() {
                try {
                    String DineshMills="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
                    String DineshMillsA="jdbc:mysql://200.0.0.227:3306/DINESHMILLSA";
                    
                    ResultSet rsTmp=data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_TYPE=2",FinanceGlobal.FinURL);
                    rsTmp.first();
                    
                    while(!rsTmp.isAfterLast()) {
                        String VoucherNo=rsTmp.getString("VOUCHER_NO");
                        lblStatus.setText(VoucherNo);
                        
                        //Baroda Vouchers
                        data.Execute("UPDATE D_COM_DOC_DATA SET MODULE_ID="+clsVoucher.PaymentModuleID+" WHERE MODULE_ID=0 AND DOC_NO='"+VoucherNo+"'",DineshMills);
                        
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=822 WHERE HIERARCHY_ID=777 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=823 WHERE HIERARCHY_ID=778 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=824 WHERE HIERARCHY_ID=790 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=825 WHERE HIERARCHY_ID=791 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=826 WHERE HIERARCHY_ID=802 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=827 WHERE HIERARCHY_ID=804 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        
                        
                        //Ankleshwar Vouchers
                        data.Execute("UPDATE D_COM_DOC_DATA SET MODULE_ID="+clsVoucher.PaymentModuleID+" WHERE MODULE_ID=0 AND DOC_NO='"+VoucherNo+"'",DineshMillsA);
                        
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=674 WHERE HIERARCHY_ID=621 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=675 WHERE HIERARCHY_ID=622 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=676 WHERE HIERARCHY_ID=623 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=678 WHERE HIERARCHY_ID=636 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=679 WHERE HIERARCHY_ID=624 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        
                        rsTmp.next();
                    }
                    
                    
                    
                    
                    rsTmp=data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_TYPE=3",FinanceGlobal.FinURL);
                    rsTmp.first();
                    
                    while(!rsTmp.isAfterLast()) {
                        String VoucherNo=rsTmp.getString("VOUCHER_NO");
                        lblStatus.setText(VoucherNo);
                        
                        //Baroda Vouchers
                        data.Execute("UPDATE D_COM_DOC_DATA SET MODULE_ID="+clsVoucher.DebitNoteModuleID+" WHERE MODULE_ID=59 AND DOC_NO='"+VoucherNo+"'",DineshMills);
                        
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=828 WHERE HIERARCHY_ID=777 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=829 WHERE HIERARCHY_ID=778 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=830 WHERE HIERARCHY_ID=790 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=831 WHERE HIERARCHY_ID=791 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=832 WHERE HIERARCHY_ID=802 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=833 WHERE HIERARCHY_ID=804 AND COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        
                        //Ankleshwar Vouchers
                        data.Execute("UPDATE D_COM_DOC_DATA SET MODULE_ID="+clsVoucher.DebitNoteModuleID+" WHERE MODULE_ID=59 AND DOC_NO='"+VoucherNo+"'",DineshMillsA);
                        
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=668 WHERE HIERARCHY_ID=621 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=669 WHERE HIERARCHY_ID=622 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=670 WHERE HIERARCHY_ID=623 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=672 WHERE HIERARCHY_ID=636 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET HIERARCHY_ID=673 WHERE HIERARCHY_ID=624 AND COMPANY_ID=3 AND VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        
                        rsTmp.next();
                    }
                    
                    
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    private void CompareBalances() {
        new Thread() {
            
            public void run() {
                try {
                    
                    //Compare Party Balances
                    int Counter=0;
                    
                    BufferedWriter aFile=new BufferedWriter(new FileWriter(new File("/root/Desktop/VoucherMismatch.txt")));
                    
                    aFile.write("Main Code,Sub Code,Opening 1 April 2008,1 May 2008 (Calculated),1 May 2008 (Actual)");
                    aFile.newLine();
                    
                    String strSQL="SELECT * FROM D_FIN_PARTY_MASTER ORDER BY PARTY_CODE";
                    String strSQLCount="SELECT COUNT(*) FROM D_FIN_PARTY_MASTER ";
                    
                    BAR.setMaximum(data.getIntValueFromDB(strSQLCount,FinanceGlobal.FinURL));
                    BAR.setMinimum(0);
                    
                    ResultSet rsTmp=data.getResult(strSQL,FinanceGlobal.FinURL);
                    rsTmp.first();
                    
                    while(!rsTmp.isAfterLast()) {
                        Counter++;
                        BAR.setValue(Counter);
                        String MainCode=rsTmp.getString("MAIN_ACCOUNT_CODE");
                        String PartyCode=rsTmp.getString("PARTY_CODE");
                        
                        lblStatus.setText(PartyCode);
                        
                        double MarchBalance=0;
                        String strMarchBalance="";
                        
                        if(MarchBalance<0) {
                            strMarchBalance=Double.toString(Math.abs(MarchBalance))+"Cr";
                        }
                        else {
                            strMarchBalance=Double.toString(MarchBalance)+"Dr";
                        }
                        
                        double AprilBalance=clsAccount.getAvailableClosingBalance(MainCode,PartyCode,"2008-03-31");
                        String strAprilBalance="";
                        
                        if(AprilBalance<0) {
                            strAprilBalance=Double.toString(Math.abs(AprilBalance))+"Cr";
                        }
                        else {
                            strAprilBalance=Double.toString(AprilBalance)+"Dr";
                        }
                        
                        double ActualAprilBalance=data.getDoubleValueFromDB("SELECT AMOUNT FROM D_FIN_OPENING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO=2",FinanceGlobal.FinURL);
                        String ActualAprilBalanceSign=data.getStringValueFromDB("SELECT EFFECT FROM D_FIN_OPENING_DETAIL WHERE MAIN_ACCOUNT_CODE='"+MainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"' AND ENTRY_NO=2",FinanceGlobal.FinURL);
                        
                        if(ActualAprilBalanceSign.equals("C")) {
                            ActualAprilBalance=-1*ActualAprilBalance;
                        }
                        else {
                            ActualAprilBalance=Math.abs(ActualAprilBalance);
                        }
                        
                        if(ActualAprilBalance!=AprilBalance) {
                            
                            aFile.write(MainCode+","+PartyCode+","+strMarchBalance+","+strAprilBalance+","+ActualAprilBalance+ActualAprilBalanceSign);
                            aFile.newLine();
                            
                        }
                        rsTmp.next();
                    }
                    
                    aFile.close();
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
    }
    
    
    
    private void ImportSalesParties() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                long LineNo=0;
                
                try {
                    
                    Connection objConn= data.getConn(CloneURL);
                    Statement stParty=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsParty=stParty.executeQuery("SELECT * FROM D_SAL_PARTY_MASTER");
                    
                    
                    Counter=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    aFile.readLine();
                    aFile.readLine();
                    
                    while(!Done) {
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            String[] ArrRecord=FileRecord.split(",");
                            
                            lblStatus.setText(ArrRecord[0]);
                            
                            rsParty.moveToInsertRow();
                            rsParty.updateInt("COMPANY_ID",2);
                            rsParty.updateString("PARTY_CODE",ArrRecord[0]);
                            rsParty.updateString("PARENT_PARTY_CODE","");
                            
                            if(ArrRecord[1].trim().equals("A")) {
                                rsParty.updateInt("PARTY_TYPE",1);
                            }
                            else {
                                rsParty.updateInt("PARTY_TYPE",2);
                            }
                            
                            rsParty.updateString("PARTY_NAME",ArrRecord[2]);
                            rsParty.updateString("PARTY_SHORT_NAME",ArrRecord[3]);
                            rsParty.updateDouble("CREDIT_DAYS",UtilFunctions.CDbl(ArrRecord[4]));
                            rsParty.updateString("AGENT_PREFIX",ArrRecord[5]);
                            rsParty.updateString("ADDRESS1",ArrRecord[6]);
                            rsParty.updateString("ADDRESS2",ArrRecord[7]);
                            rsParty.updateString("PINCODE",ArrRecord[8]);
                            rsParty.updateString("CITY_ID",ArrRecord[9]);
                            rsParty.updateString("DISTRICT","");
                            rsParty.updateString("STATE","");
                            rsParty.updateString("PHONE_NO","");
                            rsParty.updateString("MOBILE_NO","");
                            rsParty.updateString("EMAIL","");
                            rsParty.updateString("URL","");
                            rsParty.updateString("CONTACT_PERSON","");
                            rsParty.updateInt("BANK1_ID",UtilFunctions.CInt(ArrRecord[23]));
                            rsParty.updateInt("BANK2_ID",UtilFunctions.CInt(ArrRecord[24]));
                            rsParty.updateInt("CHARGE_CODE",UtilFunctions.CInt(ArrRecord[12]));
                            rsParty.updateString("DOCUMENT_THROUGH",ArrRecord[10]);
                            rsParty.updateInt("TRANSPORTER_ID",UtilFunctions.CInt(ArrRecord[13]));
                            rsParty.updateDouble("LC_LIMIT",UtilFunctions.CDbl(ArrRecord[27]));
                            rsParty.updateDouble("AMOUNT_LIMIT",UtilFunctions.CDbl(ArrRecord[25]));
                            rsParty.updateDouble("CRITICAL_AMOUNT_LIMIT",UtilFunctions.CDbl(ArrRecord[28]));
                            
                            if(ArrRecord.length>=33) {
                                rsParty.updateString("ECC_NO",ArrRecord[32]);
                            }
                            rsParty.updateString("ECC_DATE","0000-00-00");
                            rsParty.updateString("CREATED_BY","admin");
                            rsParty.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsParty.updateString("MODIFIED_BY","admin");
                            rsParty.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                            rsParty.updateInt("HIERARCHY_ID",0);
                            rsParty.updateInt("APPROVED",1);
                            rsParty.updateString("APPROVED_DATE","0000-00-00");
                            rsParty.updateInt("REJECTED",0);
                            rsParty.updateString("REJECTED_DATE","0000-00-00");
                            rsParty.updateInt("CHANGED",1);
                            rsParty.updateString("CHANGED_DATE","0000-00-00");
                            rsParty.updateInt("CANCELLED",0);
                            rsParty.insertRow();
                            
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                            lblStatus.setText("Done");
                        }
                    }
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    
    
    private void MigrateVouchersType2Ex() {
        new Thread() {
            
            public void run() {
                try {
                    
                    ResultSet rsVoucher,rsDates;
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stHeader=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsHeader=stHeader.executeQuery("SELECT * FROM L_FIN_VOUCHER_HEADER LIMIT 1");
                    
                    Statement stDetail=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetail=stDetail.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL LIMIT 1");
                    
                    Statement stDetailEx=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetailEx=stDetailEx.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL_EX LIMIT 1");
                    
                    
                    //(2) Creating Entries for Journals Books - Both entries are available
                    ResultSet rsBook=data.getResult("SELECT * FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE=2 AND BOOK_CODE NOT IN ('01','02','04','09','10','11','67','26') ",FinanceGlobal.FinURL);
                    rsBook.first();
                    
                    if(rsBook.getRow()>0) {
                        while(!rsBook.isAfterLast()) {
                            String BookCode=rsBook.getString("BOOK_CODE");
                            String BookMainCode=rsBook.getString("MAIN_ACCOUNT_CODE");
                            String Day="";
                            String Month="";
                            String Year="";
                            
                            //Find Distinct Dates
                            rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000'",FinanceGlobal.FinURL);
                            rsDates.first();
                            
                            if(rsDates.getRow()>0) {
                                while(!rsDates.isAfterLast()) {
                                    Day=rsDates.getString("TR_DT_DD");
                                    Month=rsDates.getString("TR_DT_MM");
                                    Year=rsDates.getString("TR_DT_YY");
                                    
                                    
                                    //Find Vouchers of this book
                                    rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN('210010','210027','210072') " ,FinanceGlobal.FinURL);
                                    rsVoucher.first();
                                    
                                    if(rsVoucher.getRow()>0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            
                                            String RefNo=rsVoucher.getString("TR_REF_NO");
                                            
                                            ResultSet rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            rsDoc.first();
                                            
                                            //More Processing...
                                            int DrCount=0;
                                            int CrCount=0;
                                            double DrTotal=0;
                                            double CrTotal=0;
                                            boolean InvalidEntry=false;
                                            
                                            
                                            
                                            //There would be only single Entry for this
                                            String NewVoucherNo="M"+Month+Day+BookCode+RefNo;
                                            
                                            lblStatus.setText("Inserting "+NewVoucherNo);
                                            
                                            
                                            //*************************   Create Voucher Header   *******************************//
                                            rsHeader.moveToInsertRow();
                                            rsHeader.updateInt("COMPANY_ID",2);
                                            rsHeader.updateString("VOUCHER_NO",NewVoucherNo);
                                            rsHeader.updateString("BOOK_CODE",BookCode);
                                            rsHeader.updateString("CHEQUE_NO",rsDoc.getString("TR_CHEQ_NO"));
                                            
                                            String ChequeDate=rsDoc.getString("TRCHQBILDT");
                                            
                                            if((!ChequeDate.trim().equals(""))&&(!ChequeDate.trim().equals("000000"))) {
                                                ChequeDate="20"+ChequeDate.substring(4)+"-"+ChequeDate.substring(2,4)+"-"+ChequeDate.substring(0,2);
                                                
                                                rsHeader.updateString("CHEQUE_DATE",ChequeDate);
                                            }
                                            else {
                                                rsHeader.updateString("CHEQUE_DATE","0000-00-00");
                                            }
                                            
                                            String VoucherDate="20"+rsDoc.getString("TR_DT_YY")+"-"+rsDoc.getString("TR_DT_MM")+"-"+rsDoc.getString("TR_DT_DD");
                                            
                                            rsHeader.updateString("VOUCHER_DATE",VoucherDate);
                                            rsHeader.updateString("BANK_NAME", "");
                                            rsHeader.updateString("ST_CATEGORY",rsDoc.getString("TR_SALESTAX"));
                                            rsHeader.updateInt("APPROVED",1);
                                            rsHeader.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsHeader.updateInt("REJECTED",0);
                                            rsHeader.updateString("REJECTED_DATE","0000-00-00");
                                            rsHeader.updateString("REJECTED_REMARKS","");
                                            rsHeader.updateString("CREATED_BY","admin");
                                            rsHeader.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsHeader.updateString("MODIFIED_BY","admin");
                                            rsHeader.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsHeader.updateInt("HIERARCHY_ID",0);
                                            rsHeader.updateInt("CHANGED",1);
                                            rsHeader.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            rsHeader.updateInt("CANCELLED",0);
                                            rsHeader.updateInt("VOUCHER_TYPE",FinanceGlobal.TYPE_JOURNAL);
                                            rsHeader.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                            
                                            try {
                                                rsHeader.insertRow();
                                            }
                                            catch(Exception s)
                                            {}
                                            // ************************* End of Header ********************************//
                                            
                                            
                                            
                                            
                                            //############################# JOURNAL ENTRY #########################################
                                            rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"'",FinanceGlobal.FinURL);
                                            rsDoc.first();
                                            
                                            int ExSrNo=0;
                                            int SrNo=0;
                                            int BlockNo=0;
                                            rsDoc.first();
                                            
                                            while(!rsDoc.isAfterLast()) {
                                                
                                                SrNo++;
                                                ExSrNo++;
                                                BlockNo++;
                                                
                                                rsDetail.moveToInsertRow();
                                                rsDetail.updateInt("COMPANY_ID", 2);
                                                rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                rsDetail.updateInt("SR_NO",SrNo);
                                                rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                
                                                String MainCode=rsDoc.getString("TRMAINCODE");
                                                String SubCode=rsDoc.getString("TRSUBCODE");
                                                double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                String Effect=rsDoc.getString("TR_AMT_SIG");
                                                
                                                
                                                if(SubCode.equals("000000")) {
                                                    SubCode="";
                                                }
                                                
                                                rsDetail.updateDouble("AMOUNT",Amount);
                                                rsDetail.updateInt("ACCOUNT_ID",0);
                                                rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                rsDetail.updateString("CREATED_BY","admin");
                                                rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateString("MODIFIED_BY","admin");
                                                rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateInt("CANCELLED",0);
                                                rsDetail.updateInt("CHANGED",1);
                                                rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetail.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                rsDetail.updateString("PO_DATE","0000-00-00");
                                                rsDetail.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                rsDetail.updateString("GRN_NO","");
                                                rsDetail.updateString("GRN_DATE","0000-00-00");
                                                rsDetail.updateInt("MODULE_ID",0);
                                                
                                                try {
                                                    rsDetail.insertRow();
                                                }
                                                catch(Exception s)
                                                {}
                                                
                                                
                                                
                                                //**======>
                                                
                                                rsDetailEx.moveToInsertRow();
                                                rsDetailEx.updateInt("COMPANY_ID", 2);
                                                rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                rsDetailEx.updateInt("SR_NO",SrNo);
                                                rsDetailEx.updateInt("BLOCK_NO",1);
                                                rsDetailEx.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                if(SubCode.equals("000000")) {
                                                    SubCode="";
                                                }
                                                rsDetailEx.updateDouble("AMOUNT",Amount);
                                                rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                rsDetailEx.updateString("CREATED_BY","admin");
                                                rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateString("MODIFIED_BY","admin");
                                                rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateInt("CANCELLED",0);
                                                rsDetailEx.updateInt("CHANGED",1);
                                                rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                rsDetailEx.updateString("PO_NO",rsDoc.getString("TR_PO_NO"));
                                                rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                rsDetailEx.updateString("INVOICE_NO",rsDoc.getString("TR_BILL_NO"));
                                                rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                rsDetailEx.updateString("GRN_NO","");
                                                rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                rsDetailEx.updateInt("MODULE_ID",0);
                                                
                                                try {
                                                    rsDetailEx.insertRow();
                                                }
                                                catch(Exception s)
                                                {}
                                                
                                                //**======>
                                                
                                                
                                                
                                                
                                                
                                                rsDoc.next();
                                            }
                                            
                                            
                                            
                                            
                                            //############################### CASE (1) COMPLETED ###########################################//
                                            
                                            
                                            
                                            rsVoucher.next();
                                        }
                                    }
                                    
                                    
                                    rsDates.next();
                                }
                            }
                            
                            rsBook.next();
                        }
                    }
                    
                    
                    lblStatus.setText("Completed...");
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
        
    }
    
    
    
    private void CompareLedgers(final String mainCode,final String PartyCode) {
        try {
            
            boolean HeaderPrinted=false;
            
            
            //Compare Party Balances
            ResultSet rsVoucher;
            int Counter=0;
            
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File("/root/Desktop/LedgerMismatch.txt")));
            
            
            ResultSet rsTmp=data.getResult("SELECT * FROM L_FIN_VOUCHER_DETAIL WHERE MAIN_ACCOUNT_CODE='"+mainCode+"' AND SUB_ACCOUNT_CODE='"+PartyCode+"'",FinanceGlobal.FinURL);
            rsTmp.first();
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    
                    
                    String MainCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                    String SubCode=UtilFunctions.getString(rsTmp,"SUB_ACCOUNT_CODE","");
                    double Amount=UtilFunctions.getDouble(rsTmp,"AMOUNT",0);
                    String Effect=UtilFunctions.getString(rsTmp,"EFFECT","");
                    String VoucherNo=UtilFunctions.getString(rsTmp,"VOUCHER_NO","");
                    
                    lblStatus.setText(MainCode+" -> "+SubCode);
                    
                    if(!data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_NO=B.VOUCHER_NO AND A.VOUCHER_DATE>='2008-04-01' AND A.VOUCHER_DATE<='2008-06-30' AND A.CANCELLED=0 AND B.MAIN_ACCOUNT_CODE='"+MainCode+"' AND B.SUB_ACCOUNT_CODE='"+SubCode+"' AND B.AMOUNT="+Amount+" AND B.EFFECT='"+Effect+"'",FinanceGlobal.FinURL)) {
                        if(!HeaderPrinted) {
                            HeaderPrinted=true;
                            
                            System.out.println(" *******************************************************************  ");
                            System.out.println(" MAIN CODE : "+mainCode+" PARTY CODE : "+PartyCode);
                            String name=clsAccount.getAccountName(mainCode,PartyCode);
                            System.out.println(name);
                            System.out.println(" *******************************************************************  ");
                            
                        }
                        
                        //Print the Voucher
                        rsVoucher=data.getResult("SELECT * FROM L_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        rsVoucher.first();
                        
                        String Remarks=UtilFunctions.getString(rsTmp,"REMARKS","");
                        System.out.println("--------------------------------------------------------------------------------------");
                        System.out.println("Voucher No. : "+VoucherNo+" Date :"+EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsVoucher,"VOUCHER_DATE","0000-00-00")));
                        
                        rsVoucher=data.getResult("SELECT * FROM L_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"'",FinanceGlobal.FinURL);
                        rsVoucher.first();
                        
                        if(rsVoucher.getRow()>0) {
                            while(!rsVoucher.isAfterLast()) {
                                String vEffect=UtilFunctions.getString(rsVoucher,"EFFECT","");
                                String vMainCode=UtilFunctions.getString(rsVoucher,"MAIN_ACCOUNT_CODE","");
                                String vSubCode=UtilFunctions.getString(rsVoucher,"SUB_ACCOUNT_CODE","");
                                double vAmount=UtilFunctions.getDouble(rsVoucher,"AMOUNT",0);
                                String vAccountName=clsAccount.getAccountName(vMainCode,vSubCode);
                                vAccountName=EITLERPGLOBAL.padRightEx(vAccountName, " ", 50);
                                
                                if(vEffect.equals("C")) {
                                    vEffect="Cr";
                                }
                                else {
                                    vEffect="Dr";
                                }
                                
                                
                                System.out.println(vEffect+"  "+vMainCode+"  "+vSubCode+" "+vAccountName+"   "+vAmount);
                                
                                
                                rsVoucher.next();
                            }
                        }
                        
                        System.out.println(Remarks);
                        
                        System.out.println("--------------------------------------------------------------------------------------");
                        
                        
                    }
                    
                    
                    
                    
                    
                    
                    
                    
                    rsTmp.next();
                }
            }
            
            
            
            aFile.close();
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    public void compareMismatchedParties() {
        try {
            ResultSet rsTmp=data.getResult("SELECT * FROM D_FIN_PARTY_MASTER WHERE CHANGED=1",FinanceGlobal.FinURL);
            rsTmp.first();
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    
                    CompareLedgers(rsTmp.getString("MAIN_ACCOUNT_CODE"),rsTmp.getString("PARTY_CODE"));
                    rsTmp.next();
                }
            }
            
            System.out.println("Procedure Finished ... ");
        }
        catch(Exception e) {
            
        }
    }
    
    
    private void ImportGLBalancesEx() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                long LineNo=0;
                
                try {
                    
                    
                    Counter=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    //aFile.readLine();
                    //aFile.readLine();
                    data.Execute("UPDATE D_FIN_GL SET CLOSING_BALANCE="+0+",CLOSING_EFFECT='D'",FinanceGlobal.FinURL);
                    
                    while(!Done) {
                        
                        lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            
                            String FileRecord=aFile.readLine();
                            
                            if(FileRecord==null) {
                                Done=true;
                            }
                            
                            try {
                                //Read Last 12 * 14 Bytes for balances
                                String Balances=FileRecord.substring(FileRecord.length()-(12*14));
                                String AccountCodes=FileRecord.substring(8,20);
                                
                                String[] ArrRecord=FileRecord.split(",");
                                
                                String MainAccountCode=FileRecord.substring(8,14);
                                
                                if(MainAccountCode.equals("131998")) {
                                    boolean halt=true;
                                }
                                
                                String SubAccountCode=FileRecord.substring(14,20);
                                
                                lblStatus.setText(MainAccountCode);
                                
                                //Closing Balance of March
                                //14*(Month-1) , to +13 , to +13 to +1
                                
                                int Month=3;
                                int StartIndex=((Month-1)*14);
                                
                                //int StartIndex=145;
                                
                                double Closing3=UtilFunctions.CDbl(Balances.substring(StartIndex, StartIndex+13))/100;
                                String Effect3=Balances.substring(StartIndex+13,StartIndex+13+1);
                                
                                
                                //Closing Balance of March
                                //double Closing3=UtilFunctions.CDbl(Balances.substring(28,41))/100;
                                //String Effect3=Balances.substring(41,42);
                                
                                if(Closing3>0) {
                                    boolean halt=true;
                                }
                                
                                //Update only balance
                                data.Execute("UPDATE D_FIN_GL SET CLOSING_BALANCE="+Closing3+",CLOSING_EFFECT='"+Effect3+"' WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND (SUB_ACCOUNT_CODE='' OR SUB_ACCOUNT_CODE='000000') ",FinanceGlobal.FinURL);
                            }
                            catch(Exception t) {
                                
                            }
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                            lblStatus.setText("Done");
                        }
                    }
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    private void ImportSubLedgerBalancesEx() {
        
        new Thread() {
            
            public void run(){
                boolean Done=false;
                long Counter=0;
                long LineNo=0;
                
                try {
                    data.Execute("UPDATE D_FIN_PARTY_MASTER SET CLOSING_BALANCE=0,CLOSING_EFFECT='D'",FinanceGlobal.FinURL);
                    data.Execute("UPDATE D_FIN_GL SET CLOSING_BALANCE=0,CLOSING_EFFECT='D'",FinanceGlobal.FinURL);
                    
                    Counter=0;
                    
                    BufferedReader aFile=new BufferedReader(new FileReader(new File(txtFile.getText())));
                    
                    //aFile.readLine();
                    //aFile.readLine();
                    
                    while(!Done) {
                        
                        //lblStatus.setText(Long.toString(Counter));
                        
                        try {
                            String FileRecord=aFile.readLine();
                            if(FileRecord==null) {
                                Done=true;
                            }
                            Counter++;
                            try {
                                
                                //Read Last 12 * 14 Bytes for balances
                                String Balances=FileRecord.substring(FileRecord.length()-(12*14));
                                String AccountCodes=FileRecord.substring(8,20);
                                
                                String MainAccountCode=FileRecord.substring(8,14);
                                String SubAccountCode=FileRecord.substring(14,20);
                                
                                //lblStatus.setText(SubAccountCode);
                                lblStatus.setText(Long.toString(Counter));
                                //Closing Balance of March
                                //14*(Month-1) , to +13 , to +13 to +1
                                
                                int Month=3;
                                int StartIndex=((Month-1)*14);
                                
                                double Closing3=UtilFunctions.CDbl(Balances.substring(StartIndex, StartIndex+13))/100;
                                String Effect3=Balances.substring(StartIndex+13,StartIndex+13+1);
                                
                                //double Closing3=UtilFunctions.CDbl(Balances.substring(28,41))/100;
                                //String Effect3=Balances.substring(41,42);
                                
                                //Update only balance
                                if(data.IsRecordExist("SELECT * FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND PARTY_CODE='"+SubAccountCode+"'",FinanceGlobal.FinURL)) {
                                    data.Execute("UPDATE D_FIN_PARTY_MASTER SET CLOSING_BALANCE="+Closing3+",CLOSING_EFFECT='"+Effect3+"' WHERE MAIN_ACCOUNT_CODE='"+MainAccountCode+"' AND PARTY_CODE='"+SubAccountCode+"'",FinanceGlobal.FinURL);
                                }
                                else {
                                    data.Execute("UPDATE D_FIN_PARTY_MASTER SET CLOSING_BALANCE="+Closing3+",CLOSING_EFFECT='"+Effect3+"' WHERE PARTY_CODE='"+SubAccountCode+"'",FinanceGlobal.FinURL);
                                }
                            }
                            catch(Exception t){
                                
                                t.printStackTrace();
                            }
                            
                        }
                        catch(Exception c){
                            c.printStackTrace();
                            Done=true;
                            lblStatus.setText("Records Updated "+Counter);
                            //lblStatus.setText("Done");
                        }
                    }
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
        lblStatus.setText("Completed...");
    }
    
    private void finalApproveSJ(final int UserID) {
        new Thread(){
            public void run() {
                
                try {
                    lblStatus.setText("Getting voucher list from thanda");
                    
                    String VoucherNo="";
                    int voucherModuleID=(new clsVoucher()).getVoucherModuleID(FinanceGlobal.TYPE_SALES_JOURNAL);
                    HashMap list=clsVoucher.getPendingApprovals(2, UserID, EITLERPGLOBAL.OnDocNo, voucherModuleID,2008);
                    
                    String dbURL="jdbc:mysql://200.0.0.227:3306/DINESHMILLS";
                    String finURL="jdbc:mysql://200.0.0.227:3306/FINANCE";
                    
                    for(int i=1;i<=list.size();i++) {
                        clsVoucher objItem=(clsVoucher)list.get(Integer.toString(i));
                        VoucherNo=objItem.getAttribute("VOUCHER_NO").getString();
                        
                        lblStatus.setText("Approving voucher "+VoucherNo);
                        System.out.println(VoucherNo);
                        //Update D_COM_DOC_DATA
                        data.Execute("UPDATE D_COM_DOC_DATA SET STATUS='F' WHERE MODULE_ID="+voucherModuleID+" AND DOC_NO='"+VoucherNo+"'",dbURL);
                        
                        //Update Finance Table
                        data.Execute("UPDATE D_FIN_VOUCHER_HEADER SET APPROVED=1,APPROVED_DATE=CURDATE(),CHANGED=1,CHANGED_DATE=CURDATE() WHERE COMPANY_ID=2 AND VOUCHER_NO='"+VoucherNo+"'",finURL);
                        
                        lblStatus.setText("voucher "+VoucherNo+" approved ");
                    }
                }
                catch(Exception thandoooooooo) {
                    
                }
                
                lblStatus.setText("Done ..................");
                
            };
        }.start();
        
    }
    
    
    public void finUnpostedInvoices() {
        
        new Thread() {
            
            public void run() {
                try {
                    ResultSet rsTmp=data.getResult("SELECT INVOICE_NO FROM D_SAL_INVOICE_HEADER WHERE INVOICE_NO LIKE 'F%'");
                    rsTmp.first();
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {
                            
                            String InvoiceNo=rsTmp.getString("INVOICE_NO");
                            lblStatus.setText(InvoiceNo);
                            
                            //Fin this in finance
                            if(!data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_DETAIL WHERE INVOICE_NO='"+InvoiceNo+"'",FinanceGlobal.FinURL)) {
                                System.out.println("Invoice No. "+InvoiceNo);
                            }
                            
                            
                            rsTmp.next();
                        }
                    }
                    
                }
                catch(Exception e) {
                    
                }
            };
        }.start();
    }
    
    public void migrateSJTR1() {
        new Thread() {
            
            public void run() {
                try {
                    
                    ResultSet rsVoucher,rsDates;
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stHeader=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsHeader=stHeader.executeQuery("SELECT * FROM L_FIN_VOUCHER_HEADER LIMIT 1");
                    
                    Statement stDetail=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetail=stDetail.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL LIMIT 1");
                    
                    Statement stDetailEx=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetailEx=stDetailEx.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL_EX LIMIT 1");
                    
                    
                    //(3) Creating Entries for Bank/Cash Books - Allocation code is to be search from Book Master
                    String strQry = "";
                    //                    strQry = "SELECT * FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE=3 AND BOOK_CODE NOT IN ('01','02','04','09','10','11','67','26') ";
                    //book code for fixed deposit system
                    //strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD IN ('22','39') ";
                    
                    //BOOK CODE FOR RECEIPT VOUCHER & SALES VOUCHER
                    //strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD IN ('02','14','21','25','45') ";
                    
                    //BOOK CODE FOR DEALER DEPOSIT
                    strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD IN ('21') ";
                    
                    ResultSet rsBook=data.getResult(strQry,FinanceGlobal.FinURL);
                    rsBook.first();
                    
                    if(rsBook.getRow()>0) {
                        while(!rsBook.isAfterLast()) {
                            String BookCode=rsBook.getString("BOOK_CODE").trim();
                            //String BookMainCode=rsBook.getString("MAIN_ACCOUNT_CODE");
                            String Day="";
                            String Month="";
                            String Year="";
                            int VoucherType = 0;
                            int ModuleId = 0;
                            String GRNNo = "";
                            
                            if ((BookCode.trim().equals("21")) || (BookCode.trim().equals("25")) || (BookCode.trim().equals("45")) || (BookCode.trim().equals("18"))) {
                                VoucherType = 9;
                                ModuleId = 89;
                            }
                            else if ((BookCode.trim().equals("22")) || (BookCode.trim().equals("24")) || (BookCode.trim().equals("39"))) {
                                VoucherType=9;
                                ModuleId=89;
                            }
                            
                            
                            //Find Distinct Dates
                            rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000'",FinanceGlobal.FinURL);
                            //rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD=31 AND TR_REF_NO='000055' AND TR_DT_YY='08' AND TR_DT_MM='05' AND TR_DT_DD='07'",FinanceGlobal.FinURL);
                            
                            rsDates.first();
                            
                            if(rsDates.getRow()>0) {
                                while(!rsDates.isAfterLast()) {
                                    Day=rsDates.getString("TR_DT_DD");
                                    Month=rsDates.getString("TR_DT_MM");
                                    Year=rsDates.getString("TR_DT_YY");
                                    
                                    //                                    String SerialNo = "1";
                                    //                                    String OldRefNo = "";
                                    //                                    String OldStatus = "";
                                    String Status = "";
                                    String MainCode="";
                                    String SubCode="";
                                    double Total_Amount=0;
                                    String Effect="";
                                    String NewVoucherNo="";
                                    
                                    //Find Vouchers of this book
                                    //rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN('210010','210027','210072','210034') " ,FinanceGlobal.FinURL);
                                    
                                    //Find Vouchers of this book -- DEALER DEPOSIT
                                    rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' " ,FinanceGlobal.FinURL);
                                    
                                    //VOUCHER FOR FD
                                    //rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN('115012','115029','115036','115218','115225','115160','115201','115153','115177','115232','115249','127176') " ,FinanceGlobal.FinURL);
                                    
                                    rsVoucher.first();
                                    //                                    OldRefNo=rsVoucher.getString("TR_REF_NO");
                                    
                                    if(rsVoucher.getRow()>0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            String RefNo=rsVoucher.getString("TR_REF_NO");
                                            //                                            OldRefNo = RefNo;
                                            
                                            ResultSet rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE<>TRALLOC_CD ORDER BY TR_AMT_SIG ",FinanceGlobal.FinURL);
                                            rsDoc.first();
                                            Status = rsDoc.getString("TR_AMT_SIG");
                                            //OldStatus = Status;
                                            
                                            int SrNo=0;
                                            int BlockNo=0;
                                            Total_Amount = 0;
                                            
                                            while(!rsDoc.isAfterLast()) {
                                                
                                                boolean InvalidEntry=false;
                                                String RefAlpha;
                                                if (! rsDoc.getString("TR_REF_AL").trim().equals("")) {
                                                    RefAlpha = rsDoc.getString("TR_REF_AL").trim().substring(0,1);
                                                }
                                                else {
                                                    RefAlpha="";
                                                }
                                                
                                                NewVoucherNo="M"+Month+Day+BookCode+"1"+RefAlpha+RefNo;
                                                
                                                lblStatus.setText("Inserting "+NewVoucherNo);
                                                
                                                if(rsDoc.getString("TRALLOC_CD").trim().equals("000000")) {
                                                    System.out.println("No Allocation Code defined. Voucher No. "+RefNo+" Book Code"+BookCode+" Date: "+Day+"/"+Month+"/"+Year);
                                                }
                                                
                                                if(!InvalidEntry) {
                                                    
                                                    //*************************   Create Voucher Header   *******************************//
                                                    rsHeader.moveToInsertRow();
                                                    rsHeader.updateInt("COMPANY_ID",2);
                                                    rsHeader.updateString("VOUCHER_NO",NewVoucherNo);
                                                    rsHeader.updateString("BOOK_CODE",BookCode);
                                                    rsHeader.updateString("CHEQUE_NO",rsDoc.getString("TR_CHEQ_NO"));
                                                    
                                                    String ChequeDate=rsDoc.getString("TRCHQBILDT");
                                                    
                                                    if((!ChequeDate.trim().equals(""))&&(!ChequeDate.trim().equals("000000"))) {
                                                        ChequeDate="20"+ChequeDate.substring(4)+"-"+ChequeDate.substring(2,4)+"-"+ChequeDate.substring(0,2);
                                                        
                                                        rsHeader.updateString("CHEQUE_DATE",ChequeDate);
                                                    }
                                                    else {
                                                        rsHeader.updateString("CHEQUE_DATE","0000-00-00");
                                                    }
                                                    
                                                    String VoucherDate="20"+rsDoc.getString("TR_DT_YY")+"-"+rsDoc.getString("TR_DT_MM")+"-"+rsDoc.getString("TR_DT_DD");
                                                    
                                                    rsHeader.updateString("VOUCHER_DATE",VoucherDate);
                                                    rsHeader.updateString("BANK_NAME", "");
                                                    rsHeader.updateString("ST_CATEGORY",rsDoc.getString("TR_SALESTAX"));
                                                    rsHeader.updateInt("APPROVED",1);
                                                    rsHeader.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("REJECTED",0);
                                                    rsHeader.updateString("REJECTED_DATE","0000-00-00");
                                                    rsHeader.updateString("REJECTED_REMARKS","");
                                                    rsHeader.updateString("CREATED_BY","admin");
                                                    rsHeader.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateString("MODIFIED_BY","admin");
                                                    rsHeader.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("HIERARCHY_ID",0);
                                                    rsHeader.updateInt("CHANGED",1);
                                                    rsHeader.updateInt("VOUCHER_TYPE",VoucherType);
                                                    rsHeader.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("CANCELLED",0);
                                                    rsHeader.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    
                                                    
                                                    try {
                                                        rsHeader.insertRow();
                                                    }
                                                    catch(Exception s)
                                                    {}
                                                    // ************************* End of Header ********************************//
                                                    
                                                    
                                                    //******************* Creating Voucher Detail Records ************************//
                                                    //                                                rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE<>TRALLOC_CD",FinanceGlobal.FinURL);
                                                    //                                                rsDoc.first();
                                                    
                                                    SrNo++;
                                                    BlockNo++;
                                                    
                                                    rsDetail.moveToInsertRow();
                                                    rsDetail.updateInt("COMPANY_ID", 2);
                                                    rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetail.updateInt("SR_NO",SrNo);
                                                    rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    
                                                    MainCode=rsDoc.getString("TRMAINCODE");
                                                    SubCode=rsDoc.getString("TRSUBCODE");
                                                    double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                    Effect=rsDoc.getString("TR_AMT_SIG");
                                                    Total_Amount = Total_Amount + Amount;
                                                    
                                                    if(SubCode.equals("000000")) {
                                                        SubCode="";
                                                    }
                                                    
                                                    rsDetail.updateDouble("AMOUNT",Amount);
                                                    rsDetail.updateInt("ACCOUNT_ID",0);
                                                    rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    
                                                    String Remarks = "";
                                                    String chk = "false";
                                                    Remarks = rsDoc.getString("TR_DESC");
                                                    for (int i = 0; i < Remarks.length(); i++) {
                                                        char c = Remarks.charAt(i);
                                                        if (c=='0' || c=='1' || c=='2' || c=='3' || c=='4' || c=='5' || c=='6' || c=='7' || c=='8' || c=='9') {
                                                            chk = "true";
                                                        }
                                                    }
                                                    if (chk.equals("false")) {
                                                        if (! rsDoc.getString("TR_INVAGSR").trim().equals("000000")) {
                                                            Remarks = rsDoc.getString("TR_INVAGSR").trim() + "/" + rsDoc.getString("TR_YY1YY2").trim();
                                                        }
                                                    }
                                                    rsDetail.updateString("REMARKS",Remarks);
                                                    
                                                    rsDetail.updateString("CREATED_BY","admin");
                                                    rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("MODIFIED_BY","admin");
                                                    rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateInt("CANCELLED",0);
                                                    rsDetail.updateInt("CHANGED",1);
                                                    rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    String sPONO= rsDoc.getString("TR_PO_NO");
                                                    String sInvoiceNo = rsDoc.getString("TR_BILL_NO");
                                                    if(sPONO.trim().equals("000000")) {
                                                        rsDetail.updateString("PO_NO","");
                                                    } else {
                                                        rsDetail.updateString("PO_NO",sPONO);
                                                    }
                                                    
                                                    rsDetail.updateString("PO_DATE","0000-00-00");
                                                    
                                                    String Agent_srno = rsDoc.getString("TR_INVAGSR");
                                                    String InvoiceNo="";
                                                    String InvoiceDate="";
                                                    
                                                    if (MainCode.trim().equals("210010")) {
                                                        InvoiceNo = "F"+Agent_srno;
                                                        if (! data.IsRecordExist("SELECT * FROM D_SAL_INVOICE_HEADER WHERE INVOICE_NO='" + InvoiceNo.trim() + "'")) {
                                                            InvoiceNo="";
                                                            InvoiceDate = "";
                                                        }
                                                        else {
                                                            InvoiceNo = "F"+Agent_srno;
                                                            InvoiceDate = clsSalesInvoice.getInvoiceDate(2,InvoiceNo);
                                                        }
                                                        
                                                    }
                                                    else {
                                                        int agsr_no = Integer.parseInt(Agent_srno);
                                                        //String Agent_alpha = data.getStringValueFromDB("SELECT AREA_ID FROM D_SAL_PARTY_MASTER WHERE PARTY_CODE='"+SubCode+"' ");
                                                        //Agent_alpha = Agent_alpha + "/" + agsr_no;
                                                        InvoiceNo = data.getStringValueFromDB("SELECT INVOICE_NO FROM D_SAL_INVOICE_HEADER WHERE PARTY_CODE='"+SubCode+"' AND AGENT_SR_NO=" + agsr_no);
                                                        //clsSalesInvoice.getInvoiceNo(Agent_alpha);
                                                        InvoiceDate = clsSalesInvoice.getInvoiceDate(2,InvoiceNo);
                                                    }
                                                    
                                                    if(InvoiceDate.trim().equals("")) {
                                                        InvoiceDate="0000-00-00";
                                                    }
                                                    
                                                    if(sInvoiceNo.trim().equals("000000")) {
                                                        rsDetail.updateString("INVOICE_NO",InvoiceNo);
                                                        rsDetail.updateString("INVOICE_DATE",InvoiceDate);
                                                    } else {
                                                        if (sInvoiceNo.trim().equals("")) {
                                                            rsDetail.updateString("INVOICE_NO",InvoiceNo);
                                                            rsDetail.updateString("INVOICE_DATE",InvoiceDate);
                                                        }
                                                        else {
                                                            rsDetail.updateString("INVOICE_NO",sInvoiceNo);
                                                            rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                        }
                                                    }
                                                    
                                                    GRNNo = rsDoc.getString("TR_REF_AL").trim() + rsDoc.getString("TR_REF_NO").trim();
                                                    rsDetail.updateString("GRN_NO",GRNNo);
                                                    rsDetail.updateString("GRN_DATE","0000-00-00");
                                                    rsDetail.updateInt("MODULE_ID",ModuleId);
                                                    rsDetail.updateInt("REF_COMPANY_ID",2);
                                                    
                                                    try {
                                                        rsDetail.insertRow();
                                                    }
                                                    catch(Exception s)
                                                    {}
                                                    
                                                    
                                                    rsDetailEx.moveToInsertRow();
                                                    rsDetailEx.updateInt("COMPANY_ID", 2);
                                                    rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetailEx.updateInt("SR_NO",SrNo);
                                                    rsDetailEx.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    rsDetailEx.updateDouble("AMOUNT",Amount);
                                                    rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                    rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    Remarks = "";
                                                    chk = "false";
                                                    Remarks = rsDoc.getString("TR_DESC");
                                                    for (int i = 0; i < Remarks.length(); i++) {
                                                        char c = Remarks.charAt(i);
                                                        if (c=='0' || c=='1' || c=='2' || c=='3' || c=='4' || c=='5' || c=='6' || c=='7' || c=='8' || c=='9') {
                                                            chk = "true";
                                                        }
                                                    }
                                                    if (chk.equals("false")) {
                                                        if (! rsDoc.getString("TR_INVAGSR").trim().equals("000000")) {
                                                            Remarks = rsDoc.getString("TR_INVAGSR").trim() + "/" + rsDoc.getString("TR_YY1YY2").trim();
                                                        }
                                                    }
                                                    rsDetailEx.updateString("REMARKS",Remarks);
                                                    
                                                    rsDetailEx.updateString("CREATED_BY","admin");
                                                    rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("MODIFIED_BY","admin");
                                                    rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateInt("CANCELLED",0);
                                                    rsDetailEx.updateInt("CHANGED",1);
                                                    rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    sPONO= rsDoc.getString("TR_PO_NO");
                                                    sInvoiceNo = rsDoc.getString("TR_BILL_NO");
                                                    if(sPONO.trim().equals("000000")) {
                                                        rsDetailEx.updateString("PO_NO","");
                                                    } else {
                                                        rsDetailEx.updateString("PO_NO",sPONO);
                                                    }
                                                    
                                                    rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                    
                                                    Agent_srno = rsDoc.getString("TR_INVAGSR");
                                                    InvoiceNo="";
                                                    InvoiceDate="";
                                                    
                                                    if (MainCode.trim().equals("210010")) {
                                                        InvoiceNo = "F"+Agent_srno;
                                                        if (! data.IsRecordExist("SELECT * FROM D_SAL_INVOICE_HEADER WHERE INVOICE_NO='" + InvoiceNo.trim() + "'")) {
                                                            InvoiceNo="";
                                                            InvoiceDate = "";
                                                        }
                                                        else {
                                                            InvoiceNo = "F"+Agent_srno;
                                                            InvoiceDate = clsSalesInvoice.getInvoiceDate(2,InvoiceNo);
                                                        }
                                                        
                                                    }
                                                    else {
                                                        int agsr_no = Integer.parseInt(Agent_srno);
                                                        //String Agent_alpha = data.getStringValueFromDB("SELECT AREA_ID FROM D_SAL_PARTY_MASTER WHERE PARTY_CODE='"+SubCode+"' ");
                                                        //Agent_alpha = Agent_alpha + "/" + agsr_no;
                                                        InvoiceNo = data.getStringValueFromDB("SELECT INVOICE_NO FROM D_SAL_INVOICE_HEADER WHERE PARTY_CODE='"+SubCode+"' AND AGENT_SR_NO=" + agsr_no);
                                                        //clsSalesInvoice.getInvoiceNo(Agent_alpha);
                                                        InvoiceDate = clsSalesInvoice.getInvoiceDate(2,InvoiceNo);
                                                    }
                                                    if(InvoiceDate.trim().equals("")) {
                                                        InvoiceDate="0000-00-00";
                                                    }
                                                    if(sInvoiceNo.trim().equals("000000")) {
                                                        rsDetailEx.updateString("INVOICE_NO",InvoiceNo);
                                                        rsDetailEx.updateString("INVOICE_DATE",InvoiceDate);
                                                    } else {
                                                        if (sInvoiceNo.trim().equals("")) {
                                                            rsDetailEx.updateString("INVOICE_NO",InvoiceNo);
                                                            rsDetailEx.updateString("INVOICE_DATE",InvoiceDate);
                                                        }
                                                        else {
                                                            rsDetailEx.updateString("INVOICE_NO",sInvoiceNo);
                                                            rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                        }
                                                    }
                                                    
                                                    GRNNo = rsDoc.getString("TR_REF_AL").trim() + rsDoc.getString("TR_REF_NO").trim();
                                                    rsDetailEx.updateString("GRN_NO",GRNNo);
                                                    rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                    rsDetailEx.updateInt("MODULE_ID",ModuleId);
                                                    rsDetailEx.updateInt("REF_COMPANY_ID",2);
                                                    rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                    
                                                    try {
                                                        rsDetailEx.insertRow();
                                                    }
                                                    catch(Exception s){}
                                                    
                                                    //                                                    MainCode=rsDoc.getString("TRALLOC_CD");
                                                    
                                                    rsDoc.next();
                                                }
                                                
                                                
                                                //****************************************************************************//
                                            }
                                            
                                            rsVoucher.next();
                                            
                                            
                                        }
                                        
                                    }
                                    
                                    
                                    rsDates.next();
                                }
                            }
                            
                            rsBook.next();
                        }
                    }
                    
                    lblStatus.setText("Completed...");
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
        
    }
    
    public void migrateSJTR() {
        new Thread() {
            
            public void run() {
                try {
                    
                    ResultSet rsVoucher,rsDates;
                    
                    Connection objConn=data.getConn(FinanceGlobal.FinURL);
                    Statement stHeader=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsHeader=stHeader.executeQuery("SELECT * FROM L_FIN_VOUCHER_HEADER LIMIT 1");
                    
                    Statement stDetail=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetail=stDetail.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL LIMIT 1");
                    
                    Statement stDetailEx=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    ResultSet rsDetailEx=stDetailEx.executeQuery("SELECT * FROM L_FIN_VOUCHER_DETAIL_EX LIMIT 1");
                    
                    
                    //(3) Creating Entries for Bank/Cash Books - Allocation code is to be search from Book Master
                    String strQry = "";
                    //                    strQry = "SELECT * FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE=3 AND BOOK_CODE NOT IN ('01','02','04','09','10','11','67','26') ";
                    //book code for fixed deposit system
                    //strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD IN ('22','39') ";
                    
                    //BOOK CODE FOR RECEIPT VOUCHER & SALES VOUCHER
                    //strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD IN ('02','14','21','25','45') ";
                    
                    //BOOK CODE FOR DEALER DEPOSIT
                    strQry = "SELECT DISTINCT TR_BOOK_CD AS BOOK_CODE FROM TR WHERE TR_BOOK_CD IN ('21') ";
                    
                    ResultSet rsBook=data.getResult(strQry,FinanceGlobal.FinURL);
                    rsBook.first();
                    
                    if(rsBook.getRow()>0) {
                        while(!rsBook.isAfterLast()) {
                            String BookCode=rsBook.getString("BOOK_CODE").trim();
                            //String BookMainCode=rsBook.getString("MAIN_ACCOUNT_CODE");
                            String Day="";
                            String Month="";
                            String Year="";
                            int VoucherType = 0;
                            int ModuleId = 0;
                            String GRNNo = "";
                            
                            if ((BookCode.trim().equals("21")) || (BookCode.trim().equals("25")) || (BookCode.trim().equals("45")) || (BookCode.trim().equals("18"))) {
                                VoucherType = 9;
                                ModuleId = 89;
                            }
                            else if ((BookCode.trim().equals("22")) || (BookCode.trim().equals("24")) || (BookCode.trim().equals("39"))) {
                                VoucherType=9;
                                ModuleId=89;
                            }
                            
                            
                            //Find Distinct Dates
                            rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000'",FinanceGlobal.FinURL);
                            //rsDates=data.getResult("SELECT DISTINCT(TR_DT_YY),TR_DT_MM,TR_DT_DD FROM TR WHERE TR_BOOK_CD=31 AND TR_REF_NO='000055' AND TR_DT_YY='08' AND TR_DT_MM='05' AND TR_DT_DD='07'",FinanceGlobal.FinURL);
                            
                            rsDates.first();
                            
                            if(rsDates.getRow()>0) {
                                while(!rsDates.isAfterLast()) {
                                    Day=rsDates.getString("TR_DT_DD");
                                    Month=rsDates.getString("TR_DT_MM");
                                    Year=rsDates.getString("TR_DT_YY");
                                    
                                    //                                    String SerialNo = "1";
                                    //                                    String OldRefNo = "";
                                    //                                    String OldStatus = "";
                                    String Status = "";
                                    String MainCode="";
                                    String SubCode="";
                                    double Total_Amount=0;
                                    String Effect="";
                                    String NewVoucherNo="";
                                    
                                    //Find Vouchers of this book
                                    //rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN('210010','210027','210072','210034') " ,FinanceGlobal.FinURL);
                                    
                                    //Find Vouchers of this book -- DEALER DEPOSIT
                                    rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' " ,FinanceGlobal.FinURL);
                                    
                                    //VOUCHER FOR FD
                                    //rsVoucher=data.getResult("SELECT DISTINCT(TR_REF_NO) FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO<>'000000' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE IN('115012','115029','115036','115218','115225','115160','115201','115153','115177','115232','115249','127176') " ,FinanceGlobal.FinURL);
                                    
                                    rsVoucher.first();
                                    //                                    OldRefNo=rsVoucher.getString("TR_REF_NO");
                                    
                                    if(rsVoucher.getRow()>0) {
                                        while(!rsVoucher.isAfterLast()) {
                                            String RefNo=rsVoucher.getString("TR_REF_NO");
                                            //                                            OldRefNo = RefNo;
                                            
                                            ResultSet rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE<>TRALLOC_CD ORDER BY TR_AMT_SIG ",FinanceGlobal.FinURL);
                                            rsDoc.first();
                                            Status = rsDoc.getString("TR_AMT_SIG");
                                            //OldStatus = Status;
                                            
                                            int SrNo=0;
                                            int BlockNo=0;
                                            Total_Amount = 0;
                                            
                                            while(!rsDoc.isAfterLast()) {
                                                
                                                boolean InvalidEntry=false;
                                                
                                                NewVoucherNo="M"+Month+Day+BookCode+"1"+RefNo;
                                                
                                                lblStatus.setText("Inserting "+NewVoucherNo);
                                                
                                                if(rsDoc.getString("TRALLOC_CD").trim().equals("000000")) {
                                                    System.out.println("No Allocation Code defined. Voucher No. "+RefNo+" Book Code"+BookCode+" Date: "+Day+"/"+Month+"/"+Year);
                                                }
                                                
                                                if(!InvalidEntry) {
                                                    
                                                    //*************************   Create Voucher Header   *******************************//
                                                    rsHeader.moveToInsertRow();
                                                    rsHeader.updateInt("COMPANY_ID",2);
                                                    rsHeader.updateString("VOUCHER_NO",NewVoucherNo);
                                                    rsHeader.updateString("BOOK_CODE",BookCode);
                                                    rsHeader.updateString("CHEQUE_NO",rsDoc.getString("TR_CHEQ_NO"));
                                                    
                                                    String ChequeDate=rsDoc.getString("TRCHQBILDT");
                                                    
                                                    if((!ChequeDate.trim().equals(""))&&(!ChequeDate.trim().equals("000000"))) {
                                                        ChequeDate="20"+ChequeDate.substring(4)+"-"+ChequeDate.substring(2,4)+"-"+ChequeDate.substring(0,2);
                                                        
                                                        rsHeader.updateString("CHEQUE_DATE",ChequeDate);
                                                    }
                                                    else {
                                                        rsHeader.updateString("CHEQUE_DATE","0000-00-00");
                                                    }
                                                    
                                                    String VoucherDate="20"+rsDoc.getString("TR_DT_YY")+"-"+rsDoc.getString("TR_DT_MM")+"-"+rsDoc.getString("TR_DT_DD");
                                                    
                                                    rsHeader.updateString("VOUCHER_DATE",VoucherDate);
                                                    rsHeader.updateString("BANK_NAME", "");
                                                    rsHeader.updateString("ST_CATEGORY",rsDoc.getString("TR_SALESTAX"));
                                                    rsHeader.updateInt("APPROVED",1);
                                                    rsHeader.updateString("APPROVED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("REJECTED",0);
                                                    rsHeader.updateString("REJECTED_DATE","0000-00-00");
                                                    rsHeader.updateString("REJECTED_REMARKS","");
                                                    rsHeader.updateString("CREATED_BY","admin");
                                                    rsHeader.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateString("MODIFIED_BY","admin");
                                                    rsHeader.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("HIERARCHY_ID",0);
                                                    rsHeader.updateInt("CHANGED",1);
                                                    rsHeader.updateInt("VOUCHER_TYPE",VoucherType);
                                                    rsHeader.updateString("CHANGED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsHeader.updateInt("CANCELLED",0);
                                                    rsHeader.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    
                                                    
                                                    try {
                                                        rsHeader.insertRow();
                                                    }
                                                    catch(Exception s)
                                                    {}
                                                    // ************************* End of Header ********************************//
                                                    
                                                    
                                                    //******************* Creating Voucher Detail Records ************************//
                                                    //                                                rsDoc=data.getResult("SELECT * FROM TR WHERE TR_BOOK_CD='"+BookCode+"' AND TR_REF_NO='"+RefNo+"' AND TR_DT_DD='"+Day+"' AND TR_DT_MM='"+Month+"' AND TR_DT_YY='"+Year+"' AND TRMAINCODE<>TRALLOC_CD",FinanceGlobal.FinURL);
                                                    //                                                rsDoc.first();
                                                    
                                                    SrNo++;
                                                    BlockNo++;
                                                    
                                                    rsDetail.moveToInsertRow();
                                                    rsDetail.updateInt("COMPANY_ID", 2);
                                                    rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetail.updateInt("SR_NO",SrNo);
                                                    rsDetail.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    
                                                    MainCode=rsDoc.getString("TRMAINCODE");
                                                    SubCode=rsDoc.getString("TRSUBCODE");
                                                    double Amount=EITLERPGLOBAL.ConvertToDouble(rsDoc.getString("TR_AMT"))/100;
                                                    Effect=rsDoc.getString("TR_AMT_SIG");
                                                    Total_Amount = Total_Amount + Amount;
                                                    
                                                    if(SubCode.equals("000000")) {
                                                        SubCode="";
                                                    }
                                                    
                                                    rsDetail.updateDouble("AMOUNT",Amount);
                                                    rsDetail.updateInt("ACCOUNT_ID",0);
                                                    rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetail.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetail.updateString("CREATED_BY","admin");
                                                    rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateString("MODIFIED_BY","admin");
                                                    rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetail.updateInt("CANCELLED",0);
                                                    rsDetail.updateInt("CHANGED",1);
                                                    rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    String sPONO= rsDoc.getString("TR_PO_NO");
                                                    String sInvoiceNo = rsDoc.getString("TR_BILL_NO");
                                                    if(sPONO.trim().equals("000000")) {
                                                        rsDetail.updateString("PO_NO","");
                                                    } else {
                                                        rsDetail.updateString("PO_NO",sPONO);
                                                    }
                                                    
                                                    rsDetail.updateString("PO_DATE","0000-00-00");
                                                    
                                                    String Agent_srno = rsDoc.getString("TR_INVAGSR");
                                                    int agsr_no = Integer.parseInt(Agent_srno);
                                                    String Agent_alpha = data.getStringValueFromDB("SELECT AREA_ID FROM D_SAL_PARTY_MASTER WHERE PARTY_CODE='"+SubCode+"' ");
                                                    Agent_alpha = Agent_alpha + "/" + agsr_no;
                                                    String InvoiceNo = clsSalesInvoice.getInvoiceNo(Agent_alpha);
                                                    String InvoiceDate = clsSalesInvoice.getInvoiceDate(2,InvoiceNo);
                                                    if(InvoiceDate.trim().equals("")) {
                                                        InvoiceDate="0000-00-00";
                                                    }
                                                    if(sInvoiceNo.trim().equals("000000")) {
                                                        rsDetail.updateString("INVOICE_NO",InvoiceNo);
                                                        rsDetail.updateString("INVOICE_DATE",InvoiceDate);
                                                    } else {
                                                        if (sInvoiceNo.trim().equals("")) {
                                                            rsDetail.updateString("INVOICE_NO",InvoiceNo);
                                                            rsDetail.updateString("INVOICE_DATE",InvoiceDate);
                                                        }
                                                        else {
                                                            rsDetail.updateString("INVOICE_NO",sInvoiceNo);
                                                            rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                                        }
                                                    }
                                                    
                                                    GRNNo = rsDoc.getString("TR_REF_AL").trim() + rsDoc.getString("TR_REF_NO").trim();
                                                    rsDetail.updateString("GRN_NO",GRNNo);
                                                    rsDetail.updateString("GRN_DATE","0000-00-00");
                                                    rsDetail.updateInt("MODULE_ID",ModuleId);
                                                    rsDetail.updateInt("REF_COMPANY_ID",2);
                                                    
                                                    try {
                                                        rsDetail.insertRow();
                                                    }
                                                    catch(Exception s) {
                                                        s.printStackTrace();
                                                    }
                                                    
                                                    
                                                    rsDetailEx.moveToInsertRow();
                                                    rsDetailEx.updateInt("COMPANY_ID", 2);
                                                    rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                                    rsDetailEx.updateInt("SR_NO",SrNo);
                                                    rsDetailEx.updateString("EFFECT",rsDoc.getString("TR_AMT_SIG"));
                                                    rsDetailEx.updateDouble("AMOUNT",Amount);
                                                    rsDetailEx.updateInt("ACCOUNT_ID",0);
                                                    rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                                    rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                                    rsDetailEx.updateString("REMARKS",rsDoc.getString("TR_DESC"));
                                                    rsDetailEx.updateString("CREATED_BY","admin");
                                                    rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateString("MODIFIED_BY","admin");
                                                    rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                                    rsDetailEx.updateInt("CANCELLED",0);
                                                    rsDetailEx.updateInt("CHANGED",1);
                                                    rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                                    sPONO= rsDoc.getString("TR_PO_NO");
                                                    sInvoiceNo = rsDoc.getString("TR_BILL_NO");
                                                    if(sPONO.trim().equals("000000")) {
                                                        rsDetailEx.updateString("PO_NO","");
                                                    } else {
                                                        rsDetailEx.updateString("PO_NO",sPONO);
                                                    }
                                                    
                                                    rsDetailEx.updateString("PO_DATE","0000-00-00");
                                                    
                                                    Agent_srno = rsDoc.getString("TR_INVAGSR");
                                                    agsr_no = Integer.parseInt(Agent_srno);
                                                    Agent_alpha = data.getStringValueFromDB("SELECT AREA_ID FROM D_SAL_PARTY_MASTER WHERE PARTY_CODE='"+SubCode+"' ");
                                                    Agent_alpha = Agent_alpha + "/" + agsr_no;
                                                    InvoiceNo = clsSalesInvoice.getInvoiceNo(Agent_alpha);
                                                    InvoiceDate = clsSalesInvoice.getInvoiceDate(2,InvoiceNo);
                                                    if(InvoiceDate.trim().equals("")) {
                                                        InvoiceDate="0000-00-00";
                                                    }
                                                    if(sInvoiceNo.trim().equals("000000")) {
                                                        rsDetailEx.updateString("INVOICE_NO",InvoiceNo);
                                                        rsDetailEx.updateString("INVOICE_DATE",InvoiceDate);
                                                    } else {
                                                        if (sInvoiceNo.trim().equals("")) {
                                                            rsDetailEx.updateString("INVOICE_NO",InvoiceNo);
                                                            rsDetailEx.updateString("INVOICE_DATE",InvoiceDate);
                                                        }
                                                        else {
                                                            rsDetailEx.updateString("INVOICE_NO",sInvoiceNo);
                                                            rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                                        }
                                                    }
                                                    
                                                    GRNNo = rsDoc.getString("TR_REF_AL").trim() + rsDoc.getString("TR_REF_NO").trim();
                                                    rsDetailEx.updateString("GRN_NO",GRNNo);
                                                    rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                                    rsDetailEx.updateInt("MODULE_ID",ModuleId);
                                                    rsDetailEx.updateInt("REF_COMPANY_ID",2);
                                                    rsDetailEx.updateInt("BLOCK_NO",BlockNo);
                                                    
                                                    try {
                                                        rsDetailEx.insertRow();
                                                    }
                                                    catch(Exception s){
                                                        s.printStackTrace();
                                                    }
                                                    
                                                    //                                                    MainCode=rsDoc.getString("TRALLOC_CD");
                                                    
                                                    rsDoc.next();
                                                }
                                                
                                                
                                                //****************************************************************************//
                                            }
                                            
                                            rsVoucher.next();
                                            
                                            //                                            //*********** Do Opposite Entry **********//
                                            //                                            SrNo++;
                                            //
                                            //                                            rsDetail.moveToInsertRow();
                                            //                                            rsDetail.updateInt("COMPANY_ID", 2);
                                            //                                            rsDetail.updateString("VOUCHER_NO", NewVoucherNo);
                                            //                                            rsDetail.updateInt("SR_NO",SrNo);
                                            //
                                            //
                                            //                                            //MainCode=rsDoc.getString("TRALLOC_CD"); //Find Allocation code here
                                            //                                            if (MainCode.trim().equals("")) {
                                            //                                                MainCode = "000000";
                                            //                                            }
                                            //
                                            //                                            SubCode="";
                                            //
                                            //                                            if(Effect.equals("C")) {
                                            //                                                Effect="D";
                                            //                                            }
                                            //                                            else {
                                            //                                                Effect="C";
                                            //                                            }
                                            //
                                            //                                            if (MainCode.trim().equals("000000")) {
                                            //                                                MainCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_CODE = '"+ BookCode +"' ",FinanceGlobal.FinURL);
                                            //                                            }
                                            //
                                            //                                            rsDetail.updateString("EFFECT",Effect);
                                            //                                            rsDetail.updateDouble("AMOUNT",Total_Amount);
                                            //                                            rsDetail.updateInt("ACCOUNT_ID",0);
                                            //                                            rsDetail.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                            //                                            rsDetail.updateString("SUB_ACCOUNT_CODE",SubCode);
                                            //                                            rsDetail.updateString("REMARKS","");
                                            //                                            rsDetail.updateString("CREATED_BY","admin");
                                            //                                            rsDetail.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            //                                            rsDetail.updateString("MODIFIED_BY","admin");
                                            //                                            rsDetail.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            //                                            rsDetail.updateInt("CANCELLED",0);
                                            //                                            rsDetail.updateInt("CHANGED",1);
                                            //                                            rsDetail.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                            //                                            rsDetail.updateString("PO_NO","");
                                            //                                            rsDetail.updateString("PO_DATE","0000-00-00");
                                            //                                            rsDetail.updateString("INVOICE_NO","");
                                            //                                            rsDetail.updateString("INVOICE_DATE","0000-00-00");
                                            //                                            rsDetail.updateString("GRN_NO","");
                                            //                                            rsDetail.updateString("GRN_DATE","0000-00-00");
                                            //                                            rsDetail.updateInt("MODULE_ID",ModuleId);
                                            //                                            rsDetail.updateInt("REF_COMPANY_ID",2);
                                            //
                                            //                                            try {
                                            //                                                rsDetail.insertRow();
                                            //                                            }
                                            //                                            catch(Exception s){}
                                            //
                                            //
                                            //
                                            //                                            rsDetailEx.moveToInsertRow();
                                            //                                            rsDetailEx.updateInt("COMPANY_ID", 2);
                                            //                                            rsDetailEx.updateInt("BLOCK_NO",0);
                                            //                                            rsDetailEx.updateString("VOUCHER_NO", NewVoucherNo);
                                            //                                            rsDetailEx.updateInt("SR_NO",SrNo);
                                            //                                            rsDetailEx.updateString("EFFECT",Effect);
                                            //                                            rsDetailEx.updateDouble("AMOUNT",Total_Amount);
                                            //                                            rsDetailEx.updateInt("ACCOUNT_ID",0);
                                            //                                            rsDetailEx.updateString("MAIN_ACCOUNT_CODE", MainCode);
                                            //                                            rsDetailEx.updateString("SUB_ACCOUNT_CODE",SubCode);
                                            //                                            rsDetailEx.updateString("REMARKS","");
                                            //                                            rsDetailEx.updateString("CREATED_BY","admin");
                                            //                                            rsDetailEx.updateString("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            //                                            rsDetailEx.updateString("MODIFIED_BY","admin");
                                            //                                            rsDetailEx.updateString("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
                                            //                                            rsDetailEx.updateInt("CANCELLED",0);
                                            //                                            rsDetailEx.updateInt("CHANGED",1);
                                            //                                            rsDetailEx.updateString("CHANGED_DATE", EITLERPGLOBAL.getCurrentDateDB());
                                            //                                            rsDetailEx.updateString("PO_NO","");
                                            //                                            rsDetailEx.updateString("PO_DATE","0000-00-00");
                                            //                                            rsDetailEx.updateString("INVOICE_NO","");
                                            //                                            rsDetailEx.updateString("INVOICE_DATE","0000-00-00");
                                            //                                            rsDetailEx.updateString("GRN_NO","");
                                            //                                            rsDetailEx.updateString("GRN_DATE","0000-00-00");
                                            //                                            rsDetailEx.updateInt("MODULE_ID",ModuleId);
                                            //                                            rsDetailEx.updateInt("REF_COMPANY_ID",2);
                                            //
                                            //                                            try {
                                            //                                                rsDetailEx.insertRow();
                                            //                                            }
                                            //                                            catch(Exception s)
                                            //                                            {}
                                            //
                                        }
                                        
                                    }
                                    
                                    
                                    rsDates.next();
                                }
                            }
                            
                            rsBook.next();
                        }
                    }
                    
                    lblStatus.setText("Completed...");
                }
                catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
    }
    
    
    public void checkMissingParty() {
        
        try {
            
            
            String ControlAccount="115218";
            
            ResultSet rsTmp=data.getResult("SELECT DISTINCT(SUB_ACCOUNT_CODE) AS PARTY_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+ControlAccount+"' AND A.VOUCHER_DATE>='2008-04-01' AND A.VOUCHER_DATE<='2008-12-31'" ,FinanceGlobal.FinURL);
            rsTmp.first();
            
            System.out.println(" List of missing parties : Found from Opening "+ControlAccount);
            
            if(rsTmp.getRow()>0) {
                
                
                while(!rsTmp.isAfterLast()) {
                    
                    String partyCode=rsTmp.getString("PARTY_CODE");
                    
                    if(!data.IsRecordExist("SELECT PARTY_CODE FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+ControlAccount+"' AND PARTY_CODE='"+partyCode+"'",FinanceGlobal.FinURL)) {
                        System.out.println(partyCode);
                    }
                    
                    rsTmp.next();
                }
                
            }
            
            rsTmp=data.getResult("SELECT DISTINCT(SUB_ACCOUNT_CODE) AS PARTY_CODE FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B WHERE A.COMPANY_ID=B.COMPANY_ID AND A.VOUCHER_NO=B.VOUCHER_NO AND B.MAIN_ACCOUNT_CODE='"+ControlAccount+"' AND A.VOUCHER_DATE>='2008-04-01' AND A.VOUCHER_DATE<='2008-12-31'" ,FinanceGlobal.FinURL);
            rsTmp.first();
            
            System.out.println("List of missing parties : Found from transactions "+ControlAccount);
            
            if(rsTmp.getRow()>0) {
                
                
                while(!rsTmp.isAfterLast()) {
                    
                    String partyCode=rsTmp.getString("PARTY_CODE");
                    
                    if(!data.IsRecordExist("SELECT PARTY_CODE FROM D_FIN_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE='"+ControlAccount+"' AND PARTY_CODE='"+partyCode+"'",FinanceGlobal.FinURL)) {
                        System.out.println(partyCode);
                    }
                    
                    rsTmp.next();
                }
                
            }
        }
        catch(Exception e) {
            
        }
        
    }
    
    public void insertDFINToLFIN() {
        String Query="",ToDate = "",FromDate="",SQL="";
        
        String URL = "",Condition="";
        URL = "jdbc:mysql://200.0.0.227:3306/FINANCE";
        Query="SELECT DISTINCT A.VOUCHER_NO  FROM D_FIN_VOUCHER_HEADER A, D_FIN_VOUCHER_DETAIL B " +
        "WHERE A.VOUCHER_DATE>='2008-04-01' AND A.VOUCHER_DATE<='2008-11-30' AND A.VOUCHER_NO=B.VOUCHER_NO " +
        "AND A.VOUCHER_NO LIKE 'M%' AND B.MAIN_ACCOUNT_CODE='127176'";
        
        ResultSet rsVoucher = data.getResult(Query,URL);
        try {
            if (rsVoucher.getRow() > 0) {
                rsVoucher.first();
                int cnt = 0;
                String VoucherNo = "";
                while (! rsVoucher.isAfterLast()) {
                    VoucherNo = rsVoucher.getString("VOUCHER_NO");
                    SQL = "SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+ VoucherNo +"' " +
                    "AND MAIN_ACCOUNT_CODE IN ('115012','115036','115029','115153','115177','115201','115160','115225','115218')";
                    if(data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                        rsVoucher.next();
                        continue;
                    }
                    cnt = cnt + 1;
                    
                    System.out.println("count=" + cnt + "  Voucher No =" + VoucherNo);
                    Query = "INSERT INTO L_FIN_VOUCHER_HEADER SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='" + VoucherNo + "' ";
                    //System.out.println(Query);
                    data.Execute(Query,URL);
                    Query = "INSERT INTO L_FIN_VOUCHER_DETAIL SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='" + VoucherNo + "' ";
                    //System.out.println(Query);
                    data.Execute(Query,URL);
                    Query ="INSERT INTO L_FIN_VOUCHER_DETAIL_EX SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='" + VoucherNo + "' ";
                    //System.out.println(Query);
                    data.Execute(Query,URL);
                    rsVoucher.next();
                }
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}
