/*
 * trexport.java
 *
 * Created on March 13, 2008, 10:55 AM
 */

//package Templates.Other;
package EITLERP.Finance;

/**
 *
 * @author  nitin
 */
import java.sql.*;
import java.util.*;
import java.io.*;
import EITLERP.*;
import EITLERP.Stores.*;
import TReportWriter.*;
import TReportWriter.SimpleDataProvider.*;
import java.awt.*;
import javax.swing.* ;
import EITLERP.Sales.clsSalesParty;
import java.math.BigDecimal;


public class frmTRExport extends javax.swing.JApplet {
    private EITLComboModel cmbSelectTypeModel;
    private Vector sVector ;
    private Vector gVector;
    private String BookCodeList = "";
    String FilePath = "/root/Desktop/";
    String FileName = "";
    String Invoice="";
    /** Initializes the applet trexport */
    public void init() {
        sVector = new Vector();
        gVector = new Vector();
        initComponents();
        setSize(380,390);
        GenerateCombo();
        jButton2.setVisible(false);
        txtFromDate.requestFocus();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        cmdPJV = new javax.swing.JButton();
        txtFromDate = new javax.swing.JTextField();
        lblFromDate = new javax.swing.JLabel();
        lblToDate = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        lblSaveFile = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        cmdShowFileDialog = new javax.swing.JButton();
        cmdJV = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cmdCashVoucher = new javax.swing.JButton();
        cmdBankVoucher = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        GeneratedTRPane = new javax.swing.JScrollPane();
        GeneratedTRList = new javax.swing.JList();
        SelectedTRPane = new javax.swing.JScrollPane();
        SelectedTRList = new javax.swing.JList();
        cmdAddtoSelectionList = new javax.swing.JButton();
        cmdRemovefromSelectionList = new javax.swing.JButton();
        cmbSelectType = new javax.swing.JComboBox();
        lblSelectType = new javax.swing.JLabel();
        chkDeduction = new javax.swing.JCheckBox();

        getContentPane().setLayout(null);

        cmdPJV.setText("PJV");
        cmdPJV.setNextFocusableComponent(txtFromDate);
        cmdPJV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPJVActionPerformed(evt);
            }
        });

        getContentPane().add(cmdPJV);
        cmdPJV.setBounds(257, 319, 107, 20);

        txtFromDate.setColumns(15);
        txtFromDate.setNextFocusableComponent(txtToDate);
        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 42, 90, 19);

        lblFromDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromDate.setText("From Date :");
        getContentPane().add(lblFromDate);
        lblFromDate.setBounds(10, 44, 80, 15);

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To Date :");
        getContentPane().add(lblToDate);
        lblToDate.setBounds(190, 44, 65, 15);

        txtToDate.setColumns(15);
        txtToDate.setNextFocusableComponent(cmbSelectType);
        getContentPane().add(txtToDate);
        txtToDate.setBounds(261, 42, 90, 19);

        lblSaveFile.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSaveFile.setText("Save File :");
        getContentPane().add(lblSaveFile);
        lblSaveFile.setBounds(8, 297, 65, 15);

        txtFile.setColumns(15);
        txtFile.setNextFocusableComponent(cmdShowFileDialog);
        getContentPane().add(txtFile);
        txtFile.setBounds(77, 295, 247, 19);

        cmdShowFileDialog.setText("Export TR");
        cmdShowFileDialog.setNextFocusableComponent(cmdCashVoucher);
        cmdShowFileDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowFileDialogActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShowFileDialog);
        cmdShowFileDialog.setBounds(328, 294, 30, 20);

        cmdJV.setText("JV");
        cmdJV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdJVActionPerformed(evt);
            }
        });

        getContentPane().add(cmdJV);
        cmdJV.setBounds(132, 343, 118, 20);

        jButton2.setText("Export TR Type 1");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(10, 390, 110, 30);

        cmdCashVoucher.setText("Cash Voucher");
        cmdCashVoucher.setNextFocusableComponent(cmdBankVoucher);
        cmdCashVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCashVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCashVoucher);
        cmdCashVoucher.setBounds(7, 319, 121, 20);

        cmdBankVoucher.setText("Bank Voucher");
        cmdBankVoucher.setNextFocusableComponent(cmdPJV);
        cmdBankVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBankVoucherActionPerformed(evt);
            }
        });

        getContentPane().add(cmdBankVoucher);
        cmdBankVoucher.setBounds(131, 319, 121, 20);

        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHeader.setText("GENERATE EXPORT DATA FROM ERP FOR COBOL");
        getContentPane().add(lblHeader);
        lblHeader.setBounds(12, 11, 351, 15);

        GeneratedTRPane.setViewportBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        GeneratedTRPane.setViewportView(GeneratedTRList);

        getContentPane().add(GeneratedTRPane);
        GeneratedTRPane.setBounds(10, 100, 100, 180);

        SelectedTRPane.setViewportBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        SelectedTRList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        SelectedTRPane.setViewportView(SelectedTRList);

        getContentPane().add(SelectedTRPane);
        SelectedTRPane.setBounds(250, 100, 100, 180);

        cmdAddtoSelectionList.setText("Add >>");
        cmdAddtoSelectionList.setNextFocusableComponent(cmdRemovefromSelectionList);
        cmdAddtoSelectionList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddtoSelectionListActionPerformed(evt);
            }
        });

        getContentPane().add(cmdAddtoSelectionList);
        cmdAddtoSelectionList.setBounds(118, 117, 112, 24);

        cmdRemovefromSelectionList.setText("Remove>>");
        cmdRemovefromSelectionList.setNextFocusableComponent(txtFile);
        cmdRemovefromSelectionList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemovefromSelectionListActionPerformed(evt);
            }
        });

        getContentPane().add(cmdRemovefromSelectionList);
        cmdRemovefromSelectionList.setBounds(119, 145, 110, 24);

        cmbSelectType.setNextFocusableComponent(cmdAddtoSelectionList);
        cmbSelectType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSelectTypeItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbSelectType);
        cmbSelectType.setBounds(96, 70, 250, 21);

        lblSelectType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSelectType.setText("Select Type :");
        getContentPane().add(lblSelectType);
        lblSelectType.setBounds(11, 72, 80, 15);

        chkDeduction.setText("Only Deduction");
        chkDeduction.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDeductionItemStateChanged(evt);
            }
        });

        getContentPane().add(chkDeduction);
        chkDeduction.setBounds(115, 190, 130, 15);

    }//GEN-END:initComponents
    
    private void chkDeductionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDeductionItemStateChanged
        // TODO add your handling code here:
        if(cmbSelectType.getSelectedIndex()==1) {
            FileName = "cash45.txt";
        } else if(cmbSelectType.getSelectedIndex()==2) {
            FileName = "bank45.txt";
        } else if(cmbSelectType.getSelectedIndex()==3) {
            FileName = "pjv45.txt";
        }
        if(chkDeduction.isSelected()) {
            txtFile.setText(FilePath+FileName);
        }
    }//GEN-LAST:event_chkDeductionItemStateChanged
    
    private void cmdRemovefromSelectionListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemovefromSelectionListActionPerformed
        // TODO add your handling code here:
        try {
            Object[] selectedItemsNo = SelectedTRList.getSelectedValues();
            for(int i=0;i<selectedItemsNo.length;i++) {
                sVector.removeElement(sVector.get(sVector.indexOf(selectedItemsNo[i])));
            }
            SelectedTRList.setListData(sVector);
            SelectedTRList.clearSelection();
            GeneratedTRList.clearSelection();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdRemovefromSelectionListActionPerformed
    
    private void cmdAddtoSelectionListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddtoSelectionListActionPerformed
        // TODO add your handling code here:
        try {
            int[] selectedItemsNo = GeneratedTRList.getSelectedIndices();
            
            for(int i=0;i<selectedItemsNo.length;i++) {
                if(sVector.indexOf(gVector.get(selectedItemsNo[i]))!=-1) {
                    JOptionPane.showMessageDialog(this,"TR Code already exists.");
                    return;
                }
            }
            
            for(int i=0;i<selectedItemsNo.length;i++) {
                sVector.addElement(gVector.get(selectedItemsNo[i]));
            }
            SelectedTRList.setListData(sVector);
            SelectedTRList.clearSelection();
            GeneratedTRList.clearSelection();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmdAddtoSelectionListActionPerformed
    
    private void cmbSelectTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSelectTypeItemStateChanged
        // TODO add your handling code here:
        try {
            ResultSet rsData;
            int Counter = 0;
            if(cmbSelectType.getSelectedIndex()==0) {
                cmdAddtoSelectionList.setEnabled(false);
                cmdRemovefromSelectionList.setEnabled(false);
                txtFile.setEnabled(false);
                cmdShowFileDialog.setEnabled(false);
                cmdCashVoucher.setEnabled(false);
                cmdBankVoucher.setEnabled(false);
                cmdPJV.setEnabled(false);
                cmdJV.setEnabled(false);
                gVector.clear();
                GeneratedTRList.setListData(gVector);
                sVector.clear();
                SelectedTRList.setListData(sVector);
                chkDeduction.setEnabled(false);
                chkDeduction.setSelected(false);
                FileName = "";
            } else if(cmbSelectType.getSelectedIndex()==1) {
                cmdAddtoSelectionList.setEnabled(true);
                cmdRemovefromSelectionList.setEnabled(true);
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdCashVoucher.setEnabled(true);
                cmdBankVoucher.setEnabled(false);
                cmdPJV.setEnabled(false);
                cmdJV.setEnabled(false);
                String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE='01' AND BOOK_CODE<>'99' ORDER BY BOOK_CODE";  //AND VOUCHER_TYPE<>0
                rsData = data.getResult(SQL,FinanceGlobal.FinURL);
                rsData.first();
                Counter = 0;
                gVector.clear();
                while(!rsData.isAfterLast()){
                    Counter++;
                    gVector.addElement(rsData.getString("BOOK_CODE"));
                    rsData.next();
                }
                GeneratedTRList.setListData(gVector);
                sVector.clear();
                SelectedTRList.setListData(sVector);
                chkDeduction.setEnabled(false);
                chkDeduction.setSelected(false);
                FileName = "cash.txt";
            } else if(cmbSelectType.getSelectedIndex()==2) {
                cmdAddtoSelectionList.setEnabled(true);
                cmdRemovefromSelectionList.setEnabled(true);
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdCashVoucher.setEnabled(false);
                cmdBankVoucher.setEnabled(true);
                cmdPJV.setEnabled(false);
                cmdJV.setEnabled(false);
                String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE='01' AND BOOK_CODE<>'99' ORDER BY BOOK_CODE";  //AND VOUCHER_TYPE<>0
                rsData = data.getResult(SQL,FinanceGlobal.FinURL);
                rsData.first();
                Counter = 0;
                gVector.clear();
                while(!rsData.isAfterLast()){
                    Counter++;
                    gVector.addElement(rsData.getString("BOOK_CODE"));
                    rsData.next();
                }
                GeneratedTRList.setListData(gVector);
                chkDeduction.setEnabled(true);
                chkDeduction.setSelected(false);
                FileName = "bank.txt";
            } else if(cmbSelectType.getSelectedIndex()==3) {
                cmdAddtoSelectionList.setEnabled(true);
                cmdRemovefromSelectionList.setEnabled(true);
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdCashVoucher.setEnabled(false);
                cmdBankVoucher.setEnabled(false);
                cmdPJV.setEnabled(true);
                cmdJV.setEnabled(false);
                String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE='03' AND BOOK_CODE<>'99' ORDER BY BOOK_CODE";  //AND VOUCHER_TYPE<>0
                rsData = data.getResult(SQL,FinanceGlobal.FinURL);
                rsData.first();
                Counter = 0;
                gVector.clear();
                while(!rsData.isAfterLast()){
                    Counter++;
                    gVector.addElement(rsData.getString("BOOK_CODE"));
                    rsData.next();
                }
                GeneratedTRList.setListData(gVector);
                sVector.clear();
                SelectedTRList.setListData(sVector);
                chkDeduction.setEnabled(true);
                chkDeduction.setSelected(false);
                FileName = "pjv.txt";
            } else if (cmbSelectType.getSelectedIndex()==4){
                cmdAddtoSelectionList.setEnabled(true);
                cmdRemovefromSelectionList.setEnabled(true);
                txtFile.setEnabled(true);
                cmdShowFileDialog.setEnabled(true);
                cmdCashVoucher.setEnabled(false);
                cmdBankVoucher.setEnabled(false);
                cmdPJV.setEnabled(false);
                cmdJV.setEnabled(true);
                String SQL = "SELECT BOOK_CODE FROM D_FIN_BOOK_MASTER WHERE BOOK_TYPE='02' AND BOOK_CODE<>'99' ORDER BY BOOK_CODE";  //AND VOUCHER_TYPE<>0
                rsData = data.getResult(SQL,FinanceGlobal.FinURL);
                rsData.first();
                Counter = 0;
                gVector.clear();
                while(!rsData.isAfterLast()){
                    Counter++;
                    gVector.addElement(rsData.getString("BOOK_CODE"));
                    rsData.next();
                }
                GeneratedTRList.setListData(gVector);
                sVector.clear();
                SelectedTRList.setListData(sVector);
                chkDeduction.setEnabled(false);
                chkDeduction.setSelected(false);
                FileName = "jv.txt";
            }
            
            if(!FileName.equals("")) {
                txtFile.setText(FilePath+FileName);
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbSelectTypeItemStateChanged
    
    private void cmdBankVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBankVoucherActionPerformed
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(!chkDeduction.isSelected()) {
                if(BankVoucher()) {
                    writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
                } else {
                    JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                    return;
                }
            } else {
                if(BankVoucherDeduction()) {
                    writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
                } else {
                    JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                    return;
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdBankVoucherActionPerformed
    
    private void cmdCashVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCashVoucherActionPerformed
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(CashVoucher()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdCashVoucherActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void cmdJVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdJVActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(ExportJV()) {
                writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
            } else {
                JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                return;
            }
        }
    }//GEN-LAST:event_cmdJVActionPerformed
    
    private void cmdShowFileDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowFileDialogActionPerformed
        // TODO add your handling code here:
        FileDialog ff = new FileDialog(findParentFrame(this));
        ff.show();
        txtFile.setText(ff.getDirectory()+ff.getFile());
        
    }//GEN-LAST:event_cmdShowFileDialogActionPerformed
    
    private void cmdPJVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPJVActionPerformed
        // TODO add your handling code here:
        EITLERP.data.Execute("DELETE FROM TR_COBOL",FinanceGlobal.FinURL);
        if(!Validate()) {
            if(!chkDeduction.isSelected()) {
                if(ExportPJV()) {
                    writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
                } else {
                    JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                    return;
                }
            } else {
                if(ExportPJVDeduction()) {
                    writeToFile(EITLERPGLOBAL.formatDateDB(txtFromDate.getText()),EITLERPGLOBAL.formatDateDB(txtToDate.getText()));
                } else {
                    JOptionPane.showMessageDialog(this,"File can not be generated due to some error.");
                    return;
                }
            }
        }
    }//GEN-LAST:event_cmdPJVActionPerformed
    
    private void writeToFile(String FromDate,String ToDate) {
        try{
            String FromdMonth,FromdYear,FromdDate,TodMonth,TodYear,TodDate,MainCode,SubCode,AllocCode,PoNo,PoAl ="";
            FromdMonth = FromDate.substring(5,7);
            FromdDate = FromDate.substring(8,10);
            FromdYear = FromDate.substring(2,4);
            TodMonth = ToDate.substring(5,7);
            TodDate = ToDate.substring(8,10);
            TodYear = ToDate.substring(2,4);
            BufferedWriter aFile=new BufferedWriter(new FileWriter(new File(txtFile.getText())));
            EITLERP.data.Execute("UPDATE TR_COBOL SET TR_PO_AL ='G ' WHERE TR_PO_NO LIKE 'B%'",FinanceGlobal.FinURL);
         //  FOR TR 10 ONLY  -- MODIFIED BY RISHI 13/03/2013 //
            EITLERP.data.Execute("UPDATE TR_COBOL SET TR_REF_AL ='EX' WHERE BOOK_CODE =10",FinanceGlobal.FinURL);
            EITLERP.data.Execute("UPDATE TR_COBOL A ,(SELECT TR_REF_NO ,TR_MAIN_CODE FROM TR_COBOL WHERE BOOK_CODE =10 AND TR_AMT_SIGN ='C') AS B SET TR_ALLOC_CODE = B. TR_MAIN_CODE WHERE A.TR_REF_NO = B.TR_REF_NO AND A.TR_AMT_SIGN ='D'AND BOOK_CODE =10",FinanceGlobal.FinURL);
            EITLERP.data.Execute("DELETE FROM TR_COBOL WHERE TR_AMT_SIGN ='C' AND BOOK_CODE =10",FinanceGlobal.FinURL);
            EITLERP.data.Execute("UPDATE TR_COBOL A ,(SELECT TR_REF_NO,CASE WHEN LENGTH(RIGHT(REPLACE(REPLACE(REPLACE(TR_DESCRIPTION,'/1213',''),'C/',''),'F/',''),4)) =2 THEN CONCAT('00',RIGHT(REPLACE(REPLACE(REPLACE(TR_DESCRIPTION,'/1213',''),'C/',''),'F/',''),4)) WHEN LENGTH(RIGHT(REPLACE(REPLACE(REPLACE(TR_DESCRIPTION,'/1213',''),'C/',''),'F/',''),4)) =3 THEN CONCAT('0',RIGHT(REPLACE(REPLACE(REPLACE(TR_DESCRIPTION,'/1213',''),'C/',''),'F/',''),4)) WHEN LENGTH(RIGHT(REPLACE(REPLACE(REPLACE(TR_DESCRIPTION,'/1213',''),'C/',''),'F/',''),4)) =1 THEN CONCAT('000',RIGHT(REPLACE(REPLACE(REPLACE(TR_DESCRIPTION,'/1213',''),'C/',''),'F/',''),4)) WHEN LENGTH(RIGHT(REPLACE(REPLACE(REPLACE(TR_DESCRIPTION,'/1213',''),'C/',''),'F/',''),4)) =4 THEN RIGHT(REPLACE(REPLACE(REPLACE(TR_DESCRIPTION,'/1213',''),'C/',''),'F/',''),4) END AS BILLNO FROM TR_COBOL WHERE BOOK_CODE =10 ) AS B SET TR_BILL_NO = B. BILLNO WHERE A.TR_REF_NO = B.TR_REF_NO AND BOOK_CODE =10",FinanceGlobal.FinURL);
            EITLERP.data.Execute("UPDATE TR_COBOL SET TR_DESCRIPTION=RPAD(TR_DESCRIPTION,25,' ') WHERE BOOK_CODE =10",FinanceGlobal.FinURL);
           
            
            
            //  
            
            //EITLERP.data.Execute("DELETE  FROM TR_COBOL WHERE TR_MAIN_CODE LIKE '<%' OR TR_SUB_CODE LIKE '<%' OR TR_ALLOC_CODE LIKE '<%'",FinanceGlobal.FinURL);
        //    ResultSet rsFile = EITLERP.data.getResult("SELECT * FROM TR_COBOL ",FinanceGlobal.FinURL);
            ResultSet rsFile = EITLERP.data.getResult("SELECT * FROM TR_COBOL ORDER BY TR_REF_NO",FinanceGlobal.FinURL);
            String PoFlag="";
            if(rsFile.getRow() > 0) {
                while (!rsFile.isAfterLast()) {
                    
                    MainCode = rsFile.getString("TR_MAIN_CODE");
                    
                    SubCode = rsFile.getString("TR_SUB_CODE");
                    AllocCode = rsFile.getString("TR_ALLOC_CODE");
                    //                    if(MainCode.equals("441018") || MainCode.equals("214832")) {
                    //                        boolean halt=true;
                    //                    }
                    PoNo =rsFile.getString("TR_PO_NO");
                    PoAl =rsFile.getString("TR_PO_AL");
                    if (PoNo.length() > 6) {
                        String sPoNo = PoNo;
                        PoNo = sPoNo.substring(0,6);
                        PoFlag = sPoNo.substring(6);
                    } else {
                        PoFlag="  ";
                    }
                    if (PoNo.equals("")) {
                        PoNo ="000000";
                    }
                    if (PoAl.equals("")) {
                        PoAl ="00";
                    }
                    if (MainCode.substring(0,1).equals("<")) {
                        MainCode ="000000";
                    }
                    if (!(SubCode.equals(""))) {
                        if(SubCode.substring(0,1).equals("<")) {
                            SubCode ="000000";
                        }
                    } else if (SubCode.equals("")) {
                        SubCode="000000";
                    }
                    
                    if (!(AllocCode.equals(""))) {
                        if(AllocCode.substring(0,1).equals("<")) {
                            AllocCode ="000000";
                        }
                    }
                    else if(AllocCode.equals("")) {
                        AllocCode="000000";
                    }
                    
                    aFile.write(rsFile.getString("TR_REC_TYPE")+rsFile.getString("TR_INV_AGSR")+rsFile.getString("TR_DIV_CODE")+rsFile.getString("BOOK_CODE")+rsFile.getString("TR_YR")+rsFile.getString("TR_MT")+rsFile.getString("TR_DT")+rsFile.getString("TR_REF_AL")+rsFile.getString("TR_REF_NO")+MainCode+SubCode+rsFile.getString("TR_CHEQUE_NO")+rsFile.getString("TR_REF_SR")+rsFile.getString("TR_CHQ_BILL_DATE")+rsFile.getString("TR_DESCRIPTION")+rsFile.getString("SALETAX_CODE")+rsFile.getString("TR_AMT")+rsFile.getString("TR_AMT_SIGN")+AllocCode+PoAl+PoNo+PoFlag+rsFile.getString("TR_BILL_AL")+rsFile.getString("TR_BILL_NO")+"  "+rsFile.getString("TR_INV_Y1Y2")+" 00");
                    aFile.newLine();
                    rsFile.next();
                }
            }
            aFile.close();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private boolean ExportPJV() {
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo=0;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            ResultSet rsVoucher,rsBlock,rsHeader;
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' " +
            "AND BOOK_CODE IN ("+BookCodeList+") AND APPROVED ='1' AND CANCELLED ='0'" + //("+BookCodeList+")  //AND VOUCHER_NO='DN111600660' '18/05/2012'
            "AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
            "AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'" +  // AND LEGACY_NO>='' AND LEGACY_NO<=''
            "ORDER BY BOOK_CODE,LEGACY_DATE",FinanceGlobal.FinURL);
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    System.out.println(VoucherNo);
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    //Generate New Reference No.
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    
                    int RefSrNo=0;
                    
                    String Sign,ChequeNo,BillDate,ChequeDate,Description,SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    
                    if(EITLERP.data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191','231716','231717','241225') AND IS_DEDUCTION<>1",FinanceGlobal.FinURL)) { //AND SUB_ACCOUNT_CODE<>''
                        //We found the record with both main and sub code, take it first
                        
                        strQry = "SELECT EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE " +
                        " FROM D_FIN_VOUCHER_DETAIL_EX " +
                        " WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND SUB_ACCOUNT_CODE<>'' AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191','231716','231717','241225') AND IS_DEDUCTION<>1";
                        ResultSet rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        rsTmp.first();
                        
                        Main_acc_code=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                        Sub_acc_code=UtilFunctions.getString(rsTmp,"SUB_ACCOUNT_CODE","");
                        Effect=UtilFunctions.getString(rsTmp,"EFFECT","");
                        //boolean FoundMainCode = true;
                        if(Main_acc_code.equals("")) {
                            strQry = "SELECT EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE " +
                            " FROM D_FIN_VOUCHER_DETAIL_EX " +
                            " WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE IN ('231321','210080') AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191','231716','231717','241225') AND IS_DEDUCTION<>1";
                            rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                            rsTmp.first();
                            Main_acc_code=rsTmp.getString("MAIN_ACCOUNT_CODE");
                            Sub_acc_code=rsTmp.getString("SUB_ACCOUNT_CODE");
                            Effect=rsTmp.getString("EFFECT");
                            //FoundMainCode=false;
                        }
                        //if(FoundMainCode) {
                            strQry = "SELECT VOUCHER_NO, INVOICE_DATE, PO_NO,INVOICE_NO,COMPANY_ID ,MAIN_ACCOUNT_CODE ,SUM(AMOUNT) AS AMOUNT,LINK_NO "+
                            "FROM D_FIN_VOUCHER_DETAIL_EX "+
                            "WHERE VOUCHER_NO='"+ VoucherNo +"' AND EFFECT='D' AND IS_DEDUCTION<>1 "+
                            "AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191','231716','231717','241225') " +
                            "GROUP BY MAIN_ACCOUNT_CODE";
                        /*} else {
                            strQry = "SELECT VOUCHER_NO, INVOICE_DATE, PO_NO,INVOICE_NO,COMPANY_ID ,MAIN_ACCOUNT_CODE ,AMOUNT ,LINK_NO "+
                            "FROM D_FIN_VOUCHER_DETAIL_EX "+
                            "WHERE VOUCHER_NO='"+ VoucherNo +"' AND EFFECT='D' AND IS_DEDUCTION<>1 "+
                            "AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191','231716','231717','241225') ";
                        }*/
                        
                        rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        
                        if (rsTmp.getRow() >0) {
                            rsTmp.first();
                            
                            while(!rsTmp.isAfterLast()) {
                                Sign=Effect;
                                // Export this entry to Cobol
                                rsCobol.moveToInsertRow();
                                rsCobol.updateString("TR_REC_TYPE", "01");
                                String LinkNo="";
                                String TR_INV_AGSR = "";
                                String Y1Y2 = "";
                                if(BookCode.equals("18") || BookCode.equals("12") || BookCode.equals("16") ||BookCode.equals("20")) {
                                    TR_INV_AGSR = data.getStringValueFromDB("SELECT LINK_NO FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND LINK_NO<>'' AND LINK_NO<>'0' AND IS_DEDUCTION<>1",FinanceGlobal.FinURL);
                                    if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                        if(!TR_INV_AGSR.equals("")) {
                                            String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                            int elementNo = 0;
                                            if(ARRAY_TR_INV_AGSR.length==2) {
                                                elementNo=0;
                                            }
                                            if(ARRAY_TR_INV_AGSR.length==3) {
                                                elementNo=1;
                                            }
                                            if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                                LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                                Y1Y2 = EITLERPGLOBAL.padLeft(4,ARRAY_TR_INV_AGSR[elementNo+1].trim(),"0");
                                            } else {
                                                LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                                Y1Y2 = EITLERPGLOBAL.padLeft(4,ARRAY_TR_INV_AGSR[elementNo+1].trim(),"0");
                                            }
                                            if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                                LinkNo = RefNo;
                                            }
                                        } else {
                                            LinkNo=RefNo;
                                        }
                                    } else {
                                        LinkNo="000000";
                                    }
                                    rsCobol.updateString("TR_INV_AGSR", LinkNo);
                                } else {
                                    rsCobol.updateString("TR_INV_AGSR", "000000");
                                }
                                
                                
                                rsCobol.updateString("TR_DIV_CODE", "03");
                                rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                                rsCobol.updateString("TR_YR",Year);
                                rsCobol.updateString("TR_MT",Month);
                                rsCobol.updateString("TR_DT",Day);
                                rsCobol.updateString("TR_REF_AL","  ");
                                rsCobol.updateString("TR_REF_NO",RefNo);
                                rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                                rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                                String Debit_MainCode = rsTmp.getString("MAIN_ACCOUNT_CODE");
                                
                                //(1) Cheque No. Start ==================================
                                if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                    ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                    if(ChequeNo.length()>8) {
                                        ChequeNo=ChequeNo.substring(0,8);
                                    } else {
                                        ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, " ");
                                    }
                                    rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                } else {
                                    rsCobol.updateString("TR_CHEQUE_NO","        ");
                                }
                                //==============Cheque No. Over ========================
                                
                                //(2) Cheque/Bill Date =====================================
                                BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                                ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                
                                if(!BillDate.trim().equals("")) {
                                    rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                } else {
                                    if(!ChequeDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                    } else {
                                        //No bill date and cheque date specified
                                        rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                    }
                                }
                                //================ Cheque/Bill Date Over =======================
                                
                                //(3) Description ==============================================
                                if(Main_acc_code.equals("231321") || Main_acc_code.equals("210080")) {
                                    Description = clsAccount.getAccountName(Main_acc_code, "");
                                } else {
                                    Description = "";
                                }
                                if(Description.trim().length()>25) {
                                    Description=Description.trim().substring(0,25);
                                } else {
                                    Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                                }
                                rsCobol.updateString("TR_DESCRIPTION", Description.replace('\n',' '));
                                //==============================================================
                                
                                //(4) Sales Tax Category =========================================
                                if(BookCode.equals("44") || BookCode.equals("64")) {
                                    SaleTaxCode = "00";
                                } else {
                                    ResultSet rsTax = data.getResult("SELECT MAIN_ACCOUNT_CODE FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND SUB_ACCOUNT_CODE='' AND MAIN_ACCOUNT_CODE LIKE '"+Debit_MainCode+"%' AND EFFECT='D' AND IS_DEDUCTION<>1",FinanceGlobal.FinURL);
                                    SaleTaxCode = findSalesTaxCode(rsTax);
                                }
                                rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                                //===============================================================
                                
                                //(5) Amount ======================================================
                                TrAmount = getAmount(rsTmp.getDouble("AMOUNT"));
                                rsCobol.updateString("TR_AMT", TrAmount);
                                //=================================================================
                                
                                //(6) Amount Sign =====================================================
                                TrSign = Effect;
                                rsCobol.updateString("TR_AMT_SIGN", TrSign);
                                // Amount Sign Over ================================================
                                
                                //(7) PO No. and suffix ==============================================
                                
                                PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                
                                if(PoAl.equals("")) {
                                    PoAl ="  ";
                                }
                                
                                if (PoAl.substring(0,1).equals("B")) {
                                    chrPoAl = "G ";
                                } else if (PoAl.substring(0,1).equals("P")) {
                                    chrPoAl = "P ";
                                } else if (PoAl.substring(0,1).equals("W")) {
                                    chrPoAl = "W ";
                                } else if (PoAl.substring(0,1).equals("A")) {
                                    if(PoAl.substring(0,2).equals("A0")) {
                                        chrPoAl = "CP";
                                    } else {
                                        chrPoAl = "A ";
                                    }
                                } else if (PoAl.substring(0,2).equals("A3")) {
                                    chrPoAl = "CP";
                                } else if (PoAl.substring(0,2).equals("D-")) {
                                    chrPoAl ="D ";
                                } else if (PoAl.substring(0,2).equals("I/")) {
                                    chrPoAl ="I ";
                                } else if (PoAl.substring(0,1).toUpperCase().equals("S")){
                                    chrPoAl ="S ";
                                } else if (PoAl.substring(0,2).equals("RM")) {
                                    chrPoAl ="RM";
                                } else if(PoAl.substring(0,1).equals("C")) {
                                    if (PoAl.substring(0,2).equals("CA")) {
                                        chrPoAl ="CA";
                                    } else {
                                        chrPoAl ="C ";
                                    }
                                } else {
                                    chrPoAl ="  ";
                                }
                                
                                if (Main_acc_code.equals("125019") ) {
                                    rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                } else {
                                    rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                                }
                                
                                PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                                if(PoNo.trim().equals("")) {
                                    PoNo ="000000";
                                }
                                
                                if (PoNo.substring(0,1).equals("B")) {
                                    chrPoNo = "B" + PoNo.substring(2,7);
                                } else if (PoNo.substring(0,1).equals("W")) {
                                    chrPoNo = PoNo.substring(1,7);
                                } else if (PoNo.substring(0,1).equals("P")) {
                                    chrPoNo = PoNo.substring(1,7);
                                } else if (PoNo.substring(0,1).equals("A")) {
                                    if (PoNo.substring(0,2).equals("A0")) {
                                        chrPoNo ="A" + PoNo.substring(2,PoNo.length());
                                    } else {
                                        chrPoNo ="0"+PoNo.substring(1,PoNo.length());
                                    }
                                } else if (PoNo.substring(0,2).equals("D-")) {
                                    chrPoNo = PoNo.substring(2,PoNo.length());
                                } else if (PoNo.substring(0,2).equals("I/")) {
                                    chrPoNo = PoNo.substring(2,PoNo.length());
                                } else if (PoNo.substring(0,2).toUpperCase().equals("S/")) {
                                    chrPoNo = "0" + PoNo.substring(2,PoNo.length());
                                } else if (PoNo.substring(0,1).equals("C")) {
                                    if (PoNo.substring(0,2).equals("CA")) {
                                        chrPoNo = PoNo.substring(2,PoNo.length());
                                    } else {
                                        chrPoNo = PoNo.substring(1,PoNo.length());
                                    }
                                } else if (PoNo.substring(0,2).equals("RM")) {
                                    chrPoNo = "0"+PoNo.substring(3,PoNo.length());
                                } else {
                                    chrPoNo = "000000" ;
                                }
                                
                                chrPoNo =EITLERPGLOBAL.padLeft(6,chrPoNo,"0");
                                
                                if (Main_acc_code.equals("125019") ) {
                                    rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                } else {
                                    rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                                }
                                //  PO Over ==================================================================
                                
                                //(7) PO Flag ================================================================
                                PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                                
                                if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                } else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLS");
                                }
                                rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                //(8) Invoice No. ============================================================
                                BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO","0").trim();
                                
                                if(BillNo.length()>6) {
                                    BillNo=BillNo.substring(BillNo.length()-6);
                                } else {
                                    BillNo=EITLERPGLOBAL.padLeft(6, BillNo,"0");
                                }
                                rsCobol.updateString("TR_BILL_AL","  ");
                                rsCobol.updateString("TR_BILL_NO",BillNo);
                                rsCobol.updateString("TR_PO_FL","  ");
                                //============================================================================
                                
                                //(9) Year ===================================================================
                                if(Y1Y2.equals("")) {
                                    Yr1_Yr2="0000";
                                } else {
                                    Yr1_Yr2=Y1Y2;
                                }
                                rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                //(10) Reference sr. no. and fixed transaction code ==========================
                                RefSrNo++;
                                strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                                rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                rsCobol.updateString("TR_TRAN_CODE","000");
                                //============================================================================
                                
                                //**** Find Opposite Entry *********
                                //(11) Allocation Code =======================================================
                                if(BookCode.equals("18") || BookCode.equals("12") || BookCode.equals("16") || BookCode.equals("20")) {
                                    AllocationCode = data.getStringValueFromDB("SELECT MAIN_ACCOUNT_CODE FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='C' ",FinanceGlobal.FinURL);
                                } else {
                                    AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                                }
                                
                                rsCobol.updateString("TR_ALLOC_CODE",AllocationCode);
                                //============================================================================
                                
                                rsCobol.insertRow() ;
                                rsTmp.next();
                            }
                        }
                    }
                    rsVoucher.next();
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean CashVoucher() {
        
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            ResultSet rsVoucher,rsBlock,rsHeader;
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            //String tempCondition = "VOUCHER_NO IN ('CS093001419','CS093001426','CS093001434','CS093001429','CS093001433','CS093001450','CS093001452', 'CR093000388','CR093000389','CR093000390') ";
            
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER " +
            "WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' AND BOOK_CODE IN ("+BookCodeList+")  AND APPROVED ='1' " +
            "AND CANCELLED ='0' AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
            "AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' ORDER BY LEGACY_NO,BOOK_CODE",FinanceGlobal.FinURL); //AND VOUCHER_NO='CR103000116'
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    System.out.println(VoucherNo);
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    if(VoucherNo.equals("CS093001419")) {
                        System.out.println();
                    }
                    int RefSrNo=0;
                    int VoucherType = rsHeader.getInt("VOUCHER_TYPE");
                    
                    String Sign,ChequeNo,BillDate,ChequeDate,Description,SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    
                    if(VoucherType == 4) {
                        strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND EFFECT ='D' AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191') ";
                    } else {
                        strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND EFFECT ='C' AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191') ";
                    }
                    
                    if(EITLERP.data.IsRecordExist(strQry,FinanceGlobal.FinURL)) {
                        ResultSet rsTmp;
                        if(VoucherType == 4) {
                            String tmpQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL " +
                            "WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND IS_DEDUCTION=0 " + //CS093001388
                            "GROUP BY VOUCHER_NO,MAIN_ACCOUNT_CODE,SR_NO,EFFECT " +
                            "UNION " +
                            "SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='C' AND IS_DEDUCTION=1 ";
                            rsTmp=EITLERP.data.getResult(tmpQry,FinanceGlobal.FinURL);
                        } else {
                            rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        }
                        //ResultSet rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        rsTmp.first();
                        //------- Start Coding
                        while (!rsTmp.isAfterLast()) {
                            Main_acc_code=rsTmp.getString("MAIN_ACCOUNT_CODE");
                            Sub_acc_code=rsTmp.getString("SUB_ACCOUNT_CODE");
                            Effect=rsTmp.getString("EFFECT");
                            int SrNo = rsTmp.getInt("SR_NO");
                            String GRNNo = rsTmp.getString("GRN_NO");
                            // Export this entry to Cobol
                            rsCobol.moveToInsertRow();
                            rsCobol.updateString("TR_REC_TYPE", "01");
                            
                            String LinkNo="";
                            String TR_INV_AGSR = "";
                            TR_INV_AGSR = data.getStringValueFromDB("SELECT LINK_NO FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND LINK_NO<>'' AND LINK_NO<>'0' AND SR_NO="+SrNo+" AND IS_DEDUCTION<>1",FinanceGlobal.FinURL);
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                String InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                String InvoiceDate = UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00").trim();
                                if(!InvoiceNo.equals("") && (!InvoiceNo.startsWith("DUM"))) {
                                    InvoiceNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+Sub_acc_code+"' ");
                                    if(InvoiceNo.equals("") && Main_acc_code.equals("210010")) {
                                        InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().substring(UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().length()-6);
                                    }
                                    if(InvoiceNo.length()<=6) {
                                        InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                    } else {
                                        InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                    }
                                    if(InvoiceNo.equals("000000")) {
                                        InvoiceNo = RefNo;
                                    }
                                    LinkNo=InvoiceNo;
                                } else {
                                    if(!TR_INV_AGSR.equals("")) {
                                        String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                        int elementNo = 0;
                                        if(ARRAY_TR_INV_AGSR.length==2) {
                                            elementNo=0;
                                        }
                                        if(ARRAY_TR_INV_AGSR.length==3) {
                                            elementNo=1;
                                        }
                                        if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                            LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                        } else {
                                            LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                        }
                                        if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                            LinkNo = RefNo;
                                        }
                                    } else {
                                        LinkNo=RefNo;
                                    }
                                }
                            } else {
                                LinkNo="000000";
                            }
                            
                            if(Main_acc_code.startsWith("115")) {
                                String erpReceiptNo = GRNNo;
                                String cReceiptNo = "";
                                int SchemeType = data.getIntValueFromDB("SELECT B.SCHEME_TYPE FROM D_FD_DEPOSIT_MASTER A, D_FD_SCHEME_MASTER B " +
                                "WHERE A.SCHEME_ID=B.SCHEME_ID AND A.RECEIPT_NO='"+erpReceiptNo+"' ",FinanceGlobal.FinURL);
                                if(!erpReceiptNo.startsWith("M")) {
                                    cReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+erpReceiptNo+"'",FinanceGlobal.FinURL);
                                    if(cReceiptNo.length()<7) {
                                        cReceiptNo = EITLERPGLOBAL.padLeftEx(cReceiptNo, "0", 7);
                                    }
                                } else {
                                    cReceiptNo = erpReceiptNo;
                                }
                                LinkNo = SchemeType + cReceiptNo.substring(cReceiptNo.length()-5);
                            }
                            rsCobol.updateString("TR_INV_AGSR", LinkNo);
                            
                            rsCobol.updateString("TR_DIV_CODE", "03");
                            rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                            rsCobol.updateString("TR_YR",Year);
                            rsCobol.updateString("TR_MT",Month);
                            rsCobol.updateString("TR_DT",Day);
                            rsCobol.updateString("TR_REF_AL","  ");
                            rsCobol.updateString("TR_REF_NO",RefNo);
                            rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                            rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                            
                            //(1) Cheque No. Start ==================================
                            if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","").trim();
                                if(ChequeNo.length()>8) {
                                    ChequeNo=ChequeNo.substring(0,8);
                                } else {
                                    ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                }
                                rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                            } else {
                                rsCobol.updateString("TR_CHEQUE_NO","00000000");
                            }
                            //==============Cheque No. Over ========================
                            
                            //(2) Cheque/Bill Date =====================================
                            BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                            ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                            
                            if(!BillDate.trim().equals("")) {
                                rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                            } else {
                                if(!ChequeDate.trim().equals("")) {
                                    rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                } else {
                                    //No bill date and cheque date specified
                                    rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                }
                            }
                            //================ Cheque/Bill Date Over =======================
                            
                            //(3) Description ==============================================
                            Description=UtilFunctions.getString(rsHeader,"REMARKS","").trim().replace('\n',' ');
                            if(Description.trim().length()>25) {
                                Description=Description.trim().substring(0,25);
                            } else {
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            
                            if(Description.trim().length()==0 && (Main_acc_code.equals("125019") || Main_acc_code.equals("125033")))  {
                                Description = "BILLNO."+UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim() + " PAID";
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            
                            LinkNo="";
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                String AgentAlpha = clsSalesParty.getAgentAlpha(Sub_acc_code);
                                if(!AgentAlpha.equals("") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210072"))) {
                                    AgentAlpha+="/";
                                }
                                
                                if(Main_acc_code.equals("210010")) {
                                    AgentAlpha="F /";
                                }
                                String InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                String InvoiceDate = UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00").trim();
                                
                                if(!InvoiceNo.equals("") && (!InvoiceNo.startsWith("DUM"))) {
                                    InvoiceNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+Sub_acc_code+"' ");
                                    if(InvoiceNo.equals("") && Main_acc_code.equals("210010")) {
                                        InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().substring(UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().length()-6);
                                    }
                                    if(InvoiceNo.length()<=6) {
                                        InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                    } else {
                                        InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                    }
                                    if(InvoiceNo.equals("000000")) {
                                        InvoiceNo = RefNo;
                                    }
                                    String YearRef = EITLERPGLOBAL.getFinYearStartDate(InvoiceDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(InvoiceDate).substring(2,4);
                                    LinkNo=AgentAlpha+InvoiceNo+"/"+YearRef;
                                } else {
                                    String YearRef = "0000";
                                    if(!TR_INV_AGSR.equals("")) {
                                        String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                        int elementNo = 0;
                                        if(ARRAY_TR_INV_AGSR.length==2) {
                                            elementNo=0;
                                        }
                                        if(ARRAY_TR_INV_AGSR.length==3) {
                                            elementNo=1;
                                        }
                                        if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                            LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                        } else {
                                            LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                        }
                                        if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                            LinkNo = RefNo;
                                        }
                                        YearRef = EITLERPGLOBAL.padLeft(4,ARRAY_TR_INV_AGSR[elementNo+1].trim(),"0");
                                        LinkNo=LinkNo+"/"+YearRef;
                                    } else {
                                        YearRef = EITLERPGLOBAL.getFinYearStartDate(VoucherDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(VoucherDate).substring(2,4);
                                        LinkNo=RefNo+"/"+YearRef;
                                    }
                                }
                                Description = EITLERPGLOBAL.padRight(25, LinkNo," ");
                            }
                            rsCobol.updateString("TR_DESCRIPTION", Description);
                            //==============================================================
                            
                            //(4) Sales Tax Category =========================================
                            SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","");
                            
                            if(SaleTaxCode.length()>2) {
                                SaleTaxCode=SaleTaxCode.substring(0,2);
                            } else {
                                SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                            }
                            rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                            //===============================================================
                            
                            //(5) Amount ======================================================
                            double prath=rsTmp.getDouble("AMOUNT");
                            if(Effect.equals("D") && VoucherType==4) {
                                prath += data.getDoubleValueFromDB("SELECT SUM(AMOUNT) FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND EFFECT='D' AND REF_SR_NO="+SrNo,FinanceGlobal.FinURL);
                            }
                            
                            TrAmount = new BigDecimal(prath).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
                            StringTokenizer st = new StringTokenizer(TrAmount, ".");
                            String Amount1 = st.nextToken();
                            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
                            TrAmount = Amount1 + Amount2;
                            if(TrAmount.length()>11) {
                                TrAmount=TrAmount.substring(0,11);
                            }
                            else {
                                TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                            }
                            rsCobol.updateString("TR_AMT", TrAmount);
                            //=================================================================
                            
                            //(6) Amount Sign =====================================================
                            TrSign = Effect;
                            rsCobol.updateString("TR_AMT_SIGN", TrSign);
                            // Amount Sign Over ================================================
                            
                            rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                            PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                            rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                            //  PO Over ==================================================================
                            rsCobol.updateString("TR_PO_FLG","");//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            //(8) Invoice No. ============================================================
                            BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                            if(BillNo.length()>6) {
                                //BillNo=BillNo.substring(0,8);
                                BillNo=BillNo.substring(BillNo.length()-6);
                            } else {
                                BillNo=EITLERPGLOBAL.padLeft(6, BillNo,"0");
                            }
                            rsCobol.updateString("TR_BILL_AL","  ");
                            rsCobol.updateString("TR_BILL_NO",BillNo);
                            //============================================================================
                            
                            //(9) Year ===================================================================
                            Yr1_Yr2="0000";
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                Yr1_Yr2 = Description.trim().substring(Description.trim().length()-4);
                            }
                            rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            
                            //(10) Reference sr. no. and fixed transaction code ==========================
                            RefSrNo++;
                            strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                            rsCobol.updateString("TR_REF_SR",strRefSrNo);
                            rsCobol.updateString("TR_TRAN_CODE","000");
                            //============================================================================
                            
                            
                            //**** Find Opposite Entry *********
                            //(11) Allocation Code =======================================================
                            AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                            rsCobol.updateString("TR_ALLOC_CODE","");
                            //============================================================================
                            
                            rsCobol.insertRow();
                            rsTmp.next();
                        }
                    }
                    
                    rsVoucher.next();
                }
                
            }
            SelectedTRList.clearSelection();
            GeneratedTRList.clearSelection();
        }
        catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    // End of Cash Voucher
    
    private boolean BankVoucher() {
        
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            ResultSet rsVoucher,rsBlock,rsHeader;
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' " +
            "AND BOOK_CODE IN ("+BookCodeList+")  AND APPROVED ='1' AND CANCELLED ='0' AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
            "AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'" + //AND LEGACY_NO>='2789' AND LEGACY_NO<='2792' == AND LEGACY_NO>15 AND VOUCHER_NO LIKE 'RC%'
            "ORDER BY BOOK_CODE,LEGACY_DATE",FinanceGlobal.FinURL);
            
            
            int count = rsVoucher.getRow();
            System.out.println("Total Record is :" + count);
            
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    System.out.println(VoucherNo);
                    if (VoucherNo.equals("RC115801048")) {
                        System.out.print("");
                    }
                    
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    
                    int RefSrNo=0;
                    int VoucherType = rsHeader.getInt("VOUCHER_TYPE");
                    
                    String Sign,ChequeNo,BillDate="",ChequeDate,Description,SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    int Sr_No=0;
                    try {
                        if (VoucherType == 2) {    // Payment Voucher
                            strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND IS_DEDUCTION<>1 AND EFFECT='D' " ; //AND MAIN_ACCOUNT_CODE NOT IN('127176','127035')
                        } else if (VoucherType ==6 ){ // Receipt Voucher
                            strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND EFFECT ='C' " ;
                        } else if (VoucherType == 10) { // Payment Voucher 2
                            strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND IS_DEDUCTION<>1 AND EFFECT='D' " ; //AND MAIN_ACCOUNT_CODE NOT IN('127176','127035')
                        }
                    } catch (Exception e) {
                    }
                    if(EITLERP.data.IsRecordExist(strQry,FinanceGlobal.FinURL)) {
                        
                        ResultSet rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        rsTmp.first();
                        
                        //------- Start Coding
                        while (!rsTmp.isAfterLast()) {
                            Main_acc_code=rsTmp.getString("MAIN_ACCOUNT_CODE");
                            Sub_acc_code=rsTmp.getString("SUB_ACCOUNT_CODE");
                            Effect=rsTmp.getString("EFFECT");
                            Sr_No = rsTmp.getInt("SR_NO");
                            int ModuleID = rsTmp.getInt("MODULE_ID");
                            String GRNNo = rsTmp.getString("GRN_NO");
                            if(Sub_acc_code.equals("")) {
                                Sub_acc_code="000000";
                            }
                            
                            // Export this entry to Cobol
                            rsCobol.moveToInsertRow();
                            rsCobol.updateString("TR_REC_TYPE", "01");
                            
                            String LinkNo="";
                            String TR_INV_AGSR = "";
                            TR_INV_AGSR = data.getStringValueFromDB("SELECT LINK_NO FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND LINK_NO<>'' AND LINK_NO<>'0' AND SR_NO="+Sr_No+" AND IS_DEDUCTION<>1",FinanceGlobal.FinURL);
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                String InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                String InvoiceDate = UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00").trim();
                                if(!InvoiceNo.equals("") && (!InvoiceNo.startsWith("DUM"))) {
                                    InvoiceNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+Sub_acc_code+"' ");
                                    if(InvoiceNo.equals("") && (Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                        try {
                                            InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().substring(UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().length()-6);
                                        } catch (Exception e) {}
                                    }
                                    if(InvoiceNo.length()<=6) {
                                        InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                    } else {
                                        InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                    }
                                    if(InvoiceNo.equals("000000")) {
                                        InvoiceNo = RefNo;
                                    }
                                    LinkNo=InvoiceNo;
                                } else {
                                    if(!TR_INV_AGSR.equals("")) {
                                        String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                        int elementNo = 0;
                                        if(ARRAY_TR_INV_AGSR.length==2) {
                                            elementNo=0;
                                        }
                                        if(ARRAY_TR_INV_AGSR.length==3) {
                                            elementNo=1;
                                        }
                                        if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                            LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                        } else {
                                            LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                        }
                                        if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                            LinkNo = RefNo;
                                        }
                                    } else {
                                        LinkNo=RefNo;
                                    }
                                }
                            } else {
                                LinkNo="000000";
                            }
                            
                            if(Main_acc_code.startsWith("115")) {
                                String erpReceiptNo = GRNNo;
                                String cReceiptNo = "";
                                int SchemeType = data.getIntValueFromDB("SELECT B.SCHEME_TYPE FROM D_FD_DEPOSIT_MASTER A, D_FD_SCHEME_MASTER B " +
                                "WHERE A.SCHEME_ID=B.SCHEME_ID AND A.RECEIPT_NO='"+erpReceiptNo+"' ",FinanceGlobal.FinURL);
                                if(!erpReceiptNo.startsWith("M")) {
                                    cReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+erpReceiptNo+"'",FinanceGlobal.FinURL);
                                    if(cReceiptNo.length()<7) {
                                        cReceiptNo = EITLERPGLOBAL.padLeftEx(cReceiptNo, "0", 7);
                                    }
                                } else {
                                    cReceiptNo = erpReceiptNo;
                                }
                                LinkNo = SchemeType + cReceiptNo.substring(cReceiptNo.length()-5);
                            }
                            
                            rsCobol.updateString("TR_INV_AGSR", LinkNo);
                            
                            rsCobol.updateString("TR_DIV_CODE", "03");
                            rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE"));
                            rsCobol.updateString("TR_YR",Year);
                            rsCobol.updateString("TR_MT",Month);
                            rsCobol.updateString("TR_DT",Day);
                            rsCobol.updateString("TR_REF_AL","  ");
                            rsCobol.updateString("TR_REF_NO",RefNo);
                            rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                            rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                            
                            //(1) Cheque No. Start ==================================
                            ChequeNo="";
                            if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","").trim();
                                
                                if(ChequeNo.length()>8) {
                                    ChequeNo=ChequeNo.substring(0,8);
                                } else {
                                    ChequeNo=EITLERPGLOBAL.padRight(8,ChequeNo, " ");
                                }
                            } else {
                                //rsCobol.updateString("TR_CHEQUE_NO","00000000");
                                ChequeNo=EITLERPGLOBAL.padRight(8,ChequeNo, " ");
                            }
                            
                            if(ModuleID==91) {
                                String SQL = "SELECT * FROM D_FIN_OBC WHERE DOC_NO='"+GRNNo+"' ";
                                ResultSet rsData = data.getResult(SQL, FinanceGlobal.FinURL);
                                rsData.first();
                                ChequeNo = rsData.getString("BANK_REFERENCE_NO").substring(0,2)+ " " + rsData.getString("BANK_REFERENCE_NO").substring(rsData.getString("BANK_REFERENCE_NO").length()-5);
                                BillDate = rsData.getString("BANK_REFERENCE_DATE").substring(8,10)+rsData.getString("BANK_REFERENCE_DATE").substring(5,7)+rsData.getString("BANK_REFERENCE_DATE").substring(2,4);
                            }
                            
                            rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                            //==============Cheque No. Over ========================
                            
                            
                            //(2) Cheque/Bill Date =====================================
                            if(ModuleID!=91) {
                                BillDate=Day+Month+Year;
                            }
                            
                            rsCobol.updateString("TR_CHQ_BILL_DATE",BillDate);
                            //================ Cheque/Bill Date Over =======================
                            
                            //(3) Description ==============================================
                            Description=UtilFunctions.getString(rsHeader,"REMARKS","").replace('\n',' ');
                            if(Description.trim().length()>25) {
                                Description=Description.trim().substring(0,25);
                            } else {
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            
                            if(Description.trim().length()==0 && (Main_acc_code.equals("125019") || Main_acc_code.equals("125033")))  {
                                Description = "BILLNO."+UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim() + " PAID";
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            LinkNo="";
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                String AgentAlpha = clsSalesParty.getAgentAlpha(Sub_acc_code);
                                if(!AgentAlpha.equals("") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210072"))) {
                                    AgentAlpha+="/";
                                }
                                
                                if(Main_acc_code.equals("210010")) {
                                    AgentAlpha="F /";
                                }
                                String InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                String InvoiceDate = UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00").trim();
                                
                                if(!InvoiceNo.equals("") && (!InvoiceNo.startsWith("DUM"))) {
                                    InvoiceNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+Sub_acc_code+"' ");
                                    if(InvoiceNo.equals("") && (Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                        try {
                                            InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().substring(UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().length()-6);
                                        } catch (Exception e) {}
                                    }
                                    if(InvoiceNo.length()<=6) {
                                        InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                    } else {
                                        InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                    }
                                    if(InvoiceNo.equals("000000")) {
                                        InvoiceNo = RefNo;
                                    }
                                    String YearRef = EITLERPGLOBAL.getFinYearStartDate(InvoiceDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(InvoiceDate).substring(2,4);
                                    LinkNo=AgentAlpha+InvoiceNo+"/"+YearRef;
                                } else {
                                    String YearRef = "0000";
                                    if(!TR_INV_AGSR.equals("")) {
                                        String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                        int elementNo = 0;
                                        if(ARRAY_TR_INV_AGSR.length==2) {
                                            elementNo=0;
                                        }
                                        if(ARRAY_TR_INV_AGSR.length==3) {
                                            elementNo=1;
                                        }
                                        if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                            LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                        } else {
                                            LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                        }
                                        if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                            LinkNo = RefNo;
                                        }
                                        YearRef = EITLERPGLOBAL.padLeft(4,ARRAY_TR_INV_AGSR[elementNo+1].trim(),"0");
                                        LinkNo=LinkNo+"/"+YearRef;
                                    } else {
                                        YearRef = EITLERPGLOBAL.getFinYearStartDate(VoucherDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(VoucherDate).substring(2,4);
                                        LinkNo=RefNo+"/"+YearRef;
                                    }
                                }
                                Description = EITLERPGLOBAL.padRight(25, LinkNo," ");
                            }
                            
                            rsCobol.updateString("TR_DESCRIPTION", Description);
                            //==============================================================
                            
                            
                            
                            //(4) Sales Tax Category =========================================
                            SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","").trim();
                            if(SaleTaxCode.length()>2) {
                                SaleTaxCode=SaleTaxCode.substring(0,2);
                            } else {
                                SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                            }
                            rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                            //===============================================================
                            
                            //(5) Amount ======================================================
                            TrAmount = getAmount(rsTmp.getDouble("AMOUNT"));
                            rsCobol.updateString("TR_AMT", TrAmount);
                            //=================================================================
                            
                            
                            //(6) Amount Sign =====================================================
                            TrSign = Effect;
                            rsCobol.updateString("TR_AMT_SIGN", TrSign);
                            // Amount Sign Over ================================================
                            
                            //(7) PO No. and suffix ==============================================
                            
                            if(RefNo.equals("001039")) {
                                System.out.println();
                            }
                            PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").trim();
                            
                            if(PoAl.equals("")) {
                                PoAl ="  ";
                            }
                            
                            if (PoAl.substring(0,1).equals("B")) {
                                chrPoAl = "G ";
                            } else if (PoAl.substring(0,1).equals("P")) {
                                chrPoAl = "P ";
                            } else if (PoAl.substring(0,1).equals("W")) {
                                chrPoAl = "W ";
                            } else if (PoAl.substring(0,1).equals("A")) {
                                if(PoAl.substring(0,2).equals("A0")) {
                                    chrPoAl = "CP";
                                } else {
                                    chrPoAl = "A ";
                                }
                            } else if (PoAl.substring(0,2).equals("A3")) {
                                chrPoAl = "CP";
                            } else if (PoAl.substring(0,2).equals("D-")) {
                                chrPoAl ="D ";
                            } else if (PoAl.substring(0,2).equals("I/")) {
                                chrPoAl ="I ";
                            } else if (PoAl.substring(0,1).toUpperCase().equals("S")){
                                chrPoAl ="S ";
                            } else if (PoAl.substring(0,2).equals("RM")) {
                                chrPoAl ="RM";
                            } else if (PoAl.substring(0,1).equals("C")) {
                                if (PoAl.substring(0,2).equals("CA")) {
                                    chrPoAl ="CA";
                                } else {
                                    chrPoAl ="C ";
                                }
                            } else {
                                chrPoAl ="  ";
                            }
                            
                            if (Main_acc_code.equals("125019") ) {
                                rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                            } else {
                                rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                            }
                            
                            PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                            if(PoNo.trim().equals("")) {
                                PoNo ="000000";
                            }
                            
                            if (PoNo.substring(0,1).equals("B")) {
                                chrPoNo = "B" + PoNo.substring(2,7);
                            } else if (PoNo.substring(0,1).equals("W")) {
                                chrPoNo = PoNo.substring(1,7);
                            } else if (PoNo.substring(0,1).equals("P")) {
                                chrPoNo = PoNo.substring(1,7);
                            } else if (PoNo.substring(0,1).equals("A")) {
                                if (PoNo.substring(0,2).equals("A0")) {
                                    chrPoNo ="A" + PoNo.substring(2,PoNo.length());
                                } else {
                                    chrPoNo ="0"+PoNo.substring(1,PoNo.length());
                                }
                            } else if (PoNo.substring(0,2).equals("D-")) {
                                chrPoNo = PoNo.substring(2,PoNo.length());
                            } else if (PoNo.substring(0,2).equals("I/")) {
                                chrPoNo = PoNo.substring(2,PoNo.length());
                            } else if (PoNo.substring(0,2).toUpperCase().equals("S/")) {
                                chrPoNo = "0" + PoNo.substring(2,PoNo.length());
                            } else if (PoNo.substring(0,1).equals("C")) {
                                if (PoNo.substring(0,2).equals("CA")) {
                                    chrPoNo = PoNo.substring(2,PoNo.length());
                                } else {
                                    chrPoNo = PoNo.substring(1,PoNo.length());
                                }
                            } else if (PoNo.substring(0,2).equals("RM")) {
                                chrPoNo = "0"+PoNo.substring(3,PoNo.length());
                            } else {
                                chrPoNo = "000000" ;
                            }
                            
                            chrPoNo =EITLERPGLOBAL.padLeft(6,chrPoNo,"0");
                            
                            if (Main_acc_code.equals("125019") ) {
                                rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                            } else {
                                rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                            }
                            //  PO Over ==================================================================
                            
                            PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                            
                            if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                            } else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLS");
                            }
                            rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            
                            
                            //(8) Invoice No. ============================================================
                            BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                            String BillAlpha="";
                            
                            if(BillNo.length()>6) {
                                BillNo=BillNo.substring(BillNo.length()-6);
                            } else {
                                BillNo=EITLERPGLOBAL.padLeft(6, BillNo.trim(),"0");
                            }
                            
                            if(BillNo.equals("000000") && Main_acc_code.equals("125019")) {
                                BillNo = chrPoNo.substring(chrPoNo.length()-6);
                            }
                            
                            if ((BillNo.equals(chrPoNo) || BillNo.equals(""))&& Main_acc_code.equals("125019")) {
                                BillAlpha= "AD";
                            } else {
                                BillAlpha= "  ";
                            }
                            
                            if (Sub_acc_code.equals("") || Main_acc_code.equals("125033"))                            {
                                BillNo="000000";
                            }
                            rsCobol.updateString("TR_BILL_NO",BillNo);
                            rsCobol.updateString("TR_BILL_AL",BillAlpha);
                            //============================================================================
                            
                            //(9) Year ===================================================================
                            Yr1_Yr2="0000";
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                Yr1_Yr2 = Description.trim().substring(Description.trim().length()-4);
                            }
                            rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            
                            //(10) Reference sr. no. and fixed transaction code ==========================
                            RefSrNo++;
                            strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                            rsCobol.updateString("TR_REF_SR",strRefSrNo);
                            rsCobol.updateString("TR_TRAN_CODE","000");
                            //============================================================================
                            
                            
                            //**** Find Opposite Entry *********
                            //(11) Allocation Code =======================================================
                            AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                            rsCobol.updateString("TR_ALLOC_CODE","");
                            //============================================================================
                            
                            rsCobol.insertRow() ;
                            
                            rsTmp.next();
                        }
                    }
                    rsVoucher.next();
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean BankVoucherDeduction() {
        
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            ResultSet rsVoucher,rsBlock,rsHeader;
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' " +
            "AND BOOK_CODE IN ("+BookCodeList+")  AND APPROVED ='1' AND CANCELLED ='0' " +
            "AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
            "AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' " + //AND LEGACY_NO>2299 AND VOUCHER_NO LIKE 'PY%'
            "AND VOUCHER_TYPE IN (2,10) ORDER BY BOOK_CODE,LEGACY_DATE",FinanceGlobal.FinURL); //AND VOUCHER_NO='RC105800006'
            
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    System.out.println(VoucherNo);
                    if (VoucherNo.equals("RC105800002")) {
                        System.out.print("");
                    }
                    
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    
                    int RefSrNo=0;
                    int VoucherType = rsHeader.getInt("VOUCHER_TYPE");
                    
                    String Sign,ChequeNo,BillDate,ChequeDate,Description,SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    int Sr_No=0;
                    try {
                        if (VoucherType == 2) {    // Payment Voucher
                            strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND IS_DEDUCTION=1 " ; //AND MAIN_ACCOUNT_CODE NOT IN('127176','127035')
                        } else if (VoucherType == 10) { // Payment Voucher 2
                            strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND IS_DEDUCTION=1 " ; //AND MAIN_ACCOUNT_CODE NOT IN('127176','127035')
                        }
                    } catch (Exception e) {
                    }
                    if(EITLERP.data.IsRecordExist(strQry,FinanceGlobal.FinURL)) {
                        
                        ResultSet rsTmp=EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        rsTmp.first();
                        
                        //------- Start Coding
                        while (!rsTmp.isAfterLast()) {
                            Main_acc_code=rsTmp.getString("MAIN_ACCOUNT_CODE");
                            Sub_acc_code=rsTmp.getString("SUB_ACCOUNT_CODE");
                            Effect=rsTmp.getString("EFFECT");
                            Sr_No = rsTmp.getInt("SR_NO");
                            String GRNNo = rsTmp.getString("GRN_NO");
                            if(Sub_acc_code.equals("")) {
                                Sub_acc_code="000000";
                            }
                            
                            // Export this entry to Cobol
                            rsCobol.moveToInsertRow();
                            rsCobol.updateString("TR_REC_TYPE", "01");
                            
                            String LinkNo="";
                            String TR_INV_AGSR = "";
                            TR_INV_AGSR = data.getStringValueFromDB("SELECT LINK_NO FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND LINK_NO<>'' AND LINK_NO<>'0' AND SR_NO="+Sr_No+" AND IS_DEDUCTION<>1",FinanceGlobal.FinURL);
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                String InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                String InvoiceDate = UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00").trim();
                                if(!InvoiceNo.equals("") && (!InvoiceNo.startsWith("DUM"))) {
                                    InvoiceNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+Sub_acc_code+"' ");
                                    if(InvoiceNo.equals("") && Main_acc_code.equals("210010")) {
                                        InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().substring(UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().length()-6);
                                    }
                                    if(InvoiceNo.length()<=6) {
                                        InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                    } else {
                                        InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                    }
                                    if(InvoiceNo.equals("000000")) {
                                        InvoiceNo = RefNo;
                                    }
                                    LinkNo=InvoiceNo;
                                } else {
                                    if(!TR_INV_AGSR.equals("")) {
                                        String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                        int elementNo = 0;
                                        if(ARRAY_TR_INV_AGSR.length==2) {
                                            elementNo=0;
                                        }
                                        if(ARRAY_TR_INV_AGSR.length==3) {
                                            elementNo=1;
                                        }
                                        if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                            LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                        } else {
                                            LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                        }
                                        if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                            LinkNo = RefNo;
                                        }
                                    } else {
                                        LinkNo=RefNo;
                                    }
                                }
                            } else {
                                LinkNo="000000";
                            }
                            
                            if(Main_acc_code.startsWith("115")) {
                                String erpReceiptNo = GRNNo;
                                String cReceiptNo = "";
                                int SchemeType = data.getIntValueFromDB("SELECT B.SCHEME_TYPE FROM D_FD_DEPOSIT_MASTER A, D_FD_SCHEME_MASTER B " +
                                "WHERE A.SCHEME_ID=B.SCHEME_ID AND A.RECEIPT_NO='"+erpReceiptNo+"' ",FinanceGlobal.FinURL);
                                if(!erpReceiptNo.startsWith("M")) {
                                    cReceiptNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FD_DEPOSIT_MASTER WHERE RECEIPT_NO='"+erpReceiptNo+"'",FinanceGlobal.FinURL);
                                    if(cReceiptNo.length()<7) {
                                        cReceiptNo = EITLERPGLOBAL.padLeftEx(cReceiptNo, "0", 7);
                                    }
                                } else {
                                    cReceiptNo = erpReceiptNo;
                                }
                                LinkNo = SchemeType + cReceiptNo.substring(cReceiptNo.length()-5);
                            }
                            rsCobol.updateString("TR_INV_AGSR", LinkNo);
                            
                            rsCobol.updateString("TR_DIV_CODE", "03");
                            rsCobol.updateString("BOOK_CODE","46");
                            rsCobol.updateString("TR_YR",Year);
                            rsCobol.updateString("TR_MT",Month);
                            rsCobol.updateString("TR_DT",Day);
                            rsCobol.updateString("TR_REF_AL",rsHeader.getString("BOOK_CODE"));
                            rsCobol.updateString("TR_REF_NO",RefNo);
                            rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                            rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                            
                            
                            //(1) Cheque No. Start ==================================
                            ChequeNo="";
                            if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","").trim();
                                
                                if(ChequeNo.length()>8) {
                                    ChequeNo=ChequeNo.substring(0,8);
                                } else {
                                    ChequeNo=EITLERPGLOBAL.padRight(8,ChequeNo, " ");
                                }
                            } else {
                                //rsCobol.updateString("TR_CHEQUE_NO","00000000");
                                ChequeNo=EITLERPGLOBAL.padRight(8,ChequeNo, " ");
                            }
                            rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                            //==============Cheque No. Over ========================
                            
                            
                            //(2) Cheque/Bill Date =====================================
                            BillDate=Day+Month+Year;
                            rsCobol.updateString("TR_CHQ_BILL_DATE",BillDate);
                            //================ Cheque/Bill Date Over =======================
                            
                            
                            
                            //(3) Description ==============================================
                            Description=UtilFunctions.getString(rsHeader,"REMARKS","").replace('\n',' ');
                            if(Description.trim().length()>25) {
                                Description=Description.trim().substring(0,25);
                            } else {
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            
                            if(Description.trim().length()==0 && (Main_acc_code.equals("125019") || Main_acc_code.equals("125033")))  {
                                Description = "BILLNO."+UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim() + " PAID";
                                Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                            }
                            LinkNo="";
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                String AgentAlpha = clsSalesParty.getAgentAlpha(Sub_acc_code);
                                if(!AgentAlpha.equals("") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210072"))) {
                                    AgentAlpha+="/";
                                }
                                
                                if(Main_acc_code.equals("210010")) {
                                    AgentAlpha="F /";
                                }
                                String InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                String InvoiceDate = UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00").trim();
                                
                                if(!InvoiceNo.equals("") && (!InvoiceNo.startsWith("DUM"))) {
                                    InvoiceNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+Sub_acc_code+"' ");
                                    if(InvoiceNo.equals("") && Main_acc_code.equals("210010")) {
                                        InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().substring(UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().length()-6);
                                    }
                                    if(InvoiceNo.length()<=6) {
                                        InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                    } else {
                                        InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                    }
                                    if(InvoiceNo.equals("000000")) {
                                        InvoiceNo = RefNo;
                                    }
                                    String YearRef = EITLERPGLOBAL.getFinYearStartDate(InvoiceDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(InvoiceDate).substring(2,4);
                                    LinkNo=AgentAlpha+InvoiceNo+"/"+YearRef;
                                } else {
                                    String YearRef = "0000";
                                    if(!TR_INV_AGSR.equals("")) {
                                        String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                        int elementNo = 0;
                                        if(ARRAY_TR_INV_AGSR.length==2) {
                                            elementNo=0;
                                        }
                                        if(ARRAY_TR_INV_AGSR.length==3) {
                                            elementNo=1;
                                        }
                                        if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                            LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                        } else {
                                            LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                        }
                                        if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                            LinkNo = RefNo;
                                        }
                                        YearRef = EITLERPGLOBAL.padLeft(4,ARRAY_TR_INV_AGSR[elementNo+1].trim(),"0");
                                        LinkNo=LinkNo+"/"+YearRef;
                                    } else {
                                        YearRef = EITLERPGLOBAL.getFinYearStartDate(VoucherDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(VoucherDate).substring(2,4);
                                        LinkNo=RefNo+"/"+YearRef;
                                    }
                                }
                                Description = EITLERPGLOBAL.padRight(25, LinkNo," ");
                            }
                            
                            rsCobol.updateString("TR_DESCRIPTION", Description);
                            //==============================================================
                            
                            
                            
                            //(4) Sales Tax Category =========================================
                            SaleTaxCode = UtilFunctions.getString(rsHeader,"ST_CATEGORY","").trim();
                            if(SaleTaxCode.length()>2) {
                                SaleTaxCode=SaleTaxCode.substring(0,2);
                            } else {
                                SaleTaxCode=EITLERPGLOBAL.padLeft(2, SaleTaxCode,"0");
                            }
                            rsCobol.updateString("SALETAX_CODE", SaleTaxCode);
                            //===============================================================
                            
                            //(5) Amount ======================================================
                            TrAmount = new BigDecimal(rsTmp.getDouble("AMOUNT")).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
                            StringTokenizer st = new StringTokenizer(TrAmount, ".");
                            String Amount1 = st.nextToken();
                            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
                            TrAmount = Amount1 + Amount2;
                            if(TrAmount.length()>11) {
                                TrAmount=TrAmount.substring(0,11);
                            }
                            else {
                                TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
                            }
                            rsCobol.updateString("TR_AMT", TrAmount);
                            //=================================================================
                            
                            
                            //(6) Amount Sign =====================================================
                            TrSign = Effect;
                            rsCobol.updateString("TR_AMT_SIGN", TrSign);
                            // Amount Sign Over ================================================
                            
                            //(7) PO No. and suffix ==============================================
                            
                            if(RefNo.equals("001039")) {
                                System.out.println();
                            }
                            PoAl = UtilFunctions.getString(rsTmp,"PO_NO","000000").trim();
                            
                            if(PoAl.equals("")) {
                                PoAl ="  ";
                            }
                            
                            if (PoAl.substring(0,1).equals("B")) {
                                chrPoAl = "G ";
                            } else if (PoAl.substring(0,1).equals("P")) {
                                chrPoAl = "P ";
                            } else if (PoAl.substring(0,1).equals("W")) {
                                chrPoAl = "W ";
                            } else if (PoAl.substring(0,1).equals("A")) {
                                if(PoAl.substring(0,2).equals("A0")) {
                                    chrPoAl = "CP";
                                } else {
                                    chrPoAl = "A ";
                                }
                            } else if (PoAl.substring(0,2).equals("A3")) {
                                chrPoAl = "CP";
                            } else if (PoAl.substring(0,2).equals("D-")) {
                                chrPoAl ="D ";
                            } else if (PoAl.substring(0,2).equals("I/")) {
                                chrPoAl ="I ";
                            } else if (PoAl.substring(0,1).toUpperCase().equals("S")){
                                chrPoAl ="S ";
                            } else if (PoAl.substring(0,2).equals("RM")) {
                                chrPoAl ="RM";
                            } else if (PoAl.substring(0,1).equals("C")) {
                                if (PoAl.substring(0,2).equals("CA")) {
                                    chrPoAl ="CA";
                                } else {
                                    chrPoAl ="C ";
                                }
                            } else {
                                chrPoAl ="  ";
                            }
                            
                            if (Main_acc_code.equals("125019") ) {
                                rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                            } else {
                                rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                            }
                            
                            PoNo = UtilFunctions.getString(rsTmp,"PO_NO","000000");
                            if(PoNo.trim().equals("")) {
                                PoNo ="000000";
                            }
                            
                            if (PoNo.substring(0,1).equals("B")) {
                                chrPoNo = "B" + PoNo.substring(2,7);
                            } else if (PoNo.substring(0,1).equals("W")) {
                                chrPoNo = PoNo.substring(1,7);
                            } else if (PoNo.substring(0,1).equals("P")) {
                                chrPoNo = PoNo.substring(1,7);
                            } else if (PoNo.substring(0,1).equals("A")) {
                                if (PoNo.substring(0,2).equals("A0")) {
                                    chrPoNo ="A" + PoNo.substring(2,PoNo.length());
                                } else {
                                    chrPoNo ="0"+PoNo.substring(1,PoNo.length());
                                }
                            } else if (PoNo.substring(0,2).equals("D-")) {
                                chrPoNo = PoNo.substring(2,PoNo.length());
                            } else if (PoNo.substring(0,2).equals("I/")) {
                                chrPoNo = PoNo.substring(2,PoNo.length());
                            } else if (PoNo.substring(0,2).toUpperCase().equals("S/")) {
                                chrPoNo = "0" + PoNo.substring(2,PoNo.length());
                            } else if (PoNo.substring(0,1).equals("C")) {
                                if (PoNo.substring(0,2).equals("CA")) {
                                    chrPoNo = PoNo.substring(2,PoNo.length());
                                } else {
                                    chrPoNo = PoNo.substring(1,PoNo.length());
                                }
                            } else if (PoNo.substring(0,2).equals("RM")) {
                                chrPoNo = "0"+PoNo.substring(3,PoNo.length());
                            } else {
                                chrPoNo = "000000" ;
                            }
                            
                            chrPoNo =EITLERPGLOBAL.padLeft(6,chrPoNo,"0");
                            
                            if (Main_acc_code.equals("125019") ) {
                                rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                            } else {
                                rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                            }
                            //  PO Over ==================================================================
                            
                            PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                            
                            if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                            } else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLS");
                            }
                            rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            
                            
                            //(8) Invoice No. ============================================================
                            BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                            String BillAlpha="";
                            
                            if(BillNo.length()>6) {
                                BillNo=BillNo.substring(BillNo.length()-6);
                            } else {
                                BillNo=EITLERPGLOBAL.padLeft(6, BillNo.trim(),"0");
                            }
                            
                            if(BillNo.equals("000000") && Main_acc_code.equals("125019")) {
                                BillNo = chrPoNo.substring(chrPoNo.length()-6);
                            }
                            
                            if ((BillNo.equals(chrPoNo) || BillNo.equals(""))&& Main_acc_code.equals("125019")) {
                                BillAlpha= "AD";
                            } else {
                                BillAlpha= "  ";
                            }
                            
                            if (Sub_acc_code.equals("") || Main_acc_code.equals("125033"))                            {
                                BillNo="000000";
                            }
                            rsCobol.updateString("TR_BILL_NO",BillNo);
                            rsCobol.updateString("TR_BILL_AL",BillAlpha);
                            //============================================================================
                            
                            //(9) Year ===================================================================
                            Yr1_Yr2="0000";
                            if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                Yr1_Yr2 = Description.trim().substring(Description.trim().length()-4);
                            }
                            rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                            //============================================================================
                            
                            
                            //(10) Reference sr. no. and fixed transaction code ==========================
                            RefSrNo++;
                            strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                            rsCobol.updateString("TR_REF_SR",strRefSrNo);
                            rsCobol.updateString("TR_TRAN_CODE","000");
                            //============================================================================
                            
                            
                            //**** Find Opposite Entry *********
                            //(11) Allocation Code =======================================================
                            AllocationCode=UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                            rsCobol.updateString("TR_ALLOC_CODE","");
                            //============================================================================
                            
                            rsCobol.insertRow() ;
                            
                            rsTmp.next();
                        }
                    }
                    rsVoucher.next();
                }
            }
        }
        catch(Exception e) {
            e.printStackTrace();
            
            return false;
        }
        return true;
    }
    
    private String findSalesTaxCode(ResultSet rsTax) {
        String code="00";
        try {
            
            rsTax.first();
            while(!rsTax.isAfterLast()) {
                String MainAccountCode = rsTax.getString("MAIN_ACCOUNT_CODE");
                int index = MainAccountCode.indexOf(".");
                if(index > 0) {
                    int stCode = Integer.parseInt(MainAccountCode.substring(7));
                    if(stCode>=1 && stCode<=7) {
                        code="03";
                    } else if(stCode==21) {
                        code="01";
                    } else {
                        code="07";
                    }
                }
                rsTax.next();
            }
            if(code.equals("00")) {
                code="07";
            }
        } catch (Exception e) {
        }
        return code;
    }
    
    
    private Frame findParentFrame(JApplet pApplet) {
        Container c = (Container) pApplet;
        while(c != null) {
            if (c instanceof Frame)
                return (Frame)c;
            
            c = c.getParent();
        }
        return (Frame)null;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList GeneratedTRList;
    private javax.swing.JScrollPane GeneratedTRPane;
    private javax.swing.JList SelectedTRList;
    private javax.swing.JScrollPane SelectedTRPane;
    private javax.swing.JCheckBox chkDeduction;
    private javax.swing.JComboBox cmbSelectType;
    private javax.swing.JButton cmdAddtoSelectionList;
    private javax.swing.JButton cmdBankVoucher;
    private javax.swing.JButton cmdCashVoucher;
    private javax.swing.JButton cmdJV;
    private javax.swing.JButton cmdPJV;
    private javax.swing.JButton cmdRemovefromSelectionList;
    private javax.swing.JButton cmdShowFileDialog;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblSaveFile;
    private javax.swing.JLabel lblSelectType;
    private javax.swing.JLabel lblToDate;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateCombo() {
        cmbSelectTypeModel=new EITLComboModel();
        cmbSelectType.removeAllItems();
        cmbSelectType.setModel(cmbSelectTypeModel);
        
        ComboData aData=new ComboData();
        aData.Code=0;
        aData.Text="Select Type";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=1;
        aData.Text="Cash Book";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=2;
        aData.Text="Bank Book";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=3;
        aData.Text="PJV";
        cmbSelectTypeModel.addElement(aData);
        
        aData=new ComboData();
        aData.Code=4;
        aData.Text="JV";
        cmbSelectTypeModel.addElement(aData);
        
    }
    
    private String getBookList() {
        String tmpBookList = "";
        Enumeration e = sVector.elements();
        while(e.hasMoreElements()){
            tmpBookList += e.nextElement()+",";
        }
        System.out.println(tmpBookList.length());
        tmpBookList = tmpBookList.substring(0,tmpBookList.length()-1);
        System.out.println(tmpBookList.length());
        return tmpBookList;
    }
    
    private boolean Validate() {
        if(txtFile.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Please specify file.");
            return true;
        }
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Insert from date");
            return true;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText().trim())) {
            JOptionPane.showMessageDialog(this,"Insert valid from date");
            return true;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,"Insert To date");
            return true;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText().trim())) {
            JOptionPane.showMessageDialog(this,"Insert valid To date");
            return true;
        }
        return false;
    }
    
    private boolean ExportPJVDeduction() {
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            ResultSet rsVoucher,rsBlock,rsHeader;
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' " + 
            "AND BOOK_CODE IN ("+BookCodeList+") AND APPROVED ='1' AND CANCELLED ='0' " +
            "AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " +
            "AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' " +
            "ORDER BY BOOK_CODE,LEGACY_DATE",FinanceGlobal.FinURL);
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    System.out.println(VoucherNo);
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    
                    
                    //Generate New Reference No.
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    int RefSrNo=0;
                    
                    String Sign,ChequeNo,BillDate,ChequeDate,Description="",SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    
                    if(EITLERP.data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' AND SUB_ACCOUNT_CODE='' AND MAIN_ACCOUNT_CODE NOT IN ('231321','210080') AND EFFECT='C' ",FinanceGlobal.FinURL)) { //AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191','231716','231717','241225') AND IS_DEDUCTION<>1
                        //We found the record with both main, take it first
                        strQry = "SELECT VOUCHER_NO, INVOICE_DATE, PO_NO,INVOICE_NO,COMPANY_ID ,MAIN_ACCOUNT_CODE ,SUB_ACCOUNT_CODE, " +
                        "AMOUNT,BLOCK_NO,EFFECT FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+ VoucherNo +"' AND MAIN_ACCOUNT_CODE<>'' " +
                        "AND SUB_ACCOUNT_CODE='' AND MAIN_ACCOUNT_CODE NOT IN ('231321','210080') AND EFFECT='C' " +
                        "GROUP BY BLOCK_NO " +
                        "ORDER BY BLOCK_NO ";
                        
                        ResultSet rsTmp = EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        if (rsTmp.getRow() >0) {
                            rsTmp.first();
                            while (! rsTmp.isAfterLast()) {
                                int BlockNo = UtilFunctions.getInt(rsTmp,"BLOCK_NO",0);
                                rsBlock = data.getResult("SELECT * FROM D_FIN_VOUCHER_DETAIL_EX WHERE VOUCHER_NO='"+ VoucherNo +"' AND BLOCK_NO="+BlockNo+" ORDER BY BLOCK_NO,SR_NO",FinanceGlobal.FinURL);
                                rsBlock.first();
                                while(!rsBlock.isAfterLast()) {
                                    Effect = UtilFunctions.getString(rsBlock,"EFFECT","");
                                    Main_acc_code = UtilFunctions.getString(rsBlock,"MAIN_ACCOUNT_CODE","");
                                    Sub_acc_code = UtilFunctions.getString(rsBlock,"SUB_ACCOUNT_CODE","").trim();
                                    AllocationCode = "000000";
                                    if(Sub_acc_code.trim().equals("")) {
                                        Sub_acc_code="000000";
                                    }
                                    // Export this entry to Cobol
                                    rsCobol.moveToInsertRow();
                                    rsCobol.updateString("TR_REC_TYPE", "01");
                                    rsCobol.updateString("TR_INV_AGSR", "000000");
                                    rsCobol.updateString("TR_DIV_CODE", "03");
                                    rsCobol.updateString("BOOK_CODE","46");
                                    rsCobol.updateString("TR_YR",Year);
                                    rsCobol.updateString("TR_MT",Month);
                                    rsCobol.updateString("TR_DT",Day);
                                    rsCobol.updateString("TR_REF_AL",rsHeader.getString("BOOK_CODE").trim());
                                    rsCobol.updateString("TR_REF_NO",RefNo);
                                    rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                                    rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                                    
                                    //(1) Cheque No. Start ==================================
                                    if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                        ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                        if(ChequeNo.length()>8) {
                                            ChequeNo=ChequeNo.substring(0,8);
                                        } else {
                                            ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, " ");
                                        }
                                        rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                    } else {
                                        rsCobol.updateString("TR_CHEQUE_NO","        ");
                                    }
                                    //==============Cheque No. Over ========================
                                    
                                    //(2) Cheque/Bill Date =====================================
                                    BillDate=UtilFunctions.getString(rsBlock,"INVOICE_DATE","0000-00-00");
                                    ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                    
                                    if(!BillDate.trim().equals("")) {
                                        rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                    } else {
                                        if(!ChequeDate.trim().equals("")) {
                                            rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                        } else {
                                            //No bill date and cheque date specified
                                            rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                        }
                                    }
                                    //================ Cheque/Bill Date Over =======================
                                    
                                    //(3) Description ==============================================
                                    if(Description.trim().length()>25) {
                                        Description=Description.trim().substring(0,25);
                                    } else {
                                        Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                                    }
                                    rsCobol.updateString("TR_DESCRIPTION", Description.replace('\n',' '));
                                    //==============================================================
                                    
                                    //(4) Sales Tax Category =========================================
                                    rsCobol.updateString("SALETAX_CODE", "00");
                                    //===============================================================
                                    
                                    //(5) Amount ======================================================
                                    TrAmount = getAmount(rsBlock.getDouble("AMOUNT"));
                                    rsCobol.updateString("TR_AMT", TrAmount);
                                    //=================================================================
                                    
                                    //(6) Amount Sign =====================================================
                                    rsCobol.updateString("TR_AMT_SIGN", Effect);
                                    // Amount Sign Over ================================================
                                    
                                    //(7) PO No. and suffix ==============================================
                                    //PoAl = UtilFunctions.getString(rsBlock,"PO_NO","000000");
                                    PoAl = getPOAlpha(UtilFunctions.getString(rsBlock,"PO_NO","000000"));
                                    chrPoAl = PoAl;
                                    if (Main_acc_code.equals("125019") ) {
                                        rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                    } else {
                                        rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                                    }
                                    
                                    //PoNo = UtilFunctions.getString(rsBlock,"PO_NO","000000");
                                    PoNo = getPONo(UtilFunctions.getString(rsBlock,"PO_NO","000000"));
                                    chrPoNo = PoNo;
                                    chrPoNo =EITLERPGLOBAL.padLeft(6,chrPoNo,"0");
                                    
                                    if (Main_acc_code.equals("125019") ) {
                                        rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                    } else {
                                        rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                                    }
                                    //  PO Over ==================================================================
                                    
                                    //(7) PO Flag ================================================================
                                    PoFlg = UtilFunctions.getString(rsBlock,"COMPANY_ID","");
                                    if (UtilFunctions.getString(rsBlock,"COMPANY_ID","").equals("2")) {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                    } else if (UtilFunctions.getString(rsBlock,"COMPANY_ID","").equals("3")) {
                                        PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLS");
                                    }
                                    rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    //(8) Invoice No. ============================================================
                                    BillNo= UtilFunctions.getString(rsBlock,"INVOICE_NO","0").trim();
                                    if(BillNo.length()>6) {
                                        //BillNo=BillNo.substring(0,8);
                                        BillNo=BillNo.substring(BillNo.length()-6);
                                    } else {
                                        BillNo=EITLERPGLOBAL.padLeft(6, BillNo,"0");
                                    }
                                    rsCobol.updateString("TR_BILL_AL","  ");
                                    rsCobol.updateString("TR_BILL_NO",BillNo);
                                    rsCobol.updateString("TR_PO_FL","  ");
                                    //============================================================================
                                    
                                    //(9) Year ===================================================================
                                    Yr1_Yr2="0000";
                                    rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                    //============================================================================
                                    
                                    //(10) Reference sr. no. and fixed transaction code ==========================
                                    RefSrNo++;
                                    strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                                    rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                    rsCobol.updateString("TR_TRAN_CODE","000");
                                    //============================================================================
                                    
                                    //**** Find Opposite Entry *********
                                    //(11) Allocation Code =======================================================
                                    //AllocationCode=UtilFunctions.getString(rsBlock,"MAIN_ACCOUNT_CODE","");
                                    rsCobol.updateString("TR_ALLOC_CODE",AllocationCode);
                                    //============================================================================
                                    rsCobol.insertRow() ;
                                    
                                    rsBlock.next();
                                }
                                rsTmp.next();
                            }
                        }
                    }
                    rsVoucher.next();
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private boolean ExportJV() {
        boolean Done=false;
        long Counter=0;
        String VoucherNo="";
        String chrPoAl="";
        String chrPoNo="";
        String PoNo="";
        String PoAl="";
        int refNo = 1 ;
        int VoucherType = 0;
        try {
            Connection objConn=EITLERP.data.getConn(FinanceGlobal.FinURL);
            Statement stTemp=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            Statement stCobol=objConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rsCobol=stCobol.executeQuery("SELECT * FROM TR_COBOL LIMIT 1");
            ResultSet rsVoucher,rsHeader;
            
            if(!sVector.isEmpty()) {
                BookCodeList = getBookList();
            } else {
                JOptionPane.showMessageDialog(this,"No tr code selected.");
                return false;
            }
            
            rsVoucher=EITLERP.data.getResult("SELECT DISTINCT(VOUCHER_NO) FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO NOT LIKE 'M%' AND LEGACY_NO <> '' " +
            "AND BOOK_CODE IN ("+BookCodeList+") AND APPROVED =1 AND CANCELLED =0 AND LEGACY_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' " + //("+BookCodeList+")
            "AND LEGACY_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+ "' " + // AND LEGACY_NO>=1392 AND LEGACY_NO<=1441 last run
            "ORDER BY BOOK_CODE,LEGACY_DATE",FinanceGlobal.FinURL);
            rsVoucher.first();
            
            if(rsVoucher.getRow()>0) {
                while(!rsVoucher.isAfterLast()) {
                    
                    //For voucher header information
                    rsHeader=EITLERP.data.getResult("SELECT * FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+rsVoucher.getString("VOUCHER_NO")+"'",FinanceGlobal.FinURL);
                    
                    VoucherNo=rsHeader.getString("VOUCHER_NO");
                    System.out.println(VoucherNo);
                    String VoucherDate=rsHeader.getString("LEGACY_DATE");
                    String Month=VoucherDate.substring(5,7);
                    String Day=VoucherDate.substring(8,10);
                    String Year=VoucherDate.substring(2,4);
                    String BookCode=rsHeader.getString("BOOK_CODE");
                    VoucherType = rsHeader.getInt("VOUCHER_TYPE");
                    
                    
                    //Generate New Reference No.
                    String RefNo= rsHeader.getString("LEGACY_NO"); //EITLERPGLOBAL.Replicate("0", 6-LastNo.length())+LastNo;
                    RefNo = EITLERPGLOBAL.padLeftEx(RefNo, "0", 6);
                    int RefSrNo=0;
                    
                    String Sign,ChequeNo="",BillDate,ChequeDate,Description="",SaleTaxCode,TrAmount,TrSign ="";
                    String BillNo,Yr1_Yr2,PoFlg,AllocationCode,strRefSrNo ="";
                    PoAl="";
                    PoNo="";
                    chrPoNo="";
                    String strQry = "";
                    String Main_acc_code="",Sub_acc_code="",Effect="";
                    
                    if(EITLERP.data.IsRecordExist("SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' AND MAIN_ACCOUNT_CODE<>'' ",FinanceGlobal.FinURL)) { //AND MAIN_ACCOUNT_CODE NOT IN ('231754','241201','241177','241184','241191','231716','231717','241225') AND IS_DEDUCTION<>1
                        //We found the record with both main, take it first
                        strQry = "SELECT * FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+ VoucherNo +"' AND MAIN_ACCOUNT_CODE<>'' ORDER BY EFFECT DESC";
                        
                        ResultSet rsTmp = EITLERP.data.getResult(strQry,FinanceGlobal.FinURL);
                        if (rsTmp.getRow() >0) {
                            rsTmp.first();
                            while (! rsTmp.isAfterLast()) {
                                
                                Effect = UtilFunctions.getString(rsTmp,"EFFECT","");
                                Main_acc_code = UtilFunctions.getString(rsTmp,"MAIN_ACCOUNT_CODE","");
                                if(Main_acc_code.equals("115012")) {
                                    boolean halt=true;
                                }
                                Sub_acc_code = UtilFunctions.getString(rsTmp,"SUB_ACCOUNT_CODE","").trim();
                                String GRNNO =UtilFunctions.getString(rsTmp,"GRN_NO","").trim();
                                int Sr_No = rsTmp.getInt("SR_NO");
                                AllocationCode = "000000";
                                if(Sub_acc_code.trim().equals("")) {
                                    Sub_acc_code="000000";
                                }
                                // Export this entry to Cobol
                                rsCobol.moveToInsertRow();
                                rsCobol.updateString("TR_REC_TYPE", "01");
                                
                                String LinkNo="";
                                String TR_INV_AGSR = "";
                                TR_INV_AGSR = data.getStringValueFromDB("SELECT LINK_NO FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+VoucherNo+"' " +
                                "AND LINK_NO<>'' AND LINK_NO<>'0' AND SR_NO="+Sr_No+" AND IS_DEDUCTION<>1",FinanceGlobal.FinURL);
                                if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                    String InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                           Invoice = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                    String InvoiceDate = UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00").trim();
                                    if(!InvoiceNo.equals("") && (!InvoiceNo.startsWith("DUM"))) {
                                        InvoiceNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+Sub_acc_code+"' ");
                                        if(InvoiceNo.equals("") && Main_acc_code.equals("210010")) {
                                            InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().substring(UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().length()-6);
                                        }
                                        if(InvoiceNo.length()<=6) {
                                            InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                        } else {
                                            InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                        }
                                        if(InvoiceNo.equals("000000")) {
                                            InvoiceNo = RefNo;
                                        }
                                        LinkNo=InvoiceNo;
                                    } else {
                                        if(!TR_INV_AGSR.equals("")) {
                                            String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                            int elementNo = 0;
                                            if(ARRAY_TR_INV_AGSR.length==2) {
                                                elementNo=0;
                                            }
                                            if(ARRAY_TR_INV_AGSR.length==3) {
                                                elementNo=1;
                                            }
                                            if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                                LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                            } else {
                                                LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                            }
                                            if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                                LinkNo = RefNo;
                                            }
                                        } else {
                                            if(InvoiceNo.equals("") && BookCode.equals("21") && VoucherType==11) {
                                                InvoiceNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+GRNNO+"' ",FinanceGlobal.FinURL);
                                                if(InvoiceNo.length()<=6) {
                                                    InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                                } else {
                                                    InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                                }
                                                LinkNo = InvoiceNo;
                                            } else {
                                                LinkNo=RefNo;
                                            }
                                        }
                                    }
                                } else {
                                    LinkNo="000000";
                                }
                                rsCobol.updateString("TR_INV_AGSR", LinkNo);
                                
                                rsCobol.updateString("TR_DIV_CODE", "03");
                                rsCobol.updateString("BOOK_CODE",rsHeader.getString("BOOK_CODE").trim());
                                rsCobol.updateString("TR_YR",Year);
                                rsCobol.updateString("TR_MT",Month);
                                rsCobol.updateString("TR_DT",Day);
                                rsCobol.updateString("TR_REF_AL","  ");
                                rsCobol.updateString("TR_REF_NO",RefNo);
                                rsCobol.updateString("TR_MAIN_CODE",Main_acc_code);
                                rsCobol.updateString("TR_SUB_CODE",Sub_acc_code);
                                
                                //(1) Cheque No. Start ==================================
                                ChequeNo="";
                                if(!UtilFunctions.getString(rsHeader,"CHEQUE_NO","").equals("")) {
                                    ChequeNo=UtilFunctions.getString(rsHeader,"CHEQUE_NO","");
                                    if(ChequeNo.length()>8) {
                                        ChequeNo=ChequeNo.substring(0,8);
                                    } else {
                                        ChequeNo=EITLERPGLOBAL.padLeft(8,ChequeNo, " ");
                                    }
                                } else {
                                    ChequeNo = EITLERPGLOBAL.padLeft(8,ChequeNo, " ");
                                }
                                if(VoucherType==FinanceGlobal.TYPE_LC_JV) {
                                    ChequeNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+GRNNO+"' ",FinanceGlobal.FinURL);
                                    ChequeNo = EITLERPGLOBAL.padLeft(8,ChequeNo, "0");
                                }
                                rsCobol.updateString("TR_CHEQUE_NO", ChequeNo);
                                //==============Cheque No. Over ========================
                                
                                //(2) Cheque/Bill Date =====================================
                                BillDate=UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00");
                                ChequeDate=UtilFunctions.getString(rsHeader,"CHEQUE_DATE","0000-00-00");
                                
                                if(!BillDate.trim().equals("")) {
                                    //rsCobol.updateString("TR_CHQ_BILL_DATE", BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4));
                                    BillDate = BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4);
                                } else {
                                    if(!ChequeDate.trim().equals("")) {
                                        //rsCobol.updateString("TR_CHQ_BILL_DATE", ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4));
                                        BillDate = ChequeDate.substring(8,10)+ChequeDate.substring(5,7)+ChequeDate.substring(2,4);
                                    } else {
                                        //No bill date and cheque date specified
                                        //rsCobol.updateString("TR_CHQ_BILL_DATE","000000");
                                        BillDate = "000000";
                                    }
                                }
                                if(VoucherType==FinanceGlobal.TYPE_LC_JV) {
                                    BillDate = data.getStringValueFromDB("SELECT VALUE_DATE FROM D_FIN_VOUCHER_DETAIL WHERE VOUCHER_NO='"+GRNNO+"' AND MAIN_ACCOUNT_CODE='"+Main_acc_code+"' AND SUB_ACCOUNT_CODE='"+Sub_acc_code+"' ",FinanceGlobal.FinURL);
                                    if(!BillDate.equals("")) {
                                        BillDate = BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4);
                                    } else {
                                        BillDate = data.getStringValueFromDB("SELECT VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+GRNNO+"' ",FinanceGlobal.FinURL);
                                        if(!BillDate.equals("")) {
                                            BillDate = BillDate.substring(8,10)+BillDate.substring(5,7)+BillDate.substring(2,4);
                                        } else {
                                            BillDate = "000000";
                                        }
                                    }
                                    ChequeNo = EITLERPGLOBAL.padLeft(8,ChequeNo, " ");
                                }
                                rsCobol.updateString("TR_CHQ_BILL_DATE",BillDate);
                                //================ Cheque/Bill Date Over =======================
                                
                                //(3) Description ==============================================
                                Description=UtilFunctions.getString(rsHeader,"REMARKS","").replace('\n',' ');
                                if(Description.trim().length()>25) {
                                    Description=Description.trim().substring(0,25);
                                } else {
                                    Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                                }
                                
                                if(Description.trim().length()==0 && (Main_acc_code.equals("125019") || Main_acc_code.equals("125033")))  {
                                    BillNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                    if(BillNo.length()>6) {
                                        BillNo = BillNo.substring(BillNo.length()-6);
                                    } else {
                                        BillNo = EITLERPGLOBAL.padLeft(6,BillNo,"0");
                                    }
                                    Description = "BILLNO."+ BillNo+ " PAID";
                                    Description=EITLERPGLOBAL.padRight(25, Description.trim()," ");
                                }
                                LinkNo="";
                                if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                    String AgentAlpha = clsSalesParty.getAgentAlpha(Sub_acc_code);
                                    if(!AgentAlpha.equals("") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210072"))) {
                                        AgentAlpha+="/";
                                    }
                                    
                                    if(Main_acc_code.equals("210010")) {
                                        AgentAlpha="F /";
                                    }
                                    //UtilFunctions.getString(rsTmp,"LINK_NO"," ").trim()
                                    String InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                    String Invoice = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim();
                                    String InvoiceDate = UtilFunctions.getString(rsTmp,"INVOICE_DATE","0000-00-00").trim();
                                    
                                    System.out.println(InvoiceNo);
                                    System.out.println(Invoice);
                                    
                                    if(!InvoiceNo.equals("") && (!InvoiceNo.startsWith("DUM"))) {
                                        InvoiceNo = data.getStringValueFromDB("SELECT AGENT_SR_NO FROM DINESHMILLS.D_SAL_INVOICE_HEADER WHERE INVOICE_NO='"+InvoiceNo+"' AND INVOICE_DATE='"+InvoiceDate+"' AND PARTY_CODE='"+Sub_acc_code+"' ");
                                        if(InvoiceNo.equals("") && Main_acc_code.equals("210010")) {
                                            InvoiceNo = UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().substring(UtilFunctions.getString(rsTmp,"INVOICE_NO"," ").trim().length()-6);
                                        }
                                        if(InvoiceNo.length()<=6) {
                                            InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                        } else {
                                            InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                        }
                                        if(InvoiceNo.equals("000000")) {
                                            InvoiceNo = RefNo;
                                        }
                                        String YearRef = "";
                                        if(InvoiceDate.equals("") && BookCode.equals("21")) {
                                            InvoiceDate = data.getStringValueFromDB("SELECT LEGACY_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+GRNNO+"' ",FinanceGlobal.FinURL);
                                            YearRef = EITLERPGLOBAL.getFinYearStartDate(InvoiceDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(InvoiceDate).substring(2,4);
                                        } else {
                                            YearRef = EITLERPGLOBAL.getFinYearStartDate(InvoiceDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(InvoiceDate).substring(2,4);
                                        }
                                        LinkNo=AgentAlpha+InvoiceNo+"/"+YearRef;
                                    } else {
                                        String YearRef = "0000";
                                        if(!TR_INV_AGSR.equals("")) {
                                            String ARRAY_TR_INV_AGSR[]  = TR_INV_AGSR.split("/");
                                            int elementNo = 0;
                                            if(ARRAY_TR_INV_AGSR.length==2) {
                                                elementNo=0;
                                            }
                                            if(ARRAY_TR_INV_AGSR.length==3) {
                                                elementNo=1;
                                            }
                                            if(ARRAY_TR_INV_AGSR[elementNo].trim().length() <= 6) {
                                                LinkNo = EITLERPGLOBAL.padLeft(6,ARRAY_TR_INV_AGSR[elementNo].trim(),"0");
                                            } else {
                                                LinkNo = ARRAY_TR_INV_AGSR[elementNo].substring(0,6);
                                            }
                                            if(LinkNo.equals("000000") && (Main_acc_code.equals("210027") || Main_acc_code.equals("210010") || Main_acc_code.equals("210072"))) {
                                                LinkNo = RefNo;
                                            }
                                            YearRef = EITLERPGLOBAL.padLeft(4,ARRAY_TR_INV_AGSR[elementNo+1].trim(),"0");
                                            LinkNo=LinkNo+"/"+YearRef;
                                        } else {
                                            if(InvoiceNo.equals("") && BookCode.equals("21") && VoucherType==11) {
                                                InvoiceNo = data.getStringValueFromDB("SELECT LEGACY_NO FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+GRNNO+"' ",FinanceGlobal.FinURL);
                                                InvoiceDate = data.getStringValueFromDB("SELECT LEGACY_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO='"+GRNNO+"' AND LEGACY_DATE<>'0000-00-00' ",FinanceGlobal.FinURL);
                                                if(!InvoiceDate.equals("")) {
                                                    YearRef = EITLERPGLOBAL.getFinYearStartDate(InvoiceDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(InvoiceDate).substring(2,4);
                                                } else {
                                                    YearRef = "0000";
                                                }
                                                if(InvoiceNo.length()<=6) {
                                                    InvoiceNo = EITLERPGLOBAL.padLeftEx(InvoiceNo, "0", 6);
                                                } else {
                                                    InvoiceNo = InvoiceNo.trim().substring(InvoiceNo.length()-6);
                                                }
                                                LinkNo=InvoiceNo+"/"+YearRef;
                                            } else {
                                                YearRef = EITLERPGLOBAL.getFinYearStartDate(VoucherDate).substring(2,4)+EITLERPGLOBAL.getFinYearEndDate(VoucherDate).substring(2,4);
                                                LinkNo=RefNo+"/"+YearRef;
                                            }
                                        }
                                    }
                                    Description = EITLERPGLOBAL.padRight(25, LinkNo," ");
                                }
                                /*if(VoucherType==FinanceGlobal.TYPE_LC_JV) {
                                    Description = Description.substring(0,Description.length()-2) + GRNNO.substring(4,6);
                                }*/
                                rsCobol.updateString("TR_DESCRIPTION", Description.replace('\n',' '));
     //                             System.out.println(InvoiceNo);
                                    System.out.println(Invoice);
                                 if(BookCode.equals("10")) {
                                rsCobol.updateString("TR_DESCRIPTION", Invoice);  
                               }
                            
                                //==============================================================
                                
                                //(4) Sales Tax Category =========================================
                                rsCobol.updateString("SALETAX_CODE", "00");
                                //===============================================================
                                
                                //(5) Amount ======================================================
                                TrAmount = getAmount(rsTmp.getDouble("AMOUNT"));
                                rsCobol.updateString("TR_AMT", TrAmount);
                                //=================================================================
                                
                                //(6) Amount Sign =====================================================
                                rsCobol.updateString("TR_AMT_SIGN", Effect);
                                // Amount Sign Over ================================================
                                
                                //(7) PO No. and suffix ==============================================
                                PoAl = getPOAlpha(UtilFunctions.getString(rsTmp,"PO_NO","000000"));
                                chrPoAl = PoAl;
                                if (Main_acc_code.equals("125019") ) {
                                    rsCobol.updateString("TR_PO_AL",chrPoAl);  //REQUIRED TO BE CHANGED
                                } else {
                                    rsCobol.updateString("TR_PO_AL","  ");  //REQUIRED TO BE CHANGED
                                }
                                
                                PoNo = getPONo(UtilFunctions.getString(rsTmp,"PO_NO","000000"));
                                chrPoNo = PoNo;
                                chrPoNo =EITLERPGLOBAL.padLeft(6,chrPoNo,"0");
                                
                                if (Main_acc_code.equals("125019") ) {
                                    rsCobol.updateString("TR_PO_NO",chrPoNo); //REQUIRED TO BE CHANGED
                                } else {
                                    rsCobol.updateString("TR_PO_NO","      "); //REQUIRED TO BE CHANGED
                                }
                                //  PO Over ==================================================================
                                
                                //(7) PO Flag ================================================================
                                PoFlg = UtilFunctions.getString(rsTmp,"COMPANY_ID","");
                                if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("2")) {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'",EITLERPGLOBAL.DatabaseURL);
                                } else if (UtilFunctions.getString(rsTmp,"COMPANY_ID","").equals("3")) {
                                    PoFlg = PoFlg + EITLERP.data.getStringValueFromDB("SELECT PO_TYPE FROM D_PUR_PO_HEADER WHERE PO_NO ='" + chrPoNo+"'","jdbc:mysql://200.0.0.227:3306/DINESHMILLS");
                                }
                                rsCobol.updateString("TR_PO_FLG",PoFlg);//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                //(8) Invoice No. ============================================================
                                BillNo= UtilFunctions.getString(rsTmp,"INVOICE_NO","0").trim();
                                String BillAl="";
                                if(VoucherNo.startsWith("DN")) {
                                    BillNo = RefNo;
                                    BillAl = "DN";
                                } else {
                                    BillAl = "  ";
                                }
                                if(BillNo.length()>6) {
                                    BillNo=BillNo.substring(BillNo.length()-6);
                                } else {
                                    BillNo=EITLERPGLOBAL.padLeft(6, BillNo,"0");
                                }
                                rsCobol.updateString("TR_BILL_AL",BillAl);
                                rsCobol.updateString("TR_BILL_NO",BillNo);
                                rsCobol.updateString("TR_PO_FL","  ");
                                //============================================================================
                                
                                //(9) Year ===================================================================
                                Yr1_Yr2="0000";
                                if(Main_acc_code.equals("210027") || Main_acc_code.equals("210072") || Main_acc_code.equals("210010"))  {
                                    Yr1_Yr2 = Description.trim().substring(Description.trim().length()-4);
                                }
                                rsCobol.updateString("TR_INV_Y1Y2",Yr1_Yr2 );//REQUIRED TO BE CHANGED
                                //============================================================================
                                
                                //(10) Reference sr. no. and fixed transaction code ==========================
                                RefSrNo++;
                                strRefSrNo=EITLERPGLOBAL.padLeft(4,Integer.toString(RefSrNo),"0");
                                rsCobol.updateString("TR_REF_SR",strRefSrNo);
                                rsCobol.updateString("TR_TRAN_CODE","000");
                                //============================================================================
                                
                                //**** Find Opposite Entry *********
                                //(11) Allocation Code =======================================================
                                rsCobol.updateString("TR_ALLOC_CODE",AllocationCode);
                                //============================================================================
                                rsCobol.insertRow() ;
                                rsTmp.next();
                            }
                        }
                    }
                    rsVoucher.next();
                }
            }
        } catch(Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }
    
    private String getPOAlpha(String PoNo) {
        String PoAl = PoNo;
        String chrPoAl = "";
        try {
            if(PoAl.equals("")) {
                PoAl ="  ";
            }
            
            if (PoAl.substring(0,1).equals("B")) {
                chrPoAl = "G ";
            } else if (PoAl.substring(0,1).equals("P")) {
                chrPoAl = "P ";
            } else if (PoAl.substring(0,1).equals("W")) {
                chrPoAl = "W ";
            } else if (PoAl.substring(0,1).equals("A")) {
                if(PoAl.substring(0,2).equals("A0")) {
                    chrPoAl = "CP";
                } else {
                    chrPoAl = "A ";
                }
            } else if (PoAl.substring(0,2).equals("A3")) {
                chrPoAl = "CP";
            } else if (PoAl.substring(0,2).equals("D-")) {
                chrPoAl ="D ";
            } else if (PoAl.substring(0,2).equals("I/")) {
                chrPoAl ="I ";
            } else if (PoAl.substring(0,1).toUpperCase().equals("S")){
                chrPoAl ="S ";
            } else if (PoAl.substring(0,2).equals("RM")) {
                chrPoAl ="RM";
            } else if(PoAl.substring(0,1).equals("C")) {
                if(PoAl.substring(0,2).equals("CA")) {
                    chrPoAl ="CA";
                } else {
                    chrPoAl ="C ";
                }
            } else {
                chrPoAl ="  ";
            }
        } catch(Exception e) {
            e.printStackTrace();
            return PoAl;
        }
        return chrPoAl;
    }
    
    private String getPONo(String PoNo) {
        String chrPoNo = "000000";
        try {
            if(PoNo.trim().equals("")) {
                PoNo ="000000";
            }
            
            if (PoNo.substring(0,1).equals("B")) {
                chrPoNo = "B" + PoNo.substring(2,7);
            } else if (PoNo.substring(0,1).equals("W")) {
                chrPoNo = PoNo.substring(1,7);
            } else if (PoNo.substring(0,1).equals("P")) {
                chrPoNo = PoNo.substring(1,7);
            } else if (PoNo.substring(0,1).equals("A")) {
                if (PoNo.substring(0,2).equals("A0")) {
                    chrPoNo ="A" + PoNo.substring(2,PoNo.length());
                } else {
                    chrPoNo ="0"+PoNo.substring(1,PoNo.length());
                }
            } else if (PoNo.substring(0,2).equals("D-")) {
                chrPoNo = PoNo.substring(2,PoNo.length());
            } else if (PoNo.substring(0,2).equals("I/")) {
                chrPoNo = PoNo.substring(2,PoNo.length());
            } else if (PoNo.substring(0,2).toUpperCase().equals("S/")) {
                chrPoNo = "0" + PoNo.substring(2,PoNo.length());
            } else if (PoNo.substring(0,1).equals("C")) {
                if (PoNo.substring(0,2).equals("CA")) {
                    chrPoNo = PoNo.substring(2,PoNo.length());
                } else {
                    chrPoNo = PoNo.substring(1,PoNo.length());
                }
            } else if (PoNo.substring(0,2).equals("RM")) {
                chrPoNo = "0"+PoNo.substring(3,PoNo.length());
            } else {
                chrPoNo = "000000" ;
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            return chrPoNo;
        }
        return chrPoNo;
    }
    
    private String  getAmount(double amt) {
        String TrAmount = "";
        try {
            TrAmount  = new BigDecimal(amt).setScale(2,BigDecimal.ROUND_HALF_UP).toString();
            StringTokenizer st = new StringTokenizer(TrAmount, ".");
            String Amount1 = st.nextToken();
            String Amount2 = EITLERPGLOBAL.padRight(2,st.nextToken(),"0");
            TrAmount = Amount1 + Amount2;
            if(TrAmount.length()>11) {
                TrAmount=TrAmount.substring(0,11);
            } else {
                TrAmount=EITLERPGLOBAL.padLeft(11,TrAmount,"0");
            }
        } catch(Exception e) {
            e.printStackTrace();
            return TrAmount;
        }
        return TrAmount;
    }
}