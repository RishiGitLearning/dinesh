/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  muffy
 */

/*<APPLET CODE=frmMIRGen.class HEIGHT=525 WIDTH=773></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.sql.ResultSet;
import EITLERP.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.math.BigDecimal;

//import EITLERP.Finance.*;

/**
 *
 */
public class frmFASCardwithGRN extends javax.swing.JApplet {
    
    private int EditMode=0;
    
    
    private EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
    private EITLTableCellRenderer CellPainter=new EITLTableCellRenderer();
    
    private HashMap colVariables=new HashMap();
    private HashMap colVariables_H=new HashMap();
    
    String SQL="";
    //    private JEP myParser=new JEP();
    private boolean Updating=false;
    private boolean Updating_H=false;
    private boolean DoNotEvaluate=false;
    
    
    private int SelHierarchyID=0; //Selected Hierarchy
    private int lnFromID=0;
    private String SelPrefix=""; //Selected Prefix
    private String SelSuffix=""; //Selected Prefix
    private int FFNo=0;
    
    private EITLComboModel cmbHierarchyModel;
    
    private EITLTableModel DataModelA;
    private EITLTableModel DataModelHS;
    private EITLTableModel DataModelD;
    private EITLTableModel DataModelO;
    private EITLTableModel DataModelB;
    private EITLTableModel DataModelIT;
    private EITLComboModel cmbToModel;
    
    private boolean HistoryView=false;
    private String theDocNo="";
    public frmPendingApprovals frmPA;
    
    String cellLastValueL="";
    String cellLastValueH="";
    clsFASCardwithGRN ObjFASCard = new clsFASCardwithGRN();
    /** Creates new form frmTemplate */
    public void init() {
        System.gc();
        setSize(810,650);
        initComponents();
        
        //        txtOthersVoucherNo.setVisible(false);
        //        txtOthersVoucherDate.setVisible(false);
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        
        FormatGridD();
        FormatGridB();
        FormatGridIT();
        GenerateCombos();
        FormatGridA();
        FormatGridHS();
        FormatGridOthers();
        ObjFASCard=new clsFASCardwithGRN();
        
        SetMenuForRights();
        
        if(ObjFASCard.LoadData(EITLERPGLOBAL.gCompanyID)) {
            ObjFASCard.MoveLast();
            DisplayData();
        }
        else {
            JOptionPane.showMessageDialog(null,"Error occured while loading data. Error is "+ObjFASCard.LastError);
        }
        
        
        
        //  ObjMIR=new clsMIRGen();
        
        SetMenuForRights();
        
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        mnuSelect = new javax.swing.JPopupMenu();
        mnuSelectPJV = new javax.swing.JMenuItem();
        mnuSelectCustomDuty = new javax.swing.JMenuItem();
        mnuSelectClearing = new javax.swing.JMenuItem();
        mnuSelectFreight = new javax.swing.JMenuItem();
        mnuSelectInstallation = new javax.swing.JMenuItem();
        mnuSelectOthers = new javax.swing.JMenuItem();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        Tab = new javax.swing.JTabbedPane();
        Tab1 = new javax.swing.JPanel();
        lblAssetNo = new javax.swing.JLabel();
        txtAssetNo = new javax.swing.JTextField();
        lblDocDate = new javax.swing.JLabel();
        txtAssetDate = new javax.swing.JTextField();
        lblSupplier = new javax.swing.JLabel();
        txtSupplierID = new javax.swing.JTextField();
        txtSupplierName = new javax.swing.JTextField();
        lblPONo = new javax.swing.JLabel();
        txtPONo = new javax.swing.JTextField();
        lblPODate = new javax.swing.JLabel();
        txtPODate = new javax.swing.JTextField();
        txtPJVAmount = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        txtPJVNo = new javax.swing.JTextField();
        lblInvoiceNo = new javax.swing.JLabel();
        txtInvoiceNo = new javax.swing.JTextField();
        lblInvoiceDate = new javax.swing.JLabel();
        txtInvoiceDate = new javax.swing.JTextField();
        lblNominalCode = new javax.swing.JLabel();
        lblSizeCapacity = new javax.swing.JLabel();
        txtSizeCapacity = new javax.swing.JTextField();
        lblModelNo = new javax.swing.JLabel();
        lblDepartment = new javax.swing.JLabel();
        cmdNext1 = new javax.swing.JButton();
        txtModelNo = new javax.swing.JTextField();
        lblRevNo = new javax.swing.JLabel();
        lblItemID = new javax.swing.JLabel();
        txtItemID = new javax.swing.JTextField();
        lblMachineNo = new javax.swing.JLabel();
        txtNominalCode = new javax.swing.JTextField();
        txtItemDesc = new javax.swing.JTextField();
        txtMachineNo = new javax.swing.JTextField();
        lblPurchaseYear = new javax.swing.JLabel();
        txtPurchaseYear = new javax.swing.JTextField();
        lblExpectedLife = new javax.swing.JLabel();
        txtExpectedLife = new javax.swing.JTextField();
        lblInstallationDate = new javax.swing.JLabel();
        txtInstallationDate = new javax.swing.JTextField();
        lblDisposeDate = new javax.swing.JLabel();
        txtDisposeDate = new javax.swing.JTextField();
        txtDepartmentID = new javax.swing.JTextField();
        txtDepartmentName = new javax.swing.JTextField();
        lblPJV = new javax.swing.JLabel();
        lblCustomDuty = new javax.swing.JLabel();
        lblLable2 = new javax.swing.JLabel();
        lblVoucherNo = new javax.swing.JLabel();
        txtCustomDutyDate = new javax.swing.JTextField();
        lblAmount = new javax.swing.JLabel();
        txtPJVDate = new javax.swing.JTextField();
        txtCustomVoucherNo = new javax.swing.JTextField();
        txtCustomAmount = new javax.swing.JTextField();
        lblLanding = new javax.swing.JLabel();
        lblFreight = new javax.swing.JLabel();
        lblInstallation = new javax.swing.JLabel();
        txtLandingDate = new javax.swing.JTextField();
        txtLandingVoucherNo = new javax.swing.JTextField();
        txtLandingAmount = new javax.swing.JTextField();
        txtFreightDate = new javax.swing.JTextField();
        txtFreightVoucherNo = new javax.swing.JTextField();
        txtFreightAmount = new javax.swing.JTextField();
        txtInstallationVoucherDate = new javax.swing.JTextField();
        txtInstallationVoucherNo = new javax.swing.JTextField();
        txtInstallationVoucherAmount = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        txtFinalAmount = new javax.swing.JTextField();
        txtTotalQty = new javax.swing.JTextField();
        lblTotalQty = new javax.swing.JLabel();
        txtGuarantee = new javax.swing.JTextField();
        lblGuarantee = new javax.swing.JLabel();
        lblWarranty = new javax.swing.JLabel();
        txtWarranty = new javax.swing.JTextField();
        lblOthers = new javax.swing.JLabel();
        txtOthersVoucherDate = new javax.swing.JTextField();
        txtOthersVoucherNo = new javax.swing.JTextField();
        txtOthersVoucherAmount = new javax.swing.JTextField();
        lblRemarks = new javax.swing.JLabel();
        txtRemarks = new javax.swing.JTextField();
        lblSupplier1 = new javax.swing.JLabel();
        cmdRemarksBig = new javax.swing.JButton();
        txtServicetaxAmount = new javax.swing.JTextField();
        lblOthers1 = new javax.swing.JLabel();
        lblDocDate1 = new javax.swing.JLabel();
        txtGrnNo = new javax.swing.JTextField();
        cmdShowVoucher = new javax.swing.JButton();
        cmdAddOthers = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableOthers = new javax.swing.JTable();
        cmdRemoveOthers = new javax.swing.JButton();
        lblAssetDesc = new javax.swing.JLabel();
        txtAssetDesc = new javax.swing.JTextField();
        cmdAssetDescBig1 = new javax.swing.JButton();
        Tab2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableIT = new javax.swing.JTable();
        HeaderPane = new javax.swing.JScrollPane();
        TableD = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        cmdNext2 = new javax.swing.JButton();
        cmdBack2 = new javax.swing.JButton();
        lblColumnTotal = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableB = new javax.swing.JTable();
        lblBookTable = new javax.swing.JLabel();
        lblITTable = new javax.swing.JLabel();
        cmdDisplay = new javax.swing.JButton();
        cmdShowDetail = new javax.swing.JButton();
        lblItemIDDetail = new javax.swing.JLabel();
        Tab3 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        cmbHierarchy = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtFromRemarks = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        OpgApprove = new javax.swing.JRadioButton();
        OpgFinal = new javax.swing.JRadioButton();
        OpgReject = new javax.swing.JRadioButton();
        OpgHold = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        cmbSendTo = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        txtToRemarks = new javax.swing.JTextField();
        cmdBack3 = new javax.swing.JButton();
        cmdFromRemarksBig = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableA = new javax.swing.JTable();
        lblDocumentHistory = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableHS = new javax.swing.JTable();
        cmdViewHistory = new javax.swing.JButton();
        cmdNormalView = new javax.swing.JButton();
        cmdPreviewA = new javax.swing.JButton();
        cmdShowRemarks = new javax.swing.JButton();
        txtAuditRemarks = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();

        mnuSelectPJV.setText("Show  PJV ");
        mnuSelectPJV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSelectPJVActionPerformed(evt);
            }
        });

        mnuSelect.add(mnuSelectPJV);

        mnuSelectCustomDuty.setText("Show Custom Vouhcer");
        mnuSelectCustomDuty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSelectCustomDutyActionPerformed(evt);
            }
        });

        mnuSelect.add(mnuSelectCustomDuty);

        mnuSelectClearing.setText("Show Clearing Voucher");
        mnuSelectClearing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSelectClearingActionPerformed(evt);
            }
        });

        mnuSelect.add(mnuSelectClearing);

        mnuSelectFreight.setText("Show Freight Voucher");
        mnuSelectFreight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSelectFreightActionPerformed(evt);
            }
        });

        mnuSelect.add(mnuSelectFreight);

        mnuSelectInstallation.setText("Show Installation Voucher");
        mnuSelectInstallation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSelectInstallationActionPerformed(evt);
            }
        });

        mnuSelect.add(mnuSelectInstallation);

        mnuSelectOthers.setText("Show Others Voucher");
        mnuSelectOthers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSelectOthersActionPerformed(evt);
            }
        });

        mnuSelect.add(mnuSelectOthers);

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.setNextFocusableComponent(txtWarranty);
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("Fixed Asset Card (With GRN)");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 804, 25);

        Tab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TabFocusLost(evt);
            }
        });

        Tab1.setLayout(null);

        Tab1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Tab1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Tab1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Tab1FocusLost(evt);
            }
        });

        lblAssetNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAssetNo.setText("Asset No : ");
        Tab1.add(lblAssetNo);
        lblAssetNo.setBounds(5, 15, 120, 20);

        txtAssetNo.setNextFocusableComponent(txtAssetDate);
        txtAssetNo.setEnabled(false);
        txtAssetNo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtAssetNoPropertyChange(evt);
            }
        });
        txtAssetNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAssetNoFocusLost(evt);
            }
        });
        txtAssetNo.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtAssetNoInputMethodTextChanged(evt);
            }
        });

        Tab1.add(txtAssetNo);
        txtAssetNo.setBounds(130, 15, 110, 20);

        lblDocDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocDate.setText("Date : ");
        Tab1.add(lblDocDate);
        lblDocDate.setBounds(275, 15, 90, 20);

        txtAssetDate.setName("MIR_DATE");
        txtAssetDate.setNextFocusableComponent(txtItemID);
        txtAssetDate.setEnabled(false);
        txtAssetDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAssetDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAssetDateFocusLost(evt);
            }
        });

        Tab1.add(txtAssetDate);
        txtAssetDate.setBounds(370, 15, 110, 20);

        lblSupplier.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSupplier.setText("Supplier : ");
        Tab1.add(lblSupplier);
        lblSupplier.setBounds(5, 65, 120, 20);

        txtSupplierID.setName("SUPP_ID");
        txtSupplierID.setNextFocusableComponent(txtDepartmentID);
        txtSupplierID.setEnabled(false);
        txtSupplierID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSupplierIDActionPerformed(evt);
            }
        });
        txtSupplierID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSupplierIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSupplierIDFocusLost(evt);
            }
        });
        txtSupplierID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSupplierIDKeyPressed(evt);
            }
        });

        Tab1.add(txtSupplierID);
        txtSupplierID.setBounds(130, 65, 110, 20);

        txtSupplierName.setEnabled(false);
        Tab1.add(txtSupplierName);
        txtSupplierName.setBounds(245, 65, 360, 20);

        lblPONo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPONo.setText("PO No. : ");
        Tab1.add(lblPONo);
        lblPONo.setBounds(5, 140, 120, 20);

        txtPONo.setName("CHALAN_NO");
        txtPONo.setNextFocusableComponent(txtPODate);
        txtPONo.setEnabled(false);
        txtPONo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPONoFocusGained(evt);
            }
        });

        Tab1.add(txtPONo);
        txtPONo.setBounds(130, 140, 110, 20);

        lblPODate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPODate.setText("PO Date : ");
        Tab1.add(lblPODate);
        lblPODate.setBounds(245, 140, 120, 20);

        txtPODate.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPODate.setName("CHALAN_DATE");
        txtPODate.setNextFocusableComponent(txtTotalQty);
        txtPODate.setEnabled(false);
        txtPODate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPODateFocusGained(evt);
            }
        });

        Tab1.add(txtPODate);
        txtPODate.setBounds(370, 140, 110, 20);

        txtPJVAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPJVAmount.setName("LR_NO");
        txtPJVAmount.setNextFocusableComponent(txtCustomVoucherNo);
        txtPJVAmount.setEnabled(false);
        txtPJVAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPJVAmountFocusGained(evt);
            }
        });

        Tab1.add(txtPJVAmount);
        txtPJVAmount.setBounds(360, 305, 100, 20);

        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDate.setText("DATE ");
        Tab1.add(lblDate);
        lblDate.setBounds(245, 285, 120, 15);

        txtPJVNo.setName("LR_DATE");
        txtPJVNo.setNextFocusableComponent(txtPJVDate);
        txtPJVNo.setEnabled(false);
        txtPJVNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPJVNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPJVNoFocusLost(evt);
            }
        });
        txtPJVNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPJVNoKeyPressed(evt);
            }
        });

        Tab1.add(txtPJVNo);
        txtPJVNo.setBounds(130, 305, 120, 20);

        lblInvoiceNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInvoiceNo.setText("Invoice No. : ");
        Tab1.add(lblInvoiceNo);
        lblInvoiceNo.setBounds(5, 165, 120, 20);

        txtInvoiceNo.setName("INVOICE_NO");
        txtInvoiceNo.setNextFocusableComponent(txtInvoiceDate);
        txtInvoiceNo.setEnabled(false);
        txtInvoiceNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtInvoiceNoFocusGained(evt);
            }
        });

        Tab1.add(txtInvoiceNo);
        txtInvoiceNo.setBounds(130, 165, 110, 20);

        lblInvoiceDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInvoiceDate.setText("Invoice Date : ");
        Tab1.add(lblInvoiceDate);
        lblInvoiceDate.setBounds(245, 165, 120, 20);

        txtInvoiceDate.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtInvoiceDate.setName("INVOICE_DATE");
        txtInvoiceDate.setNextFocusableComponent(txtMachineNo);
        txtInvoiceDate.setEnabled(false);
        txtInvoiceDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtInvoiceDateFocusGained(evt);
            }
        });

        Tab1.add(txtInvoiceDate);
        txtInvoiceDate.setBounds(370, 165, 110, 20);

        lblNominalCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNominalCode.setText("Nominal Code : ");
        Tab1.add(lblNominalCode);
        lblNominalCode.setBounds(485, 115, 120, 20);

        lblSizeCapacity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSizeCapacity.setText("Size/Capacity : ");
        Tab1.add(lblSizeCapacity);
        lblSizeCapacity.setBounds(485, 215, 120, 20);

        txtSizeCapacity.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtSizeCapacity.setName("GATEPASS_NO");
        txtSizeCapacity.setNextFocusableComponent(txtRemarks);
        txtSizeCapacity.setEnabled(false);
        txtSizeCapacity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSizeCapacityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSizeCapacityFocusLost(evt);
            }
        });
        txtSizeCapacity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSizeCapacityKeyPressed(evt);
            }
        });

        Tab1.add(txtSizeCapacity);
        txtSizeCapacity.setBounds(610, 215, 110, 20);

        lblModelNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblModelNo.setText("Model No. : ");
        Tab1.add(lblModelNo);
        lblModelNo.setBounds(5, 190, 120, 20);

        lblDepartment.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDepartment.setText("Department : ");
        Tab1.add(lblDepartment);
        lblDepartment.setBounds(-200, 90, 115, 20);

        cmdNext1.setText("Generate Information");
        cmdNext1.setNextFocusableComponent(txtAssetDate);
        cmdNext1.setEnabled(false);
        cmdNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNext1ActionPerformed(evt);
            }
        });
        cmdNext1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmdNext1FocusGained(evt);
            }
        });

        Tab1.add(cmdNext1);
        cmdNext1.setBounds(565, 285, 137, 23);

        txtModelNo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtModelNo.setName("CURRENCY_RATE");
        txtModelNo.setNextFocusableComponent(txtMachineNo);
        txtModelNo.setEnabled(false);
        txtModelNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtModelNoFocusGained(evt);
            }
        });

        Tab1.add(txtModelNo);
        txtModelNo.setBounds(130, 190, 110, 20);

        lblRevNo.setText("...");
        Tab1.add(lblRevNo);
        lblRevNo.setBounds(250, 15, 20, 20);

        lblItemID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblItemID.setText("Item ID : ");
        Tab1.add(lblItemID);
        lblItemID.setBounds(5, 40, 120, 20);

        txtItemID.setName("REFA");
        txtItemID.setNextFocusableComponent(txtSupplierID);
        txtItemID.setEnabled(false);
        txtItemID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtItemIDFocusLost(evt);
            }
        });
        txtItemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemIDKeyPressed(evt);
            }
        });

        Tab1.add(txtItemID);
        txtItemID.setBounds(130, 40, 110, 20);

        lblMachineNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMachineNo.setText("Machine No. : ");
        Tab1.add(lblMachineNo);
        lblMachineNo.setBounds(245, 190, 120, 20);

        txtNominalCode.setName("REMARKS");
        txtNominalCode.setNextFocusableComponent(txtExpectedLife);
        txtNominalCode.setEnabled(false);
        Tab1.add(txtNominalCode);
        txtNominalCode.setBounds(610, 115, 110, 20);

        txtItemDesc.setEnabled(false);
        Tab1.add(txtItemDesc);
        txtItemDesc.setBounds(245, 40, 360, 20);

        txtMachineNo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtMachineNo.setName("CURRENCY_RATE");
        txtMachineNo.setNextFocusableComponent(txtGuarantee);
        txtMachineNo.setEnabled(false);
        txtMachineNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMachineNoFocusGained(evt);
            }
        });

        Tab1.add(txtMachineNo);
        txtMachineNo.setBounds(370, 190, 110, 20);

        lblPurchaseYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPurchaseYear.setText("Year of Purchase : ");
        Tab1.add(lblPurchaseYear);
        lblPurchaseYear.setBounds(485, 140, 120, 20);

        txtPurchaseYear.setName("GATEPASS_NO");
        txtPurchaseYear.setNextFocusableComponent(txtDisposeDate);
        txtPurchaseYear.setEnabled(false);
        Tab1.add(txtPurchaseYear);
        txtPurchaseYear.setBounds(610, 140, 110, 20);

        lblExpectedLife.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblExpectedLife.setText("Expected Life : ");
        Tab1.add(lblExpectedLife);
        lblExpectedLife.setBounds(245, 215, 120, 20);

        txtExpectedLife.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtExpectedLife.setName("GATEPASS_NO");
        txtExpectedLife.setNextFocusableComponent(txtSizeCapacity);
        txtExpectedLife.setEnabled(false);
        txtExpectedLife.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtExpectedLifeFocusGained(evt);
            }
        });

        Tab1.add(txtExpectedLife);
        txtExpectedLife.setBounds(370, 215, 110, 20);

        lblInstallationDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInstallationDate.setText("Installation Date : ");
        Tab1.add(lblInstallationDate);
        lblInstallationDate.setBounds(245, 115, 120, 20);

        txtInstallationDate.setName("GATEPASS_NO");
        txtInstallationDate.setNextFocusableComponent(txtModelNo);
        txtInstallationDate.setEnabled(false);
        txtInstallationDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInstallationDateFocusLost(evt);
            }
        });

        Tab1.add(txtInstallationDate);
        txtInstallationDate.setBounds(370, 115, 110, 20);

        lblDisposeDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDisposeDate.setText("Date Dispose Off : ");
        Tab1.add(lblDisposeDate);
        lblDisposeDate.setBounds(4, 215, 120, 20);

        txtDisposeDate.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtDisposeDate.setName("GATEPASS_NO");
        txtDisposeDate.setNextFocusableComponent(txtExpectedLife);
        txtDisposeDate.setEnabled(false);
        txtDisposeDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDisposeDateFocusGained(evt);
            }
        });

        Tab1.add(txtDisposeDate);
        txtDisposeDate.setBounds(130, 215, 110, 20);

        txtDepartmentID.setName("SUPP_ID");
        txtDepartmentID.setNextFocusableComponent(txtPONo);
        txtDepartmentID.setEnabled(false);
        txtDepartmentID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDepartmentIDFocusLost(evt);
            }
        });
        txtDepartmentID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDepartmentIDKeyPressed(evt);
            }
        });

        Tab1.add(txtDepartmentID);
        txtDepartmentID.setBounds(130, 90, 110, 20);

        txtDepartmentName.setEnabled(false);
        Tab1.add(txtDepartmentName);
        txtDepartmentName.setBounds(245, 90, 360, 20);

        lblPJV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPJV.setText("Purchase JV :");
        Tab1.add(lblPJV);
        lblPJV.setBounds(5, 305, 120, 20);

        lblCustomDuty.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCustomDuty.setText("Custom Duty :");
        Tab1.add(lblCustomDuty);
        lblCustomDuty.setBounds(5, 330, 120, 20);

        lblLable2.setForeground(new java.awt.Color(0, 0, 255));
        lblLable2.setText("Particulars :");
        Tab1.add(lblLable2);
        lblLable2.setBounds(10, 285, 100, 15);

        lblVoucherNo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVoucherNo.setText("VOUCHER NO.");
        Tab1.add(lblVoucherNo);
        lblVoucherNo.setBounds(125, 285, 120, 15);

        txtCustomDutyDate.setName("LR_NO");
        txtCustomDutyDate.setNextFocusableComponent(txtCustomAmount);
        txtCustomDutyDate.setEnabled(false);
        Tab1.add(txtCustomDutyDate);
        txtCustomDutyDate.setBounds(260, 330, 90, 20);

        lblAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAmount.setText("AMOUNT Rs.");
        Tab1.add(lblAmount);
        lblAmount.setBounds(360, 285, 120, 15);

        txtPJVDate.setName("LR_DATE");
        txtPJVDate.setNextFocusableComponent(txtPJVAmount);
        txtPJVDate.setEnabled(false);
        Tab1.add(txtPJVDate);
        txtPJVDate.setBounds(260, 305, 90, 20);

        txtCustomVoucherNo.setName("LR_DATE");
        txtCustomVoucherNo.setNextFocusableComponent(txtCustomDutyDate);
        txtCustomVoucherNo.setEnabled(false);
        txtCustomVoucherNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCustomVoucherNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCustomVoucherNoFocusLost(evt);
            }
        });

        Tab1.add(txtCustomVoucherNo);
        txtCustomVoucherNo.setBounds(130, 330, 120, 20);

        txtCustomAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCustomAmount.setName("LR_DATE");
        txtCustomAmount.setNextFocusableComponent(txtLandingVoucherNo);
        txtCustomAmount.setEnabled(false);
        Tab1.add(txtCustomAmount);
        txtCustomAmount.setBounds(360, 330, 100, 20);

        lblLanding.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLanding.setText("Landing/Clearing  :");
        Tab1.add(lblLanding);
        lblLanding.setBounds(5, 355, 120, 20);

        lblFreight.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFreight.setText("Freight & Octroi :");
        Tab1.add(lblFreight);
        lblFreight.setBounds(5, 380, 120, 20);

        lblInstallation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInstallation.setText("Installation :");
        Tab1.add(lblInstallation);
        lblInstallation.setBounds(5, 405, 120, 20);

        txtLandingDate.setName("LR_NO");
        txtLandingDate.setNextFocusableComponent(txtLandingAmount);
        txtLandingDate.setEnabled(false);
        Tab1.add(txtLandingDate);
        txtLandingDate.setBounds(260, 355, 90, 20);

        txtLandingVoucherNo.setName("LR_DATE");
        txtLandingVoucherNo.setNextFocusableComponent(txtLandingDate);
        txtLandingVoucherNo.setEnabled(false);
        txtLandingVoucherNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLandingVoucherNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLandingVoucherNoFocusLost(evt);
            }
        });

        Tab1.add(txtLandingVoucherNo);
        txtLandingVoucherNo.setBounds(130, 355, 120, 20);

        txtLandingAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtLandingAmount.setName("LR_DATE");
        txtLandingAmount.setNextFocusableComponent(txtFreightVoucherNo);
        txtLandingAmount.setEnabled(false);
        Tab1.add(txtLandingAmount);
        txtLandingAmount.setBounds(360, 355, 100, 20);

        txtFreightDate.setName("LR_NO");
        txtFreightDate.setNextFocusableComponent(txtFreightAmount);
        txtFreightDate.setEnabled(false);
        Tab1.add(txtFreightDate);
        txtFreightDate.setBounds(260, 380, 90, 20);

        txtFreightVoucherNo.setName("LR_DATE");
        txtFreightVoucherNo.setNextFocusableComponent(txtFreightDate);
        txtFreightVoucherNo.setEnabled(false);
        txtFreightVoucherNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFreightVoucherNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFreightVoucherNoFocusLost(evt);
            }
        });

        Tab1.add(txtFreightVoucherNo);
        txtFreightVoucherNo.setBounds(130, 380, 120, 20);

        txtFreightAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFreightAmount.setName("LR_DATE");
        txtFreightAmount.setNextFocusableComponent(txtInstallationVoucherNo);
        txtFreightAmount.setEnabled(false);
        Tab1.add(txtFreightAmount);
        txtFreightAmount.setBounds(360, 380, 100, 20);

        txtInstallationVoucherDate.setName("LR_NO");
        txtInstallationVoucherDate.setNextFocusableComponent(txtInstallationVoucherAmount);
        txtInstallationVoucherDate.setEnabled(false);
        Tab1.add(txtInstallationVoucherDate);
        txtInstallationVoucherDate.setBounds(260, 405, 90, 20);

        txtInstallationVoucherNo.setName("LR_DATE");
        txtInstallationVoucherNo.setNextFocusableComponent(txtInstallationVoucherDate);
        txtInstallationVoucherNo.setEnabled(false);
        txtInstallationVoucherNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtInstallationVoucherNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInstallationVoucherNoFocusLost(evt);
            }
        });

        Tab1.add(txtInstallationVoucherNo);
        txtInstallationVoucherNo.setBounds(130, 405, 120, 20);

        txtInstallationVoucherAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtInstallationVoucherAmount.setName("LR_DATE");
        txtInstallationVoucherAmount.setNextFocusableComponent(txtOthersVoucherNo);
        txtInstallationVoucherAmount.setEnabled(false);
        Tab1.add(txtInstallationVoucherAmount);
        txtInstallationVoucherAmount.setBounds(360, 405, 100, 20);

        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setText("Total : ");
        Tab1.add(lblTotal);
        lblTotal.setBounds(545, 455, 80, 20);

        txtFinalAmount.setBackground(new java.awt.Color(255, 255, 204));
        txtFinalAmount.setEditable(false);
        txtFinalAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFinalAmount.setNextFocusableComponent(cmdNext1);
        Tab1.add(txtFinalAmount);
        txtFinalAmount.setBounds(630, 455, 136, 20);

        txtTotalQty.setNextFocusableComponent(txtNominalCode);
        txtTotalQty.setEnabled(false);
        txtTotalQty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTotalQtyFocusLost(evt);
            }
        });
        txtTotalQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalQtyKeyPressed(evt);
            }
        });

        Tab1.add(txtTotalQty);
        txtTotalQty.setBounds(130, 115, 110, 20);

        lblTotalQty.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalQty.setText("Total Quantity : ");
        Tab1.add(lblTotalQty);
        lblTotalQty.setBounds(5, 115, 120, 20);

        txtGuarantee.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtGuarantee.setName("GATEPASS_NO");
        txtGuarantee.setNextFocusableComponent(txtDisposeDate);
        txtGuarantee.setEnabled(false);
        txtGuarantee.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGuaranteeFocusGained(evt);
            }
        });

        Tab1.add(txtGuarantee);
        txtGuarantee.setBounds(610, 190, 110, 20);

        lblGuarantee.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGuarantee.setText("Guarantee : ");
        Tab1.add(lblGuarantee);
        lblGuarantee.setBounds(485, 190, 120, 20);

        lblWarranty.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblWarranty.setText("Warranty : ");
        Tab1.add(lblWarranty);
        lblWarranty.setBounds(485, 165, 120, 20);

        txtWarranty.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtWarranty.setName("GATEPASS_NO");
        txtWarranty.setNextFocusableComponent(txtModelNo);
        txtWarranty.setEnabled(false);
        txtWarranty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtWarrantyFocusGained(evt);
            }
        });

        Tab1.add(txtWarranty);
        txtWarranty.setBounds(610, 165, 110, 20);

        lblOthers.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOthers.setText("Others :");
        Tab1.add(lblOthers);
        lblOthers.setBounds(5, 430, 120, 20);

        txtOthersVoucherDate.setName("LR_NO");
        txtOthersVoucherDate.setNextFocusableComponent(txtOthersVoucherAmount);
        txtOthersVoucherDate.setEnabled(false);
        Tab1.add(txtOthersVoucherDate);
        txtOthersVoucherDate.setBounds(260, 430, 90, 20);

        txtOthersVoucherNo.setName("LR_DATE");
        txtOthersVoucherNo.setNextFocusableComponent(txtOthersVoucherDate);
        txtOthersVoucherNo.setEnabled(false);
        txtOthersVoucherNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOthersVoucherNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOthersVoucherNoFocusLost(evt);
            }
        });

        Tab1.add(txtOthersVoucherNo);
        txtOthersVoucherNo.setBounds(130, 430, 120, 20);

        txtOthersVoucherAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOthersVoucherAmount.setName("LR_DATE");
        txtOthersVoucherAmount.setNextFocusableComponent(txtFinalAmount);
        txtOthersVoucherAmount.setEnabled(false);
        txtOthersVoucherAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOthersVoucherAmountFocusLost(evt);
            }
        });

        Tab1.add(txtOthersVoucherAmount);
        txtOthersVoucherAmount.setBounds(360, 430, 100, 20);

        lblRemarks.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRemarks.setText(" Remarks : ");
        Tab1.add(lblRemarks);
        lblRemarks.setBounds(5, 240, 120, 20);

        txtRemarks.setName("INVOICE_NO");
        txtRemarks.setNextFocusableComponent(txtPJVNo);
        txtRemarks.setEnabled(false);
        txtRemarks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRemarksFocusGained(evt);
            }
        });

        Tab1.add(txtRemarks);
        txtRemarks.setBounds(130, 240, 475, 20);

        lblSupplier1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSupplier1.setText("Department : ");
        Tab1.add(lblSupplier1);
        lblSupplier1.setBounds(5, 90, 120, 20);

        cmdRemarksBig.setText("...");
        cmdRemarksBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemarksBigActionPerformed(evt);
            }
        });

        Tab1.add(cmdRemarksBig);
        cmdRemarksBig.setBounds(610, 240, 33, 21);

        txtServicetaxAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtServicetaxAmount.setEnabled(false);
        txtServicetaxAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtServicetaxAmountFocusLost(evt);
            }
        });

        Tab1.add(txtServicetaxAmount);
        txtServicetaxAmount.setBounds(360, 455, 100, 20);

        lblOthers1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOthers1.setText("Service Tax : (Deduction)");
        Tab1.add(lblOthers1);
        lblOthers1.setBounds(190, 455, 160, 20);

        lblDocDate1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocDate1.setText("GRN NO. :");
        Tab1.add(lblDocDate1);
        lblDocDate1.setBounds(610, 90, 60, 20);

        txtGrnNo.setName("MIR_DATE");
        txtGrnNo.setNextFocusableComponent(txtItemID);
        txtGrnNo.setEnabled(false);
        Tab1.add(txtGrnNo);
        txtGrnNo.setBounds(675, 90, 100, 20);

        cmdShowVoucher.setText("Show Voucher");
        cmdShowVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowVoucherActionPerformed(evt);
            }
        });

        Tab1.add(cmdShowVoucher);
        cmdShowVoucher.setBounds(20, 455, 140, 22);

        cmdAddOthers.setText("Add");
        cmdAddOthers.setEnabled(false);
        cmdAddOthers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddOthersActionPerformed(evt);
            }
        });

        Tab1.add(cmdAddOthers);
        cmdAddOthers.setBounds(470, 430, 60, 22);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        TableOthers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(TableOthers);

        jPanel2.add(jScrollPane5);
        jScrollPane5.setBounds(0, 0, 310, 100);

        Tab1.add(jPanel2);
        jPanel2.setBounds(470, 325, 310, 100);

        cmdRemoveOthers.setText("Remove");
        cmdRemoveOthers.setEnabled(false);
        cmdRemoveOthers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveOthersActionPerformed(evt);
            }
        });

        Tab1.add(cmdRemoveOthers);
        cmdRemoveOthers.setBounds(540, 430, 90, 22);

        lblAssetDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAssetDesc.setText(" Asset Description : ");
        Tab1.add(lblAssetDesc);
        lblAssetDesc.setBounds(5, 260, 120, 20);

        txtAssetDesc.setName("INVOICE_NO");
        txtAssetDesc.setNextFocusableComponent(txtPJVNo);
        txtAssetDesc.setEnabled(false);
        Tab1.add(txtAssetDesc);
        txtAssetDesc.setBounds(130, 260, 475, 20);

        cmdAssetDescBig1.setText("...");
        cmdAssetDescBig1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAssetDescBig1ActionPerformed(evt);
            }
        });

        Tab1.add(cmdAssetDescBig1);
        cmdAssetDescBig1.setBounds(610, 260, 33, 21);

        Tab.addTab("Header ", Tab1);

        Tab2.setLayout(null);

        Tab2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Tab2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Tab2FocusGained(evt);
            }
        });

        TableIT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableIT.setNextFocusableComponent(TableD);
        TableIT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TableITFocusLost(evt);
            }
        });
        TableIT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableITKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableITKeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(TableIT);

        Tab2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 320, 730, 120);

        TableD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        HeaderPane.setViewportView(TableD);

        Tab2.add(HeaderPane);
        HeaderPane.setBounds(10, 30, 730, 124);

        jLabel20.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel20.setText("Items Details :");
        Tab2.add(jLabel20);
        jLabel20.setBounds(10, 10, 110, 15);

        cmdNext2.setText("Next >>");
        cmdNext2.setNextFocusableComponent(cmdBack2);
        cmdNext2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNext2ActionPerformed(evt);
            }
        });

        Tab2.add(cmdNext2);
        cmdNext2.setBounds(640, 445, 102, 23);

        cmdBack2.setText("<< Back");
        cmdBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBack2ActionPerformed(evt);
            }
        });

        Tab2.add(cmdBack2);
        cmdBack2.setBounds(530, 445, 102, 23);

        lblColumnTotal.setForeground(new java.awt.Color(102, 102, 255));
        lblColumnTotal.setText(".");
        Tab2.add(lblColumnTotal);
        lblColumnTotal.setBounds(7, 218, 250, 14);
        lblColumnTotal.getAccessibleContext().setAccessibleName("lblColumnTotal");

        TableB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableB.setNextFocusableComponent(TableD);
        jScrollPane4.setViewportView(TableB);

        Tab2.add(jScrollPane4);
        jScrollPane4.setBounds(10, 180, 730, 110);

        lblBookTable.setFont(new java.awt.Font("Arial", 1, 12));
        lblBookTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBookTable.setText("Particulars of Cost Depreciation of BOOK Value");
        Tab2.add(lblBookTable);
        lblBookTable.setBounds(10, 160, 470, 15);

        lblITTable.setFont(new java.awt.Font("Arial", 1, 12));
        lblITTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblITTable.setText("Particulars of Cost Depreciation of Income Tax Value");
        Tab2.add(lblITTable);
        lblITTable.setBounds(10, 300, 490, 15);

        cmdDisplay.setText("Display");
        cmdDisplay.setEnabled(false);
        cmdDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDisplayActionPerformed(evt);
            }
        });

        Tab2.add(cmdDisplay);
        cmdDisplay.setBounds(580, 157, 90, 20);

        cmdShowDetail.setText("Show");
        cmdShowDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowDetailActionPerformed(evt);
            }
        });

        Tab2.add(cmdShowDetail);
        cmdShowDetail.setBounds(490, 157, 59, 20);

        lblItemIDDetail.setText("....");
        Tab2.add(lblItemIDDetail);
        lblItemIDDetail.setBounds(120, 10, 110, 14);

        Tab.addTab("Item Information", Tab2);

        Tab3.setLayout(null);

        Tab3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Tab3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Tab3FocusGained(evt);
            }
        });

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Hierarchy");
        Tab3.add(jLabel31);
        jLabel31.setBounds(10, 15, 110, 20);

        cmbHierarchy.setEditable(true);
        cmbHierarchy.setNextFocusableComponent(OpgApprove);
        cmbHierarchy.setEnabled(false);
        cmbHierarchy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbHierarchyItemStateChanged(evt);
            }
        });
        cmbHierarchy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbHierarchyFocusGained(evt);
            }
        });

        Tab3.add(cmbHierarchy);
        cmbHierarchy.setBounds(125, 14, 184, 22);

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("From");
        Tab3.add(jLabel32);
        jLabel32.setBounds(10, 50, 110, 20);

        txtFrom.setBackground(new java.awt.Color(204, 204, 204));
        Tab3.add(txtFrom);
        txtFrom.setBounds(125, 50, 182, 19);

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Remarks");
        Tab3.add(jLabel35);
        jLabel35.setBounds(10, 80, 110, 20);

        txtFromRemarks.setBackground(new java.awt.Color(204, 204, 204));
        txtFromRemarks.setEnabled(false);
        Tab3.add(txtFromRemarks);
        txtFromRemarks.setBounds(125, 78, 518, 19);

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Your Action");
        Tab3.add(jLabel36);
        jLabel36.setBounds(10, 124, 110, 20);

        jPanel6.setLayout(null);

        jPanel6.setBorder(new javax.swing.border.EtchedBorder());
        OpgApprove.setText("Approve & Forward");
        buttonGroup1.add(OpgApprove);
        OpgApprove.setNextFocusableComponent(OpgFinal);
        OpgApprove.setEnabled(false);
        OpgApprove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgApproveMouseClicked(evt);
            }
        });
        OpgApprove.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgApproveFocusGained(evt);
            }
        });

        jPanel6.add(OpgApprove);
        OpgApprove.setBounds(6, 6, 169, 23);

        OpgFinal.setText("Final Approve");
        buttonGroup1.add(OpgFinal);
        OpgFinal.setNextFocusableComponent(OpgReject);
        OpgFinal.setEnabled(false);
        OpgFinal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgFinalMouseClicked(evt);
            }
        });
        OpgFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgFinalFocusGained(evt);
            }
        });

        jPanel6.add(OpgFinal);
        OpgFinal.setBounds(6, 32, 136, 20);

        OpgReject.setText("Reject");
        buttonGroup1.add(OpgReject);
        OpgReject.setNextFocusableComponent(OpgHold);
        OpgReject.setEnabled(false);
        OpgReject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgRejectMouseClicked(evt);
            }
        });
        OpgReject.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgRejectFocusGained(evt);
            }
        });

        jPanel6.add(OpgReject);
        OpgReject.setBounds(6, 54, 136, 20);

        OpgHold.setSelected(true);
        OpgHold.setText("Hold Document");
        buttonGroup1.add(OpgHold);
        OpgHold.setNextFocusableComponent(cmbSendTo);
        OpgHold.setEnabled(false);
        OpgHold.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpgHoldMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                OpgHoldMouseEntered(evt);
            }
        });
        OpgHold.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OpgHoldFocusGained(evt);
            }
        });

        jPanel6.add(OpgHold);
        OpgHold.setBounds(6, 76, 136, 20);

        Tab3.add(jPanel6);
        jPanel6.setBounds(125, 120, 182, 100);

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Send To");
        Tab3.add(jLabel33);
        jLabel33.setBounds(10, 228, 110, 20);

        cmbSendTo.setNextFocusableComponent(txtToRemarks);
        cmbSendTo.setEnabled(false);
        cmbSendTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbSendToFocusGained(evt);
            }
        });

        Tab3.add(cmbSendTo);
        cmbSendTo.setBounds(125, 226, 184, 22);

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Remarks");
        Tab3.add(jLabel34);
        jLabel34.setBounds(10, 264, 110, 20);

        txtToRemarks.setNextFocusableComponent(cmdBack3);
        txtToRemarks.setEnabled(false);
        txtToRemarks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToRemarksFocusGained(evt);
            }
        });

        Tab3.add(txtToRemarks);
        txtToRemarks.setBounds(125, 260, 516, 19);

        cmdBack3.setText("<< Back");
        cmdBack3.setNextFocusableComponent(cmbHierarchy);
        cmdBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBack3ActionPerformed(evt);
            }
        });

        Tab3.add(cmdBack3);
        cmdBack3.setBounds(634, 322, 102, 23);

        cmdFromRemarksBig.setText("...");
        cmdFromRemarksBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFromRemarksBigActionPerformed(evt);
            }
        });

        Tab3.add(cmdFromRemarksBig);
        cmdFromRemarksBig.setBounds(650, 76, 37, 22);

        Tab.addTab("Approval", Tab3);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel26.setText("Document Approval Status");
        jPanel1.add(jLabel26);
        jLabel26.setBounds(12, 10, 242, 14);

        TableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TableA);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(12, 40, 700, 144);

        lblDocumentHistory.setText("Document Update History");
        jPanel1.add(lblDocumentHistory);
        lblDocumentHistory.setBounds(13, 193, 182, 14);

        TableHS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TableHS);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(13, 209, 551, 138);

        cmdViewHistory.setText("View Revisions");
        cmdViewHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdViewHistoryActionPerformed(evt);
            }
        });

        jPanel1.add(cmdViewHistory);
        cmdViewHistory.setBounds(577, 238, 132, 24);

        cmdNormalView.setText("Back to Normal");
        cmdNormalView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNormalViewActionPerformed(evt);
            }
        });

        jPanel1.add(cmdNormalView);
        cmdNormalView.setBounds(577, 269, 132, 24);

        cmdPreviewA.setText("Preview Report");
        cmdPreviewA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewAActionPerformed(evt);
            }
        });

        jPanel1.add(cmdPreviewA);
        cmdPreviewA.setBounds(577, 209, 132, 24);

        cmdShowRemarks.setText("Show Remarks");
        cmdShowRemarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowRemarksActionPerformed(evt);
            }
        });

        jPanel1.add(cmdShowRemarks);
        cmdShowRemarks.setBounds(577, 299, 132, 24);

        txtAuditRemarks.setEnabled(false);
        jPanel1.add(txtAuditRemarks);
        txtAuditRemarks.setBounds(574, 335, 129, 19);

        Tab.addTab("Status", jPanel1);

        getContentPane().add(Tab);
        Tab.setBounds(4, 68, 790, 510);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 585, 790, 22);

    }//GEN-END:initComponents
    
    private void cmdAssetDescBig1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAssetDescBig1ActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtAssetDesc;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_cmdAssetDescBig1ActionPerformed
    
    private void cmdRemoveOthersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveOthersActionPerformed
        // TODO add your handling code here:
        
        if(TableOthers.getRowCount()>0) {
            DataModelO.removeRow(TableOthers.getSelectedRow());
        }
    }//GEN-LAST:event_cmdRemoveOthersActionPerformed
    
    private void cmdAddOthersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddOthersActionPerformed
        // TODO add your handling code here:
        
        SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
        "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
        "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.APPROVED = 1 AND A.CANCELLED = 0 "+
        "AND A.VOUCHER_NO = '" + txtOthersVoucherNo.getText().trim() + "' AND B.EFFECT ='C' ";
        
        
        if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
            JOptionPane.showMessageDialog(null,"Invalid Voucher No.");
            return;
        }
        
        
        for(int i=0;i< TableOthers.getRowCount() ;i++) {
            String VoucherNo=TableOthers.getValueAt(i,1).toString();
            
            if(txtOthersVoucherNo.getText().trim().equals(VoucherNo)) {
                JOptionPane.showMessageDialog(null,"VoucherNo is Already Add.");
                return;
            }
            System.out.println(VoucherNo);
        }
        // ALREADY VOUCHER IN OTEHR VOUCHER TABLE
        
        double  CurrentAmount = 0.0;
        double  Amount = 0.0;
        
        
        if(!txtOthersVoucherNo.getText().toString().trim().equals("")) {
            CurrentAmount= Double.parseDouble(txtOthersVoucherAmount.getText().toString().trim());
            
            
            SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtOthersVoucherNo.getText().toString().trim() + "' "+
            "AND B.EFFECT ='C' ";//AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "'
            
            if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Invalid Other Vocuher No.");
                return;
            }
            
            SQL="SELECT SUM(B.AMOUNT) "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtOthersVoucherNo.getText().toString().trim() + "' "+
            "AND B.EFFECT ='C' ";//AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "'
            
            Amount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
            
            SQL ="SELECT SUM(A.OTHERS_VOUCHER_AMOUNT) "+
            "FROM D_FAS_OTHER_VOUCHER A,D_FAS_MASTER_HEADER B "+
            "WHERE A.OTHERS_VOUCHER_NO = '" + txtOthersVoucherNo.getText().toString().trim() + "' "+
            "AND A.ASSET_NO <> '" + txtAssetNo.getText().trim() + "' AND A.ASSET_NO = B.ASSET_NO AND B.CANCELLED = 0 ";
            
            
            if(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL) + CurrentAmount > Amount) {
                JOptionPane.showMessageDialog(null,"Amount of Others Voucher NO. '"+txtOthersVoucherNo.getText().toString().trim()+"' is already used.");
                return;
            }
            
            //////////////////////
            if(txtPJVNo.getText().toString().trim().equals(txtOthersVoucherNo.getText().toString().trim())) {
                JOptionPane.showMessageDialog(null,"Amount of Others Voucher NO. '"+txtOthersVoucherNo.getText().toString().trim()+"' is already used in PJV.");
                return;
            }
            if(txtCustomVoucherNo.getText().toString().trim().equals(txtOthersVoucherNo.getText().toString().trim())) {
                JOptionPane.showMessageDialog(null,"Amount of Others Voucher NO. '"+txtOthersVoucherNo.getText().toString().trim()+"' is already used in Custom Voucher.");
                return;
            }
            if(txtLandingVoucherNo.getText().toString().trim().equals(txtOthersVoucherNo.getText().toString().trim())) {
                JOptionPane.showMessageDialog(null,"Amount of Others Voucher NO. '"+txtOthersVoucherNo.getText().toString().trim()+"' is already used in LandingVoucher.");
                return;
            }
            if(txtInstallationVoucherNo.getText().toString().trim().equals(txtOthersVoucherNo.getText().toString().trim())) {
                JOptionPane.showMessageDialog(null,"Amount of Others Voucher NO. '"+txtOthersVoucherNo.getText().toString().trim()+"' is already used in Installation Voucher.");
                return;
            }
            if(txtFreightVoucherNo.getText().toString().trim().equals(txtOthersVoucherNo.getText().toString().trim())) {
                JOptionPane.showMessageDialog(null,"Amount of Others Voucher NO. '"+txtOthersVoucherNo.getText().toString().trim()+"' is already used in Freight Voucher.");
                return;
            }
            
        }
        
        
        int i =  TableOthers.getRowCount();
        Object[] rowData=new Object[4];
        rowData[0]= i+1;
        rowData[1]=txtOthersVoucherNo.getText().trim();
        
        String QRY="SELECT VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND APPROVED = 1 AND CANCELLED = 0 AND VOUCHER_NO = '" + txtOthersVoucherNo.getText().trim() + "'";
        rowData[2]=EITLERPGLOBAL.formatDate(data.getStringValueFromDB(QRY,FinanceGlobal.FinURL));
        
        QRY = "SELECT  AMOUNT FROM D_FIN_VOUCHER_DETAIL "+
        "WHERE COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND  EFFECT = 'C' "+
        "AND VOUCHER_NO = '" + txtOthersVoucherNo.getText().trim() + "' ";
        rowData[3]=data.getStringValueFromDB(QRY,FinanceGlobal.FinURL);
        
        DataModelO.addRow(rowData);
        CalculateTotalAmount();
        txtOthersVoucherAmount.setText("0");
        txtOthersVoucherDate.setText("");
        txtOthersVoucherNo.setText("");
        
        
    }//GEN-LAST:event_cmdAddOthersActionPerformed
    
    private void mnuSelectOthersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSelectOthersActionPerformed
        // TODO add your handling code here:
        
        if(TableOthers.getSelectedRow() != -1) {
            String DocNo = TableOthers.getValueAt(TableOthers. getSelectedRow(), 1).toString();
            clsVoucher.OpenVoucher(DocNo, null);
            
        } else {
            JOptionPane.showMessageDialog(null,"Please select record.");
            return;
        }
        
        
    }//GEN-LAST:event_mnuSelectOthersActionPerformed
    
    private void mnuSelectInstallationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSelectInstallationActionPerformed
        // TODO add your handling code here:
        if(!txtInstallationVoucherNo.getText().equals("")) {
            String DocNo= txtInstallationVoucherNo.getText();
            clsVoucher.OpenVoucher(DocNo, null);
        }
        else {
            JOptionPane.showMessageDialog(null,"Voucher Not Found");
            return;
        }
    }//GEN-LAST:event_mnuSelectInstallationActionPerformed
    
    private void mnuSelectFreightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSelectFreightActionPerformed
        // TODO add your handling code here:
        if(!txtFreightVoucherNo.getText().equals("")) {
            String DocNo= txtFreightVoucherNo.getText();
            clsVoucher.OpenVoucher(DocNo, null);
        }
        else {
            JOptionPane.showMessageDialog(null,"Voucher Not Found");
            return;
        }
    }//GEN-LAST:event_mnuSelectFreightActionPerformed
    
    private void mnuSelectClearingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSelectClearingActionPerformed
        // TODO add your handling code here:
        if(!txtLandingVoucherNo.getText().equals("")) {
            String DocNo= txtLandingVoucherNo.getText();
            clsVoucher.OpenVoucher(DocNo, null);
        }
        else {
            JOptionPane.showMessageDialog(null,"Voucher Not Found");
            return;
        }
    }//GEN-LAST:event_mnuSelectClearingActionPerformed
    
    private void mnuSelectCustomDutyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSelectCustomDutyActionPerformed
        // TODO add your handling code here:
        if(!txtCustomVoucherNo.getText().equals("")) {
            String DocNo= txtCustomVoucherNo.getText();
            clsVoucher.OpenVoucher(DocNo, null);
        }
        else {
            JOptionPane.showMessageDialog(null,"Voucher Not Found");
            return;
        }
    }//GEN-LAST:event_mnuSelectCustomDutyActionPerformed
    
    private void mnuSelectPJVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSelectPJVActionPerformed
        // TODO add your handling code here:
        if(!txtPJVNo.getText().equals("")) {
            String DocNo= txtPJVNo.getText();
            clsVoucher.OpenVoucher(DocNo, null);
        }
        else {
            JOptionPane.showMessageDialog(null,"Voucher Not Found");
            return;
        }
    }//GEN-LAST:event_mnuSelectPJVActionPerformed
    
    private void cmdShowVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowVoucherActionPerformed
        // TODO add your handling code here:
        
        mnuSelect.show(Tab1, cmdShowVoucher.getX(), cmdShowVoucher.getY()+cmdShowVoucher.getHeight());
        
    }//GEN-LAST:event_cmdShowVoucherActionPerformed
    
    private void txtServicetaxAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtServicetaxAmountFocusLost
        // TODO add your handling code here:
        if(!EITLERPGLOBAL.IsNumber(txtServicetaxAmount.getText().trim())) {
            txtServicetaxAmount.setText("0.0");
        }
        CalculateTotalAmount();
    }//GEN-LAST:event_txtServicetaxAmountFocusLost
    
    private void txtOthersVoucherAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOthersVoucherAmountFocusLost
        // TODO add your handling code here:
        //        if(!EITLERPGLOBAL.IsNumber(txtOthersVoucherAmount.getText().trim())) {
        //            txtOthersVoucherAmount.setText("0.0");
        //        }
        //        CalculateTotalAmount();
    }//GEN-LAST:event_txtOthersVoucherAmountFocusLost
/*
    private void (java.awt.event.FocusEvent evt) {//GEN-FIRST:event_
        // TODO add your handling code here:
    }//GEN-LAST:event_
 */
    private void cmdNext1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmdNext1FocusGained
        // TODO add your handling code here:
        ShowMessage("Click on Generate Information for Calculation ....");
    }//GEN-LAST:event_cmdNext1FocusGained
    
    private void txtModelNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtModelNoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Model Number ....");
    }//GEN-LAST:event_txtModelNoFocusGained
    
    private void txtMachineNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMachineNoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Machine Number ....");
    }//GEN-LAST:event_txtMachineNoFocusGained
    
    private void txtWarrantyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWarrantyFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Warraty Period ....");
    }//GEN-LAST:event_txtWarrantyFocusGained
    
    private void txtGuaranteeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGuaranteeFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Guarantee Period ....");
    }//GEN-LAST:event_txtGuaranteeFocusGained
    
    private void txtExpectedLifeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtExpectedLifeFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Expected Life  ....");
    }//GEN-LAST:event_txtExpectedLifeFocusGained
    
    private void txtDisposeDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDisposeDateFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Dispose off Date ....");
    }//GEN-LAST:event_txtDisposeDateFocusGained
    
    private void txtRemarksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRemarksFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Remarks ....");
    }//GEN-LAST:event_txtRemarksFocusGained
    
    private void txtOthersVoucherNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOthersVoucherNoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Others Voucher Number ....");
    }//GEN-LAST:event_txtOthersVoucherNoFocusGained
    
    private void txtInstallationVoucherNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInstallationVoucherNoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Installation Voucher Number ....");
    }//GEN-LAST:event_txtInstallationVoucherNoFocusGained
    
    private void txtFreightVoucherNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFreightVoucherNoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Fright or Octrio Voucher Number ....");
    }//GEN-LAST:event_txtFreightVoucherNoFocusGained
    
    private void txtLandingVoucherNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLandingVoucherNoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Landing or Clearing Voucher Number ....");
    }//GEN-LAST:event_txtLandingVoucherNoFocusGained
    
    private void txtCustomVoucherNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustomVoucherNoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Custom Voucher Number ....");
    }//GEN-LAST:event_txtCustomVoucherNoFocusGained
    
    private void cmdRemarksBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemarksBigActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtFromRemarks;
        bigEdit.ShowEdit();
        
    }//GEN-LAST:event_cmdRemarksBigActionPerformed
    
    private void txtAssetDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAssetDateFocusLost
        // TODO add your handling code here:
        
        if(!txtAssetDate.getText().trim().equals("")) {
            if(!EITLERPGLOBAL.isDate(txtAssetDate.getText().trim())) {
                JOptionPane.showMessageDialog(null,"Please enter Valid Asset Date");
                return;
            }
        }
        txtInstallationDate.setText(txtAssetDate.getText().trim());
        
        
    }//GEN-LAST:event_txtAssetDateFocusLost
    
    private void txtInstallationDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInstallationDateFocusLost
        // TODO add your handling code here:
        if(!txtInstallationDate.getText().trim().equals("")) {
            if(!EITLERPGLOBAL.isDate(txtInstallationDate.getText().trim())) {
                JOptionPane.showMessageDialog(null,"Please enter Valid Installation Date");
                return;
            }
        }
        txtAssetDate.setText(txtInstallationDate.getText().trim());
    }//GEN-LAST:event_txtInstallationDateFocusLost
    
    private void txtPJVNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPJVNoKeyPressed
        // TODO add your handling code here:
        
        //        if(evt.getKeyCode()==112) //F1 Key pressed
        //        {
        //            LOV aList=new LOV();
        //
        //            aList.SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
        //            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
        //            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_TYPE = 1 "+
        //            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
        //            aList.ReturnCol=1;
        //            aList.SecondCol=3;
        //            aList.UseSpecifiedConn=true;
        //            aList.dbURL = FinanceGlobal.FinURL;
        //            aList.ShowReturnCol=true;
        //            aList.DefaultSearchOn=2;
        //
        //            if(aList.ShowLOV()) {
        //                txtPJVAmount.setText(aList.SecondVal);
        //                txtPJVDate.setText(EITLERPGLOBAL.formatDate(data.getStringValueFromDB("SELECT VOUCHER_DATE FROM D_FIN_VOUCHER_HEADER WHERE VOUCHER_NO = '" + aList.ReturnVal + "' ",FinanceGlobal.FinURL)));
        //                txtPJVNo.setText(aList.ReturnVal);
        //            }
        //        }
        
    }//GEN-LAST:event_txtPJVNoKeyPressed
    
    private void Tab1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab1FocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Tab1FocusLost
    
    private void TabFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TabFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TabFocusLost
    
    private void cmdShowDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowDetailActionPerformed
        // TODO add your handling code here:
        Show();
    }//GEN-LAST:event_cmdShowDetailActionPerformed
    
    private void txtOthersVoucherNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOthersVoucherNoFocusLost
        // TODO add your handling code here:
        // CalculateTotalAmount();
        //        cmdAddOthers.setEnabled(true);
        //        cmdRemoveOthers.setEnabled(true);
        
        try {
            if(!txtOthersVoucherNo.getText().trim().equals("")) {
                SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
                "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
                "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO "+//AND A.VOUCHER_TYPE = 1
                "AND A.VOUCHER_NO = '" + txtOthersVoucherNo.getText().trim() + "' AND B.EFFECT ='C' ";//AND B.SUB_ACCOUNT_CODE <> '' ";//B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
                
                
                
                if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,"Invalid Voucher No.");
                    txtOthersVoucherAmount.setText("0.0");
                    txtOthersVoucherDate.setText("");
                    txtOthersVoucherNo.setText("");
                    return;
                }
                else {
                    ResultSet tmp = data.getResult(SQL,FinanceGlobal.FinURL);
                    txtOthersVoucherAmount.setText(tmp.getString("AMOUNT"));
                    txtOthersVoucherDate.setText(EITLERPGLOBAL.formatDate(tmp.getString("VOUCHER_DATE")));
                    //txtPJVNo.setText(tmp.getString("VOUCHER"));
                }
            }
            else {
                txtOthersVoucherAmount.setText("0.0");
                txtOthersVoucherDate.setText("");
                txtOthersVoucherNo.setText("");
            }
            //}
            CalculateTotalAmount();
        }
        catch(Exception e) {
            
        }
        
        CalculateTotalAmount();
        
    }//GEN-LAST:event_txtOthersVoucherNoFocusLost
    
    private void txtInstallationVoucherNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInstallationVoucherNoFocusLost
        // TODO add your handling code here:
        try {
            if(!txtInstallationVoucherNo.getText().trim().equals("")) {
                SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
                "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
                "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_TYPE = 1 "+
                "AND A.VOUCHER_NO = '" + txtInstallationVoucherNo.getText().trim() + "' AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
                
                
                if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,"Invalid Voucher No.");
                    txtInstallationVoucherAmount.setText("0.0");
                    txtInstallationVoucherDate.setText("");
                    txtInstallationVoucherNo.setText("");
                    return;
                }
                else {
                    ResultSet tmp = data.getResult(SQL,FinanceGlobal.FinURL);
                    txtInstallationVoucherAmount.setText(tmp.getString("AMOUNT"));
                    txtInstallationVoucherDate.setText(EITLERPGLOBAL.formatDate(tmp.getString("VOUCHER_DATE")));
                    //txtPJVNo.setText(tmp.getString("VOUCHER"));
                }
            }
            else {
                txtInstallationVoucherAmount.setText("0.0");
                txtInstallationVoucherDate.setText("");
                txtInstallationVoucherNo.setText("");
            }
            //}
            CalculateTotalAmount();
        }
        catch(Exception e) {
            
        }
        
        CalculateTotalAmount();
    }//GEN-LAST:event_txtInstallationVoucherNoFocusLost
    
    private void txtFreightVoucherNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFreightVoucherNoFocusLost
        // TODO add your handling code here:
        
        try {
            if(!txtFreightVoucherNo.getText().trim().equals("")) {
                SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
                "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
                "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_TYPE = 1 "+
                "AND A.VOUCHER_NO = '" + txtFreightVoucherNo.getText().trim() + "' AND B.EFFECT ='C'  ";
                
                
                if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,"Invalid Voucher No.");
                    txtFreightAmount.setText("0.0");
                    txtFreightDate.setText("");
                    txtFreightVoucherNo.setText("");
                    return;
                }
                else {
                    ResultSet tmp = data.getResult(SQL,FinanceGlobal.FinURL);
                    txtFreightAmount.setText(tmp.getString("AMOUNT"));
                    txtFreightDate.setText(EITLERPGLOBAL.formatDate(tmp.getString("VOUCHER_DATE")));
                    //txtPJVNo.setText(tmp.getString("VOUCHER"));
                }
            }
            else {
                txtFreightAmount.setText("0.0");
                txtFreightDate.setText("");
                txtFreightVoucherNo.setText("");
            }
            //}
            CalculateTotalAmount();
        }
        catch(Exception e) {
            
        }
        CalculateTotalAmount();
    }//GEN-LAST:event_txtFreightVoucherNoFocusLost
    
    private void txtLandingVoucherNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLandingVoucherNoFocusLost
        // TODO add your handling code here:
        try {
            if(!txtLandingVoucherNo.getText().trim().equals("")) {
                SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
                "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
                "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_TYPE = 1 "+
                "AND A.VOUCHER_NO = '" + txtLandingVoucherNo.getText().trim() + "' AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE <> '' ";
                
                
                if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,"Invalid Voucher No.");
                    txtLandingAmount.setText("0.0");
                    txtLandingDate.setText("");
                    txtLandingVoucherNo.setText("");
                    return;
                }
                else {
                    ResultSet tmp = data.getResult(SQL,FinanceGlobal.FinURL);
                    txtLandingAmount.setText(tmp.getString("AMOUNT"));
                    txtLandingDate.setText(EITLERPGLOBAL.formatDate(tmp.getString("VOUCHER_DATE")));
                    //txtPJVNo.setText(tmp.getString("VOUCHER"));
                }
            }
            else {
                txtLandingAmount.setText("0.0");
                txtLandingDate.setText("");
                txtLandingVoucherNo.setText("");
            }
            //}
            CalculateTotalAmount();
        }
        catch(Exception e) {
            
        }
        
        CalculateTotalAmount();
    }//GEN-LAST:event_txtLandingVoucherNoFocusLost
    
    private void txtCustomVoucherNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustomVoucherNoFocusLost
        // TODO add your handling code here:
        //CalculateTotalAmount();
        
        try {
            if(!txtCustomVoucherNo.getText().trim().equals("")) {
                SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
                "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
                "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_TYPE = 1 "+
                "AND A.VOUCHER_NO = '" + txtCustomVoucherNo.getText().trim() + "' AND B.EFFECT ='C' ";
                
                
                if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,"Invalid Voucher No.");
                    txtCustomAmount.setText("0.0");
                    txtCustomDutyDate.setText("");
                    txtCustomVoucherNo.setText("");
                    return;
                }
                else {
                    ResultSet tmp = data.getResult(SQL,FinanceGlobal.FinURL);
                    txtCustomAmount.setText(tmp.getString("AMOUNT"));
                    txtCustomDutyDate.setText(EITLERPGLOBAL.formatDate(tmp.getString("VOUCHER_DATE")));
                    //txtPJVNo.setText(tmp.getString("VOUCHER"));
                }
            }
            else {
                txtCustomAmount.setText("0.0");
                txtCustomDutyDate.setText("");
                txtCustomVoucherNo.setText("");
            }
            //}
            CalculateTotalAmount();
        }
        catch(Exception e) {
            
        }
        
        CalculateTotalAmount();
    }//GEN-LAST:event_txtCustomVoucherNoFocusLost
    
    private void txtPJVNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPJVNoFocusLost
        // TODO add your handling code here:
        
        //if(evt.getKeyCode()==112) //F1 Key pressed
        //{
        //  LOV aList=new LOV();
        try {
            if(!txtPJVNo.getText().trim().equals("")) {
                SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
                "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
                "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_TYPE = 1 "+
                "AND A.VOUCHER_NO = '" + txtPJVNo.getText().trim() + "' AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
                
                
                if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                    JOptionPane.showMessageDialog(null,"Invalid Voucher No.");
                    txtPJVAmount.setText("0.0");
                    txtPJVDate.setText("");
                    txtPJVNo.setText("");
                    return;
                }
                else {
                    ResultSet tmp = data.getResult(SQL,FinanceGlobal.FinURL);
                    txtPJVAmount.setText(tmp.getString("AMOUNT"));
                    txtPJVDate.setText(EITLERPGLOBAL.formatDateDB(tmp.getString("VOUCHER_DATE")));
                    //txtPJVNo.setText(tmp.getString("VOUCHER"));
                }
            }
            else {
                txtPJVAmount.setText("0.0");
                txtPJVDate.setText("");
                txtPJVNo.setText("");
            }
            //}
            CalculateTotalAmount();
        }
        catch(Exception e) {
            
        }
        
    }//GEN-LAST:event_txtPJVNoFocusLost
    
    private void cmdDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDisplayActionPerformed
        // TODO add your handling code here:
        //int i = TableD.getSelectedRow();
        //int j=TableD.getSelectedColumn();
        
        //String Test = DataModelD.getValueByVariable("ITEM_NO",i);
        if(EditMode == EITLERPGLOBAL.ADD || EditMode == EITLERPGLOBAL.EDIT || EditMode == EITLERPGLOBAL.AMEND) {
            lblBookTable.setText("Particulars of Cost Depreciation of BOOK Value : " + DataModelD.getValueByVariable("ITEM_NO",TableD.getSelectedRow()));
            
            lblITTable.setText("Particulars of Cost Depreciation of Income Tax Value : " + DataModelD.getValueByVariable("ITEM_NO",TableD.getSelectedRow()));
            FormatGridB();
            GenerateGridBookDetail();
            
            FormatGridIT();
            GenerateGridITDetail();
        }
        else {
            
        }
    }//GEN-LAST:event_cmdDisplayActionPerformed
    
    private void txtTotalQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalQtyKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalQtyKeyPressed
    
    private void txtTotalQtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalQtyFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtTotalQtyFocusLost
    
    private void txtDepartmentIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDepartmentIDFocusLost
        // TODO add your handling code here:
        //=========== Dept List ===============
        try {
            if(!txtDepartmentID.getText().trim().equals("")) //F1 Key pressed
            {
                LOV aList=new LOV();
                
                SQL="SELECT DEPT_ID,DEPT_DESC FROM D_COM_DEPT_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND DEPT_ID='" + txtDepartmentID.getText().trim() + "' ";
                ResultSet rsTmp = data.getResult(SQL);
                if(rsTmp.getRow()>0) {
                    txtDepartmentName.setText(rsTmp.getString("DEPT_DESC"));
                }
                else {
                    JOptionPane.showMessageDialog(null,"Invalid Department ID");
                }
                
            }
            else {
                txtDepartmentName.setText("");
            }
        }
        catch(Exception e) {
            
        }
        //=========================================
    }//GEN-LAST:event_txtDepartmentIDFocusLost
    
    private void txtItemIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemIDFocusLost
        // TODO add your handling code here:
        if(!txtItemID.getText().trim().equals("")) {
            txtItemDesc.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,txtItemID.getText().trim()));
        }
       /* try {
            if(!txtItemID.getText().trim().equals("")) {
                String CompanyDatabase="";
                LOV aList=new LOV();
                if(EITLERPGLOBAL.gCompanyID ==2) {
                    CompanyDatabase="DINESHMILLS";
                }
                else if(EITLERPGLOBAL.gCompanyID ==3) {
                    CompanyDatabase="DINESHMILLSA";
                }
                SQL="SELECT A.ITEM_ID,A.ITEM_DESCRIPTION FROM "+ CompanyDatabase +".D_INV_ITEM_MASTER A,FINANCE.D_FAS_ITEM_MASTER_HEADER B "+
                "WHERE B.COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND A.ITEM_ID = B.ITEM_ID  "+
                "AND A.APPROVED=1 AND A.CANCELLED = 0   "+
                "AND B.APPROVED=1 AND B.CANCELLED = 0   "+
                "AND A.CATEGORY_ID=1 "+
                "AND A.ITEM_ID='" + txtItemID.getText().trim() + "' ";
        
                ResultSet rsPer =data.getResult(SQL);
                if(rsPer.getRow()>0){
                    txtItemDesc.setText(rsPer.getString("ITEM_DESCRIPTION"));
                }
                else{
                    JOptionPane.showMessageDialog(null,"Invalid Item ID");
                    return;
                }
        
        
                SQL="SELECT BOOK_PER,IT_PER,METHOD_ID FROM D_FAS_ITEM_MASTER_HEADER A,D_FAS_ITEM_MASTER_DETAIL  B "+
                "WHERE A.DOC_NO = B.DOC_NO AND A.ITEM_ID = '"+txtItemID.getText().trim()+"' "+
                "AND B.FROM_DATE<='"+ EITLERPGLOBAL.formatDateDB(txtAssetDate.getText().trim())+"'  AND B.TO_DATE>='"+ EITLERPGLOBAL.formatDateDB(txtAssetDate.getText().trim())+"' " +
                "AND A.APPROVED = 1 AND A.CANCELLED=0 ";
                rsPer = data.getResult(SQL,FinanceGlobal.FinURL);
                if(rsPer.getRow()>0) {
                    txtBookRate.setText(rsPer.getString("BOOK_PER").trim());
                    txtITRate.setText(rsPer.getString("IT_PER").trim());
        
                }
                else {
                    JOptionPane.showMessageDialog(null,"Please Enter Book & IT Percdentage in FAS Item Master");
                }
            }
            else {
                txtItemDesc.setText("");
            }
        }
        catch(Exception e) {
            //e.printStackTrace();
        }*/
    }//GEN-LAST:event_txtItemIDFocusLost
    
    private void txtItemIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIDKeyPressed
        // TODO add your handling code here:
        //=========== Supplier List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            //String CompanyDatabase="";
            LOV aList=new LOV();
           /* if(EITLERPGLOBAL.gCompanyID ==2) {
                CompanyDatabase="DINESHMILLS";
            }
            else if(EITLERPGLOBAL.gCompanyID ==3) {
                CompanyDatabase="DINESHMILLSA";
            
            }*/
            aList.SQL="SELECT A.ITEM_ID,A.ITEM_DESCRIPTION FROM "+ EITLERPGLOBAL.DBName +".D_INV_ITEM_MASTER A,FINANCE.D_FAS_ITEM_MASTER_HEADER B "+
            "WHERE B.COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND A.ITEM_ID = B.ITEM_ID  "+
            "AND A.APPROVED=1 AND A.CANCELLED = 0   "+
            "AND B.APPROVED=1 AND B.CANCELLED = 0   "+
            "AND A.CATEGORY_ID=1 "+
            "ORDER BY A.ITEM_ID";
            
            aList.ReturnCol=1;
            aList.SecondCol=2;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtItemID.setText(aList.ReturnVal);
                txtItemDesc.setText(aList.SecondVal);
            }
            
            
        }
        //=========================================
        
    }//GEN-LAST:event_txtItemIDKeyPressed
    
    private void txtDepartmentIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDepartmentIDKeyPressed
        // TODO add your handling code here:
        //=========== Dept List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT DEPT_ID,DEPT_DESC FROM D_COM_DEPT_MASTER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" ORDER BY DEPT_DESC";
            aList.ReturnCol=1;
            aList.SecondCol=2;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtDepartmentID.setText(aList.ReturnVal);
                txtDepartmentName.setText(aList.SecondVal);
            }
        }
        //=========================================
    }//GEN-LAST:event_txtDepartmentIDKeyPressed
    
    private void OpgHoldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgHoldMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_OpgHoldMouseEntered
    
    private void txtSizeCapacityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSizeCapacityFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSizeCapacityFocusLost
    
    private void txtSizeCapacityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSizeCapacityKeyPressed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txtSizeCapacityKeyPressed
    
    private void txtAssetNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAssetNoFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtAssetNoFocusLost
    
    private void cmdShowRemarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowRemarksActionPerformed
        // TODO add your handling code here:
        if(TableHS.getRowCount()>0&&TableHS.getSelectedRow()>=0) {
            txtAuditRemarks.setText((String)TableHS.getValueAt(TableHS.getSelectedRow(),4));
            BigEdit bigEdit=new BigEdit();
            bigEdit.theText=txtAuditRemarks;
            bigEdit.ShowEdit();
        }
        
    }//GEN-LAST:event_cmdShowRemarksActionPerformed
    
    private void cmdFromRemarksBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFromRemarksBigActionPerformed
        // TODO add your handling code here:
        BigEdit bigEdit=new BigEdit();
        bigEdit.theText=txtFromRemarks;
        bigEdit.ShowEdit();
    }//GEN-LAST:event_cmdFromRemarksBigActionPerformed
    
    private void cmdPreviewAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewAActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmdPreviewAActionPerformed
    
    private void txtAssetNoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtAssetNoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAssetNoPropertyChange
    
    private void txtAssetNoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtAssetNoInputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtAssetNoInputMethodTextChanged
    
    private void cmdNormalViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNormalViewActionPerformed
        // TODO add your handling code here:
        ObjFASCard.LoadData(EITLERPGLOBAL.gCompanyID);
        MoveLast();
        //MoveLast();
    }//GEN-LAST:event_cmdNormalViewActionPerformed
    
    private void cmdViewHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdViewHistoryActionPerformed
        // TODO add your handling code here:
        String DocNo=txtAssetNo.getText();
        ObjFASCard.ShowHistory(EITLERPGLOBAL.gCompanyID, DocNo);
        MoveLast();
    }//GEN-LAST:event_cmdViewHistoryActionPerformed
    
    private void TableITKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableITKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TableITKeyReleased
    
    private void txtToRemarksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToRemarksFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtToRemarksFocusGained
    
    private void cmbSendToFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbSendToFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbSendToFocusGained
    
    private void OpgHoldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgHoldFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_OpgHoldFocusGained
    
    private void OpgRejectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgRejectFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_OpgRejectFocusGained
    
    private void OpgFinalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgFinalFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_OpgFinalFocusGained
    
    private void OpgApproveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OpgApproveFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_OpgApproveFocusGained
    
    private void cmbHierarchyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbHierarchyFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbHierarchyFocusGained
    
    private void txtSizeCapacityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSizeCapacityFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Size or Capacity of Item ....");
    }//GEN-LAST:event_txtSizeCapacityFocusGained
    
    private void txtInvoiceDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvoiceDateFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtInvoiceDateFocusGained
    
    private void txtInvoiceNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvoiceNoFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtInvoiceNoFocusGained
    
    private void txtPJVNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPJVNoFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter PJV Number ....");
    }//GEN-LAST:event_txtPJVNoFocusGained
    
    private void txtPJVAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPJVAmountFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPJVAmountFocusGained
    
    private void txtPODateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPODateFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPODateFocusGained
    
    private void txtPONoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPONoFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPONoFocusGained
    
    private void txtSupplierIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSupplierIDFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSupplierIDFocusGained
    
    private void txtAssetDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAssetDateFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Asset Date ....");
    }//GEN-LAST:event_txtAssetDateFocusGained
    
    private void Tab3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab3FocusGained
        // TODO add your handling code here:
        cmbHierarchy.requestFocus();
    }//GEN-LAST:event_Tab3FocusGained
    
    private void Tab2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab2FocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Tab2FocusGained
    
    private void Tab1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Tab1FocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Tab1FocusGained
    
    private void cmdBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBack3ActionPerformed
        // TODO add your handling code here:
        Tab.setSelectedIndex(1);
    }//GEN-LAST:event_cmdBack3ActionPerformed
    
    private void cmdBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBack2ActionPerformed
        // TODO add your handling code here:
        Tab.setSelectedIndex(0);
    }//GEN-LAST:event_cmdBack2ActionPerformed
    
    private void cmdNext2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNext2ActionPerformed
        // TODO add your handling code here:
        Tab.setSelectedIndex(2);
    }//GEN-LAST:event_cmdNext2ActionPerformed
    
    private void cmdNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNext1ActionPerformed
        
        if(!ValidateHeader()) {
            return;
        }
        CalculateTotalAmount();
        if(!txtTotalQty.getText().trim().equals("")) {
            if(EITLERPGLOBAL.IsNumber(txtTotalQty.getText().trim())) {
                FormatGridD();
                FormatGridB();
                FormatGridIT();
                
                GenerateGridDetail();
                GenerateGridBookDetail();
                GenerateGridITDetail();
            }
        }
        
        Tab.setSelectedIndex(1);
    }//GEN-LAST:event_cmdNext1ActionPerformed
    
    private void txtSupplierIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSupplierIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSupplierIDActionPerformed
    
    private void OpgHoldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgHoldMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(false);
        OpgReject.setSelected(false);
        OpgHold.setSelected(true);
    }//GEN-LAST:event_OpgHoldMouseClicked
    
    private void OpgRejectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgRejectMouseClicked
        // TODO add your handling code here:
        
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(false);
        OpgReject.setSelected(true);
        OpgHold.setSelected(false);
        
        GenerateRejectedUserCombo();
        cmbSendTo.setEnabled(true);
    }//GEN-LAST:event_OpgRejectMouseClicked
    
    private void OpgFinalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgFinalMouseClicked
        // TODO add your handling code here:
        OpgApprove.setSelected(false);
        OpgFinal.setSelected(true);
        OpgReject.setSelected(false);
        OpgHold.setSelected(false);
        
        if(!OpgFinal.isEnabled()) {
            OpgHold.setSelected(true);
        }
        
    }//GEN-LAST:event_OpgFinalMouseClicked
    
    private void OpgApproveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpgApproveMouseClicked
        
        SetupApproval();
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            GenerateRejectedUserCombo();
            if(ApprovalFlow.IsOnceRejectedDoc(EITLERPGLOBAL.gCompanyID,clsFASCardwithGRN.ModuleID,txtAssetNo.getText(),FinanceGlobal.FinURL)) {
                cmbSendTo.setEnabled(true);
            }
            else {
                cmbSendTo.setEnabled(false);
            }
        }
        
        
        if(cmbSendTo.getItemCount()<=0) {
            GenerateFromCombo();
        }
        
        
    }//GEN-LAST:event_OpgApproveMouseClicked
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        System.gc();
        ObjFASCard.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
        PreviewReport();
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    private void txtSupplierIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupplierIDKeyPressed
        // TODO add your handling code here:
        //=========== Supplier List ===============
        if(evt.getKeyCode()==112) //F1 Key pressed
        {
            LOV aList=new LOV();
            
            aList.SQL="SELECT SUPPLIER_CODE,SUPP_NAME FROM D_COM_SUPP_MASTER WHERE  COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND APPROVED=1 AND CANCELLED=0";
            aList.ReturnCol=1;
            aList.SecondCol=2;
            aList.ShowReturnCol=true;
            aList.DefaultSearchOn=2;
            
            if(aList.ShowLOV()) {
                txtSupplierID.setText(aList.ReturnVal);
                txtSupplierName.setText(aList.SecondVal);
            }
        }
        //=========================================
        
    }//GEN-LAST:event_txtSupplierIDKeyPressed
    
    private void txtSupplierIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSupplierIDFocusLost
        //=========== Supplier List ===============
        try {
            if(!txtSupplierID.getText().trim().equals("")) //F1 Key pressed
            {
                LOV aList=new LOV();
                
                SQL="SELECT SUPPLIER_CODE,SUPP_NAME FROM D_COM_SUPP_MASTER WHERE  COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND SUPPLIER_CODE = '" + txtSupplierID.getText().trim() + "' AND APPROVED=1 AND CANCELLED=0";
                ResultSet rsSupp = data.getResult(SQL);
                if(rsSupp.getRow()>0) {
                    txtSupplierName.setText(rsSupp.getString("SUPP_NAME"));
                }
                else {
                    JOptionPane.showMessageDialog(null,"Invalid Supplier ID");
                }
            }
            else {
                txtSupplierName.setText("");
            }
        }
        catch(Exception e) {
            
        }
        //=========================================
        
    }//GEN-LAST:event_txtSupplierIDFocusLost
    
    private void TableITFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TableITFocusLost
        // TODO add your handling code here:
        
        //Update Header Custom Columns
        //        for(int i=0;i<TableH.getRowCount();i++) {
        //            UpdateResults_H(i);
        //        }
        
    }//GEN-LAST:event_TableITFocusLost
    
    private void TableITKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableITKeyPressed
        
    }//GEN-LAST:event_TableITKeyPressed
    
    
    private void cmbHierarchyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHierarchyItemStateChanged
        
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        GenerateFromCombo();
        
        if(clsHierarchy.CanSkip((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        }
        else {
            cmbSendTo.setEnabled(false);
        }
        
        if(clsHierarchy.CanFinalApprove((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        }
        else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }
        //Set Default Send to User
    }//GEN-LAST:event_cmbHierarchyItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane HeaderPane;
    private javax.swing.JRadioButton OpgApprove;
    private javax.swing.JRadioButton OpgFinal;
    private javax.swing.JRadioButton OpgHold;
    private javax.swing.JRadioButton OpgReject;
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JPanel Tab1;
    private javax.swing.JPanel Tab2;
    private javax.swing.JPanel Tab3;
    private javax.swing.JTable TableA;
    private javax.swing.JTable TableB;
    private javax.swing.JTable TableD;
    private javax.swing.JTable TableHS;
    private javax.swing.JTable TableIT;
    private javax.swing.JTable TableOthers;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbHierarchy;
    private javax.swing.JComboBox cmbSendTo;
    private javax.swing.JButton cmdAddOthers;
    private javax.swing.JButton cmdAssetDescBig1;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdBack2;
    private javax.swing.JButton cmdBack3;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdDisplay;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdFromRemarksBig;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdNext1;
    private javax.swing.JButton cmdNext2;
    private javax.swing.JButton cmdNormalView;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPreviewA;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdRemarksBig;
    private javax.swing.JButton cmdRemoveOthers;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdShowDetail;
    private javax.swing.JButton cmdShowRemarks;
    private javax.swing.JButton cmdShowVoucher;
    private javax.swing.JButton cmdTop;
    private javax.swing.JButton cmdViewHistory;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblAssetDesc;
    private javax.swing.JLabel lblAssetNo;
    private javax.swing.JLabel lblBookTable;
    private javax.swing.JLabel lblColumnTotal;
    private javax.swing.JLabel lblCustomDuty;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblDisposeDate;
    private javax.swing.JLabel lblDocDate;
    private javax.swing.JLabel lblDocDate1;
    private javax.swing.JLabel lblDocumentHistory;
    private javax.swing.JLabel lblExpectedLife;
    private javax.swing.JLabel lblFreight;
    private javax.swing.JLabel lblGuarantee;
    private javax.swing.JLabel lblITTable;
    private javax.swing.JLabel lblInstallation;
    private javax.swing.JLabel lblInstallationDate;
    private javax.swing.JLabel lblInvoiceDate;
    private javax.swing.JLabel lblInvoiceNo;
    private javax.swing.JLabel lblItemID;
    private javax.swing.JLabel lblItemIDDetail;
    private javax.swing.JLabel lblLable2;
    private javax.swing.JLabel lblLanding;
    private javax.swing.JLabel lblMachineNo;
    private javax.swing.JLabel lblModelNo;
    private javax.swing.JLabel lblNominalCode;
    private javax.swing.JLabel lblOthers;
    private javax.swing.JLabel lblOthers1;
    private javax.swing.JLabel lblPJV;
    private javax.swing.JLabel lblPODate;
    private javax.swing.JLabel lblPONo;
    private javax.swing.JLabel lblPurchaseYear;
    private javax.swing.JLabel lblRemarks;
    private javax.swing.JLabel lblRevNo;
    private javax.swing.JLabel lblSizeCapacity;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JLabel lblSupplier1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalQty;
    private javax.swing.JLabel lblVoucherNo;
    private javax.swing.JLabel lblWarranty;
    private javax.swing.JPopupMenu mnuSelect;
    private javax.swing.JMenuItem mnuSelectClearing;
    private javax.swing.JMenuItem mnuSelectCustomDuty;
    private javax.swing.JMenuItem mnuSelectFreight;
    private javax.swing.JMenuItem mnuSelectInstallation;
    private javax.swing.JMenuItem mnuSelectOthers;
    private javax.swing.JMenuItem mnuSelectPJV;
    private javax.swing.JTextField txtAssetDate;
    private javax.swing.JTextField txtAssetDesc;
    private javax.swing.JTextField txtAssetNo;
    private javax.swing.JTextField txtAuditRemarks;
    private javax.swing.JTextField txtCustomAmount;
    private javax.swing.JTextField txtCustomDutyDate;
    private javax.swing.JTextField txtCustomVoucherNo;
    private javax.swing.JTextField txtDepartmentID;
    private javax.swing.JTextField txtDepartmentName;
    private javax.swing.JTextField txtDisposeDate;
    private javax.swing.JTextField txtExpectedLife;
    private javax.swing.JTextField txtFinalAmount;
    private javax.swing.JTextField txtFreightAmount;
    private javax.swing.JTextField txtFreightDate;
    private javax.swing.JTextField txtFreightVoucherNo;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtFromRemarks;
    private javax.swing.JTextField txtGrnNo;
    private javax.swing.JTextField txtGuarantee;
    private javax.swing.JTextField txtInstallationDate;
    private javax.swing.JTextField txtInstallationVoucherAmount;
    private javax.swing.JTextField txtInstallationVoucherDate;
    private javax.swing.JTextField txtInstallationVoucherNo;
    private javax.swing.JTextField txtInvoiceDate;
    private javax.swing.JTextField txtInvoiceNo;
    private javax.swing.JTextField txtItemDesc;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtLandingAmount;
    private javax.swing.JTextField txtLandingDate;
    private javax.swing.JTextField txtLandingVoucherNo;
    private javax.swing.JTextField txtMachineNo;
    private javax.swing.JTextField txtModelNo;
    private javax.swing.JTextField txtNominalCode;
    private javax.swing.JTextField txtOthersVoucherAmount;
    private javax.swing.JTextField txtOthersVoucherDate;
    private javax.swing.JTextField txtOthersVoucherNo;
    private javax.swing.JTextField txtPJVAmount;
    private javax.swing.JTextField txtPJVDate;
    private javax.swing.JTextField txtPJVNo;
    private javax.swing.JTextField txtPODate;
    private javax.swing.JTextField txtPONo;
    private javax.swing.JTextField txtPurchaseYear;
    private javax.swing.JTextField txtRemarks;
    private javax.swing.JTextField txtServicetaxAmount;
    private javax.swing.JTextField txtSizeCapacity;
    private javax.swing.JTextField txtSupplierID;
    private javax.swing.JTextField txtSupplierName;
    private javax.swing.JTextField txtToRemarks;
    private javax.swing.JTextField txtTotalQty;
    private javax.swing.JTextField txtWarranty;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    private void FormatGridA() {
        DataModelA=new EITLTableModel();
        
        TableA.removeAll();
        TableA.setModel(DataModelA);
        
        //Set the table Readonly
        DataModelA.TableReadOnly(true);
        
        //Add the columns
        DataModelA.addColumn("Sr.");
        DataModelA.addColumn("User");
        DataModelA.addColumn("Status");
        DataModelA.addColumn("Department");
        DataModelA.addColumn("Received Date");
        DataModelA.addColumn("Action Date");
        DataModelA.addColumn("Remarks");
        
        TableA.setAutoResizeMode(TableA.AUTO_RESIZE_OFF);
        
    }
    
    
    private void SetMenuForRights() {
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12241)) {
            cmdNew.setEnabled(false);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        //cmdEdit.setEnabled(true);
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12242)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }
        
        // --- Delete Rights --
        //        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12103)) {
        //            cmdDelete.setEnabled(true);
        //        }
        //        else {
        //            cmdDelete.setEnabled(false);
        //        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,12244)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        
        //=========== Color Indication ===============//
        //=========== Color Indication ===============//
        
        lblBookTable.setText("Particulars of Cost Depreciation of BOOK Value ");
        lblITTable.setText("Particulars of Cost Depreciation of Income Tax Value ");
        lblTitle.setText("Fixed Asset Card (With GRN) : " + ObjFASCard.getAttribute("ASSET_NO").getString());
        try {
            if(ObjFASCard.getAttribute("APPROVED").getInt()==1) {
                lblTitle.setBackground(Color.BLUE);
            }
            
            if(ObjFASCard.getAttribute("APPROVED").getInt()!=1) {
                lblTitle.setBackground(Color.GRAY);
            }
            
            if(ObjFASCard.getAttribute("CANCELLED").getInt()==1) {
                lblTitle.setBackground(Color.RED);
            }
            
        }
        catch(Exception c) {
            
        }
        //============================================//
        
        //========= Authority Delegation Check =====================//
        if(EITLERPGLOBAL.gAuthorityUserID!=EITLERPGLOBAL.gUserID) {
            int ModuleID=clsFASCardwithGRN.ModuleID;
            
            if(clsAuthority.IsAuthorityGiven(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.gUserID,EITLERPGLOBAL.gAuthorityUserID,ModuleID)) {
                EITLERPGLOBAL.gNewUserID=EITLERPGLOBAL.gAuthorityUserID;
            }
            else {
                EITLERPGLOBAL.gNewUserID=EITLERPGLOBAL.gUserID;
            }
        }
        
        //==========================================================//
        ShowMessage("Ready");
        try {
            ClearFields();
            
            //DISPLAY  HEADER DATA
            txtAssetNo.setText(ObjFASCard.getAttribute("ASSET_NO").getString());
            lblTitle.setText("FIXED ASSET SYSTEM (WITH GRN) - "+txtAssetNo.getText());
            txtAssetDate.setText(ObjFASCard.getAttribute("ASSET_DATE").getString());
            
            lblRevNo.setText(Integer.toString((int)ObjFASCard.getAttribute("REVISION_NO").getVal()));
            
            txtItemID.setText(ObjFASCard.getAttribute("ITEM_ID").getString());
            lblItemIDDetail.setText(ObjFASCard.getAttribute("ITEM_ID").getString());
            txtItemDesc.setText(clsItem.getItemName(EITLERPGLOBAL.gCompanyID,ObjFASCard.getAttribute("ITEM_ID").getString()));
            txtAssetDesc.setText(ObjFASCard.getAttribute("ASSET_DESC").getString());
            //ObjFASCard.,getAttribute("").getString()
            txtSupplierID.setText(ObjFASCard.getAttribute("SUPPLIER_CODE").getString());
            txtSupplierName.setText(clsSupplier.getSupplierName(EITLERPGLOBAL.gCompanyID,ObjFASCard.getAttribute("SUPPLIER_CODE").getString()));
            txtDepartmentID.setText(ObjFASCard.getAttribute("DEPT_ID").getString());
            
            txtDepartmentName.setText(clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,ObjFASCard.getAttribute("DEPT_ID").getString()));
            txtGrnNo.setText(ObjFASCard.getAttribute("GRN_NO").getString());
            txtPONo.setText(ObjFASCard.getAttribute("PO_NO").getString());
            txtPODate.setText(ObjFASCard.getAttribute("PO_DATE").getString());
            txtGuarantee.setText(ObjFASCard.getAttribute("GURANTEE").getString());
            txtNominalCode.setText(ObjFASCard.getAttribute("MAIN_ACCOUNT_CODE").getString());
            txtExpectedLife.setText(ObjFASCard.getAttribute("EXPECTED_LIFE").getString());
            txtWarranty.setText(ObjFASCard.getAttribute("WARRANTY").getString());
            txtPurchaseYear.setText(ObjFASCard.getAttribute("YEAR_OF_PURCHASE").getString());
            txtDisposeDate.setText(ObjFASCard.getAttribute("DISPOSED_DATE").getString());
            txtSizeCapacity.setText(ObjFASCard.getAttribute("SIZE_CAPACITY").getString());
            txtInstallationDate.setText(ObjFASCard.getAttribute("INSTALLATION_DATE").getString());
            txtTotalQty.setText(ObjFASCard.getAttribute("TOTAL_QTY").getString());
            txtModelNo.setText(ObjFASCard.getAttribute("MODEL_NO").getString());
            txtMachineNo.setText(ObjFASCard.getAttribute("MACHINE_NO").getString());
            txtInvoiceNo.setText(ObjFASCard.getAttribute("INVOICE_NO").getString());
            txtInvoiceDate.setText(ObjFASCard.getAttribute("INVOICE_DATE").getString());
            txtRemarks.setText(ObjFASCard.getAttribute("REMARKS").getString());
            txtPJVNo.setText(ObjFASCard.getAttribute("PJ_VOUCHER_NO").getString());
            txtPJVDate.setText(ObjFASCard.getAttribute("PJ_VOUCHER_DATE").getString());
            txtPJVAmount.setText(String.valueOf(new BigDecimal(ObjFASCard.getAttribute("PJ_VOUCHER_AMOUNT").getDouble()).setScale(0,BigDecimal.ROUND_HALF_UP)));
            txtCustomVoucherNo.setText(ObjFASCard.getAttribute("CUSTOM_DUTY_VOUCHER_NO").getString());
            txtCustomDutyDate.setText(ObjFASCard.getAttribute("CUSTOM_DUTY_VOUCHER_DATE").getString());
            //txtCustomAmount.setText(String.valueOf(ObjFASCard.getAttribute("CUSTOM_DUTY_VOUCHER_AMOUNT").getDouble()));
            txtCustomAmount.setText(String.valueOf(new BigDecimal(ObjFASCard.getAttribute("CUSTOM_DUTY_VOUCHER_AMOUNT").getDouble()).setScale(0,BigDecimal.ROUND_HALF_UP)));
            txtLandingVoucherNo.setText(ObjFASCard.getAttribute("LANDING_VOUCHER_NO").getString());
            txtLandingDate.setText(ObjFASCard.getAttribute("LANDING_VOUCHER_DATE").getString());
            //txtLandingAmount.setText(String.valueOf(ObjFASCard.getAttribute("LANDING_VOUCHER_AMOUNT").getDouble()));
            txtLandingAmount.setText(String.valueOf(new BigDecimal(ObjFASCard.getAttribute("LANDING_VOUCHER_AMOUNT").getDouble()).setScale(0,BigDecimal.ROUND_HALF_UP)));
            txtFreightVoucherNo.setText(ObjFASCard.getAttribute("FREIGHT_VOUCHER_NO").getString());
            txtFreightDate.setText(ObjFASCard.getAttribute("FREIGHT_VOUCHER_DATE").getString());
            //txtFreightAmount.setText(String.valueOf(ObjFASCard.getAttribute("FREIGHT_VOUCHER_AMOUNT").getDouble()));
            txtFreightAmount.setText(String.valueOf(new BigDecimal(ObjFASCard.getAttribute("FREIGHT_VOUCHER_AMOUNT").getDouble()).setScale(0,BigDecimal.ROUND_HALF_UP)));
            txtInstallationVoucherNo.setText(ObjFASCard.getAttribute("INSTALLATION_VOUCHER_NO").getString());
            txtInstallationVoucherDate.setText(ObjFASCard.getAttribute("INSTALLATION_VOUCHER_DATE").getString());
            //txtInstallationVoucherAmount.setText(String.valueOf(ObjFASCard.getAttribute("INSTALLATION_VOUCHER_AMOUNT").getDouble()));
            txtInstallationVoucherAmount.setText(String.valueOf(new BigDecimal(ObjFASCard.getAttribute("INSTALLATION_VOUCHER_AMOUNT").getDouble()).setScale(0,BigDecimal.ROUND_HALF_UP)));
            txtOthersVoucherNo.setText(ObjFASCard.getAttribute("OTHERS_VOUCHER_NO").getString());
            txtOthersVoucherDate.setText(ObjFASCard.getAttribute("OTHERS_VOUCHER_DATE").getString());
            // txtOthersVoucherAmount.setText(String.valueOf(ObjFASCard.getAttribute("OTHERS_VOUCHER_AMOUNT").getDouble()));
            txtOthersVoucherAmount.setText(String.valueOf(new BigDecimal(ObjFASCard.getAttribute("OTHERS_VOUCHER_AMOUNT").getDouble())));
            txtServicetaxAmount.setText(String.valueOf(new BigDecimal(ObjFASCard.getAttribute("SERVICE_TAX_AMOUNT").getDouble())));
            txtOthersVoucherNo.setText(ObjFASCard.getAttribute("OTHERS_VOUCHER_NO").getString());
            EITLERPGLOBAL.setComboIndex(cmbHierarchy,ObjFASCard.getAttribute("HIERARCHY_ID").getInt());
            
            
            
            FormatGridD();
            for(int i=1;i<=ObjFASCard.colFASItemsDetail.size();i++) {
                clsFASCardwithGRNDetail ObjItem=(clsFASCardwithGRNDetail)ObjFASCard.colFASItemsDetail.get(Integer.toString(i));
                
                
                Object[] rowData=new Object[1];
                DataModelD.addRow(rowData);
                int NewRow=TableD.getRowCount()-1;
                
                DataModelD.setValueByVariable("SR_NO",ObjItem.getAttribute("SR_NO").getString(),NewRow);
                DataModelD.setValueByVariable("YEAR",ObjItem.getAttribute("YEAR").getString(),NewRow);
                //DataModelD.setValueByVariable("AMOUNT",ObjItem.getAttribute("AMOUNT").getString(),NewRow);
                DataModelD.setValueByVariable("AMOUNT",(new BigDecimal(ObjItem.getAttribute("AMOUNT").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                DataModelD.setValueByVariable("DEPT_ID",ObjItem.getAttribute("DEPT_ID").getString(),NewRow);
                DataModelD.setValueByVariable("DEPT_NAME",clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,Integer.parseInt(ObjItem.getAttribute("DEPT_ID").getString())),NewRow);
                DataModelD.setValueByVariable("SALE_VALUE",Double.toString(ObjItem.getAttribute("SALE_VALUE").getDouble()),NewRow);
                DataModelD.setValueByVariable("SALE_DATE",ObjItem.getAttribute("SALE_DATE").getString(),NewRow);
                DataModelD.setValueByVariable("SALE_DOC_NO",ObjItem.getAttribute("SALE_DOC_NO").getString(),NewRow);
                //DataModelD.setValueByVariable("SJ_NUMBER",ObjItem.getAttribute("SJ_NUMBER").getString(),NewRow);
                DataModelD.setValueByVariable("ASSET_STATUS",ObjItem.getAttribute("ASSET_STATUS").getString(),NewRow);
                DataModelD.setValueByVariable("REMARKS",ObjItem.getAttribute("REMARKS").getString(),NewRow);
                
                //ObjItem.getAttribute("").getString()
            }
            
            FormatGridB();
            for(int i=1;i<=ObjFASCard.colFASItemsDetailExBook.size();i++) {
                clsFASCardwithGRNDetailEx ObjItem=(clsFASCardwithGRNDetailEx)ObjFASCard.colFASItemsDetailExBook.get(Integer.toString(i));
                
                
                Object[] rowData=new Object[1];
                DataModelB.addRow(rowData);
                int NewRow=TableB.getRowCount()-1;
                
                DataModelB.setValueByVariable("SR_NO",ObjItem.getAttribute("SR_NO").getString(),NewRow);
                DataModelB.setValueByVariable("DETAIL_SR_NO",ObjItem.getAttribute("DETAIL_SR_NO").getString(),NewRow);
                DataModelB.setValueByVariable("YEAR",ObjItem.getAttribute("YEAR").getString(),NewRow);
                // DataModelB.setValueByVariable("OPENING_VALUE",ObjItem.getAttribute("OPENING_BALANCE").getString(),NewRow);
                DataModelB.setValueByVariable("OPENING_VALUE",(new BigDecimal(ObjItem.getAttribute("OPENING_BALANCE").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                DataModelB.setValueByVariable("ADDITIONS",ObjItem.getAttribute("ADDITIONS").getString(),NewRow);
                // DataModelB.setValueByVariable("CLOSING_BALANCE",ObjItem.getAttribute("CLOSING_BALANCE").getString(),NewRow);
                DataModelB.setValueByVariable("CLOSING_BALANCE",(new BigDecimal(ObjItem.getAttribute("CLOSING_BALANCE").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                DataModelB.setValueByVariable("DEPRN_FROM_DATE",ObjItem.getAttribute("DEPRECIATION_FROM_DATE").getString(),NewRow);
                DataModelB.setValueByVariable("DEPRN_TO_DATE",ObjItem.getAttribute("DEPRECIATION_TO_DATE").getString(),NewRow);
                DataModelB.setValueByVariable("DEPRN_PERCENTAGE",ObjItem.getAttribute("DEPRECIATION_PERCENTAGE").getString(),NewRow);
                DataModelB.setValueByVariable("DEPRN_METHOD",ObjItem.getAttribute("DEPRECIATION_METHOD").getString(),NewRow);
                String Method_name = clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",Integer.parseInt(ObjItem.getAttribute("DEPRECIATION_METHOD").getString()));
                DataModelB.setValueByVariable("DEPRN_METHOD_NAME",Method_name,NewRow);
                // DataModelB.setValueByVariable("DEPRN_FOR_THE_YEAR",ObjItem.getAttribute("DEPRECIATION_FOR_THE_YEAR").getString(),NewRow);
                DataModelB.setValueByVariable("DEPRN_FOR_THE_YEAR",(new BigDecimal(ObjItem.getAttribute("DEPRECIATION_FOR_THE_YEAR").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                DataModelB.setValueByVariable("SHIFT_ALLOW_FOR_THE_YEAR",ObjItem.getAttribute("SHIFT_ALLOW_FOR_THE_YEAR").getString(),NewRow);
                //DataModelB.setValueByVariable("CLOSING_BALANCE",(new BigDecimal(ObjItem.getAttribute("CLOSING_BALANCE").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                // DataModelB.setValueByVariable("CUM_DEPRN",ObjItem.getAttribute("CUMULATIVE_DEPRECIATION").getString(),NewRow);
                DataModelB.setValueByVariable("CUM_DEPRN",(new BigDecimal(ObjItem.getAttribute("CUMULATIVE_DEPRECIATION").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                // DataModelB.setValueByVariable("WDV",ObjItem.getAttribute("WRITTEN_DOWN_VALUE").getString(),NewRow);
                DataModelB.setValueByVariable("WDV",(new BigDecimal(ObjItem.getAttribute("WRITTEN_DOWN_VALUE").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                //DataModelB.setValueByVariable("NET_BLOCK",ObjItem.getAttribute("NET_BLOCK").getString(),NewRow);
                DataModelB.setValueByVariable("REMARKS",ObjItem.getAttribute("REMARKS").getString(),NewRow);
                DataModelB.setValueByVariable("SHIFTS",ObjItem.getAttribute("SHIFT").getString(),NewRow);
            }
            
            
            FormatGridIT();
            for(int i=1;i<=ObjFASCard.colFASItemsDetailExIT.size();i++) {
                clsFASCardwithGRNDetailEx ObjItem=(clsFASCardwithGRNDetailEx)ObjFASCard.colFASItemsDetailExIT.get(Integer.toString(i));
                
                
                Object[] rowData=new Object[1];
                DataModelIT.addRow(rowData);
                int NewRow=TableIT.getRowCount()-1;
                
                DataModelIT.setValueByVariable("SR_NO",ObjItem.getAttribute("SR_NO").getString(),NewRow);
                DataModelIT.setValueByVariable("DETAIL_SR_NO",ObjItem.getAttribute("DETAIL_SR_NO").getString(),NewRow);
                DataModelIT.setValueByVariable("YEAR",ObjItem.getAttribute("YEAR").getString(),NewRow);
                // DataModelIT.setValueByVariable("OPENING_VALUE",ObjItem.getAttribute("OPENING_BALANCE").getString(),NewRow);
                DataModelIT.setValueByVariable("OPENING_VALUE",(new BigDecimal(ObjItem.getAttribute("OPENING_BALANCE").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                DataModelIT.setValueByVariable("ADDITIONS",ObjItem.getAttribute("ADDITIONS").getString(),NewRow);
                //DataModelIT.setValueByVariable("CLOSING_BALANCE",ObjItem.getAttribute("CLOSING_BALANCE").getString(),NewRow);
                DataModelIT.setValueByVariable("CLOSING_BALANCE",(new BigDecimal(ObjItem.getAttribute("CLOSING_BALANCE").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                DataModelIT.setValueByVariable("DEPRN_FROM_DATE",ObjItem.getAttribute("DEPRECIATION_FROM_DATE").getString(),NewRow);
                DataModelIT.setValueByVariable("DEPRN_TO_DATE",ObjItem.getAttribute("DEPRECIATION_TO_DATE").getString(),NewRow);
                DataModelIT.setValueByVariable("DEPRN_PERCENTAGE",ObjItem.getAttribute("DEPRECIATION_PERCENTAGE").getString(),NewRow);
                DataModelIT.setValueByVariable("DEPRN_METHOD",ObjItem.getAttribute("DEPRECIATION_METHOD").getString(),NewRow);
                String Method_name = clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",Integer.parseInt(ObjItem.getAttribute("DEPRECIATION_METHOD").getString()));
                DataModelIT.setValueByVariable("DEPRN_METHOD_NAME",Method_name,NewRow);
                // DataModelIT.setValueByVariable("DEPRN_FOR_THE_YEAR",ObjItem.getAttribute("DEPRECIATION_FOR_THE_YEAR").getString(),NewRow);
                DataModelIT.setValueByVariable("DEPRN_FOR_THE_YEAR",(new BigDecimal(ObjItem.getAttribute("DEPRECIATION_FOR_THE_YEAR").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                DataModelIT.setValueByVariable("SHIFT_ALLOW_FOR_THE_YEAR",ObjItem.getAttribute("SHIFT_ALLOW_FOR_THE_YEAR").getString(),NewRow);
                // DataModelIT.setValueByVariable("CUM_DEPRN",ObjItem.getAttribute("CUMULATIVE_DEPRECIATION").getString(),NewRow);
                DataModelIT.setValueByVariable("CUM_DEPRN",(new BigDecimal(ObjItem.getAttribute("CUMULATIVE_DEPRECIATION").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                // DataModelIT.setValueByVariable("WDV",ObjItem.getAttribute("WRITTEN_DOWN_VALUE").getString(),NewRow);
                DataModelIT.setValueByVariable("WDV",(new BigDecimal(ObjItem.getAttribute("WRITTEN_DOWN_VALUE").getDouble())).setScale(0,BigDecimal.ROUND_HALF_UP).toString(),NewRow);
                //DataModelIT.setValueByVariable("NET_BLOCK",ObjItem.getAttribute("NET_BLOCK").getString(),NewRow);
                DataModelIT.setValueByVariable("REMARKS",ObjItem.getAttribute("REMARKS").getString(),NewRow);
                DataModelIT.setValueByVariable("SHIFTS",ObjItem.getAttribute("SHIFT").getString(),NewRow);
            }
            
            //-------------- Show Others Voucher -----------//
            FormatGridOthers();
            for(int i=1;i<=ObjFASCard.colOthers.size();i++) {
                clsFASOthersVoucher ObjOthers=(clsFASOthersVoucher)ObjFASCard.colOthers.get(Integer.toString(i));
                Object[] rowData=new Object[4];
                
                
                double others_amount = (double)ObjOthers.getAttribute("OTHERS_VOUCHER_AMOUNT").getDouble();
                
                rowData[0]=Integer.toString(i);
                rowData[1]=(String)ObjOthers.getAttribute("OTHERS_VOUCHER_NO").getObj();
                rowData[2]=(String)ObjOthers.getAttribute("OTHERS_VOUCHER_DATE").getObj();
                rowData[3]= String.valueOf(others_amount);
                DataModelO.addRow(rowData);
            }
            CalculateTotalAmount();
            if(EditMode==0) {
                DataModelB.TableReadOnly(true);
                DataModelIT.TableReadOnly(true);
                DataModelD.TableReadOnly(true);
                DataModelO.TableReadOnly(true);
            }
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
        //======== Generating Grid for Document Approval Flow ========//
        FormatGridA();
        HashMap List=new HashMap();
        String DocNo=(String)ObjFASCard.getAttribute("ASSET_NO").getObj();
        List=ApprovalFlow.getDocumentFlow(EITLERPGLOBAL.gCompanyID, clsFASCardwithGRN.ModuleID, DocNo);
        for(int i=1;i<=List.size();i++) {
            clsDocFlow ObjFlow=(clsDocFlow)List.get(Integer.toString(i));
            Object[] rowData=new Object[7];
            
            rowData[0]=Integer.toString(i);
            rowData[1]=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,(int)ObjFlow.getAttribute("USER_ID").getVal());
            rowData[2]=(String)ObjFlow.getAttribute("STATUS").getObj();
            rowData[3]=clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID, (int)ObjFlow.getAttribute("DEPT_ID").getVal());
            rowData[4]=EITLERPGLOBAL.formatDate((String)ObjFlow.getAttribute("RECEIVED_DATE").getObj());
            rowData[5]=EITLERPGLOBAL.formatDate((String)ObjFlow.getAttribute("ACTION_DATE").getObj());
            rowData[6]=(String)ObjFlow.getAttribute("REMARKS").getObj();
            
            DataModelA.addRow(rowData);
        }
        
        
        //Showing Audit Trial History
        FormatGridHS();
        HashMap History=clsFASCardwithGRN.getHistoryList(EITLERPGLOBAL.gCompanyID, DocNo);
        for(int i=1;i<=History.size();i++) {
            clsFASCardwithGRN ObjHistory=(clsFASCardwithGRN)History.get(Integer.toString(i));
            Object[] rowData=new Object[5];
            
            rowData[0]=Integer.toString((int)ObjHistory.getAttribute("REVISION_NO").getVal());
            rowData[1]=clsUser.getUserName(EITLERPGLOBAL.gCompanyID,Long.parseLong(ObjHistory.getAttribute("UPDATED_BY").getObj().toString()));
            rowData[2]=(String)ObjHistory.getAttribute("ENTRY_DATE").getObj();
            
            String ApprovalStatus="";
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("A")) {
                ApprovalStatus="Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("F")) {
                ApprovalStatus="Final Approved";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("W")) {
                ApprovalStatus="Waiting";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("R")) {
                ApprovalStatus="Rejected";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("P")) {
                ApprovalStatus="Pending";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("C")) {
                ApprovalStatus="Skiped";
            }
            
            if(((String)ObjHistory.getAttribute("APPROVAL_STATUS").getObj()).equals("H")) {
                ApprovalStatus="Waiting";
            }
            
            rowData[3]=ApprovalStatus;
            rowData[4]=(String)ObjHistory.getAttribute("APPROVER_REMARKS").getObj();
            
            DataModelHS.addRow(rowData);
        }
        
        
        //============================================================//
        
        //FormatGridA();
        //FormatGridHS();
    }
    
    //Sets data to the Class Object
    private void SetData() {
        //Header Fields
        
        ObjFASCard.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
        ObjFASCard.setAttribute("PREFIX",SelPrefix);
        ObjFASCard.setAttribute("SUFFIX",SelSuffix);
        ObjFASCard.setAttribute("FFNO",FFNo);
        ObjFASCard.setAttribute("ASSET_NO",txtAssetNo.getText().trim());
        ObjFASCard.setAttribute("ASSET_DATE",EITLERPGLOBAL.formatDateDB(txtAssetDate.getText().trim()));
        ObjFASCard.setAttribute("ITEM_ID",txtItemID.getText().trim());
        ObjFASCard.setAttribute("ITEM_DESC","");
        ObjFASCard.setAttribute("ASSET_DESC",txtAssetDesc.getText().trim());
        ObjFASCard.setAttribute("METHOD_ID","");
        ObjFASCard.setAttribute("BOOK_PER","");
        ObjFASCard.setAttribute("IT_PER","");
        ObjFASCard.setAttribute("SUPPLIER_CODE",txtSupplierID.getText().trim());
        ObjFASCard.setAttribute("DEPT_ID",txtDepartmentID.getText().trim());
        ObjFASCard.setAttribute("PO_NO",txtPONo.getText().trim());
        ObjFASCard.setAttribute("GRN_NO",txtGrnNo.getText().trim());
        ObjFASCard.setAttribute("PO_DATE",EITLERPGLOBAL.formatDateDB(txtPODate.getText().trim()));
        ObjFASCard.setAttribute("GURANTEE",txtGuarantee.getText().trim());
        ObjFASCard.setAttribute("MAIN_ACCOUNT_CODE",txtNominalCode.getText().trim());
        ObjFASCard.setAttribute("EXPECTED_LIFE",txtExpectedLife.getText().trim());
        ObjFASCard.setAttribute("WARRANTY",txtWarranty.getText().trim());
        ObjFASCard.setAttribute("YEAR_OF_PURCHASE",txtPurchaseYear.getText().trim());
        ObjFASCard.setAttribute("DISPOSED_DATE",EITLERPGLOBAL.formatDateDB(txtDisposeDate.getText().trim()));
        ObjFASCard.setAttribute("SIZE_CAPACITY",txtSizeCapacity.getText().trim());
        ObjFASCard.setAttribute("INSTALLATION_DATE",EITLERPGLOBAL.formatDateDB(txtInstallationDate.getText().trim()));
        ObjFASCard.setAttribute("TOTAL_QTY",txtTotalQty.getText().trim());
        ObjFASCard.setAttribute("MODEL_NO",txtModelNo.getText().trim());
        ObjFASCard.setAttribute("MACHINE_NO",txtMachineNo.getText().trim());
        ObjFASCard.setAttribute("INVOICE_NO",txtInvoiceNo.getText().trim());
        ObjFASCard.setAttribute("INVOICE_DATE",EITLERPGLOBAL.formatDateDB(txtInvoiceDate.getText().trim()));
        ObjFASCard.setAttribute("HEADER_REMARKS",txtRemarks.getText().trim());
        ObjFASCard.setAttribute("PJ_VOUCHER_NO",txtPJVNo.getText().trim());
        ObjFASCard.setAttribute("PJ_VOUCHER_DATE",EITLERPGLOBAL.formatDateDB(txtPJVDate.getText().trim()));
        ObjFASCard.setAttribute("PJ_VOUCHER_AMOUNT",txtPJVAmount.getText().trim());
        ObjFASCard.setAttribute("CUSTOM_DUTY_VOUCHER_NO",txtCustomVoucherNo.getText().trim());
        ObjFASCard.setAttribute("CUSTOM_DUTY_VOUCHER_DATE",EITLERPGLOBAL.formatDateDB(txtCustomDutyDate.getText().trim()));
        ObjFASCard.setAttribute("CUSTOM_DUTY_VOUCHER_AMOUNT",txtCustomAmount.getText().trim());
        ObjFASCard.setAttribute("LANDING_VOUCHER_NO",txtLandingVoucherNo.getText().trim());
        ObjFASCard.setAttribute("LANDING_VOUCHER_DATE",EITLERPGLOBAL.formatDateDB(txtLandingDate.getText().trim()));
        ObjFASCard.setAttribute("LANDING_VOUCHER_AMOUNT",txtLandingAmount.getText().trim());
        ObjFASCard.setAttribute("FREIGHT_VOUCHER_NO",txtFreightVoucherNo.getText().trim());
        ObjFASCard.setAttribute("FREIGHT_VOUCHER_DATE",EITLERPGLOBAL.formatDateDB(txtFreightDate.getText().trim()));
        ObjFASCard.setAttribute("FREIGHT_VOUCHER_AMOUNT",txtFreightAmount.getText().trim());
        ObjFASCard.setAttribute("INSTALLATION_VOUCHER_NO",txtInstallationVoucherNo.getText().trim());
        ObjFASCard.setAttribute("INSTALLATION_VOUCHER_DATE",EITLERPGLOBAL.formatDateDB(txtInstallationVoucherDate.getText().trim()));
        ObjFASCard.setAttribute("INSTALLATION_VOUCHER_AMOUNT",txtInstallationVoucherAmount.getText().trim());
        ObjFASCard.setAttribute("OTHERS_VOUCHER_NO","");//txtOthersVoucherNo.getText().trim()
        ObjFASCard.setAttribute("OTHERS_VOUCHER_DATE","0000-00-00");//EITLERPGLOBAL.formatDateDB(txtOthersVoucherDate.getText().trim())
        ObjFASCard.setAttribute("OTHERS_VOUCHER_AMOUNT","0");//txtOthersVoucherAmount.getText().trim()
        ObjFASCard.setAttribute("SERVICE_TAX_AMOUNT",txtServicetaxAmount.getText().trim());
        
        
        
        ObjFASCard.setAttribute("REMARKS",txtRemarks.getText().trim());
        
        // System.out.println("User " + EITLERPGLOBAL.gNewUserID + " User " + EITLERPGLOBAL.gUserID);
        ObjFASCard.setAttribute("HIERARCHY_ID",EITLERPGLOBAL.getComboCode(cmbHierarchy));
        ObjFASCard.setAttribute("FROM",EITLERPGLOBAL.gNewUserID);
        ObjFASCard.setAttribute("TO",EITLERPGLOBAL.getComboCode(cmbSendTo));
        ObjFASCard.setAttribute("FROM_REMARKS",txtToRemarks.getText());
        
        
        if(OpgApprove.isSelected()) {
            ObjFASCard.setAttribute("APPROVAL_STATUS","A");
        }
        
        if(OpgFinal.isSelected()) {
            ObjFASCard.setAttribute("APPROVAL_STATUS","F");
        }
        
        if(OpgReject.isSelected()) {
            ObjFASCard.setAttribute("APPROVAL_STATUS","R");
            ObjFASCard.setAttribute("SEND_DOC_TO",EITLERPGLOBAL.getComboCode(cmbSendTo));
        }
        
        if(OpgHold.isSelected()) {
            ObjFASCard.setAttribute("APPROVAL_STATUS","H");
        }
        //-------------------------------------------------//
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            ObjFASCard.setAttribute("CREATED_BY",EITLERPGLOBAL.gNewUserID);
            ObjFASCard.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        else {
            ObjFASCard.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gNewUserID);
            ObjFASCard.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        
        // SET DETAIL ITEM
        ObjFASCard.colFASItemsDetail.clear();
        
        for(int i=0;i<TableD.getRowCount();i++) {
            clsFASCardwithGRNDetail ObjCardDetail = new clsFASCardwithGRNDetail();
            
            ObjCardDetail.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
            ObjCardDetail.setAttribute("ASSET_NO",txtAssetNo.getText().trim());
            ObjCardDetail.setAttribute("ITEM_ID",txtItemID.getText().trim());
            ObjCardDetail.setAttribute("SR_NO",DataModelD.getValueByVariable("SR_NO",i));
            ObjCardDetail.setAttribute("YEAR",DataModelD.getValueByVariable("YEAR",i));
            ObjCardDetail.setAttribute("DEPT_ID",DataModelD.getValueByVariable("DEPT_ID",i));
            ObjCardDetail.setAttribute("AMOUNT",DataModelD.getValueByVariable("AMOUNT",i));
            ObjCardDetail.setAttribute("SAL_DOC_NO",DataModelD.getValueByVariable("SAL_DOC_NO",i));
            ObjCardDetail.setAttribute("SALE_DATE",DataModelD.getValueByVariable("SALE_DATE",i));
            ObjCardDetail.setAttribute("SALE_VALUE",DataModelD.getValueByVariable("SALE_VALUE",i));
            //ObjCardDetail.setAttribute("SJ_NUMBER",DataModelD.getValueByVariable("SJ_NUMBER",i));
            ObjCardDetail.setAttribute("REMARKS",DataModelD.getValueByVariable("REMARKS",i));
            ObjCardDetail.setAttribute("ASSET_STATUS",DataModelD.getValueByVariable("ASSET_STATUS",i));
            
            
            //ObjItem.setAttribute("SR_NO",DataModelL.getValueByVariable("SR_NO",i));
            //ObjItem.setAttribute("ITEM_ID",DataModelL.getValueByVariable("ITEM_ID",i));
            ObjFASCard.colFASItemsDetail.put(Integer.toString(ObjFASCard.colFASItemsDetail.size()+1),ObjCardDetail);
        }
        
        
        // SET DETAIL EX ITEM
        ObjFASCard.colFASItemsDetailExBook.clear();
        ObjFASCard.colFASItemsDetailExIT.clear();
        for(int i=0;i<TableD.getRowCount();i++) {
            
            
            //---ENTER THE BOOK DETAIL
            for(int j=0;j<TableB.getRowCount();j++) {
                clsFASCardwithGRNDetailEx ObjCardDetailExBook = new clsFASCardwithGRNDetailEx();
                
                ObjCardDetailExBook.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                ObjCardDetailExBook.setAttribute("ASSET_NO",txtAssetNo.getText().trim());
                ObjCardDetailExBook.setAttribute("ITEM_ID",txtItemID.getText().trim());
                ObjCardDetailExBook.setAttribute("SR_NO",j+1);
                ObjCardDetailExBook.setAttribute("DETAIL_SR_NO",i+1);
                ObjCardDetailExBook.setAttribute("TYPE","1"); //1 - BOOK ,2 - IT
                ObjCardDetailExBook.setAttribute("YEAR",DataModelB.getValueByVariable("YEAR",j));
                ObjCardDetailExBook.setAttribute("OPENING_BALANCE",DataModelB.getValueByVariable("OPENING_VALUE",j));
                ObjCardDetailExBook.setAttribute("ADDITIONS",DataModelB.getValueByVariable("ADDITIONS",j));
                ObjCardDetailExBook.setAttribute("CLOSING_BALANCE",DataModelB.getValueByVariable("CLOSING_BALANCE",j));
                ObjCardDetailExBook.setAttribute("DEPRECIATION_FROM_DATE",EITLERPGLOBAL.formatDateDB(DataModelB.getValueByVariable("DEPRN_FROM_DATE",j)));
                ObjCardDetailExBook.setAttribute("DEPRECIATION_TO_DATE",EITLERPGLOBAL.formatDateDB(DataModelB.getValueByVariable("DEPRN_TO_DATE",j)));
                ObjCardDetailExBook.setAttribute("DEPRECIATION_PERCENTAGE",DataModelB.getValueByVariable("DEPRN_PERCENTAGE",j));
                ObjCardDetailExBook.setAttribute("DEPRECIATION_METHOD",DataModelB.getValueByVariable("DEPRN_METHOD",j));
                ObjCardDetailExBook.setAttribute("DEPRECIATION_METHOD_NAME",DataModelB.getValueByVariable("DEPRN_METHOD_NAME",j));
                ObjCardDetailExBook.setAttribute("DEPRECIATION_FOR_THE_YEAR",DataModelB.getValueByVariable("DEPRN_FOR_THE_YEAR",j));
                ObjCardDetailExBook.setAttribute("SHIFT_ALLOW_FOR_THE_YEAR",DataModelB.getValueByVariable("SHIFT_ALLOW_FOR_THE_YEAR",j));
                ObjCardDetailExBook.setAttribute("CUMULATIVE_DEPRECIATION",DataModelB.getValueByVariable("CUM_DEPRN",j));
                ObjCardDetailExBook.setAttribute("WRITTEN_DOWN_VALUE",DataModelB.getValueByVariable("WDV",j));
                //ObjCardDetailExBook.setAttribute("NET_BLOCK",DataModelB.getValueByVariable("NET_BLOCK",j));
                ObjCardDetailExBook.setAttribute("REMARKS",DataModelB.getValueByVariable("REMARKS",j));
                ObjCardDetailExBook.setAttribute("SHIFT",DataModelB.getValueByVariable("SHIFTS",j));
                
                ObjFASCard.colFASItemsDetailExBook.put(Integer.toString(ObjFASCard.colFASItemsDetailExBook.size()+1),ObjCardDetailExBook);
            }
            //ENTER THE IT DETAIL
            for(int j=0;j<TableIT.getRowCount();j++) {
                clsFASCardwithGRNDetailEx ObjCardDetailExIT = new clsFASCardwithGRNDetailEx();
                
                ObjCardDetailExIT.setAttribute("COMPANY_ID",EITLERPGLOBAL.gCompanyID);
                ObjCardDetailExIT.setAttribute("ASSET_NO",txtAssetNo.getText().trim());
                ObjCardDetailExIT.setAttribute("ITEM_ID",txtItemID.getText().trim());
                ObjCardDetailExIT.setAttribute("SR_NO",j+1);
                ObjCardDetailExIT.setAttribute("DETAIL_SR_NO",i+1);
                ObjCardDetailExIT.setAttribute("TYPE","2"); //1 - BOOK ,2 - IT
                ObjCardDetailExIT.setAttribute("YEAR",DataModelIT.getValueByVariable("YEAR",j));
                ObjCardDetailExIT.setAttribute("OPENING_BALANCE",DataModelIT.getValueByVariable("OPENING_VALUE",j));
                ObjCardDetailExIT.setAttribute("ADDITIONS",DataModelIT.getValueByVariable("ADDITIONS",j));
                ObjCardDetailExIT.setAttribute("CLOSING_BALANCE",DataModelIT.getValueByVariable("CLOSING_BALANCE",j));
                ObjCardDetailExIT.setAttribute("DEPRECIATION_FROM_DATE",EITLERPGLOBAL.formatDateDB(DataModelIT.getValueByVariable("DEPRN_FROM_DATE",j)));
                ObjCardDetailExIT.setAttribute("DEPRECIATION_TO_DATE",EITLERPGLOBAL.formatDateDB(DataModelIT.getValueByVariable("DEPRN_TO_DATE",j)));
                ObjCardDetailExIT.setAttribute("DEPRECIATION_PERCENTAGE",DataModelIT.getValueByVariable("DEPRN_PERCENTAGE",j));
                ObjCardDetailExIT.setAttribute("DEPRECIATION_METHOD",DataModelIT.getValueByVariable("DEPRN_METHOD",j));
                ObjCardDetailExIT.setAttribute("DEPRECIATION_METHOD_NAME",DataModelIT.getValueByVariable("DEPRN_METHOD_NAME",j));
                ObjCardDetailExIT.setAttribute("DEPRECIATION_FOR_THE_YEAR",DataModelIT.getValueByVariable("DEPRN_FOR_THE_YEAR",j));
                ObjCardDetailExIT.setAttribute("SHIFT_ALLOW_FOR_THE_YEAR",DataModelIT.getValueByVariable("SHIFT_ALLOW_FOR_THE_YEAR",j));
                ObjCardDetailExIT.setAttribute("CUMULATIVE_DEPRECIATION",DataModelIT.getValueByVariable("CUM_DEPRN",j));
                ObjCardDetailExIT.setAttribute("WRITTEN_DOWN_VALUE",DataModelIT.getValueByVariable("WDV",j));
                //ObjCardDetailExIT.setAttribute("NET_BLOCK",DataModelIT.getValueByVariable("NET_BLOCK",j));
                ObjCardDetailExIT.setAttribute("REMARKS",DataModelIT.getValueByVariable("REMARKS",j));
                ObjCardDetailExIT.setAttribute("SHIFT",DataModelIT.getValueByVariable("SHIFTS",j));
                
                ObjFASCard.colFASItemsDetailExIT.put(Integer.toString(ObjFASCard.colFASItemsDetailExIT.size()+1),ObjCardDetailExIT);
            }
        }
        
        ObjFASCard.colOthers.clear();
        
        for(int i=0;i<TableOthers.getRowCount();i++) {
            clsFASOthersVoucher ObjOthers=new  clsFASOthersVoucher();
            
            ObjOthers.setAttribute("SR_NO",i+1);
            ObjOthers.setAttribute("OTHERS_VOUCHER_NO",(String)TableOthers.getValueAt(i,1));
            ObjOthers.setAttribute("OTHERS_VOUCHER_DATE",EITLERPGLOBAL.formatDateDB((String)TableOthers.getValueAt(i,2)));
            ObjOthers.setAttribute("OTHERS_VOUCHER_AMOUNT",(String)TableOthers.getValueAt(i,3));
            ObjFASCard.colOthers.put(Integer.toString(i+1),ObjOthers);
        }
        
    }
    
    
    
    
    private void SetupApproval() {
        
        // --- Hierarchy Change Rights Check --------
        /*if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,545)) {
            cmbHierarchy.setEnabled(true);
        }
        else {
            cmbHierarchy.setEnabled(false);
        }*/
        
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            cmbHierarchy.setEnabled(true);
        }
        else {
            cmbHierarchy.setEnabled(false);
        }
        if(EditMode == EITLERPGLOBAL.ADD || EditMode == EITLERPGLOBAL.EDIT) {
            //cmdNext1.setEnabled(true);
            cmdDisplay.setEnabled(true);
            cmdShowDetail.setEnabled(false);
        }
        else {
            //cmdNext1.setEnabled(false);
            cmdDisplay.setEnabled(false);
            cmdShowDetail.setEnabled(true);
        }
        
        
        
        //Set Default Hierarchy ID for User
        int DefaultID=clsHierarchy.getDefaultHierarchy((int)EITLERPGLOBAL.gCompanyID);
        EITLERPGLOBAL.setComboIndex(cmbHierarchy,DefaultID);
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            lnFromID=(int)EITLERPGLOBAL.gNewUserID;
            txtFrom.setText(clsUser.getUserName(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID));
            txtFromRemarks.setText("Creator of Document");
            cmdNext1.setEnabled(true);
            cmdAddOthers.setEnabled(true);
            cmdRemoveOthers.setEnabled(true);
        }
        else {
            
            cmdNext1.setEnabled(false);
            cmdAddOthers.setEnabled(false);
            cmdRemoveOthers.setEnabled(false);
            
            int FromUserID=ApprovalFlow.getFromID((int)EITLERPGLOBAL.gCompanyID, clsFASCardwithGRN.ModuleID,(String)ObjFASCard.getAttribute("ASSET_NO").getObj());
            lnFromID=FromUserID;
            String strFromUser=clsUser.getUserName(EITLERPGLOBAL.gCompanyID, FromUserID);
            String strFromRemarks=ApprovalFlow.getFromRemarks( (int)EITLERPGLOBAL.gCompanyID,clsFASCardwithGRN.ModuleID,FromUserID,(String)ObjFASCard.getAttribute("ASSET_NO").getObj());
            
            txtFrom.setText(strFromUser);
            txtFromRemarks.setText(strFromRemarks);
        }
        
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        GenerateFromCombo();
        
        if(clsHierarchy.CanSkip((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            cmbSendTo.setEnabled(true);
        }
        else {
            cmbSendTo.setEnabled(false);
        }
        
        if(clsHierarchy.CanFinalApprove((int)EITLERPGLOBAL.gCompanyID, SelHierarchyID, (int)EITLERPGLOBAL.gNewUserID)) {
            OpgFinal.setEnabled(true);
        }
        else {
            OpgFinal.setEnabled(false);
            OpgFinal.setSelected(false);
        }
        
        
        //In Edit Mode Hierarchy Should be disabled
        if(EditMode==EITLERPGLOBAL.EDIT) {
            cmbHierarchy.setEnabled(false);
        }
        
        if(EditMode==0) {
            //Disable all hierarchy controls if not in Add/Edit Mode
            cmbHierarchy.setEnabled(false);
            txtFrom.setEnabled(false);
            txtFromRemarks.setEnabled(false);
            OpgApprove.setEnabled(false);
            OpgFinal.setEnabled(false);
            OpgReject.setEnabled(false);
            cmbSendTo.setEnabled(false);
            txtToRemarks.setEnabled(false);
        }
        
    }
    
    
    
    private void ClearFields() {
        
        txtAssetDate.setText("");
        txtAssetNo.setText("");
        txtAuditRemarks.setText("");
        //        txtBookRate.setText("");
        txtCustomAmount.setText("0.0");
        txtCustomDutyDate.setText("");
        txtCustomVoucherNo.setText("");
        txtDepartmentID.setText("");
        txtDepartmentName.setText("");
        txtDisposeDate.setText("");
        txtExpectedLife.setText("");
        //txtFinalAmount.setText("");
        txtFreightAmount.setText("0.0");
        txtFreightDate.setText("");
        txtFreightVoucherNo.setText("");
        txtFrom.setText("");
        txtFromRemarks.setText("");
        txtGuarantee.setText("");
        //        txtITRate.setText("");
        txtInstallationVoucherAmount.setText("0.0");
        txtInstallationDate.setText("");
        txtInstallationVoucherNo.setText("");
        txtInstallationVoucherDate.setText("");
        txtInvoiceDate.setText("");
        txtInvoiceNo.setText("");
        txtGrnNo.setText("");
        txtItemDesc.setText("");
        txtAssetDesc.setText("");
        txtItemID.setText("");
        txtLandingAmount.setText("0.0");
        txtLandingDate.setText("");
        txtLandingVoucherNo.setText("");
        txtMachineNo.setText("");
        txtModelNo.setText("");
        txtNominalCode.setText("");
        txtOthersVoucherAmount.setText("0.0");
        txtOthersVoucherDate.setText("");
        txtOthersVoucherNo.setText("");
        txtPJVAmount.setText("0.0");
        txtPJVDate.setText("");
        txtPJVNo.setText("");
        txtPODate.setText("");
        txtPONo.setText("");
        txtPurchaseYear.setText("");
        txtRemarks.setText("");
        txtSizeCapacity.setText("");
        txtSupplierID.setText("");
        txtSupplierName.setText("");
        txtToRemarks.setText("");
        txtTotalQty.setText("");
        txtWarranty.setText("");
        txtServicetaxAmount.setText("0.0");
        
        FormatGridB();
        FormatGridD();
        FormatGridIT();
        FormatGridOthers();
        FormatGridOthers();
        
        FormatGridA();
        FormatGridHS();
        
    }
    
    private void SetFields(boolean pStat) {
        
        //txtItemID.setEnabled(pStat);
        //txtSupplierID.setEnabled(pStat);
        //txtDepartmentID.setEnabled(pStat);
        txtAssetDate.setEnabled(pStat);
        txtExpectedLife.setEnabled(pStat);
        txtWarranty.setEnabled(pStat);
        //txtPurchaseYear.setEnabled(pStat);
        txtDisposeDate.setEnabled(pStat);
        txtSizeCapacity.setEnabled(pStat);
        txtInstallationDate.setEnabled(pStat);
        txtModelNo.setEnabled(pStat);
        txtMachineNo.setEnabled(pStat);
        txtRemarks.setEnabled(pStat);
        txtAssetDesc.setEnabled(pStat);
        txtGuarantee.setEnabled(pStat);
        //txtTotalQty.setEnabled(pStat);
        //txtPONo.setEnabled(pStat);
        //txtPODate.setEnabled(pStat);
        //txtNominalCode.setEnabled(pStat);
        
        //txtInvoiceNo.setEnabled(pStat);
        //txtInvoiceDate.setEnabled(pStat);
        
        //txtPJVNo.setEnabled(pStat);
        //txtPJVDate.setEnabled(pStat);
        //txtPJVAmount.setEnabled(pStat);
        
        txtCustomVoucherNo.setEnabled(pStat);
        //txtCustomAmount.setEnabled(pStat);
        //txtCustomDutyDate.setEnabled(pStat);
        
        txtLandingVoucherNo.setEnabled(pStat);
        //txtLandingDate.setEnabled(pStat);
        //txtLandingAmount.setEnabled(pStat);
        
        txtFreightVoucherNo.setEnabled(pStat);
        //txtFreightDate.setEnabled(pStat);
        //txtFreightAmount.setEnabled(pStat);
        
        txtInstallationVoucherNo.setEnabled(pStat);
        //txtInstallationVoucherDate.setEnabled(pStat);
        //txtInstallationVoucherAmount.setEnabled(pStat);
        
        txtOthersVoucherNo.setEnabled(pStat);
        //txtOthersVoucherDate.setEnabled(pStat);
        //txtOthersVoucherAmount.setEnabled(pStat);
        txtServicetaxAmount.setEnabled(pStat);
        //        cmdAddOthers.setEnabled(pStat);
        //        cmdRemoveOthers.setEnabled(pStat);
        //SetupApproval();
        
       /* txtDocNo.setEnabled(false);
        //txtDocDate.setEnabled(pStat);
        txtSuppCode.setEnabled(pStat);
        
        if(pStat&&txtSuppCode.getText().trim().equals("000000")) {
            txtSuppName.setEnabled(pStat);
        }
        
        txtChalanNo.setEnabled(pStat);
        txtChalanDate.setEnabled(pStat);
        txtLRNo.setEnabled(pStat);
        txtLRDate.setEnabled(pStat);
        txtInvoiceNo.setEnabled(pStat);
        txtInvoiceDate.setEnabled(pStat);
        cmbTransporter.setEnabled(pStat);
        txtTransName.setEnabled(pStat);
        txtGatepassNo.setEnabled(pStat);
        cmbCurrency.setEnabled(pStat);
        txtCurrencyRate.setEnabled(pStat);
        cmbStatus.setEnabled(pStat);
        chkImportConcess.setEnabled(pStat);
        chkCancelled.setEnabled(pStat);
        txtRemarks.setEnabled(pStat);
        txtInvoiceAmount.setEnabled(pStat);
        */
        OpgApprove.setEnabled(pStat);
        OpgFinal.setEnabled(pStat);
        OpgReject.setEnabled(pStat);
        OpgHold.setEnabled(pStat);
        txtToRemarks.setEnabled(pStat);
        
        //cmdInsert.setEnabled(pStat);
        //cmdAdd.setEnabled(pStat);
        //cmdRemove.setEnabled(pStat);
        //cmdInsertSTM.setEnabled(pStat);
        //cmdRead.setEnabled(pStat);
        //txtSuffix.setEnabled(pStat);
        
        SetupApproval();
        
        //DataModelH.TableReadOnly(!pStat);
        //DataModelD.TableReadOnly(!pStat);
        
        
    }
    private boolean ValidateHeader() {
        
        
        if(txtAssetDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Asset Date");
            return false;
        }
        if(!EITLERPGLOBAL.isDate(txtAssetDate.getText().trim())) {
            JOptionPane.showMessageDialog(null,"Please enter Valid Asset Date");
            return false;
        }
        
        
        if(txtInstallationDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Installation Date");
            return false;
        }
        //
        //         java.sql.Date AssetDate = java.sql.Date.valueOf(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText()));
        //            java.sql.Date InstallationDate = java.sql.Date.valueOf(EITLERPGLOBAL.formatDateDB(txtInstallationDate.getText()));
        //        if(!txtInstallationDate.getText().trim().equals("")) {
        //
        //            if(AssetDate.after(InstallationDate)) {
        //                    JOptionPane.showMessageDialog(null,"Installation Date must be after the asset purchase date.");
        //                    return false;
        //                }
        //
        //        }
        
        if(!EITLERPGLOBAL.isDate(txtInstallationDate.getText().trim())) {
            JOptionPane.showMessageDialog(null,"Please enter Valid Installation Date");
            return false;
        }
        
        if(txtItemID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Item Id");
            return false;
        }
        
        if(txtFinalAmount.getText().trim().equals("") || Double.parseDouble(txtFinalAmount.getText().trim()) <=0 ) {
            JOptionPane.showMessageDialog(null,"Final Amount is Zero you can't create asset card with Zero amount");
            return false;
        }
        
        if(!txtOthersVoucherAmount.getText().trim().toString().equals("")) {
            if(Double.parseDouble(txtFinalAmount.getText().trim()) <0 ) {
                JOptionPane.showMessageDialog(null,"Other Voucher Amount is less than zero");
                return false;
            }
        }
        
        if(!txtServicetaxAmount.getText().trim().toString().equals("")) {
            if(Double.parseDouble(txtServicetaxAmount.getText().trim()) <0 ) {
                JOptionPane.showMessageDialog(null,"Service Voucher Amount is less than zero");
                return false;
            }
        }
        
        double Final_Amount = Double.parseDouble(txtFinalAmount.getText().trim());
        double Service_Amount = Double.parseDouble(txtServicetaxAmount.getText().trim());
        if(Service_Amount>=Final_Amount) {
            JOptionPane.showMessageDialog(null,"Service Voucher Amount can not be greater than Total Amount ");
            return false;
        }
        
        SQL="SELECT A.ITEM_ID,A.ITEM_DESCRIPTION FROM "+ EITLERPGLOBAL.DBName +".D_INV_ITEM_MASTER A,FINANCE.D_FAS_ITEM_MASTER_HEADER B "+
        "WHERE B.COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND A.ITEM_ID = B.ITEM_ID  "+
        "AND A.APPROVED=1 AND A.CANCELLED = 0   "+
        "AND B.APPROVED=1 AND B.CANCELLED = 0   "+
        "AND A.CATEGORY_ID=1 AND A.ITEM_ID = '" + txtItemID.getText().trim() + "' "+
        "ORDER BY A.ITEM_ID";
        if(!data.IsRecordExist(SQL)) {
            JOptionPane.showMessageDialog(null,"Invalid Item ID, Please enter valid Item ID");
            return false;
        }
        
        if(txtSupplierID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Supplier ID");
            return false;
        }
        
        if(!txtSupplierID.getText().trim().equals("")) {
            if(!clsSupplier.IsValidSuppCode(EITLERPGLOBAL.gCompanyID,txtSupplierID.getText())) {
                JOptionPane.showMessageDialog(null,"Please enter valid supplier Id");
                return false;
            }
        }
        
        if(txtDepartmentID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Department ID");
            return false;
        }
        
        if(!txtDepartmentID.getText().trim().equals("")) {
            if(!clsDepartment.IsValidDeptCode(EITLERPGLOBAL.gCompanyID,Integer.parseInt(txtDepartmentID.getText()))) {
                JOptionPane.showMessageDialog(null,"Please enter valid Department Id");
                return false;
            }
        }
        
        if(Double.parseDouble(txtTotalQty.getText().trim())<=0) {
            if(!clsDepartment.IsValidDeptCode(EITLERPGLOBAL.gCompanyID,Integer.parseInt(txtDepartmentID.getText()))) {
                JOptionPane.showMessageDialog(null,"Please enter Total Qty");
                return false;
            }
        }
        return true;
    }
    
    private boolean Validate() {
        
        //----------------------------------------------------------------
        //-----------------START HEADER LEVEL VALIDATION------------------
        //----------------------------------------------------------------
        
        if(!ValidateHeader()) {
            return false;
        }
        
        
        if(txtItemID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Item Id");
            return false;
        }
        
        if(txtFinalAmount.getText().trim().equals("") || Double.parseDouble(txtFinalAmount.getText().trim()) <=0 ) {
            JOptionPane.showMessageDialog(null,"Final Amount is Zero you can't create asset card with Zero amount");
            return false;
        }
        
        SQL="SELECT A.ITEM_ID,A.ITEM_DESCRIPTION FROM "+ EITLERPGLOBAL.DBName +".D_INV_ITEM_MASTER A,FINANCE.D_FAS_ITEM_MASTER_HEADER B "+
        "WHERE B.COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND A.ITEM_ID = B.ITEM_ID  "+
        "AND A.APPROVED=1 AND A.CANCELLED = 0   "+
        "AND B.APPROVED=1 AND B.CANCELLED = 0   "+
        "AND A.CATEGORY_ID=1 AND A.ITEM_ID = '" + txtItemID.getText().trim() + "' "+
        "ORDER BY A.ITEM_ID";
        if(!data.IsRecordExist(SQL)) {
            JOptionPane.showMessageDialog(null,"Invalid Item ID, Please enter valid Item ID");
            return false;
        }
        if(txtAssetDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Asset Date");
            return false;
        }
        
        
        
        if(!EITLERPGLOBAL.isDate(txtAssetDate.getText().trim())) {
            JOptionPane.showMessageDialog(null,"Please enter Valid Asset Date");
            return false;
        }
        
        if(cmbHierarchy.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(null,"Please select the hierarchy.");
            return false;
        }
        
        if((!OpgApprove.isSelected())&&(!OpgReject.isSelected())&&(!OpgFinal.isSelected())&&(!OpgHold.isSelected())) {
            JOptionPane.showMessageDialog(null,"Please select the Approval Action");
            return false;
        }
        
        if(txtSupplierID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Supplier ID");
            return false;
        }
        
        if(!txtSupplierID.getText().trim().equals("")) {
            if(!clsSupplier.IsValidSuppCode(EITLERPGLOBAL.gCompanyID,txtSupplierID.getText())) {
                JOptionPane.showMessageDialog(null,"Please enter valid supplier Id");
                return false;
            }
        }
        
        if(txtDepartmentID.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please Enter Department ID");
            return false;
        }
        
        if(!txtDepartmentID.getText().trim().equals("")) {
            if(!clsDepartment.IsValidDeptCode(EITLERPGLOBAL.gCompanyID,Integer.parseInt(txtDepartmentID.getText()))) {
                JOptionPane.showMessageDialog(null,"Please enter valid Department Id");
                return false;
            }
        }
        
        if(OpgReject.isSelected()&&txtToRemarks.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter the remarks for rejection");
            return false;
        }
        
        if( (OpgApprove.isSelected()||OpgReject.isSelected())&&cmbSendTo.getItemCount()<=0) {
            JOptionPane.showMessageDialog(null,"Please select the user, to whom Send document to be send");
            return false;
        }
        
        if(!txtItemID.getText().trim().equals(lblItemIDDetail.getText().trim())) {
            JOptionPane.showMessageDialog(null,"You Can't change Item Id After Generating Detail Information.");
            return false;
        }
        
        
        
        //----------------------------------------------//
        //-------------VOUCHER VALIDATION---------------//
        //----------------------------------------------//
        
        double CurrentAmount=0.0;
        double Amount=0.0;
        
        if(!txtPJVNo.getText().trim().toString().equals("")) {
            CurrentAmount = Double.parseDouble(txtPJVAmount.getText().trim());
            SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtPJVNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
            
            if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Invalid Purchase JV Vocuher No.");
                return false;
            }
            
            SQL="SELECT SUM(B.AMOUNT) "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtPJVNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
            
            Amount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
            
            SQL ="SELECT SUM(PJ_VOUCHER_AMOUNT) "+
            "FROM D_FAS_MASTER_HEADER "+
            "WHERE PJ_VOUCHER_NO = '" + txtPJVNo.getText().trim() + "' AND CANCELLED =0 "+
            "AND ASSET_NO <> '" + txtAssetNo.getText().trim() + "' ";
            
            if(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL) + CurrentAmount > Amount ) {
                JOptionPane.showMessageDialog(null,"Amount of Purchase JV Voucher Amount is already used.");
                return false;
            }
        }
        CurrentAmount=0.0;
        //--------------------------------------------------------------//
        
        if(!txtCustomVoucherNo.getText().trim().toString().equals("")) {
            CurrentAmount = Double.parseDouble(txtCustomAmount.getText().trim());
            SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtCustomVoucherNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '' ";//" + txtSupplierID.getText().trim() + "'
            
            if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Invalid Custom Duty Vocuher No.");
                return false;
            }
            
            SQL="SELECT SUM(B.AMOUNT) "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtCustomVoucherNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '' ";//" + txtSupplierID.getText().trim() + "
            
            Amount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
            
            SQL ="SELECT SUM(CUSTOM_DUTY_VOUCHER_AMOUNT) "+
            "FROM D_FAS_MASTER_HEADER "+
            "WHERE CUSTOM_DUTY_VOUCHER_NO = '" + txtCustomVoucherNo.getText().trim() + "' AND CANCELLED =0 "+
            "AND ASSET_NO <> '" + txtAssetNo.getText().trim() + "' ";
            
            if(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL) + CurrentAmount > Amount) {
                JOptionPane.showMessageDialog(null,"Amount of Custom Duty Voucher is already used.");
                return false;
            }
        }
        CurrentAmount=0.0;
        
        //--------------------------------------------------------------//
        if(!txtLandingVoucherNo.getText().trim().toString().equals("")) {
            CurrentAmount= Double.parseDouble(txtLandingAmount.getText().trim());
            
            SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtLandingVoucherNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
            
            if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Invalid Landing / Clearing Vocuher No.");
                return false;
            }
            
            SQL="SELECT SUM(B.AMOUNT) "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtLandingVoucherNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
            
            Amount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
            
            SQL ="SELECT SUM(LANDING_VOUCHER_AMOUNT) "+
            "FROM D_FAS_MASTER_HEADER "+
            "WHERE LANDING_VOUCHER_NO = '" + txtLandingVoucherNo.getText().trim() + "' AND CANCELLED =0 "+
            "AND ASSET_NO <> '" + txtAssetNo.getText().trim() + "' ";
            
            if(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL) + CurrentAmount > Amount) {
                JOptionPane.showMessageDialog(null,"Amount of Landing / Clearing Voucher is already used.");
                return false;
            }
        }
        CurrentAmount=0.0;
        
        //--------------------------------------------------------------//
        if(!txtFreightVoucherNo.getText().trim().toString().equals("")) {
            CurrentAmount=Double.parseDouble(txtFreightAmount.getText().trim());
            
            SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtFreightVoucherNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
            
            if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Invalid Freight & Octroi Vocuher No.");
                return false;
            }
            
            SQL="SELECT SUM(B.AMOUNT) "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtFreightVoucherNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
            
            Amount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
            
            SQL ="SELECT SUM(FREIGHT_OCTROI_VOUCHER_AMOUNT) "+
            "FROM D_FAS_MASTER_HEADER "+
            "WHERE FREIGHT_OCTROI_VOUCHER_NO = '" + txtFreightVoucherNo.getText().trim() + "' AND CANCELLED =0 "+
            "AND ASSET_NO <> '" + txtAssetNo.getText().trim() + "' ";
            
            if(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL) + CurrentAmount > Amount) {
                JOptionPane.showMessageDialog(null,"Amount of Freight & Octroi Voucher is already used.");
                return false;
            }
        }
        
        CurrentAmount=0.0;
        
        //--------------------------------------------------------------//
        if(!txtInstallationVoucherNo.getText().trim().toString().equals("")) {
            CurrentAmount=Double.parseDouble(txtInstallationVoucherAmount.getText().trim());
            
            SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtInstallationVoucherNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
            
            if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
                JOptionPane.showMessageDialog(null,"Invalid Installation Vocuher No.");
                return false;
            }
            
            SQL="SELECT SUM(B.AMOUNT) "+
            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + txtInstallationVoucherNo.getText().trim() + "' "+
            "AND B.EFFECT ='C' AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "' ";
            
            Amount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
            
            SQL ="SELECT SUM(INSTALLATION_VOUCHER_AMOUNT) "+
            "FROM D_FAS_MASTER_HEADER "+
            "WHERE INSTALLATION_VOUCHER_NO = '" + txtInstallationVoucherNo.getText().trim() + "' AND CANCELLED =0 "+
            "AND ASSET_NO <> '" + txtAssetNo.getText().trim() + "' ";
            
            if(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL) + CurrentAmount > Amount) {
                JOptionPane.showMessageDialog(null,"Amount of Installation Voucher is already used.");
                return false;
            }
        }
        CurrentAmount=0.0;
        
        //--------------------------------------------------------------//
        //        for(int i=0;i<=TableOthers.getRowCount()-1;i++) {
        //
        //            String strOthersVoucherNo=(String)TableOthers.getValueAt(i,1);
        //            String strOthersVoucherAmount=(String)TableOthers.getValueAt(i,3);
        //
        //        if(!strOthersVoucherNo.equals("")) {
        //            CurrentAmount= Double.parseDouble(strOthersVoucherAmount);
        //
        //
        //            SQL="SELECT A.VOUCHER_NO,A.VOUCHER_DATE,B.AMOUNT "+
        //            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
        //            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + strOthersVoucherNo + "' "+
        //            "AND B.EFFECT ='C' ";//AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "'
        //
        //            if(!data.IsRecordExist(SQL,FinanceGlobal.FinURL)) {
        //                JOptionPane.showMessageDialog(null,"Invalid Other Vocuher No.");
        //                return false;
        //            }
        //
        //            SQL="SELECT SUM(B.AMOUNT) "+
        //            "FROM D_FIN_VOUCHER_HEADER A,D_FIN_VOUCHER_DETAIL B "+
        //            "WHERE A.COMPANY_ID =  '" + EITLERPGLOBAL.gCompanyID + "' AND A.VOUCHER_NO = B.VOUCHER_NO AND A.VOUCHER_NO = '" + strOthersVoucherNo + "' "+
        //            "AND B.EFFECT ='C' ";//AND B.SUB_ACCOUNT_CODE = '" + txtSupplierID.getText().trim() + "'
        //
        //            Amount = data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL);
        //
        //            SQL ="SELECT SUM(A.OTHERS_VOUCHER_AMOUNT) "+
        //            "FROM D_FAS_OTHER_VOUCHER A,D_FAS_MASTER_HEADER B"+
        //            "WHERE A.OTHERS_VOUCHER_NO = '" + strOthersVoucherNo + "' "+
        //            "AND A.ASSET_NO <> '" + txtAssetNo.getText().trim() + "' AND A.ASSET_NO = B.ASSET_NO AND B.CANCELLED = 0 ";
        //
        //
        //            if(data.getDoubleValueFromDB(SQL,FinanceGlobal.FinURL) + CurrentAmount > Amount) {
        //                JOptionPane.showMessageDialog(null,"Amount of Other Voucher NO. '"+strOthersVoucherNo+"' is already used.");
        //                return false;
        //            }
        //        }
        //        }
        // CurrentAmount=0.0;
        
        
        //----------------------------------------------------------------
        //-----------------END HEADER LEVEL VALIDATION--------------------
        //----------------------------------------------------------------
        
        
        //----------------------------------------------------------------
        //-----------------START DETAIL LEVEL VALIDATION------------------
        //----------------------------------------------------------------
        
        if(TableD.getRowCount()<=0) {
            JOptionPane.showMessageDialog(null,"No Data Found in the Item Detail Table");
            return false;
        }
        
        //VALIDATION FROM DETAIL TABLE
        for(int i=0;i<TableD.getRowCount();i++) {
            // System.out.println(DataModelD.getValueByVariable("AMOUNT",i));
            if(DataModelD.getValueByVariable("AMOUNT",i).equals("") || Double.parseDouble(DataModelD.getValueByVariable("AMOUNT",i)) <=0 ) {
                JOptionPane.showMessageDialog(null,"Invalid Amount in Item Detail at Sr No: " + i+1 + " ,Amount must be Greater then Zero.");
                return false;
            }
            if(DataModelD.getValueByVariable("DEPT_ID",i).equals("")) {
                JOptionPane.showMessageDialog(null,"Invalid Department Id in Item Detail at Sr No: " + i+1 + " ,Please Enter Department Id.");
                return false;
            }
            
            String FAmount = String.valueOf(new BigDecimal(EITLERPGLOBAL.round(Double.parseDouble(txtFinalAmount.getText().trim())/Double.parseDouble(txtTotalQty.getText().trim()),0)));
            if(!DataModelD.getValueByVariable("AMOUNT",i).equals(FAmount)) {
                JOptionPane.showMessageDialog(null,"Final Amount and Depriciation Amount is not Match in Detail");
                return false;
            }
        }
        //END VALIDATION
        
        if(TableB.getRowCount()<=0) {
            JOptionPane.showMessageDialog(null,"No Data Found in the Book Value Table");
            return false;
        }
        if(TableIT.getRowCount()<=0) {
            JOptionPane.showMessageDialog(null,"No Data Found in the IT Value Table");
            return false;
        }
        
        
        //VALIDATION FROM BOOK DETAIL TABLE
        for(int i=0;i<TableB.getRowCount();i++) {
            
            if(i==0) {
                if(!DataModelB.getValueByVariable("DEPRN_FROM_DATE",i).equals(txtAssetDate.getText())) {
                    JOptionPane.showMessageDialog(null,"Asset Date and Depriciation From Date is not Match");
                    return false;
                }
            }
           /*if(Double.parseDouble(TableB.getValueAt(i, 11).toString())<=0) {
                JOptionPane.showMessageDialog(null,"Invalid Closing Value in Book Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            */
            //System.out.println(DataModelB.getValueByVariable("DEPRN_FOR_THE_YEAR",i));
            if(DataModelB.getValueByVariable("DEPRN_FOR_THE_YEAR",i).equals("") || Double.parseDouble(DataModelB.getValueByVariable("DEPRN_FOR_THE_YEAR",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Depreciation in IT Detail at Sr No: " + i+1 + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelB.getValueByVariable("CLOSING_VALUE",i).equals("") || Double.parseDouble(DataModelB.getValueByVariable("CLOSING_VALUE",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Closing Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelB.getValueByVariable("OPENING_VALUE",i).equals("") || Double.parseDouble(DataModelB.getValueByVariable("OPENING_VALUE",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Opening Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelB.getValueByVariable("WDV",i).equals("") || Double.parseDouble(DataModelB.getValueByVariable("WDV",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Written Down Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelB.getValueByVariable("CUM_DEPRN",i).equals("") || Double.parseDouble(DataModelB.getValueByVariable("CUM_DEPRN",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Cumulative Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelB.getValueByVariable("DEPRN_FROM_DATE",i).equals("")) {
                JOptionPane.showMessageDialog(null,"Please Enter Depriciation From Date in IT Detail Table at Sr No: "+i);
                return false;
            }
            
            if(DataModelB.getValueByVariable("DEPRN_TO_DATE",i).equals("")) {
                JOptionPane.showMessageDialog(null,"Invalid Depriciation To Date in IT Detail Table at Sr No: " + i + " ,Please Enter Valid Depriciation To Date.");
                return false;
            }
            
            
            if(DataModelB.getValueByVariable("DEPRN_METHOD",i).equals("") || Double.parseDouble(DataModelB.getValueByVariable("DEPRN_METHOD",i)) <= 0 ) {
                JOptionPane.showMessageDialog(null,"Depreciation Mehod Not Found in IT Detail Table at Sr No: "+i);
                return false;
            }
            
            if(DataModelB.getValueByVariable("DEPRN_PERCENTAGE",i).equals("") || Double.parseDouble(DataModelB.getValueByVariable("DEPRN_PERCENTAGE",i))<=0 ) {
                JOptionPane.showMessageDialog(null,"Invalid Depriciation Percentage not Found in IT Detail Table at Sr No: " + i + " ,Please Enter Valid Depriciation Percentage.");
                return false;
            }
            
            if(DataModelB.getValueByVariable("DEPT_ID",i).equals("")) {
                JOptionPane.showMessageDialog(null,"Invalid Department Id in IT Detail Table at Sr No: " + i + " ,Please Enter Department Id.");
                return false;
            }
            
            
            
        }
        //END VALIDATION
        
        
        //VALIDATION FROM IT DETAIL TABLE
        for(int i=0;i<TableIT.getRowCount();i++) {
            
            if(i==0) {
                if(!DataModelB.getValueByVariable("DEPRN_FROM_DATE",i).equals(txtAssetDate.getText())) {
                    JOptionPane.showMessageDialog(null,"Asset Date and Depriciation From Date is not Match");
                    return false;
                }
            }
           /*if(Double.parseDouble(TableB.getValueAt(i, 11).toString())<=0) {
                JOptionPane.showMessageDialog(null,"Invalid Closing Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            */
            //System.out.println(TableIT.getValueByVariable("DEPRN_FOR_THE_YEAR",i));
            if(DataModelIT.getValueByVariable("DEPRN_FOR_THE_YEAR",i).equals("") || Double.parseDouble(DataModelIT.getValueByVariable("DEPRN_FOR_THE_YEAR",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Depreciation in IT Detail at Sr No: " + i+1 + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelIT.getValueByVariable("CLOSING_VALUE",i).equals("") || Double.parseDouble(DataModelIT.getValueByVariable("CLOSING_VALUE",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Closing Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelIT.getValueByVariable("OPENING_VALUE",i).equals("") || Double.parseDouble(DataModelIT.getValueByVariable("OPENING_VALUE",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Opening Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelIT.getValueByVariable("WDV",i).equals("") || Double.parseDouble(DataModelIT.getValueByVariable("WDV",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Written Down Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelIT.getValueByVariable("CUM_DEPRN",i).equals("") || Double.parseDouble(DataModelIT.getValueByVariable("CUM_DEPRN",i)) <=0) {
                JOptionPane.showMessageDialog(null,"Invalid Cumulative Value in IT Detail at Sr No: " + i + " ,Amount must be Greater then Zero.");
                return false;
            }
            
            if(DataModelIT.getValueByVariable("DEPRN_FROM_DATE",i).equals("")) {
                JOptionPane.showMessageDialog(null,"Please Enter Depriciation From Date in IT Detail Table at Sr No: "+i);
                return false;
            }
            
            if(DataModelIT.getValueByVariable("DEPRN_TO_DATE",i).equals("")) {
                JOptionPane.showMessageDialog(null,"Invalid Depriciation To Date in IT Detail Table at Sr No: " + i + " ,Please Enter Valid Depriciation To Date.");
                return false;
            }
            
            
            if(DataModelIT.getValueByVariable("DEPRN_METHOD",i).equals("") || Double.parseDouble(DataModelIT.getValueByVariable("DEPRN_METHOD",i)) <= 0 ) {
                JOptionPane.showMessageDialog(null,"Depreciation Mehod Not Found in IT Detail Table at Sr No: "+i);
                return false;
            }
            
            if(DataModelIT.getValueByVariable("DEPRN_PERCENTAGE",i).equals("") || Double.parseDouble(DataModelIT.getValueByVariable("DEPRN_PERCENTAGE",i))<=0 ) {
                JOptionPane.showMessageDialog(null,"Invalid Depriciation Percentage not Found in IT Detail Table at Sr No: " + i + " ,Please Enter Valid Depriciation Percentage.");
                return false;
            }
            
            if(DataModelIT.getValueByVariable("DEPT_ID",i).equals("")) {
                JOptionPane.showMessageDialog(null,"Invalid Department Id in IT Detail Table at Sr No: " + i + " ,Please Enter Department Id.");
                return false;
            }
        }
        //END VALIDATION
        //----------------------------------------------------------------
        //-----------------END DETAIL LEVEL VALIDATION------------------
        //----------------------------------------------------------------
        
        //----------------------------------------------------------------
        //-----------------START FINCANCE LEVEL VALIDATION------------------
        //----------------------------------------------------------------
        
        
        //----------------------------------------------------------------
        //-----------------END FINANCE LEVEL VALIDATION--------------------
        //----------------------------------------------------------------
        
        
        
        
        
        return true;
        
    }
    
    private void Add() {
        
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        
        
        //Now Generate new document no.
        SelectFirstFree aList=new SelectFirstFree();
        aList.ModuleID=clsFASCardwithGRN.ModuleID;
        
        if(aList.ShowList()) {
            EditMode=EITLERPGLOBAL.ADD;
            SetFields(true);
            DisableToolbar();
            ClearFields();
            SelPrefix=aList.Prefix; //Selected Prefix;
            SelSuffix=aList.Suffix;
            FFNo=aList.FirstFreeNo;
            
            SetupApproval();
            //Display newly generated document no.
            txtAssetNo.setText(clsFirstFree.getNextFreeNo(EITLERPGLOBAL.gCompanyID, clsFASCardwithGRN.ModuleID, FFNo,  false));
            txtAssetDate.setText(EITLERPGLOBAL.getCurrentDate());
            
            
            
            lblTitle.setText("Fixed Asset Card (With GRN) - "+txtAssetNo.getText());
            lblTitle.setBackground(Color.BLUE);
        }
        else {
            JOptionPane.showMessageDialog(null,"You must select doucment number prefix. If no prefixes found in the list, Please do entry in First Free Nos.");
        }
        //----------------------------------//
        
    }
    
    private void Edit() {
        
        //== Financial Year Validation-------------//
        if(!EITLERPGLOBAL.YearIsOpen) {
            JOptionPane.showMessageDialog(null,"The year is closed. You cannot enter/edit any transaction");
            return;
        }
        //----------------------------------//
        
        String lDocNo=(String)ObjFASCard.getAttribute("ASSET_NO").getObj();
        if(ObjFASCard.IsEditable(EITLERPGLOBAL.gCompanyID, lDocNo, EITLERPGLOBAL.gNewUserID,clsFASCardwithGRN.ModuleID)) {
            EITLERPGLOBAL.ChangeCursorToWait(this);
            
            EditMode=EITLERPGLOBAL.EDIT;
            //---New Change ---//
            GenerateCombos();
            DisplayData();
            //----------------//
            
            if(ApprovalFlow.IsCreator(clsFASCardwithGRN.ModuleID,lDocNo)||clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,542)) {
                SetFields(true);
                cmdNext1.setEnabled(true);
                txtInstallationDate.setEnabled(true);
                txtAssetDate.setEnabled(true);
                cmdAddOthers.setEnabled(true);
                cmdRemoveOthers.setEnabled(true);
            }
            else {
                EnableApproval();
                cmdNext1.setEnabled(false);
                txtInstallationDate.setEnabled(false);
                txtAssetDate.setEnabled(false);
                cmdAddOthers.setEnabled(false);
                cmdRemoveOthers.setEnabled(false);
            }
            
            DisableToolbar();
            //txtDocDate.requestFocus();
            EITLERPGLOBAL.ChangeCursorToDefault(this);
        }
        else {
            JOptionPane.showMessageDialog(null,"You cannot edit this record. It is either approved/rejected or waiting approval for other user");
        }
        
    }
    
    
    private void Save() {
        //Form level validations
        if(Validate()==false) {
            return; //Validation failed
        }
        
        //EITLERPGLOBAL.ChangeCursorToWait(this);
        
        SetData();
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(ObjFASCard.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+ObjFASCard.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(ObjFASCard.Update()) {
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+ObjFASCard.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        try {
            frmPA.RefreshView();
        }catch(Exception e){}
        ShowMessage("Ready");
        EITLERPGLOBAL.ChangeCursorToDefault(this);
        
        
    }
    
    private void Cancel() {
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
    }
    
    private void Find() {
        
        Loader ObjLoader=new Loader(this,"EITLERP.Finance.frmFASCardwithGRNFind",true);
        frmFASCardwithGRNFind ObjReturn= (frmFASCardwithGRNFind) ObjLoader.getObj();
        
        if(ObjReturn.Cancelled==false) {
            if(!ObjFASCard.Filter(ObjReturn.strQuery,EITLERPGLOBAL.gCompanyID)) {
                JOptionPane.showMessageDialog(null,"No records found.");
            }
            MoveLast();
        }
    }
    
    private void MoveFirst() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjFASCard.MoveFirst();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MovePrevious() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjFASCard.MovePrevious();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    
    private void MoveNext() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjFASCard.MoveNext();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveLast() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        ObjFASCard.MoveLast();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    public void FindEx(int pCompanyID,String pDocNo) {
        ObjFASCard.Filter(" WHERE COMPANY_ID="+Integer.toString(pCompanyID)+" AND ASSET_NO='"+pDocNo+"'",pCompanyID);
        ObjFASCard.MoveLast();
        DisplayData();
    }
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    private void FormatGridD() {
        DataModelD=new EITLTableModel();
        
        TableD.removeAll();
        TableD.setModel(DataModelD);
        
        //Set the table Readonly
        //DataModelD.TableReadOnly(false);
        
        //Add the columns
        DataModelD.addColumn("Sr.");//0
        DataModelD.addColumn("Year");//1
        DataModelD.addColumn("Amount");//2
        DataModelD.addColumn("Current Dept ID");//2
        DataModelD.addColumn("Current Dept Name");//2
        DataModelD.addColumn("Sale Value");//3
        DataModelD.addColumn("Sale Date");//4
        DataModelD.addColumn("Sale Doc No.");//5
        //DataModelD.addColumn("SJ Number");//6
        DataModelD.addColumn("Asset Status");//6
        DataModelD.addColumn("Remarks");//7
        
        
        DataModelD.SetVariable(0,"SR_NO");
        DataModelD.SetVariable(1,"YEAR");
        DataModelD.SetVariable(2,"AMOUNT");
        DataModelD.SetVariable(3,"DEPT_ID");
        DataModelD.SetVariable(4,"DEPT_NAME");
        DataModelD.SetVariable(5,"SALE_VALUE");
        DataModelD.SetVariable(6,"SALE_DATE");
        DataModelD.SetVariable(7,"SALE_DOC_NO");
        //DataModelD.SetVariable(8, "SJ_NUMBER");
        DataModelD.SetVariable(8, "ASSET_STATUS");
        DataModelD.SetVariable(9, "REMARKS");
        
        
        DataModelD.SetReadOnly(0);
        DataModelD.SetReadOnly(1);
        DataModelD.SetReadOnly(2);
        DataModelD.SetReadOnly(3);
        DataModelD.SetReadOnly(4);
        DataModelD.SetReadOnly(5);
        DataModelD.SetReadOnly(6);
        DataModelD.SetReadOnly(7);
        DataModelD.SetReadOnly(8);
        //DataModelD.SetReadOnly(9);
        
        
        TableD.setAutoResizeMode(TableD.AUTO_RESIZE_OFF);
        
    }
    
    private void FormatGridB() {
        DataModelB=new EITLTableModel();
        
        TableB.removeAll();
        TableB.setModel(DataModelB);
        
        //Set the table Readonly
        DataModelB.TableReadOnly(true);
        
        //Add the columns
        
        DataModelB.addColumn("Sr. No.");//0
        DataModelB.addColumn("Detail Sr. No.");//0
        DataModelB.addColumn("Year");//1
        DataModelB.addColumn("Opening Value");//2
        DataModelB.addColumn("Additions");//3
        DataModelB.addColumn("Closing Balance");//4
        DataModelB.addColumn("Deprn From Date");//5
        DataModelB.addColumn("Deprn To Date");//6
        DataModelB.addColumn("Deprn Percentage");//7
        DataModelB.addColumn("Deprn Method");//7
        DataModelB.addColumn("Deprn Method Name");//7
        DataModelB.addColumn("Deprn For The Year");//8
        DataModelB.addColumn("Shift Allow for The Year");//9
        DataModelB.addColumn("Cum. Deprn");//10
        DataModelB.addColumn("Written Down Value");//12
        //DataModelB.addColumn("Net Block");//11
        DataModelB.addColumn("Remarks");//13
        DataModelB.addColumn("Shifts");//14
        
        DataModelB.SetVariable(0,"SR_NO");
        DataModelB.SetVariable(1,"DETAIL_SR_NO");
        DataModelB.SetVariable(2,"YEAR");
        DataModelB.SetVariable(3,"OPENING_VALUE");
        DataModelB.SetVariable(4,"ADDITIONS");
        DataModelB.SetVariable(5,"CLOSING_BALANCE");
        DataModelB.SetVariable(6,"DEPRN_FROM_DATE");
        DataModelB.SetVariable(7,"DEPRN_TO_DATE");
        DataModelB.SetVariable(8,"DEPRN_PERCENTAGE");
        DataModelB.SetVariable(9,"DEPRN_METHOD");
        DataModelB.SetVariable(10,"DEPRN_METHOD_NAME");
        DataModelB.SetVariable(11,"DEPRN_FOR_THE_YEAR");
        DataModelB.SetVariable(12,"SHIFT_ALLOW_FOR_THE_YEAR");
        DataModelB.SetVariable(13,"CUM_DEPRN");
        DataModelB.SetVariable(14,"WDV");
        // DataModelB.SetVariable(15,"NET_BLOCK");
        DataModelB.SetVariable(15,"REMARKS");
        DataModelB.SetVariable(16,"SHIFTS");
        
        TableB.setAutoResizeMode(TableB.AUTO_RESIZE_OFF);
        
        
    }
    
    private void FormatGridOthers() {
        DataModelO=new EITLTableModel();
        
        TableOthers.removeAll();
        TableOthers.setModel(DataModelO);
        
        //Set the table Readonly
        DataModelO.TableReadOnly(true);
        
        //Add the columns
        
        DataModelO.addColumn("Sr. No.");//0
        DataModelO.addColumn("Other Voucher No.");//0
        DataModelO.addColumn("Other Voucher Date");//1
        DataModelO.addColumn("Amount");//2
        
        
        DataModelO.SetVariable(0,"SR_NO");
        DataModelO.SetVariable(1,"OTHERS_VOUCHER_NO");
        DataModelO.SetVariable(2,"OTHERS_VOUCHER_DATE");
        DataModelO.SetVariable(3,"OTHERS_VOUCHER_AMOUNT");
        
        
        TableOthers.setAutoResizeMode(TableOthers.AUTO_RESIZE_OFF);
        
        
    }
    private void FormatGridIT() {
        DataModelIT=new EITLTableModel();
        
        TableIT.removeAll();
        TableIT.setModel(DataModelIT);
        
        //Set the table Readonly
        DataModelIT.TableReadOnly(true);
        
        //Add the columns
        DataModelIT.addColumn("Sr. No.");//0
        DataModelIT.addColumn("Detail Sr. No.");//0
        DataModelIT.addColumn("Year");//1
        DataModelIT.addColumn("Opening Value");//2
        DataModelIT.addColumn("Additions");//3
        DataModelIT.addColumn("Closing Balance");//4
        DataModelIT.addColumn("Deprn From Date");//5
        DataModelIT.addColumn("Deprn To Date");//6
        DataModelIT.addColumn("Deprn Percentage");//7
        DataModelIT.addColumn("Deprn Method");//7
        DataModelIT.addColumn("Deprn Method Name");//7
        DataModelIT.addColumn("Deprn For The Year");//8
        DataModelIT.addColumn("Shift Allow for The Year");//9
        DataModelIT.addColumn("Cum. Deprn");//10
        DataModelIT.addColumn("Written Down Value");//11
        //DataModelIT.addColumn("Net Block");//11
        DataModelIT.addColumn("Remarks");//12
        DataModelIT.addColumn("Shifts");//13
        
        DataModelIT.SetVariable(0,"SR_NO");
        DataModelIT.SetVariable(1,"DETAIL_SR_NO");
        DataModelIT.SetVariable(2,"YEAR");
        DataModelIT.SetVariable(3,"OPENING_VALUE");
        DataModelIT.SetVariable(4,"ADDITIONS");
        DataModelIT.SetVariable(5,"CLOSING_BALANCE");
        DataModelIT.SetVariable(6,"DEPRN_FROM_DATE");
        DataModelIT.SetVariable(7,"DEPRN_TO_DATE");
        DataModelIT.SetVariable(8,"DEPRN_PERCENTAGE");
        DataModelIT.SetVariable(9,"DEPRN_METHOD");
        DataModelIT.SetVariable(10,"DEPRN_METHOD_NAME");
        DataModelIT.SetVariable(11,"DEPRN_FOR_THE_YEAR");
        DataModelIT.SetVariable(12,"SHIFT_ALLOW_FOR_THE_YEAR");
        DataModelIT.SetVariable(13,"CUM_DEPRN");
        DataModelIT.SetVariable(14,"WDV");
        //DataModelIT.SetVariable(15,"NET_BLOCK");
        DataModelIT.SetVariable(15,"REMARKS");
        DataModelIT.SetVariable(16,"SHIFTS");
        
        //TableB.setAutoResizeMode(TableB.AUTO_RESIZE_OFF);
        
        TableIT.setAutoResizeMode(TableIT.AUTO_RESIZE_OFF);
        
    }
    
    
    private void EnableApproval() {
        cmbSendTo.setEnabled(true);
        OpgApprove.setEnabled(true);
        OpgFinal.setEnabled(true);
        OpgReject.setEnabled(true);
        OpgHold.setEnabled(true);
        txtToRemarks.setEnabled(true);
        SetupApproval();
        
        //========== Setting Up Header Fields ================//
        String FieldName="";
        int SelHierarchy=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        
        for(int i=0;i<Tab1.getComponentCount()-1;i++) {
            if(Tab1.getComponent(i).getName()!=null) {
                
                FieldName=Tab1.getComponent(i).getName();
                if(clsHierarchy.CanEditField(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, SelHierarchy, "H", FieldName)) {
                    
                    Tab1.getComponent(i).setEnabled(true);
                }
                
            }
        }
        //=============== Header Fields Setup Complete =================//
        
        
        
        //=======================================================//
        
    }
    
    private void FormatGridHS() {
        DataModelHS=new EITLTableModel();
        
        TableHS.removeAll();
        TableHS.setModel(DataModelHS);
        
        //Set the table Readonly
        DataModelHS.TableReadOnly(true);
        
        //Add the columns
        DataModelHS.addColumn("Rev No.");
        DataModelHS.addColumn("User");
        DataModelHS.addColumn("Date");
        DataModelHS.addColumn("Status");
        DataModelHS.addColumn("Remarks");
        
        TableHS.setAutoResizeMode(TableHS.AUTO_RESIZE_OFF);
    }
    
    private void GenerateCombos() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        String strCondition="";
        
        //----- Generate cmbType ------- //
        cmbHierarchyModel=new EITLComboModel();
        cmbHierarchy.removeAllItems();
        cmbHierarchy.setModel(cmbHierarchyModel);
        
        List=clsHierarchy.getListEx(" WHERE D_COM_HIERARCHY.COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID= '" + clsFASCardwithGRN.ModuleID + "'");
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            List=clsHierarchy.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID='" + clsFASCardwithGRN.ModuleID + "'  ");
        }
        for(int i=1;i<=List.size();i++) {
            clsHierarchy ObjHierarchy=(clsHierarchy) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjHierarchy.getAttribute("HIERARCHY_ID").getVal();
            aData.Text=(String)ObjHierarchy.getAttribute("HIERARCHY_NAME").getObj();
            cmbHierarchyModel.addElement(aData);
        }
        //------------------------------ //
        
        
        
    }
    
    private void GenerateFromCombo() {
        //Generates Combo Boxes
        HashMap List=new HashMap();
        
        try {
            if(EditMode==EITLERPGLOBAL.ADD) {
                //----- Generate cmbType ------- //
                cmbToModel=new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);
                
                List=clsHierarchy.getUserList((int)EITLERPGLOBAL.gCompanyID,SelHierarchyID,EITLERPGLOBAL.gNewUserID);
                for(int i=1;i<=List.size();i++) {
                    clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
                    ComboData aData=new ComboData();
                    aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
                    
                    if(ObjUser.getAttribute("USER_ID").getVal()==EITLERPGLOBAL.gNewUserID) {
                        //Exclude Current User
                    }
                    else {
                        cmbToModel.addElement(aData);
                    }
                }
                //------------------------------ //
            }
            else {
                //----- Generate cmbType ------- //
                cmbToModel=new EITLComboModel();
                cmbSendTo.removeAllItems();
                cmbSendTo.setModel(cmbToModel);
                
                List=ApprovalFlow.getRemainingUsers((int)EITLERPGLOBAL.gCompanyID, clsFASCardwithGRN.ModuleID,(String)ObjFASCard.getAttribute("ASSET_NO").getObj());
                for(int i=1;i<=List.size();i++) {
                    clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
                    ComboData aData=new ComboData();
                    aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
                    aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
                    cmbToModel.addElement(aData);
                }
                //------------------------------ //
            }
        }
        catch(Exception e)
        {}
        
    }
    
    private void GenerateRejectedUserCombo() {
        HashMap List=new HashMap();
        HashMap DeptList=new HashMap();
        HashMap DeptUsers=new HashMap();
        
        //----- Generate cmbType ------- //
        cmbToModel=new EITLComboModel();
        cmbSendTo.removeAllItems();
        cmbSendTo.setModel(cmbToModel);
        
        
        //Now Add other hierarchy Users
        SelHierarchyID=EITLERPGLOBAL.getComboCode(cmbHierarchy);
        
        List=clsHierarchy.getUserList((int)EITLERPGLOBAL.gCompanyID,SelHierarchyID,EITLERPGLOBAL.gNewUserID,true);
        for(int i=1;i<=List.size();i++) {
            clsUser ObjUser=(clsUser) List.get(Integer.toString(i));
            ComboData aData=new ComboData();
            aData.Code=(int) ObjUser.getAttribute("USER_ID").getVal();
            aData.Text=(String)ObjUser.getAttribute("USER_NAME").getObj();
            
            
            /// NEW CODE ///
            boolean IncludeUser=false;
            //Decide to include user or not
            if(EditMode==EITLERPGLOBAL.EDIT) {
                if(OpgApprove.isSelected()) {
                    IncludeUser=ApprovalFlow.IncludeUserInApproval(EITLERPGLOBAL.gCompanyID,clsFASCardwithGRN.ModuleID, txtAssetNo.getText(), (int) ObjUser.getAttribute("USER_ID").getVal(), EITLERPGLOBAL.gNewUserID);
                }
                
                if(OpgReject.isSelected()) {
                    IncludeUser=ApprovalFlow.IncludeUserInRejection(EITLERPGLOBAL.gCompanyID,clsFASCardwithGRN.ModuleID , txtAssetNo.getText(), (int) ObjUser.getAttribute("USER_ID").getVal(), EITLERPGLOBAL.gNewUserID);
                }
                
                if(IncludeUser&&(((int) ObjUser.getAttribute("USER_ID").getVal())!=EITLERPGLOBAL.gNewUserID)) {
                    cmbToModel.addElement(aData);
                }
            }
            else {
                if(((int) ObjUser.getAttribute("USER_ID").getVal())!=EITLERPGLOBAL.gNewUserID) {
                    cmbToModel.addElement(aData);
                }
            }
            /// END NEW CODE ///
            
            
        }
        //------------------------------ //
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            int Creator=ApprovalFlow.getCreator(EITLERPGLOBAL.gCompanyID,clsFASCardwithGRN.ModuleID,txtAssetNo.getText());
            EITLERPGLOBAL.setComboIndex(cmbSendTo,Creator);
        }
    }
    
    private void PreviewReport() {
        
    }
    private void GenerateGridDetail() {
        double TotalQty = Double.parseDouble(txtTotalQty.getText().trim());
        lblItemIDDetail.setText(txtItemID.getText().trim());
        for(int i=1;i<=TotalQty;i++) {
            Object[] rowData=new Object[1];
            DataModelD.addRow(rowData);
            
            int NewRow=TableD.getRowCount()-1;
            DataModelD.setValueByVariable("YEAR",txtAssetDate.getText().trim().substring(6,10),NewRow);
            //DataModelD.setValueByVariable("AMOUNT", String.valueOf(EITLERPGLOBAL.round(Double.parseDouble(AAmount.getText().trim())/Double.parseDouble(txtTotalQty.getText().trim()),0)),NewRow);
            DataModelD.setValueByVariable("AMOUNT", String.valueOf(new BigDecimal(EITLERPGLOBAL.round(Double.parseDouble(txtFinalAmount.getText().trim())/Double.parseDouble(txtTotalQty.getText().trim()),0))),NewRow);
            DataModelD.setValueByVariable("DEPT_ID",txtDepartmentID.getText().trim(),NewRow);
            DataModelD.setValueByVariable("DEPT_NAME",clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID,txtDepartmentID.getText().trim()),NewRow);
            DataModelD.setValueByVariable("SALE_VALUE","0",NewRow);
            
        }
        UpdateDetailSrNo();
    }
    private void GenerateGridBookDetail() {
        double TotalQty = Double.parseDouble(txtTotalQty.getText().trim());
        ResultSet rsTmp;
        boolean StopCalculation = false;
        
        Object[] rowData=new Object[1];
        try{
            
            
            int FromYear = Integer.parseInt(txtAssetDate.getText().trim().substring(6));
            int ToYear = EITLERPGLOBAL.getCurrentYear();
            int getCurrentMonth = EITLERPGLOBAL.getCurrentMonth();
            
            String AssetDate = txtAssetDate.getText();
            double AssetCostOriginal = EITLERPGLOBAL.round(Double.parseDouble(txtFinalAmount.getText().trim())/Double.parseDouble(txtTotalQty.getText().trim()),0);
            double AssetCost = EITLERPGLOBAL.round(Double.parseDouble(txtFinalAmount.getText().trim())/Double.parseDouble(txtTotalQty.getText().trim()),0);
            double DeprAmount =0.0;
            double CumDepr = 0.0;
            if(ToYear > FromYear ) {
                int Year = FromYear;
                
                int loop=1;
                //for the month which is less then 3
                if(Integer.parseInt(txtAssetDate.getText().trim().substring(3,5))<=3) {
                    //EITLERPGLOBAL.getCurrentMonth()
                    if(getCurrentMonth<=3) {
                        loop=(ToYear-FromYear);//+1;
                    }
                    else {
                        if(Integer.parseInt(txtAssetDate.getText().trim().substring(3,5))<=3) {
                            loop=(ToYear-FromYear);//+1;
                        }
                        else {
                            loop=(ToYear-FromYear);
                        }
                    }
                }else {
                    loop=ToYear-FromYear;
                    if(loop==0) {
                        loop=1;
                    }
                }
                
                
                
                //for(int i=1;i<=ToYear-FromYear;i++) {
                for(int i=1;i<=loop;i++) {
                    DataModelB.addRow(rowData);
                    int NewRow=TableB.getRowCount()-1;
                    
                    
                    DataModelB.setValueByVariable("YEAR",String.valueOf(Year),NewRow);
                    //int Row = TableD.getSelectedRow()+1;
                    int Row = TableD.getSelectedRow();
                    if(Row >=1) {
                        DataModelB.setValueByVariable("DETAIL_SR_NO",String.valueOf(Row+1),NewRow);
                    }
                    else {
                        DataModelB.setValueByVariable("DETAIL_SR_NO",String.valueOf(1),NewRow);
                    }
                    DataModelB.setValueByVariable("DEPRN_FROM_DATE",AssetDate,NewRow);
                    DataModelB.setValueByVariable("DEPRN_TO_DATE",EITLERPGLOBAL.formatDate(EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(AssetDate))),NewRow);
                    String SQL="SELECT B.* FROM D_FAS_ITEM_MASTER_HEADER A,D_FAS_ITEM_MASTER_DETAIL B "+
                    "WHERE A.DOC_NO = B.DOC_NO "+
                    "AND A.ITEM_ID = '" + txtItemID.getText().trim() + "' "+
                    "AND '" + EITLERPGLOBAL.formatDateDB(AssetDate) + "' >= B.FROM_DATE AND '" + EITLERPGLOBAL.formatDateDB(AssetDate) + "' <= B.TO_DATE "+
                    "ORDER BY B.SR_NO";
                    double BookRate=0;
                    int MethodId = 0;
                    rsTmp = data.getResult(SQL,FinanceGlobal.FinURL);
                    if(rsTmp.getRow()>0) {
                        BookRate=rsTmp.getDouble("BOOK_PER");
                        MethodId =rsTmp.getInt("METHOD_ID");
                        DataModelB.setValueByVariable("DEPRN_PERCENTAGE",rsTmp.getString("BOOK_PER"),NewRow);
                        DataModelB.setValueByVariable("DEPRN_METHOD",String.valueOf(MethodId) ,NewRow);
                        String Method_name = clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",MethodId);
                        DataModelB.setValueByVariable("DEPRN_METHOD_NAME",Method_name,NewRow);
                    }
                    else {
                        BookRate=0;
                        DataModelB.setValueByVariable("DEPRN_PERCENTAGE","",NewRow);
                        DataModelB.setValueByVariable("DEPRN_METHOD","",NewRow);
                        DataModelB.setValueByVariable("DEPRN_METHOD_NAME","",NewRow);
                    }
                    
                    
                    AssetDate= EITLERPGLOBAL.formatDate(EITLERPGLOBAL.addDaysToDate(EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(AssetDate)),1,"yyyy-MM-dd"));
                    //DataModelB.setValueByVariable("OPENING_VALUE",String.valueOf(AssetCost),NewRow);
                    DataModelB.setValueByVariable("OPENING_VALUE",String.valueOf(new BigDecimal(AssetCost).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    if(i==1) {
                        
                        
                        int month = EITLERPGLOBAL.getMonthDifference(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText()),EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText())))+1;
                        
                        if(month<12) {
                            
                            if(MethodId==2) {
                                DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate,month),0);
                            }
                            else {
                                DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,month),0);
                            }
                            //DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,month),0);
                            
                        }
                        
                        else {
                            if(MethodId == 2) {
                                DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate),0);
                            }
                            else {
                                DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate),0);
                            }
                            
                            //DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate),0);
                        }
                        
                        
                    }
                    else {
                        
                        if(MethodId == 2) {
                            DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate),0);
                        }
                        else {
                            DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate),0);
                        }
                        //DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate),0);
                    }
                    
                    //DataModelB.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(DeprAmount),NewRow);
                    DataModelB.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(new BigDecimal(DeprAmount).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    CumDepr +=DeprAmount;
                    //DataModelB.setValueByVariable("CUM_DEPRN",String.valueOf(CumDepr),NewRow);
                    DataModelB.setValueByVariable("CUM_DEPRN",String.valueOf(new BigDecimal(CumDepr).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    //DataModelB.setValueByVariable("CLOSING_BALANCE",String.valueOf(EITLERPGLOBAL.round(AssetCost - DeprAmount,0)),NewRow);
                    DataModelB.setValueByVariable("CLOSING_BALANCE",String.valueOf(new BigDecimal(AssetCost - DeprAmount).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    AssetCost = EITLERPGLOBAL.round(AssetCost - DeprAmount,0);
                    //DataModelB.setValueByVariable("WDV",String.valueOf(AssetCost),NewRow);
                    DataModelB.setValueByVariable("WDV",String.valueOf(new BigDecimal(AssetCost).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    
                    
                    if(MethodId==2) {
                        if(AssetCost < EITLERPGLOBAL.round((clsFASGlobal.DeprnLimit*AssetCostOriginal)/100,0)) {
                            //StopCalculation = true;
                            
                            //int test = TableB.getRowCount()-1;
                            StopCalculation = true;
                            DataModelB.removeRow(TableB.getRowCount()-1);
                            //int test = TableB.getRowCount()-1;
                            //TableB.remove(test);
                            //DataModelB.removeRow(TableB.getRowCount());
                            break;
                        }
                    }
                    
                    //                    if(AssetCost < EITLERPGLOBAL.round((clsFASGlobal.DeprnLimit*AssetCostOriginal)/100,0)) {
                    //                        break;
                    //                    }
                    Year++;
                }
            }
            else if(ToYear == FromYear ) {
                DataModelB.addRow(rowData);
                int NewRow=TableB.getRowCount()-1;
                
                DataModelB.setValueByVariable("YEAR",String.valueOf(EITLERPGLOBAL.getCurrentYear()),NewRow);
                
                int Row = TableD.getSelectedRow();
                if(Row >=1) {
                    DataModelB.setValueByVariable("DETAIL_SR_NO",String.valueOf(Row+1),NewRow);
                }
                else {
                    DataModelB.setValueByVariable("DETAIL_SR_NO",String.valueOf(1),NewRow);
                }
                //DataModelB.setValueByVariable("DETAIL_SR_NO",String.valueOf(1),NewRow);
                //DataModelB.setValueByVariable("OPENING_VALUE",String.valueOf(AssetCost),NewRow);
                DataModelB.setValueByVariable("OPENING_VALUE",String.valueOf(new BigDecimal(AssetCost).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                DataModelB.setValueByVariable("DEPRN_FROM_DATE",txtAssetDate.getText(),NewRow);
                DataModelB.setValueByVariable("DEPRN_TO_DATE",EITLERPGLOBAL.formatDate(EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText()))),NewRow);
                
                
                String SQL="SELECT B.* FROM D_FAS_ITEM_MASTER_HEADER A,D_FAS_ITEM_MASTER_DETAIL B "+
                "WHERE A.DOC_NO = B.DOC_NO "+
                "AND A.ITEM_ID = '" + txtItemID.getText().trim() + "' "+
                "AND '" + EITLERPGLOBAL.formatDateDB(AssetDate) + "' >= B.FROM_DATE AND '" + EITLERPGLOBAL.formatDateDB(AssetDate) + "' <= B.TO_DATE "+
                "ORDER BY B.SR_NO";
                double BookRate=0;
                int MethodId=0;
                rsTmp = data.getResult(SQL,FinanceGlobal.FinURL);
                if(rsTmp.getRow()>0) {
                    BookRate=rsTmp.getDouble("BOOK_PER");
                    MethodId = rsTmp.getInt("METHOD_ID");
                    DataModelB.setValueByVariable("DEPRN_PERCENTAGE",rsTmp.getString("BOOK_PER"),NewRow);
                    DataModelB.setValueByVariable("DEPRN_METHOD",String.valueOf(MethodId),NewRow);
                    String Method_name = clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",MethodId);
                    DataModelB.setValueByVariable("DEPRN_METHOD_NAME",Method_name,NewRow);
                }
                else {
                    BookRate=0;
                    DataModelB.setValueByVariable("DEPRN_PERCENTAGE","",NewRow);
                    DataModelB.setValueByVariable("DEPRN_METHOD","",NewRow);
                }
                
                
                int month = EITLERPGLOBAL.getMonthDifference(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText()),EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText())))+1;
                
                if(MethodId ==2) {
                    DeprAmount = clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate,month);
                }
                else {
                    DeprAmount = clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,month);
                }
                //
                //DeprAmount = clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,month);
                
                
                //DataModelB.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(DeprAmount),NewRow);
                DataModelB.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(new BigDecimal(DeprAmount).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                CumDepr +=DeprAmount;
                //DataModelB.setValueByVariable("CUM_DEPRN",String.valueOf(CumDepr),NewRow);
                DataModelB.setValueByVariable("CUM_DEPRN",String.valueOf(new BigDecimal(CumDepr).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                //DataModelB.setValueByVariable("CLOSING_BALANCE",String.valueOf(EITLERPGLOBAL.round(AssetCost - CumDepr,0)),NewRow);
                DataModelB.setValueByVariable("CLOSING_BALANCE",String.valueOf(new BigDecimal(AssetCost - CumDepr).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                AssetCost = EITLERPGLOBAL.round(AssetCost - DeprAmount,0);
                //DataModelB.setValueByVariable("WDV",String.valueOf(AssetCost),NewRow);
                DataModelB.setValueByVariable("WDV",String.valueOf(new BigDecimal(AssetCost).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                //DataModelB.setValueByVariable("AMOUNT", "10.25",NewRow);
            }
            else {
                //--------INVALID----------//
            }
            
            if(StopCalculation) {
                
                int Row = TableB.getRowCount()-1;
                DataModelB.addRow(rowData);
                DataModelB.setValueByVariable("DETAIL_SR_NO",DataModelB.getValueByVariable("DETAIL_SR_NO",Row),Row+1);//DataModelB.getValueByVariable("SR_NO",Row);
                DataModelB.setValueByVariable("YEAR",String.valueOf(Integer.parseInt(DataModelB.getValueByVariable("YEAR",Row))+1),Row+1);
                DataModelB.setValueByVariable("OPENING_VALUE",DataModelB.getValueByVariable("CLOSING_BALANCE",Row),Row+1);
                AssetCost = Double.parseDouble(DataModelB.getValueByVariable("CLOSING_BALANCE",Row));
                String DeprFromDate = EITLERPGLOBAL.addDaysToDate(DataModelB.getValueByVariable("DEPRN_TO_DATE",Row),1,"dd/MM/yyyy");
                
                DataModelB.setValueByVariable("DEPRN_FROM_DATE",EITLERPGLOBAL.formatDate(DeprFromDate),Row+1);
                
                
                //----FIND DEPRN PERCENTAGE METHOD ID RATE
                String SQL="SELECT B.* FROM D_FAS_ITEM_MASTER_HEADER A,D_FAS_ITEM_MASTER_DETAIL B "+
                "WHERE A.DOC_NO = B.DOC_NO "+
                "AND A.ITEM_ID = '" + txtItemID.getText().trim() + "' "+
                "AND '" + DeprFromDate  + "' >= B.FROM_DATE AND '" + DeprFromDate  + "' <= B.TO_DATE "+
                "ORDER BY B.SR_NO";
                //System.out.println(SQL);
                double BookRate=0;
                int MethodId = 0;
                rsTmp = data.getResult(SQL,FinanceGlobal.FinURL);
                if(rsTmp.getRow()>0) {
                    BookRate=rsTmp.getDouble("BOOK_PER");
                    MethodId =rsTmp.getInt("METHOD_ID");
                    DataModelB.setValueByVariable("DEPRN_PERCENTAGE",rsTmp.getString("BOOK_PER"),Row+1);
                    DataModelB.setValueByVariable("DEPRN_METHOD",String.valueOf(MethodId) ,Row+1);
                    String Method_name = clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",MethodId);
                    DataModelB.setValueByVariable("DEPRN_METHOD_NAME",Method_name,Row+1);
                }
                else {
                    BookRate=0;
                    DataModelB.setValueByVariable("DEPRN_PERCENTAGE","",Row+1);
                    DataModelB.setValueByVariable("DEPRN_METHOD","",Row+1);
                    DataModelB.setValueByVariable("DEPRN_METHOD_NAME","",Row+1);
                }
                
                //DataModelB.setValueByVariable("YEAR",DataModelB.getValueByVariable("",Row),Row+1);
                //DataModelB.setValueByVariable("YEAR",DataModelB.getValueByVariable("",Row),Row+1);
                double TotalDeprAmount=0.0;
                int Counter = 1;
                if(MethodId==2) {
                    while(AssetCost > EITLERPGLOBAL.round((clsFASGlobal.DeprnLimit*AssetCostOriginal)/100,0)) {
                        
                        //if(MethodId==2) {
                        DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate,1),0);
                        TotalDeprAmount+=DeprAmount;
                        //}
                        //                        else {
                        //                            DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,1),3);
                        //                            TotalDeprAmount+=DeprAmount;
                        //                        }
                        Counter++;
                        AssetCost -= DeprAmount;
                    }
                }
                DataModelB.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(TotalDeprAmount),Row+1);
                DataModelB.setValueByVariable("SHIFT_ALLOW_FOR_THE_YEAR","",Row+1);
                DataModelB.setValueByVariable("CUM_DEPRN",String.valueOf(Double.parseDouble(DataModelB.getValueByVariable("CUM_DEPRN",Row)) + EITLERPGLOBAL.round(TotalDeprAmount,0)),Row+1);
                DataModelB.setValueByVariable("WDV",String.valueOf(Double.valueOf(DataModelB.getValueByVariable("CLOSING_BALANCE",Row))-TotalDeprAmount),Row+1);
                DataModelB.setValueByVariable("CLOSING_BALANCE",String.valueOf(Double.parseDouble(DataModelB.getValueByVariable("CLOSING_BALANCE",Row)) - TotalDeprAmount),Row+1);
                
                String Dt = data.getStringValueFromDB("SELECT  DATE_ADD(DATE_ADD('"+DeprFromDate+"', INTERVAL " + Counter + " MONTH ),INTERVAL -1 DAY )FROM DUAL");
                DataModelB.setValueByVariable("DEPRN_TO_DATE",EITLERPGLOBAL.formatDate(Dt),Row+1);
            }
            
            
        }
        catch(Exception e) {
            
        }
        UpdateDetailBookSrNo();
    }
    
    private void GenerateGridITDetail() {
        
        boolean StopCalculation = false;
        double TotalQty = Double.parseDouble(txtTotalQty.getText().trim());
        ResultSet rsTmp;
        Object[] rowData=new Object[1];
        try{
            
            
            int FromYear = Integer.parseInt(txtAssetDate.getText().trim().substring(6));
            int ToYear = EITLERPGLOBAL.getCurrentYear();
            int getCurrentMonth = EITLERPGLOBAL.getCurrentMonth();
            
            String AssetDate = txtAssetDate.getText();
            double AssetCostOriginal = EITLERPGLOBAL.round(Double.parseDouble(txtFinalAmount.getText().trim())/Double.parseDouble(txtTotalQty.getText().trim()),0);
            double AssetCost = EITLERPGLOBAL.round(Double.parseDouble(txtFinalAmount.getText().trim())/Double.parseDouble(txtTotalQty.getText().trim()),0);
            double DeprAmount =0.0;
            double CumDepr = 0.0;
            if(ToYear > FromYear ) {
                int Year = FromYear;
                
                
                int loop=1;
                //for the month which is less then 3
                if(Integer.parseInt(txtAssetDate.getText().trim().substring(3,5))<=3) {
                    //EITLERPGLOBAL.getCurrentMonth()
                    if(getCurrentMonth<=3) {
                        loop=(ToYear-FromYear);//+1;
                    }
                    else {
                        if(Integer.parseInt(txtAssetDate.getText().trim().substring(3,5))<=3) {
                            loop=(ToYear-FromYear);//+1;
                        }
                        else {
                            loop=(ToYear-FromYear);
                        }
                    }
                }else {
                    loop=ToYear-FromYear;
                    if(loop==0) {
                        loop=1;
                    }
                }

                
                
                //for(int i=1;i<=ToYear-FromYear;i++) {
                for(int i=1;i<=loop;i++) {
                    DataModelIT.addRow(rowData);
                    int NewRow=TableIT.getRowCount()-1;
                    
                    
                    DataModelIT.setValueByVariable("YEAR",String.valueOf(Year),NewRow);
                    //int Row = TableD.getSelectedRow()+1;
                    int Row = TableD.getSelectedRow();
                    if(Row >=1) {
                        DataModelIT.setValueByVariable("DETAIL_SR_NO",String.valueOf(Row+1),NewRow);
                    }
                    else {
                        DataModelIT.setValueByVariable("DETAIL_SR_NO",String.valueOf(1),NewRow);
                    }
                    DataModelIT.setValueByVariable("DEPRN_FROM_DATE",AssetDate,NewRow);
                    DataModelIT.setValueByVariable("DEPRN_TO_DATE",EITLERPGLOBAL.formatDate(EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(AssetDate))),NewRow);
                    String SQL="SELECT B.* FROM D_FAS_ITEM_MASTER_HEADER A,D_FAS_ITEM_MASTER_DETAIL B "+
                    "WHERE A.DOC_NO = B.DOC_NO "+
                    "AND A.ITEM_ID = '" + txtItemID.getText().trim() + "' "+
                    "AND '" + EITLERPGLOBAL.formatDateDB(AssetDate) + "' >= B.FROM_DATE AND '" + EITLERPGLOBAL.formatDateDB(AssetDate) + "' <= B.TO_DATE "+
                    "ORDER BY B.SR_NO";
                    double BookRate=0;
                    int MethodId = 0;
                    rsTmp = data.getResult(SQL,FinanceGlobal.FinURL);
                    if(rsTmp.getRow()>0) {
                        BookRate=rsTmp.getDouble("IT_PER");
                        MethodId =rsTmp.getInt("METHOD_ID");
                        DataModelIT.setValueByVariable("DEPRN_PERCENTAGE",rsTmp.getString("IT_PER"),NewRow);
                        DataModelIT.setValueByVariable("DEPRN_METHOD",String.valueOf(MethodId) ,NewRow);
                        String Method_name = clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",MethodId);
                        DataModelIT.setValueByVariable("DEPRN_METHOD_NAME",Method_name,NewRow);
                    }
                    else {
                        BookRate=0;
                        DataModelIT.setValueByVariable("DEPRN_PERCENTAGE","",NewRow);
                        DataModelIT.setValueByVariable("DEPRN_METHOD","",NewRow);
                        DataModelIT.setValueByVariable("DEPRN_METHOD_NAME","",NewRow);
                    }
                    
                    
                    AssetDate= EITLERPGLOBAL.formatDate(EITLERPGLOBAL.addDaysToDate(EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(AssetDate)),1,"yyyy-MM-dd"));
                    //DataModelIT.setValueByVariable("OPENING_VALUE",String.valueOf(AssetCost),NewRow);
                    DataModelIT.setValueByVariable("OPENING_VALUE",String.valueOf(new BigDecimal(AssetCost).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    if(i==1) {
                        
                        
                        int month = EITLERPGLOBAL.getMonthDifference(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText()),EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText())))+1;
                        
                        if(month<12) {
                            
                            if(MethodId==2) {
                                DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate,month),0);
                            }
                            else {
                                DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,month),0);
                            }
                            //DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,month),0);
                            
                        }
                        
                        else {
                            if(MethodId == 2) {
                                DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate),0);
                            }
                            else {
                                DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate),0);
                            }
                            
                            //DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate),0);
                        }
                        
                        
                    }
                    else {
                        
                        if(MethodId == 2) {
                            DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate),0);
                        }
                        else {
                            DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate),0);
                        }
                        //DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate),0);
                    }
                    
                    //DataModelIT.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(DeprAmount),NewRow);
                    DataModelIT.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(new BigDecimal(DeprAmount).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    CumDepr +=DeprAmount;
                    //DataModelIT.setValueByVariable("CUM_DEPRN",String.valueOf(CumDepr),NewRow);
                    DataModelIT.setValueByVariable("CUM_DEPRN",String.valueOf(new BigDecimal(CumDepr).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    //DataModelIT.setValueByVariable("CLOSING_BALANCE",String.valueOf(EITLERPGLOBAL.round(AssetCost - DeprAmount,0)),NewRow);
                    DataModelIT.setValueByVariable("CLOSING_BALANCE",String.valueOf(new BigDecimal(AssetCost - DeprAmount).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    
                    AssetCost = EITLERPGLOBAL.round(AssetCost - DeprAmount,0);
                    //DataModelIT.setValueByVariable("WDV",String.valueOf(AssetCost),NewRow);
                    DataModelIT.setValueByVariable("WDV",String.valueOf(new BigDecimal(AssetCost).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                    
                    if(MethodId==2) {
                        if(AssetCost < EITLERPGLOBAL.round((clsFASGlobal.DeprnLimit*AssetCostOriginal)/100,0)) {
                            //int test = TableIT.getRowCount()-1;
                            StopCalculation = true;
                            DataModelIT.removeRow(TableIT.getRowCount()-1);
                            break;
                        }
                    }
                    
                    
                    
                    //                    if(AssetCost < EITLERPGLOBAL.round((clsFASGlobal.DeprnLimit*AssetCostOriginal)/100,0)) {
                    //                        break;
                    //                    }
                    Year++;
                }
            }
            else if(ToYear == FromYear ) {
                DataModelIT.addRow(rowData);
                int NewRow=TableIT.getRowCount()-1;
                
                DataModelIT.setValueByVariable("YEAR",String.valueOf(EITLERPGLOBAL.getCurrentYear()),NewRow);
                
                int Row = TableD.getSelectedRow();
                if(Row >=1) {
                    DataModelIT.setValueByVariable("DETAIL_SR_NO",String.valueOf(Row+1),NewRow);
                }
                else {
                    DataModelIT.setValueByVariable("DETAIL_SR_NO",String.valueOf(1),NewRow);
                }
                //DataModelB.setValueByVariable("DETAIL_SR_NO",String.valueOf(1),NewRow);
                //DataModelIT.setValueByVariable("OPENING_VALUE",String.valueOf(AssetCost),NewRow);
                DataModelIT.setValueByVariable("OPENING_VALUE",String.valueOf(new BigDecimal(AssetCost).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                DataModelIT.setValueByVariable("DEPRN_FROM_DATE",txtAssetDate.getText(),NewRow);
                DataModelIT.setValueByVariable("DEPRN_TO_DATE",EITLERPGLOBAL.formatDate(EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText()))),NewRow);
                
                
                String SQL="SELECT B.* FROM D_FAS_ITEM_MASTER_HEADER A,D_FAS_ITEM_MASTER_DETAIL B "+
                "WHERE A.DOC_NO = B.DOC_NO "+
                "AND A.ITEM_ID = '" + txtItemID.getText().trim() + "' "+
                "AND '" + EITLERPGLOBAL.formatDateDB(AssetDate) + "' >= B.FROM_DATE AND '" + EITLERPGLOBAL.formatDateDB(AssetDate) + "' <= B.TO_DATE "+
                "ORDER BY B.SR_NO";
                double BookRate=0;
                int MethodId=0;
                rsTmp = data.getResult(SQL,FinanceGlobal.FinURL);
                if(rsTmp.getRow()>0) {
                    BookRate=rsTmp.getDouble("IT_PER");
                    MethodId = rsTmp.getInt("METHOD_ID");
                    DataModelIT.setValueByVariable("DEPRN_PERCENTAGE",rsTmp.getString("IT_PER"),NewRow);
                    DataModelIT.setValueByVariable("DEPRN_METHOD",String.valueOf(MethodId),NewRow);
                    String Method_name = clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",MethodId);
                    DataModelIT.setValueByVariable("DEPRN_METHOD_NAME",Method_name,NewRow);
                }
                else {
                    BookRate=0;
                    DataModelIT.setValueByVariable("DEPRN_PERCENTAGE","",NewRow);
                    DataModelIT.setValueByVariable("DEPRN_METHOD","",NewRow);
                }
                
                
                int month = EITLERPGLOBAL.getMonthDifference(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText()),EITLERPGLOBAL.getFinYearEndDate(EITLERPGLOBAL.formatDateDB(txtAssetDate.getText())))+1;
                
                if(MethodId ==2) {
                    DeprAmount = clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate,month);
                }
                else {
                    DeprAmount = clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,month);
                }
                //
                //DeprAmount = clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,month);
                
                
                //DataModelIT.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(DeprAmount),NewRow);
                DataModelIT.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(new BigDecimal(DeprAmount).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                CumDepr +=DeprAmount;
                //DataModelIT.setValueByVariable("CUM_DEPRN",String.valueOf(CumDepr),NewRow);
                DataModelIT.setValueByVariable("CUM_DEPRN",String.valueOf(new BigDecimal(CumDepr).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                //DataModelIT.setValueByVariable("CLOSING_BALANCE",String.valueOf(EITLERPGLOBAL.round(AssetCost - CumDepr,0)),NewRow);
                DataModelIT.setValueByVariable("CLOSING_BALANCE",String.valueOf(new BigDecimal(AssetCost - CumDepr).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                AssetCost = EITLERPGLOBAL.round(AssetCost - DeprAmount,0);
                //DataModelIT.setValueByVariable("WDV",String.valueOf(AssetCost),NewRow);
                DataModelIT.setValueByVariable("WDV",String.valueOf(new BigDecimal(AssetCost).setScale(0,BigDecimal.ROUND_HALF_UP)),NewRow);
                //DataModelB.setValueByVariable("AMOUNT", "10.25",NewRow);
            }
            else {
                //--------INVALID----------//
            }
            
            
            if(StopCalculation) {
                
                int Row = TableIT.getRowCount()-1;
                DataModelIT.addRow(rowData);
                DataModelIT.setValueByVariable("DETAIL_SR_NO",DataModelIT.getValueByVariable("DETAIL_SR_NO",Row),Row+1);//DataModelIT.getValueByVariable("SR_NO",Row);
                DataModelIT.setValueByVariable("YEAR",String.valueOf(Integer.parseInt(DataModelIT.getValueByVariable("YEAR",Row))+1),Row+1);
                DataModelIT.setValueByVariable("OPENING_VALUE",DataModelIT.getValueByVariable("CLOSING_BALANCE",Row),Row+1);
                AssetCost = Double.parseDouble(DataModelIT.getValueByVariable("CLOSING_BALANCE",Row));
                String DeprFromDate = EITLERPGLOBAL.addDaysToDate(DataModelIT.getValueByVariable("DEPRN_TO_DATE",Row),1,"dd/MM/yyyy");
                
                DataModelIT.setValueByVariable("DEPRN_FROM_DATE",EITLERPGLOBAL.formatDate(DeprFromDate),Row+1);
                
                
                //----FIND DEPRN PERCENTAGE METHOD ID RATE
                String SQL="SELECT B.* FROM D_FAS_ITEM_MASTER_HEADER A,D_FAS_ITEM_MASTER_DETAIL B "+
                "WHERE A.DOC_NO = B.DOC_NO "+
                "AND A.ITEM_ID = '" + txtItemID.getText().trim() + "' "+
                "AND '" + DeprFromDate  + "' >= B.FROM_DATE AND '" + DeprFromDate  + "' <= B.TO_DATE "+
                "ORDER BY B.SR_NO";
                //System.out.println(SQL);
                double BookRate=0;
                int MethodId = 0;
                rsTmp = data.getResult(SQL,FinanceGlobal.FinURL);
                if(rsTmp.getRow()>0) {
                    BookRate=rsTmp.getDouble("IT_PER");
                    MethodId =rsTmp.getInt("METHOD_ID");
                    DataModelIT.setValueByVariable("DEPRN_PERCENTAGE",rsTmp.getString("BOOK_PER"),Row+1);
                    DataModelIT.setValueByVariable("DEPRN_METHOD",String.valueOf(MethodId) ,Row+1);
                    String Method_name = clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",MethodId);
                    DataModelIT.setValueByVariable("DEPRN_METHOD_NAME",Method_name,Row+1);
                }
                else {
                    BookRate=0;
                    DataModelIT.setValueByVariable("DEPRN_PERCENTAGE","",Row+1);
                    DataModelIT.setValueByVariable("DEPRN_METHOD","",Row+1);
                    DataModelIT.setValueByVariable("DEPRN_METHOD_NAME","",Row+1);
                }
                
                //DataModelIT.setValueByVariable("YEAR",DataModelIT.getValueByVariable("",Row),Row+1);
                //DataModelIT.setValueByVariable("YEAR",DataModelIT.getValueByVariable("",Row),Row+1);
                double TotalDeprAmount=0.0;
                int Counter = 1;
                if(MethodId==2) {
                    while(AssetCost > EITLERPGLOBAL.round((clsFASGlobal.DeprnLimit*AssetCostOriginal)/100,0)) {
                        
                        //if(MethodId==2) {
                        DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCostOriginal, BookRate,1),0);
                        TotalDeprAmount+=DeprAmount;
                        //}
                        //                        else {
                        //                            DeprAmount = EITLERPGLOBAL.round(clsFASGlobal.WrittenDownMethod(AssetCost, BookRate,1),3);
                        //                            TotalDeprAmount+=DeprAmount;
                        //                        }
                        Counter++;
                        AssetCost -= DeprAmount;
                    }
                }
                DataModelIT.setValueByVariable("DEPRN_FOR_THE_YEAR",String.valueOf(TotalDeprAmount),Row+1);
                DataModelIT.setValueByVariable("SHIFT_ALLOW_FOR_THE_YEAR","",Row+1);
                DataModelIT.setValueByVariable("CUM_DEPRN",String.valueOf(Double.parseDouble(DataModelIT.getValueByVariable("CUM_DEPRN",Row)) + EITLERPGLOBAL.round(TotalDeprAmount,0)),Row+1);
                DataModelIT.setValueByVariable("WDV",String.valueOf(Double.valueOf(DataModelIT.getValueByVariable("CLOSING_BALANCE",Row))-TotalDeprAmount),Row+1);
                DataModelIT.setValueByVariable("CLOSING_BALANCE",String.valueOf(Double.parseDouble(DataModelIT.getValueByVariable("CLOSING_BALANCE",Row)) - TotalDeprAmount),Row+1);
                
                String Dt = data.getStringValueFromDB("SELECT  DATE_ADD(DATE_ADD('"+DeprFromDate+"', INTERVAL " + Counter + " MONTH ),INTERVAL -1 DAY )FROM DUAL");
                DataModelIT.setValueByVariable("DEPRN_TO_DATE",EITLERPGLOBAL.formatDate(Dt),Row+1);
            }
            
        }
        catch(Exception e) {
            
        }
        UpdateDetailITSrNo();
    }
    
    private void UpdateDetailSrNo() {
        int SrCol=DataModelD.getColFromVariable("SR_NO");
        
        for(int i=0;i<TableD.getRowCount();i++) {
            TableD.setValueAt(Integer.toString(i+1), i, SrCol);
        }
    }
    private void UpdateDetailBookSrNo() {
        int SrCol=DataModelB.getColFromVariable("SR_NO");
        
        for(int i=0;i<TableB.getRowCount();i++) {
            TableB.setValueAt(Integer.toString(i+1), i, SrCol);
        }
    }
    private void UpdateDetailITSrNo() {
        int SrCol=DataModelIT.getColFromVariable("SR_NO");
        
        for(int i=0;i<TableIT.getRowCount();i++) {
            TableIT.setValueAt(Integer.toString(i+1), i, SrCol);
        }
    }
    private void CalculateTotalAmount() {
        double TotalAmount = Double.parseDouble(txtPJVAmount.getText().trim())
        + Double.parseDouble(txtCustomAmount.getText().trim()) + Double.parseDouble(txtLandingAmount.getText().trim())
        + Double.parseDouble(txtFreightAmount.getText().trim())
        + Double.parseDouble(txtInstallationVoucherAmount.getText().trim())
        //+ Double.parseDouble(txtOthersVoucherAmount.getText().trim())
        - Double.parseDouble(txtServicetaxAmount.getText().trim());
        for(int i = 0;i<TableOthers.getRowCount();i++) {
            TotalAmount +=Double.parseDouble(TableOthers.getValueAt(i, 3).toString());
        }
        
        txtFinalAmount.setText(String.valueOf(new BigDecimal(TotalAmount).setScale(0,BigDecimal.ROUND_HALF_UP)));
    }
    
    private void Show() {
        try {
            
            
            int AssetSrNo = TableD.getSelectedRow() + 1;
            
            if(AssetSrNo<=0) {
                return;
            }
            lblBookTable.setText("Particulars of Cost Depreciation of BOOK Value : " + DataModelD.getValueByVariable("ITEM_NO",TableD.getSelectedRow()));
            
            lblITTable.setText("Particulars of Cost Depreciation of Income Tax Value : " + DataModelD.getValueByVariable("ITEM_NO",TableD.getSelectedRow()));
            
            SQL="SELECT * FROM D_FAS_MASTER_DETAIL_EX "+
            "WHERE COMPANY_ID = '" + EITLERPGLOBAL.gCompanyID + "' AND  ASSET_NO = '" + txtAssetNo.getText().trim() + "' AND DETAIL_SR_NO='" + AssetSrNo + "' ORDER BY SR_NO";
            
            ResultSet rsDetailEx = data.getResult(SQL,FinanceGlobal.FinURL);
            rsDetailEx.first();
            FormatGridB();
            FormatGridIT();
            
            if(rsDetailEx.getRow()>0) {
                //for the book detail
                while(!rsDetailEx.isAfterLast()) {
                    Object[] rowData=new Object[1];
                    
                    if(rsDetailEx.getInt("TYPE") ==1) {
                        DataModelB.addRow(rowData);
                        int NewRow=TableB.getRowCount()-1;
                        //DataModelB.setValueByVariable("YEAR",String.valueOf(Year),NewRow);
                        //rsDetailEx.getString("");
                        
                        DataModelB.setValueByVariable("SR_NO",rsDetailEx.getString("SR_NO"),NewRow);
                        DataModelB.setValueByVariable("DETAIL_SR_NO",rsDetailEx.getString("DETAIL_SR_NO"),NewRow);
                        DataModelB.setValueByVariable("YEAR",rsDetailEx.getString("YEAR"),NewRow);
                        DataModelB.setValueByVariable("OPENING_VALUE",rsDetailEx.getString("OPENING_BALANCE"),NewRow);
                        DataModelB.setValueByVariable("ADDITIONS",rsDetailEx.getString("ADDITIONS"),NewRow);
                        DataModelB.setValueByVariable("CLOSING_BALANCE",rsDetailEx.getString("CLOSING_BALANCE"),NewRow);
                        DataModelB.setValueByVariable("DEPRN_FROM_DATE",EITLERPGLOBAL.formatDate(rsDetailEx.getString("DEPRECIATION_FROM_DATE")),NewRow);
                        DataModelB.setValueByVariable("DEPRN_TO_DATE",EITLERPGLOBAL.formatDate(rsDetailEx.getString("DEPRECIATION_TO_DATE")),NewRow);
                        DataModelB.setValueByVariable("DEPRN_PERCENTAGE",rsDetailEx.getString("DEPRECIATION_PERCENTAGE"),NewRow);
                        DataModelB.setValueByVariable("DEPRN_METHOD",rsDetailEx.getString("DEPRECIATION_METHOD"),NewRow);
                        DataModelB.setValueByVariable("DEPRN_METHOD_NAME",clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",rsDetailEx.getInt("DEPRECIATION_METHOD")),NewRow);
                        DataModelB.setValueByVariable("DEPRN_FOR_THE_YEAR",rsDetailEx.getString("DEPRECIATION_FOR_THE_YEAR"),NewRow);
                        DataModelB.setValueByVariable("SHIFT_ALLOW_FOR_THE_YEAR",rsDetailEx.getString("SHIFT_ALLOW_FOR_THE_YEAR"),NewRow);
                        DataModelB.setValueByVariable("CUM_DEPRN",rsDetailEx.getString("CUMULATIVE_DEPRECIATION"),NewRow);
                        DataModelB.setValueByVariable("WDV",rsDetailEx.getString("WRITTEN_DOWN_VALUE"),NewRow);
                        DataModelB.setValueByVariable("REMARKS",rsDetailEx.getString("REMARKS"),NewRow);
                        DataModelB.setValueByVariable("SHIFTS",rsDetailEx.getString("SHIFT"),NewRow);
                        
                    }
                    //for the IT detail
                    else if(rsDetailEx.getInt("TYPE") ==2) {
                        DataModelIT.addRow(rowData);
                        int NewRow=TableIT.getRowCount()-1;
                        //DataModelB.setValueByVariable("YEAR",String.valueOf(Year),NewRow);
                        //rsDetailEx.getString("");
                        
                        DataModelIT.setValueByVariable("SR_NO",rsDetailEx.getString("SR_NO"),NewRow);
                        DataModelIT.setValueByVariable("DETAIL_SR_NO",rsDetailEx.getString("DETAIL_SR_NO"),NewRow);
                        DataModelIT.setValueByVariable("YEAR",rsDetailEx.getString("YEAR"),NewRow);
                        DataModelIT.setValueByVariable("OPENING_VALUE",rsDetailEx.getString("OPENING_BALANCE"),NewRow);
                        DataModelIT.setValueByVariable("ADDITIONS",rsDetailEx.getString("ADDITIONS"),NewRow);
                        DataModelIT.setValueByVariable("CLOSING_BALANCE",rsDetailEx.getString("CLOSING_BALANCE"),NewRow);
                        DataModelIT.setValueByVariable("DEPRN_FROM_DATE",EITLERPGLOBAL.formatDate(rsDetailEx.getString("DEPRECIATION_FROM_DATE")),NewRow);
                        DataModelIT.setValueByVariable("DEPRN_TO_DATE",EITLERPGLOBAL.formatDate(rsDetailEx.getString("DEPRECIATION_TO_DATE")),NewRow);
                        DataModelIT.setValueByVariable("DEPRN_PERCENTAGE",rsDetailEx.getString("DEPRECIATION_PERCENTAGE"),NewRow);
                        DataModelIT.setValueByVariable("DEPRN_METHOD",rsDetailEx.getString("DEPRECIATION_METHOD"),NewRow);
                        DataModelIT.setValueByVariable("DEPRN_METHOD_NAME",clsParameter.getParaDescription(EITLERPGLOBAL.gCompanyID,"METHOD",rsDetailEx.getInt("DEPRECIATION_METHOD")),NewRow);
                        DataModelIT.setValueByVariable("DEPRN_FOR_THE_YEAR",rsDetailEx.getString("DEPRECIATION_FOR_THE_YEAR"),NewRow);
                        DataModelIT.setValueByVariable("SHIFT_ALLOW_FOR_THE_YEAR",rsDetailEx.getString("SHIFT_ALLOW_FOR_THE_YEAR"),NewRow);
                        DataModelIT.setValueByVariable("CUM_DEPRN",rsDetailEx.getString("CUMULATIVE_DEPRECIATION"),NewRow);
                        DataModelIT.setValueByVariable("WDV",rsDetailEx.getString("WRITTEN_DOWN_VALUE"),NewRow);
                        DataModelIT.setValueByVariable("REMARKS",rsDetailEx.getString("REMARKS"),NewRow);
                        DataModelIT.setValueByVariable("SHIFTS",rsDetailEx.getString("SHIFT"),NewRow);
                        
                        
                    }
                    rsDetailEx.next();
                }
                
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
        //boolean t = false;
    }
}