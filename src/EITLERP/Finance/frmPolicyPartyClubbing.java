/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */

package EITLERP.Finance;

/**
 *
 * @author  nitin
 */
/*<APPLET CODE=frmInward.class HEIGHT=500 WIDTH=665></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
import javax.swing.event.*;
import java.awt.event.*;
import javax.swing.text.*;
import EITLERP.Utils.*;
import java.sql.*;
import java.net.*;
import EITLERP.*;


public class frmPolicyPartyClubbing extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsPolicyPartyClubbing objPartyClubbing;
    
    private EITLTableModel DataModelParty;
    
    private boolean Updating=false;
    
    private String theDocNo="";
    
    private boolean IsGenerating=false;
    
    /** Creates new form frmTemplate */
    public frmPolicyPartyClubbing() {
        
        setSize(668,400);
        initComponents();
        
        FormatGrid();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        objPartyClubbing=new clsPolicyPartyClubbing();
        
        SetMenuForRights();
        
        if(getName().equals("Link")) {
            
        }
        else {
            
            if(objPartyClubbing.LoadData(EITLERPGLOBAL.gCompanyID)) {
                objPartyClubbing.MoveFirst();
                DisplayData();
                SetMenuForRights();
                SetFields(false);
                ShowMessage("Ready ........");
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while loading data. Error is "+objPartyClubbing.LastError);
            }
        }
        
        //DataModelDtl.TableReadOnly(true);
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        txtAuditRemarks = new javax.swing.JTextField();
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        Header = new javax.swing.JTabbedPane();
        Panel1 = new javax.swing.JPanel();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jTextArea3 = new javax.swing.JTextArea();
        lblAccountCode2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        lblAccountCode3 = new javax.swing.JLabel();
        lblAccountID = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableParty = new javax.swing.JTable();
        cmdAddParty = new javax.swing.JButton();
        cmdRemoveParty = new javax.swing.JButton();
        lblSubCode11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtRateFromDate = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        lblAccountID1 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        lblAccountID2 = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();

        txtAuditRemarks.setEnabled(false);

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        cmdPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPreviewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("POLICY PARTY CLUBBING");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 40, 666, 25);

        Panel1.setLayout(null);

        Panel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        Panel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Panel1MouseClicked(evt);
            }
        });

        Panel1.add(jTextArea2);
        jTextArea2.setBounds(177, 29, 0, 15);

        jPanel2.setLayout(null);

        jPanel2.add(jTextArea3);
        jTextArea3.setBounds(177, 29, 0, 15);

        lblAccountCode2.setText("Account Code");
        jPanel2.add(lblAccountCode2);
        lblAccountCode2.setBounds(15, 20, 90, 15);

        jPanel2.add(jTextField3);
        jTextField3.setBounds(119, 18, 80, 19);

        jPanel2.add(jTextField4);
        jTextField4.setBounds(119, 49, 80, 19);

        lblAccountCode3.setText("Account Code");
        jPanel2.add(lblAccountCode3);
        lblAccountCode3.setBounds(15, 51, 90, 15);

        Panel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 0, 0);

        lblAccountID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountID.setText("Doc No");
        lblAccountID.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Panel1.add(lblAccountID);
        lblAccountID.setBounds(-1, 21, 90, 15);

        txtDocNo.setEditable(false);
        txtDocNo.setName("PARTY_ID");
        txtDocNo.setEnabled(false);
        Panel1.add(txtDocNo);
        txtDocNo.setBounds(100, 20, 120, 19);

        TableParty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableParty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TablePartyKeyPressed(evt);
            }
        });

        jScrollPane2.setViewportView(TableParty);

        Panel1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 100, 500, 160);

        cmdAddParty.setMnemonic('A');
        cmdAddParty.setText("Add New");
        cmdAddParty.setNextFocusableComponent(cmdRemoveParty);
        cmdAddParty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddPartyActionPerformed(evt);
            }
        });

        Panel1.add(cmdAddParty);
        cmdAddParty.setBounds(520, 150, 100, 25);

        cmdRemoveParty.setMnemonic('L');
        cmdRemoveParty.setText("Remove");
        cmdRemoveParty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemovePartyActionPerformed(evt);
            }
        });

        Panel1.add(cmdRemoveParty);
        cmdRemoveParty.setBounds(520, 190, 100, 25);

        lblSubCode11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSubCode11.setText("Party List");
        lblSubCode11.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Panel1.add(lblSubCode11);
        lblSubCode11.setBounds(10, 80, 120, 15);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("From Date");
        Panel1.add(jLabel16);
        jLabel16.setBounds(10, 295, 100, 15);

        Panel1.add(txtRateFromDate);
        txtRateFromDate.setBounds(120, 295, 120, 19);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("To Date");
        Panel1.add(jLabel17);
        jLabel17.setBounds(270, 295, 100, 15);

        lblAccountID1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountID1.setText("From Date");
        lblAccountID1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Panel1.add(lblAccountID1);
        lblAccountID1.setBounds(0, 50, 90, 15);

        txtFromDate.setName("PARTY_ID");
        txtFromDate.setNextFocusableComponent(txtToDate);
        txtFromDate.setEnabled(false);
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFromDateFocusGained(evt);
            }
        });

        Panel1.add(txtFromDate);
        txtFromDate.setBounds(100, 50, 120, 19);

        lblAccountID2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountID2.setText("To Date");
        lblAccountID2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Panel1.add(lblAccountID2);
        lblAccountID2.setBounds(290, 50, 90, 15);

        txtToDate.setName("PARTY_ID");
        txtToDate.setNextFocusableComponent(cmdAddParty);
        txtToDate.setEnabled(false);
        txtToDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtToDateFocusGained(evt);
            }
        });

        Panel1.add(txtToDate);
        txtToDate.setBounds(390, 50, 120, 19);

        Header.addTab("Policy Party Clubbing", Panel1);

        getContentPane().add(Header);
        Header.setBounds(0, 70, 654, 300);
        Header.getAccessibleContext().setAccessibleName("Scheme Details");
        Header.getAccessibleContext().setAccessibleDescription("Scheme Details");

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 370, 650, 22);

    }//GEN-END:initComponents

    private void txtToDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToDateFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter To Date.");
    }//GEN-LAST:event_txtToDateFocusGained

    private void txtFromDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter From Date.");
    }//GEN-LAST:event_txtFromDateFocusGained
    
    private void TablePartyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablePartyKeyPressed
        // TODO add your handling code here:
        try {
            
            if(evt.getKeyCode()==112) //F1 Key pressed
            {
                
                if(TableParty.getSelectedColumn()==DataModelParty.getColFromVariable("PARTY_ID")) {
                    LOV aList=new LOV();
                    
                    aList.SQL="SELECT PARTY_CODE,PARTY_NAME "+
                    " FROM D_FIN_PARTY_MASTER WHERE APPROVED=1 AND CANCELLED=0 AND MAIN_ACCOUNT_CODE IN ('210010','210027','210034','210072') "+
                    " ORDER BY PARTY_CODE ";
                    aList.ReturnCol=1;
                    aList.ShowReturnCol=true;
                    aList.DefaultSearchOn=2;
                    aList.UseSpecifiedConn=true;
                    aList.dbURL=FinanceGlobal.FinURL;
                    
                    if(aList.ShowLOV()) {
                        if(TableParty.getCellEditor()!=null) {
                            TableParty.getCellEditor().stopCellEditing();
                        }
                        TableParty.setValueAt(aList.ReturnVal, TableParty.getSelectedRow(),DataModelParty.getColFromVariable("PARTY_ID"));
                        String PartyName = clsPolicyMaster.getPartyName(EITLERPGLOBAL.gCompanyID, aList.ReturnVal);
                        TableParty.setValueAt(PartyName, TableParty.getSelectedRow(),DataModelParty.getColFromVariable("PARTY_NAME"));
                        
                    }
                }
                
            }
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_TablePartyKeyPressed
    
    private void cmdAddPartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddPartyActionPerformed
        // TODO add your handling code here:
        try {
            
            Updating=true;
            Object[] rowData=new Object[4];
            rowData[0]=Integer.toString(TableParty.getRowCount()+1);
            rowData[1]="";
            rowData[2]="";
            rowData[3]="";
            DataModelParty.addRow(rowData);
            
            if(TableParty.getRowCount()>1) {
                int NewRow=TableParty.getRowCount()-1;
            }
            Updating=false;
            
            
            TableParty.changeSelection(TableParty.getRowCount()-1, 1, false,false);
            TableParty.requestFocus();
            
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_cmdAddPartyActionPerformed
    
    private void cmdRemovePartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemovePartyActionPerformed
        // TODO add your handling code here:
        try {
            if(TableParty.getRowCount()>0) {
                DataModelParty.removeRow(TableParty.getSelectedRow());
                UpdateSrNo();
            }
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_cmdRemovePartyActionPerformed
    
    private void UpdateSrNo() {
        int SrCol=DataModelParty.getColFromVariable("SR_NO");
        
        for(int i=0;i<TableParty.getRowCount();i++) {
            TableParty.setValueAt(Integer.toString(i+1), i, SrCol);
        }
    }
    
    private void Panel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Panel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Panel1MouseClicked
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        objPartyClubbing.Close();
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPrintActionPerformed
    
    private void cmdPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPreviewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdPreviewActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this record ?","SDML ERP",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
            Delete();
        }
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Header;
    private javax.swing.JPanel Panel1;
    private javax.swing.JTable TableParty;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cmdAddParty;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdRemoveParty;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdTop;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lblAccountCode2;
    private javax.swing.JLabel lblAccountCode3;
    private javax.swing.JLabel lblAccountID;
    private javax.swing.JLabel lblAccountID1;
    private javax.swing.JLabel lblAccountID2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblSubCode11;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAuditRemarks;
    private javax.swing.JTextField txtDocNo;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtRateFromDate;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    
    private void SetFields(boolean pStat) {
        
        cmdAddParty.setEnabled(pStat);
        cmdRemoveParty.setEnabled(pStat);
        TableParty.setEnabled(pStat);
        txtFromDate.setEnabled(pStat);
        txtToDate.setEnabled(pStat);
    }
    
    private void ClearFields() {
        txtDocNo.setText("");
        txtFromDate.setText("");
        txtToDate.setText("");
        FormatGrid();
        
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        
        //=========== Color Indication ===============//
        try {
            if(EditMode==0) {
                
                if(objPartyClubbing.getAttribute("CANCELLED").getInt()==1) {
                    lblTitle.setBackground(Color.RED);
                }
                
                
            }
        }
        catch(Exception c) {
            
        }
        //============================================//
        
        
        ClearFields();
        
        txtDocNo.setText(Integer.toString(objPartyClubbing.getAttribute("DOC_NO").getInt()));
        txtFromDate.setText(objPartyClubbing.getAttribute("FROM_DATE").getString());
        txtToDate.setText(objPartyClubbing.getAttribute("TO_DATE").getString());
        
        
        FormatGrid();
        //=========Now Generate Period Range Table====================//
        for(int i=1;i<=objPartyClubbing.colPartyGrp.size();i++) {
            clsPolicyPartyClubbing ObjParty=(clsPolicyPartyClubbing)objPartyClubbing.colPartyGrp.get(Integer.toString(i));
            Object[] rowData=new Object[1];
            DataModelParty.addRow(rowData);
            
            int NewRow=TableParty.getRowCount()-1;
            
            DataModelParty.setValueByVariable("SR_NO",Integer.toString(i), NewRow);
            DataModelParty.setValueByVariable("PARTY_ID",(String)ObjParty.getAttribute("PARTY_ID").getObj(),NewRow);
            DataModelParty.setValueByVariable("PARTY_NAME",(String)ObjParty.getAttribute("PARTY_NAME").getObj(),NewRow);
        }
        
    }
    
    //Sets data to the Class Object
    private void SetData() {
        
        objPartyClubbing.setAttribute("DOC_NO",Integer.parseInt(txtDocNo.getText()));
        objPartyClubbing.setAttribute("FROM_DATE",txtFromDate.getText());
        objPartyClubbing.setAttribute("TO_DATE",txtToDate.getText());
        
        //======= Set Line part ============
        objPartyClubbing.colPartyGrp.clear();
        
        for(int i=0;i<TableParty.getRowCount();i++) {
            clsPolicyPartyClubbing objParty=new clsPolicyPartyClubbing();
            objParty.setAttribute("DOC_NO",Integer.parseInt(txtDocNo.getText()));
            objParty.setAttribute("FROM_DATE",txtFromDate.getText());
            objParty.setAttribute("TO_DATE",txtToDate.getText());
            
            objParty.setAttribute("SR_NO",i+1);
            objParty.setAttribute("PARTY_ID",DataModelParty.getValueByVariable("PARTY_ID",i));
            objParty.setAttribute("PARTY_NAME",DataModelParty.getValueByVariable("PARTY_NAME",i));
            
            objPartyClubbing.colPartyGrp.put(Integer.toString(objPartyClubbing.colPartyGrp.size()+1), objParty);
        }
        
        
    }
    
    
    private void SetMenuForRights() {
        
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,11601)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        //if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,11602)) {
        cmdEdit.setEnabled(true);
        //}
        //else {
        //    cmdEdit.setEnabled(false);
        //}
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,11603)) {
            
            cmdDelete.setEnabled(true);
        }
        else {
            
            cmdDelete.setEnabled(false);
        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gNewUserID, 0,11604)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
        
    }
    
    private void Add() {
        EditMode=EITLERPGLOBAL.ADD;
        SetFields(true);
        DisableToolbar();
        ClearFields();
        txtDocNo.setText(Long.toString(data.getMaxID(EITLERPGLOBAL.gCompanyID,"D_SAL_POLICY_PARTY_CLUBBING","DOC_NO")));
                
        txtFromDate.requestFocus();
    }
    
    private void Edit() {
        
        EITLERPGLOBAL.ChangeCursorToWait(this);
        EditMode=EITLERPGLOBAL.EDIT;
        
        //---New Change ---//
        DisplayData();
        //----------------//
        
        SetFields(true);
        DisableToolbar();
        txtDocNo.setEnabled(false);
        txtFromDate.requestFocus();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
        
    }
    
    private void Delete() {
        if(objPartyClubbing.Delete(EITLERPGLOBAL.gNewUserID)) {
            MoveLast();
        }
    }
    
    private boolean Validate() {
        //** Validations **//
        
        if(txtDocNo.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Please Specify Doc No.");
            txtDocNo.requestFocus();
            return false;
        }
        
        if (DataModelParty.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null,"Please Specify Party Clubbing List.");
            return false;
        }
        
        if(txtFromDate.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Please Enter From Date.");
            txtFromDate.requestFocus();
            return false;
        }
        else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.requestFocus();
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Please Enter To Date.");
            txtToDate.requestFocus();
            return false;
        }
        else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            txtToDate.requestFocus();
            return false;
        }
        //*****************//
        
        return true;
    }
    
    private void Save() {
        
        EITLERPGLOBAL.ChangeCursorToWait(this);
        
        //** Validations **//
        if(!Validate()){
            return;
        }
        
        SetData();
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(objPartyClubbing.Insert()) {
                MoveLast();
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+objPartyClubbing.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(objPartyClubbing.Update()) {
                //Nothing to do
                DisplayData();
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving. Error is "+objPartyClubbing.LastError);
                EITLERPGLOBAL.ChangeCursorToDefault(this);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
        
        
    }
    
    private void Cancel() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        SetMenuForRights();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void Find() {
        
        Loader ObjLoader=new Loader(this,"EITLERP.Finance.frmPolicyPartyClubbingFind",true);
        frmPolicyPartyClubbingFind ObjReturn= (frmPolicyPartyClubbingFind) ObjLoader.getObj();
        
        if(ObjReturn.Cancelled==false) {
            if(!objPartyClubbing.Filter(ObjReturn.strQuery,EITLERPGLOBAL.gCompanyID)) {
                JOptionPane.showMessageDialog(null,"No records found.");
            }
            MoveFirst();
        }
        
    }
    
    private void MoveFirst() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objPartyClubbing.MoveFirst();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MovePrevious() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objPartyClubbing.MovePrevious();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveNext() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objPartyClubbing.MoveNext();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    private void MoveLast() {
        EITLERPGLOBAL.ChangeCursorToWait(this);
        objPartyClubbing.MoveLast();
        DisplayData();
        EITLERPGLOBAL.ChangeCursorToDefault(this);
    }
    
    public void FindEx(int pCompanyID,int pDocNo) {
        objPartyClubbing.Filter(" WHERE DOC_NO="+pDocNo,pCompanyID);
        objPartyClubbing.MoveFirst();
        DisplayData();
    }
    
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    private void FormatGrid() {
        try {
            
            DataModelParty=new EITLTableModel();
            
            EITLTableCellRenderer cellRender=new EITLTableCellRenderer();
            cellRender.setHorizontalAlignment(JLabel.RIGHT);
            
            //cmdAddDtl.requestFocus();
            
            TableParty.removeAll();
            TableParty.setModel(DataModelParty);
            
            TableColumnModel ColModel=TableParty.getColumnModel();
            TableParty.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            //Add the columns
            DataModelParty.addColumn("Sr. No."); //0 Read Only
            DataModelParty.addColumn("Party ID"); //1
            DataModelParty.addColumn("Party Name"); //2
            
            DataModelParty.SetVariable(0,"SR_NO"); //0 - Read Only
            DataModelParty.SetVariable(1,"PARTY_ID"); //1
            DataModelParty.SetVariable(2,"PARTY_NAME"); //2
            
            DataModelParty.TableReadOnly(false);
            DataModelParty.SetReadOnly(0);
            
            DataModelParty.SetNumeric(0,true);
            
            TableParty.getColumnModel().getColumn(1).setCellRenderer(cellRender);
            
            Updating=false;
            //Table formatting completed
            
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}
