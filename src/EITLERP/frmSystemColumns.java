/*
 * frmSystemColumns.java
 *
 * Created on May 12, 2004, 9:39 AM
 */

package EITLERP;
 
/** 
 *
 * @author  nrpithva
 */
/*<APPLET CODE=frmSystemColumns.class HEIGHT=417 WIDTH=652></APPLET>*/

import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.table.*;
 
public class frmSystemColumns extends javax.swing.JApplet {
    
    private EITLComboModel cmbModuleModel=new EITLComboModel();
    private EITLTableModel DataModel;    
    private EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
    
    private int SelModuleID=0;
        
    /** Initializes the applet frmSystemColumns */
    public void init() {
        System.gc();
        setSize(652,417);
        initComponents();
        GenerateCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbModule = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdUPH = new javax.swing.JButton();
        cmdDownH = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText(" SYSTEM COLUMNS SETUP");
        jLabel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-2, 0, 650, 25);

        jLabel2.setText("Select Module");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 40, 100, 16);

        cmbModule.setNextFocusableComponent(Table);
        cmbModule.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbModuleItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbModule);
        cmbModule.setBounds(112, 36, 254, 22);

        jPanel1.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.EtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setNextFocusableComponent(cmdUPH);
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(8, 8, 544, 302);

        cmdUPH.setFont(new java.awt.Font("Tahoma", 0, 10));
        cmdUPH.setText("up");
        cmdUPH.setNextFocusableComponent(cmdDownH);
        cmdUPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUPHActionPerformed(evt);
            }
        });

        jPanel1.add(cmdUPH);
        cmdUPH.setBounds(562, 10, 60, 23);

        cmdDownH.setFont(new java.awt.Font("Tahoma", 0, 10));
        cmdDownH.setText("down");
        cmdDownH.setNextFocusableComponent(cmdSave);
        cmdDownH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDownHActionPerformed(evt);
            }
        });

        jPanel1.add(cmdDownH);
        cmdDownH.setBounds(562, 40, 61, 23);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(6, 72, 632, 318);

        cmdSave.setText("Save");
        cmdSave.setNextFocusableComponent(cmbModule);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSave);
        cmdSave.setBounds(542, 36, 98, 25);

    }//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        
        for(int i=0;i<Table.getRowCount();i++)
        {
          int SrNo= Integer.parseInt((String)Table.getValueAt(i,0));
          int Order=Integer.parseInt((String)Table.getValueAt(i,1));
          
          clsSystemColumn.setOrder(EITLERPGLOBAL.gCompanyID, SelModuleID, SrNo, Order);
        }
        
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdDownHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDownHActionPerformed
        // TODO add your handling code here:
        Object[] rowOne=new Object[6];
        Object[] rowTwo=new Object[6];
        
        if(Table.getRowCount()>1&&Table.getSelectedRow()<Table.getRowCount()-1)
        {
            int CurRow=Table.getSelectedRow();
            int DownRow=CurRow+1;
            
            //Record current row
            rowOne[0]=Table.getValueAt(CurRow,0);
            //rowOne[1]=Table.getValueAt(CurRow,1);
            rowOne[2]=Table.getValueAt(CurRow,2);
            rowOne[3]=Table.getValueAt(CurRow,3);
            rowOne[4]=Table.getValueAt(CurRow,4);
            rowOne[5]=Table.getValueAt(CurRow,5);
            
            //Record Up Row
            rowTwo[0]=Table.getValueAt(DownRow,0);
            //rowTwo[1]=Table.getValueAt(UpRow,1);
            rowTwo[2]=Table.getValueAt(DownRow,2);
            rowTwo[3]=Table.getValueAt(DownRow,3);
            rowTwo[4]=Table.getValueAt(DownRow,4);
            rowTwo[5]=Table.getValueAt(DownRow,5);
            
            //Now Replace up row with Row One
            Table.setValueAt(rowOne[0],DownRow,0);
            //Table.setValueAt(rowOne[1],UpRow,1);
            Table.setValueAt(rowOne[2],DownRow,2);
            Table.setValueAt(rowOne[3],DownRow,3);
            Table.setValueAt(rowOne[4],DownRow,4);
            Table.setValueAt(rowOne[5],DownRow,5);
            
            //Now Replace Current row with Row Two
            Table.setValueAt(rowTwo[0],CurRow,0);
            //Table.setValueAt(rowTwo[1],CurRow,1);
            Table.setValueAt(rowTwo[2],CurRow,2);
            Table.setValueAt(rowTwo[3],CurRow,3);
            Table.setValueAt(rowTwo[4],CurRow,4);
            Table.setValueAt(rowTwo[5],CurRow,5);
            
            Table.changeSelection(DownRow,1,false,false);
            //Done
        }
    }//GEN-LAST:event_cmdDownHActionPerformed

    private void cmdUPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUPHActionPerformed
        // TODO add your handling code here:
        Object[] rowOne=new Object[6];
        Object[] rowTwo=new Object[6];
        
        if(Table.getRowCount()>1&&Table.getSelectedRow()>0)
        {
            int CurRow=Table.getSelectedRow();
            int UpRow=CurRow-1;
            
            //Record current row
            rowOne[0]=Table.getValueAt(CurRow,0);
            //rowOne[1]=Table.getValueAt(CurRow,1);
            rowOne[2]=Table.getValueAt(CurRow,2);
            rowOne[3]=Table.getValueAt(CurRow,3);
            rowOne[4]=Table.getValueAt(CurRow,4);
            rowOne[5]=Table.getValueAt(CurRow,5);
            
            
            //Record Up Row
            rowTwo[0]=Table.getValueAt(UpRow,0);
            //rowTwo[1]=Table.getValueAt(UpRow,1);
            rowTwo[2]=Table.getValueAt(UpRow,2);
            rowTwo[3]=Table.getValueAt(UpRow,3);
            rowTwo[4]=Table.getValueAt(UpRow,4);
            rowTwo[5]=Table.getValueAt(UpRow,5);
            
            //Now Replace up row with Row One
            Table.setValueAt(rowOne[0],UpRow,0);
            //Table.setValueAt(rowOne[1],UpRow,1);
            Table.setValueAt(rowOne[2],UpRow,2);
            Table.setValueAt(rowOne[3],UpRow,3);
            Table.setValueAt(rowOne[4],UpRow,4);
            Table.setValueAt(rowOne[5],UpRow,5);
            
            //Now Replace Current row with Row Two
            Table.setValueAt(rowTwo[0],CurRow,0);
            //Table.setValueAt(rowTwo[1],CurRow,1);
            Table.setValueAt(rowTwo[2],CurRow,2);
            Table.setValueAt(rowTwo[3],CurRow,3);
            Table.setValueAt(rowTwo[4],CurRow,4);
            Table.setValueAt(rowTwo[5],CurRow,5);
            
            Table.changeSelection(UpRow,1,false,false);
            //Done
            
        }
        
    }//GEN-LAST:event_cmdUPHActionPerformed

    private void cmbModuleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbModuleItemStateChanged
        // TODO add your handling code here:
        SelModuleID=EITLERPGLOBAL.getComboCode(cmbModule);
        GenerateGrid();
    }//GEN-LAST:event_cmbModuleItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JComboBox cmbModule;
    private javax.swing.JButton cmdDownH;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdUPH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void GenerateCombo() {

        HashMap List=new HashMap();
        String strCondition="";
        
        //----- Generate cmbType ------- //
        cmbModuleModel=new EITLComboModel();
        cmbModule.removeAllItems();
        cmbModule.setModel(cmbModuleModel);
        
        strCondition=" WHERE COMPANY_ID="+Long.toString(EITLERPGLOBAL.gCompanyID)+" ORDER BY MODULE_ID";
        
        List=clsModules.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsModules ObjModules=(clsModules) List.get(Integer.toString(i));
            //Check that Module Access Rights are given
            int ModuleID=(int)ObjModules.getAttribute("MODULE_ID").getVal();
            int MenuID=clsMenu.getMenuIDFromModule(EITLERPGLOBAL.gCompanyID, ModuleID);
            
            if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,MenuID)) {
                ComboData aData=new ComboData();
                aData.Text=(String) ObjModules.getAttribute("MODULE_DESC").getObj();
                aData.Code=(int) ObjModules.getAttribute("MODULE_ID").getVal();
                cmbModuleModel.addElement(aData);
            }
        }
        
    }

private void FormatGrid() {
        DataModel=new EITLTableModel();
        
        Table.removeAll();
                
        Table.setModel(DataModel);
                
        DataModel.TableReadOnly(true);
        
        //Add Columns
        DataModel.addColumn("SrNo"); //0
        DataModel.addColumn("Order"); //1
        DataModel.addColumn("Caption"); //2
        DataModel.addColumn("ReadOnly"); //3
        DataModel.addColumn("Hidden"); //4
        DataModel.addColumn("Variable Name"); //5
        
        //Now hide the column 1
        Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        Table.getColumnModel().getColumn(0).setMinWidth(0);
        Table.getColumnModel().getColumn(0).setMaxWidth(0);
        Table.getColumnModel().getColumn(0).setWidth(0);
        
        Renderer.setCustomComponent(3,"CheckBox");
        Renderer.setCustomComponent(4,"CheckBox");
        Table.getColumnModel().getColumn(3).setCellRenderer(Renderer);
        Table.getColumnModel().getColumn(4).setCellRenderer(Renderer);
    }

private void GenerateGrid()
{
   HashMap List=new HashMap();
   
   FormatGrid();
   
   List=clsSystemColumn.getList(" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+" AND MODULE_ID="+SelModuleID+" ORDER BY D_COM_SYSTEM_COLUMNS.ORDER");
   
   for(int i=1;i<=List.size();i++)
   {
     clsSystemColumn ObjColumn=(clsSystemColumn)List.get(Integer.toString(i));
     Object[] rowData=new Object[6];
     rowData[0]=Integer.toString((int)ObjColumn.getAttribute("SR_NO").getVal());
     rowData[1]=Integer.toString((int)ObjColumn.getAttribute("ORDER").getVal());
     rowData[2]=(String)ObjColumn.getAttribute("CAPTION").getObj();
     rowData[3]=Boolean.valueOf(ObjColumn.getAttribute("READONLY").getBool());
     rowData[4]=Boolean.valueOf(ObjColumn.getAttribute("HIDDEN").getBool());
     rowData[5]=(String)ObjColumn.getAttribute("VARIABLE").getObj();
     
     DataModel.addRow(rowData);
   }
}


}
