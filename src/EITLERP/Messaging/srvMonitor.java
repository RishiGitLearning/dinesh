/*
 * srvMonitor.java
 *
 * Created on February 4, 2005, 3:08 PM
 */

package EITLERP.Messaging;

/**
 *
 * @author  root
 */
import javax.swing.*;
import java.awt.*;
import EITLERP.*;
import java.net.*;
import java.util.*;

public class srvMonitor extends javax.swing.JApplet {
    
    private EITLTableModel DataModel=new EITLTableModel();
    private MessageServer ObjServer;
        
    /** Initializes the applet srvMonitor */
    public void init() {
        ObjServer=new MessageServer();
        ObjServer.startService();
        
        setSize(470,355);
        initComponents();
        startThread();
        
        data.Execute("DELETE FROM D_COM_MSG_USERS");
        
        EITLERPGLOBAL.ObjClient=new MessageClient();
        EITLERPGLOBAL.ObjClient.Port=5000;
        EITLERPGLOBAL.ObjClient.ServerIP=EITLERPGLOBAL.MsgServerIP;
        EITLERPGLOBAL.ObjClient.Connect(); //Auto connect

        
        EITLERPGLOBAL.gLoginID="EITLERP Server";
        
        
        //Give server our introduction
        EITLERPGLOBAL.ObjClient.sendMessage("##USER.INFO##       "+EITLERPGLOBAL.padRight(20, "Server"," ")+EITLERPGLOBAL.padRight(20, "System"," "));
        
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        cmdSend = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        
        getContentPane().setLayout(null);
        
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        
        Table.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
        ));
        jScrollPane1.setViewportView(Table);
        
        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(8, 68, 454, 218);
        
        cmdSend.setText("Send Message");
        cmdSend.setNextFocusableComponent(Table);
        cmdSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSendActionPerformed(evt);
            }
        });
        
        getContentPane().add(cmdSend);
        cmdSend.setBounds(309, 302, 153, 25);
        
        jPanel1.setLayout(null);
        
        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setText("SERVER MONITOR");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(8, 7, 164, 15);
        
        getContentPane().add(jPanel1);
        jPanel1.setBounds(1, 3, 485, 28);
        
        jLabel2.setText("Clients Connected");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(11, 42, 165, 15);
        
    }//GEN-END:initComponents
        
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked
    
    private void cmdSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSendActionPerformed
        // TODO add your handling code here:
        AppletFrame aFrame= new AppletFrame("Send Message");
        aFrame.startAppletEx("EITLERP.Messaging.frmClient", "Send Message");
    }//GEN-LAST:event_cmdSendActionPerformed
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton cmdSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    private void FormatGrid() {
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
        
        DataModel.addColumn("Connection ID");
        DataModel.addColumn("IP");
        DataModel.addColumn("User Name");
        DataModel.addColumn("Department");
        
        DataModel.TableReadOnly(true);
    }
    
    
    private void startThread() {
        new Thread() {
            public void run() {
                
                while(true) {
                    refreshMonitor();
                    try {
                        Thread.sleep(1000);
                    }
                    catch(Exception e){}
                    
                }
                
            };
        }.start();
        
    }
    
    
    private void refreshMonitor() {
        
        try {
            int CurRow=Table.getSelectedRow();
            
            FormatGrid();
            
            Iterator iclients=EITLERPGLOBAL.Clients.keySet().iterator();
            
            while(iclients.hasNext())
            {
              String key=(String)iclients.next();
              
                    Client ObjInfo=(Client)EITLERPGLOBAL.Clients.get(key);
                    
                        Object[] rowData=new Object[4];
                        rowData[0]=key;
                        rowData[1]=ObjInfo.ClientIP;
                        rowData[2]=ObjInfo.UserName;
                        rowData[3]=ObjInfo.Dept;
                        DataModel.addRow(rowData);
              
            }
            
            
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
        
    
}
