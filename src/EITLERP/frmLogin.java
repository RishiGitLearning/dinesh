/**
 * frmLogin.java
 *
 * Created on April 6, 2004, 11:10 AM
 *
 */
package EITLERP;                      

import javax.swing.*;  
import java.util.*; 
import EITLERP.Messaging.*;
import java.sql.ResultSet; 
import java.text.*; 
import temp.MBMdecode;
 
/**
 *
 *
 * @author NITIN PITHVA
 *
 */
public class frmLogin extends javax.swing.JApplet {

    private int SelCompanyID = 0;
    private EITLComboModel cmbCompanyModel;
    private EITLComboModel cmbFromModel;
    private DateFormat dateFormatter;
//APP SERVER 227 DB SERVER 223

    /**
     * Initialize the <i>Login</i> Form
     *
     * @see This is sample
     *
     */
    public void init() {
//        try
//        {
//        HashMap parameters = new HashMap();
//        byte[] bytes = JasperRunManager.runReportToPdf("",parameters,data.getConn());
//        }-
//        catch(Exception e)
//        {
//            

//        }
        //System.setProperty("javaplugin.maxHeapSize", "400m");
//        Production_Date_Updation pd=new Production_Date_Updation();
        cmdLogin.setDefaultCapable(true);
        //===Setup initial Database connection===//
        try {
            //EITLERPGLOBAL.DatabaseURL=getParameter("DatabaseURL");

            EITLERPGLOBAL.MsgServerIP = getParameter("MsgServerIP");
            EITLERPGLOBAL.SMTPHostIP = getParameter("SMTPHostIP");
            EITLERPGLOBAL.HostIP = getParameter("HostIP");

            //EITLERPGLOBAL.HostIP="200.0.0.227:8080/SDMLERP";
            EITLERPGLOBAL.HostIP = "200.0.0.227:8080/SDMLERP";
            EITLERPGLOBAL.SMTPHostIP = "baroda.dineshmills.com";

        } catch (Exception e) {
        }
        
        //=================================//
        
        GenerateCombo();

        cmbCompany.requestFocus();
        SelCompanyID = EITLERPGLOBAL.getComboCode(cmbCompany);
        GenerateYearCombo();
        int CurFinYear = EITLERPGLOBAL.getCurrentFinYear();
        EITLERPGLOBAL.setComboIndex(cmbFromYear, CurFinYear);
        DateFormat dateFormatter = DateFormat.getDateInstance(DateFormat.FULL, new Locale("en_US"));
        lblCurrentDate.setText(dateFormatter.format(new Date()));
        try {
            ResultSet rsTmp = data.getResult("SELECT USER() FROM DUAL");
            rsTmp.first();
            String str = rsTmp.getString(1);
            String str_split[] = str.split("@");

            if (str_split[1].equalsIgnoreCase("200.0.0.100") || str_split[1].equalsIgnoreCase("10.8.0.4")) {
                txtUser.setText("rishineekhra");
                txtPassword.setText(new String(MBMdecode.MBMde(data.getStringValueFromDB("SELECT PASSWORD FROM D_COM_USER_MASTER WHERE LOGIN_ID='rishineekhra'"))));
            }
            if (str_split[1].equalsIgnoreCase("200.0.0.108")) {
                txtUser.setText("drp");
                txtPassword.setText(new String(MBMdecode.MBMde(data.getStringValueFromDB("SELECT PASSWORD FROM D_COM_USER_MASTER WHERE LOGIN_ID='drp'"))));
            }
            if (str_split[1].equalsIgnoreCase("200.0.0.104")) {
                txtUser.setText("apathak");
                txtPassword.setText(new String(MBMdecode.MBMde(data.getStringValueFromDB("SELECT PASSWORD FROM D_COM_USER_MASTER WHERE LOGIN_ID='apathak'"))));
            }
            if (str_split[1].equalsIgnoreCase("200.0.0.14")) {
                txtUser.setText("rakeshdalal");
                txtPassword.setText(new String(MBMdecode.MBMde(data.getStringValueFromDB("SELECT PASSWORD FROM D_COM_USER_MASTER WHERE LOGIN_ID='rakeshdalal'"))));
            }
        } catch (Exception e) {
        }
        setSize(400, 300);
    }

    /**
     * Creates new form frmLogin
     */
    public frmLogin() {
        System.gc();
        initComponents();

        //Chaning Look and Feel
        if (GUIManager.isAvailableLookAndFeel(GUIManager.Windows)) {
            GUIManager.SetLookFeel(GUIManager.Windows);
            GUIManager.UpdateComponents(this);
        }

        int DefaultComp = 2;

        //Create new objects
        cmbCompanyModel = new EITLComboModel();
        cmbFromModel = new EITLComboModel();
        cmbCompany.requestFocus();
        SelCompanyID = EITLERPGLOBAL.getComboCode(cmbCompany);
        GenerateYearCombo();

        int CurFinYear = EITLERPGLOBAL.getCurrentFinYear();
        EITLERPGLOBAL.setComboIndex(cmbFromYear, CurFinYear);
        DateFormat dateFormatter = DateFormat.getDateInstance(DateFormat.FULL, new Locale("en_US"));
        lblCurrentDate.setText(dateFormatter.format(new Date()));
        //callTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        cmbCompany = new javax.swing.JComboBox();
        lblSelectCompany = new javax.swing.JLabel();
        cmdLogin = new javax.swing.JButton();
        PanelYearInfo = new javax.swing.JPanel();
        lblFinancialYear = new javax.swing.JLabel();
        lblFromYear = new javax.swing.JLabel();
        cmbFromYear = new javax.swing.JComboBox();
        lblToYear = new javax.swing.JLabel();
        txtToYear = new javax.swing.JTextField();
        PanelUserInfo = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        lblUserInfo = new javax.swing.JLabel();
        lblUpdationDate = new javax.swing.JLabel();
        lblCurrentDate = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        MainPanel.setBackground(new java.awt.Color(174, 208, 253));
        MainPanel.setAutoscrolls(true);
        MainPanel.setFocusCycleRoot(true);
        MainPanel.setLayout(null);

        cmbCompany.setBackground(new java.awt.Color(174, 208, 253));
        cmbCompany.setToolTipText("");
        cmbCompany.setNextFocusableComponent(cmbFromYear);
        cmbCompany.setOpaque(false);
        cmbCompany.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCompanyItemStateChanged(evt);
            }
        });
        cmbCompany.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbCompanyFocusGained(evt);
            }
        });
        MainPanel.add(cmbCompany);
        cmbCompany.setBounds(70, 10, 304, 20);

        lblSelectCompany.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblSelectCompany.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSelectCompany.setText("Select :");
        MainPanel.add(lblSelectCompany);
        lblSelectCompany.setBounds(6, 14, 54, 14);

        cmdLogin.setText("Login");
        cmdLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLoginActionPerformed(evt);
            }
        });
        MainPanel.add(cmdLogin);
        cmdLogin.setBounds(270, 240, 110, 25);

        PanelYearInfo.setBackground(new java.awt.Color(176, 176, 196));
        PanelYearInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        PanelYearInfo.setOpaque(false);
        PanelYearInfo.setLayout(null);

        lblFinancialYear.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblFinancialYear.setText("Financial Year :");
        PanelYearInfo.add(lblFinancialYear);
        lblFinancialYear.setBounds(6, 8, 100, 14);

        lblFromYear.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblFromYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromYear.setText("From :");
        PanelYearInfo.add(lblFromYear);
        lblFromYear.setBounds(12, 42, 38, 14);

        cmbFromYear.setBackground(new java.awt.Color(174, 208, 253));
        cmbFromYear.setToolTipText("");
        cmbFromYear.setNextFocusableComponent(txtUser);
        cmbFromYear.setOpaque(false);
        cmbFromYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFromYearItemStateChanged(evt);
            }
        });
        PanelYearInfo.add(cmbFromYear);
        cmbFromYear.setBounds(58, 38, 102, 21);

        lblToYear.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblToYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToYear.setText("To :");
        PanelYearInfo.add(lblToYear);
        lblToYear.setBounds(184, 42, 24, 14);

        txtToYear.setEditable(false);
        txtToYear.setOpaque(false);
        PanelYearInfo.add(txtToYear);
        txtToYear.setBounds(216, 38, 102, 20);

        MainPanel.add(PanelYearInfo);
        PanelYearInfo.setBounds(7, 50, 374, 78);

        PanelUserInfo.setBackground(new java.awt.Color(176, 176, 196));
        PanelUserInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        PanelUserInfo.setOpaque(false);
        PanelUserInfo.setLayout(null);

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("User Name :");
        PanelUserInfo.add(jLabel4);
        jLabel4.setBounds(9, 42, 80, 14);

        txtUser.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txtUser.setToolTipText("");
        txtUser.setNextFocusableComponent(txtPassword);
        txtUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserFocusLost(evt);
            }
        });
        PanelUserInfo.add(txtUser);
        txtUser.setBounds(92, 40, 140, 18);

        txtPassword.setToolTipText("");
        txtPassword.setNextFocusableComponent(cmdLogin);
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });
        PanelUserInfo.add(txtPassword);
        txtPassword.setBounds(93, 65, 140, 19);

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Password :");
        PanelUserInfo.add(jLabel3);
        jLabel3.setBounds(9, 67, 80, 14);

        lblUserInfo.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblUserInfo.setText("User Information :");
        PanelUserInfo.add(lblUserInfo);
        lblUserInfo.setBounds(6, 8, 124, 14);

        MainPanel.add(PanelUserInfo);
        PanelUserInfo.setBounds(10, 140, 374, 100);

        lblUpdationDate.setFont(new java.awt.Font("Dialog", 1, 8)); // NOI18N
        lblUpdationDate.setText("Last Update :  21 Feb 2020 -- Version 1");
        MainPanel.add(lblUpdationDate);
        lblUpdationDate.setBounds(10, 282, 290, 12);

        lblCurrentDate.setText("Current Date : 1 September 2009 ");
        lblCurrentDate.setToolTipText("");
        MainPanel.add(lblCurrentDate);
        lblCurrentDate.setBounds(11, 240, 240, 17);

        jLabel1.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        MainPanel.add(jLabel1);
        jLabel1.setBounds(10, 265, 460, 0);
        jLabel1.getAccessibleContext().setAccessibleName("Wishing you Very Happy Diwali and Prosperous New Year ");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 102));
        jLabel2.setText("KINDLY CHECK FINANCIAL YEAR BEFORE LOGIN");
        MainPanel.add(jLabel2);
        jLabel2.setBounds(10, 30, 390, 17);

        getContentPane().add(MainPanel);
        MainPanel.setBounds(0, 0, 412, 298);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!Validate()) {
                return;
            }
            Login();
        }
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void cmbCompanyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbCompanyFocusGained
        // TODO add your handling code here:
        SelCompanyID = EITLERPGLOBAL.getComboCode(cmbCompany);
        GenerateYearCombo();
        int CurFinYear = EITLERPGLOBAL.getCurrentFinYear();
        EITLERPGLOBAL.setComboIndex(cmbFromYear, CurFinYear);
    }//GEN-LAST:event_cmbCompanyFocusGained

    private void cmbFromYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFromYearItemStateChanged
        // TODO add your handling code here:
        try {
            int ToYear = Integer.parseInt((String) cmbFromYear.getSelectedItem()) + 1;
            txtToYear.setText(Integer.toString(ToYear));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmbFromYearItemStateChanged

    private void cmbCompanyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCompanyItemStateChanged
        // TODO add your handling code here:
        SelCompanyID = EITLERPGLOBAL.getComboCode(cmbCompany);
        EITLERPGLOBAL.gCompanyID = SelCompanyID;
        GenerateYearCombo();

        int CurFinYear = EITLERPGLOBAL.getCurrentFinYear();
        EITLERPGLOBAL.setComboIndex(cmbFromYear, CurFinYear);
    }//GEN-LAST:event_cmbCompanyItemStateChanged

    private void cmdLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLoginActionPerformed
        // Add your handling code here:
        if (!Validate()) {
            return;
        }
        Login();
    }//GEN-LAST:event_cmdLoginActionPerformed

    private void txtUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserFocusLost
        // TODO add your handling code here:
        try {
            ResultSet rsTmp = data.getResult("SELECT USER() FROM DUAL");
            rsTmp.first();
            String str = rsTmp.getString(1);
            String str_split[] = str.split("@");

            if (str_split[1].equalsIgnoreCase("10.8.0.4") || str_split[1].equalsIgnoreCase("200.0.0.100") || str_split[1].equalsIgnoreCase("200.0.0.103") || str_split[1].equalsIgnoreCase("200.0.0.108") || str_split[1].equalsIgnoreCase("200.0.0.104")) {
                txtPassword.setText(new String(MBMdecode.MBMde(data.getStringValueFromDB("SELECT PASSWORD FROM D_COM_USER_MASTER WHERE LOGIN_ID='" + txtUser.getText() + "'"))));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtUserFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel PanelUserInfo;
    private javax.swing.JPanel PanelYearInfo;
    private javax.swing.JComboBox cmbCompany;
    private javax.swing.JComboBox cmbFromYear;
    private javax.swing.JButton cmdLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblCurrentDate;
    private javax.swing.JLabel lblFinancialYear;
    private javax.swing.JLabel lblFromYear;
    private javax.swing.JLabel lblSelectCompany;
    private javax.swing.JLabel lblToYear;
    private javax.swing.JLabel lblUpdationDate;
    private javax.swing.JLabel lblUserInfo;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtToYear;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    //Generate the Company Combo
    private void GenerateCombo() {
        HashMap List = new HashMap();
        clsCompany ObjCompany;

        cmbCompany.setModel(cmbCompanyModel);
        cmbCompany.removeAllItems();  //Clearing previous contents

        List = clsCompany.getList("");

        for (int i = 1; i <= List.size(); i++) {
            ObjCompany = (clsCompany) List.get(Integer.toString(i));
            ComboData aData = new ComboData();
            aData.Text = (String) ObjCompany.getAttribute("COMPANY_NAME").getObj();
            aData.Code = (long) ObjCompany.getAttribute("COMPANY_ID").getVal();
            cmbCompanyModel.addElement(aData);
        }
    }

    private void GenerateYearCombo() {
        HashMap List = new HashMap();

        cmbFromYear.setModel(cmbFromModel);
        cmbFromYear.removeAllItems();

        List = clsFinYear.getList(" WHERE COMPANY_ID=" + SelCompanyID);

        for (int i = 1; i <= List.size(); i++) {
            clsFinYear ObjYear = (clsFinYear) List.get(Integer.toString(i));

            ComboData cmbData = new ComboData();
            cmbData.Text = Integer.toString((int) ObjYear.getAttribute("YEAR_FROM").getVal());
            cmbData.Code = (int) ObjYear.getAttribute("YEAR_FROM").getVal();
            cmbData.strCode = Integer.toString((int) ObjYear.getAttribute("YEAR_FROM").getVal());
            cmbFromModel.addElement(cmbData);
        }
    }

    private void Login() {
        //Retrieve the Company code from the combo box
        long nCompanyID = cmbCompanyModel.getCode((long) cmbCompany.getSelectedIndex());
        int tmpFromYear = Integer.parseInt((String) cmbFromYear.getSelectedItem());
        String tmpdbURL = clsFinYear.getDBURL((int) nCompanyID, tmpFromYear);

        //Set Global Variables
        EITLERPGLOBAL.gCompanyID = (int) nCompanyID;
        EITLERPGLOBAL.gLoginID = txtUser.getText();
        EITLERPGLOBAL.gPassword = txtPassword.getText();

        //String Path=getCodeBase().toString()+"EITLERP/";
        //Following is for Windows
        //String Path=getCodeBase().toString()+"EITLERP/";
        //EITLERPGLOBAL.AppPath=Path.substring(6);
        //For Linux
        String Path = getCodeBase().toString();

        EITLERPGLOBAL.CodeBasePath = Path;

        //Load Images - For Windows
        //EITLERPGLOBAL.LoadImages(Path.substring(6)+"Images/");
        EITLERPGLOBAL.LoadImages(Path + "Images/");

        //Loader ObjLoader=new Loader(this,"EITLERP.frmMenu",true);
        //Financial Year settings
        clsFinYear ObjTmp = new clsFinYear();
        int FromYear = Integer.parseInt((String) cmbFromYear.getSelectedItem());
        int ToYear = Integer.parseInt(txtToYear.getText());

        clsFinYear ObjYear = (clsFinYear) ObjTmp.getObject(EITLERPGLOBAL.gCompanyID, FromYear, ToYear);

        EITLERPGLOBAL.FinYearFrom = FromYear;
        EITLERPGLOBAL.FinYearTo = ToYear;
        EITLERPGLOBAL.FinFromDateDB = Integer.toString(FromYear) + "-04-01";
        EITLERPGLOBAL.FinToDateDB = Integer.toString(ToYear + 1) + "-03-31";
        //EITLERPGLOBAL.FinToDateDB = Integer.toString(ToYear) + "-03-31";
        EITLERPGLOBAL.FinFromDate = "01/04/" + Integer.toString(FromYear);
        EITLERPGLOBAL.FinToDate = "31/03/" + Integer.toString(ToYear);

        String OpenStatus = (String) ObjYear.getAttribute("OPEN_STATUS").getObj();
        EITLERPGLOBAL.DBName = ObjYear.getAttribute("DB_NAME").getString();

        if (OpenStatus.equals("O")) {// O - Year is open/ C - Year is closed
            EITLERPGLOBAL.YearIsOpen = true;
        } else {
            EITLERPGLOBAL.YearIsOpen = false;
        }

        //Database URL
        EITLERPGLOBAL.SystemDBURL = EITLERPGLOBAL.DatabaseURL;
        EITLERPGLOBAL.DatabaseURL = clsFinYear.getDBURL(EITLERPGLOBAL.gCompanyID, FromYear);

        System.out.println("Company ID = " + Integer.toString(EITLERPGLOBAL.gCompanyID) + " Company URL = " + EITLERPGLOBAL.DatabaseURL);

        EITLERPGLOBAL.loginContext = this.getAppletContext();

        EITLERPGLOBAL.gUserID = clsUser.getFromLoginID((int) nCompanyID, txtUser.getText());
        frmPendingApprovals.defUserID=clsUser.getFromLoginID((int) nCompanyID, txtUser.getText());        
        EITLERPGLOBAL.gAuthorityUserID = EITLERPGLOBAL.gUserID;
        EITLERPGLOBAL.gNewUserID = EITLERPGLOBAL.gUserID;

        //Fetch the Department of looged in user.
        EITLERPGLOBAL.gUserDeptID = clsUser.getDeptID(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID);

        if (EITLERPGLOBAL.IsConnected) {
            //Disconnect from the server
            EITLERPGLOBAL.ObjClient.DisConnect();

            //Wait for some time so that server can discard old connection
            try {
                for (long i = 1; i <= 200000000; i++) {
                    int a = 0;
                }
            } catch (Exception e) {
            }
        }

        //Connecting to Message Server
        EITLERPGLOBAL.ObjClient = new MessageClient();
        EITLERPGLOBAL.ObjClient.Port = 5000;
        EITLERPGLOBAL.ObjClient.ServerIP = EITLERPGLOBAL.MsgServerIP;
        EITLERPGLOBAL.ObjClient.Connect(); //Auto connect

        String MsgLoginID = txtUser.getText().trim();

        EITLERPGLOBAL.gLoginID = txtUser.getText();

        String DeptName = clsDepartment.getDeptName(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserDeptID);

        //Give server our introduction
        EITLERPGLOBAL.ObjClient.sendMessage("##USER.INFO##       " + EITLERPGLOBAL.padRight(20, txtUser.getText().trim(), " ") + EITLERPGLOBAL.padRight(20, DeptName, " "));

        //Now set the flag to Connected
        EITLERPGLOBAL.IsConnected = true;

        //Open up single global connection
        data.OpenGlobalConnection();
        if (clsUser.hasPasswordExpired(EITLERPGLOBAL.gUserID)) {
            JOptionPane.showMessageDialog(null, "Your password has been expired. Click OK to bring change password dialog box");
            frmChangePassword objDialog = new frmChangePassword();
            objDialog.ShowDialog();

            if (objDialog.cancelled) {
                JOptionPane.showMessageDialog(null, "Your password is expired. It must be changed before logging into system");
            } else {
                if (EITLERPGLOBAL.LoggedIn) {
                    String Title = txtUser.getText().trim().toUpperCase() + " logged in " + (String) cmbCompany.getSelectedItem() + " [" + Integer.toString(FromYear) + "-" + Integer.toString(ToYear) + "] @ " + EITLERPGLOBAL.getCurrentTime();
                    AppletFrame.startApplet("EITLERP.frmMenu", Title);
                }
            }
        } else {
            if (EITLERPGLOBAL.LoggedIn) {
                String Title = txtUser.getText().trim().toUpperCase() + " logged in " + (String) cmbCompany.getSelectedItem() + " [" + Integer.toString(FromYear) + "-" + Integer.toString(ToYear) + "] @ " + EITLERPGLOBAL.getCurrentTime();
                AppletFrame.startApplet("EITLERP.frmMenu", Title);
            }
        }
    }

    private boolean Validate() {
        if (txtUser.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter your user id");
            txtUser.requestFocus();
            return false;
        }

        if (txtPassword.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter your passwod");
            txtPassword.requestFocus();
            return false;
        }

        //Retrieve the Company code from the combo box
        long nCompanyID = cmbCompanyModel.getCode((long) cmbCompany.getSelectedIndex());
        int tmpFromYear = Integer.parseInt((String) cmbFromYear.getSelectedItem());

        String tmpdbURL = clsFinYear.getDBURL((int) nCompanyID, tmpFromYear);

        //Validation Part
        if (clsUser.ValidateUser(nCompanyID, txtUser.getText(), txtPassword.getText(), tmpdbURL)) {
            //Continue execution
        } else {
            JOptionPane.showMessageDialog(null, "Invalid User name or password.\nPlease verify");
            return false;
        }

        if (clsUser.IsUserLocked(nCompanyID, txtUser.getText(), txtPassword.getText(), tmpdbURL)) {
            //Continue execution
        } else {
            JOptionPane.showMessageDialog(null, "Your account has been Locked. \nPlease contanct to Administrator.");
            return false;
        }

        if (cmbFromYear.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Please select the financial year");
            return false;
        }
        return true;
    }

}
