/*
 * frmExp_Despatch.java
 *
 * Created on Feburary 07 , 2015, 11:18 AM
 */

package EITLERP.Production.Felt_Expected_Despatch;

/**
 *

 *@AUTHOR RISHI 07/02/2015
 *
 */

import EITLERP.*;
import java.sql.*;
import javax.swing.*;
import EITLERP.Finance.UtilFunctions;
import java.util.*;

public class frmExp_Despatch extends javax.swing.JApplet {
    
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLTableModel DataModel2 =new EITLTableModel();
    private EITLComboModel cmbInvoiceTypeModel;
    private EITLComboModel cmbPriorityModel;
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(1000,600);
        //txtFromDate.setVisible(false);
        //txtToDate.setVisible(false);
        //txtInvoiceNo.setVisible(false);
        initComponents();
        FormatGrid();
        FormatGrid2();
        
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        txtPieceNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblInvoiceNo = new javax.swing.JLabel();
        txtProductCode = new javax.swing.JTextField();
        cmdShowList = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        cmdClearAll = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table2 = new javax.swing.JTable();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("EXPECTED DESPATCH DATE ENTRY FORM");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 950, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Party Code :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 50, 90, 15);

        txtPartyCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartyCodeActionPerformed(evt);
            }
        });

        getContentPane().add(txtPartyCode);
        txtPartyCode.setBounds(110, 50, 80, 19);

        getContentPane().add(txtPieceNo);
        txtPieceNo.setBounds(270, 50, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Piece No :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 50, 60, 15);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 403));
        jScrollPane1.setAutoscrolls(true);
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 80, 950, 280);

        lblInvoiceNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInvoiceNo.setText("Product Code :");
        getContentPane().add(lblInvoiceNo);
        lblInvoiceNo.setBounds(380, 50, 90, 15);

        getContentPane().add(txtProductCode);
        txtProductCode.setBounds(480, 50, 100, 19);

        cmdShowList.setText("Show List");
        cmdShowList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowListActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShowList);
        cmdShowList.setBounds(580, 50, 110, 25);

        cmdSave.setText("Save");
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSave);
        cmdSave.setBounds(610, 370, 90, 25);

        lblStatus.setForeground(new java.awt.Color(51, 153, 255));
        lblStatus.setText("Status");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(10, 370, 280, 15);

        cmdClearAll.setText("Clear All");
        cmdClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdClearAll);
        cmdClearAll.setBounds(700, 50, 87, 25);

        jLabel2.setText("Filter Criteria :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 30, 170, 15);

        Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(Table2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 410, 780, 80);

    }//GEN-END:initComponents

    private void txtPartyCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartyCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartyCodeActionPerformed

    private void cmdClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearAllActionPerformed
        txtPartyCode.setText("");
        txtPieceNo.setText("");
        txtProductCode.setText("");

    }//GEN-LAST:event_cmdClearAllActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
             new Thread() {
            public void run() {
                try {
                    for(int i=0;i<Table.getRowCount();i++) {
                        String PieceNo=DataModel.getValueByVariable("PIECE_NO", i);
                        String ind=DataModel.getValueByVariable("IND", i);
                        lblStatus.setText("Updating in Piece No. "+PieceNo);
                        String WvgDate=EITLERPGLOBAL.formatDateDB(DataModel.getValueByVariable("WVG_DATE", i));
                        String ExpDespDate=EITLERPGLOBAL.formatDateDB(DataModel.getValueByVariable("EXP_DESP_DATE", i));
                        data.Execute("UPDATE PRODUCTION.FELT_ORDER_MASTER SET EXP_DESP_DATE='"+ExpDespDate+"' WHERE PIECE_NO='"+PieceNo+"'");
                        
                        //data.Execute("INSERT INTO PRODUCTION.TMP_AGREED_DATE SELECT  '"+PieceNo+"', '"+RequestedDate+"','"+CommDate+"','"+AgreedDate+"','"+ind+"',NOW()");
                       // data.Execute("DELETE FROM PRODUCTION.TMP_AGREED_DATE WHERE AGD_IND = 0");
                        
                    }
                    lblStatus.setText("Ready");
                 //   cmdShowListActionPerformed(java.awt.event.ActionEvent evt);
                    show1();
                } catch(Exception e) {
                }
            };
        }.start();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdShowListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowListActionPerformed
       show1();
      
    }//GEN-LAST:event_cmdShowListActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JTable Table2;
    private javax.swing.JButton cmdClearAll;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdShowList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblInvoiceNo;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtPieceNo;
    private javax.swing.JTextField txtProductCode;
    // End of variables declaration//GEN-END:variables
    
    
    private void FormatGrid() {
        try {
            DataModel=new EITLTableModel();
            Table.removeAll();
            
            Table.setModel(DataModel);
         //   Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("SR."); //0 - Read Only
            DataModel.addColumn("PIECE_NO"); //1
            DataModel.addColumn("ORDER DATE"); //2
            DataModel.addColumn("PARTY"); //3
            DataModel.addColumn("NAME"); //4
            DataModel.addColumn("PRODUCT"); //4
            DataModel.addColumn("GROUP"); //4
            DataModel.addColumn("WVG_AGREED_DATE"); //5
            DataModel.addColumn("WVG_DATE"); //6
            DataModel.addColumn("EXP_DESPATCH_DATE"); //7
            DataModel.addColumn("IND"); //8
            
            
            DataModel.SetVariable(0,""); //0 - Read Only
            DataModel.SetVariable(1,"PIECE_NO"); //0 - Read Only
            DataModel.SetVariable(2,"ORDER_DATE"); //0 - Read Only
            DataModel.SetVariable(3,"PARTY_CD"); //0 - Read Only
            DataModel.SetVariable(4,"PARTY_NAME"); //0 - Read Only
            DataModel.SetVariable(5,"PRODUCT_CODE"); //0 - Read Only
            DataModel.SetVariable(6,"GRUP"); //0 - Read Only
            DataModel.SetVariable(7,"WVG_AGREED_DATE"); //0 - Read Only
            DataModel.SetVariable(8,"WVG_DATE"); //0 - Read Only
            DataModel.SetVariable(9,"EXP_DESP_DATE"); //0 - Read Only
            DataModel.SetVariable(10,"IND"); //0 - Read Only
            
            
            DataModel.TableReadOnly(false);
            DataModel.SetReadOnly(0);
            DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);
            DataModel.SetReadOnly(7);            
            DataModel.SetReadOnly(8);            
            DataModel.SetReadOnly(10);            
            
            Table.getColumnModel().getColumn(0).setMaxWidth(30);
            Table.getColumnModel().getColumn(1).setMaxWidth(70);
            Table.getColumnModel().getColumn(2).setMaxWidth(100);
            Table.getColumnModel().getColumn(3).setMaxWidth(70);
            Table.getColumnModel().getColumn(4).setMaxWidth(200);
            Table.getColumnModel().getColumn(5).setMaxWidth(70);
            Table.getColumnModel().getColumn(6).setMaxWidth(70);
            Table.getColumnModel().getColumn(7).setMaxWidth(100);
            Table.getColumnModel().getColumn(8).setMaxWidth(100);
            Table.getColumnModel().getColumn(9).setMaxWidth(110);
            Table.getColumnModel().getColumn(10).setMaxWidth(10);
        } catch(Exception e) {
            e.printStackTrace();
        }
 
    }
    
    
     private void FormatGrid2() {
        try {
            DataModel2=new EITLTableModel();
            Table2.removeAll();
            
            Table2.setModel(DataModel2);
         //   Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel2.addColumn("SR."); //0 - Read Only
            DataModel2.addColumn("YEAR"); //0 - Read Only
            DataModel2.addColumn("JAN"); //1
            DataModel2.addColumn("FEB"); //2
            DataModel2.addColumn("MAR"); //3
            DataModel2.addColumn("APR"); //4
            DataModel2.addColumn("MAY"); //4
            DataModel2.addColumn("JUN"); //4
            DataModel2.addColumn("JUL"); //5
            DataModel2.addColumn("AUG"); //6
            DataModel2.addColumn("SEP"); //7
            DataModel2.addColumn("OCT"); //8
            DataModel2.addColumn("NOV"); //8
            DataModel2.addColumn("DEC"); //8
 
            
            DataModel2.SetVariable(0,""); //0 - Read Only
            DataModel2.SetVariable(1,"YEAR"); //0 - Read Only
            DataModel2.SetVariable(2,"JAN"); //0 - Read Only
            DataModel2.SetVariable(3,"FEB"); //0 - Read Only
            DataModel2.SetVariable(4,"MAR"); //0 - Read Only
            DataModel2.SetVariable(5,"APR"); //0 - Read Only
            DataModel2.SetVariable(6,"MAY"); //0 - Read Only
            DataModel2.SetVariable(7,"JUN"); //0 - Read Only
            DataModel2.SetVariable(8,"JUL"); //0 - Read Only
            DataModel2.SetVariable(9,"AUG"); //0 - Read Only
            DataModel2.SetVariable(10,"SEP"); //0 - Read Only
            DataModel2.SetVariable(11,"OTB"); //0 - Read Only
            DataModel2.SetVariable(12,"OCT"); //0 - Read Only
            DataModel2.SetVariable(13,"DAC"); //0 - Read Only
            
            
            DataModel2.TableReadOnly(true);
              
            
           } catch(Exception e) {
            e.printStackTrace();
        }
 
    }
   
    public void show1()
    {
         new Thread() {            
            public void run() {
                try {
                  String strSQL="SELECT PIECE_NO,ORDER_DATE,PARTY_CD,PARTY_NAME,PRODUCT_CODE,GRUP,WVG_AGREED_DATE,WVG_DATE,EXP_DESP_DATE,0 AS IND FROM PRODUCTION.FELT_ORDER_MASTER,DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE =210010 AND PARTY_CD =PARTY_CODE AND  WVG_DATE !='0000-00-00' AND EXP_DESP_DATE='0000-00-00' AND PROD_IND_A='' AND PRIORITY NOT IN (6,7,8,9,10,12)";
                  // String strSQL="SELECT PIECE_NO,ORDER_DATE,PARTY_CD,PARTY_NAME,PRODUCT_CODE,GRUP,WVG_AGREED_DATE,WVG_DATE,EXP_DESP_DATE,0 AS IND FROM PRODUCTION.FELT_ORDER_MASTER,DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE =210010 AND PARTY_CD =PARTY_CODE AND  WVG_DATE !='0000-00-00'  AND PROD_IND_A='' ";
                
                  
                  strSQL+="";  
                 
                    if(!txtPieceNo.getText().trim().equals("")) {
                        strSQL+="AND PIECE_NO='"+txtPieceNo.getText().trim()+"' ";
                    }
                   
                    if(!txtProductCode.getText().trim().equals("")) {
                        strSQL+="AND PRODUCT_CODE ='"+txtProductCode.getText().trim()+"' ";
                    }
                    
                    if(!txtPartyCode.getText().trim().equals("")) {
                        strSQL+="AND PARTY_CD='"+txtPartyCode.getText().trim()+"' ";
                    }                                       
                    
                    strSQL+=" ORDER BY PIECE_NO ";
                    
                    lblStatus.setText("Fetching Records ... ");
                    System.out.println(strSQL);
                    ResultSet rsTmp=data.getResult(strSQL);
                    rsTmp.first();
                    
                    FormatGrid();
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {                                                        
                            Object[] rowData=new Object[14];
                            DataModel.addRow(rowData);                            
                            int NewRow=Table.getRowCount()-1;
                            lblStatus.setText("Generating Table "+NewRow);
                            DataModel.setValueByVariable("SR_NO",Integer.toString(NewRow+1), NewRow);
                            DataModel.setValueByVariable("PIECE_NO",UtilFunctions.getString(rsTmp,"PIECE_NO",""),NewRow);
                            DataModel.setValueByVariable("ORDER_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"ORDER_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("PARTY_CD",UtilFunctions.getString(rsTmp,"PARTY_CD",""),NewRow);
                            DataModel.setValueByVariable("PARTY_NAME",UtilFunctions.getString(rsTmp,"PARTY_NAME",""),NewRow);
                            DataModel.setValueByVariable("PRODUCT_CODE",UtilFunctions.getString(rsTmp,"PRODUCT_CODE",""),NewRow);
                            DataModel.setValueByVariable("GRUP",UtilFunctions.getString(rsTmp,"GRUP",""),NewRow);
                            DataModel.setValueByVariable("WVG_AGREED_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"WVG_AGREED_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("WVG_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"WVG_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("EXP_DESP_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"EXP_DESP_DATE","0000-00-00")),NewRow);                            
                            DataModel.setValueByVariable("IND",UtilFunctions.getString(rsTmp,"IND",""),NewRow);
                            rsTmp.next();
                        }
                    }
                    lblStatus.setText("Ready ");
                    
                    
                   String strSQL2="SELECT EXTRACT(YEAR FROM EXP_DESP_DATE) AS YEAR ,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =1 THEN 1 ELSE 0 END) AS JAN,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =2 THEN 1 ELSE 0 END) AS FEB,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =3 THEN 1 ELSE 0 END) AS MAR,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =4 THEN 1 ELSE 0 END) AS APR,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =5 THEN 1 ELSE 0 END) AS MAY,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =6 THEN 1 ELSE 0 END) AS JUN,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =7 THEN 1 ELSE 0 END) AS JUL,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =8 THEN 1 ELSE 0 END) AS AUG,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =9 THEN 1 ELSE 0 END) AS SEP,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =10 THEN 1 ELSE 0 END) AS OTB,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =11 THEN 1 ELSE 0 END) AS NOV,SUM(CASE WHEN EXTRACT(MONTH FROM EXP_DESP_DATE) =12 THEN 1 ELSE 0 END) AS DAC FROM PRODUCTION.FELT_ORDER_MASTER WHERE EXP_DESP_DATE > '2015-01-01' GROUP BY EXTRACT(YEAR FROM EXP_DESP_DATE)";
                   System.out.println(strSQL2);
                   ResultSet rsTmp2=data.getResult(strSQL2);
                   rsTmp2.first();
                    
                     FormatGrid2();
                    
                    if(rsTmp2.getRow()>0) {
                        while(!rsTmp2.isAfterLast()) {                                                        
                            Object[] rowData2=new Object[14];
                            DataModel2.addRow(rowData2);                            
                            int NewRow2=Table2.getRowCount()-1;
                            lblStatus.setText("Generating Table "+NewRow2);
                            DataModel2.setValueByVariable("SR_NO",Integer.toString(NewRow2+1), NewRow2);
                            DataModel2.setValueByVariable("YEAR",UtilFunctions.getString(rsTmp2,"YEAR",""),NewRow2);
                            DataModel2.setValueByVariable("JAN",UtilFunctions.getString(rsTmp2,"JAN",""),NewRow2);
                            DataModel2.setValueByVariable("FEB",UtilFunctions.getString(rsTmp2,"FEB",""),NewRow2);
                            DataModel2.setValueByVariable("MAR",UtilFunctions.getString(rsTmp2,"MAR",""),NewRow2);
                            DataModel2.setValueByVariable("APR",UtilFunctions.getString(rsTmp2,"APR",""),NewRow2);
                            DataModel2.setValueByVariable("MAY",UtilFunctions.getString(rsTmp2,"MAY",""),NewRow2);
                            DataModel2.setValueByVariable("JUN",UtilFunctions.getString(rsTmp2,"JUN",""),NewRow2);
                            DataModel2.setValueByVariable("JUL",UtilFunctions.getString(rsTmp2,"JUL",""),NewRow2);
                            DataModel2.setValueByVariable("AUG",UtilFunctions.getString(rsTmp2,"AUG",""),NewRow2);
                            DataModel2.setValueByVariable("SEP",UtilFunctions.getString(rsTmp2,"SEP",""),NewRow2);
                            DataModel2.setValueByVariable("OTB",UtilFunctions.getString(rsTmp2,"OTB",""),NewRow2);
                            DataModel2.setValueByVariable("NOV",UtilFunctions.getString(rsTmp2,"NOV",""),NewRow2);
                            DataModel2.setValueByVariable("DAC",UtilFunctions.getString(rsTmp2,"DAC",""),NewRow2);
                    
                            
                            rsTmp2.next();
                        }
                    }
                    
                    
                } catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start(); 
        
    }
    
    
}
