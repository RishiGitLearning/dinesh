/*
 * frmReqCommDateEntry.java
 *
 * Created on October , 2014, 11:18 AM
 */

package EITLERP.Production.FeltOrderEntry;

/**
 *
 * @author  ASHUTOSH
 *@AUTHOR RISHI 03/02/2015
 *
 */

import EITLERP.*;
import java.sql.*;
import javax.swing.*;
import EITLERP.Finance.UtilFunctions;
import java.util.*;
import EITLERP.Production.ReportUI.*;
import java.io.File;

public class frmReqCommDateEntry extends javax.swing.JApplet {
   
    private clsExcelExporter exp = new clsExcelExporter();  
    private EITLTableModel DataModel=new EITLTableModel();
    private EITLTableModel DataModel2=new EITLTableModel();
    private EITLComboModel cmbMonthModel;
    private EITLComboModel cmbYearModel;
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(1000,650);
        //txtFromDate.setVisible(false);
        //txtToDate.setVisible(false);
        //txtInvoiceNo.setVisible(false);
        initComponents();
        GenerateMonthCombo();
        GenerateYearCombo();
        FormatGrid();
        FormatGrid2();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPartyCode = new javax.swing.JTextField();
        txtPieceNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblInvoiceNo = new javax.swing.JLabel();
        txtProductCode = new javax.swing.JTextField();
        cmdShowList = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        MONTH = new javax.swing.JLabel();
        cmbMonthType = new javax.swing.JComboBox();
        cmdClearAll = new javax.swing.JButton();
        ExportToExcel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table2 = new javax.swing.JTable();
        CMDSHOWDATA = new javax.swing.JButton();
        cmbYear = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cmdReqdateSearch = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("AGREED WEAVING DATE ENTRY FORM");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 950, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Party Code :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 70, 90, 15);

        jLabel2.setText("FILTER CRITERIA :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 180, 15);

        txtPartyCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartyCodeActionPerformed(evt);
            }
        });

        getContentPane().add(txtPartyCode);
        txtPartyCode.setBounds(110, 70, 100, 19);

        getContentPane().add(txtPieceNo);
        txtPieceNo.setBounds(590, 70, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Piece No :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(520, 70, 60, 15);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(900, 403));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableKeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 100, 950, 240);

        lblInvoiceNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInvoiceNo.setText("Product Code :");
        getContentPane().add(lblInvoiceNo);
        lblInvoiceNo.setBounds(230, 70, 90, 15);

        getContentPane().add(txtProductCode);
        txtProductCode.setBounds(330, 70, 160, 19);

        cmdShowList.setText("Show List");
        cmdShowList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdShowListActionPerformed(evt);
            }
        });

        getContentPane().add(cmdShowList);
        cmdShowList.setBounds(700, 70, 110, 25);

        cmdSave.setText("Save");
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        getContentPane().add(cmdSave);
        cmdSave.setBounds(850, 350, 90, 25);

        lblStatus.setForeground(new java.awt.Color(51, 153, 255));
        lblStatus.setText("Status");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(30, 350, 280, 15);

        MONTH.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MONTH.setText("MONTH  :");
        getContentPane().add(MONTH);
        MONTH.setBounds(20, 410, 70, 15);

        getContentPane().add(cmbMonthType);
        cmbMonthType.setBounds(100, 410, 180, 20);

        cmdClearAll.setText("Clear All");
        cmdClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearAllActionPerformed(evt);
            }
        });

        getContentPane().add(cmdClearAll);
        cmdClearAll.setBounds(820, 70, 87, 25);

        ExportToExcel.setText("Export To Excel");
        ExportToExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportToExcelActionPerformed(evt);
            }
        });

        getContentPane().add(ExportToExcel);
        ExportToExcel.setBounds(700, 350, 140, 25);

        Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(Table2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 450, 330, 120);

        CMDSHOWDATA.setText("Show Monthly Counter");
        CMDSHOWDATA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CMDSHOWDATAActionPerformed(evt);
            }
        });

        getContentPane().add(CMDSHOWDATA);
        CMDSHOWDATA.setBounds(260, 380, 200, 25);

        cmbYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbYearItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbYear);
        cmbYear.setBounds(100, 380, 130, 24);

        jLabel4.setText("YEAR:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(25, 380, 60, 15);

        cmdReqdateSearch.setText("Requested Date Search ");
        cmdReqdateSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdReqdateSearchActionPerformed(evt);
            }
        });

        getContentPane().add(cmdReqdateSearch);
        cmdReqdateSearch.setBounds(470, 350, 210, 25);

    }//GEN-END:initComponents

    private void cmdReqdateSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdReqdateSearchActionPerformed
        showreq();
    }//GEN-LAST:event_cmdReqdateSearchActionPerformed

    private void cmbYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbYearItemStateChanged
              lblStatus.setText((String)cmbYear.getSelectedItem());
       //        int AmdReason =  cmbAmendReason.getSelectedIndex();
            //   txtamendreasoncode.setText( Integer.toString(cmbAmendReason.getSelectedIndex()));
           //    txtamendreasonname.setText((String)cmbAmendReason.getSelectedItem());
      
    }//GEN-LAST:event_cmbYearItemStateChanged

    private void CMDSHOWDATAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CMDSHOWDATAActionPerformed
           show1();        // TODO add your handling code here:
    }//GEN-LAST:event_CMDSHOWDATAActionPerformed

    private void ExportToExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportToExcelActionPerformed
          try{
             
                    exp.fillData(Table,new File("/root/Desktop/WeavingAgreedDate.xls"));
                    exp.fillData(Table,new File("D://WeavingAgreedDate.xls"));
                    JOptionPane.showMessageDialog(null, "Data saved at " +
                            "'/root/Desktop/WeavingAgreedDate.xls' successfully in Linux PC or 'D://WeavingAgreedDate.xls' successfully in Windows PC    ", "Message",
                            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }     
    }//GEN-LAST:event_ExportToExcelActionPerformed

    private void txtPartyCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartyCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartyCodeActionPerformed

    private void cmdClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearAllActionPerformed
        txtPartyCode.setText("");
        txtPieceNo.setText("");
        txtProductCode.setText("");
        EITLERPGLOBAL.setComboIndex(cmbMonthType,0);        
    }//GEN-LAST:event_cmdClearAllActionPerformed

    private void TableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyReleased
              String str1=(String)Table.getValueAt(Table.getSelectedRow(),7);
        String str2=(String)Table.getValueAt(Table.getSelectedRow(),8);
        System.out.println(str1);
        System.out.println(str2);
        
        if(str1.equals("") || str2.equals("")){
            Table.setValueAt("", Table.getSelectedRow(), 9);
            Table.setValueAt("1", Table.getSelectedRow(), 10);
            
        }        
        
       
        if(!str1.equals("") && !str2.equals("")){
            //if(!str2.equals("")){
        int dateDiff= EITLERPGLOBAL.compareDate(str1,str2);                       
             System.out.println("days : "+dateDiff);              
             if(dateDiff==1)
             {  
                 Table.setValueAt(str1, Table.getSelectedRow() , 9);                 
                 Table.setValueAt("1", Table.getSelectedRow() , 10);                 
               //txtAgreedDate.setText(txtRevisedRequestedDate.getText());               
             }
             else if (dateDiff==-1)
              {
               //txtAgreedDate.setText(txtRevisedCommDate.getText());
              Table.setValueAt("", Table.getSelectedRow() , 9);
              Table.setValueAt("1", Table.getSelectedRow() , 10);
               //JOptionPane.showMessageDialog(frmReqCommDateEntry.this,"Requested date must be larger than or equal to Commited date Otherwise Agreed Date will be blank. ","Requested Date and Commited Date Comparison",JOptionPane.YES_OPTION);               
             } 
              else{
                Table.setValueAt(str1, Table.getSelectedRow() , 9);                 
                Table.setValueAt("1", Table.getSelectedRow() , 10);                 
                //txtAgreedDate.setText(txtRevisedRequestedDate.getText()); 
             }
            //}
        }
        //else{
        //    Table.setValueAt("", Table.getSelectedRow(), 7);
        //}
    }//GEN-LAST:event_TableKeyReleased
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        /*
        for(int i=0;i<Table.getRowCount();i++) {
            if(DataModel.getValueByVariable("LR_NO", i).length()>8) {
                JOptionPane.showMessageDialog(this,"LR No. should not more then eight digits at Sr No. " + (i+1));
                return;
            }
        }*/
        new Thread() {
            public void run() {
                try {
                    for(int i=0;i<Table.getRowCount();i++) {
                        String PieceNo=DataModel.getValueByVariable("PIECE_NO", i);
                        String ind=DataModel.getValueByVariable("IND", i);
                        lblStatus.setText("Updating in Piece No. "+PieceNo);
                        String RequestedDate=EITLERPGLOBAL.formatDateDB(DataModel.getValueByVariable("DELIV_DATE", i));
                        String CommDate=EITLERPGLOBAL.formatDateDB(DataModel.getValueByVariable("COMM_DATE", i));
                        String AgreedDate=EITLERPGLOBAL.formatDateDB(DataModel.getValueByVariable("WVG_AGREED_DATE", i));                        
                        data.Execute("UPDATE PRODUCTION.FELT_ORDER_MASTER SET DELIV_DATE='"+RequestedDate+"',COMM_DATE='"+CommDate+"',WVG_AGREED_DATE='"+AgreedDate+"' WHERE PIECE_NO='"+PieceNo+"'");
                        data.Execute("INSERT INTO PRODUCTION.TMP_AGREED_DATE SELECT  '"+PieceNo+"', '"+RequestedDate+"','"+CommDate+"','"+AgreedDate+"','"+ind+"',NOW()");
                        data.Execute("DELETE FROM PRODUCTION.TMP_AGREED_DATE WHERE AGD_IND = 0");
                        
                    }
                    lblStatus.setText("Ready");
                } catch(Exception e) {
                }
            };
        }.start();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdShowListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdShowListActionPerformed
       
        
        //String FromDate = EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
        //String ToDate = EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
        //int PriorityType = cmbPriorityType.getSelectedIndex();
        new Thread() {            
            public void run() {
                try {
                    String strSQL="SELECT PIECE_NO,ORDER_DATE,PARTY_CD,PARTY_NAME,PRODUCT_CODE,GRUP,DELIV_DATE,COMM_DATE,WVG_AGREED_DATE,0 AS IND FROM PRODUCTION.FELT_ORDER_MASTER,DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE =210010 AND PARTY_CD =PARTY_CODE AND WVG_AGREED_DATE='0000-00-00' AND PROD_IND_A='' AND PRIORITY NOT IN (6,7,8,9,10,12) ";
                    strSQL+="";  
            
                 
                    if(!txtPieceNo.getText().trim().equals("")) {
                        strSQL+="AND PIECE_NO='"+txtPieceNo.getText().trim()+"' ";
                    }
                   
                    if(!txtProductCode.getText().trim().equals("")) {
                        strSQL+="AND PRODUCT_CODE ='"+txtProductCode.getText().trim()+"' ";
                    }
                    
                    if(!txtPartyCode.getText().trim().equals("")) {
                        strSQL+="AND PARTY_CD='"+txtPartyCode.getText().trim()+"' ";
                    }                                       
                    
                    strSQL+=" ORDER BY PIECE_NO ";
                    
                    lblStatus.setText("Fetching Records ... ");
                    System.out.println(strSQL);
                    ResultSet rsTmp=data.getResult(strSQL);
                    rsTmp.first();
                    
                    FormatGrid();
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {                                                        
                            Object[] rowData=new Object[12];
                            DataModel.addRow(rowData);                            
                            int NewRow=Table.getRowCount()-1;
                            lblStatus.setText("Generating Table "+NewRow);
                            DataModel.setValueByVariable("SR_NO",Integer.toString(NewRow+1), NewRow);
                            DataModel.setValueByVariable("PIECE_NO",UtilFunctions.getString(rsTmp,"PIECE_NO",""),NewRow);
                            DataModel.setValueByVariable("ORDER_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"ORDER_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("PARTY_CD",UtilFunctions.getString(rsTmp,"PARTY_CD",""),NewRow);
                            DataModel.setValueByVariable("PARTY_NAME",UtilFunctions.getString(rsTmp,"PARTY_NAME",""),NewRow);
                            DataModel.setValueByVariable("PRODUCT_CODE",UtilFunctions.getString(rsTmp,"PRODUCT_CODE",""),NewRow);
                            DataModel.setValueByVariable("GRUP",UtilFunctions.getString(rsTmp,"GRUP",""),NewRow);
                            DataModel.setValueByVariable("DELIV_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"DELIV_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("COMM_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"COMM_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("WVG_AGREED_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"WVG_AGREED_DATE","0000-00-00")),NewRow);                            
                            DataModel.setValueByVariable("IND",UtilFunctions.getString(rsTmp,"IND",""),NewRow);
                            rsTmp.next();
                        }
                    }
                    lblStatus.setText("Ready ");
                } catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
    }//GEN-LAST:event_cmdShowListActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CMDSHOWDATA;
    private javax.swing.JButton ExportToExcel;
    private javax.swing.JLabel MONTH;
    private javax.swing.JTable Table;
    private javax.swing.JTable Table2;
    private javax.swing.JComboBox cmbMonthType;
    private javax.swing.JComboBox cmbYear;
    private javax.swing.JButton cmdClearAll;
    private javax.swing.JButton cmdReqdateSearch;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdShowList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblInvoiceNo;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtPartyCode;
    private javax.swing.JTextField txtPieceNo;
    private javax.swing.JTextField txtProductCode;
    // End of variables declaration//GEN-END:variables
    
    
    private void FormatGrid() {
        try {
            DataModel=new EITLTableModel();
            Table.removeAll();
            
            Table.setModel(DataModel);
         //   Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel.addColumn("SR."); //0 - Read Only
            DataModel.addColumn("PIECE_NO"); //1
            DataModel.addColumn("ORDER DATE"); //2
            DataModel.addColumn("PARTY"); //3
            DataModel.addColumn("NAME"); //4
            DataModel.addColumn("PRODUCT"); //5
            DataModel.addColumn("GROUP"); //6
            DataModel.addColumn("REQ.DATE"); //7
            DataModel.addColumn("COMM.DATE"); //8
            DataModel.addColumn("WVG.AGRD.DATE"); //9
            DataModel.addColumn("IND"); //10
            
            
            DataModel.SetVariable(0,""); //0 - Read Only
            DataModel.SetVariable(1,"PIECE_NO"); //0 - Read Only
            DataModel.SetVariable(2,"ORDER_DATE"); //0 - Read Only
            DataModel.SetVariable(3,"PARTY_CD"); //0 - Read Only
            DataModel.SetVariable(4,"PARTY_NAME"); //0 - Read Only
            DataModel.SetVariable(5,"PRODUCT_CODE"); //0 - Read Only
            DataModel.SetVariable(6,"GRUP"); //0 - Read Only
            DataModel.SetVariable(7,"DELIV_DATE"); //0 - Read Only
            DataModel.SetVariable(8,"COMM_DATE"); //0 - Read Only
            DataModel.SetVariable(9,"WVG_AGREED_DATE"); //0 - Read Only
            DataModel.SetVariable(10,"IND"); //0 - Read Only
            
            
            DataModel.TableReadOnly(false);
            DataModel.SetReadOnly(0);
            DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);
            if(EITLERPGLOBAL.gUserID==282 || EITLERPGLOBAL.gUserID==28 || EITLERPGLOBAL.gUserID==279|| EITLERPGLOBAL.gUserID==280 || EITLERPGLOBAL.gUserID==281 || EITLERPGLOBAL.gUserID==296){
                DataModel.SetReadOnly(8);
            }
            if(EITLERPGLOBAL.gUserID==59){
                DataModel.SetReadOnly(7);
            }
            DataModel.SetReadOnly(9);            
            DataModel.SetReadOnly(10);            
            
           Table.getColumnModel().getColumn(0).setMaxWidth(40);
           Table.getColumnModel().getColumn(1).setMaxWidth(60);
           Table.getColumnModel().getColumn(2).setMinWidth(90);
           Table.getColumnModel().getColumn(2).setMaxWidth(90);
           Table.getColumnModel().getColumn(3).setMaxWidth(60);
           Table.getColumnModel().getColumn(5).setMaxWidth(60);
           Table.getColumnModel().getColumn(6).setMaxWidth(60);
           Table.getColumnModel().getColumn(7).setMinWidth(100);
           Table.getColumnModel().getColumn(7).setMaxWidth(100);
           Table.getColumnModel().getColumn(8).setMinWidth(100);
           Table.getColumnModel().getColumn(8).setMaxWidth(100);
           Table.getColumnModel().getColumn(9).setMinWidth(100);
           Table.getColumnModel().getColumn(9).setMaxWidth(100);
           Table.getColumnModel().getColumn(10).setMaxWidth(10);
        } catch(Exception e) {
            e.printStackTrace();
        }
       
    }
    
    private void GenerateMonthCombo() {
        HashMap List=new HashMap();
   
        //----- Generate Department Combo ------- //
        
        cmbMonthModel=new EITLComboModel();
        cmbMonthType.removeAllItems();
        cmbMonthType.setModel(cmbMonthModel);
        
        try{
            ComboData combodata=new ComboData();
            combodata.Code=0;
            combodata.Text="SELECT MONTH";
            
            cmbMonthModel.addElement(combodata);
            ResultSet rs=data.getResult("SELECT PARA_CODE,PARA_DESC FROM PRODUCTION.FELT_PARAMETER_MASTER WHERE PARA_ID ='MONTH' ");
            while(!rs.isAfterLast()){
                combodata=new ComboData();
                combodata.Code=rs.getLong("PARA_CODE");
                //combodata.strCode=rs.getString("PRIORITY_DESC");
                combodata.Text=rs.getString("PARA_DESC");
                
                cmbMonthModel.addElement(combodata);
                rs.next();
            }
        }catch(SQLException e) {
            e.printStackTrace();
        }
        
    }
      private void GenerateYearCombo() {
        HashMap List2=new HashMap();
   
        //----- Generate Department Combo ------- //
        
        cmbYearModel=new EITLComboModel();
        cmbYear.removeAllItems();
        cmbYear.setModel(cmbYearModel);
        
        try{
            ComboData combodata2=new ComboData();
            combodata2.Code=0;
            combodata2.Text="SELECT YEAR";
            
            cmbYearModel.addElement(combodata2);
            ResultSet rs2=data.getResult("SELECT PARA_CODE,PARA_DESC FROM PRODUCTION.FELT_PARAMETER_MASTER WHERE PARA_ID ='YEAR' ");
            while(!rs2.isAfterLast()){
                combodata2=new ComboData();
                combodata2.Code=rs2.getLong("PARA_CODE");
                //combodata.strCode=rs.getString("PRIORITY_DESC");
                combodata2.Text=rs2.getString("PARA_DESC");
                
                cmbYearModel.addElement(combodata2);
                rs2.next();
            }
        }catch(SQLException e) {
            e.printStackTrace();
        }
        
    }
  
    
     private void FormatGrid2() {
        try {
            DataModel2=new EITLTableModel();
            Table2.removeAll();
            
            Table2.setModel(DataModel2);
         //   Table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            DataModel2.addColumn("SR."); //0 - Read Only
            DataModel2.addColumn("PRODUCT"); //0 - Read Only
            DataModel2.addColumn("CAPACITY"); //1
            DataModel2.addColumn("COUNT"); //2
 
            
            DataModel2.SetVariable(0,""); //0 - Read Only
            DataModel2.SetVariable(1,"PRODUCT"); //0 - Read Only
            DataModel2.SetVariable(2,"CAPACITY"); //0 - Read Only
            DataModel2.SetVariable(3,"CNT"); //0 - Read Only
            
            
            DataModel2.TableReadOnly(true);
            
           Table2.getColumnModel().getColumn(0).setMaxWidth(20);
          // Table2.getColumnModel().getColumn(1).setMaxWidth(60);
           Table2.getColumnModel().getColumn(2).setMinWidth(70);
           Table2.getColumnModel().getColumn(2).setMaxWidth(70);
           Table2.getColumnModel().getColumn(3).setMinWidth(70);
           Table2.getColumnModel().getColumn(3).setMaxWidth(70);
              
            
           } catch(Exception e) {
            e.printStackTrace();
        }
 
    }
    
   public void show1()
    {
        
        
         new Thread() {            
            public void run() {
                try {
                    
         int Monthtype = cmbMonthType.getSelectedIndex();
         String Yeartype  = (String)cmbYear.getSelectedItem();
             
                   String strSQL2="SELECT 'ACNE' AS PRODUCT ,90 AS CAPACITY,COUNT(*) AS CNT FROM PRODUCTION.FELT_ORDER_MASTER A,PRODUCTION.FELT_RATE_MASTER B WHERE EXTRACT(MONTH FROM WVG_AGREED_DATE) = '"+ Monthtype +"' AND  EXTRACT(YEAR FROM WVG_AGREED_DATE) = '"+ Yeartype +"' AND PRODUCT_CODE = SUBSTRING(ITEM_CODE,1,6) AND SUBSTRING(B.GRUP,1,3) = 'ACN' UNION ALL SELECT 'HDS,SDF' AS PRODUCT ,30,COUNT(*) FROM PRODUCTION.FELT_ORDER_MASTER A,PRODUCTION.FELT_RATE_MASTER B WHERE EXTRACT(MONTH FROM WVG_AGREED_DATE) = '"+ Monthtype +"' AND  EXTRACT(YEAR FROM WVG_AGREED_DATE) = '"+ Yeartype +"' AND PRODUCT_CODE = SUBSTRING(ITEM_CODE,1,6) AND SUBSTRING(B.GRUP,1,3) IN ('HDS','SDF') UNION ALL SELECT 'MNE.MNG,FCNE' AS PRODUCT ,155,COUNT(*) FROM PRODUCTION.FELT_ORDER_MASTER A,PRODUCTION.FELT_RATE_MASTER B WHERE EXTRACT(MONTH FROM WVG_AGREED_DATE) = '"+ Monthtype +"' AND  EXTRACT(YEAR FROM WVG_AGREED_DATE) = '"+ Yeartype +"' AND PRODUCT_CODE = SUBSTRING(ITEM_CODE,1,6)  AND SUBSTRING(B.GRUP,1,3) IN ('MNE','MNG','FCN') UNION ALL SELECT 'OTHER' AS PRODUCT ,0,COUNT(*) FROM PRODUCTION.FELT_ORDER_MASTER A,PRODUCTION.FELT_RATE_MASTER B WHERE EXTRACT(MONTH FROM WVG_AGREED_DATE) = '"+ Monthtype +"' AND  EXTRACT(YEAR FROM WVG_AGREED_DATE) = '"+ Yeartype +"' AND PRODUCT_CODE = SUBSTRING(ITEM_CODE,1,6) AND SUBSTRING(B.GRUP,1,3) NOT IN ('MNE','MNG','FCN','HDS','SDF','ACN') UNION ALL SELECT 'TOTAL ' AS PRODUCT ,275,COUNT(*) FROM PRODUCTION.FELT_ORDER_MASTER A,PRODUCTION.FELT_RATE_MASTER B WHERE EXTRACT(MONTH FROM WVG_AGREED_DATE) = '"+ Monthtype +"' AND  EXTRACT(YEAR FROM WVG_AGREED_DATE) = '"+ Yeartype +"' AND PRODUCT_CODE = SUBSTRING(ITEM_CODE,1,6) ";
                   System.out.println(strSQL2);
                   ResultSet rsTmp2=data.getResult(strSQL2);
                   rsTmp2.first();
                    
                     FormatGrid2();
                    
                    if(rsTmp2.getRow()>0) {
                        while(!rsTmp2.isAfterLast()) {                                                        
                            Object[] rowData2=new Object[5];
                            DataModel2.addRow(rowData2);                            
                            int NewRow2=Table2.getRowCount()-1;
                            lblStatus.setText("Generating Table "+NewRow2);
                            DataModel2.setValueByVariable("SR_NO",Integer.toString(NewRow2+1), NewRow2);
                            DataModel2.setValueByVariable("PRODUCT",UtilFunctions.getString(rsTmp2,"PRODUCT",""),NewRow2);
                            DataModel2.setValueByVariable("CAPACITY",UtilFunctions.getString(rsTmp2,"CAPACITY",""),NewRow2);
                            DataModel2.setValueByVariable("CNT",UtilFunctions.getString(rsTmp2,"CNT",""),NewRow2);
                    
                            
                            rsTmp2.next();
                        }
                    }
                    
                    
                } catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start(); 
        
    }
   
   public void showreq()
   {
      new Thread() {            
            public void run() {
                try {
                    
         int Monthtype = cmbMonthType.getSelectedIndex();
         int yeartype1 = cmbYear.getSelectedIndex();
         String Yeartype  = (String)cmbYear.getSelectedItem();
         
                    String strSQL="SELECT PIECE_NO,ORDER_DATE,PARTY_CD,PARTY_NAME,PRODUCT_CODE,GRUP,DELIV_DATE,COMM_DATE,WVG_AGREED_DATE,0 AS IND FROM PRODUCTION.FELT_ORDER_MASTER,DINESHMILLS.D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE =210010 AND PARTY_CD =PARTY_CODE AND WVG_AGREED_DATE='0000-00-00' AND PROD_IND_A='' AND PRIORITY NOT IN (6,7,8,9,10,12) AND EXTRACT(MONTH FROM DELIV_DATE) = '"+ Monthtype +"' AND  EXTRACT(YEAR FROM DELIV_DATE) = '"+ Yeartype +"' ";
                    strSQL+="";  
                    
                   
                    if(!txtPieceNo.getText().trim().equals("")) {
                        strSQL+="AND PIECE_NO='"+txtPieceNo.getText().trim()+"' ";
                    }
                   
                    if(!txtProductCode.getText().trim().equals("")) {
                        strSQL+="AND PRODUCT_CODE ='"+txtProductCode.getText().trim()+"' ";
                    }
                    
                    if(!txtPartyCode.getText().trim().equals("")) {
                        strSQL+="AND PARTY_CD='"+txtPartyCode.getText().trim()+"' ";
                    }                                       
                    
                    strSQL+=" ORDER BY PIECE_NO ";
                    
                    lblStatus.setText("Fetching Records ... ");
                    System.out.println(strSQL);
                    ResultSet rsTmp=data.getResult(strSQL);
                    rsTmp.first();
                    
                    FormatGrid();
                    
                    if(rsTmp.getRow()>0) {
                        while(!rsTmp.isAfterLast()) {                                                        
                            Object[] rowData=new Object[12];
                            DataModel.addRow(rowData);                            
                            int NewRow=Table.getRowCount()-1;
                            lblStatus.setText("Generating Table "+NewRow);
                            DataModel.setValueByVariable("SR_NO",Integer.toString(NewRow+1), NewRow);
                            DataModel.setValueByVariable("PIECE_NO",UtilFunctions.getString(rsTmp,"PIECE_NO",""),NewRow);
                            DataModel.setValueByVariable("ORDER_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"ORDER_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("PARTY_CD",UtilFunctions.getString(rsTmp,"PARTY_CD",""),NewRow);
                            DataModel.setValueByVariable("PARTY_NAME",UtilFunctions.getString(rsTmp,"PARTY_NAME",""),NewRow);
                            DataModel.setValueByVariable("PRODUCT_CODE",UtilFunctions.getString(rsTmp,"PRODUCT_CODE",""),NewRow);
                            DataModel.setValueByVariable("GRUP",UtilFunctions.getString(rsTmp,"GRUP",""),NewRow);
                            DataModel.setValueByVariable("DELIV_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"DELIV_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("COMM_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"COMM_DATE","0000-00-00")),NewRow);
                            DataModel.setValueByVariable("WVG_AGREED_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"WVG_AGREED_DATE","0000-00-00")),NewRow);                            
                            DataModel.setValueByVariable("IND",UtilFunctions.getString(rsTmp,"IND",""),NewRow);
                            rsTmp.next();
                        }
                    }
                    lblStatus.setText("Ready ");
                } catch(Exception e) {
                    e.printStackTrace();
                }
            };
        }.start();
   
   
   }
      
}
