/*
 * frmLegacyVouchers.java
 *
 * Created on August 23, 2008, 11:18 AM
 */

package EITLERP.Production.FeltCNGenForm;

/**
 *
 * @author  root
 */


import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;



import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;


public class frmCnGoodsReturn extends javax.swing.JApplet {
    
    //private EITLTableModel DataModel=new EITLTableModel();
    
    EITLComboModel IntervalComboModel;
    EITLTableModel DataModel;
    
    private ResultSet rsResultSet,rsResultSet1;
    private Connection Conn;
    private Statement Stmt;
    private clsVoucher objVoucher;
    //  private EITLComboModel cmbReceiptTypeModel;
    //  private EITLComboModel cmbReportTypeModel;
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    
    /** Initializes the applet frmLegacyVouchers */
    public void init() {
        setSize(675,500);
        initComponents();
        getDept();
        txtFromDate.setText("01/04/1901");
        generateIntervalCombo();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        bgVoucher = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        lblBookName = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        cmbIntervalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Processcash = new javax.swing.JButton();
        txtInterval = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDraftDate = new javax.swing.JTextField();
        txtVoucherNo = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("CREDIT NOTE for GOODS RETURN");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 666, 25);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("From Date :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(5, 67, 85, 15);

        jLabel2.setText("Goods Return Data Process");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(6, 39, 350, 15);

        txtFromDate.setNextFocusableComponent(txtToDate);
        txtFromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromDateActionPerformed(evt);
            }
        });
        txtFromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFromDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFromDateFocusLost(evt);
            }
        });

        getContentPane().add(txtFromDate);
        txtFromDate.setBounds(95, 66, 100, 19);

        getContentPane().add(txtToDate);
        txtToDate.setBounds(263, 67, 100, 19);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("To Date :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(200, 68, 60, 15);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseDBLClicked(evt);
            }
        });

        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 190, 648, 170);

        lblBookName.setText(".");
        getContentPane().add(lblBookName);
        lblBookName.setBounds(204, 119, 280, 15);

        jButton3.setText("2. CN GR DETAIL");
        jButton3.setMargin(new java.awt.Insets(2, 7, 2, 7));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(220, 150, 190, 25);

        cmbIntervalCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIntervalComboItemStateChanged(evt);
            }
        });
        cmbIntervalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntervalComboActionPerformed(evt);
            }
        });

        getContentPane().add(cmbIntervalCombo);
        cmbIntervalCombo.setBounds(120, 120, 390, 24);

        jLabel4.setText("Select Period : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 130, 130, 15);

        Processcash.setText("Generate Data");
        Processcash.setMargin(new java.awt.Insets(2, 7, 2, 7));
        Processcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesscashActionPerformed(evt);
            }
        });

        getContentPane().add(Processcash);
        Processcash.setBounds(10, 90, 190, 25);

        getContentPane().add(txtInterval);
        txtInterval.setBounds(550, 120, 90, 19);

        jButton5.setText("3. GR CREDIT NOTE ");
        jButton5.setMargin(new java.awt.Insets(2, 7, 2, 7));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton5);
        jButton5.setBounds(420, 150, 190, 25);

        jButton4.setText("1. CN GR SUMMARY");
        jButton4.setMargin(new java.awt.Insets(2, 7, 2, 7));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(20, 150, 190, 25);

        jButton6.setText("4. Voucher Creation");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton6);
        jButton6.setBounds(20, 430, 200, 25);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Draft Date :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 380, 85, 15);

        txtDraftDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDraftDateFocusLost(evt);
            }
        });

        getContentPane().add(txtDraftDate);
        txtDraftDate.setBounds(100, 380, 100, 19);

        txtVoucherNo.setEnabled(false);
        getContentPane().add(txtVoucherNo);
        txtVoucherNo.setBounds(260, 430, 140, 20);

    }//GEN-END:initComponents

    private void txtFromDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusGained
        // TODO add your handling code here:
        txtToDate.setText("");
    }//GEN-LAST:event_txtFromDateFocusGained

    private void txtFromDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFromDateFocusLost
        // TODO add your handling code here:
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter From Date");
            txtFromDate.requestFocus();
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if(!txtFromDate.getText().substring(0,2).equals("01")) {
            JOptionPane.showMessageDialog(null,"Please Enter Valid From Date.(i.e DATE is 'O1')");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else if(!txtFromDate.getText().substring(3,5).equals("04")) {
            JOptionPane.showMessageDialog(null,"Please Enter Valid From Month.(i.e Month is 'O4').");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
        } else {
            txtToDate.setText("");
            txtToDate.setText("31/03/"+data.getStringValueFromDB("SELECT YEAR('"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"')+1 FROM DUAL"));
            //txtToDate.requestFocus();
        }
    }//GEN-LAST:event_txtFromDateFocusLost

    private void txtDraftDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDraftDateFocusLost
        // TODO add your handling code here:
        if(txtDraftDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Draft Date");
            txtDraftDate.requestFocus();
        } else if(!EITLERPGLOBAL.isDate(txtDraftDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid Draft Date in DD/MM/YYYY format.");
            txtDraftDate.setText("");
            txtDraftDate.requestFocus();
        }
    }//GEN-LAST:event_txtDraftDateFocusLost

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         if(txtDraftDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Draft Date");
            return;
        }
        else {
        
        
        try {
            // if(txtVoucherNo.getText().length()==1) {
            //Update this with last voucher no. of this series
            Conn=data.getConn();
            //    Stmt=Conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            Stmt=Conn.createStatement();
            
            String frmYr = EITLERPGLOBAL.FinFromDateDB.substring(2, 4);
            System.out.println("FIN FROM YEAR : "+frmYr);
            
            if(data.IsRecordExist("SELECT VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID+"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL)) {
                //   rsResultSet=Stmt.executeQuery("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,4) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=14 ");
                rsResultSet=Stmt.executeQuery("SELECT VOUCHER_NO,SUBSTRING(VOUCHER_NO,1,6) AS CNV,RIGHT(VOUCHER_NO,5) AS CNSRNO FROM (SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM FINANCE.D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN' AND SUBSTRING(VOUCHER_NO,5,2)=17 AND SUBSTRING(VOUCHER_NO,3,2)='"+frmYr+"' ) AS A");
                String LastDocNo="";
                String LastcnvNo="";
                int draftSrNo=0;
                
                rsResultSet.first();
                while(!rsResultSet.isAfterLast() && rsResultSet.getRow()>0) {
                    LastDocNo=rsResultSet.getString("VOUCHER_NO");
                    LastcnvNo=rsResultSet.getString("CNV");
                    draftSrNo=rsResultSet.getInt("CNSRNO");
                    
                    rsResultSet.next();
                }
                
                //String LastDocNo=data.getStringValueFromDB("SELECT MAX(VOUCHER_NO) AS VOUCHER_NO FROM D_FIN_VOUCHER_HEADER WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID +"  AND LEFT(VOUCHER_NO,2) = 'CN'",FinanceGlobal.FinURL);
                txtVoucherNo.setText(LastDocNo);
                //  txtVoucherNo.setText(Lastcnsrno);
                
                txtVoucherNo.requestFocus();
                
                
                
                
                
                
                //     String bookCode="TR-15";
                //     String mainCode="435187";
                
                //    String draftNo="CN161400";
                String draftNo="";
                //  String draftNo="SP.RET."+seasonId+" - ";
                //     String draftNo="SSQL."+seasonId+" - ";
                
                //   String draftNo="SPL."+seasonId+" - ";
                
                //   String draftNo="BONZ. "+seasonId+" - ";
                //    String draftNo="ABD "+seasonId+" - ";
                //String draftDate="2016-01-31";
                //        String draftDate="2014-2015";
                String draftDate=EITLERPGLOBAL.formatDateDB(txtDraftDate.getText().trim());
                //String linkNo=" /"+Integer.toString(EITLERPGLOBAL.FinYearTo)+"-"+Integer.toString(EITLERPGLOBAL.FinYearFrom);
                //String linkNo=" /"+Integer.toString(EITLERPGLOBAL.FinYearTo)+"-"+Integer.toString(EITLERPGLOBAL.FinYearFrom);
                //   int draftSrNo=521;
                
                String linkSrNo="";
                //int reasonCode=34;
                //     int reasonCode=36;
                
                int counter=1;
                String t=txtInterval.getText().substring(0,8);
                ResultSet rsSchemeHeader =Stmt.executeQuery("SELECT CNH_SUB_ACCOUNT_CODE FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID ='"+t+"' AND CNH_TYPE ='GOODSRTN' ORDER BY CNH_SUB_ACCOUNT_CODE");
                
                    //System.out.println("records : : "+rsSchemeHeader.getRow());
                //  ResultSet rsSchemeHeader=stmt.executeQuery("SELECT SCH_PARTY_CODE FROM SALES.D_SAL_SCHEME_HEADER WHERE SCH_SCHEME_ID="+schemeId+" AND SCH_SEASON_ID='"+seasonId+"' ORDER BY SCH_PARTY_CODE");
                rsSchemeHeader.first();
                if(rsSchemeHeader.getRow()>0){
                    while(!rsSchemeHeader.isAfterLast()){
                        System.out.println("SUB_AC_CD : "+rsSchemeHeader.getString("CNH_SUB_ACCOUNT_CODE"));
                        
                        Statement st2 = Conn.createStatement();
                        String SQL1 ="UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER SET CNH_DRAFT_CR_NOTE_NO='"+draftNo+(draftSrNo+counter)+"',CNH_DRAFT_CR_NOTE_DATE='"+draftDate+"' WHERE CNH_TYPE ='GOODSRTN' AND CNH_YEAR_MON_ID ='"+t+"' AND  CNH_SUB_ACCOUNT_CODE='"+rsSchemeHeader.getString("CNH_SUB_ACCOUNT_CODE")+"'";//AND CNH_PERCENT='"+rsSchemeHeader.getString("CNH_PERCENT")+"'
                        System.out.println("SQL 1 : "+SQL1);
                        st2.execute(SQL1);
                        
                        // stmt.execute("UPDATE SALES.D_SAL_SCHEME_HEADER  SET SCH_VOUCHER_NO = CONCAT('CN',151500000 +ABS(REPLACE(RIGHT( SCH_DRAFT_CR_NOTE_NO,4),' ',''))),SCH_LEGACY_NO = ABS(REPLACE(RIGHT( SCH_DRAFT_CR_NOTE_NO,4),' ',''))   WHERE SCH_SEASON_ID='"+seasonId+"'  AND SCH_BOOK_CODE ='TR-15'");
                        
//                        String SQL2 ="UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER SET CNH_FIN_VOUCHER_NO = CONCAT('CN',171700000 +ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))),CNH_LEGACY_NO = ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))  WHERE CNH_TYPE ='GOODSRTN' AND CNH_YEAR_MON_ID ='"+t+"' AND CNH_SUB_ACCOUNT_CODE='"+rsSchemeHeader.getString("CNH_SUB_ACCOUNT_CODE")+"' ";//AND CNH_PERCENT='"+rsSchemeHeader.getString("CNH_PERCENT")+"'
                        String SQL2 ="UPDATE PRODUCTION.D_CREDIT_NOTE_HEADER SET CNH_FIN_VOUCHER_NO = CONCAT('CN','"+frmYr+"',1700000 +ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))),CNH_LEGACY_NO = ABS(REPLACE(RIGHT( CNH_DRAFT_CR_NOTE_NO,4),' ',''))  WHERE CNH_TYPE ='GOODSRTN' AND CNH_YEAR_MON_ID ='"+t+"' AND CNH_SUB_ACCOUNT_CODE='"+rsSchemeHeader.getString("CNH_SUB_ACCOUNT_CODE")+"' ";//AND CNH_PERCENT='"+rsSchemeHeader.getString("CNH_PERCENT")+"'
                        System.out.println("SQL 2 : "+SQL2);
                        st2.execute(SQL2);
                        
                        rsSchemeHeader.next();
                        counter++;
                    }
                }
            }
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_HEADER");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_HEADER (COMPANY_ID,VOUCHER_NO,BOOK_CODE,BANK_NAME,HIERARCHY_ID,REMARKS,VOUCHER_DATE,VOUCHER_TYPE,LEGACY_NO,LEGACY_DATE,REASON_CODE) SELECT 2,CNH_FIN_VOUCHER_NO,17,'DISCOUNT JOURNAL',1646,CNH_REMARKS,CNH_DRAFT_CR_NOTE_DATE,7,CNH_LEGACY_NO,CNH_DRAFT_CR_NOTE_DATE,CNH_REASON_CODE FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='GOODSRTN' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8)");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL (COMPANY_ID,VOUCHER_NO,SR_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO) SELECT 2,CNH_FIN_VOUCHER_NO,1,'C',CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CREDIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CNH_LINK_NO FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='GOODSRTN' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) UNION ALL SELECT 2,CNH_FIN_VOUCHER_NO,2,'D',CNH_MAIN_ACCOUNT_CODE,'',CNH_CREDIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,CNH_LINK_NO FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='GOODSRTN' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) ");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX");
            
            Stmt.execute("INSERT INTO TEMP_DATABASE.L_FIN_VOUCHER_DETAIL_EX (COMPANY_ID,VOUCHER_NO,SR_NO,EFFECT,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,AMOUNT,MODULE_ID,REF_COMPANY_ID,IS_DEDUCTION,VALUE_DATE,LINK_NO) SELECT 2,CNH_FIN_VOUCHER_NO,1,'C',CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CREDIT_AMOUNT,66,2,0,CNH_DRAFT_CR_NOTE_DATE,CNH_LINK_NO FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='GOODSRTN' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) UNION ALL SELECT 2,CNH_FIN_VOUCHER_NO,2,'D',CNH_MAIN_ACCOUNT_CODE, '',CNH_CREDIT_AMOUNT,0,0,0,CNH_DRAFT_CR_NOTE_DATE,CNH_LINK_NO FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_TYPE ='GOODSRTN' AND CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) ");
            
            Stmt.execute("TRUNCATE TABLE TEMP_DATABASE.L_COM_DOC_DATA");
            
            Stmt.execute("INSERT INTO  TEMP_DATABASE.L_COM_DOC_DATA SELECT 2,70,VOUCHER_NO,NOW(),USER_ID,CASE WHEN CREATOR =1 THEN 'W' ELSE 'P'  END, CASE WHEN CREATOR =0 THEN 'A' ELSE 'C'  END,'',SR_NO,0,'','0000-00-00','0000-00-00',0,'0000-00-00'  FROM DINESHMILLS.D_COM_HIERARCHY_RIGHTS A,TEMP_DATABASE.L_FIN_VOUCHER_HEADER B WHERE B.HIERARCHY_ID =1646  AND A.HIERARCHY_ID = B.HIERARCHY_ID ");
            
        }
        catch(SQLException sqe){
            sqe.printStackTrace();
            
        }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtFromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFromDateActionPerformed

    private void cmbIntervalComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIntervalComboItemStateChanged
        txtInterval.setText((String)cmbIntervalCombo.getSelectedItem());
    }//GEN-LAST:event_cmbIntervalComboItemStateChanged

    private void cmbIntervalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntervalComboActionPerformed
        if(EITLERPGLOBAL.getComboCode(cmbIntervalCombo)!=1){
            
            FormatGrid1();
            try{
                ResultSet rs=data.getResult("SELECT A.CND_INVOICE_NO,A.CND_INVOICE_DATE,A.CND_QUALITY,A.CND_SHADE,A.CND_PIECE_NO,A.CND_GROSS_QTY,A.CND_RATE,A.CND_NET_AMOUNT,A.CND_CATG,A.CND_PERCENT,A.CND_CREDIT_AMOUNT,B.CNH_ID,B.CNH_NO,B.CNH_TYPE,B.CNH_MAIN_ACCOUNT_CODE,B.CNH_MAIN_CODE,B.CNH_SUB_ACCOUNT_CODE,CNH_CITY,CNH_PARTY_NAME FROM PRODUCTION.D_CREDIT_NOTE_DETAIL A,PRODUCTION.D_CREDIT_NOTE_HEADER B WHERE A.CND_YEAR_MON_ID =SUBSTRING('" +txtInterval.getText()+"',1,8) AND A.CND_TYPE='GOODSRTN' AND A.CND_NO=B.CNH_NO AND A.CND_NO=B.CNH_NO AND A.CND_SUB_ACCOUNT_CODE=B.CNH_SUB_ACCOUNT_CODE ORDER BY CND_SUB_ACCOUNT_CODE");
                while(!rs.isAfterLast()){
                    Object[] rowData=new Object[21];
                    // rowData[0]=rs.getString("");
                    rowData[0]=rs.getString("CNH_ID");
                    rowData[1]=rs.getString("CNH_NO");
                    rowData[2]=rs.getString("CNH_TYPE");
                    rowData[3]=rs.getString("CNH_MAIN_ACCOUNT_CODE");
                    rowData[4]=rs.getString("CNH_MAIN_CODE");
                    rowData[5]=rs.getString("CNH_SUB_ACCOUNT_CODE");
                    rowData[6]=rs.getString("CNH_CITY");
                    rowData[7]=rs.getString("CNH_PARTY_NAME");
                    rowData[8]=rs.getString("CND_INVOICE_NO");
                    rowData[9]=rs.getString("CND_INVOICE_DATE");
                    rowData[10]=rs.getString("CND_QUALITY");
                    rowData[11]=rs.getString("CND_SHADE");
                    rowData[12]=rs.getString("CND_PIECE_NO");
                    rowData[13]=rs.getString("CND_GROSS_QTY");
                    rowData[14]=rs.getString("CND_RATE");
                    rowData[15]=rs.getString("CND_NET_AMOUNT");
                    rowData[16]=rs.getString("CND_CATG");
                    rowData[17]=rs.getString("CND_PERCENT");
                    rowData[18]=rs.getString("CND_CREDIT_AMOUNT");
                    
                    
                    DataModel.addRow(rowData);
                    rs.next();
                }
                rs.close();
                
                
            }catch(SQLException sqe){sqe.printStackTrace();}
        }
    }//GEN-LAST:event_cmbIntervalComboActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        GenerateCreditNoteSummary();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        GenerateCreditNote();
    }//GEN-LAST:event_jButton5ActionPerformed
                            
    private void ProcesscashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesscashActionPerformed
        if ( ! Validate()) {
            return;
        }
        //FormatGrid1();
        
        GenerateGRCN();
    }//GEN-LAST:event_ProcesscashActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        GenerateCreditNoteDetail();     // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
        
    private void mouseDBLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDBLClicked
        
    }//GEN-LAST:event_mouseDBLClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Processcash;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup bgVoucher;
    private javax.swing.JComboBox cmbIntervalCombo;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDraftDate;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInterval;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtVoucherNo;
    // End of variables declaration//GEN-END:variables
    
   /*
    private void GenerateReport() {
        try {
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CND_MAIN_ACCOUNT_NAME");
            objReportData.AddColumn("CND_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CND_LINK_NO");
            objReportData.AddColumn("CND_INVOICE_DATE");
            objReportData.AddColumn("CND_INVOICE_AMOUNT");
            objReportData.AddColumn("CND_PERCENT");
            objReportData.AddColumn("CND_BOOK_CODE");
            objReportData.AddColumn("CND_RC_VOUCHER_NO");
            objReportData.AddColumn("CND_RC_VOUCHER_DATE");
            objReportData.AddColumn("CND_RC_FIN_VOUCHER_NO");
            objReportData.AddColumn("CND_DAYS");
            objReportData.AddColumn("CND_DEBIT_AMOUNT");
            objReportData.AddColumn("CND_CREDIT_AMOUNT");
            objReportData.AddColumn("CND_INTERVAL_CAPTION");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_NAME","");
            objOpeningRow.setValue("CND_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CND_LINK_NO","");
            objOpeningRow.setValue("CND_INVOICE_DATE","");
            objOpeningRow.setValue("CND_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CND_PERCENT","");
            objOpeningRow.setValue("CND_BOOK_CODE","");
            objOpeningRow.setValue("CND_RC_VOUCHER_NO","");
            objOpeningRow.setValue("CND_RC_VOUCHER_DATE","");
            objOpeningRow.setValue("CND_RC_FIN_VOUCHER_NO","");
            objOpeningRow.setValue("CND_DAYS","");
            objOpeningRow.setValue("CND_DEBIT_AMOUNT","");
            objOpeningRow.setValue("CND_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CND_INTERVAL_CAPTION","");
            
            String strSQL = "";
           
            
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CND_MAIN_ACCOUNT_NAME",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_NAME",""));
                    objRow.setValue("CND_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CND_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CND_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CND_LINK_NO",UtilFunctions.getString(rsTmp,"CND_LINK_NO",""));
                    
                    objRow.setValue("CND_INVOICE_DATE",UtilFunctions.getString(rsTmp,"CND_CHARGE_CODE",""));
                    objRow.setValue("CND_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CND_INVOICE_AMOUNT",""));
                    objRow.setValue("CND_PERCENT",UtilFunctions.getString(rsTmp,"CND_PERCENT",""));
                    objRow.setValue("CND_BOOK_CODE",UtilFunctions.getString(rsTmp,"CND_BOOK_CODE",""));
                    objRow.setValue("CND_RC_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_NO",""));
                    objRow.setValue("CND_RC_VOUCHER_DATE",UtilFunctions.getString(rsTmp,"CND_RC_VOUCHER_DATE",""));
                    objRow.setValue("CND_RC_FIN_VOUCHER_NO",UtilFunctions.getString(rsTmp,"CND_RC_FIN_VOUCHER_NO",""));
                    objRow.setValue("CND_DAYS",UtilFunctions.getString(rsTmp,"CND_DAYS",""));
                    objRow.setValue("CND_DEBIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_DEBIT_AMOUNT",""));
                    objRow.setValue("CND_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CND_CREDIT_AMOUNT",""));
                    objRow.setValue("CND_INTERVAL_CAPTION",UtilFunctions.getString(rsTmp,"CND_INTERVAL_CAPTION",""));
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
             Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            //Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
       //     objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/LC.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    public String getStrQuery(String SubAccountCode,String MainAccountCode) {
        
        String strQuery;
        if(!MainAccountCode.trim().equals("")) {
            strQuery=" AND CND_MAIN_ACCOUNT_CODE ="+MainAccountCode;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        }
        // }
        else {
            strQuery = " AND CND_MAIN_ACCOUNT_CODE ="+MainAccountCode ;
        }
        
        return strQuery;
    }
    */
    
    private void GenerateCreditNoteDetail() {
        String str=IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(0,8);
        String strfrom=IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(16,26);
        String strto=IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(30,40);
        try {            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("CND_SUB_ACCOUNT_CODE");
            objData.AddColumn("CND_MAIN_ACCOUNT_NAME");
            objData.AddColumn("CND_INVOICE_NO");
            objData.AddColumn("CND_RC_VOUCHER_NO");
            objData.AddColumn("CND_INVOICE_DATE");
            objData.AddColumn("CND_INVOICE_AMOUNT");
            objData.AddColumn("CND_PERCENT");
            objData.AddColumn("CND_CREDIT_AMOUNT");
            objData.AddColumn("CND_QUALITY");
            objData.AddColumn("CND_PIECE_NO");
            
            //String strSQL="SELECT CNH_NO AS NO,CNH_TYPE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_CITY,CND_INVOICE_NO,CND_INVOICE_DATE,CND_QUALITY,CND_SHADE,CND_PIECE_NO,CND_GROSS_QTY,CND_RATE,CND_NET_AMOUNT,CND_CATG,CND_PERCENT,CND_CREDIT_AMOUNT,1 AS A,1 AS B,'' AS C FROM (SELECT CNH_NO,CNH_TYPE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_CITY FROM SALES.D_CREDIT_NOTE_HEADER1 WHERE CNH_TYPE='EWR' ) AS A LEFT JOIN (SELECT CND_NO,CND_TYPE,CND_SUB_ACCOUNT_CODE,CND_INVOICE_NO,CND_INVOICE_DATE,CND_QUALITY,CND_SHADE,CND_PIECE_NO,CND_GROSS_QTY,CND_RATE,CND_NET_AMOUNT,CND_CATG,CND_PERCENT,CND_CREDIT_AMOUNT FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE='EWR' AND CND_INVOICE_DATE>='"+EITLERPGLOBAL.formatDateDB(txtFromDate.getText())+"' AND CND_INVOICE_DATE<='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"') AS B ON A.CNH_NO=B.CND_NO AND A.CNH_SUB_ACCOUNT_CODE=B.CND_SUB_ACCOUNT_CODE  UNION ALL SELECT CNH_NO AS NO,'' AS CNH_TYPE,'' AS CNH_SUB_ACCOUNT_CODE,'' AS CNH_PARTY_NAME,'' AS CNH_CITY,'' AS CND_INVOICE_NO,'' AS CND_INVOICE_DATE,'' AS CND_QUALITY,'' AS CND_SHADE,'' AS CND_PIECE_NO,'' AS CND_GROSS_QTY,'' AS CND_RATE,'' AS CND_NET_AMOUNT,'' AS CND_CATG,'' AS CND_PERCENT,'' AS CND_CREDIT_AMOUNT,2 AS A,1 AS B,'' AS C FROM SALES.D_CREDIT_NOTE_HEADER1 WHERE CNH_TYPE='EWR'  UNION ALL (SELECT CNH_NO AS NO,'' AS CNH_TYPE,'' AS CNH_SUB_ACCOUNT_CODE,'' AS CNH_PARTY_NAME,'' AS CNH_CITY,'' AS CND_INVOICE_NO,'' AS CND_INVOICE_DATE,'' AS CND_QUALITY,'' AS CND_SHADE,'' AS CND_PIECE_NO,'' AS CND_GROSS_QTY,'' AS CND_RATE,'' AS CND_NET_AMOUNT,'' AS CND_CATG,'' AS CND_PERCENT,'' AS CND_CREDIT_AMOUNT,2 AS A,0 AS B,CONCAT(CNH_SUB_ACCOUNT_CODE,'  ',CNH_PARTY_NAME,'     ',CNH_CITY) AS C FROM SALES.D_CREDIT_NOTE_HEADER1 WHERE CNH_TYPE='EWR' ORDER BY CNH_NO LIMIT 1)  ORDER BY B,NO,A,CND_INVOICE_NO";
            String strSQL="SELECT * FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE='GOODSRTN' AND CND_YEAR_MON_ID='"+str+"' ORDER BY CND_SUB_ACCOUNT_CODE";
            ResultSet  rsTemp =data.getResult(strSQL);                    
            rsTemp.first();            
            if(rsTemp.getRow()>0){
                while(!rsTemp.isAfterLast()){
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                
                objRow.setValue("CND_SUB_ACCOUNT_CODE", rsTemp.getString("CND_SUB_ACCOUNT_CODE"));
                objRow.setValue("CND_MAIN_ACCOUNT_NAME", rsTemp.getString("CND_MAIN_ACCOUNT_NAME"));
                objRow.setValue("CND_INVOICE_NO", rsTemp.getString("CND_INVOICE_NO"));
                objRow.setValue("CND_RC_VOUCHER_NO", rsTemp.getString("CND_RC_VOUCHER_NO"));
                //objRow.setValue("CND_INVOICE_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("CND_INVOICE_DATE")));                
                objRow.setValue("CND_INVOICE_DATE", rsTemp.getString("CND_INVOICE_DATE"));                
                objRow.setValue("CND_INVOICE_AMOUNT", rsTemp.getString("CND_INVOICE_AMOUNT"));
                objRow.setValue("CND_PERCENT", rsTemp.getString("CND_PERCENT"));
                objRow.setValue("CND_CREDIT_AMOUNT", rsTemp.getString("CND_CREDIT_AMOUNT"));
                objRow.setValue("CND_QUALITY", rsTemp.getString("CND_QUALITY"));
                objRow.setValue("CND_PIECE_NO", rsTemp.getString("CND_PIECE_NO"));
                objData.AddRow(objRow);                
                rsTemp.next(); 
                }
            }                            
                        
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();            
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",strfrom);
            Parameters.put("TO_DATE",strto);
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/rptGoodsRtnCNDetail.rpt",Parameters,objData);                       
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    private void GenerateCreditNote() {
       String str=IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(0,8);
        System.out.println(str);
        
        try {            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("CNH_ID");
            objData.AddColumn("CNH_NO");
            objData.AddColumn("CNH_TYPE");
            objData.AddColumn("CNH_MAIN_ACCOUNT_CODE");
            objData.AddColumn("CNH_MAIN_CODE");
            objData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objData.AddColumn("CNH_CITY");
            objData.AddColumn("CNH_PARTY_NAME");
            objData.AddColumn("CNH_REASON_CODE");
            objData.AddColumn("CNH_BOOK_CODE");
            objData.AddColumn("CNH_PERCENT");
            objData.AddColumn("CNH_CREDIT_AMOUNT");
            objData.AddColumn("CNH_LINK_NO");
            objData.AddColumn("CNH_YEAR_MON_ID");
            objData.AddColumn("CNH_INTERVAL_CAPTION");
            objData.AddColumn("CNH_INVOICE_AMOUNT");
            objData.AddColumn("CNH_DRAFT_CR_NOTE_NO");
            objData.AddColumn("CNH_DRAFT_CR_NOTE_DATE");
            objData.AddColumn("CNH_FIN_VOUCHER_NO");
            objData.AddColumn("CNH_REMARKS");
            
            //String strSQL="SELECT * FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID='"+str+"' AND CNH_TYPE='UNADJ' ORDER BY CNH_SUB_ACCOUNT_CODE";
            String strSQL="SELECT CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CITY,CNH_PARTY_NAME,CNH_REASON_CODE,CNH_BOOK_CODE,CNH_PERCENT,ROUND(CNH_CREDIT_AMOUNT,0) AS CNH_CREDIT_AMOUNT,CNH_LINK_NO,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_INVOICE_AMOUNT,CNH_DRAFT_CR_NOTE_NO,CNH_DRAFT_CR_NOTE_DATE,CNH_EXT11,CNH_FIN_VOUCHER_NO,CNH_REMARKS FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID='"+str+"' AND CNH_TYPE='GOODSRTN' ORDER BY CNH_SUB_ACCOUNT_CODE";
            ResultSet  rsTemp =data.getResult(strSQL);                    
            rsTemp.first();            
            if(rsTemp.getRow()>0){
                while(!rsTemp.isAfterLast()){
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();
                objRow.setValue("CNH_NO", rsTemp.getString("CNH_NO"));
                objRow.setValue("CNH_TYPE", rsTemp.getString("CNH_TYPE"));
                objRow.setValue("CNH_MAIN_ACCOUNT_CODE", rsTemp.getString("CNH_MAIN_ACCOUNT_CODE"));
                objRow.setValue("CNH_MAIN_CODE", rsTemp.getString("CNH_MAIN_CODE"));
                objRow.setValue("CNH_SUB_ACCOUNT_CODE", rsTemp.getString("CNH_SUB_ACCOUNT_CODE"));
                objRow.setValue("CNH_PARTY_NAME", rsTemp.getString("CNH_PARTY_NAME"));
                objRow.setValue("CNH_CITY", rsTemp.getString("CNH_CITY"));                
                objRow.setValue("CNH_REASON_CODE", rsTemp.getString("CNH_REASON_CODE"));
                //objRow.setValue("CND_INVOICE_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("CND_INVOICE_DATE")));                
                objRow.setValue("CNH_BOOK_CODE", rsTemp.getString("CNH_BOOK_CODE"));                
                objRow.setValue("CNH_PERCENT", rsTemp.getString("CNH_PERCENT"));
                objRow.setValue("CNH_CREDIT_AMOUNT", rsTemp.getString("CNH_CREDIT_AMOUNT"));
                objRow.setValue("CNH_LINK_NO", rsTemp.getString("CNH_LINK_NO"));
                objRow.setValue("CNH_YEAR_MON_ID", rsTemp.getString("CNH_YEAR_MON_ID"));
                objRow.setValue("CNH_INTERVAL_CAPTION", rsTemp.getString("CNH_INTERVAL_CAPTION"));
                objRow.setValue("CNH_INVOICE_AMOUNT", rsTemp.getString("CNH_INVOICE_AMOUNT"));
                objRow.setValue("CNH_DRAFT_CR_NOTE_NO", rsTemp.getString("CNH_DRAFT_CR_NOTE_NO"));
                objRow.setValue("CNH_DRAFT_CR_NOTE_DATE", EITLERPGLOBAL.formatDate(rsTemp.getString("CNH_DRAFT_CR_NOTE_DATE")));   
                objRow.setValue("CNH_FIN_VOUCHER_NO", rsTemp.getString("CNH_FIN_VOUCHER_NO"));  
                objRow.setValue("CNH_REMARKS", rsTemp.getString("CNH_REMARKS"));   
                objData.AddRow(objRow);                
                rsTemp.next(); 
                }
            }                            
                        
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();            
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",txtFromDate.getText());
            Parameters.put("TO_DATE",txtToDate.getText());
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/rptGoodsRtnCNDraft.rpt",Parameters,objData);                       
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    
    private void GenerateCreditNoteSummary() {
       String str=IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(0,8);
       String strfrom=IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(16,26);
       String strto=IntervalComboModel.getText(cmbIntervalCombo.getSelectedIndex()).substring(30,40);
        System.out.println(str);
        System.out.println(strfrom);
        System.out.println(strto);
        
        try {            
            TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
            
            objData.AddColumn("CNH_SUB_ACCOUNT_CODE");            
            objData.AddColumn("CNH_PARTY_NAME");                        
            objData.AddColumn("CNH_CREDIT_AMOUNT");                                    
            objData.AddColumn("CNH_INVOICE_AMOUNT");
            
            String strSQL="SELECT CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_CITY,CNH_PARTY_NAME,CNH_REASON_CODE,CNH_BOOK_CODE,CNH_PERCENT,ROUND(CNH_CREDIT_AMOUNT,0) AS CNH_CREDIT_AMOUNT,CNH_LINK_NO,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_INVOICE_AMOUNT FROM PRODUCTION.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID='"+str+"' AND CNH_TYPE='GOODSRTN' ORDER BY CNH_SUB_ACCOUNT_CODE";
            ResultSet  rsTemp =data.getResult(strSQL);                    
            rsTemp.first();            
            if(rsTemp.getRow()>0){
                while(!rsTemp.isAfterLast()){
                TReportWriter.SimpleDataProvider.TRow objRow=objData.newRow();               
                
                objRow.setValue("CNH_SUB_ACCOUNT_CODE", rsTemp.getString("CNH_SUB_ACCOUNT_CODE"));
                objRow.setValue("CNH_PARTY_NAME", rsTemp.getString("CNH_PARTY_NAME"));                                                
                objRow.setValue("CNH_CREDIT_AMOUNT", rsTemp.getString("CNH_CREDIT_AMOUNT"));
                objRow.setValue("CNH_INVOICE_AMOUNT", rsTemp.getString("CNH_INVOICE_AMOUNT"));
                objData.AddRow(objRow);                
                rsTemp.next(); 
                }
            }                            
                        
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();            
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            Parameters.put("FROM_DATE",strfrom);
            Parameters.put("TO_DATE",strto);
            objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/Production/rptGoodsRtnCNSummary.rpt",Parameters,objData);                       
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    public String getStrQuery1(String SubAccountCode,String CndNo) {
        
        String strQuery;
        if(!CndNo.trim().equals("")) {
            strQuery=" AND CND_NO ="+CndNo;
            //    if(!MainAccountCode.trim().equals("")) {
            //      strQuery=strQuery+" AND MAIN_ACCOUNT_CODE ="+MainAccountCode;
        }
        // }
        else {
            strQuery = " AND CND_NO ="+CndNo;
        }
        
        return strQuery;
    }
    
    private boolean Validate() {
        //Form level validations
        
        if(txtFromDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter from date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtFromDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid From Date in DD/MM/YYYY format.");
            return false;
        }
        
        if(txtToDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter To date");
            return false;
        } else if(!EITLERPGLOBAL.isDate(txtToDate.getText())) {
            JOptionPane.showMessageDialog(null,"Invalid To Date in DD/MM/YYYY format.");
            return false;
        }
        
        
        return true;
    }
    
    
    private void generateIntervalCombo(){
        IntervalComboModel=new EITLComboModel();
        IntervalComboModel.removeAllElements();
        cmbIntervalCombo.setModel(IntervalComboModel);
        try{
            ComboData combodata=new ComboData();
            combodata.Code=0;
            combodata.Text="Select Period";
            
            IntervalComboModel.addElement(combodata);
            ResultSet rs=data.getResult("SELECT DISTINCT CND_YEAR_MON_ID,CND_INTERVAL_CAPTION FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='GOODSRTN' ORDER BY CND_YEAR_MON_ID DESC ");
            while(!rs.isAfterLast()){
                combodata=new ComboData();
                combodata.Text=rs.getString("CND_YEAR_MON_ID");
                combodata.Text=rs.getString("CND_YEAR_MON_ID")+" : "+rs.getString("CND_INTERVAL_CAPTION");
                
                IntervalComboModel.addElement(combodata);
                rs.next();
            }
        }catch(SQLException e){e.printStackTrace();}
    }
    
    /*
    private void processLCDiscount(){
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            
            stmt.execute("TRUNCATE TABLE SALES.TMP_LC_CREDITNOTE");
            
            stmt.execute("INSERT INTO SALES.TMP_LC_CREDITNOTE SELECT A.VOUCHER_NO,VOUCHER_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,EFFECT,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,AMOUNT,GRN_NO,GRN_DATE,'0000-00-00',A.LINK_NO,'0000-00-00','0000-00-00','0000-00-00',MATCHED_DATE,MATCHED, '','','',    '','','',  '','','',   '','','',   '','','',   '','','',   '','','',  BOOK_CODE,'',0,0,0,0,0,'"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"',LC_OPENER_CODE FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B,(SELECT PARTY_CODE,LC_OPENER_CODE,MAX(EXP_DATE) AS EXP_DATE  FROM  DINESHMILLS.D_SAL_POLICY_LC_MASTER A GROUP BY PARTY_CODE,LC_OPENER_CODE) AS C WHERE A.VOUCHER_NO = B.VOUCHER_NO  AND B.CANCELLED =0 AND B.APPROVED =1 AND SUB_ACCOUNT_CODE =PARTY_CODE AND VOUCHER_DATE >='2015-01-01'  AND VOUCHER_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'JV' AND BOOK_CODE =21 AND MAIN_ACCOUNT_CODE =210027 AND VOUCHER_TYPE IN (11,9) AND MODULE_ID IN (80,69) AND EFFECT = 'C' LIMIT 10000000000");
            
            stmt.execute("INSERT INTO SALES.TMP_LC_CREDITNOTE SELECT A.DOC_NO,DOC_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,'C',INVOICE_NO,INVOICE_DATE,0,ADJUST_AMOUNT,VOUCHER_NO,VOUCHER_DATE,'0000-00-00',AGENT_SR,'0000-00-00','0000-00-00','0000-00-00','0000-00-00',0, '','','', '','','',    '','','',    '','','',    '','','',    '','','',    '','',SJ_NO, 21,'',0,0,0,0,0,'"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"',LC_OPENER_CODE FROM FINANCE.D_FIN_DR_ADJ_DETAIL A,FINANCE.D_FIN_DR_ADJ_HEADER B,(SELECT PARTY_CODE,LC_OPENER_CODE,MAX(EXP_DATE) AS EXP_DATE  FROM  DINESHMILLS.D_SAL_POLICY_LC_MASTER A  WHERE PARTY_CODE = LC_OPENER_CODE GROUP BY PARTY_CODE,LC_OPENER_CODE) AS C WHERE A.DOC_NO = B.DOC_NO  AND B.CANCELLED =0 AND B.APPROVED =1 AND SUB_ACCOUNT_CODE =PARTY_CODE AND DOC_DATE >='2015-01-01'  AND DOC_DATE <='"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"'  AND MAIN_ACCOUNT_CODE =210027 AND SUBSTRING(A.VOUCHER_NO,1,2) IN ('RC','CR') AND AGENT_SR !='' LIMIT 10000000000");
           
 
            stmt.execute("INSERT INTO SALES.TMP_LC_CREDITNOTE SELECT A.VOUCHER_NO,VOUCHER_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,EFFECT,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,AMOUNT,GRN_NO,GRN_DATE,'0000-00-00',A.LINK_NO,'0000-00-00','0000-00-00','0000-00-00',MATCHED_DATE,MATCHED, '','','',    '','','',  '','','',   '','','',   '','','',   '','','',   '','','',  BOOK_CODE,'',0,0,0,0,0,'"+EITLERPGLOBAL.formatDateDB(txtToDate.getText())+"',LC_OPENER_CODE FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B,(SELECT PARTY_CODE,LC_OPENER_CODE,MAX(EXP_DATE) AS EXP_DATE  FROM  DINESHMILLS.D_SAL_POLICY_LC_MASTER A GROUP BY PARTY_CODE,LC_OPENER_CODE) AS C WHERE A.VOUCHER_NO = B.VOUCHER_NO  AND B.CANCELLED =0 AND B.APPROVED =1  AND SUB_ACCOUNT_CODE =PARTY_CODE AND VOUCHER_DATE >='2015-01-01' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'RC' AND MAIN_ACCOUNT_CODE =210027 AND VOUCHER_TYPE IN (6) AND MODULE_ID IN (80) AND SUBSTRING(SUB_ACCOUNT_CODE,3,2) !=99 AND LC_OPENER_CODE != SUB_ACCOUNT_CODE AND EFFECT = 'C' LIMIT 10000000000");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_RC_VOUCHER = LCN_RC_VOUCHER WHERE SUBSTRING(LCN_VOUCHER_NO,1,2) ='RC'");
 
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE  SET LCN_DAY = EXTRACT(DAY FROM LCN_LAST_DATE), LCN_MONTH =EXTRACT(MONTH FROM LCN_LAST_DATE), LCN_YEAR = EXTRACT(YEAR FROM LCN_LAST_DATE)");
           
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_INTERVAL = CASE WHEN  LCN_DAY >= 1 AND LCN_DAY <=15 THEN '01' ELSE '02' END");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_AGENT = SUBSTRING(LCN_LINK_NO,1,2)");
            
            stmt.execute("UPDATE  SALES.TMP_LC_CREDITNOTE,DINESHMILLS.D_SAL_PARTY_MASTER SET LCN_LC_NAME = PARTY_NAME WHERE PARTY_CODE = LCN_LC_OPENER");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_NO = CONCAT(LCN_LC_OPENER,LCN_YEAR,LPAD(LCN_MONTH,2,0),LCN_INTERVAL)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_YEAR_MON_ID = CONCAT(LCN_YEAR,LPAD(LCN_MONTH,2,0),LCN_INTERVAL)");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_INTERVAL_CAPTION = CONCAT('FROM 01/',LPAD(LCN_MONTH,2,0),'/',LCN_YEAR,'  TO 15/',LPAD(LCN_MONTH,2,0),'/',LCN_YEAR) ,LCN_VALUE_DATE = CONCAT(LCN_YEAR,'-',LPAD(LCN_MONTH,2,0),'-15')  WHERE LCN_INTERVAL =1");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_INTERVAL_CAPTION = CONCAT('FROM 16/',LPAD(LCN_MONTH,2,0),'/',LCN_YEAR,'  TO ',SUBSTRING(LAST_DAY(LCN_LAST_DATE),9,2),'/',LPAD(LCN_MONTH,2,0),'/',LCN_YEAR) ,LCN_VALUE_DATE = LAST_DAY(LCN_LAST_DATE)  WHERE LCN_INTERVAL =2");

            stmt.execute("DELETE  FROM SALES.TMP_LC_CREDITNOTE WHERE LCN_LINK_NO IN (SELECT CND_LINK_NO FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE ='LC' )");
  
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET EXT1 = DATEDIFF(LCN_APPROVED_DATE,LCN_MATCHED_DATE) ");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET EXT2 = LCN_INVOICE_AMOUNT - LCN_AMOUNT");
  
 
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE,DINESHMILLS.D_COM_DOC_DATA SET LCN_CREATED_DATE = ACTION_DATE WHERE DOC_NO = LCN_VOUCHER_NO  AND TYPE ='C' AND STATUS ='A'");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE,DINESHMILLS.D_COM_DOC_DATA SET LCN_APPROVED_DATE = ACTION_DATE WHERE DOC_NO = LCN_VOUCHER_NO  AND TYPE ='A' AND STATUS ='F'");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE,FINANCE.D_FIN_VOUCHER_DETAIL SET LCN_SJ_VOUCHER = VOUCHER_NO,LCN_SJ_LINK= LINK_NO,LCN_MATCHED_DATE = MATCHED_DATE,LCN_MATCHED = MATCHED,LCN_INVOICE_AMOUNT = AMOUNT WHERE LCN_INVOICE_NO = INVOICE_NO AND SUBSTRING(VOUCHER_NO,1,2) ='SJ' AND  LCN_INVOICE_DATE = INVOICE_DATE  AND SUB_ACCOUNT_CODE = LCN_SUB_ACCOUNT_CODE");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE,FINANCE.D_FIN_VOUCHER_DETAIL SET LCN_MATCHED_DATE = MATCHED_DATE,LCN_MATCHED = MATCHED WHERE LCN_INVOICE_NO = INVOICE_NO AND SUBSTRING(LCN_VOUCHER_NO,1,2) ='AR' AND  LCN_INVOICE_DATE = INVOICE_DATE AND SUB_ACCOUNT_CODE = LCN_SUB_ACCOUNT_CODE");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE,FINANCE.D_FIN_VOUCHER_DETAIL SET LCN_RC_VALUE_DATE = VALUE_DATE WHERE LCN_RC_VOUCHER = VOUCHER_NO");
            
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE,FINANCE.D_FIN_VOUCHER_HEADER SET LCN_CHEQUE_DATE = CHEQUE_DATE, LCN_BANK_TR_CODE = BOOK_CODE WHERE LCN_RC_VOUCHER = VOUCHER_NO");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET  LCN_DAY_DIFF  = DATEDIFF(LCN_RC_VALUE_DATE,LCN_INVOICE_DATE)");

            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE  SET LCN_RC_VALUE_DATE = LCN_INVOICE_DATE WHERE LCN_RC_VALUE_DATE ='0000-00-00'");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE ,DINESHMILLS.D_SAL_INVOICE_HEADER SET LCN_CHARGE_CODE = PAYMENT_TERM_CODE WHERE LCN_INVOICE_NO  = INVOICE_NO AND  LCN_INVOICE_DATE  = INVOICE_DATE");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTE WHERE SUBSTRING(LCN_CHARGE_CODE,1,1) =9");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTE WHERE SUBSTRING(LCN_SUB_ACCOUNT_CODE,3,2) =99");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTE WHERE LCN_MATCHED_DATE ='0000-00-00'");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTE WHERE LCN_MATCHED =0");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTE WHERE  LCN_LINK_NO!=LCN_SJ_LINK");
            
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM80");
            
            stmt.execute("INSERT INTO  TEMP_DATABASE.TM80  SELECT LCN_LINK_NO,COUNT(*),MAX(LCN_RC_VALUE_DATE),'' FROM SALES.TMP_LC_CREDITNOTE GROUP BY LCN_LINK_NO");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80,SALES.TMP_LC_CREDITNOTE  SET COL04 =LCN_VOUCHER_NO WHERE COL01 = LCN_LINK_NO AND COL03 = LCN_RC_VALUE_DATE");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80,SALES.TMP_LC_CREDITNOTE  SET EXT3 =1,EXT4= COL02 WHERE COL01 = LCN_LINK_NO AND COL04 = LCN_VOUCHER_NO AND COL03 = LCN_RC_VALUE_DATE");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTE WHERE  EXT3 =' ' AND EXT4 =' '");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET  EXT3 =' ' ,EXT4 =' '");
            
            stmt.execute("TRUNCATE TABLE  TEMP_DATABASE.TM81");
            
            stmt.execute("INSERT INTO  TEMP_DATABASE.TM81 SELECT LCN_LINK_NO,COUNT(*),MAX(LCN_RC_VALUE_DATE),MAX(LCN_VOUCHER_NO),MAX(LCN_AMOUNT+0),'','' FROM SALES.TMP_LC_CREDITNOTE  GROUP BY LCN_LINK_NO LIMIT 10000000000");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM81,SALES.TMP_LC_CREDITNOTE  SET EXT3 =1,EXT4= COL02 WHERE COL01 = LCN_LINK_NO AND COL04 = LCN_VOUCHER_NO AND LCN_AMOUNT = COL05 AND COL03 = LCN_RC_VALUE_DATE");
            
            stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTE WHERE  EXT3 =' ' AND EXT4 =' '");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET  EXT3 =' ' ,EXT4 =' '");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE  SET LCN_RC_VALUE_DATE = LCN_INVOICE_DATE WHERE LCN_RC_VALUE_DATE ='0000-00-00' ");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE,FINANCE.D_FIN_VOUCHER_HEADER SET LCN_VOUCHER_TYPE = VOUCHER_TYPE  WHERE LCN_VOUCHER_NO = VOUCHER_NO");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE,FINANCE.D_FIN_VOUCHER_DETAIL SET  LCN_RC_VOUCHER_1 =GRN_NO ,LCN_RC_VOUCHER_DT_1 = VALUE_DATE WHERE VOUCHER_NO = LCN_VOUCHER_NO AND EFFECT ='D'  AND LCN_LC_OPENER = SUB_ACCOUNT_CODE");
            
            stmt.execute("TRUNCATE TABLE TEMP_DATABASE.TM80");
            
            stmt.execute("INSERT INTO TEMP_DATABASE.TM80 SELECT VOUCHER_NO,MAX(VALUE_DATE),'','' FROM SALES.TMP_LC_CREDITNOTE,FINANCE.D_FIN_VOUCHER_DETAIL  WHERE VOUCHER_NO = LCN_RC_VOUCHER_1  AND  LCN_VOUCHER_TYPE =9  AND MAIN_ACCOUNT_CODE = 210027 AND LCN_VOUCHER_NO != GRN_NO AND SUBSTRING(GRN_NO,1,2)  IN ('RC','CN','OP','M1')  AND EFFECT ='D'  GROUP BY VOUCHER_NO LIMIT 100000000");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80,FINANCE.D_FIN_VOUCHER_DETAIL   SET COL04 =GRN_NO WHERE COL01 = VOUCHER_NO AND COL02 = VALUE_DATE");
            
            stmt.execute("UPDATE TEMP_DATABASE.TM80,SALES.TMP_LC_CREDITNOTE  SET LCN_RC_VOUCHER_2 = COL04,LCN_RC_VOUCHER_DT_2 = COL02 WHERE COL01 =LCN_RC_VOUCHER_1");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET EXT4 = LCN_RC_VOUCHER,EXT3=LCN_RC_VALUE_DATE");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_RC_VOUCHER =LCN_RC_VOUCHER_1 ,LCN_RC_VALUE_DATE=LCN_RC_VOUCHER_DT_1  WHERE LCN_RC_VOUCHER !=  LCN_RC_VOUCHER_1  AND   LCN_RC_VOUCHER_1 !='0' AND   LCN_RC_VOUCHER_2 ='0'");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_RC_VOUCHER =LCN_RC_VOUCHER_2 ,LCN_RC_VALUE_DATE=LCN_RC_VOUCHER_DT_2  WHERE LCN_RC_VOUCHER !=  LCN_RC_VOUCHER_1  AND   LCN_RC_VOUCHER_1 !='0' AND   LCN_RC_VOUCHER_2 !='0'");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET  LCN_DAY_DIFF  = DATEDIFF(LCN_RC_VALUE_DATE,LCN_INVOICE_DATE)");
               
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET  LCN_PER  =  CASE WHEN LCN_DAY_DIFF <=15 THEN 6  WHEN LCN_DAY_DIFF >=16 AND LCN_DAY_DIFF <=30  THEN 3 WHEN LCN_DAY_DIFF >=31 AND LCN_DAY_DIFF <=45  THEN 0 WHEN LCN_DAY_DIFF >=46   THEN 0 END");
            
            stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTE SET LCN_CREDIT_AMOUNT = ROUND((LCN_PER*LCN_INVOICE_AMOUNT)/100,0)");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL SELECT DISTINCT 2,LCN_NO,'LC',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,'',LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_INVOICE_AMOUNT,'',LCN_PER,LCN_BANK_TR_CODE,'',LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,'',LCN_DEBIT_AMOUNT,LCN_CREDIT_AMOUNT,LCN_VOUCHER_NO,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,'' FROM SALES.TMP_LC_CREDITNOTE   ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_LINK_NO LIMIT 10000000");
            
            
            
            
            
            
            
             
            
            generateIntervalCombo();
            
        }catch(SQLException e){e.printStackTrace();}
        
    }
    */
    // private void DisplayData(){
    //   try {
    
    //      txtCheckList.setText(objVoucher.objPayment.getAttribute("VOUCHER_NO").getString());
    //DoNotEvaluate=true;
    //  }
    //   }
    //  catch(Exception e){
    
    //   }
    
    
    private void FormatGrid1(){
        DataModel=new EITLTableModel();
        Table.removeAll();
        Table.setModel(DataModel);
       // TableColumnModel ColModel=Table.getColumnModel();
        
        
        DataModel.addColumn("Id");
        DataModel.addColumn("Number");
        DataModel.addColumn("Type");
        DataModel.addColumn("Main Account Code");
        DataModel.addColumn("Main Code");
        DataModel.addColumn("Sub Account Code");
        DataModel.addColumn("City");
        DataModel.addColumn("Party Name");
        DataModel.addColumn("Invoice No");
        DataModel.addColumn("Invoice Date");
        DataModel.addColumn("Quality");
        DataModel.addColumn("Shade");
        DataModel.addColumn("Piece No");
        DataModel.addColumn("Gross Qty");
        DataModel.addColumn("Rate");
        DataModel.addColumn("Net Amount");
	DataModel.addColumn("Catg");
	DataModel.addColumn("Percent");
        DataModel.addColumn("Credit Amount");  
    }
    
    private void FormatGrid() {
        try{
            DataModel=new EITLTableModel();
            Table.removeAll();
            Table.setModel(DataModel);
            //TableColumnModel ColModel=Table.getColumnModel();
            Table.setAutoResizeMode(Table.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.LIGHT_GRAY);
            
            
            //DataModelDesc.addColumn("Sr.");    //0
            DataModel.addColumn("Party Name");    //1
            DataModel.addColumn("Party Code");    //2
            DataModel.addColumn("Piece No");    //3
            DataModel.addColumn("Prod Code");    //4
            DataModel.addColumn("Inv No");    //5
            DataModel.addColumn("Inv Date");    //6
            DataModel.addColumn("KGs");    //7
            DataModel.addColumn("Sqr Mtr");    //8
            DataModel.addColumn("Width");    //9
            DataModel.addColumn("Length");    //10
            DataModel.addColumn("Rate");    //11
            DataModel.addColumn("Inv Amt");    //12
            DataModel.addColumn("Unadj Dis%");    //15
            DataModel.addColumn("Unadj Seam%");    //18
            DataModel.addColumn("Disc Amt");    //19
            DataModel.addColumn("Remark1");    //20
            DataModel.addColumn("Remark2"); 
            DataModel.addColumn("SELECT"); 
            
            //DataModelDesc.TableReadOnly(true);
            //DataModelDesc.SetVariable(0,"SR_NO");  //0
            DataModel.SetVariable(0,"PARTY_NAME");    //1
            DataModel.SetVariable(1,"PARTY_CODE");    //2
            DataModel.SetVariable(2,"PIECE_NO");    //3
            DataModel.SetVariable(3,"PRODUCT_CODE");    //4
            DataModel.SetVariable(4,"INVOICE_NO");    //5
            DataModel.SetVariable(5,"INVOICE_DATE");    //6
            DataModel.SetVariable(6,"KG");    //7
            DataModel.SetVariable(7,"SQR_MTR");    //8
            DataModel.SetVariable(8,"WIDTH");    //9
            DataModel.SetVariable(9,"LENGTH");    //10
            DataModel.SetVariable(10,"RATE");    //11
            DataModel.SetVariable(11,"INV_BASIC_AMT");    //12
            DataModel.SetVariable(12,"WORK_DISC_PER");    //15
            DataModel.SetVariable(13,"SEAM_PER");    //18
            DataModel.SetVariable(14,"DISC_AMT");    //19
            DataModel.SetVariable(15,"D_REMARK1");    //20
            DataModel.SetVariable(16,"D_REMARK2");    //21
            DataModel.SetVariable(17,"SELECT");    //21
            
            DataModel.SetReadOnly(0);
            DataModel.SetReadOnly(1);
            DataModel.SetReadOnly(2);
            DataModel.SetReadOnly(3);
            DataModel.SetReadOnly(4);
            DataModel.SetReadOnly(5);
            DataModel.SetReadOnly(6);
            DataModel.SetReadOnly(7);
            DataModel.SetReadOnly(8);
            DataModel.SetReadOnly(9);
            DataModel.SetReadOnly(10);
            DataModel.SetReadOnly(11);
            DataModel.SetReadOnly(12);
            DataModel.SetReadOnly(13);
            DataModel.SetReadOnly(14);
            DataModel.SetReadOnly(15);
            DataModel.SetReadOnly(16);
            
            int ImportCol = DataModel.getColFromVariable("SELECT");
            Renderer.setCustomComponent(ImportCol, "CheckBox");
            JCheckBox aCheckBox = new JCheckBox();
            aCheckBox.setBackground(Color.WHITE);
            aCheckBox.setVisible(true);
            aCheckBox.setEnabled(true);
            aCheckBox.setSelected(false);
            Table.getColumnModel().getColumn(ImportCol).setCellEditor(new DefaultCellEditor(aCheckBox));
            Table.getColumnModel().getColumn(ImportCol).setCellRenderer(Renderer);

        }
        catch(Exception e) {
            
        }
        
    }
    
    
    private void GenerateGRCN(){
        String frmdt=EITLERPGLOBAL.formatDateDB(txtFromDate.getText().trim());
        String frmyr=txtFromDate.getText().trim().substring(6,10);
        String fyr=frmyr.substring(2,4);
        System.out.println(frmdt);
        System.out.println(frmyr);
        System.out.println(fyr);
        String todt=EITLERPGLOBAL.formatDateDB(txtToDate.getText().trim());
        String toyr=txtToDate.getText().trim().substring(6,10);
        String tyr=toyr.substring(2,4);
        System.out.println(todt);
        System.out.println(toyr);
        System.out.println(tyr);
        
        String lstno = getNextNo(toyr,frmyr);
        System.out.println(lstno);
        
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            stmt.execute("TRUNCATE TABLE PRODUCTION.TMP_LC_CREDITNOTETEST");
            
            //stmt.execute("INSERT INTO PRODUCTION.TMP_LC_CREDITNOTETEST (LCN_VOUCHER_NO,LCN_SUB_ACCOUNT_CODE,EXT1,EXT12,EXT13,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_AMOUNT,LCN_PER,EXT2,EXT4,LCN_UNADJ,LCN_YEAR_END,LCN_OEM,LCN_MAIN_ACCOUNT_CODE) SELECT CN_ID,CN_PARTY_CODE,CN_PARTY_NAME,CN_INV_PRODUCT_CODE,CN_INV_PIECE_NO,CN_INVOICE_NO,CN_INVOICE_DATE,CN_NET_BASIC,CN_OEM,CN_INV_WI_SQMTR,CN_GROSS_VALUE,CN_UNADJUSTED_RS,CN_YEAR_END_DISC_RS,CN_OEM_VALUE,210010 FROM PRODUCTION.FELT_CN_TEMP_DETAIL WHERE CN_ID LIKE 'OM%' AND CANCELED =0 AND APPROVED =1 AND CN_FROM_DATE >= '2015-04-01' AND CN_TO_DATE <= '`2016-03-31' ");
            stmt.execute("INSERT INTO PRODUCTION.TMP_LC_CREDITNOTETEST (LCN_VOUCHER_NO,LCN_SUB_ACCOUNT_CODE,EXT1,EXT12,EXT13,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_AMOUNT,LCN_PER,EXT2,EXT4,LCN_UNADJ,LCN_YEAR_END,LCN_OEM,LCN_GOODS_RETURN,LCN_COMP,LCN_MAIN_ACCOUNT_CODE) SELECT D.CN_ID,D.CN_PARTY_CODE,D.CN_PARTY_NAME,D.CN_INV_PRODUCT_CODE,D.CN_INV_PIECE_NO,D.CN_INVOICE_NO,D.CN_INVOICE_DATE,D.CN_INVOICE_AMT,D.CN_OEM,D.CN_INV_WI_SQMTR,D.CN_GROSS_VALUE,D.CN_UNADJUSTED_RS,D.CN_YEAR_END_DISC_RS,D.CN_OEM_VALUE,D.GOODS_RETURN_AMT,D.COMPENSATION_AMT,210010 FROM PRODUCTION.FELT_CN_TEMP_DETAIL D,PRODUCTION.FELT_CN_TEMP_HEADER H WHERE D.CN_ID=H.CN_ID AND D.CN_ID LIKE 'GR%' AND H.CANCELED =0 AND H.APPROVED =1 AND D.CN_FROM_DATE >= '" + frmdt + "' AND D.CN_TO_DATE <= '" + todt + "' AND D.CN_INVOICE_NO NOT IN (SELECT CND_INVOICE_NO FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE='GOODSRTN') "); //AND CND_INVOICE_DATE BETWEEN '" + frmdt + "' AND '" + todt + "') ");
            
            //stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_YEAR_MON_ID='OEM1516' WHERE LCN_INVOICE_DATE>='2015-04-01' AND LCN_INVOICE_DATE<='2016-03-31'");
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_YEAR_MON_ID=CONCAT('GR','"+fyr+"','"+tyr+"','"+lstno+"')"); //WHERE LCN_INVOICE_DATE>='" + frmdt + "' AND LCN_INVOICE_DATE<='" + todt + "'");
            
            //stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_INTERVAL='FROM 01/04/2015 TO 31/03/2016' WHERE LCN_INVOICE_DATE>='2015-04-01' AND LCN_INVOICE_DATE<='2016-03-31'");
            //stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_INTERVAL=CONCAT('FROM ','"+txtFromDate.getText().trim()+"',' TO ','"+txtToDate.getText().trim()+"')  WHERE LCN_INVOICE_DATE>='" + frmdt + "' AND LCN_INVOICE_DATE<='" + todt + "'");
            
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_DAY = EXTRACT(DAY FROM LCN_INVOICE_DATE), LCN_MONTH =EXTRACT(MONTH FROM LCN_INVOICE_DATE), LCN_YEAR = EXTRACT(YEAR FROM LCN_INVOICE_DATE)");
            
            //stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_INTERVAL_CAPTION = 'FROM 01/04/2015 TO 31/03/2016'");
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_INTERVAL_CAPTION = CONCAT('FROM ','"+txtFromDate.getText().trim()+"',' TO ','"+txtToDate.getText().trim()+"')  ");
            
            //stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_INTERVAL = '2016-2015'");
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_INTERVAL = CONCAT('"+frmyr+"','/','"+toyr+"') ");
            
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_NO = CONCAT(LCN_SUB_ACCOUNT_CODE,LCN_YEAR_MON_ID)");
            
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST SET LCN_LINK_NO = CONCAT(RIGHT(LCN_INVOICE_NO,4),'/',LCN_INTERVAL)");
            
            stmt.execute("UPDATE PRODUCTION.TMP_LC_CREDITNOTETEST,DINESHMILLS.D_SAL_PARTY_MASTER SET LCN_LC_NAME = SUBSTRING(PARTY_NAME,1,18)  WHERE PARTY_CODE = LCN_SUB_ACCOUNT_CODE");
            
            //stmt.execute("DELETE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = 'OEM1516'");
            stmt.execute("DELETE FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = CONCAT('GR','"+fyr+"','"+tyr+"','"+lstno+"')");
            
            //stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT,CND_BOOK_CODE,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_CREDIT_AMOUNT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PIECE_NO,CND_QUALITY,CND_EXT7,CND_GROSS_AMT,CND_EXT1,CND_EXT2,CND_EXT3) SELECT 1,LCN_NO,'OEM',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,LCN_INTERVAL,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_AMOUNT,LCN_CHARGE_CODE,LCN_PER,LCN_BANK_TR_CODE,LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,LCN_CREDIT_AMOUNT,EXT1,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,EXT13,EXT12,EXT2,EXT4,LCN_UNADJ,LCN_OEM,LCN_YEAR_END FROM PRODUCTION.TMP_LC_CREDITNOTETEST  WHERE LCN_YEAR_MON_ID = 'OEM1516' ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_INVOICE_NO LIMIT 10000000");
            stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_DETAIL (CND_ID,CND_NO,CND_TYPE,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_EFFECT,CND_LINK_NO,CND_LINK_YEAR,CND_INVOICE_NO,CND_INVOICE_DATE,CND_INVOICE_AMOUNT,CND_CHARGE_CODE,CND_PERCENT,CND_BOOK_CODE,CND_RC_VOUCHER_NO,CND_RC_VOUCHER_DATE,CND_DAYS,CND_CREDIT_AMOUNT,CND_FIN_VOUCHER_NO,CND_FIN_VOUCHER_DATE,CND_FIN_ELIGIBLE,CND_LC_OPENER,CND_VALUE_DATE,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PIECE_NO,CND_QUALITY,CND_EXT7,CND_GROSS_AMT,CND_EXT1,CND_EXT2,CND_EXT3,CND_EXT4,CND_EXT5) SELECT 1,LCN_NO,'GOODSRTN',LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_EFFECT,LCN_LINK_NO,LCN_INTERVAL,LCN_INVOICE_NO,LCN_INVOICE_DATE,LCN_AMOUNT,LCN_CHARGE_CODE,LCN_PER,LCN_BANK_TR_CODE,LCN_RC_VOUCHER,LCN_RC_VALUE_DATE,LCN_DAY_DIFF,LCN_GOODS_RETURN,EXT1,LCN_VOUCHER_DATE,'Y',LCN_LC_OPENER,LCN_RC_VALUE_DATE,LCN_LC_NAME,LCN_YEAR_MON_ID,LCN_INTERVAL_CAPTION,EXT13,EXT12,EXT2,EXT4,LCN_UNADJ,LCN_OEM,LCN_YEAR_END,LCN_GOODS_RETURN,LCN_COMP FROM PRODUCTION.TMP_LC_CREDITNOTETEST  WHERE LCN_YEAR_MON_ID = CONCAT('GR','"+fyr+"','"+tyr+"','"+lstno+"') ORDER BY LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_INVOICE_NO LIMIT 10000000");
            
            //stmt.execute("DELETE FROM PRODUCTION.D_CREDIT_NOTE_HEADER  WHERE CNH_YEAR_MON_ID = 'OEM1516'");
            stmt.execute("DELETE FROM PRODUCTION.D_CREDIT_NOTE_HEADER  WHERE CNH_YEAR_MON_ID = CONCAT('GR','"+fyr+"','"+tyr+"','"+lstno+"')");
            
            //stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE) SELECT CND_ID,CND_NO,CND_TYPE,435132,210010,CND_SUB_ACCOUNT_CODE,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_NET_AMOUNT),CND_PERCENT,SUM(CND_EXT2),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-17' FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  ='OEM1516' GROUP BY CND_ID,CND_NO,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT LIMIT 1000000000000");
            stmt.execute("INSERT INTO PRODUCTION.D_CREDIT_NOTE_HEADER (CNH_ID,CNH_NO,CNH_TYPE,CNH_MAIN_ACCOUNT_CODE,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_PARTY_NAME,CNH_EFFECT,CNH_INVOICE_AMOUNT,CNH_PERCENT,CNH_CREDIT_AMOUNT,CNH_YEAR_MON_ID,CNH_INTERVAL_CAPTION,CNH_BOOK_CODE,CNH_LINK_NO,CNH_REASON_CODE,CNH_REMARKS) SELECT CND_ID,CND_NO,CND_TYPE,305080,210010,CND_SUB_ACCOUNT_CODE,CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),CND_PERCENT,ROUND(SUM(CND_EXT4)),CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-17',CND_LINK_NO,'01',CONCAT('Goods Return Discount - ',CND_INTERVAL_CAPTION) FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID  =CONCAT('GR','"+fyr+"','"+tyr+"','"+lstno+"') GROUP BY CND_ID,CND_NO,CND_MAIN_ACCOUNT_NAME,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,CND_PERCENT LIMIT 1000000000000");
            
            //stmt.execute("UPDATE DINESHMILLS.D_SAL_PARTY_MASTER,PRODUCTION.D_CREDIT_NOTE_HEADER SET CNH_PARTY_NAME = PARTY_NAME,CNH_CITY = CITY_ID WHERE CNH_SUB_ACCOUNT_CODE = PARTY_CODE AND CNH_YEAR_MON_ID = 'OEM1516' ");
            stmt.execute("UPDATE DINESHMILLS.D_SAL_PARTY_MASTER,PRODUCTION.D_CREDIT_NOTE_HEADER SET CNH_PARTY_NAME = PARTY_NAME,CNH_CITY = CITY_ID WHERE CNH_SUB_ACCOUNT_CODE = PARTY_CODE AND CNH_YEAR_MON_ID = CONCAT('GR','"+fyr+"','"+tyr+"','"+lstno+"') ");
            
            
//            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_HEADER1 WHERE CNH_TYPE ='EWR'  AND CNH_YEAR_MON_ID  ='EWR2014'");
//            
//            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER1 (CNH_ID,CNH_TYPE,CNH_YEAR_MON_ID,CNH_MAIN_CODE,CNH_SUB_ACCOUNT_CODE,CNH_INVOICE_AMOUNT,CNH_INTERVAL_CAPTION,CNH_NO,CNH_PARTY_NAME,CNH_CITY,CNH_MAIN_ACCOUNT_CODE,CNH_TARGET_AMOUNT,CNH_BOOK_CODE,CNH_REASON_CODE) SELECT SCHEME_ID,'EWR',CONCAT('EWR',SCHEME_SEASON_ID),210027,A.PARTY_CODE,ROUND(SUM(B.NET_AMOUNT),2),CONCAT('FROM 01/01/',SCHEME_SEASON_ID, '  TO 31/12/',SCHEME_SEASON_ID),CONCAT(A.PARTY_CODE,CONCAT('EWR',SCHEME_SEASON_ID)),P.PARTY_NAME,CITY_ID,435187,2500000,'15','34'FROM DINESHMILLS.D_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_INVOICE_DETAIL B,SALES.D_SAL_SCHEME_MASTER E,DINESHMILLS.D_SAL_PARTY_MASTER P WHERE A.INVOICE_TYPE =1 AND A.PARTY_CODE IN(279965,619913,300153,300170,300156,311912,319907,510501,559901,670201,719907,739901) AND P.PARTY_CODE  = A.PARTY_CODE  AND B.QUALITY_NO NOT LIKE '72%' AND A.INVOICE_DATE=B.INVOICE_DATE AND A.INVOICE_NO = B.INVOICE_NO AND A.CANCELLED =0 AND A.APPROVED =1 AND A.INVOICE_DATE >= SCHEME_START  AND A.INVOICE_DATE <= SCHEME_END AND SCHEME_ID=31 AND SCHEME_SEASON_ID='2014' GROUP BY SCHEME_ID,'EWR',CONCAT('EWR',SCHEME_SEASON_ID),A.PARTY_CODE,CONCAT('FROM 01/01/',SCHEME_SEASON_ID, '  TO 31/12/',SCHEME_SEASON_ID),CONCAT(A.PARTY_CODE,CONCAT('EWR',SCHEME_SEASON_ID))");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_TARGET_AMOUNT = 1250000 WHERE CNH_SUB_ACCOUNT_CODE IN (719907)");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_PERCENT = 2.5 WHERE CNH_INVOICE_AMOUNT >= CNH_TARGET_AMOUNT");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 SET CNH_PERCENT =0  WHERE CNH_INVOICE_AMOUNT < CNH_TARGET_AMOUNT");
//            
//            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='EWR'  AND CND_YEAR_MON_ID  ='EWR2014'");
//            
//            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_DETAIL1 (CND_ID,CND_TYPE,CND_YEAR_MON_ID,CND_MAIN_ACCOUNT_CODE,CND_SUB_ACCOUNT_CODE,CND_QUALITY,CND_SHADE,CND_PIECE_NO,CND_FLAG,CND_GROSS_QTY,CND_GROSS_AMT,CND_NET_QTY,CND_NET_AMOUNT,CND_INVOICE_AMOUNT,CND_LINK_NO,CND_INVOICE_NO,CND_INVOICE_DATE,CND_RATE,CND_DISC_GIVEN,CND_DISC_ADDN,CND_GATEPASS_NO,CND_GATEPASS_DATE,CND_BALENO,CND_CATG,CND_TRANSPORTER_CODE,CND_CHARGE_CODE,CND_INTERVAL_CAPTION,CND_NO,CND_QLTY_IND,CND_WH_CD) SELECT SCHEME_ID,'EWR',CONCAT('EWR',SCHEME_SEASON_ID),210027,A.PARTY_CODE,B.QUALITY_NO/10  AS QUALITY_NO,B.PATTERN_CODE AS SHADE,B.PIECE_NO,B.FLAG_DEF_CODE,GROSS_QTY,GROSS_AMOUNT,NET_QTY,B.NET_AMOUNT,B.NET_AMOUNT,CONCAT(AGENT_LAST_INVOICE,'/',A.AGENT_SR_NO,'/',FIN_YEAR_FROM,'-',FIN_YEAR_TO),A.INVOICE_NO,A.INVOICE_DATE,B.RATE,DEF_DISC_PER,ADDL_DISC_PER,A.GATEPASS_NO,A.GATEPASS_DATE,A.BALE_NO,'',TRANSPORTER_CODE,CONCAT(0,SUBSTRING(PAYMENT_TERM_CODE,1,1)),CONCAT('FROM 01/01/',SCHEME_SEASON_ID, '  TO 31/12/',SCHEME_SEASON_ID),CONCAT(A.PARTY_CODE,CONCAT('EWR',SCHEME_SEASON_ID)),A.QUALITY_INDICATOR, A.WAREHOUSE_CODE FROM DINESHMILLS.D_SAL_INVOICE_HEADER A,DINESHMILLS.D_SAL_INVOICE_DETAIL B,SALES.D_SAL_SCHEME_MASTER E WHERE A.INVOICE_TYPE =1 AND A.PARTY_CODE IN(279965,619913,300153,300170,300156,311912,319907,510501,559901,670201,719907,739901) AND B.QUALITY_NO NOT LIKE '72%' AND A.INVOICE_DATE=B.INVOICE_DATE AND A.INVOICE_NO = B.INVOICE_NO AND A.CANCELLED =0 AND A.APPROVED =1 AND A.INVOICE_DATE >= SCHEME_START  AND A.INVOICE_DATE <= SCHEME_END AND SCHEME_ID=31 AND SCHEME_SEASON_ID='2014'");
//            
//            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_FIN_VOUCHER_NO =CONCAT(3,SUBSTRING(CND_QUALITY,2,5))   WHERE CND_TYPE ='EWR' AND CND_YEAR_MON_ID = 'EWR2014'");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 A,DINESHMILLS.D_SAL_PRICE_LIST_HEADER H,DINESHMILLS.D_SAL_PRICE_LIST_DETAIL D SET CND_EXT1 ='PL' WHERE D.PRICE_LIST_NO = H.PRICE_LIST_NO AND CND_INVOICE_DATE >=EFFECTIVE_DATE_FROM AND  CND_INVOICE_DATE <=EFFECTIVE_DATE_TO AND CND_FIN_VOUCHER_NO = QUALITY_ID AND CND_TYPE ='EWR' AND CND_YEAR_MON_ID = 'EWR2014'");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CATG = 'A' WHERE CND_TYPE ='EWR'  AND CND_YEAR_MON_ID  ='EWR2014' ");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CATG = 'A' WHERE CND_TYPE ='EWR'  AND CND_YEAR_MON_ID  ='EWR2014'   AND CND_EXT1 !='PL'  AND CND_QLTY_IND =0 AND CND_WH_CD =1");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CATG = 'A' WHERE CND_TYPE ='EWR'  AND CND_YEAR_MON_ID  ='EWR2014'   AND CND_EXT1 ='PL'");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CATG = 'E' WHERE CND_TYPE ='EWR'  AND CND_YEAR_MON_ID  ='EWR2014'   AND CND_WH_CD =9 ");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CATG = 'E' WHERE CND_TYPE ='EWR'  AND CND_YEAR_MON_ID  ='EWR2014'   AND CND_DISC_GIVEN NOT IN (3,10,13,0)");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CATG = 'E' WHERE CND_TYPE ='EWR'  AND CND_YEAR_MON_ID  ='EWR2014'   AND CND_DISC_GIVEN  IN (3,10,13,0)  AND CND_DISC_ADDN !=0");
//            
//            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1,SALES.PARTY_ADD_EXCLUDE_FLAG  SET  CND_CATG ='E'WHERE CND_SUB_ACCOUNT_CODE+0 = PARTY_CODE +0 AND RATE+0 =  CND_RATE+0 AND CND_FIN_VOUCHER_NO+0 = QLTY_CODE+0 AND DIFF_PER = CND_DISC_GIVEN AND ADD_PER = CND_DISC_ADDN AND CND_TYPE ='EWR' AND CND_YEAR_MON_ID  ='EWR2014'");
//            
//            stmt.execute("UPDATE  SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CATG ='A' WHERE CND_CATG !='E'  AND CND_TYPE ='EWR' AND CND_YEAR_MON_ID  ='EWR2014'");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 H, SALES.D_CREDIT_NOTE_DETAIL1 D SET  CND_PERCENT =CNH_PERCENT WHERE CND_TYPE ='EWR' AND CND_TYPE = CNH_TYPE AND  CND_YEAR_MON_ID  =  CNH_YEAR_MON_ID  AND CND_YEAR_MON_ID  ='EWR2014' AND CND_CATG  ='A'");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1 H, SALES.D_CREDIT_NOTE_DETAIL1 D SET  CND_PERCENT =0 WHERE CND_TYPE ='EWR' AND CND_TYPE = CNH_TYPE AND  CND_YEAR_MON_ID  =  CNH_YEAR_MON_ID  AND CND_YEAR_MON_ID  ='EWR2014' AND CND_CATG  ='E'");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_DETAIL1 SET CND_CREDIT_AMOUNT = (CND_NET_AMOUNT*CND_PERCENT/100)  WHERE  CND_YEAR_MON_ID  ='EWR2014'");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1,( SELECT CND_NO ,SUM(CND_INVOICE_AMOUNT) AS INVAMT,ROUND(SUM(CND_CREDIT_AMOUNT),0) AS CNAMT,SUM(CND_GROSS_QTY) AS GRQTY,SUM(CND_GROSS_AMT) AS GRAMT,SUM(CND_NET_QTY) AS NETQTY,SUM(CND_NET_AMOUNT)  AS NETAMT FROM SALES.D_CREDIT_NOTE_DETAIL1 WHERE CND_TYPE ='EWR'  AND CND_YEAR_MON_ID  ='EWR2014'  GROUP BY CND_NO ) AS A   SET CNH_CREDIT_AMOUNT = CNAMT,CNH_GROSS_QTY = GRQTY,CNH_GROSS_AMT=GRAMT,CNH_NET_QTY = NETQTY , CNH_NET_AMT  = NETAMT WHERE CND_NO = CNH_NO");
//            
//            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER1,FINANCE.D_FIN_GL SET CNH_MAIN_ACCOUNT_NAME = ACCOUNT_NAME WHERE MAIN_ACCOUNT_CODE = CNH_MAIN_ACCOUNT_CODE AND  CNH_TYPE ='EWR'  AND CNH_YEAR_MON_ID  ='EWR2014'");
//            
//            
//            
//            
            
            
            
            
            
            
            
            generateIntervalCombo();
            
        }catch(SQLException e){e.printStackTrace();}
        
    }
    
  /*
    private void LCCreditDraftReport() {
        try {
           
            
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
            
            stmt.execute("DELETE FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE='LC' ");
            
            stmt.execute("INSERT INTO SALES.D_CREDIT_NOTE_HEADER SELECT CND_ID,CND_NO,CND_TYPE,437213,210027,CND_LC_OPENER,'',CND_MAIN_ACCOUNT_NAME,'D',SUM(CND_INVOICE_AMOUNT),'','','0000-00-00','','',0,SUM(CND_CREDIT_AMOUNT),'','0000-00-00','','','',CND_YEAR_MON_ID,CND_INTERVAL_CAPTION,'TR-14','','' FROM SALES.D_CREDIT_NOTE_DETAIL WHERE CND_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CND_TYPE = 'LC'  GROUP BY CND_ID,CND_NO,CND_TYPE,CND_LC_OPENER,CND_YEAR_MON_ID,CND_INTERVAL_CAPTION LIMIT 1000000000000");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER SET CNH_MAIN_ACCOUNT_CODE =435091 WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = 'LC' AND CNH_SUB_ACCOUNT_CODE NOT IN (308801,278901)");
         
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER,DINESHMILLS.D_SAL_PARTY_MASTER SET CNH_PARTY_NAME = PARTY_NAME,CNH_CITY = CITY_ID  WHERE CNH_SUB_ACCOUNT_CODE = PARTY_CODE AND CNH_MAIN_CODE = MAIN_ACCOUNT_CODE AND  CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = 'LC' ");
            
            stmt.execute("UPDATE SALES.D_CREDIT_NOTE_HEADER,FINANCE.D_FIN_GL SET CNH_EXT1 = ACCOUNT_NAME  WHERE CNH_MAIN_ACCOUNT_CODE = MAIN_ACCOUNT_CODE  AND  CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE = 'LC' ");
            
           
            
            TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("CNH_NO");
            objReportData.AddColumn("CNH_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_MAIN_CODE");
            objReportData.AddColumn("CNH_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("CNH_PARTY_NAME");
            objReportData.AddColumn("CNH_INVOICE_AMOUNT");
            objReportData.AddColumn("CNH_LINK_NO");
            objReportData.AddColumn("CNH_CREDIT_AMOUNT");
            objReportData.AddColumn("CNH_BOOK_CODE");
            objReportData.AddColumn("CNH_EXT1");
            
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("CNH_NO","");
            objOpeningRow.setValue("CNH_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_MAIN_CODE","");
            objOpeningRow.setValue("CNH_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("CNH_PARTY_NAME","");
            objOpeningRow.setValue("CNH_INVOICE_AMOUNT","");
            objOpeningRow.setValue("CNH_LINK_NO","");
            objOpeningRow.setValue("CNH_CREDIT_AMOUNT","");
            objOpeningRow.setValue("CNH_BOOK_CODE","");
            objOpeningRow.setValue("CNH_EXT1","");
           
            
            String strSQL = "SELECT * FROM SALES.D_CREDIT_NOTE_HEADER WHERE CNH_YEAR_MON_ID = SUBSTRING('" +txtInterval.getText()+"',1,8) AND CNH_TYPE='LC' ORDER BY CNH_SUB_ACCOUNT_CODE ";
            System.out.println(strSQL);
            
         
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("CNH_NO",UtilFunctions.getString(rsTmp,"CNH_NO",""));
                    objRow.setValue("CNH_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_MAIN_CODE",UtilFunctions.getString(rsTmp,"CNH_MAIN_CODE",""));
                    objRow.setValue("CNH_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"CNH_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("CNH_PARTY_NAME",UtilFunctions.getString(rsTmp,"CNH_PARTY_NAME",""));
                    objRow.setValue("CNH_INVOICE_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_INVOICE_AMOUNT",""));
                    // objRow.setValue("CND_INVOICE_DATE",EITLERPGLOBAL.formatDate(UtilFunctions.getString(rsTmp,"CND_INVOICE_DATE","")));
                    objRow.setValue("CNH_LINK_NO",UtilFunctions.getString(rsTmp,"CNH_LINK_NO",""));
                    objRow.setValue("CNH_CREDIT_AMOUNT",UtilFunctions.getString(rsTmp,"CNH_CREDIT_AMOUNT",""));
                    objRow.setValue("CNH_BOOK_CODE",UtilFunctions.getString(rsTmp,"CNH_BOOK_CODE",""));
                    objRow.setValue("CNH_EXT1",UtilFunctions.getString(rsTmp,"CNH_EXT1",""));
                    
                    
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptLCDiscountcd.rpt",Parameters,objReportData);
            
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    
    
    */
   /*    
    private void ControlLCDiscount()
    {
        try{
            Connection conn=data.getConn();
            Statement stmt=conn.createStatement();
            
         stmt.execute("TRUNCATE TABLE SALES.TMP_LC_CREDITNOTETEST");
            
         stmt.execute("INSERT INTO SALES.TMP_LC_CREDITNOTETEST SELECT A.VOUCHER_NO,VOUCHER_DATE,MAIN_ACCOUNT_CODE,SUB_ACCOUNT_CODE,EFFECT,INVOICE_NO,INVOICE_DATE,INVOICE_AMOUNT,AMOUNT,GRN_NO,GRN_DATE, '0000-00-00',A.LINK_NO,'0000-00-00','0000-00-00','0000-00-00',MATCHED_DATE,MATCHED,  '','','',    '','','',    '','','',    '','','',    '','','',    '','','',    '','','',  BOOK_CODE,'',0,0,0,0,0,LC_OPENER_CODE FROM FINANCE.D_FIN_VOUCHER_DETAIL A,FINANCE.D_FIN_VOUCHER_HEADER B,(SELECT PARTY_CODE,LC_OPENER_CODE,MAX(EXP_DATE) AS EXP_DATE  FROM  DINESHMILLS.D_SAL_POLICY_LC_MASTER A GROUP BY PARTY_CODE,LC_OPENER_CODE) AS C WHERE A.VOUCHER_NO = B.VOUCHER_NO AND B.CANCELLED =0 AND B.APPROVED =1 AND SUB_ACCOUNT_CODE =PARTY_CODE AND VOUCHER_DATE >='2015-01-01' AND SUBSTRING(A.VOUCHER_NO,1,2) = 'SJ' AND MAIN_ACCOUNT_CODE =210027 LIMIT 10000000000");
            
         stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE SUBSTRING(LCN_SUB_ACCOUNT_CODE,3,2) = 99");
            
         stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST ,DINESHMILLS.D_SAL_INVOICE_HEADER SET LCN_CHARGE_CODE = PAYMENT_TERM_CODE WHERE LCN_INVOICE_NO  = INVOICE_NO AND  LCN_INVOICE_DATE  = INVOICE_DATE");
            
         stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE SUBSTRING(LCN_CHARGE_CODE,1,1)  IN (1,2,3,4,5,6,8,9)");
            
         stmt.execute("UPDATE SALES.TMP_LC_CREDITNOTETEST,SALES.D_CREDIT_NOTE_DETAIL SET LCN_RC_VOUCHER = CND_RC_VOUCHER_NO,LCN_YEAR_MON_ID = CND_YEAR_MON_ID  WHERE LCN_LINK_NO = CND_LINK_NO");
            
         stmt.execute("UPDATE  SALES.TMP_LC_CREDITNOTETEST,DINESHMILLS.D_SAL_PARTY_MASTER SET LCN_LC_NAME = PARTY_NAME WHERE PARTY_CODE = LCN_SUB_ACCOUNT_CODE");
  
         stmt.execute("UPDATE  SALES.TMP_LC_CREDITNOTETEST,DINESHMILLS.D_SAL_PARTY_MASTER SET EXT1 = PARTY_NAME WHERE PARTY_CODE = LCN_LC_OPENER");
         
   
         stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE LCN_YEAR_MON_ID!=''");
            
         stmt.execute("DELETE FROM SALES.TMP_LC_CREDITNOTETEST WHERE LCN_INVOICE_DATE <'2015-04-01' AND LCN_MATCHED =1");
         
                
     
          TReportWriter.SimpleDataProvider.TRow objRow;
            TReportWriter.SimpleDataProvider.TTable objReportData=new TReportWriter.SimpleDataProvider.TTable();
            
            objReportData.AddColumn("LCN_NO");
            objReportData.AddColumn("LCN_MAIN_ACCOUNT_CODE");
            objReportData.AddColumn("LCN_SUB_ACCOUNT_CODE");
            objReportData.AddColumn("LCN_LC_NAME");
            objReportData.AddColumn("EXT1");
             objReportData.AddColumn("LCN_LINK_NO");
            objReportData.AddColumn("LCN_INVOICE_NO");
            objReportData.AddColumn("LCN_INVOICE_DATE");
            objReportData.AddColumn("LCN_LC_OPENER");
            objReportData.AddColumn("LCN_AMOUNT");
            objReportData.AddColumn("LCN_MATCHED");
            objReportData.AddColumn("LCN_MATCHED_DATE");
    
            
            TReportWriter.SimpleDataProvider.TRow objOpeningRow=objReportData.newRow();
            
            objOpeningRow.setValue("LCN_NO","");
            objOpeningRow.setValue("LCN_MAIN_ACCOUNT_CODE","");
            objOpeningRow.setValue("LCN_SUB_ACCOUNT_CODE","");
            objOpeningRow.setValue("LCN_LC_NAME","");
            objOpeningRow.setValue("EXT1","");
            objOpeningRow.setValue("LCN_LC_OPENER","");
            objOpeningRow.setValue("LCN_LINK_NO","");
            objOpeningRow.setValue("LCN_INVOICE_NO","");
            objOpeningRow.setValue("LCN_INVOICE_DATE","");
            objOpeningRow.setValue("LCN_AMOUNT","");
            objOpeningRow.setValue("LCN_MATCHED","");
            objOpeningRow.setValue("CNH_MATCHED_DATE","");
           
            
            String strSQL = "SELECT LCN_MAIN_ACCOUNT_CODE,LCN_SUB_ACCOUNT_CODE,LCN_LC_NAME,LCN_LINK_NO,LCN_INVOICE_DATE,LCN_INVOICE_NO,LCN_LC_OPENER ,EXT1,LCN_AMOUNT,LCN_MATCHED,LCN_MATCHED_DATE,LCN_NO FROM SALES.TMP_LC_CREDITNOTETEST ORDER BY LCN_LC_OPENER,LCN_SUB_ACCOUNT_CODE,LCN_INVOICE_DATE,LCN_LINK_NO";
            System.out.println(strSQL);
            
         
            
            ResultSet rsTmp=data.getResult(strSQL);
            rsTmp.first();
            
            int Counter = 0;
            
            if(rsTmp.getRow()>0) {
                while(!rsTmp.isAfterLast()) {
                    Counter ++;
                    objRow=objReportData.newRow();
                    
                    objRow.setValue("LCN_NO",UtilFunctions.getString(rsTmp,"LCN_NO",""));
                    objRow.setValue("LCN_MAIN_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"LCN_MAIN_ACCOUNT_CODE",""));
                    objRow.setValue("LCN_SUB_ACCOUNT_CODE",UtilFunctions.getString(rsTmp,"LCN_SUB_ACCOUNT_CODE",""));
                    objRow.setValue("LCN_LC_NAME",UtilFunctions.getString(rsTmp,"LCN_LC_NAME",""));
                    objRow.setValue("LCN_LC_OPENER",UtilFunctions.getString(rsTmp,"LCN_LC_OPENER",""));
                    objRow.setValue("EXT1",UtilFunctions.getString(rsTmp,"EXT1",""));
  
                    objRow.setValue("LCN_LINK_NO",UtilFunctions.getString(rsTmp,"LCN_LINK_NO",""));
                    objRow.setValue("LCN_INVOICE_NO",UtilFunctions.getString(rsTmp,"LCN_INVOICE_NO",""));
                    objRow.setValue("LCN_INVOICE_DATE",UtilFunctions.getString(rsTmp,"LCN_INVOICE_DATE",""));
                    objRow.setValue("LCN_AMOUNT",UtilFunctions.getString(rsTmp,"LCN_AMOUNT",""));
                    objRow.setValue("LCN_MATCHED",UtilFunctions.getString(rsTmp,"LCN_MATCHED",""));
                    objRow.setValue("LCN_MATCHED_DATE",UtilFunctions.getString(rsTmp,"LCN_MATCHED_DATE",""));
                    
                    
                    
                    objReportData.AddRow(objRow);
                    
                    rsTmp.next();
                }
            }
            
            int Comp_ID = EITLERPGLOBAL.gCompanyID;
            HashMap Parameters=new HashMap();
            //   Parameters.put("CND_SUB_ACCOUNT_CODE",Integer.toString(Comp_ID));
            // Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            // Parameters.put("FROM_DATE",txtFromDate.getText().trim());
            // Parameters.put("TO_DATE",txtToDate.getText().trim());
            Parameters.put("SYS_DATE",EITLERPGLOBAL.getCurrentDate());
            
            
         objEngine.PreviewReport("http://"+EITLERPGLOBAL.HostIP+"/EITLERP/Reports/sales/rptLCCONTROL.rpt",Parameters,objReportData);
            
             
         
         
         
         
         
         
         
         
         
         
         
         
         
         
                        
        }catch(SQLException e){e.printStackTrace();}
        
    }
    */
   /*
    private void SetData() {
        
        if(txtVoucherNo.isEnabled()) {
            objVoucher.UseSpecificVoucherNo=true;
            objVoucher.SpecificVoucherNo=txtVoucherNo.getText();
        }
        else {
            objVoucher.UseSpecificVoucherNo=false;
        }
        objVoucher.setAttribute("VOUCHER_NO",txtVoucherNo.getText());
    }
    */

     public String getNextNo(String toyr,String frmyr) {
        Connection tmpConn;
        Statement tmpStmt;
        ResultSet rsTmp;
        String strSQL="";
        String strNewNo="";
        
        int lnNewNo=0;
        String lno="";
        try {
            tmpConn=data.getConn();
            tmpStmt=tmpConn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            //strSQL="SELECT LAST_USED_NO,PADDING_BY,NO_LENGTH FROM D_COM_FIRSTFREE WHERE COMPANY_ID="+pCompanyID+" AND MODULE_ID="+pModuleID+" AND PREFIX_CHARS='"+pPrefix+"' AND SUFFIX_CHARS='"+pSuffix+"'";
            //strSQL="SELECT LAST_USED_NO,PADDING_BY,NO_LENGTH,PREFIX_CHARS,SUFFIX_CHARS FROM D_COM_FIRSTFREE WHERE COMPANY_ID="+pCompanyID+" AND MODULE_ID="+pModuleID+" AND FIRSTFREE_NO="+pFirstFreeNo;
            //strSQL="SELECT CN_NO FROM PRODUCTION.CN_PARAMETER";
            strSQL="SELECT MAX(CND_YEAR_MON_ID) AS L_NO FROM PRODUCTION.D_CREDIT_NOTE_DETAIL WHERE CND_TYPE='GOODSRTN' AND CND_LINK_YEAR=CONCAT('"+frmyr+"','/','"+toyr+"')";
            rsTmp=tmpStmt.executeQuery(strSQL);
            
            rsTmp.first();
            if(rsTmp.getRow()>0) {
                
                lno=rsTmp.getString("L_NO").substring(6,8);
                lnNewNo=Integer.parseInt(lno)+1;
                strNewNo=EITLERPGLOBAL.Padding(Integer.toString(lnNewNo),2,"0");
                
                //data.Execute("UPDATE PRODUCTION.CN_PARAMETER SET CN_NO="+lnNewNo);
                
                
                tmpStmt.close();
                rsTmp.close();
           return strNewNo;     
                
            }
            else {
                return "01";
            }
        }
        catch(Exception e) {
            return "01";
        }
        
    }
    
     private void getDept(){
    
        if(EITLERPGLOBAL.gUserDeptID==76 || EITLERPGLOBAL.gUserDeptID==0)
        {
            txtFromDate.setEnabled(true);
            txtToDate.setEnabled(false);
            txtToDate.setVisible(true);
            Processcash.setEnabled(true);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
            jButton6.setEnabled(true);
            
        }
        else
        {
            txtFromDate.setEnabled(false);
            txtToDate.setEnabled(false);
            txtToDate.setVisible(true);
            Processcash.setEnabled(false);
            jButton5.setEnabled(true);
            jButton4.setEnabled(true);       
            jButton3.setEnabled(true);
            jButton6.setEnabled(false);       
        }
    }
   
    
}
