/*
 * frmFeltPartyExtraDetail.java
 *
 * Created on June 15, 2013, 1:08 PM
 */

package EITLERP.Production.FeltPartyExtraDetail;

/**
 * @author  VIVEK KUMAR
 */

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumnModel;
import javax.swing.event.TableModelListener;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.text.JTextComponent;
import java.util.HashMap;

import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.EITLERPGLOBAL;
import EITLERP.ComboData;
import EITLERP.clsAuthority;
import EITLERP.data;
import EITLERP.LOV;

public class frmFeltPartyExtraDetail extends javax.swing.JApplet {
    private clsFeltPartyExtraDetail ObjFeltPartyExtraDetail;
    
    private EITLComboModel cmbZoneModel;
    private EITLComboModel cmbInchargeNameModel;
    private EITLTableModel DataModel;
    
    private int EditMode=0;
    private boolean formatgrid=false;
    
    /** Creates new form frmFeltPartyExtraDetail */
    public void init() {
        System.gc();
        setSize(730,360);
        initComponents();
        DataModel=new EITLTableModel();
        ObjFeltPartyExtraDetail=new clsFeltPartyExtraDetail();
        GenerateInchargeNameCombo();
        GenerateZoneCombo();
        FormatGrid();
    }
    
    /** This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        jPanel = new javax.swing.JPanel();
        jLabel = new javax.swing.JLabel();
        txtPartyCode = new EITLERP.Production.SDMLTextField(6,"Press F1");
        jScrollPane = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblPartyName = new javax.swing.JLabel();
        cmbInchargeName = new javax.swing.JComboBox();
        cmbZone = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jpanel = new javax.swing.JPanel();
        cmdUpdate = new javax.swing.JButton();
        cmdSaveUpdate = new javax.swing.JButton();
        cmdCancelUpdate = new javax.swing.JButton();
        jpanel1 = new javax.swing.JPanel();
        cmdRemove = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdAdd = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText(" FELT PARTY EXTRA DETAILS");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 0, 720, 25);

        jPanel.setLayout(null);

        jPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jPanel.setMinimumSize(new java.awt.Dimension(300, 300));
        jLabel.setText("Party Code");
        jPanel.add(jLabel);
        jLabel.setBounds(11, 12, 67, 15);

        txtPartyCode.setFont(new java.awt.Font("Dialog", 1, 14));
        txtPartyCode.setToolTipText("Enter Party Code and Press TAB Key");
        txtPartyCode.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPartyCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPartyCodeFocusLost(evt);
            }
        });
        txtPartyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPartyCodeKeyPressed(evt);
            }
        });

        jPanel.add(txtPartyCode);
        txtPartyCode.setBounds(83, 10, 65, 21);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane.setViewportView(Table);

        jPanel.add(jScrollPane);
        jScrollPane.setBounds(11, 77, 680, 130);

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel.add(jPanel3);
        jPanel3.setBounds(9, 70, 684, 4);

        jLabel1.setText("Incharge");
        jPanel.add(jLabel1);
        jLabel1.setBounds(11, 44, 53, 15);

        lblPartyName.setBackground(new java.awt.Color(255, 255, 255));
        lblPartyName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        lblPartyName.setOpaque(true);
        jPanel.add(lblPartyName);
        lblPartyName.setBounds(150, 10, 540, 20);

        cmbInchargeName.setBackground(new java.awt.Color(255, 255, 255));
        cmbInchargeName.setEditable(true);
        cmbInchargeName.setToolTipText("Felt Incharge Name");
        cmbInchargeName.setEnabled(false);
        jPanel.add(cmbInchargeName);
        cmbInchargeName.setBounds(83, 40, 250, 24);

        cmbZone.setEditable(true);
        cmbZone.setToolTipText("Party Zone");
        cmbZone.setEnabled(false);
        jPanel.add(cmbZone);
        cmbZone.setBounds(530, 40, 160, 24);

        jLabel2.setText("Zone");
        jPanel.add(jLabel2);
        jLabel2.setBounds(490, 44, 31, 15);

        jpanel.setLayout(null);

        jpanel.setBackground(new java.awt.Color(102, 255, 255));
        jpanel.setBorder(new javax.swing.border.TitledBorder(null, "UPDATE INCHARGE & ZONE", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 14)));
        jpanel.setToolTipText("Update Incharge/Zone");
        cmdUpdate.setText("Update");
        cmdUpdate.setToolTipText("Update Party Zone & Incharge");
        cmdUpdate.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdUpdate.setEnabled(false);
        cmdUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateActionPerformed(evt);
            }
        });

        jpanel.add(cmdUpdate);
        cmdUpdate.setBounds(20, 25, 60, 25);

        cmdSaveUpdate.setText("Save");
        cmdSaveUpdate.setToolTipText("Save Incharge/Zone Update");
        cmdSaveUpdate.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdSaveUpdate.setEnabled(false);
        cmdSaveUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveUpdateActionPerformed(evt);
            }
        });

        jpanel.add(cmdSaveUpdate);
        cmdSaveUpdate.setBounds(160, 25, 60, 25);

        cmdCancelUpdate.setText("Cancel");
        cmdCancelUpdate.setToolTipText("Cancel Changes Made In Incharge/Zone");
        cmdCancelUpdate.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdCancelUpdate.setEnabled(false);
        cmdCancelUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelUpdateActionPerformed(evt);
            }
        });

        jpanel.add(cmdCancelUpdate);
        cmdCancelUpdate.setBounds(90, 25, 60, 25);

        jPanel.add(jpanel);
        jpanel.setBounds(10, 210, 240, 60);

        jpanel1.setLayout(null);

        jpanel1.setBackground(new java.awt.Color(0, 255, 255));
        jpanel1.setBorder(new javax.swing.border.TitledBorder(null, "ADD/UPDATE PARTY CONTACT DETAILS", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 14)));
        jpanel1.setToolTipText("Update Party Extra Contacts Info");
        cmdRemove.setMnemonic('R');
        cmdRemove.setText("Remove");
        cmdRemove.setToolTipText("Remove Selected Row by Press ALT+R");
        cmdRemove.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdRemove.setEnabled(false);
        cmdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRemoveActionPerformed(evt);
            }
        });

        jpanel1.add(cmdRemove);
        cmdRemove.setBounds(160, 25, 60, 25);

        cmdEdit.setMnemonic('E');
        cmdEdit.setText("Edit");
        cmdEdit.setToolTipText("Edit Party Extra Details by Press ALT+E");
        cmdEdit.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdEdit.setEnabled(false);
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        jpanel1.add(cmdEdit);
        cmdEdit.setBounds(90, 25, 60, 25);

        cmdAdd.setMnemonic('A');
        cmdAdd.setText("Add");
        cmdAdd.setToolTipText("Add Party Extra Details by Press ALT+A");
        cmdAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdAdd.setEnabled(false);
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        jpanel1.add(cmdAdd);
        cmdAdd.setBounds(20, 25, 60, 25);

        cmdCancel.setMnemonic('C');
        cmdCancel.setText("Cancel");
        cmdCancel.setToolTipText("Cancel Changes Made In Table by Press ALT+C");
        cmdCancel.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        jpanel1.add(cmdCancel);
        cmdCancel.setBounds(230, 25, 60, 25);

        cmdSave.setMnemonic('S');
        cmdSave.setText("Save");
        cmdSave.setToolTipText("Save New/Edited Data by Press ALT+S");
        cmdSave.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        jpanel1.add(cmdSave);
        cmdSave.setBounds(300, 25, 60, 25);

        jPanel.add(jpanel1);
        jpanel1.setBounds(310, 210, 380, 60);

        getContentPane().add(jPanel);
        jPanel.setBounds(0, 25, 700, 280);

    }//GEN-END:initComponents
    
    //saves update in zone and incharge
    private void cmdSaveUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveUpdateActionPerformed
        if(EditMode==3) {
            if(ObjFeltPartyExtraDetail.Update(txtPartyCode.getText().trim(),EITLERPGLOBAL.getComboCode(cmbInchargeName), EITLERPGLOBAL.getCombostrCode(cmbZone))) {
                cmdSaveUpdate.setEnabled(false);
                cmdCancelUpdate.setEnabled(false);
                cmdUpdate.setEnabled(true);
                cmbInchargeName.setEnabled(false);
                cmbZone.setEnabled(false);
                lblTitle.setBackground(new java.awt.Color(0, 102, 153));
                txtPartyCode.setEnabled(true);
            }else {
                JOptionPane.showMessageDialog(this,"Error occured while Updation. Error is "+ObjFeltPartyExtraDetail.LastError,"ERROR",JOptionPane.ERROR_MESSAGE);
                return;
            }
            EditMode=0;
        }
    }//GEN-LAST:event_cmdSaveUpdateActionPerformed
    
    private void cmdCancelUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelUpdateActionPerformed
        cmdCancelUpdate.setEnabled(false);
        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        cmdSaveUpdate.setEnabled(false);
        cmbInchargeName.setEnabled(false);
        cmbZone.setEnabled(false);
        cmdUpdate.setEnabled(true);
        txtPartyCode.setEnabled(true);
        EditMode=0;
    }//GEN-LAST:event_cmdCancelUpdateActionPerformed
    
    private void cmdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateActionPerformed
        EditMode=3;
        txtPartyCode.setEnabled(false);
        cmdUpdate.setEnabled(false);
        cmdCancelUpdate.setEnabled(true);
        cmdSaveUpdate.setEnabled(true);
        cmbInchargeName.setEnabled(true);
        cmbZone.setEnabled(true);
        lblTitle.setBackground(java.awt.Color.GRAY);
    }//GEN-LAST:event_cmdUpdateActionPerformed
    
    private void txtPartyCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartyCodeKeyPressed
        try {
            if(evt.getKeyCode()==112){ //F1 Key pressed
                LOV aList=new LOV();
                aList.SQL="SELECT PARTY_CODE, PARTY_NAME FROM D_SAL_PARTY_MASTER WHERE MAIN_ACCOUNT_CODE=210010";
                aList.ReturnCol=1;
                //aList.SecondCol=2; //to get Second Value
                //aList.ShowReturnCol=true;
                aList.DefaultSearchOn=1;
                
                if(aList.ShowLOV()) {
                    txtPartyCode.setText(aList.ReturnVal);
                    DisplayData(aList.ReturnVal);
                    cmdAdd.setEnabled(true);
                    cmdUpdate.setEnabled(true);
                    formatgrid=true;
                }
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtPartyCodeKeyPressed
    
    private void txtPartyCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPartyCodeFocusLost
        String partyCode=txtPartyCode.getText().trim();
        if(partyCode.length()<=6 && partyCode.length()>=3){
            if(ObjFeltPartyExtraDetail.checkPartyCode(partyCode)){
                if(ObjFeltPartyExtraDetail.getData(partyCode)) {
                    DisplayData(partyCode);
                    cmdAdd.setEnabled(true);
                    cmdUpdate.setEnabled(true);
                    formatgrid=true;
                }else JOptionPane.showMessageDialog(this,"Error occured while Loading Data. Error is "+ObjFeltPartyExtraDetail.LastError,"ERROR",JOptionPane.ERROR_MESSAGE);
            }else JOptionPane.showMessageDialog(this,"Party doesn't Exist.","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtPartyCodeFocusLost
    
    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        EditMode=EITLERPGLOBAL.ADD;
        
        if(formatgrid){
            txtPartyCode.setEnabled(false);
            cmdEdit.setEnabled(false);
            cmdRemove.setEnabled(true);
            cmdCancel.setEnabled(true);
            cmdSave.setEnabled(true);
            FormatGrid();
            lblTitle.setBackground(java.awt.Color.GRAY);
        }
        formatgrid=false;
        
        Object[] rowData=new Object[9];
        rowData[0]=Integer.toString(Table.getRowCount()+1);
        rowData[1]=txtPartyCode.getText().trim();
        rowData[2]="";
        rowData[3]="";
        rowData[4]="";
        rowData[5]="";
        rowData[6]="";
        rowData[7]="";
        rowData[8]="";
        
        DataModel.addRow(rowData);
        Table.changeSelection(Table.getRowCount()-1, 1, false,false);
        Table.requestFocus();
    }//GEN-LAST:event_cmdAddActionPerformed
    
    private void cmdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRemoveActionPerformed
        if(Table.getRowCount()>0 && Table.getSelectedRow()>=0) {
            DataModel.removeRow(Table.getSelectedRow());
        }
    }//GEN-LAST:event_cmdRemoveActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        cmdAdd.setEnabled(true);
        cmdCancel.setEnabled(false);
        cmdSave.setEnabled(false);
        cmdRemove.setEnabled(false);
        cmdEdit.setEnabled(true);
        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        String partyCode=txtPartyCode.getText().trim();
        if(partyCode.length()<=6 && partyCode.length()>=3){
            if(ObjFeltPartyExtraDetail.checkPartyCode(partyCode)){
                if(ObjFeltPartyExtraDetail.getData(partyCode)) {
                    DisplayData(partyCode);
                }else JOptionPane.showMessageDialog(this,"Error occured while Loading Data. Error is "+ObjFeltPartyExtraDetail.LastError,"ERROR",JOptionPane.ERROR_MESSAGE);
            }else JOptionPane.showMessageDialog(this,"Party doesn't Exist.","ERROR",JOptionPane.ERROR_MESSAGE);
        }else JOptionPane.showMessageDialog(this,"Enter Correct Party Code.","ERROR",JOptionPane.ERROR_MESSAGE);
        if(EditMode==EITLERPGLOBAL.ADD || EditMode==3){
            txtPartyCode.setEnabled(true);
            formatgrid=true;
        }
        EditMode=0;
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        EditMode=EITLERPGLOBAL.EDIT;
        cmdAdd.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdCancel.setEnabled(true);
        cmdSave.setEnabled(true);
        lblTitle.setBackground(java.awt.Color.GRAY);
    }//GEN-LAST:event_cmdEditActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JComboBox cmbInchargeName;
    private javax.swing.JComboBox cmbZone;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdCancelUpdate;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdSaveUpdate;
    private javax.swing.JButton cmdUpdate;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JPanel jpanel;
    private javax.swing.JPanel jpanel1;
    private javax.swing.JLabel lblPartyName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtPartyCode;
    // End of variables declaration//GEN-END:variables
    
    //Display data on the Screen
    private void DisplayData(String partyCode) {
        //========= Authority Delegation Check =====================//
        if(EITLERPGLOBAL.gAuthorityUserID!=EITLERPGLOBAL.gUserID) {
            if(clsAuthority.IsAuthorityGiven(EITLERPGLOBAL.gCompanyID,EITLERPGLOBAL.gUserID,EITLERPGLOBAL.gAuthorityUserID,713)) {
                EITLERPGLOBAL.gNewUserID=EITLERPGLOBAL.gAuthorityUserID;
            }else {
                EITLERPGLOBAL.gNewUserID=EITLERPGLOBAL.gUserID;
            }
        }
        //==========================================================//
        
        // header fields setup
        String partyDetails[]=ObjFeltPartyExtraDetail.getPartyDetails(partyCode);
        lblPartyName.setText(partyDetails[0]);
        EITLERPGLOBAL.setComboIndex(cmbInchargeName, (int)Integer.parseInt(partyDetails[1]));
        EITLERPGLOBAL.setComboIndex(cmbZone, partyDetails[2]);
        
        
        try {
            FormatGrid();
            
            // if data grid has row then enable edit button
            if(ObjFeltPartyExtraDetail.hmFeltPartyExtraDetails.size()>=1) cmdEdit.setEnabled(true);
            else cmdEdit.setEnabled(false);
            
            //Now Generate Table
            for(int i=1;i<=ObjFeltPartyExtraDetail.hmFeltPartyExtraDetails.size();i++) {
                clsFeltPartyExtraDetails ObjFeltPartyExtraDetails=(clsFeltPartyExtraDetails)ObjFeltPartyExtraDetail.hmFeltPartyExtraDetails.get(Integer.toString(i));
                
                Object[] rowData=new Object[9];
                rowData[0]=Integer.toString(i);
                rowData[1]=ObjFeltPartyExtraDetails.getAttribute("PARTY_CODE").getString();
                rowData[2]=ObjFeltPartyExtraDetails.getAttribute("CONTACT_PERSON").getString();
                rowData[3]=ObjFeltPartyExtraDetails.getAttribute("MOBILE").getString();
                rowData[4]=ObjFeltPartyExtraDetails.getAttribute("LANDLINE").getString();
                rowData[5]=ObjFeltPartyExtraDetails.getAttribute("EMAIL").getString();
                rowData[6]=ObjFeltPartyExtraDetails.getAttribute("FAX").getString();
                rowData[7]=ObjFeltPartyExtraDetails.getAttribute("OFFICE_ADDRESS").getString();
                rowData[8]=ObjFeltPartyExtraDetails.getAttribute("WORK_ADDRESS").getString();
                DataModel.addRow(rowData);
            }
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void Save() {
        String partyCode="", contactPerson, mobileString, landline, email, fax, officeAddress="", workAddress="";
        int i=0, j=0;
        long mobile;
        try{
            ObjFeltPartyExtraDetail.hmFeltPartyExtraDetails.clear();
            //Check the entered details in Table.
            for(i=0;i<=Table.getRowCount()-1;i++) {
                j++;
                partyCode = ((String)Table.getValueAt(i, 1)).trim();
                if(partyCode.equals("") || partyCode.equals(null)){
                    JOptionPane.showMessageDialog(this,"Enter Party Code.","ERROR",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                j++;
                contactPerson = ((String)Table.getValueAt(i, 2)).trim();
                if(contactPerson.equals("") || contactPerson.equals(null)){
                    JOptionPane.showMessageDialog(this,"Enter Contact Person Name.","ERROR",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                j++;
                mobileString = ((String)Table.getValueAt(i, 3)).trim();
                /*if((mobileString.equals("") || mobileString.equals(null))){
                    JOptionPane.showMessageDialog(this,"Enter Mobile No.","ERROR",JOptionPane.ERROR_MESSAGE);
                    return;
                }*/
                
                if(!mobileString.equals("") &&!(mobileString.length()==10)){
                    JOptionPane.showMessageDialog(this,"Entered Mobile No. must be of 10 digit.","ERROR",JOptionPane.ERROR_MESSAGE);
                    return;
                }else if(!mobileString.equals("") && !(Long.parseLong(mobileString)>0)){
                    JOptionPane.showMessageDialog(this,"Enter Correct Mobile No.","ERROR",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                
                j++;
                landline = ((String)Table.getValueAt(i, 4)).trim();
                /*if((landline.equals("") || landline.equals(null))){
                    JOptionPane.showMessageDialog(this,"Enter Landline No.","ERROR",JOptionPane.ERROR_MESSAGE);
                    return;
                }*/
                if(!landline.equals("") && !landline.contains("-")){
                    JOptionPane.showMessageDialog(this,"Enter Landline No. like 0265-2330060.","ERROR",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                j++;
                email = ((String)Table.getValueAt(i, 5)).trim();
                if(!email.equals("")){
                    java.util.regex.Pattern pattern = java.util.regex.Pattern.compile("^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$");
                    String []emailId=email.split(",");
                    
                    for(int k=0;k<emailId.length;k++) {
                        if(!pattern.matcher(emailId[k]).matches()) {
                            JOptionPane.showMessageDialog(this,"No. "+(k+1)+" Email Address is Wrong.","Incorrect Email Address",JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                }
                
                j++;
                fax = ((String)Table.getValueAt(i, 6)).trim();
                if(!fax.equals("") && !fax.contains("-")){
                    JOptionPane.showMessageDialog(this,"Enter Fax No. like 0265-2330060.","ERROR",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                officeAddress = ((String)Table.getValueAt(i, 7)).trim();
                workAddress = ((String)Table.getValueAt(i, 8)).trim();
                
                clsFeltPartyExtraDetails ObjFeltPartyExtraDetails = new clsFeltPartyExtraDetails();
                
                ObjFeltPartyExtraDetails.setAttribute("PARTY_CODE",partyCode);
                ObjFeltPartyExtraDetails.setAttribute("CONTACT_PERSON",contactPerson);
                ObjFeltPartyExtraDetails.setAttribute("MOBILE",mobileString);
                ObjFeltPartyExtraDetails.setAttribute("LANDLINE",landline);
                ObjFeltPartyExtraDetails.setAttribute("FAX",fax);
                ObjFeltPartyExtraDetails.setAttribute("EMAIL",email);
                ObjFeltPartyExtraDetails.setAttribute("OFFICE_ADDRESS", officeAddress);
                ObjFeltPartyExtraDetails.setAttribute("WORK_ADDRESS", workAddress);
                
                ObjFeltPartyExtraDetail.hmFeltPartyExtraDetails.put(Integer.toString(ObjFeltPartyExtraDetail.hmFeltPartyExtraDetails.size()+1), ObjFeltPartyExtraDetails);
            }
            
        }catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(this,"Enter Correct Details at Row "+(i+1) +" and Column "+(j+1)+". Error is "+nfe.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
            j=0;
            nfe.printStackTrace();
            return;
        }
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(ObjFeltPartyExtraDetail.Insert(partyCode)) {
                cmdRemove.setEnabled(false);
                cmdSave.setEnabled(false);
                cmdCancel.setEnabled(false);
                DisplayData(partyCode);
                lblTitle.setBackground(new java.awt.Color(0, 102, 153));
                txtPartyCode.setEnabled(true);
            }else {
                JOptionPane.showMessageDialog(this,"Error occured while saving. Error is "+ObjFeltPartyExtraDetail.LastError,"ERROR",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(ObjFeltPartyExtraDetail.Update(partyCode)) {
                cmdSave.setEnabled(false);
                cmdCancel.setEnabled(false);
                cmdAdd.setEnabled(true);
                DisplayData(partyCode);
                lblTitle.setBackground(new java.awt.Color(0, 102, 153));
                txtPartyCode.setEnabled(true);
            }else {
                JOptionPane.showMessageDialog(this,"Error occured while saving editing. Error is "+ObjFeltPartyExtraDetail.LastError,"ERROR",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        EditMode=0;
    }
    
    //Generates Encharge Name Combo Box
    private void GenerateInchargeNameCombo() {
        HashMap hmInchargeNameList=new HashMap();
        
        cmbInchargeNameModel=new EITLComboModel();
        cmbInchargeName.removeAllItems();
        cmbInchargeName.setModel(cmbInchargeNameModel);
        
        hmInchargeNameList=ObjFeltPartyExtraDetail.getInchargeNameList();
        for(int i=1;i<=hmInchargeNameList.size();i++) {
            cmbInchargeNameModel.addElement((ComboData)hmInchargeNameList.get(new Integer(i)));
        }
    }
    
    //Generates Encharge Name Combo Box
    private void GenerateZoneCombo() {
        HashMap zoneList=new HashMap();
        
        cmbZoneModel=new EITLComboModel();
        cmbZone.removeAllItems();
        cmbZone.setModel(cmbZoneModel);
        
        ComboData aData=new ComboData();
        aData.strCode="ZONE";
        aData.Text="ZONE";
        cmbZoneModel.addElement(aData);
        
        aData=new ComboData();
        aData.strCode="WEST";
        aData.Text="WEST";
        cmbZoneModel.addElement(aData);
        
        aData=new ComboData();
        aData.strCode="SOUTH";
        aData.Text="SOUTH";
        cmbZoneModel.addElement(aData);
        
        aData=new ComboData();
        aData.strCode="NORTH";
        aData.Text="NORTH";
        cmbZoneModel.addElement(aData);
        
        aData=new ComboData();
        aData.strCode="EAST";
        aData.Text="EAST";
        cmbZoneModel.addElement(aData);
        
        aData=new ComboData();
        aData.strCode="EXPORT";
        aData.Text="EXPORT";
        cmbZoneModel.addElement(aData);
        
    }
    
    private void FormatGrid() {
        try {
            DataModel=new EITLTableModel();
            Table.removeAll();
            
            Table.setModel(DataModel);
            TableColumnModel ColModel=Table.getColumnModel();
            
            //Add Columns to it
            DataModel.addColumn("Sr. No.");
            DataModel.addColumn("Party Code");
            DataModel.addColumn("Contact Person");
            DataModel.addColumn("Mobile");
            DataModel.addColumn("Landline");
            DataModel.addColumn("E-Mail");
            DataModel.addColumn("Fax");
            DataModel.addColumn("Office Address");
            DataModel.addColumn("Work Address");
            
            DataModel.SetReadOnly(0);
            DataModel.SetReadOnly(1);
            
            TableColumnModel tcm= Table.getColumnModel();
            tcm.getColumn(0).setPreferredWidth(50);
            tcm.getColumn(1).setPreferredWidth(70);
            tcm.getColumn(2).setPreferredWidth(140);
            tcm.getColumn(3).setPreferredWidth(90);
            tcm.getColumn(4).setPreferredWidth(140);
            tcm.getColumn(5).setPreferredWidth(180);
            tcm.getColumn(6).setPreferredWidth(140);
            tcm.getColumn(7).setPreferredWidth(300);
            tcm.getColumn(8).setPreferredWidth(300);
            
            if(EditMode!=0){
                //------- Install Table List Selection Listener ------//
                Table.getColumnModel().getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {
                    public void valueChanged(ListSelectionEvent e) {
                        int column=Table.getSelectedColumn();
                        String strVar=DataModel.getVariable(column);
                        //=============== Cell Editing Routine =======================//
                        Table.editCellAt(Table.getSelectedRow(),column);
                        if(Table.getEditorComponent() instanceof JTextComponent) {
                            ((JTextComponent)Table.getEditorComponent()).selectAll();
                        }
                        //============= Cell Editing Routine Ended =================//
                    }
                });
            }
        }catch(Exception e) {
            e.printStackTrace();
        }
    }
    
}
