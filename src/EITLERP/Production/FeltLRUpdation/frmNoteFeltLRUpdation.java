/*
 * frmFindFeltProductionWeaving.java
 * This form is used for searching  the details of Felt Production Weaving
 * 
 * Created on July 19, 2013, 5:09 PM
 */

package EITLERP.Production.FeltLRUpdation;
/**
 *
 * @author  Vivek Kumar
 */

import EITLERP.EITLERPGLOBAL;

public class frmNoteFeltLRUpdation extends javax.swing.JApplet {
    
    public boolean Cancelled=true;
    public String despatchNote="";
    private int counter=1;
   
    public void init() {
        System.gc();
        setSize(540,270);
        initComponents();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        cmdOk = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        chb2 = new javax.swing.JCheckBox();
        chb3 = new javax.swing.JCheckBox();
        chb4 = new javax.swing.JCheckBox();
        chb7 = new javax.swing.JCheckBox();
        chb8 = new javax.swing.JCheckBox();
        chb6 = new javax.swing.JCheckBox();
        chb5 = new javax.swing.JCheckBox();
        chb1 = new javax.swing.JCheckBox();
        chb9 = new javax.swing.JCheckBox();

        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel1.setText("Add Note For Despatch Details");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 2, 250, 17);

        cmdOk.setMnemonic('O');
        cmdOk.setText("Ok");
        cmdOk.setToolTipText("Find Weaving details by production date");
        cmdOk.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmdOk.setNextFocusableComponent(cmdCancel);
        cmdOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOkActionPerformed(evt);
            }
        });

        getContentPane().add(cmdOk);
        cmdOk.setBounds(180, 200, 70, 25);

        cmdCancel.setMnemonic('C');
        cmdCancel.setText("Cancel");
        cmdCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        getContentPane().add(cmdCancel);
        cmdCancel.setBounds(260, 200, 70, 25);

        chb2.setFont(new java.awt.Font("Dialog", 0, 12));
        chb2.setText("Despatched on godown delivery basis");
        chb2.setToolTipText("");
        getContentPane().add(chb2);
        chb2.setBounds(5, 40, 270, 23);

        chb3.setFont(new java.awt.Font("Dialog", 0, 12));
        chb3.setText("Consignee copy of LR accompanying consignment");
        getContentPane().add(chb3);
        chb3.setBounds(5, 60, 340, 23);

        chb4.setFont(new java.awt.Font("Dialog", 0, 12));
        chb4.setText("Consignee copy of LR being sent to you separately by courier/Regd AD");
        getContentPane().add(chb4);
        chb4.setBounds(5, 80, 440, 23);

        chb7.setFont(new java.awt.Font("Dialog", 0, 12));
        chb7.setText("Your payment has been received");
        getContentPane().add(chb7);
        chb7.setBounds(5, 140, 220, 23);

        chb8.setFont(new java.awt.Font("Dialog", 0, 12));
        chb8.setText("Your payment is yet to be received");
        getContentPane().add(chb8);
        chb8.setBounds(5, 160, 230, 23);

        chb6.setFont(new java.awt.Font("Dialog", 0, 12));
        chb6.setText("Original (for buyer) copy of invoice being sent to you separately by courier/Regd AD");
        getContentPane().add(chb6);
        chb6.setBounds(5, 120, 509, 23);

        chb5.setFont(new java.awt.Font("Dialog", 0, 12));
        chb5.setText("Duplicate(for transporter) copy of invoice accompanying consignment");
        getContentPane().add(chb5);
        chb5.setBounds(5, 100, 460, 23);

        chb1.setFont(new java.awt.Font("Dialog", 0, 12));
        chb1.setText("Despatched on door delivery basis");
        chb1.setToolTipText("");
        getContentPane().add(chb1);
        chb1.setBounds(5, 20, 230, 23);

        chb9.setFont(new java.awt.Font("Dialog", 0, 12));
        chb9.setText("Despatched by air");
        getContentPane().add(chb9);
        chb9.setBounds(5, 180, 140, 23);

    }//GEN-END:initComponents

    private void cmdOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOkActionPerformed
        Cancelled=false;
        
        if(chb1.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Despatched on door delivery basis</span></p>";
        }
        
        if(chb2.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Despatched on godown delivery basis</span></p>";
        }
        
        if(chb3.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Consignee copy of LR accompanying consignment</span></p>";
        }
        
        if(chb4.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Consignee copy of LR being sent to you separately by courier/Regd AD</span></p>";
        }
        
        if(chb5.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Duplicate(for transporter) copy of invoice accompanying consignment</span></p>";
        }
        
        if(chb6.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Original (for buyer) copy of invoice being sent to you separately by courier/Regd AD</span></p>";
        }
        
        if(chb7.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Your payment has been received</span></p>";
        }
        
        if(chb8.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Your payment is yet to be received</span></p>";
        }
        
        if(chb9.isSelected()){
            despatchNote+="<p><span style='color:black'>"+counter++ +") Despatched by air</span></p>";
        }
        
        counter=1;
        
        getParent().getParent().getParent().getParent().show(false);        
    }//GEN-LAST:event_cmdOkActionPerformed
        
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        despatchNote="";
        Cancelled=true;
        getParent().getParent().getParent().getParent().show(false);
    }//GEN-LAST:event_cmdCancelActionPerformed
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chb1;
    private javax.swing.JCheckBox chb2;
    private javax.swing.JCheckBox chb3;
    private javax.swing.JCheckBox chb4;
    private javax.swing.JCheckBox chb5;
    private javax.swing.JCheckBox chb6;
    private javax.swing.JCheckBox chb7;
    private javax.swing.JCheckBox chb8;
    private javax.swing.JCheckBox chb9;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdOk;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
}
