/*
 * FeltCFormReport.java
 *
 * Created on July 23, 2016, 2:30 PM
 */

package EITLERP.Production.FeltCForm;

/**
 *
 * @author  root
 */

import EITLERP.*;
import EITLERP.Finance.*;
import EITLERP.Utils.*;
import EITLERP.Utils.SimpleDataProvider.*;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import java.util.*;
import TReportWriter.*;
import javax.swing.table.*;
import java.io.File;


import java.util.HashMap;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.net.URL;
import javax.swing.JOptionPane;

import EITLERP.EITLERPGLOBAL;
import EITLERP.EITLComboModel;
import EITLERP.EITLTableModel;
import EITLERP.data;
import EITLERP.ComboData;



public class FeltCFormReport extends javax.swing.JApplet {
    
    //private EITLTableModel DataModel=new EITLTableModel();
    
    EITLComboModel ReportComboModel;
    EITLTableModel TableColumnModel;
    EITLTableModel DataModelDesc;
    
    private clsExcelExporter exp = new clsExcelExporter(); 
    
    private ResultSet rsResultSet,rsResultSet1;
    private Connection Conn;
    private Statement Stmt;
    
    private TReportEngine objEngine=new TReportEngine();
    private TReportWriter.SimpleDataProvider.TTable objData=new TReportWriter.SimpleDataProvider.TTable();
    
    
    /** Initializes the applet FeltCFormReport */
    public void init() {
        initComponents();
        setSize(650, 450);
        GenerateReportCombo();
        FormatGrid4();
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lblTitle = new javax.swing.JLabel();
        cmbReportCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        btnPrint = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableDesc = new javax.swing.JTable();
        btnExcel = new javax.swing.JButton();

        getContentPane().setLayout(null);

        lblTitle.setBackground(new java.awt.Color(0, 102, 153));
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("FELT CForm Reports");
        lblTitle.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTitle.setOpaque(true);
        getContentPane().add(lblTitle);
        lblTitle.setBounds(0, 2, 666, 25);

        cmbReportCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbReportComboActionPerformed(evt);
            }
        });

        getContentPane().add(cmbReportCombo);
        cmbReportCombo.setBounds(110, 50, 360, 24);

        jLabel4.setText("Select Report : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 50, 100, 20);

        btnPrint.setText("PRINT");
        btnPrint.setActionCommand("PRINT");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        getContentPane().add(btnPrint);
        btnPrint.setBounds(40, 410, 70, 25);

        TableDesc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TableDesc);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 100, 600, 290);

        btnExcel.setText("Export to Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        getContentPane().add(btnExcel);
        btnExcel.setBounds(360, 410, 200, 25);

    }//GEN-END:initComponents

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        PrintReport();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        // TODO add your handling code here:
        try{
            
            exp.fillData(TableDesc,new File("/root/Desktop/CFormData.xls")); 
            exp.fillData(TableDesc,new File("D://CFormData.xls")); 
            JOptionPane.showMessageDialog(null, "Data saved at " +
            "'/root/Desktop/CFormData.xls' successfully in Linux PC or 'D://CFormData.xls' successfully in Windows PC    ", "Message",
            JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnExcelActionPerformed

    private void cmbReportComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbReportComboActionPerformed
        // TODO add your handling code here:
        String str = cmbReportCombo.getSelectedItem().toString().substring(0,2);
        System.out.println(str);
        
        if (str.matches("Se")){
            FormatGrid4();
        }
        if (str.matches("01")){
            FormatGrid1();
            GenerateData1();
        }
        if (str.matches("02")){
            FormatGrid2();
            GenerateData2();
        }
        if (str.matches("03")){
            FormatGrid3();
            GenerateData3();
        }
        if (str.matches("04")){
            FormatGrid4();
            GenerateData4();
        }
    }//GEN-LAST:event_cmbReportComboActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableDesc;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnPrint;
    private javax.swing.JComboBox cmbReportCombo;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
    
    private void GenerateReportCombo(){
        ReportComboModel=new EITLComboModel();
        ReportComboModel.removeAllElements();
        cmbReportCombo.setModel(ReportComboModel);
        try{
            ComboData combodata=new ComboData();
            
            combodata.Code=0;
            combodata.strCode="";
            combodata.Text="Select Report from Combo";
            ReportComboModel.addElement(combodata);
            
            combodata.Code=1;
            combodata.strCode="";
            combodata.Text="01. Refundable List";
            ReportComboModel.addElement(combodata);
            
            combodata.Code=2;
            combodata.strCode="";
            combodata.Text="02. SD Received,CForm Not Received";
            ReportComboModel.addElement(combodata);
            
            combodata.Code=3;
            combodata.strCode="";
            combodata.Text="03. SD & CForm Not Received";
            ReportComboModel.addElement(combodata);
            
            combodata.Code=4;
            combodata.strCode="";
            combodata.Text="04. SD Refunded List";
            ReportComboModel.addElement(combodata);
            
        }catch(Exception e){e.printStackTrace();}
    }
    
    private void FormatGrid1() {
        
        try{
            DataModelDesc=new EITLTableModel();
            TableDesc.removeAll();
            TableDesc.setModel(DataModelDesc);
            TableColumnModel ColModel=TableDesc.getColumnModel();
            TableColumnModel ColModel1=TableDesc.getColumnModel();
            TableDesc.setAutoResizeMode(TableDesc.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.LIGHT_GRAY);
            
            DataModelDesc.addColumn("Party Code");
            DataModelDesc.addColumn("Party Name");
            DataModelDesc.addColumn("Inovice Retail No");
            DataModelDesc.addColumn("Inovice No");
            DataModelDesc.addColumn("Inovice Date");
            DataModelDesc.addColumn("Invoice Value");
            DataModelDesc.addColumn("S.D. Amt");
            DataModelDesc.addColumn("Inv cst amt");
            DataModelDesc.addColumn("C Form");
            DataModelDesc.addColumn("C form Date");
            DataModelDesc.addColumn("C- form Value");
            DataModelDesc.addColumn("SD Rcvd Voucher");
            DataModelDesc.addColumn("SD Rcvd Date");
            DataModelDesc.addColumn("BRC No");
            DataModelDesc.addColumn("BRC Date");
            DataModelDesc.addColumn("SD Payable Voucher");
            DataModelDesc.addColumn("SD Payable Date");
            DataModelDesc.addColumn("Bank code");
            DataModelDesc.addColumn("Bank SD Amt");
            DataModelDesc.addColumn("Refundable amt");
            
            

            
//            //DataModelDesc.TableReadOnly(true);
//            DataModelDesc.SetVariable(0,"SR_NO");  //0
//            DataModelDesc.SetVariable(1,"PIECE_NO"); //1
//            DataModelDesc.SetVariable(2,"MACHINE_NO"); //2
//            DataModelDesc.SetVariable(3,"MACHINE_POSITION"); //3
//            DataModelDesc.SetVariable(4,"DISC_PER"); //4
//            DataModelDesc.SetVariable(5,"SEAM_VALUE"); //5
//            DataModelDesc.SetVariable(6,"YRED_DISC_PER"); //6
//            DataModelDesc.SetVariable(7,"YRED_SEAM_VALUE"); //7
//            DataModelDesc.SetVariable(8,"TURN_OVER_TARGET"); //8
            
            //DataModelDesc.TableReadOnly(false);
            DataModelDesc.SetReadOnly(0);
            DataModelDesc.SetReadOnly(1);
            DataModelDesc.SetReadOnly(2);
            DataModelDesc.SetReadOnly(3);
            DataModelDesc.SetReadOnly(4);
            DataModelDesc.SetReadOnly(5);
            DataModelDesc.SetReadOnly(6);
            DataModelDesc.SetReadOnly(7);
            DataModelDesc.SetReadOnly(8);
            DataModelDesc.SetReadOnly(9);
            DataModelDesc.SetReadOnly(10);
            DataModelDesc.SetReadOnly(11);
            DataModelDesc.SetReadOnly(12);
            DataModelDesc.SetReadOnly(13);
            DataModelDesc.SetReadOnly(14);
            DataModelDesc.SetReadOnly(15);
            DataModelDesc.SetReadOnly(16);
            DataModelDesc.SetReadOnly(17);
            DataModelDesc.SetReadOnly(18);
            DataModelDesc.SetReadOnly(19);
            DataModelDesc.SetReadOnly(20);
            
        }
        catch(Exception e) {
            
        }
       
//        //Table formatting completed
//        
//        TableDesc.getColumnModel().getColumn(0).setMinWidth(30);
//        //TableDesc.getColumnModel().getColumn(0).setMaxWidth(30);
//        TableDesc.getColumnModel().getColumn(1).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(1).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(2).setMinWidth(80);
//        //TableDesc.getColumnModel().getColumn(2).setMaxWidth(80);
//        TableDesc.getColumnModel().getColumn(3).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(3).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(4).setMinWidth(80);
//        //TableDesc.getColumnModel().getColumn(4).setMaxWidth(80);
//        TableDesc.getColumnModel().getColumn(5).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(5).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(6).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(6).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(7).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(7).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(8).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(8).setMaxWidth(100);
//        
    }
    
    private void FormatGrid2() {
        
        try{
            DataModelDesc=new EITLTableModel();
            TableDesc.removeAll();
            TableDesc.setModel(DataModelDesc);
            TableColumnModel ColModel=TableDesc.getColumnModel();
            TableDesc.setAutoResizeMode(TableDesc.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.LIGHT_GRAY);
            
            DataModelDesc.addColumn("Party Code");
            DataModelDesc.addColumn("Party Name");
            DataModelDesc.addColumn("Inovice Retail No");
            DataModelDesc.addColumn("Inovice No");
            DataModelDesc.addColumn("Inovice Date");
            DataModelDesc.addColumn("Invoice Value");
            DataModelDesc.addColumn("S.D. Amt");
            DataModelDesc.addColumn("Inv cst amt");
            DataModelDesc.addColumn("C Form");
            DataModelDesc.addColumn("C form Date");
            DataModelDesc.addColumn("C- form Value");
            DataModelDesc.addColumn("SD Rcvd Voucher");
            DataModelDesc.addColumn("SD Rcvd Date");
            DataModelDesc.addColumn("BRC No");
            DataModelDesc.addColumn("BRC Date");
            DataModelDesc.addColumn("Bank code");
            DataModelDesc.addColumn("Bank SD Amt");
            DataModelDesc.addColumn("Refundable amt");

            
//            //DataModelDesc.TableReadOnly(true);
//            DataModelDesc.SetVariable(0,"SR_NO");  //0
//            DataModelDesc.SetVariable(1,"PIECE_NO"); //1
//            DataModelDesc.SetVariable(2,"MACHINE_NO"); //2
//            DataModelDesc.SetVariable(3,"MACHINE_POSITION"); //3
//            DataModelDesc.SetVariable(4,"DISC_PER"); //4
//            DataModelDesc.SetVariable(5,"SEAM_VALUE"); //5
//            DataModelDesc.SetVariable(6,"YRED_DISC_PER"); //6
//            DataModelDesc.SetVariable(7,"YRED_SEAM_VALUE"); //7
//            DataModelDesc.SetVariable(8,"TURN_OVER_TARGET"); //8
            
            //DataModelDesc.TableReadOnly(false);
            DataModelDesc.SetReadOnly(0);
            DataModelDesc.SetReadOnly(1);
            DataModelDesc.SetReadOnly(2);
            DataModelDesc.SetReadOnly(3);
            DataModelDesc.SetReadOnly(4);
            DataModelDesc.SetReadOnly(5);
            DataModelDesc.SetReadOnly(6);
            DataModelDesc.SetReadOnly(7);
            DataModelDesc.SetReadOnly(8);
            DataModelDesc.SetReadOnly(9);
            DataModelDesc.SetReadOnly(10);
            DataModelDesc.SetReadOnly(11);
            DataModelDesc.SetReadOnly(12);
            DataModelDesc.SetReadOnly(13);
            DataModelDesc.SetReadOnly(14);
            DataModelDesc.SetReadOnly(15);
            DataModelDesc.SetReadOnly(16);
            DataModelDesc.SetReadOnly(17);
            
            
            
        }
        catch(Exception e) {
            
        }
       
//        //Table formatting completed
//        
//        TableDesc.getColumnModel().getColumn(0).setMinWidth(30);
//        //TableDesc.getColumnModel().getColumn(0).setMaxWidth(30);
//        TableDesc.getColumnModel().getColumn(1).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(1).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(2).setMinWidth(80);
//        //TableDesc.getColumnModel().getColumn(2).setMaxWidth(80);
//        TableDesc.getColumnModel().getColumn(3).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(3).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(4).setMinWidth(80);
//        //TableDesc.getColumnModel().getColumn(4).setMaxWidth(80);
//        TableDesc.getColumnModel().getColumn(5).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(5).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(6).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(6).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(7).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(7).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(8).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(8).setMaxWidth(100);
//        
    }
    
    private void FormatGrid3() {
        
        try{
            DataModelDesc=new EITLTableModel();
            TableDesc.removeAll();
            TableDesc.setModel(DataModelDesc);
            TableColumnModel ColModel=TableDesc.getColumnModel();
            TableDesc.setAutoResizeMode(TableDesc.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.LIGHT_GRAY);
            
            DataModelDesc.addColumn("Party Code");
            DataModelDesc.addColumn("Party Name");
            DataModelDesc.addColumn("Inovice Retail No");
            DataModelDesc.addColumn("Inovice No");
            DataModelDesc.addColumn("Inovice Date");
            DataModelDesc.addColumn("Invoice Value");
            DataModelDesc.addColumn("S.D. Amt");
            DataModelDesc.addColumn("Inv cst amt");
            DataModelDesc.addColumn("SD Rcvd Voucher");
            DataModelDesc.addColumn("SD Rcvd Date");
            DataModelDesc.addColumn("BRC No");
            DataModelDesc.addColumn("BRC Date");
            
            
//            //DataModelDesc.TableReadOnly(true);
//            DataModelDesc.SetVariable(0,"SR_NO");  //0
//            DataModelDesc.SetVariable(1,"PIECE_NO"); //1
//            DataModelDesc.SetVariable(2,"MACHINE_NO"); //2
//            DataModelDesc.SetVariable(3,"MACHINE_POSITION"); //3
//            DataModelDesc.SetVariable(4,"DISC_PER"); //4
//            DataModelDesc.SetVariable(5,"SEAM_VALUE"); //5
//            DataModelDesc.SetVariable(6,"YRED_DISC_PER"); //6
//            DataModelDesc.SetVariable(7,"YRED_SEAM_VALUE"); //7
//            DataModelDesc.SetVariable(8,"TURN_OVER_TARGET"); //8
            
            //DataModelDesc.TableReadOnly(false);
            DataModelDesc.SetReadOnly(0);
            DataModelDesc.SetReadOnly(1);
            DataModelDesc.SetReadOnly(2);
            DataModelDesc.SetReadOnly(3);
            DataModelDesc.SetReadOnly(4);
            DataModelDesc.SetReadOnly(5);
            DataModelDesc.SetReadOnly(6);
            DataModelDesc.SetReadOnly(7);
            DataModelDesc.SetReadOnly(8);
            DataModelDesc.SetReadOnly(9);
            DataModelDesc.SetReadOnly(10);
            DataModelDesc.SetReadOnly(11);
           
            
        }
        catch(Exception e) {
            
        }
       
//        //Table formatting completed
//        
//        TableDesc.getColumnModel().getColumn(0).setMinWidth(30);
//        //TableDesc.getColumnModel().getColumn(0).setMaxWidth(30);
//        TableDesc.getColumnModel().getColumn(1).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(1).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(2).setMinWidth(80);
//        //TableDesc.getColumnModel().getColumn(2).setMaxWidth(80);
//        TableDesc.getColumnModel().getColumn(3).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(3).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(4).setMinWidth(80);
//        //TableDesc.getColumnModel().getColumn(4).setMaxWidth(80);
//        TableDesc.getColumnModel().getColumn(5).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(5).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(6).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(6).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(7).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(7).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(8).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(8).setMaxWidth(100);
//        
    }
    
    private void FormatGrid4() {
        
        try{
            DataModelDesc=new EITLTableModel();
            TableDesc.removeAll();
            TableDesc.setModel(DataModelDesc);
            TableColumnModel ColModel=TableDesc.getColumnModel();
            TableDesc.setAutoResizeMode(TableDesc.AUTO_RESIZE_OFF);
            EITLTableCellRenderer Renderer=new EITLTableCellRenderer();
            Renderer.setColor(0, 0, Color.LIGHT_GRAY);
            
            DataModelDesc.addColumn("Party Code");
            DataModelDesc.addColumn("Party Name");
            DataModelDesc.addColumn("Inovice Retail No");
            DataModelDesc.addColumn("Inovice No");
            DataModelDesc.addColumn("Inovice Date");
            DataModelDesc.addColumn("Invoice Value");
            DataModelDesc.addColumn("S.D. Amt");
            DataModelDesc.addColumn("Inv cst amt");
            DataModelDesc.addColumn("C Form");
            DataModelDesc.addColumn("C form Date");
            DataModelDesc.addColumn("C- form Value");
            DataModelDesc.addColumn("SD Rcvd Voucher");
            DataModelDesc.addColumn("SD Rcvd Date");
            DataModelDesc.addColumn("BRC No");
            DataModelDesc.addColumn("BRC Date");
            DataModelDesc.addColumn("SD Payable Voucher");
            DataModelDesc.addColumn("SD Payable Date");
            DataModelDesc.addColumn("PY/JV no");
            DataModelDesc.addColumn("PY/JV date");
            DataModelDesc.addColumn("SD paid amt");
            DataModelDesc.addColumn("Cheque No");
            DataModelDesc.addColumn("Cheque Date");
            DataModelDesc.addColumn("Bank code");
            DataModelDesc.addColumn("Bank SD Amt");
            DataModelDesc.addColumn("Refundable amt");
            

//            //DataModelDesc.TableReadOnly(true);
//            DataModelDesc.SetVariable(0,"SR_NO");  //0
//            DataModelDesc.SetVariable(1,"PIECE_NO"); //1
//            DataModelDesc.SetVariable(2,"MACHINE_NO"); //2
//            DataModelDesc.SetVariable(3,"MACHINE_POSITION"); //3
//            DataModelDesc.SetVariable(4,"DISC_PER"); //4
//            DataModelDesc.SetVariable(5,"SEAM_VALUE"); //5
//            DataModelDesc.SetVariable(6,"YRED_DISC_PER"); //6
//            DataModelDesc.SetVariable(7,"YRED_SEAM_VALUE"); //7
//            DataModelDesc.SetVariable(8,"TURN_OVER_TARGET"); //8
            
            //DataModelDesc.TableReadOnly(false);
            DataModelDesc.SetReadOnly(0);
            DataModelDesc.SetReadOnly(1);
            DataModelDesc.SetReadOnly(2);
            DataModelDesc.SetReadOnly(3);
            DataModelDesc.SetReadOnly(4);
            DataModelDesc.SetReadOnly(5);
            DataModelDesc.SetReadOnly(6);
            DataModelDesc.SetReadOnly(7);
            DataModelDesc.SetReadOnly(8);
            DataModelDesc.SetReadOnly(9);
            DataModelDesc.SetReadOnly(10);
            DataModelDesc.SetReadOnly(11);
            DataModelDesc.SetReadOnly(12);
            DataModelDesc.SetReadOnly(13);
            DataModelDesc.SetReadOnly(14);
            DataModelDesc.SetReadOnly(15);
            DataModelDesc.SetReadOnly(16);
            DataModelDesc.SetReadOnly(17);
            DataModelDesc.SetReadOnly(18);
            DataModelDesc.SetReadOnly(19);
            DataModelDesc.SetReadOnly(20);
            DataModelDesc.SetReadOnly(21);
            DataModelDesc.SetReadOnly(22);
            DataModelDesc.SetReadOnly(23);
            DataModelDesc.SetReadOnly(24);
            
            
        }
        catch(Exception e) {
            
        }
       
//        //Table formatting completed
//        
//        TableDesc.getColumnModel().getColumn(0).setMinWidth(30);
//        //TableDesc.getColumnModel().getColumn(0).setMaxWidth(30);
//        TableDesc.getColumnModel().getColumn(1).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(1).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(2).setMinWidth(80);
//        //TableDesc.getColumnModel().getColumn(2).setMaxWidth(80);
//        TableDesc.getColumnModel().getColumn(3).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(3).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(4).setMinWidth(80);
//        //TableDesc.getColumnModel().getColumn(4).setMaxWidth(80);
//        TableDesc.getColumnModel().getColumn(5).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(5).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(6).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(6).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(7).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(7).setMaxWidth(100);
//        TableDesc.getColumnModel().getColumn(8).setMinWidth(100);
//        //TableDesc.getColumnModel().getColumn(8).setMaxWidth(100);
//        
    }
    
    private void GenerateData1(){
        try{
            ResultSet rs=data.getResult("SELECT TAX_PARTY_CODE,TAX_PARTY_NAME,TAX_INVOICE_NO,ORG_INVOICE_NO,TAX_INVOICE_DATE,(TOTAL_INV_AMT - SECURITY_DEPOSIT) AS TAX_INVOICE_AMT,SECURITY_DEPOSIT,CST_AMT,CFORM_NO,CFORM_DATE,CFORM_AMT,SJ132803,SDDATE132803,JV93,JVDATE93,SJ132802,SDDATE132802,PY_NO,PY_DATE,PY_AMT,CHEQUE_NO,CHEQUE_DATE,93 AS BANK_CODE, SECURITY_DEPOSIT AS BANK_SD_AMT,SECURITY_DEPOSIT AS REFUNDABLE_AMT FROM DINESHMILLS.D_SAL_INVOICE_TAX WHERE SECURITY_DEPOSIT > 0 AND CFORM_NO != '' AND JV93 !='0'  AND PY_NO =''");
                if(rs.getRow()>0){
                    while(!rs.isAfterLast()){
                        Object[] rowData=new Object[30];
                        rowData[0]=rs.getString("TAX_PARTY_CODE");
                        rowData[1]=rs.getString("TAX_PARTY_NAME");
                        rowData[2]=rs.getString("TAX_INVOICE_NO");
                        rowData[3]=rs.getString("ORG_INVOICE_NO");
                        rowData[4]=EITLERPGLOBAL.formatDate(rs.getString("TAX_INVOICE_DATE"));
                        rowData[5]=rs.getString("TAX_INVOICE_AMT");
                        rowData[6]=rs.getString("SECURITY_DEPOSIT");
                        rowData[7]=rs.getString("CST_AMT");
                        rowData[8]=rs.getString("CFORM_NO");
                        rowData[9]=EITLERPGLOBAL.formatDate(rs.getString("CFORM_DATE"));
                        rowData[10]=rs.getString("CFORM_AMT");
                        rowData[11]=rs.getString("SJ132803");
                        rowData[12]=EITLERPGLOBAL.formatDate(rs.getString("SDDATE132803"));
                        rowData[13]=rs.getString("JV93");
                        rowData[14]=EITLERPGLOBAL.formatDate(rs.getString("JVDATE93"));
                        rowData[15]=rs.getString("SJ132802");
                        rowData[16]=EITLERPGLOBAL.formatDate(rs.getString("SDDATE132802"));
                        rowData[17]=rs.getString("BANK_CODE");
                        rowData[18]=rs.getString("BANK_SD_AMT");
                        rowData[19]=rs.getString("REFUNDABLE_AMT");
                        
                        DataModelDesc.addRow(rowData);
                        rs.next();
                    }
                    rs.close();
                }
        }
        catch(Exception e){e.printStackTrace();}
    }
    
    private void GenerateData2(){
        try{
            ResultSet rs=data.getResult("SELECT TAX_PARTY_CODE,TAX_PARTY_NAME,TAX_INVOICE_NO,ORG_INVOICE_NO,TAX_INVOICE_DATE,(TOTAL_INV_AMT - SECURITY_DEPOSIT) AS TAX_INVOICE_AMT,SECURITY_DEPOSIT,CST_AMT,CFORM_NO,CFORM_DATE,CFORM_AMT,SJ132803,SDDATE132803,JV93,JVDATE93,SJ132802,SDDATE132802,PY_NO,PY_DATE,PY_AMT,CHEQUE_NO,CHEQUE_DATE,93 AS BANK_CODE, SECURITY_DEPOSIT AS BANK_SD_AMT,SECURITY_DEPOSIT AS REFUNDABLE_AMT FROM DINESHMILLS.D_SAL_INVOICE_TAX WHERE SECURITY_DEPOSIT > 0 AND CFORM_NO = '' AND JV93 !='0' ORDER BY TAX_PARTY_CODE,TAX_INVOICE_DATE,ORG_INVOICE_NO");
                if(rs.getRow()>0){
                    while(!rs.isAfterLast()){
                        Object[] rowData=new Object[30];
                        rowData[0]=rs.getString("TAX_PARTY_CODE");
                        rowData[1]=rs.getString("TAX_PARTY_NAME");
                        rowData[2]=rs.getString("TAX_INVOICE_NO");
                        rowData[3]=rs.getString("ORG_INVOICE_NO");
                        rowData[4]=EITLERPGLOBAL.formatDate(rs.getString("TAX_INVOICE_DATE"));
                        rowData[5]=rs.getString("TAX_INVOICE_AMT");
                        rowData[6]=rs.getString("SECURITY_DEPOSIT");
                        rowData[7]=rs.getString("CST_AMT");
                        rowData[8]=rs.getString("CFORM_NO");
                        rowData[9]=EITLERPGLOBAL.formatDate(rs.getString("CFORM_DATE"));
                        rowData[10]=rs.getString("CFORM_AMT");
                        rowData[11]=rs.getString("SJ132803");
                        rowData[12]=EITLERPGLOBAL.formatDate(rs.getString("SDDATE132803"));
                        rowData[13]=rs.getString("JV93");
                        rowData[14]=EITLERPGLOBAL.formatDate(rs.getString("JVDATE93"));
                        rowData[15]=rs.getString("BANK_CODE");
                        rowData[16]=rs.getString("BANK_SD_AMT");
                        rowData[17]=rs.getString("REFUNDABLE_AMT");
                        
                        DataModelDesc.addRow(rowData);
                        rs.next();
                    }
                    rs.close();
                }
        }
        catch(Exception e){e.printStackTrace();}
    }
    
    private void GenerateData3(){
        try{
            ResultSet rs=data.getResult("SELECT TAX_PARTY_CODE,TAX_PARTY_NAME,TAX_INVOICE_NO,ORG_INVOICE_NO,TAX_INVOICE_DATE,(TOTAL_INV_AMT - SECURITY_DEPOSIT) AS TAX_INVOICE_AMT,SECURITY_DEPOSIT,CST_AMT,CFORM_NO,CFORM_DATE,CFORM_AMT,SJ132803,SDDATE132803,JV93,JVDATE93,SJ132802,SDDATE132802,PY_NO,PY_DATE,PY_AMT,CHEQUE_NO,CHEQUE_DATE,93 AS BANK_CODE, SECURITY_DEPOSIT AS BANK_SD_AMT,SECURITY_DEPOSIT AS REFUNDABLE_AMT FROM DINESHMILLS.D_SAL_INVOICE_TAX WHERE SECURITY_DEPOSIT > 0 AND CFORM_NO = '' AND JV93 ='0'");
                if(rs.getRow()>0){
                    while(!rs.isAfterLast()){
                        Object[] rowData=new Object[30];
                        rowData[0]=rs.getString("TAX_PARTY_CODE");
                        rowData[1]=rs.getString("TAX_PARTY_NAME");
                        rowData[2]=rs.getString("TAX_INVOICE_NO");
                        rowData[3]=rs.getString("ORG_INVOICE_NO");
                        rowData[4]=EITLERPGLOBAL.formatDate(rs.getString("TAX_INVOICE_DATE"));
                        rowData[5]=rs.getString("TAX_INVOICE_AMT");
                        rowData[6]=rs.getString("SECURITY_DEPOSIT");
                        rowData[7]=rs.getString("CST_AMT");
                        rowData[8]=rs.getString("SJ132803");
                        rowData[9]=EITLERPGLOBAL.formatDate(rs.getString("SDDATE132803"));
                        rowData[10]=rs.getString("JV93");
                        rowData[11]=EITLERPGLOBAL.formatDate(rs.getString("JVDATE93"));
                        
                        DataModelDesc.addRow(rowData);
                        rs.next();
                    }
                    rs.close();
                }
        }
        catch(Exception e){e.printStackTrace();}
    }
    
    private void GenerateData4(){
        try{
            ResultSet rs=data.getResult("SELECT TAX_PARTY_CODE,TAX_PARTY_NAME,TAX_INVOICE_NO,ORG_INVOICE_NO,TAX_INVOICE_DATE,(TOTAL_INV_AMT - SECURITY_DEPOSIT) AS TAX_INVOICE_AMT,SECURITY_DEPOSIT,CST_AMT,CFORM_NO,CFORM_DATE,CFORM_AMT,SJ132803,SDDATE132803,JV93,JVDATE93,SJ132802,SDDATE132802,PY_NO,PY_DATE,PY_AMT,CHEQUE_NO,CHEQUE_DATE,93 AS BANK_CODE, SECURITY_DEPOSIT AS BANK_SD_AMT,SECURITY_DEPOSIT AS REFUNDABLE_AMT FROM DINESHMILLS.D_SAL_INVOICE_TAX WHERE SECURITY_DEPOSIT > 0 AND CFORM_NO != '' AND JV93 !='0' AND PY_NO !=''");
                if(rs.getRow()>0){
                    while(!rs.isAfterLast()){
                        Object[] rowData=new Object[30];
                        rowData[0]=rs.getString("TAX_PARTY_CODE");
                        rowData[1]=rs.getString("TAX_PARTY_NAME");
                        rowData[2]=rs.getString("TAX_INVOICE_NO");
                        rowData[3]=rs.getString("ORG_INVOICE_NO");
                        rowData[4]=EITLERPGLOBAL.formatDate(rs.getString("TAX_INVOICE_DATE"));
                        rowData[5]=rs.getString("TAX_INVOICE_AMT");
                        rowData[6]=rs.getString("SECURITY_DEPOSIT");
                        rowData[7]=rs.getString("CST_AMT");
                        rowData[8]=rs.getString("CFORM_NO");
                        rowData[9]=EITLERPGLOBAL.formatDate(rs.getString("CFORM_DATE"));
                        rowData[10]=rs.getString("CFORM_AMT");
                        rowData[11]=rs.getString("SJ132803");
                        rowData[12]=EITLERPGLOBAL.formatDate(rs.getString("SDDATE132803"));
                        rowData[13]=rs.getString("JV93");
                        rowData[14]=EITLERPGLOBAL.formatDate(rs.getString("JVDATE93"));
                        rowData[15]=rs.getString("SJ132802");
                        rowData[16]=EITLERPGLOBAL.formatDate(rs.getString("SDDATE132802"));
                        rowData[17]=rs.getString("PY_NO");
                        rowData[18]=EITLERPGLOBAL.formatDate(rs.getString("PY_DATE"));
                        rowData[19]=rs.getString("PY_AMT");
                        rowData[20]=rs.getString("CHEQUE_NO");
                        rowData[21]=EITLERPGLOBAL.formatDate(rs.getString("CHEQUE_DATE"));
                        rowData[22]=rs.getString("BANK_CODE");
                        rowData[23]=rs.getString("BANK_SD_AMT");
                        rowData[24]=rs.getString("REFUNDABLE_AMT");
                        
                        DataModelDesc.addRow(rowData);
                        rs.next();
                    }
                    rs.close();
                }
        }
        catch(Exception e){e.printStackTrace();}
    }
    
    private void PrintReport() {
        Connection Conn = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            Conn = data.getConn();
            st = Conn.createStatement();
            HashMap parameterMap = new HashMap();
            
            ReportRegister rpt = new ReportRegister(parameterMap, Conn);
            
            String str = cmbReportCombo.getSelectedItem().toString().substring(0,2);
            String sql = "";
            
            if (str.matches("Se")){
                JOptionPane.showMessageDialog(null,"Select Report from Combo.");
                return;
            }
            if (str.matches("01")){
                sql = "SELECT TAX_PARTY_CODE,TAX_PARTY_NAME,TAX_INVOICE_NO,ORG_INVOICE_NO,TAX_INVOICE_DATE,(TOTAL_INV_AMT - SECURITY_DEPOSIT) AS TAX_INVOICE_AMT,SECURITY_DEPOSIT,CST_AMT,CFORM_NO,CFORM_DATE,CFORM_AMT,SJ132803,SDDATE132803,JV93,JVDATE93,SJ132802,SDDATE132802,PY_NO,PY_DATE,PY_AMT,CHEQUE_NO,CHEQUE_DATE,93 AS BANK_CODE, SECURITY_DEPOSIT AS BANK_SD_AMT,SECURITY_DEPOSIT AS REFUNDABLE_AMT FROM DINESHMILLS.D_SAL_INVOICE_TAX WHERE SECURITY_DEPOSIT > 0 AND CFORM_NO != '' AND JV93 !='0'  AND PY_NO =''";
                rpt.setReportName("/EITLERP/Production/FeltCForm/Refundable.jrxml", 1, sql); //productlist is the name of my jasper file.
            }
            if (str.matches("02")){
                sql = "SELECT TAX_PARTY_CODE,TAX_PARTY_NAME,TAX_INVOICE_NO,ORG_INVOICE_NO,TAX_INVOICE_DATE,(TOTAL_INV_AMT - SECURITY_DEPOSIT) AS TAX_INVOICE_AMT,SECURITY_DEPOSIT,CST_AMT,CFORM_NO,CFORM_DATE,CFORM_AMT,SJ132803,SDDATE132803,JV93,JVDATE93,SJ132802,SDDATE132802,PY_NO,PY_DATE,PY_AMT,CHEQUE_NO,CHEQUE_DATE,93 AS BANK_CODE, SECURITY_DEPOSIT AS BANK_SD_AMT,SECURITY_DEPOSIT AS REFUNDABLE_AMT FROM DINESHMILLS.D_SAL_INVOICE_TAX WHERE SECURITY_DEPOSIT > 0 AND CFORM_NO = '' AND JV93 !='0' ORDER BY TAX_PARTY_CODE,TAX_INVOICE_DATE,ORG_INVOICE_NO";
                rpt.setReportName("/EITLERP/Production/FeltCForm/SdRcvdCnNot.jrxml", 1, sql); //productlist is the name of my jasper file.
            }
            if (str.matches("03")){
                sql = "SELECT TAX_PARTY_CODE,TAX_PARTY_NAME,TAX_INVOICE_NO,ORG_INVOICE_NO,TAX_INVOICE_DATE,(TOTAL_INV_AMT - SECURITY_DEPOSIT) AS TAX_INVOICE_AMT,SECURITY_DEPOSIT,CST_AMT,CFORM_NO,CFORM_DATE,CFORM_AMT,SJ132803,SDDATE132803,JV93,JVDATE93,SJ132802,SDDATE132802,PY_NO,PY_DATE,PY_AMT,CHEQUE_NO,CHEQUE_DATE,93 AS BANK_CODE, SECURITY_DEPOSIT AS BANK_SD_AMT,SECURITY_DEPOSIT AS REFUNDABLE_AMT FROM DINESHMILLS.D_SAL_INVOICE_TAX WHERE SECURITY_DEPOSIT > 0 AND CFORM_NO = '' AND JV93 ='0'";
                rpt.setReportName("/EITLERP/Production/FeltCForm/SdCnNot.jrxml", 1, sql); //productlist is the name of my jasper file.
            }
            if (str.matches("04")){
                sql = "SELECT TAX_PARTY_CODE,TAX_PARTY_NAME,TAX_INVOICE_NO,ORG_INVOICE_NO,TAX_INVOICE_DATE,(TOTAL_INV_AMT - SECURITY_DEPOSIT) AS TAX_INVOICE_AMT,SECURITY_DEPOSIT,CST_AMT,CFORM_NO,CFORM_DATE,CFORM_AMT,SJ132803,SDDATE132803,JV93,JVDATE93,SJ132802,SDDATE132802,PY_NO,PY_DATE,PY_AMT,CHEQUE_NO,CHEQUE_DATE,93 AS BANK_CODE, SECURITY_DEPOSIT AS BANK_SD_AMT,SECURITY_DEPOSIT AS REFUNDABLE_AMT FROM DINESHMILLS.D_SAL_INVOICE_TAX WHERE SECURITY_DEPOSIT > 0 AND CFORM_NO != '' AND JV93 !='0' AND PY_NO !=''";
                rpt.setReportName("/EITLERP/Production/FeltCForm/Refunded.jrxml", 1, sql); //productlist is the name of my jasper file.
            }
            rpt.callReport();
            
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                st.close();
                Conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
}
