/*
 * frmTemplate.java
 *
 * Created on April 7, 2004, 3:10 PM
 */

/**
 *
 * @author  nhpatel
 */


package EITLERP;

import javax.swing.*;
import java.awt.*;
import EITLERP.*;
import java.net.*;
import java.sql.*;
import java.text.*;
import java.util.*;



public class FrmBank extends javax.swing.JApplet {
    
    private int EditMode=0;
    private clsBank ObjBank;
    
    /** Creates new form frmTemplate */
    public FrmBank() {
        System.gc();
        setSize(600,400);
        initComponents();
        
        //Now show the Images
        cmdTop.setIcon(EITLERPGLOBAL.getImage("TOP"));
        cmdBack.setIcon(EITLERPGLOBAL.getImage("BACK"));
        cmdNext.setIcon(EITLERPGLOBAL.getImage("NEXT"));
        cmdLast.setIcon(EITLERPGLOBAL.getImage("LAST"));
        cmdNew.setIcon(EITLERPGLOBAL.getImage("NEW"));
        cmdEdit.setIcon(EITLERPGLOBAL.getImage("EDIT"));
        cmdDelete.setIcon(EITLERPGLOBAL.getImage("DELETE"));
        cmdSave.setIcon(EITLERPGLOBAL.getImage("SAVE"));
        cmdCancel.setIcon(EITLERPGLOBAL.getImage("UNDO"));
        cmdFilter.setIcon(EITLERPGLOBAL.getImage("FIND"));
        cmdPreview.setIcon(EITLERPGLOBAL.getImage("PREVIEW"));
        cmdPrint.setIcon(EITLERPGLOBAL.getImage("PRINT"));
        cmdExit.setIcon(EITLERPGLOBAL.getImage("EXIT"));
        
        ObjBank=new clsBank();
        
        if(ObjBank.LoadData()) {
            ShowMessage("Please wait for a while Loading Data ......");
            SetFields(false);
            ObjBank.MoveFirst();
            DisplayData();
            Generate_List();
            SetMenuForRights();
            ShowMessage("Ready Data Loaded ........");
        }
        else {
            JOptionPane.showMessageDialog(null,"Error loading Department data. Error is "+ObjBank.LastError);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ToolBar = new javax.swing.JToolBar();
        cmdTop = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        cmdNext = new javax.swing.JButton();
        cmdLast = new javax.swing.JButton();
        cmdNew = new javax.swing.JButton();
        cmdEdit = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        cmdFilter = new javax.swing.JButton();
        cmdPreview = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ListDept = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        txtBankID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBankName = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListBank = new javax.swing.JList();
        ListDept2 = new javax.swing.JList();

        getContentPane().setLayout(null);

        ToolBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ToolBar.setRollover(true);
        cmdTop.setToolTipText("First Record");
        cmdTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTopActionPerformed(evt);
            }
        });

        ToolBar.add(cmdTop);

        cmdBack.setToolTipText("Previous Record");
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });

        ToolBar.add(cmdBack);

        cmdNext.setToolTipText("Next Record");
        cmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNext);

        cmdLast.setToolTipText("Last Record");
        cmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLastActionPerformed(evt);
            }
        });

        ToolBar.add(cmdLast);

        cmdNew.setToolTipText("New Record");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        ToolBar.add(cmdNew);

        cmdEdit.setToolTipText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        ToolBar.add(cmdEdit);

        cmdDelete.setToolTipText("Delete");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        ToolBar.add(cmdDelete);

        cmdSave.setToolTipText("Save");
        cmdSave.setEnabled(false);
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        ToolBar.add(cmdSave);

        cmdCancel.setToolTipText("Cancel");
        cmdCancel.setEnabled(false);
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        ToolBar.add(cmdCancel);

        cmdFilter.setToolTipText("Find");
        cmdFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFilterActionPerformed(evt);
            }
        });

        ToolBar.add(cmdFilter);

        cmdPreview.setToolTipText("Preview");
        ToolBar.add(cmdPreview);

        cmdPrint.setToolTipText("Print");
        ToolBar.add(cmdPrint);

        cmdExit.setToolTipText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });

        ToolBar.add(cmdExit);

        getContentPane().add(ToolBar);
        ToolBar.setBounds(0, 0, 800, 40);

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Bank Master");
        jLabel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 40, 660, 25);

        ListDept.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListDept.setToolTipText("Select Warehouse Name from list");
        getContentPane().add(ListDept);
        ListDept.setBounds(0, 0, 0, 0);

        jLabel3.setText("Bank ID");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(210, 140, 90, 15);

        txtBankID.setEnabled(false);
        txtBankID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBankIDFocusGained(evt);
            }
        });

        getContentPane().add(txtBankID);
        txtBankID.setBounds(290, 140, 70, 19);

        jLabel4.setText("Bank Name");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(210, 170, 120, 20);

        txtBankName.setEnabled(false);
        txtBankName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBankNameFocusGained(evt);
            }
        });

        getContentPane().add(txtBankName);
        txtBankName.setBounds(290, 170, 360, 19);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblStatus.setForeground(new java.awt.Color(51, 51, 255));
        lblStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lblStatus);
        lblStatus.setBounds(0, 350, 660, 22);

        ListBank.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListBank.setToolTipText("Select Warehouse Name from list");
        ListBank.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ListBankFocusGained(evt);
            }
        });
        ListBank.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListBankMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(ListBank);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 70, 190, 270);

        ListDept2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListDept2.setToolTipText("Select Warehouse Name from list");
        getContentPane().add(ListDept2);
        ListDept2.setBounds(0, 0, 0, 0);

    }//GEN-END:initComponents

    private void ListBankMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListBankMouseClicked
        // TODO add your handling code here:
        EITLTreeModel aData=(EITLTreeModel)ListBank.getModel().getElementAt(ListBank.getSelectedIndex());
        String test = aData.Key;
        ObjBank.Find(aData.Key);
        DisplayData();
    }//GEN-LAST:event_ListBankMouseClicked
    
    private void txtBankNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBankNameFocusGained
        // TODO add your handling code here:
        ShowMessage("Enter Bank Name .......");
    }//GEN-LAST:event_txtBankNameFocusGained
    
    private void txtBankIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBankIDFocusGained
        // TODO add your handling code here:
        ShowMessage("Bank ID system generated .......");
    }//GEN-LAST:event_txtBankIDFocusGained
    
    private void ListBankFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ListBankFocusGained
        // TODO add your handling code here:
        ShowMessage("Select Bank Name from given list ........");
    }//GEN-LAST:event_ListBankFocusGained
    
    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
        // TODO add your handling code here:
        ((JFrame)getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_cmdExitActionPerformed
    
    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        Cancel();
    }//GEN-LAST:event_cmdCancelActionPerformed
    
    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_cmdSaveActionPerformed
    
    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
        // TODO add your handling code here:
        Delete();
    }//GEN-LAST:event_cmdDeleteActionPerformed
    
    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
        // TODO add your handling code here:
        Edit();
    }//GEN-LAST:event_cmdEditActionPerformed
    
    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        // TODO add your handling code here:
        Add();
    }//GEN-LAST:event_cmdNewActionPerformed
    
    private void cmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLastActionPerformed
        // TODO add your handling code here:
        MoveLast();
    }//GEN-LAST:event_cmdLastActionPerformed
    
    private void cmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_cmdNextActionPerformed
    
    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_cmdBackActionPerformed
    
    private void cmdTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTopActionPerformed
        // TODO add your handling code here:
        MoveFirst();
    }//GEN-LAST:event_cmdTopActionPerformed
    
    private void cmdFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdFilterActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ListBank;
    private javax.swing.JList ListDept;
    private javax.swing.JList ListDept2;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdEdit;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdFilter;
    private javax.swing.JButton cmdLast;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdPreview;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdTop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtBankID;
    private javax.swing.JTextField txtBankName;
    // End of variables declaration//GEN-END:variables
    
    private void EnableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(true);
        cmdBack.setEnabled(true);
        cmdNext.setEnabled(true);
        cmdLast.setEnabled(true);
        cmdNew.setEnabled(true);
        cmdEdit.setEnabled(true);
        cmdDelete.setEnabled(true);
        cmdSave.setEnabled(false);
        cmdCancel.setEnabled(false);
        cmdFilter.setEnabled(true);
        cmdPreview.setEnabled(true);
        cmdPrint.setEnabled(true);
        cmdExit.setEnabled(true);
    }
    
    private void DisableToolbar() {
        //Puts toolbar in enable mode
        cmdTop.setEnabled(false);
        cmdBack.setEnabled(false);
        cmdNext.setEnabled(false);
        cmdLast.setEnabled(false);
        cmdNew.setEnabled(false);
        cmdEdit.setEnabled(false);
        cmdDelete.setEnabled(false);
        cmdSave.setEnabled(true);
        cmdCancel.setEnabled(true);
        cmdFilter.setEnabled(false);
        cmdPreview.setEnabled(false);
        cmdPrint.setEnabled(false);
        cmdExit.setEnabled(false);
    }
    
    //Didplay data on the Screen
    private void DisplayData() {
        txtBankID.setText(Double.toString(ObjBank.getAttribute("BANK_ID").getVal()));
        txtBankName.setText((String)ObjBank.getAttribute("BANK_NAME").getObj());
    }
    
    //Sets data to the Class Object
    private void SetData() {
        ObjBank.setAttribute("BANK_ID",txtBankID.getText());
        ObjBank.setAttribute("BANK_NAME",txtBankName.getText());
        if(EditMode==EITLERPGLOBAL.ADD) {
            ObjBank.setAttribute("CREATED_BY",EITLERPGLOBAL.gUserID);
            ObjBank.setAttribute("CREATED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
        else {
            ObjBank.setAttribute("MODIFIED_BY",EITLERPGLOBAL.gUserID);
            ObjBank.setAttribute("MODIFIED_DATE",EITLERPGLOBAL.getCurrentDateDB());
        }
    }
    
    private void ClearFields() {
        txtBankID.setText("");
        txtBankName.setText("");
    }
    
    private void SetFields(boolean pStat) {
        txtBankID.setEnabled(pStat);
        txtBankName.setEnabled(pStat);
    }
    
    private void Cancel() {
        DisplayData();
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        ShowMessage("Ready.....");
    }
    
    private void MoveFirst() {
        ObjBank.MoveFirst();
        DisplayData();
    }
    
    private void MovePrevious() {
        ObjBank.MovePrevious();
        DisplayData();
    }
    
    private void MoveNext() {
        ObjBank.MoveNext();
        DisplayData();
    }
    
    private void MoveLast() {
        ObjBank.MoveLast();
        DisplayData();
    }
    
    private void Add() {
        EditMode=EITLERPGLOBAL.ADD;
        DisableToolbar();
        SetFields(true);
        txtBankID.setEnabled(false);
        txtBankName.requestFocus();
        ClearFields();
    }
    
    private void Edit() {
        EditMode=EITLERPGLOBAL.EDIT;
        DisableToolbar();
        SetFields(true);
        txtBankID.setEnabled(false);
        txtBankName.requestFocus();
    }
    
    
    private void Delete() {
        if(ObjBank.Delete()) {
            MoveLast();
            DisplayData();
            Generate_List();
        }
        else {
            JOptionPane.showMessageDialog(null,"Error occured while deleting. Error is"+ObjBank.LastError);
        }
    }
    
    private void Save() {
        // --------- Form Level Validations ------------ //
        
        ShowMessage("Saving Bank ...........");
        if(txtBankName.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter Bank Name");
            return;
        }
        
        SetData();
        
        if(EditMode==EITLERPGLOBAL.ADD) {
            if(ObjBank.Insert()) {
                MoveLast();
                DisplayData();
            } else {
                JOptionPane.showMessageDialog(null,"Error occured while saving item. Error is"+ObjBank.LastError);
                return;
            }
        }
        
        if(EditMode==EITLERPGLOBAL.EDIT) {
            if(ObjBank.Update()) {
                //Nothing to do
            }
            else {
                JOptionPane.showMessageDialog(null,"Error occured while saving item. Error is"+ObjBank.LastError);
                return;
            }
        }
        
        EditMode=0;
        SetFields(false);
        EnableToolbar();
        Generate_List();
        ShowMessage("Ready....");
    }
    
    private void Generate_List() {
        HashMap List= new HashMap();
        String strCondition=" WHERE COMPANY_ID="+EITLERPGLOBAL.gCompanyID;
        
        EITLListModel aModel=new EITLListModel();
        ListBank.removeAll();
        ListBank.setModel(aModel);
        EITLTreeModel aData;
        
        List = clsBank.getList(strCondition);
        for(int i=1;i<=List.size();i++) {
            clsBank ObjBank=(clsBank) List.get(Integer.toString(i));
            int j = (int) ObjBank.getAttribute("BANK_ID").getVal();
            aData=new EITLTreeModel(Integer.toString(j),(String) ObjBank.getAttribute("BANK_NAME").getObj());
            aModel.addElement(aData);
        }
    }
    
    private void SetMenuForRights() {
        // --- Add Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,671)) {
            cmdNew.setEnabled(true);
        }
        else {
            cmdNew.setEnabled(false);
        }
        
        // --- Edit Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,672)) {
            cmdEdit.setEnabled(true);
        }
        else {
            cmdEdit.setEnabled(false);
        }
        
        // --- Delete Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,673)) {
            cmdDelete.setEnabled(true);
        }
        else {
            cmdDelete.setEnabled(false);
        }
        
        // --- Print Rights --
        if(clsUser.IsFunctionGranted(EITLERPGLOBAL.gCompanyID, EITLERPGLOBAL.gUserID, 0,674)) {
            cmdPreview.setEnabled(true);
            cmdPrint.setEnabled(true);
        }
        else {
            cmdPreview.setEnabled(false);
            cmdPrint.setEnabled(false);
        }
    }
    
    private void ShowMessage(String pMessage) {
        lblStatus.setText(pMessage);
    }
    
    
}
